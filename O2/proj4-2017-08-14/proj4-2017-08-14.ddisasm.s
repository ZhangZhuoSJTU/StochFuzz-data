#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 8
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4018a4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_446f8b]
            call fopen@PLT

            test RAX,RAX
            je .L_401928

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_40194f

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401932

            mov RSI,RBP
            mov RDI,R12
            call .L_401ad0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401922:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401928:

            mov EDI,1
            call exit@PLT
.L_401932:

            lea RSI,QWORD PTR [RIP+.L_446f9d]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_40194f:

            lea RSI,QWORD PTR [RIP+.L_446f8e]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_40196c:

            nop
            nop
            nop
            nop
.L_4019a0:

            ret 
.L_4019a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4019b0:

            push RBP
            mov EAX,OFFSET .L_65dcd0
            cmp RAX,OFFSET .L_65dcd0
            mov RBP,RSP
            je .L_4019d8

            mov EAX,0
            test RAX,RAX
            je .L_4019d8

            pop RBP
            mov EDI,OFFSET .L_65dcd0
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019d8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019e0:

            mov ESI,OFFSET .L_65dcd0
            push RBP
            sub RSI,OFFSET .L_65dcd0
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401a18

            mov EAX,0
            test RAX,RAX
            je .L_401a18

            pop RBP
            mov EDI,OFFSET .L_65dcd0
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401a18:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a50:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_4019e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a60:

            push RBX
.L_401a61:

            mov RAX,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RAX]
            call strdup@PLT

            mov ESI,47
            mov RDI,RAX
            mov RBX,RAX
            call strrchr@PLT

            test RAX,RAX
            je .L_401aa8

            lea RDI,QWORD PTR [RIP+.L_446f64]
            mov RSI,RBX
            mov EDX,1
            mov BYTE PTR [RAX],0
            call setenv@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
.L_401aa3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401aa8:

            lea RSI,QWORD PTR [RIP+.L_44cd35]
            lea RDI,QWORD PTR [RIP+.L_446f64]
            mov EDX,1
            call setenv@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_401acc:

            nop
            nop
            nop
            nop
.L_401ad0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            lea RDI,QWORD PTR [RSI+1]
            mov R12,RSI
            sub RSP,32
.L_401ae6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call malloc@PLT

            mov RDX,R12
            mov RBX,RAX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov ESI,10
            mov RDI,RBX
            mov BYTE PTR [RBX+R12*1],0
            call strchr@PLT

            test RAX,RAX
            je .L_401c30

            lea RBP,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],0
            mov ESI,10
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_401c30

            mov BYTE PTR [RAX],0
            mov RDI,RBX
            call .L_403670

            test RAX,RAX
            mov R14,RAX
            je .L_401c30

            mov RDI,RBP
            call .L_403670

            test RAX,RAX
            mov RBP,RAX
            je .L_401cf0

            mov RCX,QWORD PTR [RIP+.L_446fb0]
            lea RAX,QWORD PTR [R13+1]
            lea RDI,QWORD PTR [RIP+.L_446f6d]
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RCX
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_401c60

            mov RDX,RAX
            sub RDX,RBX
            add RDX,26
            cmp RDX,R12
            ja .L_401c60

            mov RAX,QWORD PTR [R13+11]
            mov R12,RSP
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [R13+19]
            lea R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
.L_401bde:

            sub RSP,8
.L_401be2:

            mov R9,R13
            mov R8,R12
            push 0
.L_401bea:

            mov EDX,1
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R14
            call .L_408000

            pop RAX
            pop RDX
.L_401bfe:

            mov RDI,RBX
            call free@PLT

            mov RDI,R14
            call .L_4024b0

            mov RDI,RBP
.L_401c11:

            call .L_4024b0

            call .L_404160

            mov RDI,RAX
            call .L_406520

            call .L_40b5c0

            jmp .L_401c38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401c30:

            mov RDI,RBX
            call free@PLT
.L_401c38:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_401d00

            add RSP,32
.L_401c52:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401c60:

            lea RDI,QWORD PTR [RIP+.L_446f78]
            mov ECX,10
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_401cc0

            mov RDX,RAX
            sub RDX,RBX
            add RDX,34
            cmp RDX,R12
            ja .L_401cc0

            mov RAX,QWORD PTR [R13+11]
            sub RSP,8
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13+19]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R13+27]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+24]
            push RAX
            lea R9,QWORD PTR [RSP+24]
            lea R8,QWORD PTR [RSP+16]
            jmp .L_401bea
          .byte 0x66
          .byte 0x90
.L_401cc0:

            lea R13,QWORD PTR [RSP+8]
            mov R12,RSP
            lea RSI,QWORD PTR [RIP+.L_446f83]
            mov RDI,RAX
            mov RDX,R12
            xor EAX,EAX
            mov RCX,R13
            call sscanf@PLT

            cmp EAX,2
            je .L_401bde

            jmp .L_401bfe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401cf0:

            mov RDI,RBX
            call free@PLT

            mov RDI,R14
            jmp .L_401c11
.L_401d00:

            call __stack_chk_fail@PLT
.L_401d05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d10:

            push R14
            push R13
            lea R14,QWORD PTR [RDI+16]
            push R12
            push RBP
            test RSI,RSI
            push RBX
            mov EAX,DWORD PTR [RDI+65560]
            cmove RSI,R14
            test EAX,EAX
            jne .L_401d49

            movsxd RBX,DWORD PTR [RDI+65556]
            mov RAX,RSI
            mov R13,RDI
            sub RAX,R14
            sub RBX,RAX
            cmp RBX,32767
            jbe .L_401d58
.L_401d49:

            pop RBX
            mov RAX,RSI
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401d58:

            mov RDX,RBX
            mov RDI,R14
            mov R12D,65536
            call memmove@PLT

            mov R8,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [R13]
            sub R12,RBX
            lea RSI,QWORD PTR [R14+RBX*1]
            mov DWORD PTR [R13+65556],EBX
            mov RCX,R12
            mov EDX,1
            call .L_4063f0

            cmp R12,RAX
            mov RBP,RAX
            jbe .L_401db0

            movsxd RDX,DWORD PTR [R13+65556]
            lea RAX,QWORD PTR [R13+RAX*1]
            mov DWORD PTR [R13+65560],1
            mov BYTE PTR [RDX+RAX*1+16],0
.L_401db0:

            movzx EAX,BYTE PTR [R13+16]
            xor EDX,EDX
            mov R12,R14
            mov RBX,R14
            test AL,AL
            je .L_401ea3
.L_401dc5:

            cmp AL,92
            jne .L_401e83

            movzx EDX,BYTE PTR [RBX+1]
            cmp DL,10
            je .L_401ddf

            cmp DL,13
            jne .L_401e83
.L_401ddf:

            call __ctype_b_loc@PLT

            add RBX,2
            mov RCX,QWORD PTR [RAX]
            jmp .L_401df4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401df0:

            add RBX,1
.L_401df4:

            movsx RDX,BYTE PTR [RBX]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_401df0

            nop
            nop
            nop
            nop
            nop
            nop
.L_401e08:

            cmp AL,35
            je .L_401e14

            jmp .L_401dc5
          .byte 0x66
          .byte 0x90
.L_401e10:

            cmp AL,10
            je .L_401e1f
.L_401e14:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_401e10
.L_401e1f:

            movsx RDX,AL
            test BYTE PTR [RCX+RDX*2+1],32
            je .L_401e42

            nop
            nop
            nop
            nop
            nop
            nop
.L_401e30:

            add RBX,1
            movsx RDX,BYTE PTR [RBX]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_401e30
.L_401e42:

            test AL,AL
            je .L_401e50

            movzx EAX,BYTE PTR [RBX]
            jmp .L_401e08
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401e50:

            mov RDI,QWORD PTR [R13]
            mov ESI,4294967294
            call .L_404200

            mov RDI,QWORD PTR [R13]
            lea RDX,QWORD PTR [RIP+.L_446fb8]
            mov ESI,1
            xor EAX,EAX
            call .L_404320

            xor ESI,ESI
            pop RBX
.L_401e78:

            mov RAX,RSI
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_401e83:

            add R12,1
            mov BYTE PTR [R12-1],AL
            movzx EAX,BYTE PTR [RBX+1]
            lea RDX,QWORD PTR [RBX+1]
            test AL,AL
            je .L_401ea0

            mov RBX,RDX
            jmp .L_401dc5
.L_401ea0:

            sub EDX,R12D
.L_401ea3:

            mov BYTE PTR [R12],0
            sub EBP,EDX
            mov RSI,R14
            add DWORD PTR [R13+65556],EBP
            jmp .L_401d49
.L_401eb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401ec0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,65568
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RDI
            mov EDI,1
            mov R13,R9
            sub RSP,65624
.L_401ee7:

            mov QWORD PTR [RSP+32],RCX
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+48],R9
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+65608],RAX
            xor EAX,EAX
            call calloc@PLT

            xor ESI,ESI
            mov QWORD PTR [RAX+8],RBP
            mov QWORD PTR [RAX],R12
            mov RDI,RAX
            mov RBX,RAX
            call .L_401d10

            test R13,R13
            mov R14,RAX
            je .L_401f32

            mov DWORD PTR [R13],0
.L_401f32:

            mov RDI,QWORD PTR [RSP+32]
            call strlen@PLT

            test R14,R14
            mov DWORD PTR [RSP+44],EAX
            mov BYTE PTR [RSP+64],116
            je .L_40228a

            lea RAX,QWORD PTR [RSP+64]
            movzx EDX,BYTE PTR [R14]
            xor EBP,EBP
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+65]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_401f70:

            test DL,DL
            je .L_402013

            mov RSI,R14
            mov RDI,RBX
            call .L_401d10

            mov R13,RAX
            call __ctype_b_loc@PLT

            mov R12,RAX
            mov RDX,QWORD PTR [RAX]
            jmp .L_401f9c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401f98:

            add R13,1
.L_401f9c:

            movsx RAX,BYTE PTR [R13]
            test BYTE PTR [RDX+RAX*2+1],32
            jne .L_401f98

            mov RSI,R13
            mov RDI,RBX
            call .L_401d10

            test RAX,RAX
            mov R14,RAX
            je .L_40228a

            movsx RDX,BYTE PTR [RAX]
            cmp DL,35
            je .L_402064

            cmp DL,60
            je .L_4020b0

            test EBP,EBP
            jne .L_402110

            test DL,DL
            je .L_402013

            mov RCX,QWORD PTR [R12]
            movsx RAX,DL
            test BYTE PTR [RCX+RAX*2+1],32
            je .L_402007

            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401ff8:

            movsx RAX,DL
            test BYTE PTR [RCX+RAX*2+1],32
            jne .L_401f70
.L_402007:

            add R14,1
            movzx EDX,BYTE PTR [R14]
            test DL,DL
            jne .L_401ff8
.L_402013:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],25
            je .L_402291
.L_402021:

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RSP+24]
.L_40202e:

            mov RDI,QWORD PTR [RSP+65608]
            xor RDI,QWORD PTR FS:[40]
            jne .L_402327

            add RSP,65624
.L_40204c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402060:

            cmp AL,10
            je .L_402070
.L_402064:

            add R14,1
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            jne .L_402060
.L_402070:

            mov RSI,R14
            mov RDI,RBX
            call .L_401d10

            test RAX,RAX
            mov R14,RAX
            je .L_40228a

            movzx EDX,BYTE PTR [RAX]
            cmp DL,10
            jne .L_402097

            movzx EDX,BYTE PTR [RAX+1]
            add R14,1
.L_402097:

            cmp DL,13
            jne .L_401f70

            movzx EDX,BYTE PTR [R14+1]
            add R14,1
            jmp .L_401f70
          .byte 0x66
          .byte 0x90
.L_4020b0:

            test EBP,EBP
            jne .L_402013

            movsxd R12,DWORD PTR [RSP+44]
            lea R13,QWORD PTR [RAX+1]
            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R13
            mov RDX,R12
            call strncmp@PLT

            test EAX,EAX
            jne .L_402250

            cmp BYTE PTR [R14+R12*1+1],62
            jne .L_402250

            cmp QWORD PTR [RSP+48],0
            lea R14,QWORD PTR [R13+R12*1+1]
            je .L_4020fd

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX],1
.L_4020fd:

            movzx EDX,BYTE PTR [R14]
            mov EBP,1
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402110:

            cmp DL,43
            jne .L_40211e

            movsx RDX,BYTE PTR [RAX+1]
            add R14,1
.L_40211e:

            test DL,DL
            je .L_402310

            mov RSI,QWORD PTR [R12]
            mov R13,R14
            mov ECX,1
            test BYTE PTR [RSI+RDX*2+1],32
            je .L_402147

            jmp .L_40231d
          .byte 0x66
          .byte 0x90
.L_402140:

            test BYTE PTR [RSI+RAX*2+1],32
            jne .L_40215d
.L_402147:

            add R13,1
            movsx RAX,BYTE PTR [R13]
            movsxd RDX,ECX
            add ECX,1
            mov R8D,ECX
            test AL,AL
            jne .L_402140
.L_40215d:

            mov RDI,QWORD PTR [RSP+8]
            mov ECX,65536
            mov RSI,R14
            mov DWORD PTR [RSP+40],R8D
            call __strncpy_chk@PLT

            movsxd R8,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_446fca]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+R8*1+64],0
            call .L_403e60

            test RAX,RAX
            je .L_4021b2

            lea RDI,QWORD PTR [RIP+.L_44922b]
            mov RSI,RAX
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4021d8
.L_4021b2:

            mov RDX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            call .L_403e60

            test EAX,EAX
            je .L_4021d8

            movzx EDX,BYTE PTR [R13]
.L_4021cd:

            mov R14,R13
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4021d8:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_446fd0]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_402228

            mov R14,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_446fd7]
            mov RDI,R14
            call .L_403e60

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_446fde]
            mov RDI,R14
            call .L_403e60

            test EAX,EAX
            je .L_40229c

            nop
            nop
            nop
.L_402228:

            mov RDI,QWORD PTR [RSP+8]
            mov R14,R13
            call .L_403e10

            mov RDI,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RDI],RAX
            movzx EDX,BYTE PTR [R13]
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402250:

            movzx EDX,BYTE PTR [R14+1]
            cmp DL,10
            je .L_4021cd

            test DL,DL
            mov R14,R13
            jne .L_402279

            jmp .L_4021cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402270:

            cmp DL,10
            je .L_401f70
.L_402279:

            add R14,1
            movzx EDX,BYTE PTR [R14]
            test DL,DL
            jne .L_402270

            jmp .L_401f70
.L_40228a:

            xor EAX,EAX
            jmp .L_40202e
.L_402291:

            mov DWORD PTR [RAX],0
            jmp .L_402021
.L_40229c:

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_44902b]
            call .L_403e60

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_446fe5]
            call .L_403e60

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_446fe8]
            call .L_403e60

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_446fec]
            call .L_403e60

            jmp .L_402228
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402310:

            mov R8D,EBP
            mov R13,R14
            xor EDX,EDX
            jmp .L_40215d
.L_40231d:

            mov R8D,EBP
            xor EDX,EDX
            jmp .L_40215d
.L_402327:

            call __stack_chk_fail@PLT
.L_40232c:

            nop
            nop
            nop
            nop
.L_402330:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EDX,1075
            mov RBX,RCX
            mov R13,R8
            sub RSP,1112
.L_402352:

            lea RBP,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov RSI,RCX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1096],RAX
            xor EAX,EAX
            mov RDI,RBP
            call strncpy@PLT

            mov RDI,RBX
            mov BYTE PTR [RSP+1091],0
            call .L_40bb40

            test RAX,RAX
            mov R15,RAX
            je .L_4023e0

            mov QWORD PTR [R12],RAX
            jmp .L_4023a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4023a0:

            mov R15,RAX
.L_4023a3:

            mov RAX,QWORD PTR [R15]
            test RAX,RAX
            jne .L_4023a0

            mov DWORD PTR [R13],1
.L_4023b3:

            mov RCX,QWORD PTR [RSP+1096]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_402492

            add RSP,1112
.L_4023d4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4023e0:

            mov ESI,58
            mov RDI,RBP
            call strrchr@PLT

            test RAX,RAX
            je .L_402480

            lea RCX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [RIP+.L_44717f]
            mov RSI,RBP
            mov BYTE PTR [RAX],0
            mov RDI,R14
            mov QWORD PTR [RSP+8],RCX
            call .L_403dc0

            test RAX,RAX
            mov RBP,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_4023b3

            mov RSI,QWORD PTR [RSP]
            mov R9,R13
            mov R8,R12
            mov RDX,RAX
            mov RDI,R14
            call .L_401ec0

            mov RSI,RBP
            mov RDI,R14
            mov R15,RAX
            call .L_406440

            call __errno_location@PLT

            cmp DWORD PTR [RAX],25
            je .L_402478
.L_40244e:

            test R15,R15
            je .L_4023b3

            cmp R12,R15
            je .L_4023b3

            mov RSI,QWORD PTR [R12]
            mov RDI,RBX
            call .L_40bbd0

            jmp .L_4023b3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402478:

            mov DWORD PTR [RAX],0
            jmp .L_40244e
.L_402480:

            mov ESI,4294967293
            mov RDI,R14
            call .L_404200

            jmp .L_4023b3
.L_402492:

            call __stack_chk_fail@PLT
.L_402497:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024a0:

            jmp .L_402330
.L_4024a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024b0:

            test RDI,RDI
            je .L_402530

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4024be:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_4024e0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024d0:

            mov RBP,QWORD PTR [RDI]
            call .L_403730

            test RBP,RBP
            mov RDI,RBP
            jne .L_4024d0
.L_4024e0:

            mov RDI,QWORD PTR [RBX+464]
            test RDI,RDI
            je .L_4024f1

            call .L_403730
.L_4024f1:

            mov RDI,QWORD PTR [RBX+480]
            test RDI,RDI
            je .L_402502

            call .L_403730
.L_402502:

            mov RDI,QWORD PTR [RBX+520]
            test RDI,RDI
            je .L_402513

            call .L_403730
.L_402513:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_402521

            call .L_403730
.L_402521:

            mov RAX,QWORD PTR [RBX+112]
            add RSP,8
.L_402529:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_402530:

            ret 
.L_402532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402540:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_402551:

            mov DWORD PTR [RDI],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RSP+32],0
            mov DWORD PTR [RSP+20],0
            jle .L_4026f0

            mov RDI,QWORD PTR [RDX]
            mov EBP,ESI
            mov R12,RDX
            call .L_403e10

            cmp EBP,1
            mov R13,RAX
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_4028e1

            lea EAX,DWORD PTR [RBP-2]
            lea R14,QWORD PTR [R12+8]
            lea RBP,QWORD PTR [RIP+.L_446fef]
            lea R15,QWORD PTR [RIP+.L_446ff5]
            lea R12,QWORD PTR [R12+RAX*8+16]
            lea RAX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4025f7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4025d8:

            mov RAX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
.L_4025e5:

            add R14,8
            cmp R14,R12
            je .L_4026a8

            mov R13,QWORD PTR [RSP+40]
.L_4025f7:

            mov RDI,QWORD PTR [R14]
            call .L_403e10

            mov RSI,QWORD PTR [RSP+40]
            mov QWORD PTR [R13],RAX
            mov RDX,RBP
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_4025d8

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,R15
            mov RDI,RBX
            mov DWORD PTR [RSP+20],0
            call .L_403e60

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov RDX,QWORD PTR [RAX]
            call .L_402330

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_402840

            mov ESI,DWORD PTR [RSP+20]
            test ESI,ESI
            jne .L_4025e5
.L_402661:

            mov RDI,RBX
            mov ESI,4294967294
            call .L_404200

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            jne .L_4026d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402680:

            xor EAX,EAX
.L_402682:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4030d2

            add RSP,72
.L_40269a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4026a8:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_446fef]
            mov RDI,RBX
            call .L_403e60
.L_4026bc:

            mov EBP,DWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP+32]
            test EBP,EBP
            je .L_402708
.L_4026c7:

            test RDI,RDI
            je .L_402680

            nop
            nop
            nop
            nop
.L_4026d0:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+40],RAX
            call .L_403730

            mov RDI,QWORD PTR [RSP+40]
            test RDI,RDI
            mov QWORD PTR [RSP+32],RDI
            jne .L_4026d0

            jmp .L_402680
          .byte 0x66
          .byte 0x90
.L_4026f0:

            mov ESI,4294967295
            call .L_404200

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402708:

            lea RDX,QWORD PTR [RIP+.L_446fca]
            mov RSI,RDI
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            mov R13,RAX
            je .L_402950

            mov RSI,QWORD PTR [RIP+.L_65bbe0]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_40284a

            lea R12,QWORD PTR [RIP+.L_65bbf8]
            jmp .L_402761
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402748:

            mov RSI,QWORD PTR [R12]
            add EBP,1
            add R12,24
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_40284a
.L_402761:

            mov RDI,R13
            call strcmp@PLT

            test EAX,EAX
            jne .L_402748

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4470a5]
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            jne .L_40281f

            lea RDX,QWORD PTR [RIP+.L_44717f]
            lea RSI,QWORD PTR [RIP+.L_446ffb]
            mov RDI,RBX
            mov R14,QWORD PTR [RSP+40]
            call .L_403dc0

            test RAX,RAX
            mov R12,RAX
            je .L_402803

            lea R15,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RIP+.L_447008]
            mov R8,R14
            xor R9D,R9D
            mov RDX,RAX
            mov RDI,RBX
            mov RSI,R15
            call .L_401ec0

            xor ECX,ECX
            mov R14,RAX
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            call .L_406410

            mov R8,R14
            mov RSI,R15
            mov RDI,RBX
            xor R9D,R9D
            mov RCX,R13
            mov RDX,R12
            call .L_401ec0

            mov RSI,R12
            mov RDI,RBX
            mov R14,RAX
            call .L_406440
.L_402803:

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_402814

            mov DWORD PTR [RAX],0
.L_402814:

            mov DWORD PTR [RBX],0
            mov QWORD PTR [RSP+40],R14
.L_40281f:

            movsxd RBP,EBP
            lea RAX,QWORD PTR [RIP+.L_65bbe0]
            xor EDI,EDI
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov R15,QWORD PTR [RAX+RDX*8+8]
            call R15

            test RAX,RAX
            mov R14,RAX
            jne .L_402861
.L_402840:

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_40284a:

            mov RDI,RBX
            mov ESI,4294967291
            call .L_404200

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_402861:

            mov RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX],RBX
            mov RDX,RAX
            mov QWORD PTR [RAX+312],0
            mov DWORD PTR [RAX+512],0
            mov RDI,RBX
            mov QWORD PTR [RAX+504],0
            mov DWORD PTR [RAX+516],7695973
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+464],0
            mov DWORD PTR [RAX+472],0
            mov QWORD PTR [RAX+480],0
            mov DWORD PTR [RAX+488],0
            call .L_407090

            test EAX,EAX
            je .L_402967
.L_4028d4:

            mov RDI,R14
            call .L_4024b0

            jmp .L_402680
.L_4028e1:

            lea RDX,QWORD PTR [RIP+.L_446fef]
            mov RSI,RAX
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_4026bc

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_446ff5]
            mov RDI,RBX
            mov DWORD PTR [RSP+20],0
            call .L_403e60

            mov RDX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RSP+20]
            mov RCX,RAX
            mov RDI,RBX
            call .L_402330

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_402840

            mov ECX,DWORD PTR [RSP+20]
            test ECX,ECX
            jne .L_4026bc

            jmp .L_402661
.L_402950:

            mov RDI,RBX
            mov ESI,4294967292
            call .L_404200

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_402967:

            mov RSI,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [R14+176]
            lea RDX,QWORD PTR [R14+128]
            mov RDI,RBX
            call .L_443000

            test EAX,EAX
            mov EBP,EAX
            je .L_4029a3

            lea RDX,QWORD PTR [RIP+.L_4470b0]
            mov ESI,3
            mov RDI,RBX
            xor EAX,EAX
            call .L_404320

            jmp .L_4028d4
.L_4029a3:

            movsd XMM0,QWORD PTR [R14+128]
            pxor XMM6,XMM6
            movsd QWORD PTR [R14+296],XMM0
            movsd XMM0,QWORD PTR [R14+176]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            movsd QWORD PTR [R14+288],XMM0
            ja .L_4034b6
.L_4029d9:

            movsd QWORD PTR [R14+168],XMM1
            movapd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [R14+160],XMM0
            movsd QWORD PTR [RSP],XMM0
            call tan@PLT

            movsd QWORD PTR [R14+184],XMM0
            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [R14+192],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            movapd XMM3,XMM0
            movapd XMM1,XMM0
            pxor XMM6,XMM6
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM0,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
            ja .L_403497
.L_402a5d:

            divsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [R14+200],XMM1
            mulsd XMM1,XMM1
            movsd QWORD PTR [R14+208],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            pxor XMM4,XMM4
            subsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM1,XMM4
            movsd QWORD PTR [R14+232],XMM1
            jp .L_402ab4

            movsd XMM3,QWORD PTR [RIP+.L_4470e0]
            je .L_402ac0
.L_402ab4:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            divsd XMM3,XMM1
.L_402ac0:

            movsd QWORD PTR [R14+256],XMM3
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            pxor XMM5,XMM5
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM5
            movsd QWORD PTR [R14+240],XMM0
            jp .L_402afa

            je .L_402e39
.L_402afa:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
.L_402b0a:

            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [R14+264],XMM0
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM2
            call tan@PLT

            mulsd XMM0,XMM0
            pxor XMM6,XMM6
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM6
            movsd QWORD PTR [R14+248],XMM0
            jp .L_402b4b

            je .L_402e2c
.L_402b4b:

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
.L_402b5b:

            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [R14+272],XMM0
            subsd XMM7,XMM1
            movsd XMM0,QWORD PTR [R14+128]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM7
            pxor XMM7,XMM7
            mulsd XMM1,XMM0
            divsd XMM4,XMM1
            movsd QWORD PTR [R14+136],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+152],XMM4
            movsd QWORD PTR [R14+144],XMM1
            movsd XMM1,QWORD PTR [R14+176]
            subsd XMM2,XMM1
            ucomisd XMM2,XMM7
            movsd QWORD PTR [R14+216],XMM2
            jp .L_402be2

            je .L_402e58
.L_402be2:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            cmp DWORD PTR [R14+400],1
            divsd XMM5,XMM2
            movsd QWORD PTR [R14+224],XMM5
            je .L_402e8b
.L_402c05:

            pxor XMM5,XMM5
            mov RSI,QWORD PTR [RSP+32]
            ucomisd XMM1,XMM5
            jp .L_402e6a

            jne .L_402e6a
.L_402c1e:

            lea RDX,QWORD PTR [RIP+.L_447016]
            mov RDI,RBX
            mov DWORD PTR [R14+308],EBP
            call .L_403e60

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44701c]
            mov DWORD PTR [R14+304],EAX
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            mov DWORD PTR [R14+476],EAX
            je .L_402c6e

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447028]
            mov RDI,RBX
            call .L_403e60
.L_402c6e:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447034]
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            mov DWORD PTR [R14+512],EAX
            je .L_402ccd

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44703e]
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RIP+.L_447120]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [R14+504],XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM0
            jbe .L_4030c0
.L_402ccd:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447048]
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            je .L_402d64

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447048]
            mov RDI,RBX
            call .L_403e60

            mov RDI,RAX
            mov RBP,RAX
            call strlen@PLT

            cmp RAX,3
            jne .L_402e46

            movsx ESI,BYTE PTR [RBP]
            lea RDI,QWORD PTR [RIP+.L_44704e]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            movsx ESI,BYTE PTR [RBP+1]
            lea RDI,QWORD PTR [RIP+.L_44704e]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            movsx ESI,BYTE PTR [RBP+2]
            lea RDI,QWORD PTR [RIP+.L_44704e]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [R14+516],EAX
.L_402d64:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447055]
            mov RDI,RBX
            call .L_403e60

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44705c]
            mov RDI,RBX
            mov QWORD PTR [R14+328],RAX
            call .L_403e60

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447063]
            mov RDI,RBX
            mov QWORD PTR [R14+336],RAX
            call .L_403e60

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447068]
            mov RDI,RBX
            mov QWORD PTR [R14+344],RAX
            call .L_403e60

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44706d]
            mov QWORD PTR [R14+352],RAX
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_402f30

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447072]
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [R14+360],RAX
.L_402e07:

            pxor XMM3,XMM3
            ucomisd XMM3,QWORD PTR [R14+360]
            jb .L_402f5a

            mov ESI,4294967265
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_402e2c:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            jmp .L_402b5b
.L_402e39:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            jmp .L_402b0a
.L_402e46:

            mov ESI,4294967249
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_402e58:

            mov ESI,4294967290
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_402e6a:

            lea RDX,QWORD PTR [RIP+.L_447010]
            mov RDI,RBX
            xor EBP,EBP
            call .L_403e60

            test EAX,EAX
            mov RSI,QWORD PTR [RSP+32]
            setne BPL
            jmp .L_402c1e
.L_402e8b:

            pxor XMM4,XMM4
            ucomisd XMM4,QWORD PTR [R14+408]
            jp .L_402c05

            jne .L_402c05

            pxor XMM5,XMM5
            ucomisd XMM5,QWORD PTR [R14+416]
            jp .L_402c05

            jne .L_402c05

            pxor XMM6,XMM6
            mov EDX,0
            ucomisd XMM6,QWORD PTR [R14+424]
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_402c05

            ucomisd XMM0,QWORD PTR [RIP+.L_447100]
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_402c05

            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_447108]
            ucomisd XMM4,XMM0
            ja .L_403400

            movsd XMM2,QWORD PTR [RIP+.L_447118]
            ucomisd XMM2,XMM0
            seta AL
.L_402f18:

            test AL,AL
            je .L_402c05

            mov DWORD PTR [R14+400],4
            jmp .L_402c05
.L_402f30:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447077]
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            jne .L_403410

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [R14+360],RAX
.L_402f5a:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44707d]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_403e60

            test RAX,RAX
            mov R13,RAX
            je .L_402fe7

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor R12D,R12D
            lea RBP,QWORD PTR [RIP+.L_65ca40]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            jne .L_402fbe

            jmp .L_4030ae
          .byte 0x90
.L_402fa0:

            mov RAX,R12
            add R12,1
            shl RAX,5
            mov RSI,QWORD PTR [RBP+RAX*1]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_4030ae
.L_402fbe:

            mov RDI,R13
            mov DWORD PTR [RSP],R12D
            call strcmp@PLT

            test EAX,EAX
            jne .L_402fa0

            movsxd RAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_65ca20]
            shl RAX,5
            mov RAX,QWORD PTR [RDX+RAX*1+8]
            mov QWORD PTR [RSP+24],RAX
.L_402fe7:

            cmp QWORD PTR [RSP+24],0
            je .L_40345b
.L_402ff3:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+24]
            call .L_413770

            mov RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [R14+368],XMM0
            cmp BYTE PTR [RDI],47
            je .L_403430

            movapd XMM1,XMM0
.L_40301d:

            pxor XMM6,XMM6
            ucomisd XMM6,XMM1
            jae .L_403287

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM1
            movsd QWORD PTR [R14+376],XMM0
.L_403040:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44708e]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_403e60

            test RAX,RAX
            mov R13,RAX
            je .L_4030f0

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor R12D,R12D
            lea RBP,QWORD PTR [RIP+.L_65ca40]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_4030ae
.L_403084:

            mov RDI,R13
            mov DWORD PTR [RSP],R12D
            call strcmp@PLT

            test EAX,EAX
            je .L_4030d7

            mov RAX,R12
            add R12,1
            shl RAX,5
            mov RSI,QWORD PTR [RBP+RAX*1]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            jne .L_403084
.L_4030ae:

            mov ESI,4294967289
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_4030c0:

            mov ESI,4294967282
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_4030d2:

            call __stack_chk_fail@PLT
.L_4030d7:

            movsxd RAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_65ca20]
            shl RAX,5
            mov RAX,QWORD PTR [RDX+RAX*1+8]
            mov QWORD PTR [RSP+24],RAX
.L_4030f0:

            cmp QWORD PTR [RSP+24],0
            je .L_4033a2
.L_4030fc:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+24]
            call .L_413770

            mov RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [R14+384],XMM0
            cmp BYTE PTR [RDI],47
            je .L_4032d9

            movapd XMM1,XMM0
.L_403126:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM1
            jae .L_403287

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM1
            movsd QWORD PTR [R14+392],XMM0
.L_403149:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4470a1]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_403e60

            test RAX,RAX
            mov RBP,RAX
            je .L_403304

            mov RSI,QWORD PTR [RIP+.L_65ce00]
            mov QWORD PTR [RSP+48],0
            test RSI,RSI
            je .L_403299

            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_65ce00]
            jmp .L_4031b8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4031a0:

            add R13,1
            mov RAX,R13
            shl RAX,4
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_403299
.L_4031b8:

            mov RDI,RBP
            mov DWORD PTR [RSP],R13D
            call strcmp@PLT

            test EAX,EAX
            jne .L_4031a0

            movsxd RAX,DWORD PTR [RSP]
            shl RAX,4
            mov RAX,QWORD PTR [R12+RAX*1+8]
            test RAX,RAX
            je .L_403299

            mov RBP,RAX
.L_4031e1:

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_4428d0

            movsd QWORD PTR [R14+496],XMM0
.L_4031f7:

            mov ESI,408
            mov EDI,1
            call .L_403740

            test RAX,RAX
            mov QWORD PTR [R14+24],RAX
            je .L_403243

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,QWORD PTR [R14+176]
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mov RDI,QWORD PTR [R14+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R14+128]
            call .L_410d80
.L_403243:

            mov RAX,QWORD PTR [R14+464]
            mov R13,QWORD PTR [R14+480]
            mov RDI,R14
            mov R12,QWORD PTR [R14+520]
            mov RBP,QWORD PTR [R14+24]
            mov QWORD PTR [RSP],RAX
            call R15

            test RAX,RAX
            je .L_403314

            cmp DWORD PTR [RBX],0
            je .L_402682

            mov RDI,RAX
            call .L_4024b0

            xor EAX,EAX
            jmp .L_402682
.L_403287:

            mov ESI,4294967245
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_403299:

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            mov RDI,RBX
            call .L_4428d0

            pxor XMM4,XMM4
            ucomisd XMM0,XMM4
            jp .L_4033ed

            jne .L_4033ed

            cmp BYTE PTR [RBP],48
            je .L_4033ed
.L_4032c7:

            mov ESI,4294967250
            mov RDI,RBX
            call .L_404200

            jmp .L_4028d4
.L_4032d9:

            add RDI,1
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RDI
            call .L_413770

            movsd XMM1,QWORD PTR [R14+384]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+384],XMM1
            jmp .L_403126
.L_403304:

            mov QWORD PTR [R14+496],0
            jmp .L_4031f7
.L_403314:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_403344
.L_40331e:

            mov RDX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+40],RDX
            call .L_403730

            mov RDI,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            test RDI,RDI
            mov QWORD PTR [RSP+32],RDI
            jne .L_40331e
.L_403344:

            mov RDI,QWORD PTR [RSP]
            test RDI,RDI
            je .L_40335a

            mov QWORD PTR [RSP],RAX
            call .L_403730

            mov RAX,QWORD PTR [RSP]
.L_40335a:

            test R13,R13
            je .L_40336f

            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            call .L_403730

            mov RAX,QWORD PTR [RSP]
.L_40336f:

            test R12,R12
            je .L_403384

            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            call .L_403730

            mov RAX,QWORD PTR [RSP]
.L_403384:

            test RBP,RBP
            je .L_402680

            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_403730

            mov RAX,QWORD PTR [RSP]
            jmp .L_402682
.L_4033a2:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447096]
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            jne .L_4030fc

            movsd XMM0,QWORD PTR [R14+368]
            movsd QWORD PTR [R14+384],XMM0
            movsd XMM0,QWORD PTR [R14+376]
            movsd QWORD PTR [R14+392],XMM0
            jmp .L_403149
.L_4033ed:

            mov RAX,QWORD PTR [RSP+48]
            cmp BYTE PTR [RAX],0
            je .L_4031e1

            jmp .L_4032c7
.L_403400:

            ucomisd XMM0,QWORD PTR [RIP+.L_447110]
            seta AL
            jmp .L_402f18
.L_403410:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44707a]
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [R14+360],RAX
            jmp .L_402e07
.L_403430:

            add RDI,1
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RDI
            call .L_413770

            movsd XMM1,QWORD PTR [R14+368]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+368],XMM1
            jmp .L_40301d
.L_40345b:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_447084]
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            jne .L_402ff3

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [R14+376],RAX
            mov QWORD PTR [R14+368],RAX
            jmp .L_403040
.L_403497:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [R14+160]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_402a5d
.L_4034b6:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_4029d9
.L_4034ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4034d0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,1616
.L_4034e4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1608],RAX
            xor EAX,EAX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call .L_403700

            mov RSI,R12
            mov RBP,RAX
            mov RDI,RAX
            call strcpy@PLT

            movzx EDX,BYTE PTR [RBP]
            test DL,DL
            je .L_403654

            xor EDI,EDI
            xor ECX,ECX
            xor ESI,ESI
            jmp .L_403585
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403530:

            cmp DL,43
            jne .L_403600

            test ECX,ECX
            je .L_403610

            cmp BYTE PTR [RAX-1],0
            je .L_403610

            test EDI,EDI
            je .L_403602
.L_403553:

            mov EDX,ECX
            sub EDX,EDI
            cmp ESI,199
            movsxd RDX,EDX
            mov BYTE PTR [RBP+RDX*1],0
            je .L_403624
.L_40356b:

            movsxd RDX,ESI
            add RAX,1
            add ESI,1
            mov QWORD PTR [RSP+RDX*8],RAX
            xor EDI,EDI
.L_40357b:

            movzx EDX,BYTE PTR [RAX]
            add ECX,1
            test DL,DL
            je .L_4035b7
.L_403585:

            cmp DL,32
            je .L_403594

            jg .L_403530

            sub EDX,9
            cmp DL,1
            ja .L_403600
.L_403594:

            test ECX,ECX
            je .L_4035a6

            cmp BYTE PTR [RAX-1],0
            je .L_4035a6

            test ESI,ESI
            jne .L_403638
.L_4035a6:

            mov BYTE PTR [RAX],0
            add RAX,1
            movzx EDX,BYTE PTR [RAX]
            add ECX,1
            test DL,DL
            jne .L_403585
.L_4035b7:

            sub ECX,EDI
            movsxd RCX,ECX
            add RCX,RBP
.L_4035bf:

            mov RDI,RBX
            mov BYTE PTR [RCX],0
            mov RDX,RSP
            call .L_402540

            mov RBX,RAX
.L_4035d0:

            mov RDI,RBP
            call .L_403730

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+1608]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40365e

            add RSP,1616
.L_4035f5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403600:

            xor EDI,EDI
.L_403602:

            add RAX,1
            jmp .L_40357b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403610:

            test EDI,EDI
            jne .L_403553

            cmp ESI,199
            jne .L_40356b
.L_403624:

            mov RDI,RBX
            mov ESI,4294967252
            xor EBX,EBX
            call .L_404200

            jmp .L_4035d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403638:

            lea EDX,DWORD PTR [RSI-1]
            movsxd RDX,EDX
            cmp QWORD PTR [RSP+RDX*8],RAX
            je .L_4035a6

            add EDI,1
            add RAX,1
            jmp .L_40357b
.L_403654:

            mov RCX,RBP
            xor ESI,ESI
            jmp .L_4035bf
.L_40365e:

            call __stack_chk_fail@PLT
.L_403663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403670:

            push RBX
            mov RBX,RDI
            call .L_404160

            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            jmp .L_4034d0
.L_403685:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403690:

            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,EDI
            sub RSP,8
            call .L_404160

            add RSP,8
            mov RDX,RBP
            mov ESI,EBX
            pop RBX
            pop RBP
            mov RDI,RAX
            jmp .L_402540
.L_4036b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036c0:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],RSI
            mov QWORD PTR [RDI+112],RDX
            mov RSI,RCX
            mov EDI,1
            call .L_403740

            mov QWORD PTR [RBX+32],RAX
            pop RBX
            ret 
.L_4036df:

            nop
.L_4036e0:

            lea RAX,QWORD PTR [RIP+.L_65bbe0]
            ret 
.L_4036e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036f0:

            lea RAX,QWORD PTR [RIP+.L_65b260]
            ret 
.L_4036f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403700:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            call __errno_location@PLT

            mov RDI,RBP
            mov RBX,RAX
            mov R12D,DWORD PTR [RAX]
            call malloc@PLT

            test RAX,RAX
            je .L_40372a

            test R12D,R12D
            jne .L_40372a

            mov DWORD PTR [RBX],0
.L_40372a:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40372f:

            nop
.L_403730:

            jmp free@PLT
.L_403735:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403740:

            push RBX
            mov RBX,RDI
            imul RBX,RSI
            mov RDI,RBX
            call .L_403700

            test RAX,RAX
            mov RCX,RAX
            je .L_403768

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            call memset@PLT

            mov RCX,RAX
.L_403768:

            mov RAX,RCX
            pop RBX
            ret 
.L_40376d:

            nop
            nop
            nop
.L_403770:

            test RDI,RDI
            je .L_403788

            sub RSP,8
            call free@PLT

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403788:

            xor EAX,EAX
            ret 
.L_40378b:

            nop
            nop
            nop
            nop
            nop
.L_403790:

            test RDI,RDI
            je .L_4037b8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4037ae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call free@PLT

            mov RDI,RBX
            pop RBX
.L_4037ae:

            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4037b8:

            ret 
.L_4037ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4037c0:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,1112
.L_4037da:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1096],RAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+16],R8
            setne DL
            test R8,R8
            setne AL
            and DL,AL
            mov BYTE PTR [RSP+11],DL
            je .L_40380d

            mov BYTE PTR [RCX],0
.L_40380d:

            movzx R13D,BYTE PTR [RBX]
            cmp R13B,126
            je .L_403900

            lea RDI,QWORD PTR [RIP+.L_4474fe]
            movsx ESI,R13B
            mov R12,RBX
            call strchr@PLT

            test RAX,RAX
            je .L_403aa0
.L_403837:

            mov RDX,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call .L_4063e0

            test RAX,RAX
            mov R13,RAX
            je .L_403998

            cmp BYTE PTR [RSP+11],0
            jne .L_4038d8
.L_403859:

            call __errno_location@PLT

            mov DWORD PTR [RAX],0
.L_403864:

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_4038c0
.L_40386b:

            lea R9,QWORD PTR [RIP+.L_4474b8]
.L_403872:

            lea RDX,QWORD PTR [RIP+.L_4474d8]
            mov R8,R12
            mov RCX,RBX
            mov ESI,2
            mov RDI,RBP
            xor EAX,EAX
            call .L_404320
.L_40388e:

            mov RCX,QWORD PTR [RSP+1096]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_403c8d

            add RSP,1112
.L_4038af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4038c0:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            test ESI,ESI
            je .L_40386b

            mov RDI,RBP
            call .L_404200

            jmp .L_40386b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4038d8:

            mov R15,QWORD PTR [RSP+16]
            mov RSI,R12
            mov RDI,R14
            mov RDX,R15
            call strncpy@PLT

            mov BYTE PTR [R14+R15*1-1],0
            jmp .L_403859
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403900:

            movsx ESI,BYTE PTR [RBX+1]
            lea RDI,QWORD PTR [RIP+.L_4474fe]
            call strchr@PLT

            test RAX,RAX
            je .L_403ac0

            lea RDI,QWORD PTR [RIP+.L_4474c2]
            call getenv@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_403c00

            mov RDI,RAX
            call strlen@PLT

            mov RDI,RBX
            mov R13,RAX
            call strlen@PLT

            lea RAX,QWORD PTR [R13+RAX*1+2]
            cmp RAX,1025
            ja .L_403c00

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R13+1]
            mov RSI,R15
            mov ECX,1025
            mov RDI,R12
            call __memcpy_chk@PLT

            lea EDI,DWORD PTR [R13+1]
            movsxd RAX,R13D
            lea RSI,QWORD PTR [RBX+1]
            mov BYTE PTR [RSP+RAX*1+64],47
            movsxd RDI,EDI
            mov BYTE PTR [RSP+RDI*1+64],0
            add RDI,R12
            call strcpy@PLT

            jmp .L_403837
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403998:

            mov EAX,DWORD PTR [RIP+.L_65dd18]
            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            jle .L_403b30

            mov RAX,QWORD PTR [RIP+.L_65dd10]
            mov RDI,RBX
            xor R15D,R15D
            mov QWORD PTR [RSP+24],RAX
            call strlen@PLT

            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+40],R12
            mov QWORD PTR [RSP+56],R13
            mov QWORD PTR [RSP+48],R14
            mov R13,QWORD PTR [RSP+24]
            mov R12,R15
            mov QWORD PTR [RSP+32],RCX
            mov QWORD PTR [RSP+24],RBP
            mov R14,RAX
            jmp .L_4039fe
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4039f0:

            cmp DWORD PTR [RSP+12],EBP
            jle .L_403bc8
.L_4039fa:

            add R12,1
.L_4039fe:

            mov R15,QWORD PTR [R13+R12*8]
            lea EBP,DWORD PTR [R12+1]
            mov RDI,R15
            call strlen@PLT

            lea RAX,QWORD PTR [R14+RAX*1+2]
            cmp RAX,1025
            ja .L_4039f0

            sub RSP,8
.L_403a21:

            mov R8,R15
            lea RCX,QWORD PTR [RIP+.L_4474ca]
            push RBX
            mov R15,QWORD PTR [RSP+48]
            mov R9D,47
            mov EDX,1025
            mov ESI,1
            xor EAX,EAX
            mov RDI,R15
            call __sprintf_chk@PLT

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+40]
            mov RSI,R15
            call .L_4063e0

            test RAX,RAX
            pop RCX
            pop RSI
            jne .L_403b70

            mov EAX,DWORD PTR [RIP+.L_65dd18]
            cmp EAX,EBP
            mov DWORD PTR [RSP+12],EAX
            jle .L_403b20

            mov RDI,RBX
            mov R13,QWORD PTR [RIP+.L_65dd10]
            call strlen@PLT

            mov QWORD PTR [RSP+40],R15
            mov R14,RAX
            jmp .L_4039fa
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403aa0:

            cmp R13B,46
            jne .L_403ac0

            movsx ESI,BYTE PTR [RBX+1]
            lea RDI,QWORD PTR [RIP+.L_4474fe]
            call strchr@PLT

            test RAX,RAX
            jne .L_403837

            nop
.L_403ac0:

            lea RDI,QWORD PTR [RIP+.L_4474c7]
            mov ECX,2
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_403ba0

            cmp BYTE PTR [RBX+1],58
            je .L_403ba0
.L_403ae8:

            mov RAX,QWORD PTR [RIP+.L_65dd20]
            test RAX,RAX
            je .L_403c08

            mov RDI,RBX
            call RAX

            test RAX,RAX
            je .L_403c08

            mov RDI,RBX
            call QWORD PTR [RIP+.L_65dd20]

            mov R12,RAX
            jmp .L_403837
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b20:

            mov R13,QWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            nop
.L_403b30:

            mov EDX,DWORD PTR [RBP]
            test EDX,EDX
            jne .L_403c92

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea R9,QWORD PTR [RIP+.L_4474b1]
            test ESI,ESI
            je .L_403872

            mov RDI,RBP
            mov QWORD PTR [RSP],R9
            call .L_404200

            mov R9,QWORD PTR [RSP]
            jmp .L_403872
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b70:

            cmp BYTE PTR [RSP+11],0
            mov R12,RAX
            mov RBP,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+48]
            jne .L_403be0
.L_403b84:

            call __errno_location@PLT

            mov R13,R12
            mov DWORD PTR [RAX],0
            mov R12,QWORD PTR [RSP+32]
            jmp .L_403864
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403ba0:

            movsx ESI,BYTE PTR [RBX+2]
            lea RDI,QWORD PTR [RIP+.L_4474fe]
            mov R12,RBX
            call strchr@PLT

            test RAX,RAX
            jne .L_403837

            jmp .L_403ae8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403bc8:

            mov R12,QWORD PTR [RSP+40]
            mov R13,QWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+24]
            jmp .L_403b30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403be0:

            mov R15,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R14
            mov RDX,R15
            call strncpy@PLT

            mov BYTE PTR [R14+R15*1-1],0
            jmp .L_403b84
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c00:

            xor R13D,R13D
            jmp .L_40388e
.L_403c08:

            lea RDI,QWORD PTR [RIP+.L_446f64]
            call getenv@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_403c7e

            mov RDI,RAX
            call strlen@PLT

            mov R12,RAX
.L_403c27:

            mov RDI,RBX
            call strlen@PLT

            mov R13,RAX
            lea RAX,QWORD PTR [R12+RAX*1+2]
            cmp RAX,1025
            ja .L_403c00

            lea R12,QWORD PTR [RSP+64]
            mov RSI,R15
            mov EDX,1025
            mov RDI,R12
            call __stpcpy_chk@PLT

            sub RAX,R12
            mov RSI,RBX
            movsxd RDX,EAX
            add EAX,1
            cdqe 
            mov BYTE PTR [RSP+RDX*1+64],47
            lea RDX,QWORD PTR [R13+1]
            lea RDI,QWORD PTR [R12+RAX*1]
            mov BYTE PTR [RSP+RAX*1+64],0
            call memcpy@PLT

            jmp .L_403837
.L_403c7e:

            mov R12D,21
            lea R15,QWORD PTR [RIP+.L_44749b]
            jmp .L_403c27
.L_403c8d:

            call __stack_chk_fail@PLT
.L_403c92:

            lea R9,QWORD PTR [RIP+.L_4474b1]
            jmp .L_403872
.L_403c9e:

            nop
            nop
.L_403ca0:

            mov QWORD PTR [RIP+.L_65dd20],RDI
            ret 
.L_403ca8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cb0:

            mov EAX,DWORD PTR [RIP+.L_65dd18]
            push R14
            push R13
            mov R13D,EDI
            push R12
            mov R12,RSI
            push RBP
            push RBX
.L_403cc4:

            test EAX,EAX
            jle .L_403d20

            mov RAX,QWORD PTR [RIP+.L_65dd10]
            test RAX,RAX
            je .L_403d20

            xor EBX,EBX
            jmp .L_403ce7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403ce0:

            mov RAX,QWORD PTR [RIP+.L_65dd10]
.L_403ce7:

            mov RDI,QWORD PTR [RAX+RBX*8]
            call .L_403730

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RIP+.L_65dd18],EAX
            jg .L_403ce0

            mov RDI,QWORD PTR [RIP+.L_65dd10]
            call .L_403730

            mov DWORD PTR [RIP+.L_65dd18],0
            mov QWORD PTR [RIP+.L_65dd10],0
.L_403d20:

            test R13D,R13D
            jle .L_403d87

            movsxd RDI,R13D
            xor EBX,EBX
            shl RDI,3
            call .L_403700

            mov RBP,RAX
            mov QWORD PTR [RIP+.L_65dd10],RAX
            lea EAX,DWORD PTR [R13-1]
            lea R14,QWORD PTR [RAX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d50:

            mov RDI,QWORD PTR [R12+RBX*1]
            add RBP,RBX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call .L_403700

            mov QWORD PTR [RBP],RAX
            mov RBP,QWORD PTR [RIP+.L_65dd10]
            mov RSI,QWORD PTR [R12+RBX*1]
            mov RDI,QWORD PTR [RBP+RBX*1]
            add RBX,8
            call strcpy@PLT

            cmp R14,RBX
            jne .L_403d50
.L_403d87:

            pop RBX
.L_403d88:

            mov DWORD PTR [RIP+.L_65dd18],R13D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_403d97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403da0:

            mov RAX,QWORD PTR [RIP+.L_65dd10]
            ret 
.L_403da8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403db0:

            mov EAX,DWORD PTR [RIP+.L_65dd18]
            ret 
.L_403db7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403dc0:

            xor R8D,R8D
            xor ECX,ECX
            jmp .L_4037c0
.L_403dca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403dd0:

            push RBX
            mov R8,RCX
            mov RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RBX,RDI
            call .L_4037c0

            xor EDX,EDX
            test RAX,RAX
            je .L_403dfd

            mov RSI,RAX
            mov RDI,RBX
            call .L_406440

            mov EDX,1
.L_403dfd:

            mov EAX,EDX
            pop RBX
            ret 
.L_403e01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e10:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403700

            test RAX,RAX
            mov RBX,RAX
            je .L_403e52

            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            cmp BYTE PTR [RBP],43
            lea RDI,QWORD PTR [RBX+9]
            sete AL
            add RBP,RAX
            mov RSI,RBP
            call strcpy@PLT
.L_403e52:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_403e5c:

            nop
            nop
            nop
            nop
.L_403e60:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_403e71:

            test RDI,RDI
            mov QWORD PTR [RSP],RDI
            je .L_404000
.L_403e7e:

            lea R12,QWORD PTR [RDX+1]
            movzx R14D,BYTE PTR [RDX]
            mov RDI,R12
            call strlen@PLT

            test R15,R15
            mov R13D,EAX
            mov EBP,EAX
            je .L_403ecc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ea0:

            lea RBX,QWORD PTR [R15+9]
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call strncmp@PLT

            test EAX,EAX
            jne .L_403ec4

            movzx EAX,BYTE PTR [R15+R13*1+9]
            test AL,AL
            je .L_403f30

            cmp AL,61
            je .L_403f30
.L_403ec4:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_403ea0
.L_403ecc:

            xor EDI,EDI
            cmp R14B,116
            jne .L_403ef0
.L_403ed4:

            mov EAX,EDI
            and EAX,1
.L_403ed9:

            add RSP,24
.L_403edd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403ef0:

            sub R14D,98
            cmp R14B,17
            ja .L_40402e

            lea RDX,QWORD PTR [RIP+.L_447524]
            movzx R14D,R14B
            movsxd RAX,DWORD PTR [RDX+R14*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403f18:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f30:

            cmp R14B,116
            je .L_404055

            lea RDI,QWORD PTR [RBX+RBP*1]
            or BYTE PTR [R15+8],1
            xor EAX,EAX
            cmp BYTE PTR [RDI],61
            sete AL
            sub R14D,98
            add RDI,RAX
            cmp R14B,17
            ja .L_40402e

            lea RDX,QWORD PTR [RIP+.L_44756c]
            movzx R14D,R14B
            movsxd RAX,DWORD PTR [RDX+R14*4]
            add RAX,RDX
            jmp RAX
.L_403f70:

            mov RAX,RDI
            jmp .L_403ed9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403f80:

            mov RSI,RDI
            mov RDI,QWORD PTR [RSP]
            xor EDX,EDX
            call .L_4428d0

            movq RAX,XMM0
            jmp .L_403ed9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fa0:

            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            mov EAX,EAX
            jmp .L_403ed9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403fb8:

            call .L_413910

            movq RAX,XMM0
            jmp .L_403ed9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fd0:

            movzx EAX,BYTE PTR [RDI]
            cmp AL,84
            je .L_404024

            jg .L_404018

            test AL,AL
            je .L_404024

            cmp AL,70
            je .L_403f18
.L_403fe5:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4294967288
            call .L_404200

            xor EAX,EAX
            jmp .L_403ed9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404000:

            mov QWORD PTR [RSP+8],RDX
            call .L_404160

            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP],RAX
            jmp .L_403e7e
.L_404018:

            cmp AL,102
            je .L_403f18

            cmp AL,116
            jne .L_403fe5
.L_404024:

            mov EAX,1
            jmp .L_403ed9
.L_40402e:

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_447500]
            mov EDX,35
            mov ESI,1
            call fwrite@PLT

            mov EDI,1
            call exit@PLT
.L_404055:

            mov EDI,1
            jmp .L_403ed4
.L_40405f:

            nop
.L_404060:

            lea RAX,QWORD PTR [RIP+.L_65ca20]
            ret 
.L_404068:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404070:

            sub RSP,8
            call .L_40b910

            mov EAX,DWORD PTR [RIP+.L_65dd40]
            test EAX,EAX
            je .L_404090

            add RSP,8
            jmp .L_40b9b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404090:

            mov RAX,OFFSET .L_4042e0
            mov QWORD PTR [RIP+.L_65dd60],0
            mov QWORD PTR [RIP+.L_65dd70],0
            mov QWORD PTR [RIP+.L_65dd68],RAX
            call .L_4063d0

            lea RDI,QWORD PTR [RIP+.L_44783c]
            mov QWORD PTR [RIP+.L_65dd78],RAX
            call getenv@PLT

            test RAX,RAX
            je .L_4040fa

            lea RDI,QWORD PTR [RIP+.L_44783c]
            call getenv@PLT

            xor ESI,ESI
            mov EDX,10
            mov RDI,RAX
            call strtol@PLT

            test EAX,EAX
            jg .L_404110

            mov DWORD PTR [RIP+.L_65dd64],3
.L_4040fa:

            mov DWORD PTR [RIP+.L_65dd40],1
            add RSP,8
.L_404108:

            jmp .L_40b9b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404110:

            lea RDI,QWORD PTR [RIP+.L_44783c]
            call getenv@PLT

            mov EDX,10
            xor ESI,ESI
            mov RDI,RAX
            call strtol@PLT

            mov DWORD PTR [RIP+.L_65dd64],EAX
            jmp .L_4040fa
.L_404133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404140:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_404144:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404150:

            mov QWORD PTR [RDI],RSI
            ret 
.L_404154:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404160:

            mov EAX,DWORD PTR [RIP+.L_65dd40]
            test EAX,EAX
            je .L_404178

            lea RAX,QWORD PTR [RIP+.L_65dd60]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404178:

            sub RSP,8
            call .L_404070

            lea RAX,QWORD PTR [RIP+.L_65dd60]
            add RSP,8
            ret 
.L_40418d:

            nop
            nop
            nop
.L_404190:

            sub RSP,24
.L_404194:

            mov EDI,32
            call malloc@PLT

            mov EDX,DWORD PTR [RIP+.L_65dd40]
            test EDX,EDX
            jne .L_4041b7

            mov QWORD PTR [RSP+8],RAX
            call .L_404070

            mov RAX,QWORD PTR [RSP+8]
.L_4041b7:

            movdqa XMM0,XMMWORD PTR [RIP+.L_65dd60]
            movups XMMWORD PTR [RAX],XMM0
            mov DWORD PTR [RAX],0
            movdqa XMM0,XMMWORD PTR [RIP+.L_65dd70]
            movups XMMWORD PTR [RAX+16],XMM0
            add RSP,24
.L_4041d8:

            ret 
.L_4041d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4041e0:

            jmp free@PLT
.L_4041e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4041f0:

            mov EAX,DWORD PTR [RDI]
            ret 
.L_4041f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404200:

            test ESI,ESI
            mov DWORD PTR [RDI],ESI
            je .L_40420c

            mov DWORD PTR [RIP+.L_65de9c],ESI
.L_40420c:

            ret 
.L_40420e:

            nop
            nop
.L_404210:

            mov DWORD PTR [RDI+4],ESI
            ret 
.L_404214:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404220:

            mov QWORD PTR [RDI+8],RSI
            ret 
.L_404225:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404230:

            mov QWORD PTR [RDI+16],RSI
            ret 
.L_404235:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404240:

            mov RAX,QWORD PTR [RDI+16]
            ret 
.L_404245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404250:

            mov QWORD PTR [RDI+24],RSI
            ret 
.L_404255:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404260:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_404265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404270:

            push R14
            push R13
            mov R14,RCX
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40427e:

            mov EDI,100000
            mov R12D,ESI
            mov R13,RDX
            call malloc@PLT

            test RAX,RAX
            je .L_4042d0

            mov RBX,RAX
            mov R8,R14
            mov RCX,R13
            mov EDX,100000
            mov ESI,1
            mov RDI,RAX
            call __vsprintf_chk@PLT

            mov RDI,QWORD PTR [RBP+16]
            mov RDX,RBX
            mov ESI,R12D
            call QWORD PTR [RBP+8]

            mov RDI,RBX
            pop RBX
.L_4042bf:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042d0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4042d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042e0:

            mov RDI,QWORD PTR [RIP+stderr]
            mov RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_447847]
            mov ESI,1
            xor EAX,EAX
            jmp __fprintf_chk@PLT
.L_4042fd:

            nop
            nop
            nop
.L_404300:

            cmp DWORD PTR [RDI+4],ESI
            jge .L_404310

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404310:

            jmp .L_404270
.L_404315:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404320:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_404371

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_404371:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp DWORD PTR [RDI+4],ESI
            jge .L_4043a0
.L_404386:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4043d5

            add RSP,216

            ret 
          .byte 0x66
          .byte 0x90
.L_4043a0:

            lea RAX,QWORD PTR [RSP+224]
            cmp ESI,DWORD PTR [RDI+4]
            mov DWORD PTR [RSP],24
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            jg .L_404386

            mov RCX,RSP
            call .L_404270

            jmp .L_404386
.L_4043d5:

            call __stack_chk_fail@PLT
.L_4043da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4043e0:

            test EDX,EDX
            jne .L_4044e0

            movsd XMM2,QWORD PTR [RIP+.L_447a38]
            ucomisd XMM1,XMM2
            jbe .L_4046b0

            movsd XMM4,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM4,XMM0
            ja .L_404768

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            xor R8D,R8D
            movapd XMM5,XMM3
.L_40441b:

            ucomisd XMM0,XMM4
            pxor XMM4,XMM4
            jb .L_40442f

            ucomisd XMM4,XMM0
            ja .L_4047e0
.L_40442f:

            ucomisd XMM0,XMM4
            jb .L_404441

            ucomisd XMM3,XMM0
            mov R9D,2
            ja .L_40444f
.L_404441:

            movsd XMM2,QWORD PTR [RIP+.L_447a28]
            mov R9D,3
.L_40444f:

            test R8D,R8D
            jne .L_4046ef
.L_404458:

            mov ECX,R9D
            lea RAX,QWORD PTR [RIP+.L_65cce0]
            sub ECX,EDI
            add ECX,3
            cmp ECX,6
            ja .L_40447e
.L_40446c:

            lea RSI,QWORD PTR [RIP+.L_447980]
            movsxd RCX,DWORD PTR [RSI+RCX*4]
            shl RCX,5
            add RAX,RCX
.L_40447e:

            subsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RAX]
            subsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RAX+8]
            test EDX,EDX
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RAX+16]
            mulsd XMM5,XMM1
            mulsd XMM1,QWORD PTR [RAX+24]
            addsd XMM2,XMM4
            addsd XMM0,XMM4
            addsd XMM2,XMM5
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a40]
            je .L_4044d2

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R9D
            mulsd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_447a28]
.L_4044d2:

            addsd XMM0,XMM2
            addsd XMM1,XMM3
.L_4044da:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4044e0:

            movsd XMM4,QWORD PTR [RIP+.L_447a38]
            ucomisd XMM1,XMM4
            jbe .L_4045b8

            pxor XMM5,XMM5
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            cvtsi2sd XMM5,EDI
            mulsd XMM5,XMM3
            subsd XMM6,XMM5
            movapd XMM2,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_447a28]
            movapd XMM5,XMM6
            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM5,XMM4
            movapd XMM4,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_447a48]
            movapd XMM7,XMM4
            subsd XMM7,XMM5
            ucomisd XMM1,XMM7
            jae .L_404710
.L_404548:

            addsd XMM4,XMM5
            ucomisd XMM1,XMM4
            jbe .L_40456c

            movsd XMM7,QWORD PTR [RIP+.L_447a50]
            addsd XMM7,XMM6
            subsd XMM7,XMM5
            ucomisd XMM1,XMM7
            jae .L_4047d0
.L_40456c:

            ucomisd XMM4,XMM1
            jb .L_40458b

            addsd XMM6,QWORD PTR [RIP+.L_447a50]
            lea EAX,DWORD PTR [RDI+3]
            addsd XMM5,XMM6
            ucomisd XMM1,XMM5
            ja .L_40472d
.L_40458b:

            mov ECX,3
.L_404590:

            mov EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_447980]
            mov R9D,EDI
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            lea RCX,QWORD PTR [RIP+.L_65cce0]
            shl RAX,5
            add RAX,RCX
            jmp .L_404757
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4045b8:

            movsd XMM2,QWORD PTR [RIP+.L_447a30]
            ucomisd XMM2,XMM1
            jbe .L_4044da

            pxor XMM5,XMM5
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            cvtsi2sd XMM5,ESI
            mulsd XMM5,XMM3
            subsd XMM6,XMM5
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_447a48]
            subsd XMM2,QWORD PTR [RIP+.L_447a28]
            addsd XMM4,XMM6
            movapd XMM7,XMM4
            addsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jb .L_404631

            movapd XMM7,XMM6
            lea EAX,DWORD PTR [RSI+1]
            xorpd XMM7,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM7,QWORD PTR [RIP+.L_447a50]
            addsd XMM7,XMM5
            ucomisd XMM1,XMM7
            ja .L_404793
.L_404631:

            subsd XMM4,XMM5
            ucomisd XMM4,XMM1
            jbe .L_40465d

            movapd XMM7,XMM6
            xorpd XMM7,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM7,QWORD PTR [RIP+.L_447a50]
            addsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jae .L_404790
.L_40465d:

            ucomisd XMM1,XMM4
            jb .L_404684

            xorpd XMM6,XMMWORD PTR [RIP+.L_447ae0]
            lea EAX,DWORD PTR [RSI+3]
            subsd XMM6,QWORD PTR [RIP+.L_447a50]
            subsd XMM6,XMM5
            ucomisd XMM6,XMM1
            ja .L_404793
.L_404684:

            mov EDI,3
.L_404689:

            lea RAX,QWORD PTR [RIP+.L_447980]
            lea RCX,QWORD PTR [RIP+.L_65cce0]
            mov R9D,ESI
            movsxd RAX,DWORD PTR [RAX+RDI*4]
            shl RAX,5
            add RAX,RCX
            jmp .L_4047bf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4046b0:

            movsd XMM3,QWORD PTR [RIP+.L_447a30]
            ucomisd XMM3,XMM1
            jbe .L_4044da

            movsd XMM4,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM4,XMM0
            jbe .L_4047f3

            movapd XMM5,XMM4
            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [RIP+.L_447a40]
            xor R9D,R9D
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_4046ef:

            sub ESI,R9D
            lea RAX,QWORD PTR [RIP+.L_65cce0]
            lea ECX,DWORD PTR [RSI+3]
            cmp ECX,6
            ja .L_40447e

            jmp .L_40446c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404710:

            movsd XMM7,QWORD PTR [RIP+.L_447a50]
            lea EAX,DWORD PTR [RDI+1]
            addsd XMM7,XMM6
            subsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jbe .L_404548
.L_40472d:

            mov ECX,EAX
            sar ECX,31
            shr ECX,30
            add EAX,ECX
            and EAX,3
            sub EAX,ECX
            sub EDI,EAX
            mov R9D,EAX
            lea RAX,QWORD PTR [RIP+.L_65cce0]
            lea ECX,DWORD PTR [RDI+3]
            mov EDI,R9D
            cmp ECX,6
            jbe .L_404590
.L_404757:

            movapd XMM5,XMM3
            pxor XMM4,XMM4
            jmp .L_40447e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404768:

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            xor R9D,R9D
            movsd XMM2,QWORD PTR [RIP+.L_447a40]
            movapd XMM5,XMM3
            pxor XMM4,XMM4
            jmp .L_404458
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404790:

            lea EAX,DWORD PTR [RSI+2]
.L_404793:

            mov ECX,EAX
            sar ECX,31
            shr ECX,30
            add EAX,ECX
            and EAX,3
            sub EAX,ECX
            mov EDI,EAX
            mov R9D,EAX
            lea RAX,QWORD PTR [RIP+.L_65cce0]
            sub EDI,ESI
            mov ESI,R9D
            add EDI,3
            cmp EDI,6
            jbe .L_404689
.L_4047bf:

            movsd XMM5,QWORD PTR [RIP+.L_447a18]
            pxor XMM4,XMM4
            jmp .L_40447e
.L_4047d0:

            lea EAX,DWORD PTR [RDI+2]
            jmp .L_40472d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4047e0:

            movsd XMM2,QWORD PTR [RIP+.L_447a30]
            mov R9D,1
            jmp .L_40444f
.L_4047f3:

            mov R8D,1
            movapd XMM5,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            jmp .L_40441b
.L_40480a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404810:

            test RDI,RDI
            je .L_404848

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_404840

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            test RDI,RDI
            je .L_404834

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_404834:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_404840:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404848:

            xor EAX,EAX
            ret 
.L_40484b:

            nop
            nop
            nop
            nop
            nop
.L_404850:

            jmp .L_404810
.L_404852:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404860:

            sub RSP,24
.L_404864:

            movapd XMM3,XMM1
            movq XMM6,QWORD PTR [RIP+.L_447130]
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a38]
            andpd XMM3,XMM6
            ucomisd XMM1,XMM3
            jae .L_4049a0

            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM2,XMM3
            ja .L_4048c0

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            ucomisd XMM4,XMM0
            jbe .L_404a48
.L_4048aa:

            movsd XMM2,QWORD PTR [RIP+.L_447a60]
            add RSP,24
.L_4048b6:

            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048c0:

            movapd XMM8,XMM0
            movsd XMM9,QWORD PTR [RIP+.L_447a78]
            addsd XMM8,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_4470e8]
            movsd XMM11,QWORD PTR [RIP+.L_447a80]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            divsd XMM8,XMM9
            addsd XMM8,XMM5
            movapd XMM10,XMM8
            movapd XMM1,XMM8
            andpd XMM10,XMM6
            ucomisd XMM11,XMM10
            ja .L_4049e8
.L_404910:

            movsd XMM8,QWORD PTR [RIP+.L_447a88]
            movsd XMM6,QWORD PTR [RIP+.L_447a28]
            ucomisd XMM1,XMM8
            jb .L_4049d0
.L_40492c:

            mulsd XMM3,XMM8
            subsd XMM0,XMM6
            movapd XMM1,XMM7
            divsd XMM3,XMM9
            movapd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM5,XMM3
            ucomisd XMM4,XMM0
            divsd XMM2,XMM5
            movapd XMM3,XMM5
            addsd XMM2,XMM6
            jbe .L_404a28
.L_404960:

            mulsd XMM3,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            divsd XMM3,QWORD PTR [RIP+.L_447a90]
            subsd XMM7,XMM3
            movapd XMM0,XMM7
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
.L_404993:

            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4049a0:

            mulsd XMM4,QWORD PTR [RIP+.L_447a68]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_447a70]
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_4049d0:

            mulsd XMM1,XMM2
            subsd XMM1,XMM6
            movapd XMM6,XMM1
            jmp .L_40492c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4049e8:

            cvttsd2si RAX,XMM8
            pxor XMM10,XMM10
            andnpd XMM6,XMM8
            cvtsi2sd XMM10,RAX
            movapd XMM12,XMM10
            cmpnlesd XMM12,XMM8
            movapd XMM1,XMM12
            andpd XMM1,XMM7
            subsd XMM10,XMM1
            movapd XMM1,XMM10
            orpd XMM1,XMM6
            jmp .L_404910
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a28:

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            ja .L_404960

            pxor XMM1,XMM1
            jmp .L_404960
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a48:

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ja .L_4048aa

            pxor XMM1,XMM1
            jmp .L_4048aa
.L_404a63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a70:

            sub RSP,72
.L_404a74:

            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_447a98]
            movsd XMM3,QWORD PTR [RSP+16]
            andpd XMM2,XMM4
            ucomisd XMM6,XMM2
            jb .L_404ad8

            movsd XMM1,QWORD PTR [RIP+.L_447aa0]
            movsd XMM5,QWORD PTR [RSP+24]
            add RSP,72
.L_404acb:

            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404ad8:

            movsd XMM8,QWORD PTR [RIP+.L_4470f0]
            andpd XMM0,XMM4
            movapd XMM7,XMM8
            pxor XMM6,XMM6
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            mulsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM7,XMM0
            ja .L_404c03
.L_404b0c:

            movapd XMM5,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_4470e8]
            movsd XMM10,QWORD PTR [RIP+.L_447a80]
            addsd XMM5,XMM3
            divsd XMM5,QWORD PTR [RIP+.L_447a78]
            addsd XMM5,XMM2
            movapd XMM9,XMM5
            movapd XMM0,XMM5
            andpd XMM9,XMM4
            ucomisd XMM10,XMM9
            ja .L_404ba8
.L_404b46:

            ucomisd XMM0,QWORD PTR [RIP+.L_447a88]
            movsd XMM5,QWORD PTR [RIP+.L_447a28]
            jb .L_404b90
.L_404b58:

            subsd XMM3,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            ucomisd XMM1,XMM6
            mulsd XMM3,XMM7
            addsd XMM5,XMM3
            jbe .L_404be8
.L_404b72:

            subsd XMM2,XMM7
            add RSP,72
.L_404b7a:

            movapd XMM1,XMM2
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b90:

            mulsd XMM0,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,XMM5
            movapd XMM5,XMM0
            jmp .L_404b58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ba8:

            cvttsd2si RAX,XMM5
            pxor XMM9,XMM9
            andnpd XMM4,XMM5
            cvtsi2sd XMM9,RAX
            movapd XMM11,XMM9
            cmpnlesd XMM11,XMM5
            movapd XMM0,XMM11
            andpd XMM0,XMM8
            subsd XMM9,XMM0
            movapd XMM0,XMM9
            orpd XMM0,XMM4
            jmp .L_404b46
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404be8:

            ucomisd XMM6,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_447a30]
            ja .L_404b72

            pxor XMM0,XMM0
            jmp .L_404b72
.L_404c03:

            movsd QWORD PTR [RSP+56],XMM6
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM4,XMMWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            jmp .L_404b0c
.L_404c56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c60:

            jmp .L_404a70
.L_404c65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c70:

            push RBX
            mov RBX,QWORD PTR [RDI+32]
            call .L_404a70

            mov ESI,DWORD PTR [RBX+4]
            mov EDI,DWORD PTR [RBX]
            xor EDX,EDX
            pop RBX
            jmp .L_4043e0
.L_404c87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c90:

            lea EDX,DWORD PTR [RDI-1]
            mov RAX,RSI
            shl RDX,4
            lea RDX,QWORD PTR [RSI+RDX*1+16]
            nop
.L_404ca0:

            ucomisd XMM0,QWORD PTR [RAX]
            jp .L_404cb5

            jne .L_404cb5

            ucomisd XMM1,QWORD PTR [RAX+8]
            jp .L_404cb5

            je .L_404d78
.L_404cb5:

            add RAX,16
            cmp RDX,RAX
            jne .L_404ca0

            movsd XMM6,QWORD PTR [RSI]
            xor R8D,R8D
            movsd XMM3,QWORD PTR [RSI+8]
            mov ECX,1
            mov R9D,1
            nop
            nop
            nop
.L_404cd8:

            mov EAX,ECX
            movapd XMM5,XMM3
            cdq 
            idiv EDI
            movsxd RDX,EDX
            shl RDX,4
            add RDX,RSI
            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM4,QWORD PTR [RDX]
            minsd XMM5,XMM2
            ucomisd XMM1,XMM5
            jbe .L_404d30

            movapd XMM5,XMM3
            maxsd XMM5,XMM2
            ucomisd XMM5,XMM1
            jb .L_404d30

            ucomisd XMM2,XMM3
            setp AL
            cmovne EAX,R9D
            ucomisd XMM6,XMM4
            jbe .L_404d50

            ucomisd XMM6,XMM0
            jb .L_404d30

            test AL,AL
            jne .L_404d80

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d30:

            add ECX,1
            movapd XMM3,XMM2
            cmp EDI,ECX
            movapd XMM6,XMM4
            jne .L_404cd8
.L_404d3f:

            mov EAX,R8D
            and EAX,1
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d50:

            ucomisd XMM4,XMM0
            jb .L_404d30

            test AL,AL
            je .L_404d30

            ucomisd XMM4,XMM6
            jp .L_404d62

            je .L_404daa
.L_404d62:

            movapd XMM5,XMM1
            movapd XMM7,XMM4
            subsd XMM5,XMM3
            subsd XMM7,XMM6
            jmp .L_404d90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404d78:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_404d80:

            movapd XMM5,XMM4
            movapd XMM7,XMM1
            subsd XMM5,XMM6
            subsd XMM7,XMM3
.L_404d90:

            mulsd XMM5,XMM7
            movapd XMM7,XMM2
            subsd XMM7,XMM3
            divsd XMM5,XMM7
            addsd XMM6,XMM5
            ucomisd XMM6,XMM0
            jb .L_404d30
.L_404daa:

            add ECX,1
            add R8D,1
            cmp EDI,ECX
            movapd XMM3,XMM2
            movapd XMM6,XMM4
            jne .L_404cd8

            jmp .L_404d3f
.L_404dc6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404dd0:

            sub RSP,312
.L_404dd7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            test EDI,EDI
            je .L_404f70

            pxor XMM2,XMM2
            mov EDI,12
            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd XMM6,QWORD PTR [RIP+.L_447a78]
            cvtsi2sd XMM2,ESI
            mov RSI,RSP
            movsd XMM5,QWORD PTR [RIP+.L_447a48]
            movsd XMM8,QWORD PTR [RIP+.L_447ab0]
            movsd XMM9,QWORD PTR [RIP+.L_447ab8]
            movsd XMM4,QWORD PTR [RIP+.L_447aa8]
            movsd QWORD PTR [RSP+8],XMM8
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+72],XMM8
            movsd QWORD PTR [RSP+88],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_447ac8]
            movsd QWORD PTR [RSP],XMM4
            movapd XMM3,XMM2
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+56],XMM9
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP+104],XMM8
            movsd QWORD PTR [RSP+120],XMM8
            movsd QWORD PTR [RSP+168],XMM8
            subsd XMM3,XMM6
            subsd XMM3,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM3
            mulsd XMM2,XMM7
            subsd XMM2,XMM6
            addsd XMM2,XMM5
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447ac0]
            movsd QWORD PTR [RSP+80],XMM2
            movsd QWORD PTR [RSP+96],XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EDX
            addsd XMM3,XMM2
            mulsd XMM2,XMM7
            mulsd XMM3,XMM7
            subsd XMM2,XMM6
            subsd XMM3,XMM6
            subsd XMM2,XMM5
            addsd XMM3,XMM5
            movsd QWORD PTR [RSP+144],XMM2
            movsd QWORD PTR [RSP+160],XMM2
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+128],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447ad0]
            movsd QWORD PTR [RSP+136],XMM3
            movsd QWORD PTR [RSP+152],XMM3
            movsd QWORD PTR [RSP+176],XMM4
            movsd QWORD PTR [RSP+184],XMM8
            call .L_404c90
.L_404f4f:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404f91

            add RSP,312
.L_404f69:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_404f70:

            mov RDI,RSP
            lea RSI,QWORD PTR [RIP+.L_447860]
            mov ECX,36

            rep movsq 

            mov RSI,RSP
            mov EDI,18
            call .L_404c90

            jmp .L_404f4f
.L_404f91:

            call __stack_chk_fail@PLT
.L_404f96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404fa0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967281
            call .L_404200

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_404fc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404fd0:

            push RBX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_404dd0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_405010

            add RSP,16
            movapd XMM0,XMM3
            pop RBX
            movapd XMM1,XMM2
            jmp .L_404860
          .byte 0x90
.L_405010:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_404fa0
.L_40501a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405020:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_40502b:

            mov RAX,QWORD PTR [RDI+32]
            mov EDI,1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            mov EBP,DWORD PTR [RAX+4]
            mov EBX,DWORD PTR [RAX]
            mov EDX,EBP
            mov ESI,EBX
            call .L_404dd0

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_405080

            movapd XMM1,XMM3
            mov ESI,EBP
            movapd XMM0,XMM2
            mov EDI,EBX
            mov EDX,1
            call .L_4043e0

            add RSP,16
.L_405076:

            pop RBX
            pop RBP
            pop R12
            jmp .L_404860
          .byte 0x90
.L_405080:

            add RSP,16
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            jmp .L_404fa0
.L_405090:

            push RBX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,16
.L_40509e:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_404dd0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_4050f8

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            call .L_404860

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            mov RDI,QWORD PTR [RAX+16]
            call .L_442d40

            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
.L_4050e9:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4050f8:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_404fa0
.L_405105:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405110:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_40511b:

            mov RAX,QWORD PTR [RDI+32]
            mov EDI,1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            mov R12D,DWORD PTR [RAX+4]
            mov EBP,DWORD PTR [RAX]
            mov EDX,R12D
            mov ESI,EBP
            call .L_404dd0

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_4051a0

            movapd XMM0,XMM2
            mov ESI,R12D
            movapd XMM1,XMM3
            mov EDI,EBP
            mov EDX,1
            call .L_4043e0

            call .L_404860

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            mov RDI,QWORD PTR [RAX+16]
            call .L_442d40

            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
.L_405189:

            movapd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4051a0:

            add RSP,16
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_404fa0
.L_4051b0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4051b9:

            mov RBP,QWORD PTR [RDI+32]
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RBX+168]
            subsd XMM2,QWORD PTR [RBX+176]
            call .L_445250

            divsd XMM0,QWORD PTR [RBP+8]
            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_4470f0]
            jbe .L_40520c

            pxor XMM1,XMM1
            ucomisd XMM0,XMM1
            jbe .L_405220

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
.L_40520c:

            add RSP,8
.L_405210:

            pop RBX
            pop RBP
            jmp asin@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405220:

            ucomisd XMM1,XMM0
            ja .L_405230

            pxor XMM0,XMM0
            jmp .L_40520c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405230:

            movsd XMM0,QWORD PTR [RIP+.L_447a58]
            jmp .L_40520c
.L_40523a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405240:

            push RBX
            sub RSP,16
            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call .L_4051b0

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            call .L_404a70

            mov ESI,DWORD PTR [RBX+4]
            mov EDI,DWORD PTR [RBX]
            add RSP,16
            pop RBX
            xor EDX,EDX
            jmp .L_4043e0
.L_40527c:

            nop
            nop
            nop
            nop
.L_405280:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call .L_4051b0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            jmp .L_404a70
.L_4052aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4052b0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_4052c3:

            call .L_403740

            test RAX,RAX
            je .L_4053a0

            pxor XMM3,XMM3
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_405310

            jne .L_405310

            lea RAX,QWORD PTR [RIP+.L_404c60]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_404fd0]
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_405306:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405310:

            movsd QWORD PTR [RSP],XMM3
            call .L_442cb0

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP+16],RAX
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            call .L_445250

            movsd QWORD PTR [RBP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4053ae
.L_40535f:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_405280]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405090]
            divsd XMM4,XMM1
            mov QWORD PTR [RBX+48],RAX
            movsd QWORD PTR [RBX+128],XMM1
            mov RAX,RBX
            movsd QWORD PTR [RBX+144],XMM4
            add RSP,24
.L_40539c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4053a0:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_404810
.L_4053ae:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_40535f
.L_4053cb:

            nop
            nop
            nop
            nop
            nop
.L_4053d0:

            test RDI,RDI
            je .L_4053e0

            jmp .L_4052b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4053e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_40540e

            lea RDX,QWORD PTR [RIP+.L_404850]
            lea RCX,QWORD PTR [RIP+.L_4479e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_40540e:

            add RSP,8
            ret 
.L_405413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405420:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_405433:

            call .L_403740

            test RAX,RAX
            je .L_4054c5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4479f6]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447a04]
            mov DWORD PTR [RBP],EAX
            call .L_403e60

            cmp DWORD PTR [RBP],3
            mov DWORD PTR [RBP+4],EAX
            ja .L_4054b8

            cmp EAX,3
            ja .L_4054b8

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_4054d8

            jne .L_4054d8

            lea RAX,QWORD PTR [RIP+.L_404c70]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405020]
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_4054ad:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4054b8:

            mov ESI,4294967249
            mov RDI,RBX
            call .L_413c90
.L_4054c5:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_404810
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4054d8:

            movsd QWORD PTR [RSP],XMM3
            call .L_442cb0

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP+16],RAX
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            call .L_445250

            movsd QWORD PTR [RBP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_405567
.L_405527:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_405240]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405110]
            divsd XMM4,XMM1
            mov QWORD PTR [RBX+48],RAX
            movsd QWORD PTR [RBX+128],XMM1
            mov RAX,RBX
            movsd QWORD PTR [RBX+144],XMM4
            add RSP,24
.L_405564:

            pop RBX
            pop RBP
            ret 
.L_405567:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_405527
.L_405584:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405590:

            test RDI,RDI
            je .L_4055a0

            jmp .L_405420
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4055a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4055ce

            lea RDX,QWORD PTR [RIP+.L_404850]
            lea RCX,QWORD PTR [RIP+.L_4479a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4055ce:

            add RSP,8
            ret 
.L_4055d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4055e0:

            xor EAX,EAX
            ret 
.L_4055e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4055f0:

            xor EAX,EAX
            ret 
.L_4055f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405600:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_447b10]
            mulsd XMM3,XMM1
            movapd XMM4,XMM3
            mulsd XMM2,XMM3
            movapd XMM5,XMM3
            mulsd XMM4,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_447b18]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_447b48]
            mulsd XMM5,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_447b20]
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447b28]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_447b30]
            mulsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447b38]
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447b40]
            addsd XMM2,XMM5
            mulsd XMM2,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_447b50]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_447b58]
            mulsd XMM1,XMM2
            ret 
.L_405695:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4056a0:

            test RDI,RDI
            je .L_4056b0

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4056b0:

            ret 
.L_4056b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4056c0:

            sub RSP,24
.L_4056c4:

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447b60]
            ucomisd XMM1,XMM0
            ja .L_405858

            movsd XMM2,QWORD PTR [RIP+.L_447b68]
            movapd XMM0,XMM1
            cmpnltsd XMM0,XMM2
            andpd XMM1,XMM0
            andnpd XMM0,XMM2
            orpd XMM1,XMM0
.L_4056f8:

            movapd XMM6,XMM1
            mov EAX,100
            movsd XMM15,QWORD PTR [RIP+.L_447b38]
            movsd XMM14,QWORD PTR [RIP+.L_447b40]
            movsd XMM13,QWORD PTR [RIP+.L_447b48]
            movsd XMM12,QWORD PTR [RIP+.L_447b50]
            movsd XMM7,QWORD PTR [RIP+.L_447b58]
            movsd XMM11,QWORD PTR [RIP+.L_447b70]
            movsd XMM10,QWORD PTR [RIP+.L_447b78]
            movq XMM9,QWORD PTR [RIP+.L_447130]
            movsd XMM8,QWORD PTR [RIP+.L_447b90]
            jmp .L_405761
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405758:

            sub EAX,1
            je .L_405868
.L_405761:

            movapd XMM2,XMM6
            movsd XMM5,QWORD PTR [RIP+.L_447b80]
            mulsd XMM2,XMM6
            movapd XMM3,XMM2
            movapd XMM0,XMM2
            mulsd XMM3,XMM2
            mulsd XMM0,XMM15
            movapd XMM4,XMM3
            mulsd XMM5,XMM3
            subsd XMM0,XMM14
            mulsd XMM4,XMM13
            addsd XMM0,XMM4
            movapd XMM4,XMM2
            mulsd XMM4,XMM11
            mulsd XMM0,XMM3
            subsd XMM4,XMM10
            addsd XMM0,XMM12
            addsd XMM4,XMM5
            mulsd XMM0,XMM2
            mulsd XMM3,XMM4
            addsd XMM0,XMM7
            addsd XMM3,QWORD PTR [RIP+.L_447b88]
            mulsd XMM0,XMM6
            mulsd XMM2,XMM3
            subsd XMM0,XMM1
            addsd XMM2,XMM7
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            andpd XMM0,XMM9
            ucomisd XMM8,XMM0
            jbe .L_405758
.L_4057ef:

            movapd XMM1,XMM6
            movsd XMM2,QWORD PTR [RIP+.L_447b10]
            mulsd XMM1,XMM6
            movsd XMM7,QWORD PTR [RSP]
            movapd XMM0,XMM1
            mulsd XMM2,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_447b18]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_447b20]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_447b28]
            mulsd XMM0,XMM1
            movapd XMM1,XMM6
            addsd XMM0,QWORD PTR [RIP+.L_447b30]
            add RSP,24
.L_405848:

            divsd XMM7,XMM0
            movapd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405858:

            movapd XMM1,XMM0
            jmp .L_4056f8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405868:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM6
            call .L_404200

            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4057ef
.L_405886:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405890:

            test RDI,RDI
            je .L_4058c0

            lea RAX,QWORD PTR [RIP+.L_4056c0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_405600]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4058c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4058ee

            lea RDX,QWORD PTR [RIP+.L_4056a0]
            lea RCX,QWORD PTR [RIP+.L_447af0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4058ee:

            add RSP,8
            ret 
.L_4058f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405900:

            lea RDX,QWORD PTR [RIP+.L_4056c0]
            lea RCX,QWORD PTR [RIP+.L_405600]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_405925:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405930:

            xor EAX,EAX
            ret 
.L_405933:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405940:

            movapd XMM2,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_447bc0]
            mulsd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_447bd0]
            movapd XMM4,XMM2
            mulsd XMM3,XMM2
            movapd XMM5,XMM2
            mulsd XMM4,XMM2
            subsd XMM3,QWORD PTR [RIP+.L_447bc8]
            mulsd XMM6,XMM4
            mulsd XMM5,XMM4
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_447bd8]
            mulsd XMM6,XMM5
            mulsd XMM5,XMM5
            addsd XMM3,XMM6
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_447be0]
            mulsd XMM5,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_447bf0]
            addsd XMM5,QWORD PTR [RIP+.L_447be8]
            subsd XMM2,QWORD PTR [RIP+.L_447bf8]
            addsd XMM3,XMM5
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447c00]
            mulsd XMM3,XMM4
            mulsd XMM4,XMM4
            addsd XMM2,XMM3
            mulsd XMM2,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_447c08]
            mulsd XMM1,XMM2
            ret 
.L_4059e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4059f0:

            test RDI,RDI
            je .L_405a00

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405a00:

            ret 
.L_405a02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405a10:

            sub RSP,24
.L_405a14:

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447c10]
            ucomisd XMM1,XMM0
            ja .L_405ba0

            movsd XMM2,QWORD PTR [RIP+.L_447c18]
            movapd XMM0,XMM1
            cmpnltsd XMM0,XMM2
            andpd XMM1,XMM0
            andnpd XMM0,XMM2
            orpd XMM1,XMM0
.L_405a48:

            movapd XMM6,XMM1
            mov EAX,100
            movsd XMM15,QWORD PTR [RIP+.L_447bf0]
            movsd XMM14,QWORD PTR [RIP+.L_447bf8]
            movsd XMM13,QWORD PTR [RIP+.L_447c00]
            movsd XMM7,QWORD PTR [RIP+.L_447c08]
            movsd XMM12,QWORD PTR [RIP+.L_447c20]
            movsd XMM11,QWORD PTR [RIP+.L_447c28]
            movsd XMM10,QWORD PTR [RIP+.L_447c30]
            movq XMM9,QWORD PTR [RIP+.L_447130]
            movsd XMM8,QWORD PTR [RIP+.L_447b90]
            jmp .L_405ab1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405aa8:

            sub EAX,1
            je .L_405bb0
.L_405ab1:

            movapd XMM2,XMM6
            mulsd XMM2,XMM6
            movapd XMM4,XMM2
            movapd XMM0,XMM2
            mulsd XMM4,XMM2
            mulsd XMM0,XMM15
            mulsd XMM2,XMM12
            movapd XMM5,XMM4
            subsd XMM0,XMM14
            movapd XMM3,XMM4
            mulsd XMM5,XMM13
            subsd XMM2,XMM11
            mulsd XMM3,XMM4
            mulsd XMM4,XMM10
            addsd XMM0,XMM5
            addsd XMM2,XMM4
            mulsd XMM0,XMM3
            mulsd XMM2,XMM3
            addsd XMM0,XMM7
            addsd XMM2,XMM7
            mulsd XMM0,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            andpd XMM0,XMM9
            ucomisd XMM8,XMM0
            jbe .L_405aa8
.L_405b23:

            movapd XMM1,XMM6
            movsd XMM0,QWORD PTR [RIP+.L_447bc0]
            mulsd XMM1,XMM6
            movsd XMM7,QWORD PTR [RSP]
            movapd XMM3,XMM1
            mulsd XMM0,XMM1
            movapd XMM2,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_447be0]
            subsd XMM0,QWORD PTR [RIP+.L_447bc8]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RIP+.L_447bd0]
            addsd XMM1,QWORD PTR [RIP+.L_447be8]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447bd8]
            add RSP,24
.L_405b7c:

            mulsd XMM3,XMM2
            mulsd XMM2,XMM2
            addsd XMM0,XMM3
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            movapd XMM1,XMM6
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405ba0:

            movapd XMM1,XMM0
            jmp .L_405a48
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405bb0:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM6
            call .L_404200

            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_405b23
.L_405bce:

            nop
            nop
.L_405bd0:

            test RDI,RDI
            je .L_405c00

            lea RAX,QWORD PTR [RIP+.L_405a10]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_405940]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_405c2e

            lea RDX,QWORD PTR [RIP+.L_4059f0]
            lea RCX,QWORD PTR [RIP+.L_447ba0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_405c2e:

            add RSP,8
            ret 
.L_405c33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405c40:

            lea RDX,QWORD PTR [RIP+.L_405a10]
            lea RCX,QWORD PTR [RIP+.L_405940]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_405c65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405c70:

            xor EAX,EAX
            ret 
.L_405c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405c80:

            jmp .L_403770
.L_405c85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405c90:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd XMM3,QWORD PTR [RDI+144]
            movsd XMM2,QWORD PTR [RIP+.L_447c90]
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_447c78]
            mulsd XMM0,QWORD PTR [RIP+.L_447c80]
            subsd XMM1,QWORD PTR [RIP+.L_447c98]
            mulsd XMM0,QWORD PTR [RIP+.L_447c88]
            mulsd XMM1,QWORD PTR [RIP+.L_447ca0]
            subsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_447ca8]
            movapd XMM0,XMM2
            movapd XMM4,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            subsd XMM4,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd QWORD PTR [RSP],XMM4
            call tan@PLT

            call log@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov DWORD PTR [RBX+304],1
            movapd XMM5,XMM0
            subsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_447cb8]
            subsd XMM5,QWORD PTR [RIP+.L_447cb0]
            movsd XMM0,QWORD PTR [RIP+.L_447cc8]
            divsd XMM2,QWORD PTR [RIP+.L_447cc0]
            mulsd XMM1,XMM5
            addsd XMM1,XMM2
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP]
            add RSP,16

            pop RBX
            ret 
.L_405d83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405d90:

            sub RSP,40
.L_405d94:

            movapd XMM2,XMM0
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM0
            jae .L_405f00

            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RDI+328]
            mov QWORD PTR [RSP+16],RDI
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM3,QWORD PTR [RIP+.L_447cb0]
            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            addsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RIP+.L_447cb8]
            xorpd XMM2,XMM4
            subsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447cd8]
            mulsd XMM2,QWORD PTR [RIP+.L_447c88]
            mulsd XMM2,QWORD PTR [RIP+.L_447ca8]
            addsd XMM0,XMM2
            xorpd XMM0,XMM4
            call exp@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            movsd XMM1,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_447ce0]
            mov RAX,QWORD PTR [RIP+.L_4470f0]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447c78]
            mov QWORD PTR [RDI+128],RAX
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            movapd XMM3,XMM2
            subsd XMM2,XMM1
            subsd XMM3,QWORD PTR [RIP+.L_447c90]
            movapd XMM1,XMM2
            mulsd XMM1,XMM4
            mulsd XMM3,XMM4
            mulsd XMM1,QWORD PTR [RIP+.L_447cf0]
            mulsd XMM3,QWORD PTR [RIP+.L_447ce8]
            divsd XMM1,QWORD PTR [RIP+.L_447ca8]
            divsd XMM3,QWORD PTR [RIP+.L_447c88]
            addsd XMM1,QWORD PTR [RIP+.L_447c98]
            add RSP,40
.L_405ef2:

            subsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405f00:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,40
            movapd XMM1,XMM0
            ret 
.L_405f17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405f20:

            push RBX
            movapd XMM2,XMM0
            mov RBX,RDI
            sub RSP,32
.L_405f2c:

            movsd XMM3,QWORD PTR [RDI+144]
            movsd XMM0,QWORD PTR [RIP+.L_447c90]
            divsd XMM2,XMM3
            movapd XMM4,XMM0
            divsd XMM1,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447c78]
            mulsd XMM2,QWORD PTR [RIP+.L_447c80]
            subsd XMM1,QWORD PTR [RIP+.L_447c98]
            mulsd XMM2,QWORD PTR [RIP+.L_447c88]
            mulsd XMM1,QWORD PTR [RIP+.L_447ca0]
            subsd XMM4,XMM2
            movsd XMM2,QWORD PTR [RDI+168]
            mulsd XMM1,QWORD PTR [RIP+.L_447ca8]
            movapd XMM5,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            subsd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447cf8]
            movsd QWORD PTR [RSP+8],XMM5
            call .L_445330

            call log@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM4
            call .L_445330

            call log@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_445330

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mov DWORD PTR [RBX+304],1
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM3,XMM0
            subsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RIP+.L_447cb8]
            divsd XMM0,QWORD PTR [RIP+.L_447cc0]
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cc8]
            add RSP,32
.L_40604c:

            pop RBX
            subsd XMM0,XMM3
            ret 
.L_406052:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406060:

            push RBX
            movapd XMM3,XMM1
            movapd XMM5,XMM0
            mov RBX,RDI
            sub RSP,48
.L_406070:

            movapd XMM0,XMM3
            movq XMM1,QWORD PTR [RIP+.L_447130]
            andpd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM1,XMM0
            jae .L_406220

            movsd XMM2,QWORD PTR [RDI+328]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call .L_445330

            call log@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_447cf8]
            movsd XMM0,QWORD PTR [RIP+.L_447c90]
            call .L_445330

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RSP+24]
            addsd XMM2,XMM5
            movq XMM5,QWORD PTR [RIP+.L_447ae0]
            subsd XMM4,XMM6
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+16],XMM1
            xorpd XMM2,XMM5
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cb8]
            mulsd XMM2,XMM4
            subsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_447cd8]
            mulsd XMM0,QWORD PTR [RIP+.L_447c88]
            mulsd XMM0,QWORD PTR [RIP+.L_447ca8]
            subsd XMM0,XMM6
            xorpd XMM0,XMM5
            call exp@PLT

            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_444e90

            movapd XMM4,XMM0
            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM0
            mov QWORD PTR [RBX+344],0
            subsd XMM4,QWORD PTR [RIP+.L_447c90]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RIP+.L_447ce0]
            mov QWORD PTR [RBX+128],RAX
            subsd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_447c78]
            mov QWORD PTR [RBX+352],0
            mulsd XMM4,XMM5
            mulsd XMM1,XMM5
            mulsd XMM4,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM1,QWORD PTR [RIP+.L_447cf0]
            divsd XMM4,QWORD PTR [RIP+.L_447c88]
            divsd XMM1,QWORD PTR [RIP+.L_447ca8]
            subsd XMM2,XMM4
            movapd XMM0,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_447c98]
            add RSP,48
.L_406218:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406220:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM2,XMM2
            add RSP,48
            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_40623c:

            nop
            nop
            nop
            nop
.L_406240:

            test RDI,RDI
            je .L_4062a0

            pxor XMM0,XMM0
            mov QWORD PTR [RDI+32],0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_40625d

            je .L_406280
.L_40625d:

            lea RAX,QWORD PTR [RIP+.L_405f20]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_406060]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406280:

            lea RAX,QWORD PTR [RIP+.L_405c90]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_405d90]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4062a0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4062ce

            lea RDX,QWORD PTR [RIP+.L_405c80]
            lea RCX,QWORD PTR [RIP+.L_447c40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4062ce:

            add RSP,8
            ret 
.L_4062d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4062e0:

            pxor XMM0,XMM0
            mov RAX,RDI
            mov QWORD PTR [RDI+32],0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_406318

            jne .L_406318

            lea RDX,QWORD PTR [RIP+.L_405c90]
            lea RCX,QWORD PTR [RIP+.L_405d90]
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406318:

            lea RSI,QWORD PTR [RIP+.L_405f20]
            mov QWORD PTR [RAX+48],RSI
            lea RSI,QWORD PTR [RIP+.L_406060]
            mov QWORD PTR [RAX+40],RSI
            ret 
.L_40632f:

            nop
.L_406330:

            xor EAX,EAX
            ret 
.L_406333:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406340:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            call fclose@PLT

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_406356:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406360:

            mov RDI,QWORD PTR [RDI+8]
            jmp ftell@PLT
.L_406369:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406370:

            mov RDI,QWORD PTR [RDI+8]
            jmp fseek@PLT
.L_406379:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406380:

            mov RCX,QWORD PTR [RCX+8]
            jmp fread@PLT
.L_406389:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406390:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RSI,RDX
            sub RSP,8
            call fopen@PLT

            test RAX,RAX
            je .L_4063c8

            mov RBX,RAX
            mov EDI,16
            call malloc@PLT

            mov QWORD PTR [RAX+8],RBX
            mov QWORD PTR [RAX],RBP
.L_4063bd:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4063c8:

            xor EAX,EAX
            jmp .L_4063bd
.L_4063cc:

            nop
            nop
            nop
            nop
.L_4063d0:

            lea RAX,QWORD PTR [RIP+.L_65cdc0]
            ret 
.L_4063d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4063e0:

            mov RAX,QWORD PTR [RDI+24]
            jmp QWORD PTR [RAX]
.L_4063e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4063f0:

            mov RAX,QWORD PTR [RDI+24]
            mov R9,RSI
            mov RSI,RDX
            mov RDI,R9
            mov RDX,RCX
            mov RCX,R8
            mov RAX,QWORD PTR [RAX+8]
            jmp RAX
.L_406409:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406410:

            mov RAX,QWORD PTR [RDI+24]
            mov R8,RSI
            mov RSI,RDX
            mov RDI,R8
            mov EDX,ECX
            mov RAX,QWORD PTR [RAX+16]
            jmp RAX
.L_406425:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406430:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RSI
            mov RAX,QWORD PTR [RAX+24]
            jmp RAX
.L_40643d:

            nop
            nop
            nop
.L_406440:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RSI
            mov RAX,QWORD PTR [RAX+32]
            jmp RAX
.L_40644d:

            nop
            nop
            nop
.L_406450:

            push R15
            push R14
            movsxd R15,EDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RCX
            sub RSP,8
.L_40646a:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RCX
            call QWORD PTR [RAX+24]

            mov BYTE PTR [RBX+R15*1-1],0
            mov R12,RAX
            mov RAX,QWORD PTR [R13+24]
            lea EDX,DWORD PTR [R15-1]
            mov RCX,RBP
            mov ESI,1
            mov RDI,RBX
            movsxd RDX,EDX
            call QWORD PTR [RAX+8]

            test RAX,RAX
            je .L_406510

            cmp R15,RAX
            mov R14,R15
            ja .L_4064e8
.L_4064a3:

            cmp R14D,2
            jle .L_4064d3

            cmp BYTE PTR [RBX],10
            je .L_406518

            lea EDX,DWORD PTR [R14-3]
            mov EAX,1
            add RDX,1
            jmp .L_4064cb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4064c0:

            add RAX,1
            cmp BYTE PTR [RBX+RAX*1-1],10
            je .L_4064f0
.L_4064cb:

            cmp RDX,RAX
            movsxd RCX,EAX
            jne .L_4064c0
.L_4064d3:

            add RSP,8
.L_4064d7:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
.L_4064e8:

            mov BYTE PTR [RBX+RAX*1],0
            jmp .L_4064a3
          .byte 0x66
          .byte 0x90
.L_4064f0:

            add R12,RCX
.L_4064f3:

            mov BYTE PTR [RBX+RAX*1],0
            mov RAX,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [R12+1]
            xor EDX,EDX
            mov RDI,RBP
            call QWORD PTR [RAX+16]

            jmp .L_4064d3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406510:

            xor EBX,EBX
            jmp .L_4064d3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406518:

            mov EAX,1
            jmp .L_4064f3
.L_40651f:

            nop
.L_406520:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40652a:

            mov RBX,QWORD PTR [RIP+.L_65dd80]
            test RBX,RBX
            je .L_40659b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406540:

            mov EAX,DWORD PTR [RBX+40]
            mov R13,QWORD PTR [RBX+56]
            test EAX,EAX
            mov QWORD PTR [RIP+.L_65dd80],R13
            jle .L_40657a

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406560:

            mov RAX,QWORD PTR [RBX+48]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R12*1+48]
            add R12,72
            call free@PLT

            cmp DWORD PTR [RBX+40],EBP
            jg .L_406560
.L_40657a:

            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,R13
            call free@PLT

            test R13,R13
            jne .L_406540
.L_40659b:

            add RSP,8
.L_40659f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4065a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4065b0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RSI
            call .L_40b910

            mov RBX,QWORD PTR [RIP+.L_65dd80]
            test RBX,RBX
            jne .L_4065d9

            jmp .L_4065f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4065d0:

            mov RBX,QWORD PTR [RBX+56]
            test RBX,RBX
            je .L_4065f8
.L_4065d9:

            mov RDI,QWORD PTR [RBX]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_4065d0
.L_4065e8:

            call .L_40b9b0
.L_4065ed:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4065f8:

            call .L_40b9b0

            mov RSI,RBP
            mov RDI,R12
            call .L_445f30

            test RAX,RAX
            mov RBX,RAX
            je .L_4065ed

            call .L_40b910

            mov RAX,QWORD PTR [RIP+.L_65dd80]
            mov QWORD PTR [RIP+.L_65dd80],RBX
            mov QWORD PTR [RBX+56],RAX
            jmp .L_4065e8
.L_406629:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406630:

            push RBX
            sub RSP,16
.L_406635:

            mov R9D,DWORD PTR [RSI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test R9D,R9D
            jle .L_406738

            mov RAX,QWORD PTR [RSI+48]
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406660:

            test EDX,EDX
            mov RBX,RAX
            movsd XMM3,QWORD PTR [RAX+40]
            jne .L_4066d8

            ucomisd XMM3,XMM2
            ja .L_4066e0
.L_406672:

            movsd XMM3,QWORD PTR [RAX]
            ucomisd XMM3,XMM0
            ja .L_4066e0

            ucomisd XMM0,QWORD PTR [RAX+16]
            ja .L_4066e0

            movsd XMM3,QWORD PTR [RAX+8]
            ucomisd XMM3,XMM1
            ja .L_4066e0

            ucomisd XMM1,QWORD PTR [RAX+24]
            ja .L_4066e0

            cmp DWORD PTR [RAX+64],-1
            je .L_4066e0
.L_40669b:

            cmp R9D,ESI
            je .L_4066f0

            test R8,R8
            je .L_4066af

            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [R8],XMM0
.L_4066af:

            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_406710
.L_4066b8:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40674d

            add RSP,16
.L_4066d0:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4066d8:

            ucomisd XMM2,XMM3
            jbe .L_406672

            nop
            nop
.L_4066e0:

            add ESI,1
            add RAX,72
            cmp ESI,R9D
            jne .L_406660
.L_4066f0:

            test R8,R8
            je .L_4066fc

            mov QWORD PTR [R8],0
.L_4066fc:

            xor EAX,EAX
            test RCX,RCX
            je .L_4066b8

            pxor XMM0,XMM0
            movups XMMWORD PTR [RCX],XMM0
            movups XMMWORD PTR [RCX+16],XMM0
            jmp .L_4066b8
.L_406710:

            mov RSI,QWORD PTR [RBX+48]
            lea RDX,QWORD PTR [RSP+4]
            mov DWORD PTR [RSP+4],0
            call .L_40b610

            cmp DWORD PTR [RSP+4],1
            je .L_406741

            mov RAX,QWORD PTR [RBX+56]
            jmp .L_4066b8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406738:

            xor ESI,ESI
            xor EBX,EBX
            jmp .L_40669b
.L_406741:

            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+56],RAX
            jmp .L_4066b8
.L_40674d:

            call __stack_chk_fail@PLT
.L_406752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406760:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14D,ESI
            push RBP
            push RBX
            sub RSP,56
.L_406774:

            cmp QWORD PTR [R15+528],0
            mov RDI,QWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            je .L_406b28
.L_40678a:

            cmp QWORD PTR [RSP+24],0
            mov DWORD PTR [RDI],0
            jle .L_4069be

            movsxd RCX,ECX
            mov RBP,R9
            mov RBX,R8
            lea R13,QWORD PTR [RCX*8]
            xor R12D,R12D
.L_4067b0:

            mov RDX,QWORD PTR [R15+592]
            movsd XMM7,QWORD PTR [RBP]
            movsd XMM6,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM7
            test RDX,RDX
            movsd QWORD PTR [RSP],XMM6
            je .L_406800

            movsd XMM0,QWORD PTR [R15+600]
            ucomisd XMM0,XMM6
            ja .L_406800

            ucomisd XMM6,QWORD PTR [R15+616]
            ja .L_406800

            movsd XMM0,QWORD PTR [R15+608]
            ucomisd XMM0,XMM7
            ja .L_406800

            ucomisd XMM7,XMM0
            jbe .L_406849

            nop
.L_406800:

            mov RSI,QWORD PTR [R15+528]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [R15+600]
            lea R8,QWORD PTR [R15+632]
            movsd XMM2,QWORD PTR [R15+536]
            movsd XMM0,QWORD PTR [RSP]
            mov EDX,1
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_406630

            test RAX,RAX
            mov RDX,RAX
            mov QWORD PTR [R15+592],RAX
            je .L_406a19
.L_406849:

            cmp QWORD PTR [RDX+48],0
            jne .L_406b6c

            mov RSI,QWORD PTR [RDX+32]
            cmp QWORD PTR [RSI+120],0
            je .L_406a80
.L_406863:

            movsd XMM0,QWORD PTR [RSP]
            mov EDI,R14D
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_406bb0

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movapd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM1
            ja .L_406a40

            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [R15+536]
            ucomisd XMM2,XMM4
            jp .L_4068a7

            je .L_406aa8
.L_4068a7:

            mov RDX,QWORD PTR [R15+544]
            test RDX,RDX
            je .L_4069d0

            movsd XMM0,QWORD PTR [R15+552]
            movsd XMM5,QWORD PTR [RSP]
            ucomisd XMM0,XMM5
            ja .L_4069d0

            ucomisd XMM5,QWORD PTR [R15+568]
            ja .L_4069d0

            movsd XMM0,QWORD PTR [R15+560]
            movsd XMM4,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM4
            ja .L_4069d0

            ucomisd XMM4,XMM0
            ja .L_4069d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406908:

            cmp QWORD PTR [RDX+48],0
            jne .L_406b8b

            mov RSI,QWORD PTR [RDX+32]
            cmp QWORD PTR [RSI+120],0
            je .L_406af0
.L_406922:

            movsd XMM0,QWORD PTR [RSP]
            mov EDI,R14D
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            call .L_406bb0

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movsd XMM3,QWORD PTR [RSP+32]
            ja .L_406ac0

            movsd XMM5,QWORD PTR [R15+584]
            movsd XMM2,QWORD PTR [R15+536]
            movsd XMM4,QWORD PTR [R15+632]
            subsd XMM2,XMM5
            subsd XMM4,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            divsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM5,XMM2
            mulsd XMM4,XMM2
            mulsd XMM3,XMM2
            mulsd XMM1,XMM5
            mulsd XMM5,XMM0
            addsd XMM4,XMM1
            addsd XMM3,XMM5
            movsd QWORD PTR [RBP],XMM4
            movsd QWORD PTR [RBX],XMM3
.L_4069a9:

            add R12,1
            add RBP,R13
            add RBX,R13
            cmp R12,QWORD PTR [RSP+24]
            jne .L_4067b0
.L_4069be:

            add RSP,56
.L_4069c2:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4069d0:

            mov RSI,QWORD PTR [R15+528]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [R15+552]
            lea R8,QWORD PTR [R15+584]
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            xor EDX,EDX
            movsd QWORD PTR [RSP+32],XMM3
            call .L_406630

            test RAX,RAX
            mov RDX,RAX
            mov QWORD PTR [R15+544],RAX
            movsd XMM3,QWORD PTR [RSP+32]
            jne .L_406908
.L_406a19:

            mov RDI,QWORD PTR [R15]
            mov ESI,4294967258
            call .L_404200

            mov EAX,4294967258
.L_406a2b:

            add RSP,56
.L_406a2f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406a40:

            mov RDI,QWORD PTR [R15]
            cmp DWORD PTR [RDI+4],1
            jle .L_4069a9

            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            movsd XMM0,QWORD PTR [RBX]
            mulsd XMM0,XMM1
.L_406a5d:

            mulsd XMM1,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_447d28]
            mov ESI,2
            mov EAX,2
            call .L_404320

            jmp .L_4069a9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406a80:

            mov RDI,QWORD PTR [R15]
            mov RSI,RDX
            mov QWORD PTR [RSP+16],RDX
            call .L_4098e0

            test EAX,EAX
            je .L_406a19

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RDX+32]
            jmp .L_406863
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406aa8:

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM4
            movsd QWORD PTR [RBX],XMM0
            jmp .L_4069a9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406ac0:

            mov RDI,QWORD PTR [R15]
            cmp DWORD PTR [RDI+4],1
            jle .L_4069a9

            movsd XMM0,QWORD PTR [RIP+.L_447ce0]
            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mulsd XMM0,QWORD PTR [RBX]
            jmp .L_406a5d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406af0:

            mov RDI,QWORD PTR [R15]
            mov RSI,RDX
            movsd QWORD PTR [RSP+40],XMM3
            mov QWORD PTR [RSP+32],RDX
            call .L_4098e0

            test EAX,EAX
            je .L_406a19

            mov RDX,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RDX+32]
            jmp .L_406922
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b28:

            mov RSI,QWORD PTR [R15+520]
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            mov DWORD PTR [RSP],ECX
            call .L_4065b0

            test RAX,RAX
            mov QWORD PTR [R15+528],RAX
            je .L_406b62

            mov RDI,QWORD PTR [R15]
            mov ECX,DWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            jmp .L_40678a
.L_406b62:

            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            jmp .L_406a2b
.L_406b6c:

            lea RCX,QWORD PTR [RIP+.L_447da0]
            lea RSI,QWORD PTR [RIP+.L_447d00]
            lea RDI,QWORD PTR [RIP+.L_447d11]
            mov EDX,147
            call __assert_fail@PLT
.L_406b8b:

            lea RCX,QWORD PTR [RIP+.L_447da0]
            lea RSI,QWORD PTR [RIP+.L_447d00]
            lea RDI,QWORD PTR [RIP+.L_447d11]
            mov EDX,196
            call __assert_fail@PLT
.L_406baa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406bb0:

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            jbe .L_406bc0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406bc0:

            push RBP
            push RBX
            mov EBP,EDI
            movapd XMM6,XMM1
            mov RBX,RSI
            sub RSP,40
.L_406bcf:

            movsd QWORD PTR [RSP+8],XMM0
            subsd XMM0,QWORD PTR [RSI+80]
            subsd XMM6,QWORD PTR [RSI+88]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,QWORD PTR [RIP+.L_447a78]
            movsd QWORD PTR [RSP],XMM6
            call .L_442820

            addsd XMM0,QWORD PTR [RIP+.L_447a78]
            movsd XMM1,QWORD PTR [RSP]
            mov RDI,RBX
            movsd QWORD PTR [RSP+24],XMM0
            call .L_406dd0

            test EBP,EBP
            movapd XMM3,XMM0
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            je .L_406d30

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_406d46

            movsd XMM3,QWORD PTR [RSP+24]
            mov EBP,10
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM3,XMM0
            subsd XMM2,XMM1
            jmp .L_406c8c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406c60:

            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            jbe .L_406da8

            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_447e58]
            jbe .L_406da8
.L_406c8c:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call .L_406dd0

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            ja .L_406d58

            movapd XMM7,XMM3
            sub EBP,1
            addsd XMM1,XMM2
            subsd XMM7,XMM0
            subsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM7
            subsd XMM0,QWORD PTR [RSP+24]
            subsd XMM2,XMM1
            subsd XMM3,XMM0
            jne .L_406c60

            lea RDI,QWORD PTR [RIP+.L_44783c]
            call getenv@PLT

            test RAX,RAX
            je .L_406d1c

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_447e20]
            mov EDX,48
            mov ESI,1
            call fwrite@PLT
.L_406d1c:

            movsd XMM3,QWORD PTR [RIP+.L_4470e0]
            movapd XMM2,XMM3
            jmp .L_406d46
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d30:

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_406d46

            subsd XMM4,XMM0
            addsd XMM2,XMM5
            movapd XMM3,XMM4
.L_406d46:

            add RSP,40
.L_406d4a:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406d58:

            lea RDI,QWORD PTR [RIP+.L_44783c]
            movsd QWORD PTR [RSP],XMM3
            call getenv@PLT

            test RAX,RAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_406da8

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_447dc0]
            mov EDX,89
            mov ESI,1
            call fwrite@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406da8:

            addsd XMM3,QWORD PTR [RBX+80]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM3
            call .L_442820

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            addsd XMM2,QWORD PTR [RBX+88]
            jmp .L_406d46
.L_406dce:

            nop
            nop
.L_406dd0:

            divsd XMM0,QWORD PTR [RDI+96]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_447a80]
            movapd XMM5,XMM3
            movapd XMM4,XMM0
            movapd XMM2,XMM0
            andpd XMM4,XMM3
            ucomisd XMM6,XMM4
            jbe .L_406e2e

            cvttsd2si RAX,XMM0
            pxor XMM4,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM5,XMM0
            cvtsi2sd XMM4,RAX
            movapd XMM2,XMM4
            cmpnlesd XMM2,XMM0
            andpd XMM2,XMM7
            subsd XMM4,XMM2
            movapd XMM2,XMM4
            orpd XMM2,XMM5
.L_406e2e:

            divsd XMM1,QWORD PTR [RDI+104]
            cvttsd2si EAX,XMM2
            movapd XMM4,XMM1
            movapd XMM2,XMM1
            andpd XMM4,XMM3
            ucomisd XMM6,XMM4
            jbe .L_406e7c

            cvttsd2si RDX,XMM1
            pxor XMM4,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM3,XMM1
            cvtsi2sd XMM4,RDX
            movapd XMM2,XMM4
            cmpnlesd XMM2,XMM1
            andpd XMM2,XMM5
            subsd XMM4,XMM2
            movapd XMM2,XMM4
            orpd XMM2,XMM3
.L_406e7c:

            pxor XMM3,XMM3
            test EAX,EAX
            cvtsi2sd XMM3,EAX
            subsd XMM0,XMM3
            js .L_406f08

            lea EDX,DWORD PTR [RAX+1]
            cmp DWORD PTR [RDI+112],EDX
            jle .L_406ef0
.L_406e94:

            cvttsd2si EDX,XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EDX
            test EDX,EDX
            subsd XMM1,XMM2
            js .L_407028

            lea ECX,DWORD PTR [RDX+1]
            cmp DWORD PTR [RDI+116],ECX
            jg .L_406f28

            jne .L_406ef6

            movsd XMM2,QWORD PTR [RIP+.L_447b90]
            ucomisd XMM2,XMM1
            jbe .L_406ef6

            pxor XMM3,XMM3
            movapd XMM6,XMM0
            sub EDX,1
            movapd XMM4,XMM0
            pxor XMM2,XMM2
            mulsd XMM6,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM3
            jmp .L_406f48
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ef0:

            je .L_407000
.L_406ef6:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406f08:

            cmp EAX,-1
            jne .L_406ef6

            ucomisd XMM0,QWORD PTR [RIP+.L_447e60]
            jbe .L_406ef6

            xor EAX,EAX
            pxor XMM0,XMM0
            jmp .L_406e94
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406f28:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM4,XMM1
            movapd XMM6,XMM0
            movapd XMM2,XMM3
            mulsd XMM4,XMM0
            subsd XMM2,XMM1
            mulsd XMM6,XMM2
.L_406f48:

            mov ECX,DWORD PTR [RDI+112]
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            pxor XMM5,XMM5
            imul EDX,ECX
            mulsd XMM1,XMM3
            mulsd XMM3,XMM2
            add EAX,EDX
            mov RDX,QWORD PTR [RDI+120]
            cdqe 
            pxor XMM2,XMM2
            lea R8,QWORD PTR [RAX+1]
            lea RDI,QWORD PTR [RDX+RAX*8]
            movsxd RAX,ECX
            lea RSI,QWORD PTR [RDX+R8*8]
            add RAX,R8
            cvtss2sd XMM2,DWORD PTR [RDI+4]
            lea RCX,QWORD PTR [RDX+RAX*8]
            lea RAX,QWORD PTR [RDX+RAX*8-8]
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM2,XMM3
            cvtss2sd XMM5,DWORD PTR [RCX+4]
            mulsd XMM0,XMM6
            mulsd XMM5,XMM4
            addsd XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RAX+4]
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI]
            addsd XMM2,XMM5
            mulsd XMM0,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RSI]
            mulsd XMM3,XMM6
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX]
            mulsd XMM1,XMM3
            addsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM4,XMM1
            movapd XMM1,XMM2
            addsd XMM0,XMM4
            ret 
          .byte 0x66
          .byte 0x90
.L_407000:

            movsd XMM3,QWORD PTR [RIP+.L_447b90]
            ucomisd XMM3,XMM0
            jbe .L_406ef6

            sub EAX,1
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            jmp .L_406e94
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407028:

            cmp EDX,-1
            jne .L_406ef6

            ucomisd XMM1,QWORD PTR [RIP+.L_447e60]
            jbe .L_406ef6

            pxor XMM1,XMM1
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            xor EDX,EDX
            movapd XMM6,XMM0
            mulsd XMM4,XMM1
            movapd XMM2,XMM3
            jmp .L_406f48
.L_407062:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407070:

            lea RAX,QWORD PTR [RIP+.L_65cee0]
            ret 
.L_407078:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407080:

            lea RAX,QWORD PTR [RIP+.L_65ce00]
            ret 
.L_407088:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407090:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_4070a4:

            mov DWORD PTR [RDX+400],0
            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RIP+.L_448247]
            mov QWORD PTR [RSP],RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RCX
            xor ECX,ECX
            call .L_403e60

            test RAX,RAX
            je .L_407179

            test R14,R14
            mov R12,RAX
            je .L_407320

            mov RBX,QWORD PTR [R14]
            test RBX,RBX
            jne .L_4070fb

            jmp .L_407330
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4070f8:

            mov RBX,RAX
.L_4070fb:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_4070f8
.L_407103:

            mov RSI,QWORD PTR [RIP+.L_65cee0]
            xor R15D,R15D
            lea R13,QWORD PTR [RIP+.L_65cee0]
            test RSI,RSI
            jne .L_407139

            jmp .L_4071d0
          .byte 0x66
          .byte 0x90
.L_407120:

            add R15,1
            mov RAX,R15
            shl RAX,5
            mov RSI,QWORD PTR [R13+RAX*1]
            test RSI,RSI
            je .L_4071d0
.L_407139:

            mov RDI,R12
            movsxd RBP,R15D
            call strcmp@PLT

            test EAX,EAX
            jne .L_407120

            mov RAX,RBP
            shl RAX,5
            mov RSI,QWORD PTR [R13+RAX*1+16]
            test RSI,RSI
            je .L_407162

            cmp BYTE PTR [RSI],0
            jne .L_4071e8
.L_407162:

            shl RBP,5
            mov RDI,QWORD PTR [R13+RBP*1+8]
            test RDI,RDI
            je .L_407179
.L_407170:

            cmp BYTE PTR [RDI],0
            jne .L_407240
.L_407179:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_44824e]
            mov RSI,R14
            call .L_403e60

            test RAX,RAX
            je .L_407250

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],3
            xor EAX,EAX
.L_4071a6:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40744f

            add RSP,136
.L_4071c1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4071d0:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4294967287
            call .L_404200

            mov EAX,1
            jmp .L_4071a6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4071e8:

            lea RDI,QWORD PTR [RSP+22]
            lea R12,QWORD PTR [RSP+16]
            mov EAX,15731
            mov EDX,93
            shl RBP,5
            mov DWORD PTR [RSP+16],1886153829
            mov WORD PTR [RSP+20],AX
            mov BYTE PTR [RSP+22],0
            call strncpy@PLT

            mov RDI,R12
            mov BYTE PTR [RSP+115],0
            call .L_403e10

            mov RDI,QWORD PTR [R13+RBP*1+8]
            mov QWORD PTR [RBX],RAX
            mov RBX,RAX
            test RDI,RDI
            jne .L_407170

            jmp .L_407179
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407240:

            call .L_403e10

            mov QWORD PTR [RBX],RAX
            jmp .L_407179
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407250:

            mov RBX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_448258]
            mov RSI,R14
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            je .L_407338

            mov R15,QWORD PTR [RSP+8]
            mov RDI,RAX
            mov DWORD PTR [R15+400],3
            call strdup@PLT

            lea RDX,QWORD PTR [RIP+.L_448261]
            mov QWORD PTR [R15+520],RAX
            mov RSI,R14
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            je .L_407318

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_445e90

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+536],XMM0
            xor EAX,EAX
            jmp .L_4071a6
.L_4072c5:

            divsd XMM0,QWORD PTR [RIP+.L_448278]
            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],2
            movsd XMM4,QWORD PTR [RIP+.L_448270]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RAX+432],XMM1
            movsd QWORD PTR [RAX+440],XMM2
            movsd QWORD PTR [RAX+448],XMM3
            movsd QWORD PTR [RAX+456],XMM0
.L_407318:

            xor EAX,EAX
            jmp .L_4071a6
          .byte 0x90
.L_407320:

            xor EBX,EBX
            jmp .L_407103
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407330:

            mov RBX,R14
            jmp .L_407103
.L_407338:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_448267]
            mov RSI,R14
            call .L_403e60

            test RAX,RAX
            mov RBX,RAX
            je .L_407318

            mov RCX,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            xor EBP,EBP
            movups XMMWORD PTR [RCX+408],XMM0
            mov QWORD PTR [RCX+456],0
            movups XMMWORD PTR [RCX+424],XMM0
            movups XMMWORD PTR [RCX+440],XMM0
            nop
            nop
.L_407380:

            cmp BYTE PTR [RBX],0
            je .L_4073d0

            cmp EBP,7
            je .L_4073d0

            mov RDI,RBX
            call .L_413910

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+RBP*8+408],XMM0
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_4073bb

            jmp .L_4073bf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4073b0:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_4073bf
.L_4073bb:

            cmp AL,44
            jne .L_4073b0
.L_4073bf:

            cmp AL,44
            sete AL
            add RBP,1
            movzx EAX,AL
            add RBX,RAX
            jmp .L_407380
.L_4073d0:

            mov RAX,QWORD PTR [RSP+8]
            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RAX+432]
            movsd XMM2,QWORD PTR [RAX+440]
            ucomisd XMM1,XMM4
            movsd XMM3,QWORD PTR [RAX+448]
            movsd XMM0,QWORD PTR [RAX+456]
            jp .L_4072c5

            jne .L_4072c5

            ucomisd XMM2,XMM4
            jp .L_4072c5

            jne .L_4072c5

            ucomisd XMM3,XMM4
            jp .L_4072c5

            jne .L_4072c5

            ucomisd XMM0,XMM4
            jp .L_4072c5

            jne .L_4072c5

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],1
            xor EAX,EAX
            jmp .L_4071a6
.L_40744f:

            call __stack_chk_fail@PLT
.L_407454:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407460:

            push R15
            pxor XMM3,XMM3
            push R14
            push R13
            mov R14,RCX
            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM2,XMM0
            movsxd RBP,ESI
            mov RBX,RDX
            mov R13,R8
            sub RSP,88
.L_407485:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM1,XMM3
            jp .L_407560

            jne .L_407560
.L_4074a5:

            lea RDI,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mov QWORD PTR [RSP],RDI
            call .L_408fa0

            test RAX,RAX
            jne .L_407592

            test R12,R12
            jle .L_407588

            shl RBP,3
            mov DWORD PTR [RSP+8],0
            xor R15D,R15D
            nop
            nop
            nop
            nop
.L_4074e0:

            movsd XMM1,QWORD PTR [RBX]
            ucomisd XMM1,QWORD PTR [RIP+.L_447db8]
            ja .L_407525

            mov RDI,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R13]
            movsd XMM0,QWORD PTR [R14]
            mov RCX,R13
            mov RDX,R14
            mov RSI,RBX
            call .L_409070

            test RAX,RAX
            je .L_407525

            mov RAX,QWORD PTR [RIP+.L_4470e0]
            mov DWORD PTR [RSP+8],4294967282
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [RBX],RAX
.L_407525:

            add R15D,1
            add RBX,RBP
            add R13,RBP
            add R14,RBP
            cmp R15D,R12D
            jne .L_4074e0
.L_407537:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_4075b9

            add RSP,88
.L_40754f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407560:

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40759c
.L_407576:

            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            jmp .L_4074a5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407588:

            mov DWORD PTR [RSP+8],0
            jmp .L_407537
.L_407592:

            mov DWORD PTR [RSP+8],4294967251
            jmp .L_407537
.L_40759c:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_407576
.L_4075b9:

            call __stack_chk_fail@PLT
.L_4075be:

            nop
            nop
.L_4075c0:

            push R15
            pxor XMM3,XMM3
            push R14
            push R13
            mov R15,RDI
            push R12
            push RBP
            mov R12,RCX
            push RBX
            movapd XMM2,XMM0
            movsxd RBP,ESI
            mov RBX,RDX
            mov R14,R8
            sub RSP,88
.L_4075e5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM1,XMM3
            jp .L_407690

            jne .L_407690
.L_407605:

            lea RDI,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mov QWORD PTR [RSP],RDI
            call .L_408fa0

            test RAX,RAX
            jne .L_4076b3

            shl RBP,3
            xor R13D,R13D
            test R15,R15
            jle .L_40766d
.L_407630:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_40765b

            mov RDI,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R14]
            movsd XMM1,QWORD PTR [R12]
            mov RCX,R14
            mov RDX,RBX
            mov RSI,R12
            call .L_409290
.L_40765b:

            add R13D,1
            add RBX,RBP
            add R14,RBP
            add R12,RBP
            cmp R13D,R15D
            jne .L_407630
.L_40766d:

            xor EAX,EAX
.L_40766f:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4076d7

            add RSP,88
.L_407683:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_407690:

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4076ba
.L_4076a6:

            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            jmp .L_407605
.L_4076b3:

            mov EAX,4294967251
            jmp .L_40766f
.L_4076ba:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_4076a6
.L_4076d7:

            call __stack_chk_fail@PLT
.L_4076dc:

            nop
            nop
            nop
            nop
.L_4076e0:

            mov EAX,DWORD PTR [RDI+400]
            cmp EAX,DWORD PTR [RSI+400]
            je .L_4076f8
.L_4076ee:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4076f8:

            movsd XMM0,QWORD PTR [RDI+296]
            ucomisd XMM0,QWORD PTR [RSI+296]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+288]
            pxor XMM1,XMM1
            subsd XMM0,QWORD PTR [RSI+288]
            ucomisd XMM1,XMM0
            ja .L_407750

            ucomisd XMM0,QWORD PTR [RIP+.L_447118]
            ja .L_4076ee
.L_407730:

            cmp EAX,1
            je .L_407830

            cmp EAX,2
            je .L_407760

            cmp EAX,3
            je .L_407890
.L_407747:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407750:

            movsd XMM1,QWORD PTR [RIP+.L_447110]
            ucomisd XMM1,XMM0
            jbe .L_407730

            jmp .L_4076ee
.L_407760:

            movsd XMM0,QWORD PTR [RDI+408]
            ucomisd XMM0,QWORD PTR [RSI+408]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+416]
            ucomisd XMM0,QWORD PTR [RSI+416]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+424]
            ucomisd XMM0,QWORD PTR [RSI+424]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+432]
            ucomisd XMM0,QWORD PTR [RSI+432]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+440]
            ucomisd XMM0,QWORD PTR [RSI+440]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+448]
            ucomisd XMM0,QWORD PTR [RSI+448]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+456]
            ucomisd XMM0,QWORD PTR [RSI+456]
            jp .L_4076ee

            je .L_407747

            jmp .L_4076ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407830:

            movsd XMM0,QWORD PTR [RDI+408]
            ucomisd XMM0,QWORD PTR [RSI+408]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+416]
            ucomisd XMM0,QWORD PTR [RSI+416]
            jp .L_4076ee

            jne .L_4076ee

            movsd XMM0,QWORD PTR [RDI+424]
            ucomisd XMM0,QWORD PTR [RSI+424]
            jp .L_4076ee

            je .L_407747

            jmp .L_4076ee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407890:

            push RBP
.L_407891:

            push RBX
            mov RBX,RSI
            lea RDX,QWORD PTR [RIP+.L_44824e]
            sub RSP,8
.L_4078a0:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44824e]
            mov RBP,RAX
            call .L_403e60

            test RBP,RBP
            je .L_4078db

            test RAX,RAX
            je .L_4078db

            mov RSI,RAX
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_4078e4
.L_4078db:

            xor EAX,EAX
.L_4078dd:

            add RSP,8
.L_4078e1:

            pop RBX
            pop RBP
            ret 
.L_4078e4:

            mov EAX,1
            jmp .L_4078dd
.L_4078eb:

            nop
            nop
            nop
            nop
            nop
.L_4078f0:

            mov R11D,DWORD PTR [RDI+400]
            test R11D,R11D
            je .L_407908

            mov R10D,DWORD PTR [RSI+400]
            test R10D,R10D
            jne .L_407910
.L_407908:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407910:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,R9
            mov RBX,R8
            mov R12,RDX
            sub RSP,56
.L_40792d:

            mov DWORD PTR [RSP+12],ECX
            call .L_4076e0

            test EAX,EAX
            jne .L_4079f0

            xor R14D,R14D
            cmp QWORD PTR [RSP+112],0
            movsd XMM0,QWORD PTR [R13+296]
            movsd XMM1,QWORD PTR [R13+288]
            movsd XMM3,QWORD PTR [R15+296]
            movsd XMM2,QWORD PTR [R15+288]
            je .L_407cd0
.L_407971:

            cmp DWORD PTR [R13+400],3
            je .L_407c40

            mov EDX,DWORD PTR [R15+400]
            cmp EDX,3
            jne .L_40799b

            movsd XMM2,QWORD PTR [RIP+.L_448428]
            movsd XMM3,QWORD PTR [RIP+.L_447100]
.L_40799b:

            ucomisd XMM2,XMM1
            mov ECX,1
            setp AL
            cmovne EAX,ECX
            test AL,AL
            jne .L_407a08

            ucomisd XMM3,XMM0
            setp AL
            cmovne EAX,ECX
            test AL,AL
            jne .L_407a08
.L_4079bc:

            mov EAX,DWORD PTR [R13+400]
            sub EAX,1
            cmp EAX,1
            jbe .L_407a08

            sub EDX,1
            cmp EDX,1
            jbe .L_407a08
.L_4079d3:

            cmp DWORD PTR [R15+400],3
            je .L_407e70
.L_4079e1:

            test R14D,R14D
            je .L_4079f0

            mov RDI,QWORD PTR [RSP+112]
            call .L_403730
.L_4079f0:

            xor EAX,EAX
.L_4079f2:

            add RSP,56
.L_4079f6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407a08:

            mov R9,QWORD PTR [R13]
            mov R8,QWORD PTR [RSP+112]
            mov RCX,RBP
            mov ESI,DWORD PTR [RSP+12]
            mov RDX,RBX
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            mov QWORD PTR [RSP+16],R9
            call .L_407460

            mov R9,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            mov DWORD PTR [R9],EAX
            mov RAX,QWORD PTR [R13]
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_407a90

            jle .L_407a70
.L_407a55:

            test R14D,R14D
            je .L_4079f2

            mov RDI,QWORD PTR [RSP+112]
            call .L_403730

            mov RAX,QWORD PTR [R13]
            mov EAX,DWORD PTR [RAX]
            jmp .L_4079f2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407a70:

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov R10D,DWORD PTR [RCX+RDX*4]
            test R10D,R10D
            je .L_407a55

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a90:

            mov EDX,DWORD PTR [R13+400]
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,1
            jbe .L_407b10
.L_407a9f:

            mov EAX,DWORD PTR [R15+400]
            mov R13,QWORD PTR [R15]
            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,1
            jbe .L_407d40
.L_407ab5:

            mov R8,QWORD PTR [RSP+112]
            mov ESI,DWORD PTR [RSP+12]
            mov RCX,RBP
            movapd XMM1,XMM2
            mov RDX,RBX
            movapd XMM0,XMM3
            mov RDI,R12
            call .L_4075c0

            mov DWORD PTR [R13],EAX
            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_4079d3

            jle .L_407ed0
.L_407aec:

            test R14D,R14D
            je .L_4079f2

            mov RDI,QWORD PTR [RSP+112]
            call .L_403730

            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            jmp .L_4079f2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407b10:

            cmp EDX,1
            je .L_407f82

            test R12,R12
            jle .L_407c0f

            movsxd RSI,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_447db8]
            mov EDI,R12D
            xor ECX,ECX
            xor EDX,EDX
            shl RSI,3
.L_407b3a:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM0,XMM5
            ja .L_407c01

            mov R10,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [R13+448]
            movapd XMM4,XMM0
            movsd XMM10,QWORD PTR [RBP+RDX*1]
            movsd XMM9,QWORD PTR [R10+RDX*1]
            mulsd XMM4,XMM7
            movsd XMM1,QWORD PTR [R13+432]
            movapd XMM11,XMM9
            movsd XMM6,QWORD PTR [R13+440]
            mulsd XMM11,XMM1
            addsd XMM4,XMM10
            mulsd XMM1,XMM10
            mulsd XMM7,XMM10
            movsd XMM8,QWORD PTR [R13+456]
            subsd XMM4,XMM11
            movapd XMM11,XMM6
            mulsd XMM6,XMM9
            mulsd XMM11,XMM0
            subsd XMM0,XMM7
            mulsd XMM4,XMM8
            subsd XMM1,XMM11
            addsd XMM0,XMM6
            addsd XMM4,QWORD PTR [R13+416]
            addsd XMM1,XMM9
            mulsd XMM0,XMM8
            mulsd XMM1,XMM8
            addsd XMM0,QWORD PTR [R13+408]
            addsd XMM1,QWORD PTR [R13+424]
            movsd QWORD PTR [RBX+RDX*1],XMM0
            movsd QWORD PTR [RBP+RDX*1],XMM4
            movsd QWORD PTR [R10+RDX*1],XMM1
.L_407c01:

            add ECX,1
            add RDX,RSI
            cmp ECX,EDI
            jne .L_407b3a
.L_407c0f:

            cmp EAX,0
            je .L_407a9f

            jg .L_407a55

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov R9D,DWORD PTR [RCX+RDX*4]
            test R9D,R9D
            jne .L_407a9f

            jmp .L_407a55
          .byte 0x66
          .byte 0x90
.L_407c40:

            movsd QWORD PTR [RSP+24],XMM3
            sub RSP,8
.L_407c4a:

            mov RDX,R12
            movsd QWORD PTR [RSP+24],XMM2
            push QWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+28]
            xor ESI,ESI
            mov R9,RBP
            mov R8,RBX
            mov RDI,R13
            call .L_446dc0

            mov RAX,QWORD PTR [R13]
            pop RDX
            pop RCX
.L_407c71:

            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            je .L_407ca8

            jg .L_407a55

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov R11D,DWORD PTR [RCX+RDX*4]
            test R11D,R11D
            je .L_407a55

            nop
            nop
            nop
.L_407ca8:

            mov EDX,DWORD PTR [R15+400]
            cmp EDX,3
            je .L_407f65

            movsd XMM0,QWORD PTR [RIP+.L_447100]
            movsd XMM1,QWORD PTR [RIP+.L_448428]
            jmp .L_40799b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407cd0:

            lea R14D,DWORD PTR [R12*8]
            movsd QWORD PTR [RSP+40],XMM1
            imul R14D,DWORD PTR [RSP+12]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsxd R14,R14D
            mov RDI,R14
            call .L_403700

            mov RDX,R14
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+112],RAX
            mov R14D,1
            call memset@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_407971
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d40:

            cmp EAX,1
            je .L_407eee

            test R12,R12
            jle .L_407e3d

            movsxd RCX,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_447db8]
            mov ESI,R12D
            xor EDX,EDX
            xor EAX,EAX
            shl RCX,3
.L_407d6a:

            movsd XMM0,QWORD PTR [RBX+RAX*1]
            ucomisd XMM0,XMM5
            ja .L_407e2f

            movsd XMM1,QWORD PTR [RBP+RAX*1]
            mov RDI,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [R15+456]
            subsd XMM0,QWORD PTR [R15+408]
            subsd XMM1,QWORD PTR [R15+416]
            movsd XMM7,QWORD PTR [R15+440]
            movsd XMM4,QWORD PTR [RDI+RAX*1]
            subsd XMM4,QWORD PTR [R15+424]
            divsd XMM0,XMM6
            divsd XMM1,XMM6
            divsd XMM4,XMM6
            movsd XMM6,QWORD PTR [R15+448]
            mulsd XMM6,XMM1
            mulsd XMM7,XMM4
            addsd XMM6,XMM0
            subsd XMM6,XMM7
            movapd XMM7,XMM1
            movsd QWORD PTR [RBX+RAX*1],XMM6
            movsd XMM6,QWORD PTR [R15+448]
            mulsd XMM6,XMM0
            subsd XMM7,XMM6
            movapd XMM6,XMM7
            movsd XMM7,QWORD PTR [R15+432]
            mulsd XMM7,XMM4
            addsd XMM6,XMM7
            movsd QWORD PTR [RBP+RAX*1],XMM6
            mulsd XMM0,QWORD PTR [R15+440]
            mulsd XMM1,QWORD PTR [R15+432]
            subsd XMM0,XMM1
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+RAX*1],XMM0
.L_407e2f:

            add EDX,1
            add RAX,RCX
            cmp EDX,ESI
            jne .L_407d6a
.L_407e3d:

            mov EAX,DWORD PTR [R13]
            cmp EAX,0
            je .L_407ab5

            jg .L_407aec

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov R8D,DWORD PTR [RCX+RDX*4]
            test R8D,R8D
            jne .L_407ab5

            jmp .L_407aec
.L_407e70:

            sub RSP,8
.L_407e74:

            mov ESI,1
            mov R9,RBP
            push QWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+28]
            mov R8,RBX
            mov RDX,R12
            mov RDI,R15
            call .L_446dc0

            mov RAX,QWORD PTR [R15]
            pop RCX
            pop RSI
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_4079e1

            jg .L_407aec

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov EDX,DWORD PTR [RCX+RDX*4]
            test EDX,EDX
            jne .L_4079e1

            jmp .L_407aec
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ed0:

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_448360]
            neg EDX
            movsxd RDX,EDX
            mov EDI,DWORD PTR [RCX+RDX*4]
            test EDI,EDI
            jne .L_4079d3

            jmp .L_407aec
.L_407eee:

            test R12,R12
            jle .L_407e3d

            movsxd RCX,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_447db8]
            mov ESI,R12D
            xor EDX,EDX
            xor EAX,EAX
            shl RCX,3
            nop
.L_407f10:

            movsd XMM0,QWORD PTR [RBX+RAX*1]
            ucomisd XMM0,XMM5
            ja .L_407f56

            subsd XMM0,QWORD PTR [R15+408]
            mov RDI,QWORD PTR [RSP+112]
            movsd QWORD PTR [RBX+RAX*1],XMM0
            movsd XMM0,QWORD PTR [RBP+RAX*1]
            subsd XMM0,QWORD PTR [R15+416]
            movsd QWORD PTR [RBP+RAX*1],XMM0
            movsd XMM0,QWORD PTR [RDI+RAX*1]
            subsd XMM0,QWORD PTR [R15+424]
            movsd QWORD PTR [RDI+RAX*1],XMM0
.L_407f56:

            add EDX,1
            add RAX,RCX
            cmp EDX,ESI
            jne .L_407f10

            jmp .L_407e3d
.L_407f65:

            movsd XMM3,QWORD PTR [RIP+.L_447100]
            movsd XMM2,QWORD PTR [RIP+.L_448428]
            movapd XMM0,XMM3
            movapd XMM1,XMM2
            jmp .L_4079bc
.L_407f82:

            test R12,R12
            jle .L_407c0f

            movsxd RSI,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_447db8]
            mov EDI,R12D
            xor ECX,ECX
            xor EDX,EDX
            shl RSI,3
            nop
            nop
            nop
            nop
            nop
.L_407fa8:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM0,XMM5
            ja .L_407ff0

            addsd XMM0,QWORD PTR [R13+408]
            mov R10,QWORD PTR [RSP+112]
            movsd QWORD PTR [RBX+RDX*1],XMM0
            movsd XMM0,QWORD PTR [RBP+RDX*1]
            addsd XMM0,QWORD PTR [R13+416]
            movsd QWORD PTR [RBP+RDX*1],XMM0
            movsd XMM0,QWORD PTR [R10+RDX*1]
            addsd XMM0,QWORD PTR [R13+424]
            movsd QWORD PTR [R10+RDX*1],XMM0
.L_407ff0:

            add ECX,1
            add RDX,RSI
            cmp ECX,EDI
            jne .L_407fa8

            jmp .L_407c0f
.L_407fff:

            nop
.L_408000:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14,R8
            push RBP
            push RBX
            lea R8,QWORD PTR [RDI+516]
            mov RBX,RDI
            mov R13,RSI
            mov RBP,RDX
            sub RSP,168
.L_408027:

            mov R9,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RIP+.L_448280]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            test ECX,ECX
            mov RSI,R8
            mov DWORD PTR [R9],0
            mov R12,QWORD PTR [RSP+224]
            mov DWORD PTR [RAX],0
            mov EAX,1
            cmovne EAX,ECX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov DWORD PTR [RSP+4],EAX
            seta AL
            sbb AL,0
            test AL,AL
            jne .L_408480
.L_408081:

            movsd XMM0,QWORD PTR [RBX+384]
            mov ESI,DWORD PTR [RBX+316]
            ucomisd XMM0,QWORD PTR [RIP+.L_4470f0]
            jp .L_40809f

            je .L_408360
.L_40809f:

            test R12,R12
            je .L_408a90

            test RBP,RBP
            jle .L_4080e4

            movsxd RAX,DWORD PTR [RSP+4]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R12
            jmp .L_4080d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4080c8:

            movsd XMM0,QWORD PTR [RBX+384]
.L_4080d0:

            mulsd XMM0,QWORD PTR [RAX]
            add RDX,1
            movsd QWORD PTR [RAX],XMM0
            add RAX,RCX
            cmp RBP,RDX
            jne .L_4080c8
.L_4080e4:

            test ESI,ESI
            jne .L_408371
.L_4080ec:

            mov EDI,DWORD PTR [RBX+312]
            test EDI,EDI
            jne .L_408412

            cmp QWORD PTR [RBX+64],0
            je .L_408950

            test R12,R12
            je .L_408a98

            test RBP,RBP
            jle .L_408298

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            xor R8D,R8D
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov R13,R12
            mov RBP,RBX
            mov QWORD PTR [RSP+40],R14
            mov RBX,R14
            mov QWORD PTR [RSP+48],R15
            lea R9,QWORD PTR [RAX*8]
            mov R14,R15
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+24],RAX
            mov R12,R8
            mov R15,R9
            nop
            nop
            nop
.L_408168:

            movsd XMM0,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [R14]
            ucomisd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+136],XMM1
            movsd XMM1,QWORD PTR [R13]
            movsd QWORD PTR [RSP+144],XMM1
            ja .L_408241

            movsd QWORD PTR [RSP+128],XMM0
            lea RDI,QWORD PTR [RSP+64]
            sub RSP,8
.L_4081a7:

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            mov RSI,RBP
            push QWORD PTR [RSP+152]
            call .L_4444a0

            mov RSI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RSP+112]
            add RSP,32
.L_4081de:

            mov R10D,DWORD PTR [RSI]
            test R10D,R10D
            je .L_408232

            lea ESI,DWORD PTR [R10-33]
            cmp ESI,1
            jbe .L_408222

            lea ESI,DWORD PTR [R10+44]
            cmp ESI,44
            ja .L_408330

            cmp QWORD PTR [RSP+8],1
            je .L_408330

            mov ESI,R10D
            lea RAX,QWORD PTR [RIP+.L_448360]
            neg ESI
            movsxd RSI,ESI
            mov ESI,DWORD PTR [RAX+RSI*4]
            test ESI,ESI
            je .L_408330
.L_408222:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
.L_408232:

            movsd QWORD PTR [RBX],XMM3
            movsd QWORD PTR [R14],XMM1
            movsd QWORD PTR [R13],XMM0
.L_408241:

            add R12,1
            add RBX,R15
            add R14,R15
            add R13,R15
            cmp QWORD PTR [RSP+8],R12
            jne .L_408168

            mov RBX,RBP
            mov R13,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+16]
.L_40827b:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+496]
            jp .L_408441

            jne .L_408441

            nop
            nop
            nop
            nop
            nop
.L_408298:

            mov EDX,DWORD PTR [RBX+476]
            test R12,R12
            setne BYTE PTR [RSP+8]
            movzx EAX,BYTE PTR [RSP+8]
            test EDX,EDX
            je .L_4082ed

            test AL,AL
            je .L_4082ed

            push R12
.L_4082b5:

            push R15
            lea RCX,QWORD PTR [RBX+488]
            push R14
            mov EAX,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RBX+480]
            lea RSI,QWORD PTR [RIP+.L_447028]
            xor R8D,R8D
            mov R9,RBP
            mov RDI,RBX
            push RAX
            call .L_40bd10

            add RSP,32
            test EAX,EAX
            jne .L_408a60
.L_4082ed:

            sub RSP,8
            mov R9,R15
            mov R8,R14
            push R12
            mov ECX,DWORD PTR [RSP+20]
            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            call .L_4078f0

            test EAX,EAX
            mov R10D,EAX
            pop R9
            pop R11
            je .L_408598

            mov RAX,QWORD PTR [RBX]
            mov R10D,DWORD PTR [RAX]
            test R10D,R10D
            je .L_408798

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408330:

            mov RSI,QWORD PTR [RSP+152]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_408f51

            add RSP,168
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408360:

            test ESI,ESI
            je .L_4080ec

            test R12,R12
            je .L_408a98
.L_408371:

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM4,QWORD PTR [RBX+368]
            jp .L_408385

            je .L_4083e2
.L_408385:

            test RBP,RBP
            jle .L_4083e2

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_4083a8:

            movsd XMM0,QWORD PTR [R14+RAX*1]
            ucomisd XMM0,XMM2
            ja .L_4083d6

            mulsd XMM0,QWORD PTR [RBX+368]
            movsd QWORD PTR [R14+RAX*1],XMM0
            movsd XMM0,QWORD PTR [R15+RAX*1]
            mulsd XMM0,QWORD PTR [RBX+368]
            movsd QWORD PTR [R15+RAX*1],XMM0
.L_4083d6:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jne .L_4083a8
.L_4083e2:

            mov ESI,DWORD PTR [RSP+4]
            movsd XMM1,QWORD PTR [RBX+288]
            movsd XMM0,QWORD PTR [RBX+296]
            mov R8,R12
            mov RCX,R15
            mov RDX,R14
            mov RDI,RBP
            call .L_4075c0

            test EAX,EAX
            mov R10D,EAX
            jne .L_408330
.L_408412:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+496]
            jp .L_408426

            je .L_408298
.L_408426:

            test RBP,RBP
            jle .L_408298

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            mov QWORD PTR [RSP+24],RAX
.L_408441:

            mov RCX,QWORD PTR [RSP+24]
            mov RAX,R14
            xor EDX,EDX
            shl RCX,3
            nop
.L_408450:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_408466

            addsd XMM0,QWORD PTR [RBX+496]
            movsd QWORD PTR [RAX],XMM0
.L_408466:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jg .L_408450

            jmp .L_408298
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408480:

            test RDX,RDX
            jle .L_408081

            movsxd RAX,DWORD PTR [RSP+4]
            movq XMM2,QWORD PTR [RIP+.L_447ae0]
            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_4482c0]
            movapd XMM5,XMM2
            xor ECX,ECX
            movapd XMM4,XMM2
            xor EDI,EDI
            lea R10,QWORD PTR [RAX*8]
.L_4084b5:

            test R12,R12
            movsd XMM0,QWORD PTR [R14+RCX*1]
            movsd XMM3,QWORD PTR [R15+RCX*1]
            je .L_4084cc

            movsd XMM1,QWORD PTR [R12+RCX*1]
.L_4084cc:

            mov EDX,1
            movzx EAX,BYTE PTR [R8+RDX*1-1]
            sub EAX,100
            cmp AL,19
            ja .L_40851e
.L_4084de:

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RSI+RAX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4084f0:

            xorpd XMM0,XMM5
.L_4084f4:

            movsd QWORD PTR [R15+RCX*1],XMM0
.L_4084fa:

            cmp RDX,3
            je .L_408550
.L_408500:

            cmp EDX,1
            je .L_408ed9

            movapd XMM0,XMM1
.L_40850d:

            add RDX,1
            movzx EAX,BYTE PTR [R8+RDX*1-1]
            sub EAX,100
            cmp AL,19
            jbe .L_4084de
.L_40851e:

            mov ESI,4294967249
            mov RDI,R9
            call .L_404200

            mov R10D,4294967249
            jmp .L_408330
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408540:

            xorpd XMM0,XMM4
.L_408544:

            cmp RDX,3
            movsd QWORD PTR [R14+RCX*1],XMM0
            jne .L_408500
.L_408550:

            add RDI,1
            add RCX,R10
            cmp RBP,RDI
            jne .L_4084b5

            jmp .L_408081
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408568:

            test R12,R12
            je .L_4084fa

            xorpd XMM0,XMM2
            movsd QWORD PTR [R12+RCX*1],XMM0
            jmp .L_4084fa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408580:

            test R12,R12
            je .L_4084fa

            movsd QWORD PTR [R12+RCX*1],XMM0
            jmp .L_4084fa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408598:

            mov R8D,DWORD PTR [R13+476]
            test R8D,R8D
            je .L_4085f8

            cmp BYTE PTR [RSP+8],0
            je .L_4085f8

            mov DWORD PTR [RSP+16],EAX
            push R12
.L_4085b1:

            lea RCX,QWORD PTR [R13+488]
            push R15
            push R14
            lea RDX,QWORD PTR [R13+480]
            mov EAX,DWORD PTR [RSP+28]
            lea RSI,QWORD PTR [RIP+.L_447028]
            mov R9,RBP
            mov R8D,1
            mov RDI,R13
            push RAX
            call .L_40bd10

            add RSP,32
.L_4085e4:

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+16]
            jne .L_408798

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4085f8:

            pxor XMM5,XMM5
            ucomisd XMM5,QWORD PTR [R13+496]
            jp .L_408609

            je .L_408653
.L_408609:

            test RBP,RBP
            jle .L_408653

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R14
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408630:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_408647

            subsd XMM0,QWORD PTR [R13+496]
            movsd QWORD PTR [RAX],XMM0
.L_408647:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jne .L_408630
.L_408653:

            mov EDI,DWORD PTR [R13+316]
            test EDI,EDI
            je .L_4087a8

            test R12,R12
            je .L_408f38

            mov ESI,DWORD PTR [RSP+4]
            movsd XMM1,QWORD PTR [R13+288]
            movsd XMM0,QWORD PTR [R13+296]
            mov R8,R12
            mov RCX,R15
            mov RDX,R14
            mov RDI,RBP
            mov DWORD PTR [RSP+16],R10D
            call .L_407460

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mov R10D,DWORD PTR [RSP+16]
            ucomisd XMM4,QWORD PTR [R13+376]
            jp .L_4086b5

            je .L_408acf
.L_4086b5:

            test RBP,RBP
            jle .L_408e9c

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            mov RCX,R15
            xor EDX,EDX
            mov QWORD PTR [RSP+24],RAX
            lea RSI,QWORD PTR [RAX*8]
            mov RAX,R14
.L_4086e0:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_408708

            mulsd XMM0,QWORD PTR [R13+376]
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,QWORD PTR [R13+376]
            movsd QWORD PTR [RCX],XMM0
.L_408708:

            add RDX,1
            add RAX,RSI
            add RCX,RSI
            cmp RBP,RDX
            jne .L_4086e0
.L_408717:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            jp .L_408737

            je .L_408b01
.L_408737:

            mov RAX,QWORD PTR [RSP+24]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408750:

            movsd XMM0,QWORD PTR [RAX]
            add RDX,1
            mulsd XMM0,QWORD PTR [R13+392]
            movsd QWORD PTR [RAX],XMM0
            add RAX,RCX
            cmp RBP,RDX
            jg .L_408750

            lea RDI,QWORD PTR [RIP+.L_448280]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_408330

            mov RDI,QWORD PTR [R13]
            jmp .L_408b36
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408798:

            mov RAX,QWORD PTR [R13]
            mov R10D,DWORD PTR [RAX]
            jmp .L_408330
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4087a8:

            mov ESI,DWORD PTR [R13+312]
            test ESI,ESI
            jne .L_408ac0

            cmp QWORD PTR [R13+56],0
            je .L_408d65

            test R12,R12
            je .L_408f56

            test RBP,RBP
            jle .L_408e9c

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            mov RCX,R14
            xor EBX,EBX
            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov RBP,R13
            mov QWORD PTR [RSP+40],R14
            mov R13,R15
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],R12
            lea R9,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R12
            mov DWORD PTR [RSP+32],R10D
            mov R12,RBX
            mov R15,RCX
            mov R14,R9
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408830:

            movsd XMM0,QWORD PTR [R15]
            movsd XMM1,QWORD PTR [R13]
            ucomisd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+136],XMM1
            movsd XMM1,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+144],XMM1
            ja .L_40890d

            movsd QWORD PTR [RSP+128],XMM0
            lea RDI,QWORD PTR [RSP+96]
            sub RSP,8
.L_40886f:

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            mov RSI,RBP
            push QWORD PTR [RSP+152]
            call .L_444250

            mov RSI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+144]
            add RSP,32
.L_4088af:

            mov ESI,DWORD PTR [RSI]
            test ESI,ESI
            je .L_4088fe

            lea EDI,DWORD PTR [RSI-33]
            cmp EDI,1
            jbe .L_4088ee

            lea EDI,DWORD PTR [RSI+44]
            cmp EDI,44
            ja .L_408ee2

            cmp QWORD PTR [RSP+8],1
            je .L_408ee2

            mov EDI,ESI
            lea RAX,QWORD PTR [RIP+.L_448360]
            neg EDI
            movsxd RDI,EDI
            mov ECX,DWORD PTR [RAX+RDI*4]
            test ECX,ECX
            je .L_408ee2
.L_4088ee:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
.L_4088fe:

            movsd QWORD PTR [R15],XMM3
            movsd QWORD PTR [R13],XMM1
            movsd QWORD PTR [RBX],XMM0
.L_40890d:

            add R12,1
            add R15,R14
            add R13,R14
            add RBX,R14
            cmp QWORD PTR [RSP+8],R12
            jne .L_408830

            mov R13,RBP
            mov R10D,DWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            jmp .L_408717
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408950:

            cmp QWORD PTR [RBX+48],0
            je .L_408f5e

            test RBP,RBP
            jle .L_408298

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            mov RCX,R15
            xor EDX,EDX
            mov QWORD PTR [RSP+16],R13
            movsd QWORD PTR [RSP+8],XMM2
            mov QWORD PTR [RSP+32],R14
            mov QWORD PTR [RSP+40],R15
            mov QWORD PTR [RSP+48],R12
            mov R15,RBX
            mov R12,RCX
            lea RSI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov RBX,RAX
            mov R14,RDX
            mov R13,RSI
            nop
.L_4089b0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RSP+8]
            ja .L_408a25

            movsd XMM1,QWORD PTR [R12]
            mov RDI,R15
            call .L_4440b0

            mov RDI,QWORD PTR [R15]
            mov R10D,DWORD PTR [RDI]
            test R10D,R10D
            je .L_408a1b

            lea EDI,DWORD PTR [R10-33]
            cmp EDI,1
            jbe .L_408a0f

            lea EDI,DWORD PTR [R10+44]
            cmp EDI,44
            ja .L_408330

            cmp RBP,1
            je .L_408330

            mov EDI,R10D
            lea RAX,QWORD PTR [RIP+.L_448360]
            neg EDI
            movsxd RDI,EDI
            mov ECX,DWORD PTR [RAX+RDI*4]
            test ECX,ECX
            je .L_408330
.L_408a0f:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM0,XMM1
.L_408a1b:

            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [R12],XMM1
.L_408a25:

            add R14,1
            add RBX,R13
            add R12,R13
            cmp RBP,R14
            jne .L_4089b0

            mov RBX,R15
            mov R13,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+32]
            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_40827b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408a60:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            jne .L_408f51

            mov RDI,QWORD PTR [RBX]
            add RSP,168
.L_408a81:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4041f0
.L_408a90:

            test ESI,ESI
            je .L_4080ec
.L_408a98:

            mov RDI,RBX
.L_408a9b:

            call .L_404140

            mov ESI,4294967251
            mov RDI,RAX
            call .L_404200

            mov R10D,4294967251
            jmp .L_408330
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ac0:

            mov EAX,DWORD PTR [R13+512]
            test EAX,EAX
            jne .L_408c50
.L_408acf:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_408b01

            cmp BYTE PTR [RSP+8],0
            jne .L_408d4d
.L_408b01:

            lea RDI,QWORD PTR [RIP+.L_448280]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_408330

            test RBP,RBP
            mov RDI,QWORD PTR [R13]
            jle .L_408330

            movsxd RAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RSP+24],RAX
.L_408b36:

            movq XMM3,QWORD PTR [RIP+.L_447ae0]
            mov R13,QWORD PTR [RSP+24]
            test R12,R12
            pxor XMM2,XMM2
            lea RSI,QWORD PTR [RIP+.L_448310]
            movapd XMM5,XMM3
            sete BL
            movapd XMM4,XMM3
            shl R13,3
            xor ECX,ECX
            xor R11D,R11D
.L_408b65:

            test R12,R12
            movsd XMM0,QWORD PTR [R14+RCX*1]
            movsd XMM1,QWORD PTR [R15+RCX*1]
            je .L_408b7c

            movsd XMM2,QWORD PTR [R12+RCX*1]
.L_408b7c:

            movapd XMM8,XMM2
            movapd XMM7,XMM1
            movapd XMM6,XMM0
            xor EAX,EAX
            xorpd XMM8,XMM3
            xorpd XMM7,XMM5
            xorpd XMM6,XMM4
.L_408b98:

            cmp EAX,2
            mov EDX,EAX
            jne .L_408ba3

            test BL,BL
            jne .L_408be0
.L_408ba3:

            test RAX,RAX
            je .L_408eea

            cmp EDX,1
            mov R9,R12
            cmove R9,R15
.L_408bb6:

            movzx EDX,BYTE PTR [R8+RAX*1]
            sub EDX,100
            cmp DL,19
            ja .L_408d38

            movzx EDX,DL
            movsxd RDX,DWORD PTR [RSI+RDX*4]
            add RDX,RSI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408bd8:

            movsd QWORD PTR [R9+RCX*1],XMM6
            nop
            nop
.L_408be0:

            add RAX,1
            cmp RAX,3
            jne .L_408b98

            add R11,1
            add RCX,R13
            cmp RBP,R11
            jg .L_408b65

            jmp .L_408330
          .byte 0x90
.L_408c00:

            movsd QWORD PTR [R9+RCX*1],XMM2
            jmp .L_408be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c10:

            movsd QWORD PTR [R9+RCX*1],XMM7
            jmp .L_408be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c20:

            movsd QWORD PTR [R9+RCX*1],XMM1
            jmp .L_408be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c30:

            movsd QWORD PTR [R9+RCX*1],XMM0
            jmp .L_408be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c40:

            movsd QWORD PTR [R9+RCX*1],XMM8
            jmp .L_408be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c50:

            test RBP,RBP
            jle .L_408efa

            movsxd RAX,DWORD PTR [RSP+4]
            mov RBX,R14
            mov QWORD PTR [RSP+48],R14
            mov QWORD PTR [RSP+56],R12
            mov R14,RBP
            mov DWORD PTR [RSP+40],R10D
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            movsd XMM3,QWORD PTR [RIP+.L_448430]
            lea RDX,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RBP,RAX
            mov R12,RDX
            jmp .L_408cb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408ca0:

            add RBP,1
            add RBX,R12
            cmp R14,RBP
            je .L_408ec5
.L_408cb0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,XMM2
            ja .L_408ca0

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call fmod@PLT

            movsd XMM1,QWORD PTR [R13+504]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RSP+32]
            subsd XMM4,QWORD PTR [RIP+.L_447a78]
            ucomisd XMM4,XMM0
            jbe .L_408d0a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408d00:

            addsd XMM0,XMM3
            ucomisd XMM4,XMM0
            ja .L_408d00
.L_408d0a:

            addsd XMM1,QWORD PTR [RIP+.L_447a78]
            ucomisd XMM0,XMM1
            jbe .L_408d2a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408d20:

            subsd XMM0,XMM3
            ucomisd XMM0,XMM1
            ja .L_408d20
.L_408d2a:

            movsd QWORD PTR [RBX],XMM0
            jmp .L_408ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d38:

            mov ESI,4294967249
            call .L_404200

            mov R10D,4294967249
            jmp .L_408330
.L_408d4d:

            test RBP,RBP
            jle .L_408330

            movsxd RAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_408737
.L_408d65:

            test RBP,RBP
            jle .L_408efa

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            mov RCX,R15
            xor EBX,EBX
            mov QWORD PTR [RSP+40],R14
            movsd QWORD PTR [RSP+16],XMM2
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],R12
            mov R15,R13
            mov R12,RBX
            mov DWORD PTR [RSP+32],R10D
            lea RSI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov R13,RCX
            mov RBX,RAX
            mov R14,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408dc0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RSP+16]
            ja .L_408e37

            movsd XMM1,QWORD PTR [R13]
            mov RDI,R15
            call .L_443ed0

            mov RDI,QWORD PTR [R15]
            mov EDI,DWORD PTR [RDI]
            test EDI,EDI
            je .L_408e2d

            lea R8D,DWORD PTR [RDI-33]
            cmp R8D,1
            jbe .L_408e21

            lea R8D,DWORD PTR [RDI+44]
            cmp R8D,44
            ja .L_408ef2

            cmp RBP,1
            je .L_408ef2

            mov R8D,EDI
            lea RAX,QWORD PTR [RIP+.L_448360]
            neg R8D
            movsxd R8,R8D
            mov EDX,DWORD PTR [RAX+R8*4]
            test EDX,EDX
            je .L_408ef2
.L_408e21:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM0,XMM1
.L_408e2d:

            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [R13],XMM1
.L_408e37:

            add R12,1
            add RBX,R14
            add R13,R14
            cmp RBP,R12
            jne .L_408dc0

            mov R13,R15
            mov R10D,DWORD PTR [RSP+32]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
.L_408e61:

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM4,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_408b01

            cmp BYTE PTR [RSP+8],0
            je .L_408b01

            jmp .L_408737
.L_408e9c:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            jp .L_408330

            jne .L_408330

            jmp .L_408b01
.L_408ec5:

            mov RBP,R14
            mov R10D,DWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            jmp .L_408e61
.L_408ed9:

            movapd XMM0,XMM3
            jmp .L_40850d
.L_408ee2:

            mov R10D,ESI
            jmp .L_408330
.L_408eea:

            mov R9,R14
            jmp .L_408bb6
.L_408ef2:

            mov R10D,EDI
            jmp .L_408330
.L_408efa:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_408b01

            cmp BYTE PTR [RSP+8],0
            je .L_408b01

            xor R10D,R10D
            jmp .L_408330
.L_408f38:

            mov RDI,QWORD PTR [R13]
            mov ESI,4294967251
            call .L_404200

            mov R10D,4294967251
            jmp .L_408330
.L_408f51:

            call __stack_chk_fail@PLT
.L_408f56:

            mov RDI,R13
            jmp .L_408a9b
.L_408f5e:

            mov RDI,RBX
            call .L_404140

            mov ESI,4294967279
            mov RDI,RAX
            call .L_404200

            mov RDI,RBX
            call .L_404140

            lea RDX,QWORD PTR [RIP+.L_448288]
            mov RDI,RAX
            mov ESI,1
            xor EAX,EAX
            call .L_404320

            mov R10D,4294967279
            jmp .L_408330
.L_408f9c:

            nop
            nop
            nop
            nop
.L_408fa0:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            jae .L_409018

            ucomisd XMM2,XMM1
            jae .L_409000

            ucomisd XMM1,XMM0
            mov EAX,16
            ja .L_408ff6

            movsd QWORD PTR [RDI],XMM0
            mulsd XMM0,XMM0
            xor EAX,EAX
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM1,XMM1
            movapd XMM2,XMM0
            movsd QWORD PTR [RDI+16],XMM0
            movsd QWORD PTR [RDI+24],XMM1
            subsd XMM2,XMM1
            movapd XMM3,XMM2
            divsd XMM2,XMM1
            divsd XMM3,XMM0
            movsd QWORD PTR [RDI+40],XMM2
            movsd QWORD PTR [RDI+32],XMM3
.L_408ff6:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409000:

            mov EAX,8
            mov RDX,RAX
            or RDX,16
            ucomisd XMM1,XMM0
            cmova RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409018:

            ucomisd XMM2,XMM1
            jae .L_409038

            ucomisd XMM1,XMM0
            mov EDX,4
            mov EAX,20
            cmovbe RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409038:

            mov EAX,12
            mov RDX,RAX
            or RDX,16
            ucomisd XMM1,XMM0
            cmova RAX,RDX
            ret 
.L_40904d:

            nop
            nop
            nop
.L_409050:

            movsd XMM0,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM0
            movsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RDX],XMM0
            ret 
.L_409062:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409070:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            movapd XMM4,XMM0
            mov RBX,RDI
            sub RSP,88
.L_409087:

            mov R12,RDX
            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM0,XMM4
            jbe .L_4091a0

            ucomisd XMM4,QWORD PTR [RIP+.L_448440]
            jbe .L_4091e0

            movsd XMM7,QWORD PTR [RIP+.L_448438]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_447a58]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM7
.L_4090d2:

            ucomisd XMM1,QWORD PTR [RIP+.L_447a78]
            jbe .L_4090e4

            subsd XMM1,QWORD PTR [RIP+.L_448430]
.L_4090e4:

            mulsd XMM0,QWORD PTR [RBX+32]
            movapd XMM5,XMM3
            pxor XMM4,XMM4
            movsd XMM6,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+24],XMM6
            subsd XMM5,XMM0
            ucomisd XMM4,XMM5
            sqrtsd XMM7,XMM5
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM7
            ja .L_40925d
.L_409117:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            xor EAX,EAX
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM4,XMM0
            movsd QWORD PTR [RBP],XMM4
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [R12],XMM0
            subsd XMM3,QWORD PTR [RBX+32]
            mulsd XMM3,XMM1
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [R13],XMM2
            add RSP,88
.L_409196:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4091a0:

            ucomisd XMM4,QWORD PTR [RIP+.L_447a20]
            jbe .L_409200
.L_4091aa:

            movsd XMM0,QWORD PTR [RIP+.L_448448]
            ucomisd XMM0,XMM4
            jbe .L_4091ea

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM5,QWORD PTR [RIP+.L_448438]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            jmp .L_4090d2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4091e0:

            ucomisd XMM4,QWORD PTR [RIP+.L_447a20]
            ja .L_4091aa
.L_4091ea:

            add RSP,88
.L_4091ee:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409200:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,XMM6
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_4090d2
.L_40925d:

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_409117
.L_40928b:

            nop
            nop
            nop
            nop
            nop
.L_409290:

            movapd XMM3,XMM1
            push R13
            movapd XMM1,XMM0
            push R12
            movapd XMM4,XMM0
            push RBP
            mulsd XMM1,XMM0
            movapd XMM0,XMM3
            pxor XMM6,XMM6
            push RBX
            mulsd XMM0,XMM3
            mov RBX,RDI
            mov R13,RSI
            sub RSP,104
.L_4092bc:

            mov R12,RCX
            addsd XMM1,XMM0
            ucomisd XMM6,XMM1
            sqrtsd XMM8,XMM1
            ja .L_4096ad
.L_4092d2:

            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            ja .L_40970f
.L_4092ec:

            movapd XMM1,XMM8
            movsd XMM0,QWORD PTR [RIP+.L_447e58]
            divsd XMM1,QWORD PTR [RBX]
            ucomisd XMM0,XMM1
            jbe .L_409518

            movapd XMM1,XMM5
            mov QWORD PTR [RDX],0
            divsd XMM1,QWORD PTR [RBX]
            ucomisd XMM0,XMM1
            ja .L_4094c0
.L_409320:

            movapd XMM7,XMM8
            movsd XMM10,QWORD PTR [RIP+.L_4470e8]
            movsd XMM11,QWORD PTR [RBX+32]
            divsd XMM7,XMM5
            movapd XMM0,XMM10
            movapd XMM9,XMM2
            subsd XMM0,XMM11
            mulsd XMM0,XMM11
            divsd XMM9,XMM5
            mulsd XMM0,XMM7
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movapd XMM4,XMM5
            mulsd XMM0,XMM7
            subsd XMM4,XMM0
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            movapd XMM0,XMM4
            ja .L_40976d
.L_40937b:

            movapd XMM4,XMM5
            movapd XMM3,XMM5
            xor EBP,EBP
            divsd XMM4,XMM1
            subsd XMM3,XMM11
            mulsd XMM3,XMM7
            mulsd XMM3,XMM4
            mulsd XMM4,XMM9
            jmp .L_409437
.L_4093a0:

            mulsd XMM1,QWORD PTR [RBX+32]
            movapd XMM13,XMM5
            divsd XMM1,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM7
            mulsd XMM0,XMM7
            subsd XMM13,XMM0
            ucomisd XMM6,XMM13
            sqrtsd XMM11,XMM13
            movapd XMM0,XMM13
            ja .L_409617
.L_4093dd:

            movapd XMM0,XMM5
            movapd XMM14,XMM5
            divsd XMM0,XMM11
            subsd XMM14,XMM1
            movapd XMM1,XMM14
            mulsd XMM1,XMM7
            mulsd XMM1,XMM0
            mulsd XMM0,XMM9
            mulsd XMM4,XMM1
            mulsd XMM3,XMM0
            subsd XMM3,XMM4
            mulsd XMM3,XMM3
            ucomisd XMM3,QWORD PTR [RIP+.L_448450]
            jbe .L_4094f0

            cmp EBP,30
            je .L_4094f0

            movsd XMM11,QWORD PTR [RBX+32]
            movapd XMM3,XMM1
            movapd XMM4,XMM0
.L_409437:

            mulsd XMM11,XMM4
            movapd XMM0,XMM5
            add EBP,1
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM11,XMM4
            subsd XMM0,XMM11
            ucomisd XMM6,XMM0
            sqrtsd XMM12,XMM0
            movapd XMM11,XMM0
            ja .L_40956a
.L_409465:

            divsd XMM1,XMM12
            movapd XMM0,XMM3
            movapd XMM12,XMM4
            mulsd XMM0,XMM8
            mulsd XMM12,XMM2
            mulsd XMM11,XMM1
            addsd XMM0,XMM12
            subsd XMM0,XMM11
            movsd QWORD PTR [R12],XMM0
            addsd XMM0,XMM1
            ucomisd XMM0,XMM6
            jp .L_4093a0

            jne .L_4093a0

            mov QWORD PTR [R13],0
            add RSP,104
.L_4094b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4094c0:

            mov RAX,QWORD PTR [RIP+.L_447a20]
            mov QWORD PTR [R13],RAX
            movsd XMM0,QWORD PTR [RBX+8]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [R12],XMM0
            add RSP,104
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4094f0:

            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            divsd XMM0,XMM1
            call atan@PLT

            movsd QWORD PTR [R13],XMM0
            add RSP,104
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409518:

            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+40],XMM6
            movapd XMM0,XMM3
            mov QWORD PTR [RSP+32],RDX
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM8
            call atan2@PLT

            mov RDX,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RDX],XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_409320
.L_40956a:

            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM12
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,XMM4
            movapd XMM11,XMM5
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            mulsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            subsd XMM11,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_409465
.L_409617:

            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM11
            call sqrt@PLT

            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM9,QWORD PTR [RSP+40]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM11,QWORD PTR [RSP+8]
            jmp .L_4093dd
.L_4096ad:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM6
            mov QWORD PTR [RSP+48],RDX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4092d2
.L_40970f:

            movsd QWORD PTR [RSP+56],XMM6
            mov QWORD PTR [RSP+48],RDX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM8
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_4092ec
.L_40976d:

            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM11,QWORD PTR [RBX+32]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40937b
.L_4097e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4097f0:

            test RDI,RDI
            je .L_409868

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            jmp .L_409811
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409808:

            mov RBX,QWORD PTR [RBX+40]
            test RBX,RBX
            je .L_409858
.L_409811:

            mov RDI,QWORD PTR [RBX+32]
            mov EDX,8
            mov RSI,RBP
            call strncmp@PLT

            test EAX,EAX
            je .L_409848

            mov RDI,QWORD PTR [RBX+48]
            test RDI,RDI
            je .L_409808

            mov RSI,RBP
            call .L_4097f0

            test RAX,RAX
            je .L_409808

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409848:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409858:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409868:

            xor EAX,EAX
            ret 
.L_40986b:

            nop
            nop
            nop
            nop
            nop
.L_409870:

            test RSI,RSI
            je .L_4098d0

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40987c:

            mov RBX,RSI
            mov RSI,QWORD PTR [RSI+48]
            test RSI,RSI
            je .L_40989c
.L_409888:

            mov R12,QWORD PTR [RSI+40]
            mov RDI,RBP
            call .L_409870

            test R12,R12
            mov RSI,R12
            jne .L_409888
.L_40989c:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_4098aa

            call .L_4466c0
.L_4098aa:

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_4098c0

            call free@PLT
.L_4098c0:

            mov RDI,RBX
            pop RBX
.L_4098c4:

            pop RBP
            pop R12
            jmp .L_403730
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4098d0:

            ret 
.L_4098d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            xor EBP,EBP
            sub RSP,168
.L_4098f3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_409932

            cmp QWORD PTR [RSI+32],0
            mov RBX,RSI
            je .L_409932

            mov R12,RDI
            call .L_40b910

            mov RAX,QWORD PTR [RBX+32]
            cmp QWORD PTR [RAX+120],0
            je .L_409960
.L_409928:

            mov EBP,1
            call .L_40b9b0
.L_409932:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_409fe2

            add RSP,168
.L_409952:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409960:

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RIP+.L_448458]
            mov R8,QWORD PTR [RBX+16]
            mov ECX,7
            lea RBP,QWORD PTR [RSP+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R8
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movaps XMMWORD PTR [RSP+128],XMM0

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_409d10

            lea RDI,QWORD PTR [RIP+.L_44845f]
            mov ECX,8
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_409d60

            lea RDI,QWORD PTR [RIP+.L_448467]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            je .L_409b30

            lea RDI,QWORD PTR [RIP+.L_44846c]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            je .L_409da0

            lea RDI,QWORD PTR [RIP+.L_448488]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            jne .L_409d90

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RDI,R12
            mov R14D,DWORD PTR [RAX+112]
            mov R15D,DWORD PTR [RAX+116]
            call .L_403dc0

            test RAX,RAX
            mov R13,RAX
            je .L_409cf0

            imul R14D,R15D
            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            movsxd R15,R14D
            call .L_406410

            lea RDI,QWORD PTR [R15*4]
            call .L_403700

            test RAX,RAX
            mov QWORD PTR [RSP+136],RAX
            je .L_409cf0

            mov R8,R13
            mov RCX,R15
            mov EDX,4
            mov RSI,RAX
            mov RDI,R12
            call .L_4063f0

            cmp R15,RAX
            jne .L_409f9f

            test R14D,R14D
            mov RAX,QWORD PTR [RSP+136]
            jle .L_409cce

            lea EDX,DWORD PTR [R14-1]
            lea RSI,QWORD PTR [RAX+RDX*4+4]
.L_409afe:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+3]
            add RAX,4
            mov BYTE PTR [RAX-4],CL
            mov BYTE PTR [RAX-1],DL
            movzx ECX,BYTE PTR [RAX-2]
            movzx EDX,BYTE PTR [RAX-3]
            mov BYTE PTR [RAX-3],CL
            mov BYTE PTR [RAX-2],DL
            cmp RSI,RAX
            jne .L_409afe

            jmp .L_409cce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409b30:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RDI,R12
            call .L_403dc0

            test RAX,RAX
            mov R13,RAX
            je .L_409cf0

            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_406410

            mov RAX,QWORD PTR [RBX+32]
            movsxd RDI,DWORD PTR [RAX+112]
            shl RDI,4
            call .L_403700

            mov R14,RAX
            mov RAX,QWORD PTR [RBX+32]
            mov EDI,DWORD PTR [RAX+112]
            imul EDI,DWORD PTR [RAX+116]
            movsxd RDI,EDI
            shl RDI,3
            call .L_403700

            test RAX,RAX
            mov QWORD PTR [RSP+136],RAX
            je .L_409cf0

            test R14,R14
            je .L_409cf0

            mov RAX,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RAX+116]
            test ECX,ECX
            jle .L_409cc6

            mov ECX,DWORD PTR [RAX+112]
            movsd XMM0,QWORD PTR [RIP+.L_448270]
            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
.L_409bc8:

            add ECX,ECX
            mov EDX,8
            mov RSI,R14
            movsxd RCX,ECX
            mov RDI,R12
            mov R8,R13
            movsd QWORD PTR [RSP+8],XMM0
            call .L_4063f0

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
            lea EDX,DWORD PTR [RCX+RCX*1]
            movsxd RSI,EDX
            cmp RAX,RSI
            jne .L_409f78

            test EDX,EDX
            movsd XMM0,QWORD PTR [RSP+8]
            jle .L_409c46

            lea EAX,DWORD PTR [RDX-1]
            mov RDI,R14
            lea R9,QWORD PTR [R14+RAX*8+8]
.L_409c11:

            lea RAX,QWORD PTR [RDI+7]
            lea R8,QWORD PTR [RDI+3]
            mov RDX,RDI
.L_409c1c:

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RAX]
            sub RAX,1
            add RDX,1
            mov BYTE PTR [RDX-1],SIL
            mov BYTE PTR [RAX+1],CL
            cmp R8,RAX
            jne .L_409c1c

            add RDI,8
            cmp R9,RDI
            jne .L_409c11

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
.L_409c46:

            test ECX,ECX
            jle .L_409cb8

            mov EDX,R15D
            mov RSI,QWORD PTR [RSP+136]
            movsxd RAX,ECX
            imul EDX,ECX
            movsxd RDX,EDX
            add RDX,RAX
            shl RDX,3
            lea RAX,QWORD PTR [RSI+RDX*1-4]
            lea RSI,QWORD PTR [RSI+RDX*1-12]
            lea EDX,DWORD PTR [RCX-1]
            shl RDX,3
            sub RSI,RDX
            mov RDX,R14
            nop
            nop
            nop
            nop
.L_409c80:

            movsd XMM1,QWORD PTR [RDX]
            add RDX,16
            sub RAX,8
            pxor XMM2,XMM2
            mulsd XMM1,XMM0
            pxor XMM3,XMM3
            cvtsd2ss XMM2,XMM1
            movsd XMM1,QWORD PTR [RDX-8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RAX+8],XMM2
            movss DWORD PTR [RAX+4],XMM3
            cmp RAX,RSI
            jne .L_409c80
.L_409cb8:

            add R15D,1
            cmp DWORD PTR [RDI+116],R15D
            jg .L_409bc8
.L_409cc6:

            mov RDI,R14
            call .L_403730
.L_409cce:

            mov RSI,R13
.L_409cd1:

            mov RDI,R12
            call .L_406440

            mov RAX,QWORD PTR [RBX+32]
            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RAX+120],RDX
            jmp .L_409928
          .byte 0x66
          .byte 0x90
.L_409cf0:

            mov ESI,4294967258
            mov RDI,R12
            xor EBP,EBP
            call .L_404200

            call .L_40b9b0

            jmp .L_409932
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409d10:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RDI,R12
            call .L_403dc0

            test RAX,RAX
            mov R13,RAX
            je .L_409cf0

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_4462b0
.L_409d39:

            mov RSI,R13
            mov RDI,R12
            mov EBP,EAX
            call .L_406440

            mov RAX,QWORD PTR [RBX+32]
            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RAX+120],RDX
            call .L_40b9b0

            jmp .L_409932
.L_409d60:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RDI,R12
            call .L_403dc0

            test RAX,RAX
            mov R13,RAX
            je .L_409cf0

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_446450

            jmp .L_409d39
          .byte 0x90
.L_409d90:

            call .L_40b9b0

            xor EBP,EBP
            jmp .L_409932
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409da0:

            lea RDX,QWORD PTR [RIP+.L_448471]
            mov RCX,RAX
            mov ESI,3
            xor EAX,EAX
            mov RDI,R12
            call .L_404320

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RDI,R12
            call .L_403dc0

            test RAX,RAX
            mov R14,RAX
            je .L_409cf0

            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_406410

            mov RAX,QWORD PTR [RBX+32]
            movsxd RDI,DWORD PTR [RAX+112]
            shl RDI,4
            call .L_403700

            mov R13,RAX
            mov RAX,QWORD PTR [RBX+32]
            mov EDI,DWORD PTR [RAX+112]
            imul EDI,DWORD PTR [RAX+116]
            movsxd RDI,EDI
            shl RDI,3
            call .L_403700

            test R13,R13
            mov QWORD PTR [RSP+136],RAX
            je .L_409cf0

            test RAX,RAX
            je .L_409cf0

            mov RAX,QWORD PTR [RBX+32]
            mov EDX,DWORD PTR [RAX+116]
            test EDX,EDX
            jle .L_409f1f

            mov ECX,DWORD PTR [RAX+112]
            movsd XMM1,QWORD PTR [RIP+.L_448270]
            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
.L_409e50:

            shl ECX,2
            mov EDX,4
            mov RSI,R13
            movsxd RCX,ECX
            mov RDI,R12
            mov R8,R14
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4063f0

            mov RDI,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RDI+112]
            lea EDX,DWORD PTR [RCX*4]
            movsxd RSI,EDX
            cmp RAX,RSI
            jne .L_409fb6

            mov EAX,DWORD PTR [RBX+28]
            test EAX,EAX
            jne .L_409f30
.L_409e9a:

            test ECX,ECX
            jle .L_409f11

            mov EDX,R15D
            mov RSI,QWORD PTR [RSP+136]
            movsxd RAX,ECX
            imul EDX,ECX
            movsxd RDX,EDX
            add RDX,RAX
            shl RDX,3
            lea RAX,QWORD PTR [RSI+RDX*1-4]
            lea RSI,QWORD PTR [RSI+RDX*1-12]
            lea EDX,DWORD PTR [RCX-1]
            shl RDX,3
            sub RSI,RDX
            mov RDX,R13
.L_409ed0:

            pxor XMM0,XMM0
            sub RAX,8
            add RDX,16
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDX-16]
            mulsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RAX+8],XMM4
            cvtss2sd XMM0,DWORD PTR [RDX-12]
            mulsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RAX+4],XMM5
            cmp RAX,RSI
            jne .L_409ed0
.L_409f11:

            add R15D,1
            cmp DWORD PTR [RDI+116],R15D
            jg .L_409e50
.L_409f1f:

            mov RDI,R13
            call .L_403730

            mov RSI,R14
            jmp .L_409cd1
          .byte 0x90
.L_409f30:

            test EDX,EDX
            jle .L_409e9a

            lea EAX,DWORD PTR [RDX-1]
            lea RSI,QWORD PTR [R13+RAX*4+4]
            mov RAX,R13
            nop
            nop
            nop
            nop
            nop
.L_409f48:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+3]
            add RAX,4
            mov BYTE PTR [RAX-4],CL
            mov BYTE PTR [RAX-1],DL
            movzx ECX,BYTE PTR [RAX-2]
            movzx EDX,BYTE PTR [RAX-3]
            mov BYTE PTR [RAX-3],CL
            mov BYTE PTR [RAX-2],DL
            cmp RAX,RSI
            jne .L_409f48

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
            jmp .L_409e9a
.L_409f78:

            mov RDI,R14
            call .L_403730

            mov RDI,QWORD PTR [RSP+136]
            call .L_403730

            mov ESI,4294967258
            mov RDI,R12
            call .L_404200

            jmp .L_409932
.L_409f9f:

            mov RDI,QWORD PTR [RSP+136]
            call .L_403730

            call .L_40b9b0

            jmp .L_409932
.L_409fb6:

            mov RDI,R13
            call .L_403730

            mov RDI,QWORD PTR [RSP+136]
            call .L_403730

            mov ESI,4294967258
            mov RDI,R12
            call .L_404200

            call .L_40b9b0

            jmp .L_409932
.L_409fe2:

            call __stack_chk_fail@PLT
.L_409fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ff0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,1464
.L_40a007:

            mov DWORD PTR [RIP+.L_65de9c],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1448],RAX
            xor EAX,EAX
            call __errno_location@PLT

            mov EDI,56
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RBP],0
            call .L_403700

            pxor XMM0,XMM0
            mov RBX,RAX
            mov RDI,R13
            mov QWORD PTR [RAX+48],0
            lea R14,QWORD PTR [RSP+416]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            call strdup@PLT

            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_44848c]
            mov EDX,1025
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],RAX
            mov DWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            call __strcpy_chk@PLT

            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RSI,R14
            mov RDI,RBP
            call .L_403dc0

            test RAX,RAX
            je .L_40a548

            mov RDI,R14
            lea R14,QWORD PTR [RSP+80]
            mov R12,RAX
            call strdup@PLT

            mov R8,R12
            mov QWORD PTR [RBX+8],RAX
            mov ECX,1
            mov EDX,160
            mov RSI,R14
            mov RDI,RBP
            call .L_4063f0

            cmp RAX,1
            je .L_40a0fb

            mov DWORD PTR [RBP],0
.L_40a0fb:

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBP
            call .L_406410

            lea RDI,QWORD PTR [RIP+.L_448494]
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a168

            lea RSI,QWORD PTR [R14+96]
            lea RDI,QWORD PTR [RIP+.L_44849b]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a168

            lea RSI,QWORD PTR [R14+144]
            lea RDI,QWORD PTR [RIP+.L_4484a2]
            mov ECX,16

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a700

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a168:

            lea RDI,QWORD PTR [RIP+.L_4484b3]
            mov ECX,8
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a4e0
.L_40a186:

            mov RDI,R13
            call strlen@PLT

            cmp RAX,4
            jbe .L_40a580

            lea RDX,QWORD PTR [R13+RAX*1-3]
            lea R15,QWORD PTR [RIP+.L_448488]
            mov ECX,4
            mov RSI,RDX
            mov RDI,R15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a1d8

            lea RDI,QWORD PTR [RIP+.L_4484d2]
            mov ECX,4
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a580
.L_40a1d8:

            lea R13,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,40
            mov RDI,RBP
            mov RSI,R13
            call .L_4063f0

            cmp RAX,1
            lea R8,QWORD PTR [R13+32]
            jne .L_40a531
.L_40a206:

            lea RAX,QWORD PTR [R13+7]
            lea RDI,QWORD PTR [R13+3]
            mov RDX,R13
.L_40a211:

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RAX]
            sub RAX,1
            add RDX,1
            mov BYTE PTR [RDX-1],SIL
            mov BYTE PTR [RAX+1],CL
            cmp RAX,RDI
            jne .L_40a211

            add R13,8
            cmp R13,R8
            jne .L_40a206

            movzx EAX,BYTE PTR [RSP+272]
            movzx EDX,BYTE PTR [RSP+275]
            movsd XMM0,QWORD PTR [RSP+248]
            mov RCX,QWORD PTR [RSP+248]
            movsd XMM1,QWORD PTR [RIP+.L_448718]
            mov R14,QWORD PTR [RSP+256]
            mov R13,QWORD PTR [RSP+264]
            mov BYTE PTR [RSP+275],AL
            movzx EAX,BYTE PTR [RSP+273]
            mov BYTE PTR [RSP+272],DL
            movzx EDX,BYTE PTR [RSP+274]
            ucomisd XMM1,XMM0
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+72],R14
            mov BYTE PTR [RSP+274],AL
            movzx EAX,BYTE PTR [RSP+276]
            mov BYTE PTR [RSP+273],DL
            movzx EDX,BYTE PTR [RSP+279]
            mov QWORD PTR [RSP+64],R13
            mov BYTE PTR [RSP+279],AL
            movzx EAX,BYTE PTR [RSP+277]
            mov BYTE PTR [RSP+276],DL
            movzx EDX,BYTE PTR [RSP+278]
            mov BYTE PTR [RSP+278],AL
            mov RAX,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+277],DL
            mov QWORD PTR [RSP+56],RAX
            ja .L_40a6e0

            movsd XMM4,QWORD PTR [RIP+.L_448720]
            ucomisd XMM0,XMM4
            ja .L_40a6e0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM2,QWORD PTR [RIP+.L_448728]
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM1
            ja .L_40a6e0

            ucomisd XMM1,QWORD PTR [RIP+.L_448730]
            ja .L_40a6e0

            mov R11D,DWORD PTR [RSP+272]
            mov R10D,DWORD PTR [RSP+276]
            mov EDI,128
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            mov DWORD PTR [RSP+24],R11D
            movsd QWORD PTR [RSP+40],XMM4
            mov DWORD PTR [RSP+16],R10D
            call .L_403700

            movsd XMM0,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RIP+.L_448738]
            mov R11D,DWORD PTR [RSP+24]
            movdqa XMM2,XMMWORD PTR [RIP+.L_448760]
            mov R9,RAX
            ucomisd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],R13
            movups XMMWORD PTR [RAX],XMM2
            movabs RAX,2338606709420007524
            mov DWORD PTR [R9+24],1701603654
            mov BYTE PTR [R9+28],0
            movsd QWORD PTR [R9+80],XMM0
            movsd QWORD PTR [R9+88],XMM1
            movsd XMM2,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],R14
            movsd XMM3,QWORD PTR [RSP+8]
            mov QWORD PTR [R9+16],RAX
            movsd QWORD PTR [R9+96],XMM2
            mov DWORD PTR [R9+112],R10D
            mov DWORD PTR [R9+116],R11D
            movsd QWORD PTR [R9+104],XMM3
            jb .L_40a401

            movsd XMM4,QWORD PTR [RSP+40]
            subsd XMM0,XMM4
            movsd QWORD PTR [R9+80],XMM0
.L_40a401:

            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            jb .L_40a426

            pxor XMM4,XMM4
            cvtsi2sd XMM4,R10D
            mulsd XMM4,XMM2
            addsd XMM4,XMM0
            ucomisd XMM4,XMM5
            ja .L_40b418
.L_40a426:

            mov ECX,R10D
            mov R8D,R11D
.L_40a42c:

            pxor XMM4,XMM4
            sub R11D,1
            sub R10D,1
            lea RDX,QWORD PTR [RIP+.L_448670]
            mov ESI,3
            mov RDI,RBP
            mov EAX,4
            mov QWORD PTR [RSP+8],R9
            cvtsi2sd XMM4,R11D
            mulsd XMM3,XMM4
            pxor XMM4,XMM4
            cvtsi2sd XMM4,R10D
            addsd XMM3,XMM1
            mulsd XMM2,XMM4
            addsd XMM2,XMM0
            call .L_404320

            movsd XMM0,QWORD PTR [RIP+.L_448708]
            mov R9,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mov QWORD PTR [R9+120],0
            mulsd XMM1,QWORD PTR [R9+80]
            movsd QWORD PTR [R9+80],XMM1
            movsd XMM1,QWORD PTR [R9+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R9+88],XMM1
            movsd XMM1,QWORD PTR [R9+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R9+104]
            movsd QWORD PTR [R9+96],XMM1
            movsd QWORD PTR [R9+104],XMM0
            mov QWORD PTR [RBX+32],R9
            mov DWORD PTR [RBX+24],40
            mov QWORD PTR [RBX+16],R15
            jmp .L_40a638
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a4e0:

            lea RSI,QWORD PTR [R14+48]
            lea RDI,QWORD PTR [RIP+.L_4484bc]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R10B
            sbb R10B,0
            movsx R15D,R10B
            test R15D,R15D
            jne .L_40a186

            lea R13,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RDI,RBP
            mov RSI,R13
            call .L_4063f0

            cmp RAX,1
            je .L_40abc8
.L_40a531:

            mov ESI,4294967258
            mov RDI,RBP
            call .L_404200

            jmp .L_40a638
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a548:

            mov DWORD PTR [RBP],0
.L_40a54f:

            mov RCX,QWORD PTR [RSP+1448]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40b537

            add RSP,1464
.L_40a570:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a580:

            lea RDI,QWORD PTR [RIP+.L_4484d6]
            mov RSI,R14
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RSI,R12
            mov RDI,RBP
            seta AL
            sbb AL,0
            test AL,AL
            je .L_40a650

            call .L_446360

            test RAX,RAX
            je .L_40aba8

            mov R9D,DWORD PTR [RAX+116]
            mov R8D,DWORD PTR [RAX+112]
            lea RCX,QWORD PTR [RIP+.L_448458]
            pxor XMM3,XMM3
            mov QWORD PTR [RBX+32],RAX
            pxor XMM2,XMM2
            mov QWORD PTR [RBX+16],RCX
            lea EDX,DWORD PTR [R9-1]
            movsd XMM4,QWORD PTR [RAX+88]
            movsd XMM0,QWORD PTR [RAX+80]
            mov RCX,RAX
            cvtsi2sd XMM3,EDX
            lea EDX,DWORD PTR [R8-1]
            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov ESI,2
            cvtsi2sd XMM2,EDX
            lea RDX,QWORD PTR [RIP+.L_4486d8]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RAX+104]
            mulsd XMM2,QWORD PTR [RAX+96]
            mov EAX,4
            addsd XMM3,XMM4
            addsd XMM2,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            call .L_404320

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a638:

            mov RSI,R12
            mov RDI,RBP
            call .L_406440

            jmp .L_40a54f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a650:

            call .L_446510

            mov R9D,DWORD PTR [RAX+116]
            mov R8D,DWORD PTR [RAX+112]
            lea RCX,QWORD PTR [RIP+.L_44845f]
            pxor XMM3,XMM3
            mov QWORD PTR [RBX+32],RAX
            pxor XMM2,XMM2
            mov QWORD PTR [RBX+16],RCX
            lea EDX,DWORD PTR [R9-1]
            movsd XMM4,QWORD PTR [RAX+88]
            movsd XMM0,QWORD PTR [RAX+80]
            mov RCX,RAX
            cvtsi2sd XMM3,EDX
            lea EDX,DWORD PTR [R8-1]
            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov ESI,2
            cvtsi2sd XMM2,EDX
            lea RDX,QWORD PTR [RIP+.L_4486a0]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RAX+104]
            mulsd XMM2,QWORD PTR [RAX+96]
            mov EAX,4
            addsd XMM3,XMM4
            addsd XMM2,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            call .L_404320

            jmp .L_40a638
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6e0:

            lea RDX,QWORD PTR [RIP+.L_448608]
.L_40a6e7:

            mov ESI,1
            mov RDI,RBP
            xor EAX,EAX
            call .L_404320

            jmp .L_40a531
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a700:

            lea RSI,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RDI,RBP
            call .L_4063f0

            cmp RAX,1
            jne .L_40a531

            movzx EAX,BYTE PTR [RSP+248]
            movzx EDX,BYTE PTR [RSP+251]
            mov BYTE PTR [RSP+251],AL
            mov BYTE PTR [RSP+248],DL
            movzx EAX,BYTE PTR [RSP+249]
            movzx EDX,BYTE PTR [RSP+250]
            mov BYTE PTR [RSP+250],AL
            mov BYTE PTR [RSP+249],DL
            movzx EAX,BYTE PTR [RSP+264]
            movzx EDX,BYTE PTR [RSP+271]
            mov BYTE PTR [RSP+271],AL
            mov BYTE PTR [RSP+264],DL
            movzx EAX,BYTE PTR [RSP+265]
            movzx EDX,BYTE PTR [RSP+270]
            mov BYTE PTR [RSP+270],AL
            mov BYTE PTR [RSP+265],DL
            movzx EAX,BYTE PTR [RSP+266]
            movzx EDX,BYTE PTR [RSP+269]
            mov BYTE PTR [RSP+269],AL
            mov BYTE PTR [RSP+266],DL
            movzx EAX,BYTE PTR [RSP+267]
            movzx EDX,BYTE PTR [RSP+268]
            mov BYTE PTR [RSP+268],AL
            mov BYTE PTR [RSP+267],DL
            movzx EAX,BYTE PTR [RSP+280]
            movzx EDX,BYTE PTR [RSP+287]
            mov BYTE PTR [RSP+287],AL
            mov BYTE PTR [RSP+280],DL
            movzx EAX,BYTE PTR [RSP+281]
            movzx EDX,BYTE PTR [RSP+286]
            mov BYTE PTR [RSP+286],AL
            mov BYTE PTR [RSP+281],DL
            movzx EAX,BYTE PTR [RSP+282]
            movzx EDX,BYTE PTR [RSP+285]
            mov BYTE PTR [RSP+285],AL
            mov BYTE PTR [RSP+282],DL
            movzx EAX,BYTE PTR [RSP+283]
            movzx EDX,BYTE PTR [RSP+284]
            mov BYTE PTR [RSP+284],AL
            mov BYTE PTR [RSP+283],DL
            movzx EAX,BYTE PTR [RSP+296]
            movzx EDX,BYTE PTR [RSP+303]
            mov BYTE PTR [RSP+303],AL
            mov BYTE PTR [RSP+296],DL
            movzx EAX,BYTE PTR [RSP+297]
            movzx EDX,BYTE PTR [RSP+302]
            mov BYTE PTR [RSP+302],AL
            mov BYTE PTR [RSP+297],DL
            movzx EAX,BYTE PTR [RSP+298]
            movzx EDX,BYTE PTR [RSP+301]
            mov BYTE PTR [RSP+301],AL
            mov BYTE PTR [RSP+298],DL
            movzx EAX,BYTE PTR [RSP+299]
            movzx EDX,BYTE PTR [RSP+300]
            mov BYTE PTR [RSP+300],AL
            mov BYTE PTR [RSP+299],DL
            movzx EAX,BYTE PTR [RSP+312]
            movzx EDX,BYTE PTR [RSP+319]
            mov BYTE PTR [RSP+319],AL
            mov BYTE PTR [RSP+312],DL
            movzx EAX,BYTE PTR [RSP+313]
            movzx EDX,BYTE PTR [RSP+318]
            mov BYTE PTR [RSP+318],AL
            mov BYTE PTR [RSP+313],DL
            movzx EAX,BYTE PTR [RSP+314]
            movzx EDX,BYTE PTR [RSP+317]
            mov BYTE PTR [RSP+317],AL
            mov BYTE PTR [RSP+314],DL
            movzx EAX,BYTE PTR [RSP+315]
            movzx EDX,BYTE PTR [RSP+316]
            mov BYTE PTR [RSP+316],AL
            mov BYTE PTR [RSP+315],DL
            movzx EAX,BYTE PTR [RSP+328]
            movzx EDX,BYTE PTR [RSP+335]
            mov BYTE PTR [RSP+335],AL
            mov BYTE PTR [RSP+328],DL
            movzx EAX,BYTE PTR [RSP+329]
            movzx EDX,BYTE PTR [RSP+334]
            mov BYTE PTR [RSP+334],AL
            mov BYTE PTR [RSP+329],DL
            movzx EAX,BYTE PTR [RSP+330]
            movzx EDX,BYTE PTR [RSP+333]
            mov BYTE PTR [RSP+333],AL
            mov BYTE PTR [RSP+330],DL
            movzx EAX,BYTE PTR [RSP+331]
            movzx EDX,BYTE PTR [RSP+332]
            mov BYTE PTR [RSP+332],AL
            mov BYTE PTR [RSP+331],DL
            movzx EAX,BYTE PTR [RSP+344]
            movzx EDX,BYTE PTR [RSP+351]
            mov BYTE PTR [RSP+351],AL
            mov BYTE PTR [RSP+344],DL
            movzx EAX,BYTE PTR [RSP+345]
            movzx EDX,BYTE PTR [RSP+350]
            mov BYTE PTR [RSP+350],AL
            mov BYTE PTR [RSP+345],DL
            movzx EAX,BYTE PTR [RSP+346]
            movzx EDX,BYTE PTR [RSP+349]
            cmp DWORD PTR [RSP+248],12
            mov BYTE PTR [RSP+346],DL
            mov BYTE PTR [RSP+349],AL
            movzx EDX,BYTE PTR [RSP+348]
            movzx EAX,BYTE PTR [RSP+347]
            mov BYTE PTR [RSP+347],DL
            mov BYTE PTR [RSP+348],AL
            lea RDX,QWORD PTR [RIP+.L_4484f8]
            jne .L_40a6e7

            mov EDI,128
            call .L_403700

            movdqa XMM0,XMMWORD PTR [RIP+.L_448750]
            lea RDX,QWORD PTR [RIP+.L_448530]
            mov DWORD PTR [RAX+16],1701603654
            mov BYTE PTR [RAX+20],0
            mov R13,RAX
            movups XMMWORD PTR [RAX],XMM0
            mov ESI,3
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP+312]
            movq XMM5,QWORD PTR [RIP+.L_447ae0]
            movapd XMM0,XMM2
            movq XMM8,QWORD PTR [RIP+.L_447130]
            xorpd XMM0,XMM5
            movsd QWORD PTR [RAX+80],XMM0
            movsd XMM1,QWORD PTR [RSP+264]
            movsd QWORD PTR [RAX+88],XMM1
            movsd XMM4,QWORD PTR [RSP+296]
            movsd XMM6,QWORD PTR [RSP+344]
            subsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+280]
            movsd QWORD PTR [RAX+96],XMM6
            xorpd XMM4,XMM5
            movsd XMM7,QWORD PTR [RSP+328]
            andpd XMM2,XMM8
            movsd QWORD PTR [RAX+104],XMM7
            divsd XMM2,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            addsd XMM2,XMM6
            cvttsd2si ECX,XMM2
            movapd XMM2,XMM3
            subsd XMM2,XMM1
            andpd XMM2,XMM8
            divsd XMM2,XMM7
            add ECX,1
            mov DWORD PTR [RAX+112],ECX
            addsd XMM2,XMM6
            cvttsd2si R8D,XMM2
            movapd XMM2,XMM4
            add R8D,1
            mov DWORD PTR [RAX+116],R8D
            mov EAX,4
            call .L_404320

            movsd XMM0,QWORD PTR [RIP+.L_448708]
            mov QWORD PTR [R13+120],0
            movsd XMM1,QWORD PTR [R13+80]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,XMM0
            movsd QWORD PTR [R13+80],XMM1
            movsd XMM1,QWORD PTR [R13+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R13+88],XMM1
            movsd XMM1,QWORD PTR [R13+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R13+104]
            movsd QWORD PTR [R13+96],XMM1
            movsd QWORD PTR [R13+104],XMM0
            mov QWORD PTR [RBX+32],R13
            call .L_406430

            mov DWORD PTR [RBX+24],EAX
            lea RAX,QWORD PTR [RIP+.L_448467]
            mov QWORD PTR [RBX+16],RAX
            jmp .L_40a638
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aba8:

            lea RDX,QWORD PTR [RIP+.L_4484e0]
            mov ESI,2
            mov RDI,RBP
            call .L_404320

            jmp .L_40a638
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40abc8:

            movzx EDX,BYTE PTR [RSP+248]
            xor R14D,R14D
            cmp DL,11
            je .L_40ae6e

            movzx EAX,BYTE PTR [RSP+251]
            mov BYTE PTR [RSP+251],DL
            mov R14D,1
            movzx EDX,BYTE PTR [RSP+250]
            mov BYTE PTR [RSP+248],AL
            movzx EAX,BYTE PTR [RSP+249]
            mov BYTE PTR [RSP+249],DL
            movzx EDX,BYTE PTR [RSP+267]
            mov BYTE PTR [RSP+250],AL
            movzx EAX,BYTE PTR [RSP+264]
            mov BYTE PTR [RSP+264],DL
            movzx EDX,BYTE PTR [RSP+266]
            mov BYTE PTR [RSP+267],AL
            movzx EAX,BYTE PTR [RSP+265]
            mov BYTE PTR [RSP+265],DL
            movzx EDX,BYTE PTR [RSP+283]
            mov BYTE PTR [RSP+266],AL
            movzx EAX,BYTE PTR [RSP+280]
            mov BYTE PTR [RSP+280],DL
            movzx EDX,BYTE PTR [RSP+282]
            mov BYTE PTR [RSP+283],AL
            movzx EAX,BYTE PTR [RSP+281]
            mov BYTE PTR [RSP+281],DL
            movzx EDX,BYTE PTR [RSP+367]
            mov BYTE PTR [RSP+282],AL
            movzx EAX,BYTE PTR [RSP+360]
            mov BYTE PTR [RSP+360],DL
            movzx EDX,BYTE PTR [RSP+366]
            mov BYTE PTR [RSP+367],AL
            movzx EAX,BYTE PTR [RSP+361]
            mov BYTE PTR [RSP+361],DL
            mov BYTE PTR [RSP+366],AL
            movzx EAX,BYTE PTR [RSP+362]
            movzx EDX,BYTE PTR [RSP+365]
            mov BYTE PTR [RSP+365],AL
            movzx EAX,BYTE PTR [RSP+363]
            mov BYTE PTR [RSP+362],DL
            movzx EDX,BYTE PTR [RSP+364]
            mov BYTE PTR [RSP+364],AL
            movzx EAX,BYTE PTR [RSP+376]
            mov BYTE PTR [RSP+363],DL
            movzx EDX,BYTE PTR [RSP+383]
            mov BYTE PTR [RSP+383],AL
            movzx EAX,BYTE PTR [RSP+377]
            mov BYTE PTR [RSP+376],DL
            movzx EDX,BYTE PTR [RSP+382]
            mov BYTE PTR [RSP+382],AL
            movzx EAX,BYTE PTR [RSP+378]
            mov BYTE PTR [RSP+377],DL
            movzx EDX,BYTE PTR [RSP+381]
            mov BYTE PTR [RSP+381],AL
            movzx EAX,BYTE PTR [RSP+379]
            mov BYTE PTR [RSP+378],DL
            movzx EDX,BYTE PTR [RSP+380]
            mov BYTE PTR [RSP+380],AL
            movzx EAX,BYTE PTR [RSP+392]
            mov BYTE PTR [RSP+379],DL
            movzx EDX,BYTE PTR [RSP+399]
            mov BYTE PTR [RSP+399],AL
            movzx EAX,BYTE PTR [RSP+393]
            mov BYTE PTR [RSP+392],DL
            movzx EDX,BYTE PTR [RSP+398]
            mov BYTE PTR [RSP+398],AL
            movzx EAX,BYTE PTR [RSP+394]
            mov BYTE PTR [RSP+393],DL
            movzx EDX,BYTE PTR [RSP+397]
            mov BYTE PTR [RSP+397],AL
            movzx EAX,BYTE PTR [RSP+395]
            mov BYTE PTR [RSP+394],DL
            movzx EDX,BYTE PTR [RSP+396]
            mov BYTE PTR [RSP+396],AL
            movzx EAX,BYTE PTR [RSP+408]
            mov BYTE PTR [RSP+395],DL
            movzx EDX,BYTE PTR [RSP+415]
            mov BYTE PTR [RSP+415],AL
            movzx EAX,BYTE PTR [RSP+409]
            mov BYTE PTR [RSP+408],DL
            movzx EDX,BYTE PTR [RSP+414]
            mov BYTE PTR [RSP+414],AL
            movzx EAX,BYTE PTR [RSP+410]
            mov BYTE PTR [RSP+409],DL
            movzx EDX,BYTE PTR [RSP+413]
            mov BYTE PTR [RSP+413],AL
            movzx EAX,BYTE PTR [RSP+411]
            mov BYTE PTR [RSP+410],DL
            movzx EDX,BYTE PTR [RSP+412]
            mov BYTE PTR [RSP+412],AL
            mov BYTE PTR [RSP+411],DL
.L_40ae6e:

            mov EAX,DWORD PTR [RSP+280]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            jle .L_40a638
.L_40ae81:

            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RSI,R13
            mov RDI,RBP
            call .L_4063f0

            cmp RAX,1
            jne .L_40a531

            lea RDI,QWORD PTR [RIP+.L_4484c4]
            mov ECX,8
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40a531

            test R14D,R14D
            je .L_40b1d6

            movzx EAX,BYTE PTR [RSP+312]
            movzx EDX,BYTE PTR [RSP+319]
            mov BYTE PTR [RSP+319],AL
            mov BYTE PTR [RSP+312],DL
            movzx EAX,BYTE PTR [RSP+313]
            movzx EDX,BYTE PTR [RSP+318]
            mov BYTE PTR [RSP+318],AL
            mov BYTE PTR [RSP+313],DL
            movzx EAX,BYTE PTR [RSP+314]
            movzx EDX,BYTE PTR [RSP+317]
            mov BYTE PTR [RSP+317],AL
            mov BYTE PTR [RSP+314],DL
            movzx EAX,BYTE PTR [RSP+315]
            movzx EDX,BYTE PTR [RSP+316]
            mov BYTE PTR [RSP+316],AL
            mov BYTE PTR [RSP+315],DL
            movzx EAX,BYTE PTR [RSP+328]
            movzx EDX,BYTE PTR [RSP+335]
            mov BYTE PTR [RSP+335],AL
            mov BYTE PTR [RSP+328],DL
            movzx EAX,BYTE PTR [RSP+329]
            movzx EDX,BYTE PTR [RSP+334]
            mov BYTE PTR [RSP+334],AL
            mov BYTE PTR [RSP+329],DL
            movzx EAX,BYTE PTR [RSP+330]
            movzx EDX,BYTE PTR [RSP+333]
            mov BYTE PTR [RSP+333],AL
            mov BYTE PTR [RSP+330],DL
            movzx EAX,BYTE PTR [RSP+331]
            movzx EDX,BYTE PTR [RSP+332]
            mov BYTE PTR [RSP+332],AL
            mov BYTE PTR [RSP+331],DL
            movzx EAX,BYTE PTR [RSP+344]
            movzx EDX,BYTE PTR [RSP+351]
            mov BYTE PTR [RSP+351],AL
            mov BYTE PTR [RSP+344],DL
            movzx EAX,BYTE PTR [RSP+345]
            movzx EDX,BYTE PTR [RSP+350]
            mov BYTE PTR [RSP+350],AL
            mov BYTE PTR [RSP+345],DL
            movzx EAX,BYTE PTR [RSP+346]
            movzx EDX,BYTE PTR [RSP+349]
            mov BYTE PTR [RSP+349],AL
            mov BYTE PTR [RSP+346],DL
            movzx EAX,BYTE PTR [RSP+347]
            movzx EDX,BYTE PTR [RSP+348]
            mov BYTE PTR [RSP+348],AL
            mov BYTE PTR [RSP+347],DL
            movzx EAX,BYTE PTR [RSP+360]
            movzx EDX,BYTE PTR [RSP+367]
            mov BYTE PTR [RSP+367],AL
            mov BYTE PTR [RSP+360],DL
            movzx EAX,BYTE PTR [RSP+361]
            movzx EDX,BYTE PTR [RSP+366]
            mov BYTE PTR [RSP+366],AL
            mov BYTE PTR [RSP+361],DL
            movzx EAX,BYTE PTR [RSP+362]
            movzx EDX,BYTE PTR [RSP+365]
            mov BYTE PTR [RSP+365],AL
            mov BYTE PTR [RSP+362],DL
            movzx EAX,BYTE PTR [RSP+363]
            movzx EDX,BYTE PTR [RSP+364]
            mov BYTE PTR [RSP+364],AL
            mov BYTE PTR [RSP+363],DL
            movzx EAX,BYTE PTR [RSP+376]
            movzx EDX,BYTE PTR [RSP+383]
            mov BYTE PTR [RSP+383],AL
            mov BYTE PTR [RSP+376],DL
            movzx EAX,BYTE PTR [RSP+377]
            movzx EDX,BYTE PTR [RSP+382]
            mov BYTE PTR [RSP+382],AL
            mov BYTE PTR [RSP+377],DL
            movzx EAX,BYTE PTR [RSP+378]
            movzx EDX,BYTE PTR [RSP+381]
            mov BYTE PTR [RSP+381],AL
            mov BYTE PTR [RSP+378],DL
            movzx EAX,BYTE PTR [RSP+379]
            movzx EDX,BYTE PTR [RSP+380]
            mov BYTE PTR [RSP+380],AL
            mov BYTE PTR [RSP+379],DL
            movzx EAX,BYTE PTR [RSP+392]
            movzx EDX,BYTE PTR [RSP+399]
            mov BYTE PTR [RSP+399],AL
            mov BYTE PTR [RSP+392],DL
            movzx EAX,BYTE PTR [RSP+393]
            movzx EDX,BYTE PTR [RSP+398]
            mov BYTE PTR [RSP+398],AL
            mov BYTE PTR [RSP+393],DL
            movzx EAX,BYTE PTR [RSP+394]
            movzx EDX,BYTE PTR [RSP+397]
            mov BYTE PTR [RSP+397],AL
            mov BYTE PTR [RSP+394],DL
            movzx EAX,BYTE PTR [RSP+395]
            movzx EDX,BYTE PTR [RSP+396]
            mov BYTE PTR [RSP+396],AL
            mov BYTE PTR [RSP+395],DL
            movzx EAX,BYTE PTR [RSP+408]
            movzx EDX,BYTE PTR [RSP+411]
            mov BYTE PTR [RSP+411],AL
            mov BYTE PTR [RSP+408],DL
            movzx EAX,BYTE PTR [RSP+409]
            movzx EDX,BYTE PTR [RSP+410]
            mov BYTE PTR [RSP+410],AL
            mov BYTE PTR [RSP+409],DL
.L_40b1d6:

            mov EDI,128
            call .L_403700

            lea RSI,QWORD PTR [R13+8]
            mov EDX,8
            mov RDI,RAX
            call strncpy@PLT

            mov BYTE PTR [RAX+8],0
            lea RDX,QWORD PTR [RIP+.L_448560]
            mov RCX,RAX
            movsd XMM2,QWORD PTR [RSP+360]
            mov QWORD PTR [RSP+16],RAX
            mov ESI,3
            mov RDI,RBP
            movapd XMM0,XMM2
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RAX+80],XMM0
            movsd XMM1,QWORD PTR [RSP+312]
            movsd QWORD PTR [RAX+88],XMM1
            movsd XMM5,QWORD PTR [RSP+344]
            movsd XMM6,QWORD PTR [RSP+392]
            subsd XMM2,XMM5
            movsd XMM3,QWORD PTR [RSP+328]
            movsd QWORD PTR [RAX+96],XMM6
            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM4,QWORD PTR [RSP+376]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RAX+104],XMM4
            divsd XMM2,XMM6
            addsd XMM2,QWORD PTR [RIP+.L_4470f8]
            cvttsd2si R8D,XMM2
            movapd XMM2,XMM3
            subsd XMM2,XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            add R8D,1
            divsd XMM2,XMM4
            mov DWORD PTR [RAX+112],R8D
            movsd XMM4,QWORD PTR [RIP+.L_448710]
            divsd XMM0,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_4470f8]
            cvttsd2si R9D,XMM2
            movapd XMM2,XMM5
            divsd XMM1,XMM4
            add R9D,1
            mov DWORD PTR [RAX+116],R9D
            mov EAX,4
            divsd XMM3,XMM4
            divsd XMM2,XMM4
            call .L_404320

            movsd XMM0,QWORD PTR [RIP+.L_448270]
            mov R10,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            mov R8D,DWORD PTR [R10+112]
            mov R9D,DWORD PTR [R10+116]
            mulsd XMM1,QWORD PTR [R10+80]
            mov EAX,R8D
            imul EAX,R9D
            movsd QWORD PTR [R10+80],XMM1
            movsd XMM1,QWORD PTR [R10+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R10+88],XMM1
            movsd XMM1,QWORD PTR [R10+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R10+104]
            movsd QWORD PTR [R10+96],XMM1
            movsd QWORD PTR [R10+104],XMM0
            mov ECX,DWORD PTR [RSP+408]
            cmp EAX,ECX
            mov DWORD PTR [RSP+16],ECX
            jne .L_40b545

            test R15D,R15D
            mov QWORD PTR [R10+120],0
            jne .L_40b47d

            lea RAX,QWORD PTR [RIP+.L_44846c]
            mov RSI,R12
            mov RDI,RBP
            mov DWORD PTR [RBX+28],R14D
            mov QWORD PTR [RBX+32],R10
            mov QWORD PTR [RBX+16],RAX
            call .L_406430

            lea RSI,QWORD PTR [R13+24]
            lea RDI,QWORD PTR [RIP+.L_4484cd]
            mov DWORD PTR [RBX+24],EAX
            mov ECX,4
            mov R9,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b3e3
.L_40b399:

            lea RCX,QWORD PTR [R13+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+32],R9
            mov RSI,RCX
            mov QWORD PTR [RSP+24],RCX
            call .L_4097f0

            test RAX,RAX
            mov RCX,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            je .L_40b578

            mov RDX,QWORD PTR [RAX+48]
            test RDX,RDX
            jne .L_40b3d6

            jmp .L_40b53c
.L_40b3d3:

            mov RDX,RAX
.L_40b3d6:

            mov RAX,QWORD PTR [RDX+40]
            test RAX,RAX
            jne .L_40b3d3
.L_40b3df:

            mov QWORD PTR [RDX+40],R9
.L_40b3e3:

            mov EDX,DWORD PTR [RSP+16]
            mov ECX,1
            mov RSI,R12
            mov RDI,RBP
            add R15D,1
            shl EDX,4
            movsxd RDX,EDX
            call .L_406410

            cmp R15D,DWORD PTR [RSP+8]
            jne .L_40ae81

            jmp .L_40a638
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b418:

            lea RDX,QWORD PTR [RIP+.L_448638]
            mov ESI,2
            mov RDI,RBP
            xor EAX,EAX
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R11D
            movsd QWORD PTR [RSP+24],XMM3
            mov QWORD PTR [RSP+8],R9
            movsd QWORD PTR [RSP+16],XMM2
            call .L_404320

            mov R9,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [R9+88]
            mov R8D,DWORD PTR [R9+116]
            movsd XMM0,QWORD PTR [R9+80]
            mov ECX,DWORD PTR [R9+112]
            jmp .L_40a42c
.L_40b47d:

            mov EDI,56
            mov QWORD PTR [RSP+32],R10
            call .L_403700

            mov R9,RAX
            mov ECX,14
            xor EAX,EAX
            mov RDI,R9
            mov QWORD PTR [RSP+24],R9

            rep stosd DWORD PTR [RDI]

            mov RDI,QWORD PTR [RBX]
            call strdup@PLT

            mov R9,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+8]
            mov QWORD PTR [R9],RAX
            call strdup@PLT

            mov R9,QWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP+32]
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [R9+8],RAX
            lea RAX,QWORD PTR [RIP+.L_44846c]
            mov QWORD PTR [R9+32],R10
            mov QWORD PTR [R9+40],0
            mov DWORD PTR [R9+28],R14D
            mov QWORD PTR [R9+16],RAX
            call .L_406430

            mov R9,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [RIP+.L_4484cd]
            mov EDX,4
            mov DWORD PTR [R9+24],EAX
            call strncmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_40b399

            cmp RBX,R9
            je .L_40b3e3

            mov RDX,RBX
            jmp .L_40b529
.L_40b526:

            mov RDX,RAX
.L_40b529:

            mov RAX,QWORD PTR [RDX+40]
            test RAX,RAX
            jne .L_40b526

            jmp .L_40b3df
.L_40b537:

            call __stack_chk_fail@PLT
.L_40b53c:

            mov QWORD PTR [RAX+48],R9
            jmp .L_40b3e3
.L_40b545:

            sub RSP,8
.L_40b549:

            lea RDX,QWORD PTR [RIP+.L_448590]
            mov ESI,1
            push RAX
            mov ECX,DWORD PTR [RSP+32]
            xor EAX,EAX
            mov RDI,RBP
            call .L_404320

            mov ESI,4294967258
            mov RDI,RBP
            call .L_404200

            pop RAX
            pop RDX
            jmp .L_40a638
.L_40b578:

            mov R8,QWORD PTR [R9+32]
            lea RDX,QWORD PTR [RIP+.L_4485c8]
            mov ESI,1
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R9
            call .L_404320

            mov RAX,RBX
            mov R9,QWORD PTR [RSP+24]
            jmp .L_40b5a2
.L_40b59f:

            mov RAX,RDX
.L_40b5a2:

            mov RDX,QWORD PTR [RAX+40]
            test RDX,RDX
            jne .L_40b59f

            mov QWORD PTR [RAX+40],R9
            jmp .L_40b3e3
.L_40b5b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b5c0:

            push RBX
            mov RBX,QWORD PTR [RIP+.L_65dd88]
            test RBX,RBX
            je .L_40b5ff

            nop
            nop
            nop
.L_40b5d0:

            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RIP+.L_65dd88],RAX
            call .L_404160

            mov RSI,RBX
            mov RDI,RAX
            call .L_409870

            mov RBX,QWORD PTR [RIP+.L_65dd88]
            test RBX,RBX
            jne .L_40b5d0
.L_40b5ff:

            pop RBX
            ret 
.L_40b601:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b610:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,1080
.L_40b627:

            mov DWORD PTR [RIP+.L_65de9c],0
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP],RSI
            call .L_40b910

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_40b8dc

            lea RBP,QWORD PTR [RSP+32]
            xor R13D,R13D
            xor EBX,EBX
            nop
            nop
            nop
.L_40b670:

            cmp AL,64
            mov RSI,QWORD PTR [RSP]
            jne .L_40b8b0

            add RSI,1
            movzx R14D,BYTE PTR [RSI]
            mov DWORD PTR [RSP+28],0
            cmp R14B,44
            je .L_40b8d0
.L_40b696:

            test R14B,R14B
            je .L_40b8d0

            lea RAX,QWORD PTR [RSI+1]
            xor R15D,R15D
            jmp .L_40b6b6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b6b0:

            cmp R14B,44
            je .L_40b6cb
.L_40b6b6:

            movzx R14D,BYTE PTR [RAX]
            add R15,1
            mov QWORD PTR [RSP],RAX
            add RAX,1
            test R14B,R14B
            jne .L_40b6b0
.L_40b6cb:

            cmp R15,1023
            ja .L_40b868
.L_40b6d8:

            mov RDX,R15
            mov ECX,1024
            mov RDI,RBP
            call __strncpy_chk@PLT

            xor EAX,EAX
            cmp R14B,44
            mov BYTE PTR [RSP+R15*1+32],0
            sete AL
            add QWORD PTR [RSP],RAX
            mov R15,QWORD PTR [RIP+.L_65dd88]
.L_40b702:

            xor R14D,R14D
            test R15,R15
            je .L_40b812

            nop
            nop
.L_40b710:

            mov RDI,QWORD PTR [R15]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_40b76c
.L_40b71f:

            cmp QWORD PTR [R15+32],0
            je .L_40b840

            movsxd RAX,DWORD PTR [R12]
            lea EDX,DWORD PTR [R13-2]
            cmp EAX,EDX
            jge .L_40b780
.L_40b736:

            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [R12],EDX
            mov QWORD PTR [RBX+RAX*8],R15
            mov QWORD PTR [RBX+RAX*8+8],0
            mov R15,QWORD PTR [R15+40]
            test R15,R15
            je .L_40b848

            mov RDI,QWORD PTR [R15]
            mov RSI,RBP
            mov R14D,1
            call strcmp@PLT

            test EAX,EAX
            je .L_40b71f
.L_40b76c:

            mov RAX,QWORD PTR [R15+40]
            test RAX,RAX
            je .L_40b7e0

            mov R15,RAX
            jmp .L_40b710
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b780:

            add R13D,20
            movsxd R14,R13D
            shl R14,3
            mov RDI,R14
            call .L_403700

            test RBX,RBX
            mov R8,RAX
            je .L_40b7d0

            lea RDX,QWORD PTR [R14-160]
            mov RSI,RBX
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call memcpy@PLT

            mov RDI,RBX
            call .L_403730

            mov R8,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [R12]
            mov RBX,R8
            jmp .L_40b736
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b7d0:

            movsxd RAX,DWORD PTR [R12]
            mov RBX,R8
            jmp .L_40b736
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b7e0:

            test R14D,R14D
            jne .L_40b848

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            call .L_409ff0

            test RAX,RAX
            je .L_40b8e5

            mov QWORD PTR [R15+40],RAX
            mov R15,QWORD PTR [RIP+.L_65dd88]
            xor R14D,R14D
            test R15,R15
            jne .L_40b710
.L_40b812:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            call .L_409ff0

            test RAX,RAX
            mov R15,RAX
            je .L_40b8e5

            mov QWORD PTR [RIP+.L_65dd88],R15
            jmp .L_40b702

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b840:

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            jne .L_40b868
.L_40b848:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RIP+.L_65de9c],0
            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            jne .L_40b670
.L_40b861:

            call .L_40b9b0

            jmp .L_40b886
.L_40b868:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403730

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,4294967258
            call .L_404200

            call .L_40b9b0
.L_40b886:

            mov RCX,QWORD PTR [RSP+1064]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40b8e0

            add RSP,1080
.L_40b8a3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40b8b0:

            movzx R14D,BYTE PTR [RSI]
            mov DWORD PTR [RSP+28],1
            cmp R14B,44
            jne .L_40b696

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b8d0:

            mov QWORD PTR [RSP],RSI
            xor R15D,R15D
            jmp .L_40b6d8
.L_40b8dc:

            xor EBX,EBX
            jmp .L_40b861
.L_40b8e0:

            call __stack_chk_fail@PLT
.L_40b8e5:

            lea RCX,QWORD PTR [RIP+.L_448790]
            lea RSI,QWORD PTR [RIP+.L_448770]
            lea RDI,QWORD PTR [RIP+.L_44877e]
            mov EDX,136
            call __assert_fail@PLT
.L_40b904:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b910:

            push RBX
            sub RSP,16
.L_40b915:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RIP+.L_65dda0]
            test EAX,EAX
            jne .L_40b97a

            lea RBX,QWORD PTR [RSP+4]
            lea RDI,QWORD PTR [RIP+.L_65de00]
            call pthread_mutex_lock@PLT

            mov RDI,RBX
            call pthread_mutexattr_init@PLT

            mov ESI,1
            mov RDI,RBX
            call pthread_mutexattr_settype@PLT

            lea RDI,QWORD PTR [RIP+.L_65ddc0]
            mov RSI,RBX
            call pthread_mutex_init@PLT

            lea RDI,QWORD PTR [RIP+.L_65de00]
            mov DWORD PTR [RIP+.L_65dda0],1
            call pthread_mutex_unlock@PLT
.L_40b97a:

            lea RDI,QWORD PTR [RIP+.L_65ddc0]
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40b99c

            add RSP,16
.L_40b99a:

            pop RBX
            ret 
.L_40b99c:

            call __stack_chk_fail@PLT
.L_40b9a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9b0:

            lea RDI,QWORD PTR [RIP+.L_65ddc0]
            jmp pthread_mutex_unlock@PLT
.L_40b9bc:

            nop
            nop
            nop
            nop
.L_40b9c0:

            ret 
.L_40b9c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9d0:

            push R14
            push R13
            xor R13D,R13D
            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_40b9de:

            je .L_40ba5e

            lea RBX,QWORD PTR [RDI+9]
            mov RBP,RDI
            mov RDI,RBX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403700

            lea RDI,QWORD PTR [RAX+9]
            mov R13,RAX
            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            mov RSI,RBX
            mov R14,R13
            call strcpy@PLT

            jmp .L_40ba55
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ba20:

            lea R12,QWORD PTR [RBP+9]
            mov RDI,R12
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403700

            lea RDI,QWORD PTR [RAX+9]
            mov RBX,RAX
            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            mov RSI,R12
            call strcpy@PLT

            mov QWORD PTR [R14],RBX
            mov R14,RBX
.L_40ba55:

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_40ba20
.L_40ba5e:

            pop RBX
.L_40ba5f:

            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40ba6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba70:

            mov EDX,DWORD PTR [RIP+.L_65de38]
            test EDX,EDX
            jle .L_40bb38

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40ba88:

            call .L_40b910

            mov EAX,DWORD PTR [RIP+.L_65de3c]
            test EAX,EAX
            jle .L_40bae4

            xor R12D,R12D
            xor R13D,R13D
            nop
            nop
            nop
.L_40baa0:

            mov RAX,QWORD PTR [RIP+.L_65de28]
            mov RBX,QWORD PTR [RAX+R12*1]
            mov RAX,QWORD PTR [RIP+.L_65de30]
            mov RDI,QWORD PTR [RAX+R12*1]
            call .L_403730

            test RBX,RBX
            je .L_40bad3
.L_40bac0:

            mov RBP,QWORD PTR [RBX]
            mov RDI,RBX
            call .L_403730

            test RBP,RBP
            mov RBX,RBP
            jne .L_40bac0
.L_40bad3:

            add R13D,1
            add R12,8
            cmp DWORD PTR [RIP+.L_65de3c],R13D
            jg .L_40baa0
.L_40bae4:

            mov RDI,QWORD PTR [RIP+.L_65de30]
            call .L_403730

            mov RDI,QWORD PTR [RIP+.L_65de28]
            call .L_403730

            mov DWORD PTR [RIP+.L_65de3c],0
            mov DWORD PTR [RIP+.L_65de38],0
            mov QWORD PTR [RIP+.L_65de30],0
            mov QWORD PTR [RIP+.L_65de28],0
            add RSP,8
.L_40bb2a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40b9b0

            nop
            nop
            nop
.L_40bb38:

            ret 
.L_40bb3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40bb40:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            xor EBP,EBP
            push RBX
            sub RSP,16
.L_40bb51:

            call .L_40b910
.L_40bb56:

            mov R12D,DWORD PTR [RIP+.L_65de3c]
            cmp R12D,EBP
            jle .L_40bb8c

            mov R14,QWORD PTR [RIP+.L_65de30]
            movsxd RBX,EBP
            shl RBX,3
.L_40bb70:

            mov RSI,QWORD PTR [R14+RBX*1]
            mov RDI,R13
            add EBP,1
            call strcmp@PLT

            test EAX,EAX
            je .L_40bbb0

            add RBX,8
            cmp R12D,EBP
            jne .L_40bb70
.L_40bb8c:

            xor EAX,EAX
.L_40bb8e:

            mov QWORD PTR [RSP+8],RAX
            call .L_40b9b0

            mov RAX,QWORD PTR [RSP+8]
            add RSP,16
.L_40bba1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bbb0:

            mov RAX,QWORD PTR [RIP+.L_65de28]
            mov RDI,QWORD PTR [RAX+RBX*1]
            call .L_40b9d0

            test RAX,RAX
            je .L_40bb56

            jmp .L_40bb8e
.L_40bbc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bbd0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_40bbe0:

            call .L_40b910

            movsxd RBX,DWORD PTR [RIP+.L_65de3c]
            cmp EBX,DWORD PTR [RIP+.L_65de38]
            je .L_40bc60
.L_40bbf4:

            mov RDI,R12
            call strlen@PLT

            mov RDX,QWORD PTR [RIP+.L_65de30]
            lea RDI,QWORD PTR [RAX+1]
            lea RBX,QWORD PTR [RDX+RBX*8]
            call .L_403700

            mov QWORD PTR [RBX],RAX
            movsxd RAX,DWORD PTR [RIP+.L_65de3c]
            mov RSI,R12
            mov RDX,QWORD PTR [RIP+.L_65de30]
            mov RDI,QWORD PTR [RDX+RAX*8]
            lea RBX,QWORD PTR [RAX*8]
            call strcpy@PLT

            add RBX,QWORD PTR [RIP+.L_65de28]
            mov RDI,RBP
            call .L_40b9d0

            add DWORD PTR [RIP+.L_65de3c],1
            mov QWORD PTR [RBX],RAX
            add RSP,8
.L_40bc52:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40b9b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bc60:

            lea EDI,DWORD PTR [RBX+RBX*1+15]
            mov DWORD PTR [RIP+.L_65de38],EDI
            movsxd RDI,EDI
            shl RDI,3
            call .L_403700

            mov RBX,QWORD PTR [RIP+.L_65de30]
            mov R13,RAX
            test RBX,RBX
            je .L_40bca3

            movsxd RAX,DWORD PTR [RIP+.L_65de3c]
            test EAX,EAX
            je .L_40bca3

            lea RDX,QWORD PTR [RAX*8]
            mov RSI,RBX
            mov RDI,R13
            call memcpy@PLT
.L_40bca3:

            mov RDI,RBX
            call .L_403730

            movsxd RDI,DWORD PTR [RIP+.L_65de38]
            mov QWORD PTR [RIP+.L_65de30],R13
            shl RDI,3
            call .L_403700

            mov RBX,QWORD PTR [RIP+.L_65de28]
            mov R13,RAX
            test RBX,RBX
            je .L_40bcef

            movsxd RAX,DWORD PTR [RIP+.L_65de3c]
            test EAX,EAX
            je .L_40bcef

            lea RDX,QWORD PTR [RAX*8]
            mov RSI,RBX
            mov RDI,R13
            call memcpy@PLT
.L_40bcef:

            mov RDI,RBX
            call .L_403730

            mov QWORD PTR [RIP+.L_65de28],R13
            movsxd RBX,DWORD PTR [RIP+.L_65de3c]
            jmp .L_40bbf4
.L_40bd0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40bd10:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            sub RSP,3144
.L_40bd24:

            mov R12,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3128],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],RDI
            mov DWORD PTR [RSP+124],R8D
            test R12,R12
            mov QWORD PTR [RSP+8],R9
            mov R14,QWORD PTR [RSP+3208]
            mov R15,QWORD PTR [RSP+3216]
            mov RBP,QWORD PTR [RSP+3224]
            mov RDI,QWORD PTR [RDI]
            je .L_40c435

            mov R8D,DWORD PTR [RCX]
            test R8D,R8D
            je .L_40c497
.L_40bd79:

            cmp QWORD PTR [RSP+8],0
            mov DWORD PTR [RDI],0
            jle .L_40c145

            movsxd RAX,DWORD PTR [RSP+3200]
            movsd XMM9,QWORD PTR [RIP+.L_4470e0]
            movsd XMM6,QWORD PTR [RIP+.L_447a80]
            mov QWORD PTR [RSP],RBP
            movq XMM5,QWORD PTR [RIP+.L_447130]
            xor R8D,R8D
            shl RAX,3
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
.L_40bdc0:

            movsd XMM4,QWORD PTR [R14]
            movsd XMM3,QWORD PTR [R15]
            ucomisd XMM4,XMM4
            jp .L_40c182

            ucomisd XMM3,XMM3
            jp .L_40c182

            mov ESI,DWORD PTR [R13]
            test ESI,ESI
            jle .L_40c182

            movapd XMM0,XMM9
            movsd XMM8,QWORD PTR [RIP+.L_4470f0]
            movsd XMM7,QWORD PTR [RIP+.L_448850]
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40be08:

            mov RSI,QWORD PTR [R12+RBP*8]
            mov RBX,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RBX+88]
            ucomisd XMM1,XMM3
            ja .L_40c110

            movsd XMM10,QWORD PTR [RBX+80]
            ucomisd XMM10,XMM4
            ja .L_40c110

            mov EAX,DWORD PTR [RBX+116]
            pxor XMM2,XMM2
            sub EAX,1
            cvtsi2sd XMM2,EAX
            mulsd XMM2,QWORD PTR [RBX+104]
            addsd XMM1,XMM2
            ucomisd XMM3,XMM1
            ja .L_40c110

            mov EAX,DWORD PTR [RBX+112]
            pxor XMM1,XMM1
            sub EAX,1
            cvtsi2sd XMM1,EAX
            mulsd XMM1,QWORD PTR [RBX+96]
            addsd XMM10,XMM1
            ucomisd XMM4,XMM10
            ja .L_40c110

            mov RCX,QWORD PTR [RSI+48]
            test RCX,RCX
            jne .L_40bed4

            jmp .L_40beef
          .byte 0x90
.L_40be80:

            movsd XMM2,QWORD PTR [RAX+80]
            ucomisd XMM2,XMM4
            ja .L_40bee6

            mov EDI,DWORD PTR [RAX+116]
            pxor XMM1,XMM1
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM1,ECX
            mulsd XMM1,QWORD PTR [RAX+104]
            addsd XMM0,XMM1
            ucomisd XMM3,XMM0
            ja .L_40bee6

            mov EDI,DWORD PTR [RAX+112]
            pxor XMM0,XMM0
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM0,ECX
            mulsd XMM0,QWORD PTR [RAX+96]
            addsd XMM2,XMM0
            ucomisd XMM4,XMM2
            ja .L_40bee6

            mov RCX,QWORD PTR [RDX+48]
            mov RSI,RDX
            mov RBX,RAX
            test RCX,RCX
            je .L_40beef
.L_40bed4:

            mov RDX,RCX
.L_40bed7:

            mov RAX,QWORD PTR [RDX+32]
            movsd XMM0,QWORD PTR [RAX+88]
            ucomisd XMM0,XMM3
            jbe .L_40be80
.L_40bee6:

            mov RDX,QWORD PTR [RDX+40]
            test RDX,RDX
            jne .L_40bed7
.L_40beef:

            mov RCX,QWORD PTR [RBX+120]
            test RCX,RCX
            je .L_40c2de
.L_40befc:

            movapd XMM2,XMM4
            movapd XMM1,XMM3
            movapd XMM12,XMM5
            subsd XMM2,QWORD PTR [RBX+80]
            movapd XMM0,XMM8
            subsd XMM1,QWORD PTR [RBX+88]
            divsd XMM2,QWORD PTR [RBX+96]
            divsd XMM1,QWORD PTR [RBX+104]
            movapd XMM10,XMM2
            movapd XMM11,XMM2
            andpd XMM10,XMM5
            ucomisd XMM6,XMM10
            jbe .L_40bf73

            cvttsd2si RAX,XMM2
            pxor XMM10,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM12,XMM2
            cvtsi2sd XMM10,RAX
            movapd XMM11,XMM10
            cmpnlesd XMM11,XMM2
            andpd XMM11,XMM0
            subsd XMM10,XMM11
            movapd XMM11,XMM10
            orpd XMM11,XMM12
.L_40bf73:

            movapd XMM10,XMM1
            cvttsd2si R9D,XMM11
            movapd XMM12,XMM5
            andpd XMM10,XMM5
            movapd XMM11,XMM1
            ucomisd XMM6,XMM10
            jbe .L_40bfc6

            cvttsd2si RAX,XMM1
            pxor XMM10,XMM10
            andnpd XMM12,XMM1
            cvtsi2sd XMM10,RAX
            movapd XMM11,XMM10
            cmpnlesd XMM11,XMM1
            andpd XMM11,XMM0
            subsd XMM10,XMM11
            movapd XMM11,XMM10
            orpd XMM11,XMM12
.L_40bfc6:

            pxor XMM10,XMM10
            cvttsd2si EDX,XMM11
            mov EDI,DWORD PTR [RBX+112]
            lea ESI,DWORD PTR [R9+1]
            mov R10D,DWORD PTR [RBX+116]
            pxor XMM11,XMM11
            cvtsi2sd XMM10,R9D
            pxor XMM12,XMM12
            lea EAX,DWORD PTR [RDI-1]
            cmp EDI,ESI
            lea R11D,DWORD PTR [R10-1]
            cmovle ESI,EAX
            lea EAX,DWORD PTR [RDX+1]
            cmp R10D,EAX
            subsd XMM2,XMM10
            pxor XMM10,XMM10
            cmovle EAX,R11D
            cvtsi2sd XMM10,EDX
            imul EDX,EDI
            imul EDI,EAX
            lea EAX,DWORD PTR [RDX+R9*1]
            add EDX,ESI
            movsxd RDX,EDX
            cdqe 
            cvtss2sd XMM12,DWORD PTR [RCX+RDX*4]
            cvtss2sd XMM11,DWORD PTR [RCX+RAX*4]
            lea EAX,DWORD PTR [RDI+R9*1]
            mulsd XMM12,XMM2
            cdqe 
            subsd XMM1,XMM10
            movapd XMM10,XMM0
            subsd XMM10,XMM2
            subsd XMM0,XMM1
            mulsd XMM11,XMM10
            mulsd XMM11,XMM0
            mulsd XMM0,XMM12
            addsd XMM0,XMM11
            pxor XMM11,XMM11
            cvtss2sd XMM11,DWORD PTR [RCX+RAX*4]
            lea EAX,DWORD PTR [RDI+RSI*1]
            mulsd XMM10,XMM11
            cdqe 
            mulsd XMM10,XMM1
            addsd XMM10,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RCX+RAX*4]
            mulsd XMM0,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,XMM10
            ucomisd XMM0,XMM7
            ja .L_40c170

            movsd XMM1,QWORD PTR [RIP+.L_448858]
            ucomisd XMM1,XMM0
            ja .L_40c170

            ucomisd XMM0,QWORD PTR [RIP+.L_448860]
            jp .L_40c0bf

            je .L_40c170
.L_40c0bf:

            mov EDX,DWORD PTR [RSP+124]
            mov RAX,QWORD PTR [RSP]
            test EDX,EDX
            movsd XMM1,QWORD PTR [RAX]
            je .L_40c36c

            subsd XMM1,XMM0
            movsd QWORD PTR [RAX],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447db8]
            ucomisd XMM0,XMM1
            jbe .L_40c38a
.L_40c0ed:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            jle .L_40c182

            nop
            nop
            nop
            nop
            nop
            nop
.L_40c100:

            add RBP,1
            jmp .L_40be08
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c110:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            jg .L_40c100

            movsd XMM1,QWORD PTR [RIP+.L_447db8]
.L_40c121:

            ucomisd XMM0,XMM1
            ja .L_40c182

            mov RAX,QWORD PTR [RSP+24]
            add R8,1
            add QWORD PTR [RSP],RAX
            add R15,RAX
            add R14,RAX
            cmp QWORD PTR [RSP+8],R8
            jne .L_40bdc0
.L_40c145:

            xor EAX,EAX
.L_40c147:

            mov RDI,QWORD PTR [RSP+3128]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40c492

            add RSP,3144
.L_40c165:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40c170:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            movapd XMM0,XMM9
            jg .L_40c100
.L_40c182:

            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [R14]
            lea RDX,QWORD PTR [RIP+.L_4487b0]
            mov ESI,2
            mulsd XMM0,XMM1
            mov RDI,QWORD PTR [RAX]
            mov EAX,2
            mulsd XMM1,QWORD PTR [R15]
            lea R15,QWORD PTR [RSP+128]
            call .L_404320

            mov ECX,DWORD PTR [R13]
            mov BYTE PTR [RSP+128],0
            test ECX,ECX
            jle .L_40c2a9

            xor R14D,R14D
            lea R15,QWORD PTR [RSP+128]
            lea RBP,QWORD PTR [RIP+.L_448848]
            jmp .L_40c213
.L_40c1e6:

            lea RCX,QWORD PTR [RIP+.L_44883b]
            xor EAX,EAX
            mov EDX,3000
            mov ESI,1
            mov RDI,R15
            add R14D,1
            call __sprintf_chk@PLT

            add R12,8
            cmp DWORD PTR [R13],R14D
            jle .L_40c2a9
.L_40c213:

            mov RBX,R15
.L_40c216:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40c216

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            mov RAX,QWORD PTR [R12]
            sbb RBX,3
            sub RBX,R15
            mov R8,QWORD PTR [RAX]
            mov RDI,R8
            mov QWORD PTR [RSP],R8
            call strlen@PLT

            add RAX,RBX
            mov R8,QWORD PTR [RSP]
            cmp RAX,2900
            ja .L_40c40c

            test R14D,R14D
            je .L_40c1e6

            lea RDI,QWORD PTR [R15+RBX*1]
            xor EAX,EAX
            mov RCX,RBP
            mov RDX,-1
            mov ESI,1
            add R14D,1
            call __sprintf_chk@PLT

            add R12,8
            cmp DWORD PTR [R13],R14D
            jg .L_40c213
.L_40c2a9:

            mov RBX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_44927c]
            xor EAX,EAX
            mov RCX,R15
            mov ESI,2
            mov RDI,QWORD PTR [RBX]
            call .L_404320

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967248
            call .L_404200

            mov EAX,4294967248
            jmp .L_40c147
.L_40c2de:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+112],R8
            movsd QWORD PTR [RSP+88],XMM6
            movaps XMMWORD PTR [RSP+96],XMM5
            mov QWORD PTR [RSP+32],RSI
            movsd QWORD PTR [RSP+80],XMM9
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            call .L_404140

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RAX
            call .L_4098e0

            test EAX,EAX
            je .L_40c419

            mov RCX,QWORD PTR [RBX+120]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+112]
            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+88]
            movapd XMM5,XMMWORD PTR [RSP+96]
            jmp .L_40befc
.L_40c36c:

            addsd XMM1,XMM0
            mov RAX,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447db8]
            ucomisd XMM0,XMM1
            ja .L_40c0ed
.L_40c38a:

            mov EAX,DWORD PTR [RIP+.L_65de40]
            lea EDX,DWORD PTR [RAX+1]
            cmp EAX,19
            mov DWORD PTR [RIP+.L_65de40],EDX
            jg .L_40c121

            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_44881d]
            mov RCX,RBX
            mov ESI,3
            mov QWORD PTR [RSP+80],R8
            movsd QWORD PTR [RSP+56],XMM6
            movaps XMMWORD PTR [RSP+64],XMM5
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM0
            call .L_404320

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM5,XMMWORD PTR [RSP+64]
            jmp .L_40c121
.L_40c40c:

            mov DWORD PTR [R15+RBX*1],3026478
            jmp .L_40c2a9
.L_40c419:

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,4294967258
            mov RDI,QWORD PTR [RAX]
            call .L_404200

            mov EAX,4294967258
            jmp .L_40c147
.L_40c435:

            mov RAX,QWORD PTR [RSP+16]
            mov RBX,RDX
            mov RDX,RSI
            mov RCX,QWORD PTR [RAX+16]
            mov RSI,RCX
            mov QWORD PTR [RSP],RCX
            call .L_403e60

            mov RDI,QWORD PTR [RSP+16]
            mov R12,RAX
            call .L_404140

            mov RSI,R12
            mov RDI,RAX
            mov RDX,R13
            call .L_40b610

            mov R12,RAX
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            test R12,R12
            mov RDI,QWORD PTR [RAX]
            je .L_40c48b

            mov R9D,DWORD PTR [R13]
            test R9D,R9D
            jne .L_40bd79
.L_40c48b:

            mov EAX,DWORD PTR [RDI]
            jmp .L_40c147
.L_40c492:

            call __stack_chk_fail@PLT
.L_40c497:

            mov ESI,4294967258
            call .L_404200

            mov EAX,4294967258
            jmp .L_40c147
.L_40c4ab:

            nop
            nop
            nop
            nop
            nop
.L_40c4b0:

            movapd XMM2,XMM0
            test RDI,RDI
            addsd XMM2,XMM1
            movsd QWORD PTR [RSP-24],XMM2
            movsd XMM2,QWORD PTR [RSP-24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RSP-16],XMM2
            movsd XMM2,QWORD PTR [RSP-24]
            movsd XMM3,QWORD PTR [RSP-16]
            subsd XMM2,XMM3
            movsd QWORD PTR [RSP-8],XMM2
            movsd XMM2,QWORD PTR [RSP-16]
            subsd XMM2,XMM0
            movsd QWORD PTR [RSP-16],XMM2
            movsd XMM0,QWORD PTR [RSP-8]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP-8],XMM0
            je .L_40c525

            movsd XMM0,QWORD PTR [RSP-16]
            movsd XMM1,QWORD PTR [RSP-8]
            addsd XMM0,XMM1
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RDI],XMM0
.L_40c525:

            movsd XMM0,QWORD PTR [RSP-24]
            ret 
.L_40c52c:

            nop
            nop
            nop
            nop
.L_40c530:

            movapd XMM6,XMM1
            lea EAX,DWORD PTR [RDX+RDI*1]
            movapd XMM2,XMM1
            cmp EDX,5
            subsd XMM6,XMM0
            cdqe 
            addsd XMM2,XMM0
            lea RAX,QWORD PTR [RSI+RAX*8]
            addsd XMM6,XMM6
            mulsd XMM6,XMM2
            jne .L_40c5c0

            movsd XMM4,QWORD PTR [RAX-8]
            mov EDX,2
            sub RAX,8
.L_40c564:

            sub EDX,1
            pxor XMM5,XMM5
            not RDX
            shl RDX,4
            add RDX,RAX
            nop
            nop
            nop
.L_40c578:

            movapd XMM3,XMM6
            movapd XMM2,XMM6
            sub RAX,16
            mulsd XMM3,XMM4
            subsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RAX+8]
            cmp RAX,RDX
            addsd XMM5,XMM3
            mulsd XMM2,XMM5
            subsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RAX]
            addsd XMM4,XMM2
            jne .L_40c578

            test EDI,EDI
            jne .L_40c5d0

            subsd XMM4,XMM5
            movapd XMM0,XMM4
            mulsd XMM0,XMM1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c5c0:

            mov EDX,3
            pxor XMM4,XMM4
            jmp .L_40c564
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c5d0:

            addsd XMM0,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,XMM4
            ret 
.L_40c5dd:

            nop
            nop
            nop
.L_40c5e0:

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            add RDI,120
            add RSI,8
            mov EDX,3
            xor R8D,R8D
.L_40c5f8:

            movsxd RAX,R8D
            cmp EDX,-1
            mulsd XMM2,XMM0
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RCX+8]
            movsd XMM1,QWORD PTR [RCX]
            je .L_40c62a

            mov R9D,EDX
            lea RCX,QWORD PTR [RCX+R9*8+16]
.L_40c618:

            mulsd XMM1,XMM0
            add RAX,8
            cmp RAX,RCX
            addsd XMM1,QWORD PTR [RAX-8]
            jne .L_40c618
.L_40c62a:

            mulsd XMM1,XMM2
            lea R8D,DWORD PTR [R8+RDX*1+2]
            sub EDX,1
            add RSI,8
            movsd QWORD PTR [RSI-8],XMM1
            cmp EDX,-2
            jne .L_40c5f8

            ret 
.L_40c646:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c650:

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            add RDI,240
            mov EDX,4
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c670:

            movsxd RAX,R8D
            cmp EDX,-1
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RCX+8]
            movsd XMM1,QWORD PTR [RCX]
            je .L_40c6a2

            mov R9D,EDX
            lea RCX,QWORD PTR [RCX+R9*8+16]
            nop
            nop
            nop
            nop
.L_40c690:

            mulsd XMM1,XMM0
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RAX,RCX
            jne .L_40c690
.L_40c6a2:

            mulsd XMM1,XMM2
            lea R8D,DWORD PTR [R8+RDX*1+2]
            sub EDX,1
            add RSI,8
            mulsd XMM2,XMM0
            movsd QWORD PTR [RSI-8],XMM1
            cmp EDX,-2
            jne .L_40c670

            ret 
.L_40c6c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c6d0:

            movapd XMM3,XMM0
            lea R9,QWORD PTR [RIP+.L_4489c0]
            movapd XMM2,XMM0
            add RDI,8
            mulsd XMM3,XMM0
            mov EDX,5
            xor ECX,ECX
            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movsd XMM4,QWORD PTR [RIP+.L_448ef0]
            nop
            nop
.L_40c700:

            mov R8D,EDX
            sar R8D,1
            je .L_40c72e

            movsxd RAX,ECX
            lea R10D,DWORD PTR [R8-1]
            lea RSI,QWORD PTR [R9+RAX*8]
            lea RAX,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RSI+R10*8+16]
.L_40c71c:

            mulsd XMM1,XMM3
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RSI,RAX
            jne .L_40c71c
.L_40c72e:

            mulsd XMM1,XMM2
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [R8+RCX*1+2]
            mulsd XMM2,XMM0
            divsd XMM1,XMM4
            movsd QWORD PTR [RDI-8],XMM1
            cmp EDX,-1
            je .L_40c770

            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM4,QWORD PTR [R9+RAX*8]
            movsxd RAX,ECX
            movsd XMM1,QWORD PTR [R9+RAX*8]
            jmp .L_40c700
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c770:

            ret 
.L_40c772:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c780:

            movapd XMM3,XMM0
            lea R9,QWORD PTR [RIP+.L_448880]
            movapd XMM2,XMM0
            add RDI,8
            mulsd XMM3,XMM0
            mov EDX,5
            xor ECX,ECX
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RIP+.L_448ef0]
            nop
            nop
.L_40c7b0:

            mov R8D,EDX
            sar R8D,1
            je .L_40c7de

            movsxd RAX,ECX
            lea R10D,DWORD PTR [R8-1]
            lea RSI,QWORD PTR [R9+RAX*8]
            lea RAX,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RSI+R10*8+16]
.L_40c7cc:

            mulsd XMM1,XMM3
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RSI,RAX
            jne .L_40c7cc
.L_40c7de:

            mulsd XMM1,XMM2
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [R8+RCX*1+2]
            mulsd XMM2,XMM0
            divsd XMM1,XMM4
            movsd QWORD PTR [RDI-8],XMM1
            cmp EDX,-1
            je .L_40c820

            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM4,QWORD PTR [R9+RAX*8]
            movsxd RAX,ECX
            movsd XMM1,QWORD PTR [R9+RAX*8]
            jmp .L_40c7b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c820:

            ret 
.L_40c822:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c830:

            mov RAX,RDI
            sub RSP,24
.L_40c837:

            movsd XMM1,QWORD PTR [RAX+8]
            mov RDI,RSP
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            call .L_40c4b0

            lea RDI,QWORD PTR [RAX+8]
            movsd XMM1,QWORD PTR [RAX]
            call .L_40c4b0

            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            movsd QWORD PTR [RAX],XMM0
            jp .L_40c871

            je .L_40c898
.L_40c871:

            movsd XMM0,QWORD PTR [RAX+8]
            addsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RAX+8],XMM0
.L_40c880:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40c8a3

            add RSP,24
.L_40c894:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c898:

            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM0
            jmp .L_40c880
.L_40c8a3:

            call __stack_chk_fail@PLT
.L_40c8a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c8b0:

            sub RSP,40
            pxor XMM3,XMM3
            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RSI]
            movapd XMM0,XMM1
            mulsd XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40c8f3
.L_40c8da:

            divsd XMM1,XMM2
            movsd QWORD PTR [RDI],XMM1
            movsd XMM0,QWORD PTR [RSI]
            divsd XMM0,XMM2
            movsd QWORD PTR [RSI],XMM0
            add RSP,40
            ret 
.L_40c8f3:

            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+16],RDI
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RDI]
            jmp .L_40c8da
.L_40c91e:

            nop
            nop
.L_40c920:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_40c928:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call fmod@PLT

            movsd XMM4,QWORD PTR [RIP+.L_448ef8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            jb .L_40ca78

            addsd XMM2,QWORD PTR [RIP+.L_448720]
            movsd XMM6,QWORD PTR [RIP+.L_448738]
            movsd QWORD PTR [RSP],XMM6
.L_40c97e:

            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            movapd XMM0,XMM3
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_448ef8]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            jb .L_40ca58

            addsd XMM0,QWORD PTR [RIP+.L_448720]
.L_40c9bd:

            movapd XMM1,XMM2
            lea RDI,QWORD PTR [RSP+16]
            call .L_40c4b0

            movsd XMM1,QWORD PTR [RIP+.L_448720]
            call fmod@PLT

            movsd XMM6,QWORD PTR [RIP+.L_448ef8]
            ucomisd XMM6,XMM0
            jb .L_40ca40

            addsd XMM0,QWORD PTR [RIP+.L_448720]
.L_40c9ee:

            ucomisd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            jp .L_40ca1a

            jne .L_40ca1a

            pxor XMM2,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_448ef8]
            cmpnltsd XMM2,XMM1
            andpd XMM0,XMM2
            andnpd XMM2,XMM5
            orpd XMM0,XMM2
.L_40ca1a:

            mov RDI,RBX
            call .L_40c4b0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ca9c

            add RSP,32
.L_40ca36:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ca40:

            movsd XMM6,QWORD PTR [RSP]
            ucomisd XMM6,XMM0
            jae .L_40c9ee

            subsd XMM0,QWORD PTR [RIP+.L_448720]
            jmp .L_40c9ee
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ca58:

            movsd XMM7,QWORD PTR [RSP]
            ucomisd XMM7,XMM0
            jae .L_40c9bd

            subsd XMM0,QWORD PTR [RIP+.L_448720]
            jmp .L_40c9bd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ca78:

            movsd XMM4,QWORD PTR [RIP+.L_448738]
            ucomisd XMM4,XMM0
            movsd QWORD PTR [RSP],XMM4
            jae .L_40c97e

            subsd XMM2,QWORD PTR [RIP+.L_448720]
            jmp .L_40c97e
.L_40ca9c:

            call __stack_chk_fail@PLT
.L_40caa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cab0:

            sub RSP,24
.L_40cab4:

            movsd QWORD PTR [RSP],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            call fmod@PLT

            movsd XMM4,QWORD PTR [RIP+.L_448ef8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            jb .L_40cb80

            addsd XMM2,QWORD PTR [RIP+.L_448720]
.L_40cae9:

            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            movsd QWORD PTR [RSP],XMM2
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_448ef8]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM5,XMM0
            jb .L_40cb60

            addsd XMM3,QWORD PTR [RIP+.L_448720]
.L_40cb1e:

            movapd XMM1,XMM3
            movapd XMM0,XMM2
            xor EDI,EDI
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_40c920

            pxor XMM1,XMM1
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM2
            jae .L_40cbc0
.L_40cb4d:

            ucomisd XMM1,XMM3
            jae .L_40cba0
.L_40cb53:

            xor EAX,EAX
            add RSP,24
.L_40cb59:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cb60:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM3
            jae .L_40cb1e

            subsd XMM3,QWORD PTR [RIP+.L_448720]
            jmp .L_40cb1e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cb80:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM2
            jae .L_40cae9

            subsd XMM2,QWORD PTR [RIP+.L_448720]
            jmp .L_40cae9
          .byte 0x90
.L_40cba0:

            ucomisd XMM2,XMM1
            jbe .L_40cb53

            xor EAX,EAX
            ucomisd XMM1,XMM0
            seta AL
            add RSP,24
.L_40cbb3:

            neg EAX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cbc0:

            ucomisd XMM3,XMM1
            jbe .L_40cb4d

            ucomisd XMM0,XMM1
            mov EAX,1
            jbe .L_40cb4d

            add RSP,24
            ret 
.L_40cbda:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40cbe0:

            sub RSP,24
.L_40cbe4:

            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448f00]
            call fmod@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_448f00]
            movapd XMM0,XMM3
            call fmod@PLT

            pxor XMM1,XMM1
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM0,XMM1
            jb .L_40cc60

            movsd XMM3,QWORD PTR [RIP+.L_448720]
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jbe .L_40cc60
.L_40cc32:

            ucomisd XMM2,XMM1
            jb .L_40cc46

            movsd XMM0,QWORD PTR [RIP+.L_448720]
            ucomisd XMM0,XMM2
            ja .L_40cc59
.L_40cc46:

            movsd XMM0,QWORD PTR [RIP+.L_448718]
            xor EDX,EDX
            ucomisd XMM0,XMM2
            setbe DL
            sub EAX,EDX
.L_40cc59:

            add RSP,24
.L_40cc5d:

            ret 
          .byte 0x66
          .byte 0x90
.L_40cc60:

            movsd XMM3,QWORD PTR [RIP+.L_448718]
            xor EAX,EAX
            ucomisd XMM3,XMM0
            setbe AL
            jmp .L_40cc32
.L_40cc73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cc80:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RSI
            sub RSP,32
.L_40cc8e:

            movsd XMM1,QWORD PTR [RIP+.L_448720]
            movsd QWORD PTR [RSP+8],XMM0
            call fmod@PLT

            movapd XMM2,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_447130]
            divsd XMM2,QWORD PTR [RIP+.L_448730]
            movsd XMM5,QWORD PTR [RIP+.L_447a80]
            addsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM3,XMM2
            movapd XMM1,XMM2
            andpd XMM3,XMM4
            ucomisd XMM5,XMM3
            jbe .L_40cd0e

            cvttsd2si RAX,XMM2
            pxor XMM3,XMM3
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM4,XMM2
            cvtsi2sd XMM3,RAX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM2
            movapd XMM1,XMM7
            andpd XMM1,XMM5
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM4
.L_40cd0e:

            cvttsd2si EBX,XMM1
            pxor XMM1,XMM1
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            imul EAX,EBX,90
            and EBX,3
            cvtsi2sd XMM1,EAX
            subsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_65de80]
            call sincos@PLT

            cmp EBX,1
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            je .L_40cdd0

            jb .L_40cdc0

            cmp EBX,2
            je .L_40cda0

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [R12],XMM1
            movsd QWORD PTR [RBP],XMM0
.L_40cd6a:

            pxor XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM0
            jp .L_40cd7c

            je .L_40cd96
.L_40cd7c:

            movsd XMM1,QWORD PTR [R12]
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            addsd XMM0,QWORD PTR [RBP]
            movsd QWORD PTR [RBP],XMM0
.L_40cd96:

            add RSP,32
.L_40cd9a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_40cda0:

            movq XMM2,QWORD PTR [RIP+.L_447ae0]
            xorpd XMM0,XMM2
            xorpd XMM1,XMM2
            movsd QWORD PTR [R12],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_40cd6a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cdc0:

            movsd QWORD PTR [R12],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_40cd6a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cdd0:

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [R12],XMM1
            movsd QWORD PTR [RBP],XMM0
            jmp .L_40cd6a
.L_40cde5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cdf0:

            movapd XMM2,XMM0
            sub RSP,24
.L_40cdf8:

            movapd XMM0,XMM1
            movapd XMM3,XMM2
            movq XMM1,QWORD PTR [RIP+.L_447130]
            movsd XMM4,QWORD PTR [RIP+.L_65de80]
            andpd XMM3,XMM1
            andpd XMM1,XMM0
            movsd QWORD PTR [RSP],XMM4
            ucomisd XMM3,XMM1
            jbe .L_40ce58

            pxor XMM1,XMM1
            ucomisd XMM1,XMM2
            jbe .L_40ced0

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM1,XMM2
            call atan2@PLT

            divsd XMM0,QWORD PTR [RSP]
            subsd XMM0,QWORD PTR [RIP+.L_448730]
            add RSP,24
.L_40ce53:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ce58:

            pxor XMM5,XMM5
            ucomisd XMM5,XMM0
            jbe .L_40ceb0

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            call atan2@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM2,XMM5
            divsd XMM1,QWORD PTR [RSP]
            jae .L_40ceea

            movsd XMM0,QWORD PTR [RIP+.L_448ef8]
            jmp .L_40ceea
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ceb0:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            call atan2@PLT

            divsd XMM0,QWORD PTR [RSP]
            add RSP,24
.L_40cec6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ced0:

            movapd XMM1,XMM2
            call atan2@PLT

            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_448730]
            divsd XMM1,QWORD PTR [RSP]
.L_40ceea:

            subsd XMM0,XMM1
            add RSP,24
            ret 
.L_40cef3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cf00:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP-8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448f08]
            movsd XMM2,QWORD PTR [RSP-8]
            ucomisd XMM1,XMM2
            jbe .L_40cf50

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP-8]
            subsd XMM3,XMM2
            subsd XMM1,XMM3
.L_40cf38:

            movsd QWORD PTR [RSP-8],XMM1
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP-8]
            ja .L_40cf60

            ret 
.L_40cf50:

            movsd XMM1,QWORD PTR [RSP-8]
            jmp .L_40cf38
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cf60:

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            ret 
.L_40cf69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cf70:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            movapd XMM5,XMM0
            mov RBX,RDI
            sub RSP,120
.L_40cf84:

            movsd XMM0,QWORD PTR [RSI]
            movapd XMM6,XMM5
            movsd XMM7,QWORD PTR [RIP+.L_65de78]
            movsd QWORD PTR [RDI+24],XMM0
            andpd XMM6,XMMWORD PTR [RIP+.L_447130]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI+8]
            mov EAX,EDX
            or EAX,33408
            test EDX,EDX
            mov EDX,35723
            movsd QWORD PTR [RDI+32],XMM0
            cmove EAX,EDX
            movsd XMM0,QWORD PTR [RSI+48]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RDI+72],XMM0
            movsd XMM0,QWORD PTR [RSI+56]
            movsd QWORD PTR [RDI+80],XMM0
            movsd XMM0,QWORD PTR [RSI+16]
            mov DWORD PTR [RDI+504],EAX
            movsd QWORD PTR [RDI+40],XMM3
            pxor XMM3,XMM3
            movsd QWORD PTR [RDI+88],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_448730]
            movsd QWORD PTR [RDI+8],XMM1
            cmpnltsd XMM0,XMM6
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+48],XMM4
            andpd XMM5,XMM0
            andnpd XMM0,XMM7
            orpd XMM5,XMM0
            ucomisd XMM5,XMM3
            movsd QWORD PTR [RDI],XMM5
            jp .L_40d590

            pxor XMM0,XMM0
            jne .L_40d590
.L_40d03f:

            lea R13,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+16],XMM3
            mov RSI,R13
            mov RDI,R12
            call .L_40cc80

            movsd XMM0,QWORD PTR [RSP+96]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+96],XMM0
            call .L_40c8b0

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            maxsd XMM1,QWORD PTR [RIP+.L_65de70]
            mulsd XMM0,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+88],XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40d5aa
.L_40d0bd:

            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+136],XMM2
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+48]
            mulsd XMM0,XMM5
            movapd XMM6,XMM2
            movsd QWORD PTR [RBX+96],XMM1
            mulsd XMM6,XMM2
            mulsd XMM0,XMM0
            addsd XMM0,XMM6
            ucomisd XMM3,XMM0
            sqrtsd XMM6,XMM0
            ja .L_40d623
.L_40d0fa:

            mulsd XMM1,XMM5
            movsd QWORD PTR [RBX+104],XMM6
            ucomisd XMM5,XMM3
            movsd QWORD PTR [RBX+120],XMM5
            movsd QWORD PTR [RBX+160],XMM1
            jp .L_40d11c

            je .L_40d420
.L_40d11c:

            mulsd XMM2,QWORD PTR [RSP+88]
.L_40d122:

            movsd QWORD PTR [RBX+168],XMM2
            lea RSI,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBX+120]
            movsd QWORD PTR [RBX+128],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40c8b0

            movsd XMM2,QWORD PTR [RBX+104]
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM2,XMM2
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+112],XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40d5e4

            movapd XMM5,XMM2
.L_40d187:

            addsd XMM1,XMM4
            mov ESI,DWORD PTR [RBX+504]
            test SIL,1
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM5
            divsd XMM2,XMM0
            je .L_40d2d3

            movapd XMM1,XMM2
            lea R11,QWORD PTR [RBX+240]
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            mov RDI,R11
            movsd QWORD PTR [RSP+40],XMM2
            mulsd XMM1,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            addsd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_448f20]
            mulsd XMM0,XMM1
            movapd XMM1,XMM4
            subsd XMM1,XMM2
            addsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_448f28]
            addsd XMM0,XMM2
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+176],XMM0
            movapd XMM0,XMM2
            call .L_40c6d0

            movsd XMM5,QWORD PTR [RBX+128]
            mov RSI,R11
            movsd XMM6,QWORD PTR [RBX+120]
            mov EDX,6
            movapd XMM1,XMM5
            mov EDI,1
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            call .L_40c530

            lea RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM8,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RBX+504]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM0,XMM6
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+200],XMM8
            movapd XMM8,XMM5
            mulsd XMM0,XMM7
            mulsd XMM8,XMM1
            mulsd XMM5,XMM7
            mulsd XMM6,XMM1
            movsd XMM3,QWORD PTR [RSP+56]
            addsd XMM0,XMM8
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            subsd XMM5,XMM6
            movsd QWORD PTR [RBX+144],XMM0
            movsd QWORD PTR [RBX+152],XMM5
.L_40d2d3:

            test SIL,2
            jne .L_40d4e8
.L_40d2dd:

            test SIL,4
            je .L_40d37f

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_448f30]
            addsd XMM4,XMM2
            lea R11,QWORD PTR [RBX+352]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM1,XMM2
            mov RDI,R11
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_448f38]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_448f40]
            mulsd XMM0,XMM1
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_448f28]
            subsd XMM3,XMM2
            divsd XMM3,XMM4
            movsd QWORD PTR [RBX+184],XMM3
            call .L_40c780

            movsd XMM1,QWORD PTR [RBX+128]
            mov RSI,R11
            movsd XMM0,QWORD PTR [RBX+120]
            mov EDX,6
            mov EDI,1
            call .L_40c530

            mov ESI,DWORD PTR [RBX+504]
            movsd QWORD PTR [RBX+208],XMM0
            movsd XMM2,QWORD PTR [RSP+16]
.L_40d37f:

            test SIL,8
            jne .L_40d440
.L_40d389:

            and ESI,16
            je .L_40d3e8

            lea R10,QWORD PTR [RBX+456]
            movapd XMM0,XMM2
            mov RDI,RBP
            mov RSI,R10
            call .L_40c650

            movsd XMM0,QWORD PTR [RBX+24]
            mov EDX,6
            movsd XMM1,QWORD PTR [RBX+128]
            mov RSI,R10
            mulsd XMM0,XMM0
            xor EDI,EDI
            mulsd XMM0,QWORD PTR [RBX+104]
            mulsd XMM0,QWORD PTR [RBX+96]
            mulsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBX+224],XMM0
            movsd XMM0,QWORD PTR [RBX+120]
            call .L_40c530

            movsd QWORD PTR [RBX+232],XMM0
.L_40d3e8:

            movsd XMM7,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX+64],XMM7
            movsd QWORD PTR [RBX+56],XMM7
            jne .L_40d661

            add RSP,120
.L_40d410:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d420:

            ucomisd XMM2,XMM3
            jp .L_40d11c

            jne .L_40d11c

            movapd XMM2,XMM4
            jmp .L_40d122
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d440:

            lea R10,QWORD PTR [RBX+408]
            movapd XMM0,XMM2
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov RSI,R10
            call .L_40c5e0

            movsd XMM0,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RBP+80]
            movsd XMM1,QWORD PTR [RBX+96]
            lea RDX,QWORD PTR [RBP+120]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+72]
            nop
            nop
            nop
.L_40d488:

            mulsd XMM0,XMM2
            add RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_40d488

            mulsd XMM0,XMM1
            mov RSI,R10
            mov EDX,5
            movsd XMM1,QWORD PTR [RBX+128]
            mov EDI,1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RBX+192],XMM0
            movsd XMM0,QWORD PTR [RBX+120]
            call .L_40c530

            mov ESI,DWORD PTR [RBX+504]
            movsd QWORD PTR [RBX+216],XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_40d389
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d4e8:

            movapd XMM5,XMM2
            lea RDI,QWORD PTR [RBX+304]
            movapd XMM1,XMM2
            lea R10,QWORD PTR [RIP+.L_448920]
            mulsd XMM5,XMM2
            mov EDX,5
            xor ECX,ECX
            movsd XMM6,QWORD PTR [RIP+.L_448f10]
            movsd XMM0,QWORD PTR [RIP+.L_448f18]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d520:

            mov R9D,EDX
            sar R9D,1
            je .L_40d54e

            movsxd RAX,ECX
            lea R11D,DWORD PTR [R9-1]
            lea R8,QWORD PTR [R10+RAX*8]
            lea RAX,QWORD PTR [R8+8]
            lea R8,QWORD PTR [R8+R11*8+16]
.L_40d53c:

            mulsd XMM0,XMM5
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp R8,RAX
            jne .L_40d53c
.L_40d54e:

            mulsd XMM0,XMM1
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [RCX+R9*1+2]
            mulsd XMM1,XMM2
            divsd XMM0,XMM6
            movsd QWORD PTR [RDI-8],XMM0
            cmp EDX,-1
            je .L_40d2dd

            movsxd RAX,ECX
            movsd XMM0,QWORD PTR [R10+RAX*8]
            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM6,QWORD PTR [R10+RAX*8]
            jmp .L_40d520
          .byte 0x90
.L_40d590:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40cf00

            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_40d03f
.L_40d5aa:

            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_40d0bd
.L_40d5e4:

            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            jmp .L_40d187
.L_40d623:

            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RBX+96]
            movsd XMM2,QWORD PTR [RBX+48]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_40d0fa
.L_40d661:

            call __stack_chk_fail@PLT
.L_40d666:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d670:

            movapd XMM12,XMM0
            push R15
            push R14
            push R13
            mov R15,RSI
            push R12
            push RBP
            mulsd XMM12,XMM0
            push RBX
            movapd XMM14,XMM1
            movapd XMM8,XMM0
            mov R13,RDX
            sub RSP,120
.L_40d698:

            movapd XMM15,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            mov R14,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+8],XMM6
            pxor XMM6,XMM6
            addsd XMM1,XMM12
            movsd XMM13,QWORD PTR [RIP+.L_448f28]
            movsd XMM9,QWORD PTR [RIP+.L_4470f0]
            mov RBP,RCX
            mov QWORD PTR [RSP+24],RDI
            mov RDI,R14
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM11,XMM2
            mov RBX,R8
            mulsd XMM1,XMM12
            movapd XMM10,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov R12,R9
            addsd XMM1,QWORD PTR [RIP+.L_448f20]
            mulsd XMM1,XMM12
            addsd XMM1,XMM6
            mulsd XMM1,XMM13
            addsd XMM1,XMM0
            movapd XMM0,XMM9
            subsd XMM0,XMM8
            movapd XMM5,XMM1
            divsd XMM5,XMM0
            movapd XMM0,XMM8
            call .L_40c6d0

            lea R11,QWORD PTR [RSP+48]
            mov RDI,R11
            movsd XMM0,QWORD PTR [RIP+.L_448f30]
            mulsd XMM0,XMM12
            subsd XMM0,QWORD PTR [RIP+.L_448f38]
            mulsd XMM0,XMM12
            subsd XMM0,QWORD PTR [RIP+.L_448f40]
            mulsd XMM0,XMM12
            addsd XMM6,XMM0
            movapd XMM0,XMM8
            addsd XMM0,XMM9
            mulsd XMM13,XMM6
            subsd XMM13,XMM8
            divsd XMM13,XMM0
            movapd XMM0,XMM8
            call .L_40c780

            movapd XMM8,XMM5
            test R15,R15
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM8,XMM13
            addsd XMM13,XMM9
            addsd XMM9,XMM5
            je .L_40d9c0

            movapd XMM1,XMM2
            movapd XMM0,XMM15
            mov RSI,R14
            mov EDX,6
            mov EDI,1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call .L_40c530

            movapd XMM1,XMM10
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM11
            mov EDX,6
            mov EDI,1
            call .L_40c530

            movsd XMM6,QWORD PTR [RSP+8]
            mov EDX,6
            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R11
            subsd XMM6,XMM0
            movapd XMM0,XMM14
            movapd XMM1,XMM2
            mov EDI,1
            addsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM0,XMM9
            movsd QWORD PTR [R15],XMM0
            movapd XMM0,XMM15
            call .L_40c530

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM1,XMM10
            movapd XMM0,XMM11
            mov EDX,6
            mov EDI,1
            call .L_40c530

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+32]
            subsd XMM3,XMM0
            mulsd XMM14,XMM8
            mulsd XMM9,XMM6
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM13,XMM3
            subsd XMM9,XMM13
            addsd XMM14,XMM9
.L_40d897:

            test RBP,RBP
            je .L_40d8a2

            movsd QWORD PTR [RBP],XMM8
.L_40d8a2:

            movapd XMM3,XMM15
            movapd XMM0,XMM2
            movapd XMM1,XMM2
            test RBX,RBX
            mulsd XMM3,XMM10
            mulsd XMM0,XMM11
            mulsd XMM1,XMM10
            mulsd XMM3,XMM7
            mulsd XMM0,XMM4
            subsd XMM3,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM14
            subsd XMM3,XMM0
            movsd QWORD PTR [R13],XMM3
            jne .L_40d910

            test R12,R12
            jne .L_40d910
.L_40d8e7:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40da54

            add RSP,120
.L_40d8ff:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d910:

            movsd XMM0,QWORD PTR [RSP+176]
            mov RAX,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+176]
            test RBX,RBX
            subsd XMM0,QWORD PTR [RSP+184]
            movapd XMM3,XMM15
            addsd XMM12,QWORD PTR [RSP+184]
            mulsd XMM3,XMM11
            mulsd XMM0,QWORD PTR [RAX]
            addsd XMM3,XMM1
            mulsd XMM12,XMM0
            movapd XMM0,XMM7
            addsd XMM0,XMM4
            divsd XMM12,XMM0
            je .L_40d991

            movapd XMM0,XMM15
            test R12,R12
            mulsd XMM2,XMM14
            mulsd XMM0,XMM12
            subsd XMM0,XMM2
            mulsd XMM0,XMM11
            divsd XMM0,XMM4
            addsd XMM0,XMM3
            movsd QWORD PTR [RBX],XMM0
            je .L_40d8e7
.L_40d991:

            mulsd XMM12,XMM11
            mulsd XMM14,XMM10
            subsd XMM12,XMM14
            movapd XMM5,XMM12
            mulsd XMM5,XMM15
            divsd XMM5,XMM7
            subsd XMM3,XMM5
            movsd QWORD PTR [R12],XMM3
            jmp .L_40d8e7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d9c0:

            mov EAX,8
.L_40d9c5:

            movsd XMM1,QWORD PTR [R11+RAX*1]
            movsd XMM0,QWORD PTR [R14+RAX*1]
            mulsd XMM1,XMM13
            mulsd XMM0,XMM9
            subsd XMM0,XMM1
            movsd QWORD PTR [R11+RAX*1],XMM0
            add RAX,8
            cmp RAX,56
            jne .L_40d9c5

            movapd XMM1,XMM2
            movapd XMM0,XMM15
            mov EDX,6
            mov RSI,R11
            mov EDI,1
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM14,XMM8
            movsd QWORD PTR [RSP+8],XMM2
            call .L_40c530

            movapd XMM9,XMM0
            mov EDX,6
            movapd XMM1,XMM10
            mov EDI,1
            movapd XMM0,XMM11
            call .L_40c530

            subsd XMM9,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM14,XMM9
            jmp .L_40d897
.L_40da54:

            call __stack_chk_fail@PLT
.L_40da59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,600
.L_40da74:

            mov RAX,QWORD PTR [RSP+680]
            mov QWORD PTR [RSP+120],RCX
            movsd QWORD PTR [RSP+8],XMM0
            mov RCX,QWORD PTR [RSP+656]
            mov QWORD PTR [RSP+112],RDX
            movsd QWORD PTR [RSP+32],XMM2
            mov RDX,QWORD PTR [RSP+664]
            movapd XMM0,XMM1
            mov QWORD PTR [RSP+80],RAX
            movapd XMM1,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+584],RAX
            xor EAX,EAX
            cmp RSI,1
            mov RDI,QWORD PTR [RSP+672]
            mov QWORD PTR [RSP+144],RSI
            sbb EBX,EBX
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+128],R9
            not EBX
            mov QWORD PTR [RSP+152],RCX
            mov QWORD PTR [RSP+160],RDX
            and EBX,1025
            mov QWORD PTR [RSP+168],RDI
            mov QWORD PTR [RSP+368],0
            mov EAX,EBX
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+424],0
            or EAX,4101
            test RCX,RCX
            mov QWORD PTR [RSP+432],0
            cmovne EBX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+456],0
            mov QWORD PTR [RSP+464],0
            jne .L_40e528

            test RDI,RDI
            jne .L_40e528
.L_40db6c:

            mov EAX,EBX
            lea RDI,QWORD PTR [RSP+384]
            or EAX,16400
            cmp QWORD PTR [RSP+80],0
            cmovne EBX,EAX
            call .L_40c920

            pxor XMM8,XMM8
            ucomisd XMM0,XMM8
            jb .L_40e5a8

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mov DWORD PTR [RSP+88],1
            movsd QWORD PTR [RSP],XMM5
            movapd XMM4,XMM5
.L_40dbb2:

            ucomisd XMM0,XMM8
            jp .L_40e858

            pxor XMM1,XMM1
            jne .L_40e858
.L_40dbc7:

            mulsd XMM1,XMM4
            mulsd XMM4,QWORD PTR [RSP+384]
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+48],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448738]
            subsd XMM1,XMM6
            subsd XMM1,XMM4
            ucomisd XMM1,XMM8
            jp .L_40e8a0

            pxor XMM0,XMM0
            jne .L_40e8a0
.L_40dc03:

            movsd XMM7,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+448]
            lea RDI,QWORD PTR [RSP+440]
            movsd XMM5,QWORD PTR [RIP+.L_65de80]
            ucomisd XMM7,QWORD PTR [RIP+.L_448730]
            mulsd XMM5,XMM7
            movsd QWORD PTR [RSP+384],XMM0
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+64],XMM5
            jbe .L_40e500

            call .L_40cc80

            movq XMM6,QWORD PTR [RIP+.L_447ae0]
            movsd XMM0,QWORD PTR [RSP+448]
            movaps XMMWORD PTR [RSP+16],XMM6
            xorpd XMM0,XMM6
            movsd XMM8,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+448],XMM0
.L_40dc78:

            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_448730]
            jbe .L_40dc9e

            movsd XMM4,QWORD PTR [RIP+.L_65de78]
            movsd QWORD PTR [RSP+8],XMM4
.L_40dc9e:

            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM8
            jp .L_40e878

            pxor XMM1,XMM1
            jne .L_40e878
.L_40dcb9:

            movsd XMM0,QWORD PTR [RSP+32]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_448730]
            jbe .L_40dcdf

            movsd XMM7,QWORD PTR [RIP+.L_65de78]
            movsd QWORD PTR [RSP+32],XMM7
.L_40dcdf:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,XMM8
            jp .L_40e5f0

            mov R15D,1
            pxor XMM2,XMM2
            jne .L_40e5f0
.L_40dd00:

            ucomisd XMM8,XMM1
            ja .L_40e5d0

            movapd XMM7,XMMWORD PTR [RSP+16]
            mov EAX,R15D
            neg EAX
            mov DWORD PTR [RSP+212],4294967295
            xorpd XMM1,XMM7
            mov DWORD PTR [RSP+208],EAX
            xorpd XMM2,XMM7
.L_40dd30:

            lea R13,QWORD PTR [RSP+400]
            lea R12,QWORD PTR [RSP+392]
            movsd QWORD PTR [RSP+56],XMM8
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+40],XMM2
            call .L_40cc80

            movsd XMM0,QWORD PTR [RSP+392]
            mov RSI,R13
            mov RDI,R12
            lea R13,QWORD PTR [RSP+416]
            lea R12,QWORD PTR [RSP+408]
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+392],XMM0
            call .L_40c8b0

            movsd XMM6,QWORD PTR [RIP+.L_65de70]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+400]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+40]
            maxsd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+400],XMM0
            movapd XMM0,XMM2
            call .L_40cc80

            movsd XMM0,QWORD PTR [RSP+408]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+408],XMM0
            call .L_40c8b0

            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+416]
            xorpd XMM5,XMM0
            maxsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+400]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM5,XMM4
            movapd XMM3,XMM5
            movsd XMM8,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+416],XMM2
            jbe .L_40e4c8

            ucomisd XMM4,XMM2
            jp .L_40de6a

            jne .L_40de6a

            movsd XMM2,QWORD PTR [RSP+408]
            cmpnltsd XMM2,XMM8
            andpd XMM3,XMM2
            andnpd XMM2,XMM0
            orpd XMM3,XMM2
            movsd QWORD PTR [RSP+408],XMM3
.L_40de6a:

            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+104],XMM5
            ja .L_40ff85
.L_40de91:

            movsd XMM0,QWORD PTR [RSP+408]
            mulsd XMM0,XMM0
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+136],XMM6
            ja .L_40ff61
.L_40debf:

            mov EAX,EBX
            movsd XMM4,QWORD PTR [RSP+440]
            and EAX,8192
            movsd XMM2,QWORD PTR [RSP+392]
            ucomisd XMM1,QWORD PTR [RIP+.L_448728]
            mov DWORD PTR [RSP+40],EAX
            jp .L_40e248

            jne .L_40e248
.L_40def0:

            movsd XMM3,QWORD PTR [RSP+448]
            movsd XMM6,QWORD PTR [RSP+416]
            movsd QWORD PTR [RSP+456],XMM3
            mulsd XMM3,QWORD PTR [RSP+400]
            movsd XMM5,QWORD PTR [RSP+408]
            movapd XMM7,XMM6
            movsd QWORD PTR [RSP+464],XMM4
            movapd XMM4,XMM6
            mulsd XMM7,XMM2
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+176],XMM5
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+96],XMM6
            movapd XMM0,XMM3
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+184],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM8
            addsd XMM1,XMM4
            subsd XMM0,XMM7
            maxsd XMM0,XMM8
            call atan2@PLT

            mov R10D,DWORD PTR [RSP+40]
            movapd XMM9,XMM0
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+56]
            test R10D,R10D
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM3,QWORD PTR [RSP+184]
            jne .L_40e538

            xor R9D,R9D
            xor R8D,R8D
.L_40dfbb:

            movsd QWORD PTR [RSP+56],XMM8
            lea RDX,QWORD PTR [RSP+432]
            lea RSI,QWORD PTR [RSP+424]
            sub RSP,8
.L_40dfd6:

            movapd XMM1,XMM9
            lea R12,QWORD PTR [RSP+536]
            lea RDI,QWORD PTR [RBP+32]
            xor ECX,ECX
            push R12
            push QWORD PTR [RSP+432]
            push QWORD PTR [RSP+424]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RBP+40]
            movsd QWORD PTR [RSP+64],XMM9
            call .L_40d670

            add RSP,32
.L_40e020:

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+56]
            ucomisd XMM7,XMM9
            ja .L_40e04e

            movsd XMM0,QWORD PTR [RSP+432]
            ucomisd XMM0,XMM8
            jb .L_40eec8
.L_40e04e:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_447a90]
            ucomisd XMM0,XMM9
            ja .L_40e8c0

            movsd XMM1,QWORD PTR [RSP+432]
            movsd XMM2,QWORD PTR [RSP+424]
.L_40e079:

            movsd XMM0,QWORD PTR [RBP+48]
            mov R13D,EBX
            mov ECX,1
            movsd XMM5,QWORD PTR [RSP]
            and R13D,16384
            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+32],XMM8
            mulsd XMM0,XMM2
            movapd XMM2,XMM9
            pxor XMM10,XMM10
            movsd QWORD PTR [RSP+8],XMM5
            divsd XMM2,QWORD PTR [RIP+.L_65de80]
            movsd QWORD PTR [RSP+432],XMM1
            movsd QWORD PTR [RSP+424],XMM0
            pxor XMM9,XMM9
            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM3,QWORD PTR [RSP+456]
            movsd XMM11,QWORD PTR [RIP+.L_4470e8]
.L_40e0eb:

            mov R14D,EBX
            pxor XMM6,XMM6
            and R14D,1024
            je .L_40e104

            addsd XMM6,QWORD PTR [RSP+424]
.L_40e104:

            and EBX,4096
            pxor XMM7,XMM7
            je .L_40e119

            addsd XMM7,QWORD PTR [RSP+432]
.L_40e119:

            mov R12D,DWORD PTR [RSP+88]
            pxor XMM5,XMM5
            imul R12D,R15D
            test R13D,R13D
            jne .L_40e660
.L_40e12f:

            cmp R15D,-1
            je .L_40e550
.L_40e139:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RSP+112]
            cmp QWORD PTR [RSP+72],0
            pxor XMM1,XMM1
            cvtsi2sd XMM0,R12D
            cvtsi2sd XMM1,DWORD PTR [RSP+208]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+456],XMM3
            mulsd XMM4,XMM0
            movsd QWORD PTR [RAX],XMM4
            mov RAX,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RAX],XMM3
            je .L_40e192

            mulsd XMM0,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RAX],XMM0
.L_40e192:

            mov RAX,QWORD PTR [RSP+128]
            test RAX,RAX
            je .L_40e1a9

            mulsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX],XMM1
.L_40e1a9:

            test R14D,R14D
            je .L_40e1ba

            mov RAX,QWORD PTR [RSP+144]
            movsd QWORD PTR [RAX],XMM6
.L_40e1ba:

            test EBX,EBX
            je .L_40e1ca

            mov RAX,QWORD PTR [RSP+152]
            movsd QWORD PTR [RAX],XMM7
.L_40e1ca:

            mov EAX,DWORD PTR [RSP+40]
            test EAX,EAX
            je .L_40e206

            mov RAX,QWORD PTR [RSP+160]
            test RAX,RAX
            je .L_40e1ec

            movsd XMM0,QWORD PTR [RSP+368]
            movsd QWORD PTR [RAX],XMM0
.L_40e1ec:

            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40e206

            movsd XMM0,QWORD PTR [RSP+376]
            movsd QWORD PTR [RAX],XMM0
.L_40e206:

            test R13D,R13D
            je .L_40e214

            mov RAX,QWORD PTR [RSP+80]
            movsd QWORD PTR [RAX],XMM5
.L_40e214:

            mov RAX,QWORD PTR [RSP+584]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_410a9b

            add RSP,600
.L_40e236:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e248:

            ucomisd XMM4,XMM8
            jp .L_40e255

            je .L_40def0
.L_40e255:

            ucomisd XMM2,XMM8
            movsd QWORD PTR [RSP+8],XMM8
            jp .L_40e299

            jne .L_40e299
.L_40e265:

            movsd XMM0,QWORD PTR [RBP+8]
            ucomisd XMM8,XMM0
            jae .L_40ebf0

            mulsd XMM0,QWORD PTR [RIP+.L_448738]
            movsd XMM1,QWORD PTR [RSP+384]
            ucomisd XMM1,XMM0
            jae .L_40ebf0

            movsd XMM4,QWORD PTR [RSP+440]
.L_40e299:

            movsd XMM12,QWORD PTR [RSP+416]
            mov QWORD PTR [RSP+472],0
            movsd XMM5,QWORD PTR [RSP+408]
            mov QWORD PTR [RSP+488],0
            movsd XMM9,QWORD PTR [RSP+400]
            movapd XMM10,XMM12
            movapd XMM11,XMM5
            mov QWORD PTR [RSP+496],0
            mulsd XMM10,XMM9
            movapd XMM7,XMM5
            mulsd XMM11,XMM2
            movapd XMM14,XMM12
            mulsd XMM7,XMM9
            mov QWORD PTR [RSP+504],0
            movsd XMM3,QWORD PTR [RSP+448]
            movapd XMM0,XMM10
            mulsd XMM14,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            addsd XMM0,XMM11
            movapd XMM6,XMM7
            movapd XMM3,XMM7
            subsd XMM6,XMM14
            addsd XMM3,XMM14
            ucomisd XMM0,XMM8
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+96],XMM3
            jb .L_40e8d8

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            ucomisd XMM0,XMM6
            jbe .L_40e8d8

            movsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM1,XMM12
            ucomisd XMM0,XMM1
            jbe .L_40e8d8

            movapd XMM0,XMM5
            movapd XMM1,XMM12
            addsd XMM0,XMM2
            addsd XMM1,XMM9
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RBP+32]
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            ja .L_410997
.L_40e3b7:

            movsd XMM0,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+200],XMM7
            mov R13D,1
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+256],XMM2
            movsd XMM7,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM4
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            divsd XMM7,XMM0
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            movapd XMM0,XMM7
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+360]
            movsd XMM3,QWORD PTR [RSP+352]
            movsd XMM12,QWORD PTR [RSP+176]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+256]
            jmp .L_40e8ec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e4c8:

            movsd XMM2,QWORD PTR [RSP+408]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM5,XMM2
            jp .L_40de6a

            jne .L_40de6a

            movsd QWORD PTR [RSP+416],XMM4
            jmp .L_40de6a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e500:

            movsd XMM0,QWORD PTR [RSP+48]
            call .L_40cc80

            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            movsd XMM8,QWORD PTR [RSP+40]
            movaps XMMWORD PTR [RSP+16],XMM4
            jmp .L_40dc78
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e528:

            or EBX,8197
            jmp .L_40db6c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e538:

            lea R9,QWORD PTR [RSP+376]
            lea R8,QWORD PTR [RSP+368]
            jmp .L_40dfbb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e550:

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            je .L_40e57c

            movsd XMM0,QWORD PTR [RSP+368]
            movsd XMM1,QWORD PTR [RSP+376]
            movsd QWORD PTR [RSP+376],XMM0
            movsd QWORD PTR [RSP+368],XMM1
.L_40e57c:

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM3,XMM0
            jmp .L_40e139
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e5a8:

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            mov DWORD PTR [RSP+88],4294967295
            movsd XMM4,QWORD PTR [RIP+.L_447a58]
            movsd QWORD PTR [RSP],XMM6
            jmp .L_40dbb2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e5d0:

            mov DWORD PTR [RSP+208],R15D
            mov DWORD PTR [RSP+212],1
            jmp .L_40dd30
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e5f0:

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call .L_40cf00

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM8,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movapd XMM3,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            jbe .L_410d0a

            movapd XMM0,XMM1
            neg DWORD PTR [RSP+88]
            mov R15D,4294967295
            movapd XMM1,XMM2
            movapd XMM2,XMM0
            jmp .L_40dd00
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e660:

            movsd XMM5,QWORD PTR [RSP+400]
            mulsd XMM3,XMM3
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RSP+392]
            mulsd XMM4,XMM4
            addsd XMM3,XMM4
            ucomisd XMM8,XMM3
            sqrtsd XMM1,XMM3
            ja .L_4105ae
.L_40e691:

            ucomisd XMM1,XMM8
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40e6b8

            ucomisd XMM5,XMM8
            setp AL
            cmove EDX,EAX
            test DL,DL
            jne .L_40ea28
.L_40e6b8:

            movsd QWORD PTR [RSP+16],XMM8
.L_40e6bf:

            test ECX,ECX
            jne .L_40e770

            ucomisd XMM11,QWORD PTR [RSP]
            jbe .L_40e72f

            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+88],XMM8
            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM6
            call sincos@PLT

            movsd XMM11,QWORD PTR [RSP+360]
            movsd XMM10,QWORD PTR [RSP+352]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+88]
.L_40e72f:

            ucomisd XMM10,QWORD PTR [RIP+.L_448f90]
            jbe .L_40e770

            movsd XMM3,QWORD PTR [RSP+408]
            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM1,XMM3
            movsd XMM4,QWORD PTR [RIP+.L_448f88]
            subsd XMM1,XMM0
            ucomisd XMM4,XMM1
            ja .L_40fb25

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e770:

            movsd XMM13,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+456]
            movapd XMM0,XMM13
            movsd XMM3,QWORD PTR [RSP+464]
            movapd XMM1,XMM5
            mulsd XMM0,XMM4
            mulsd XMM5,XMM4
            mulsd XMM1,XMM3
            mulsd XMM3,XMM13
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            addsd XMM1,XMM3
            ucomisd XMM0,XMM8
            jp .L_40e7e0

            jne .L_40e7e0

            ucomisd XMM8,XMM1
            jbe .L_40e7e0

            mulsd XMM4,QWORD PTR [RIP+.L_65de70]
            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movapd XMM0,XMM4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7e0:

            movsd QWORD PTR [RSP+64],XMM8
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call atan2@PLT

            movsd XMM8,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP]
.L_40e815:

            mov EAX,DWORD PTR [RSP+212]
            pxor XMM5,XMM5
            mulsd XMM0,QWORD PTR [RBP+56]
            movsd XMM3,QWORD PTR [RSP+456]
            imul EAX,R12D
            movsd XMM4,QWORD PTR [RSP+464]
            cvtsi2sd XMM5,EAX
            addsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            addsd XMM5,XMM8
            jmp .L_40e12f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e858:

            movsd QWORD PTR [RSP+16],XMM8
            call .L_40cf00

            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            jmp .L_40dbc7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e878:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM8
            call .L_40cf00

            movsd XMM8,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            jmp .L_40dcb9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e8a0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM8
            call .L_40cf00

            movsd XMM8,QWORD PTR [RSP+16]
            jmp .L_40dc03
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e8c0:

            pxor XMM2,XMM2
            pxor XMM1,XMM1
            pxor XMM9,XMM9
            jmp .L_40e079
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e8d8:

            movsd XMM3,QWORD PTR [RSP+32]
            xor R13D,R13D
            movapd XMM6,XMM4
            movsd QWORD PTR [RSP+48],XMM8
.L_40e8ec:

            movapd XMM0,XMM12
            movapd XMM13,XMM6
            movapd XMM1,XMM14
            mulsd XMM0,XMM6
            mulsd XMM13,XMM6
            ucomisd XMM3,XMM8
            movsd XMM15,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+472],XMM0
            mulsd XMM1,XMM13
            jb .L_40ecf0

            addsd XMM15,XMM3
            divsd XMM1,XMM15
            addsd XMM1,QWORD PTR [RSP+56]
.L_40e933:

            movsd QWORD PTR [RSP+488],XMM1
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM15,XMM0
            ja .L_41064a
.L_40e958:

            movapd XMM1,XMM10
            test R13D,R13D
            mulsd XMM1,XMM3
            addsd XMM1,XMM11
            je .L_40ed10

            movsd XMM0,QWORD PTR [RBP+64]
            ucomisd XMM0,XMM15
            jbe .L_40ed10

            mulsd XMM9,XMM6
            ucomisd XMM3,XMM8
            movsd QWORD PTR [RSP+496],XMM9
            jb .L_40fbba

            addsd XMM3,QWORD PTR [RSP]
            divsd XMM13,XMM3
.L_40e9a3:

            lea RAX,QWORD PTR [RSP+496]
            lea RSI,QWORD PTR [RSP+504]
            movsd QWORD PTR [RSP+176],XMM8
            movsd QWORD PTR [RSP+96],XMM1
            mov RDI,RAX
            movsd QWORD PTR [RSP+32],XMM15
            mulsd XMM7,XMM13
            movsd XMM12,QWORD PTR [RSP+56]
            subsd XMM12,XMM7
            movsd QWORD PTR [RSP+504],XMM12
            call .L_40c8b0

            movsd XMM15,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+96]
            movapd XMM0,XMM15
            call atan2@PLT

            movsd XMM1,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM8,QWORD PTR [RSP+176]
            jmp .L_40ed49
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ea28:

            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+496],XMM0
            movsd XMM0,QWORD PTR [RSP+456]
            mulsd XMM4,XMM1
            mulsd XMM0,QWORD PTR [RSP+400]
            mulsd XMM4,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+504],XMM0
            movsd XMM0,QWORD PTR [RSP+408]
            movsd QWORD PTR [RSP+512],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+416]
            movsd QWORD PTR [RSP+520],XMM0
            movsd XMM0,QWORD PTR [RSP]
            addsd XMM0,XMM4
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_4108db
.L_40eaa4:

            addsd XMM3,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+504]
            lea RDI,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+184],XMM8
            mov DWORD PTR [RSP+136],ECX
            movsd QWORD PTR [RSP+176],XMM2
            movsd QWORD PTR [RSP+104],XMM10
            movsd QWORD PTR [RSP+96],XMM11
            movsd QWORD PTR [RSP+88],XMM9
            addsd XMM3,XMM3
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM6
            addsd XMM3,XMM4
            divsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RBP]
            mulsd XMM3,XMM3
            movsd QWORD PTR [RSP+48],XMM4
            mulsd XMM1,XMM3
            mulsd XMM5,XMM1
            mulsd XMM5,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+16],XMM5
            call .L_40c8b0

            lea RSI,QWORD PTR [RSP+520]
            lea RDI,QWORD PTR [RSP+512]
            call .L_40c8b0

            lea R10,QWORD PTR [RSP+528]
            movsd XMM0,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov RSI,R10
            call .L_40c650

            movsd XMM1,QWORD PTR [RSP+504]
            mov EDX,6
            movsd XMM0,QWORD PTR [RSP+496]
            mov RSI,R10
            xor EDI,EDI
            call .L_40c530

            movsd XMM1,QWORD PTR [RSP+520]
            mov EDX,6
            movapd XMM12,XMM0
            xor EDI,EDI
            movsd XMM0,QWORD PTR [RSP+512]
            call .L_40c530

            subsd XMM0,XMM12
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+136]
            movsd XMM9,QWORD PTR [RSP+88]
            movsd XMM11,QWORD PTR [RSP+96]
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+176]
            movsd XMM8,QWORD PTR [RSP+184]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_40e6bf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ebf0:

            movsd XMM1,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RSP+360]
            movsd XMM5,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+352]
            movsd XMM0,QWORD PTR [RBP]
            mov QWORD PTR [RSP+456],0
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM8
            divsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RSP+424],XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBP+48]
            mov R9D,DWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+352]
            mulsd XMM0,QWORD PTR [RSP+360]
            test R9D,R9D
            movsd XMM9,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+432],XMM0
            je .L_40eca7

            movsd QWORD PTR [RSP+376],XMM2
            movsd QWORD PTR [RSP+368],XMM2
.L_40eca7:

            movsd XMM6,QWORD PTR [RSP]
            mov R13D,EBX
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+48]
            and R13D,16384
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+32],XMM6
            divsd XMM2,XMM1
            movapd XMM4,XMM6
            movsd QWORD PTR [RSP+8],XMM8
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4470e8]
            jmp .L_40e0eb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ecf0:

            subsd XMM15,XMM3
            divsd XMM1,XMM15
            movsd XMM15,QWORD PTR [RSP+96]
            subsd XMM15,XMM1
            movapd XMM1,XMM15
            jmp .L_40e933
.L_40ed10:

            movsd XMM0,QWORD PTR [RBP+40]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_448f48]
            ja .L_40ed32

            ucomisd XMM1,XMM8
            jb .L_40fc78
.L_40ed32:

            movsd XMM4,QWORD PTR [RIP+.L_447a58]
            movsd XMM1,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+96],XMM4
.L_40ed49:

            ucomisd XMM8,XMM1
            jb .L_40ef00

            movsd XMM4,QWORD PTR [RSP]
            mov QWORD PTR [RSP+488],0
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+472],XMM4
.L_40ed72:

            test R13D,R13D
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RSP+456],XMM3
            jne .L_40ed90

            movsd QWORD PTR [RSP+48],XMM8
.L_40ed90:

            movsd XMM7,QWORD PTR [RSP+96]
            ucomisd XMM7,XMM8
            jb .L_40ef40

            movsd QWORD PTR [RSP+104],XMM3
            movapd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+360]
            movsd XMM1,QWORD PTR [RBP+48]
            lea RSI,QWORD PTR [RSP+352]
            divsd XMM7,XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+136],XMM8
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+504]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+424],XMM0
            movapd XMM0,XMM7
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            mov R8D,DWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RSP+352]
            test R8D,R8D
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM0,XMM3
            movsd XMM8,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+104]
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+360]
            movsd QWORD PTR [RSP+432],XMM0
            je .L_40ee7d

            movsd QWORD PTR [RSP+376],XMM2
            movsd QWORD PTR [RSP+368],XMM2
.L_40ee7d:

            movsd XMM0,QWORD PTR [RSP+48]
            mov R13D,EBX
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+96]
            and R13D,16384
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd XMM9,QWORD PTR [RSP+64]
            divsd XMM2,QWORD PTR [RIP+.L_65de80]
            divsd XMM9,XMM0
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4470e8]
            jmp .L_40e0eb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eec8:

            movsd XMM2,QWORD PTR [RSP+392]
            ucomisd XMM2,XMM8
            jp .L_40eede

            je .L_40fad0
.L_40eede:

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+440]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_40e299
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef00:

            lea RAX,QWORD PTR [RSP+488]
            lea RDI,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+32],XMM8
            mov RSI,RAX
            call .L_40c8b0

            movsd XMM4,QWORD PTR [RSP+472]
            movsd XMM3,QWORD PTR [RSP+488]
            movsd XMM8,QWORD PTR [RSP+32]
            jmp .L_40ed72
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ef40:

            mov EDI,DWORD PTR [RIP+.L_65de90]
            movsd XMM7,QWORD PTR [RIP+.L_65de70]
            lea RAX,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+176],XMM7
            test EDI,EDI
            mov QWORD PTR [RSP+336],RAX
            je .L_410384

            lea RAX,QWORD PTR [RBP+80]
            movsd QWORD PTR [RSP+32],XMM4
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+176]
            lea R12,QWORD PTR [RSP+528]
            mov QWORD PTR [RSP+296],RAX
            lea RAX,QWORD PTR [RSP+504]
            lea R14,QWORD PTR [RBP+120]
            movsd XMM4,QWORD PTR [RIP+.L_447a58]
            mov DWORD PTR [RSP+344],R15D
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+192],XMM2
            movsd XMM7,QWORD PTR [RSP]
            mov DWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+312],RAX
            lea RAX,QWORD PTR [RSP+512]
            movsd QWORD PTR [RSP+200],XMM4
            movsd QWORD PTR [RSP+216],XMM7
            xor R13D,R13D
            mov R15D,ECX
            mov QWORD PTR [RSP+328],RAX
            lea RAX,QWORD PTR [RSP+488]
            mov DWORD PTR [RSP+348],EBX
            mov QWORD PTR [RSP+304],RAX
            nop
            nop
            nop
            nop
.L_40f020:

            movsd XMM4,QWORD PTR [RSP+440]
            mov EDX,0
            mov EBX,DWORD PTR [RIP+.L_65de94]
            movsd XMM5,QWORD PTR [RSP+448]
            mov QWORD PTR [RSP+488],0
            movsd QWORD PTR [RSP+232],XMM4
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            movsd XMM4,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+512],0
            movsd QWORD PTR [RSP+224],XMM5
            mov QWORD PTR [RSP+520],0
            ucomisd XMM4,XMM8
            movsd XMM6,QWORD PTR [RSP+416]
            movsd XMM5,QWORD PTR [RSP+400]
            movsd QWORD PTR [RSP+56],XMM6
            setnp AL
            movsd XMM1,QWORD PTR [RSP+408]
            cmovne EAX,EDX
            movsd QWORD PTR [RSP+48],XMM5
            test AL,AL
            je .L_40f0e7

            ucomisd XMM3,XMM8
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40f0e7

            movsd XMM3,QWORD PTR [RIP+.L_65de70]
            xorpd XMM3,XMMWORD PTR [RSP+16]
.L_40f0e7:

            movapd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+48]
            mulsd XMM0,XMM3
            mulsd XMM6,XMM5
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+64],XMM6
            movapd XMM2,XMM5
            mulsd XMM2,XMM5
            addsd XMM0,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP+240],XMM7
            ja .L_4102e2
.L_40f12d:

            movsd XMM5,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+312]
            movsd XMM2,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+304]
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+256],XMM8
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+184],XMM1
            movsd QWORD PTR [RSP+488],XMM4
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+248],XMM5
            movsd QWORD PTR [RSP+496],XMM2
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+264],XMM3
            call .L_40c8b0

            movsd XMM4,QWORD PTR [RSP+96]
            movapd XMM6,XMMWORD PTR [RSP+16]
            xorpd XMM6,XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+184]
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+256]
            ucomisd XMM6,QWORD PTR [RSP+48]
            jp .L_40f1e3

            movsd XMM3,QWORD PTR [RSP+264]
            je .L_40f7d0
.L_40f1e3:

            movsd XMM3,QWORD PTR [RSP+64]
            divsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM3
.L_40f1f5:

            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM3,XMM2
            ucomisd XMM0,XMM7
            mulsd XMM3,XMM2
            jbe .L_40f838

            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM5,XMM6
            subsd XMM6,XMM7
            addsd XMM5,XMM7
            movapd XMM0,XMM6
            mulsd XMM0,XMM5
.L_40f227:

            addsd XMM0,XMM3
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_41032a
.L_40f23a:

            divsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM3
.L_40f246:

            movsd XMM7,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+328]
            movsd XMM3,QWORD PTR [RSP+64]
            mulsd XMM7,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+320]
            movsd QWORD PTR [RSP+272],XMM4
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+280],XMM2
            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+504],XMM1
            movsd QWORD PTR [RSP+264],XMM3
            movsd QWORD PTR [RSP+184],XMM7
            movsd QWORD PTR [RSP+512],XMM7
            call .L_40c8b0

            movsd XMM0,QWORD PTR [RSP+496]
            movsd XMM6,QWORD PTR [RSP+488]
            movsd XMM7,QWORD PTR [RSP+504]
            movapd XMM9,XMM0
            movsd XMM5,QWORD PTR [RSP+512]
            mulsd XMM0,XMM7
            movapd XMM1,XMM6
            mulsd XMM9,XMM5
            mulsd XMM5,XMM6
            mulsd XMM1,XMM7
            movsd XMM8,QWORD PTR [RSP+96]
            subsd XMM0,XMM5
            movsd QWORD PTR [RSP+256],XMM8
            addsd XMM1,XMM9
            maxsd XMM0,XMM8
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+280]
            movsd XMM5,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+264]
            movsd XMM7,QWORD PTR [RSP+184]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+96],XMM0
            movapd XMM0,XMM2
            mulsd XMM1,XMM7
            mulsd XMM0,XMM3
            mulsd XMM5,XMM3
            mulsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+256]
            subsd XMM0,XMM1
            movsd XMM7,QWORD PTR [RSP+224]
            movsd XMM6,QWORD PTR [RSP+232]
            addsd XMM2,XMM5
            movapd XMM3,XMM7
            movapd XMM1,XMM6
            maxsd XMM0,XMM8
            mulsd XMM3,XMM2
            mulsd XMM2,XMM6
            mulsd XMM1,XMM0
            mulsd XMM0,XMM7
            addsd XMM1,XMM3
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM9,QWORD PTR [RSP+240]
            movsd QWORD PTR [RSP+248],XMM0
            mulsd XMM9,XMM9
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+256]
            movsd XMM4,QWORD PTR [RSP+272]
            mulsd XMM9,QWORD PTR [RBP+32]
            addsd XMM0,XMM9
            ucomisd XMM8,XMM0
            sqrtsd XMM1,XMM0
            ja .L_410296
.L_40f3ea:

            addsd XMM1,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM4
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM9
            divsd XMM9,XMM0
            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+280],XMM9
            call .L_40c5e0

            movsd XMM6,QWORD PTR [RSP+504]
            mov EDX,5
            movsd XMM1,QWORD PTR [RSP+512]
            mov RSI,R12
            movapd XMM0,XMM6
            mov EDI,1
            movsd QWORD PTR [RSP+240],XMM1
            movsd QWORD PTR [RSP+256],XMM6
            call .L_40c530

            movsd XMM4,QWORD PTR [RSP+488]
            mov EDX,5
            movapd XMM7,XMM0
            mov EDI,1
            movsd XMM1,QWORD PTR [RSP+496]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+272],XMM4
            movsd QWORD PTR [RSP+264],XMM1
            call .L_40c530

            movsd XMM1,QWORD PTR [RBP+8]
            subsd XMM7,XMM0
            mov RAX,QWORD PTR [RSP+296]
            movsd XMM4,QWORD PTR [RSP+224]
            movapd XMM2,XMM1
            movsd XMM8,QWORD PTR [RSP+232]
            xorpd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBP+72]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f4e0:

            mulsd XMM1,XMM9
            add RAX,8
            cmp RAX,R14
            addsd XMM1,QWORD PTR [RAX-8]
            jne .L_40f4e0

            mulsd XMM1,XMM2
            addsd XMM7,QWORD PTR [RSP+96]
            cmp EBX,R13D
            movsd XMM10,QWORD PTR [RSP+248]
            mulsd XMM1,QWORD PTR [RSP+64]
            movapd XMM5,XMM1
            pxor XMM1,XMM1
            mulsd XMM5,XMM7
            movsd QWORD PTR [RSP+64],XMM5
            addsd XMM10,XMM5
            jbe .L_40f557

            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM8
            jp .L_40f898

            jne .L_40f898

            movsd XMM1,QWORD PTR [RIP+.L_448f78]
            mulsd XMM1,QWORD PTR [RBP+16]
            mulsd XMM1,QWORD PTR [RSP+104]
            divsd XMM1,XMM4
.L_40f557:

            mov ESI,DWORD PTR [RSP+288]
            test ESI,ESI
            jne .L_40f9a0

            movapd XMM3,XMM10
            test R15D,R15D
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            movsd XMM0,QWORD PTR [RSP]
            je .L_40f585

            movsd XMM0,QWORD PTR [RIP+.L_447a68]
.L_40f585:

            movsd XMM2,QWORD PTR [RIP+.L_65de68]
            mulsd XMM0,XMM2
            ucomisd XMM3,XMM0
            jb .L_40f9a0

            ucomisd XMM10,XMM8
            jbe .L_40f858

            cmp EBX,R13D
            movsd XMM0,QWORD PTR [RSP+464]
            movsd XMM4,QWORD PTR [RSP+456]
            jb .L_40f800

            movsd XMM6,QWORD PTR [RSP+200]
            movapd XMM5,XMM4
            divsd XMM6,QWORD PTR [RSP+192]
            divsd XMM5,XMM0
            ucomisd XMM5,XMM6
            ja .L_40f800

            ucomisd XMM8,XMM10
            ja .L_40fae8
.L_40f5f0:

            cmp EBX,R13D
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            jbe .L_40f6b9

            ucomisd XMM1,XMM8
            jbe .L_40f6b9

            xorpd XMM10,XMMWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+184],XMM8
            divsd XMM10,XMM1
            movapd XMM0,XMM10
            movsd QWORD PTR [RSP+224],XMM10
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM1,QWORD PTR [RSP+456]
            movsd XMM6,QWORD PTR [RSP+352]
            movapd XMM0,XMM4
            movsd XMM5,QWORD PTR [RSP+360]
            movapd XMM7,XMM1
            mulsd XMM0,XMM6
            movsd XMM8,QWORD PTR [RSP+184]
            mulsd XMM7,XMM5
            addsd XMM0,XMM7
            ucomisd XMM0,XMM8
            jbe .L_40f6b9

            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM7,QWORD PTR [RIP+.L_65de88]
            andpd XMM10,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM10
            ja .L_40ff00
.L_40f6b9:

            movsd XMM0,QWORD PTR [RSP+176]
            lea RSI,QWORD PTR [RSP+456]
            lea RDI,QWORD PTR [RSP+464]
            movsd XMM6,QWORD PTR [RSP+216]
            addsd XMM0,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+48],XMM8
            addsd XMM6,QWORD PTR [RSP+200]
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+464],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+456],XMM0
            call .L_40c8b0

            movsd XMM1,QWORD PTR [RSP+464]
            movsd XMM0,QWORD PTR [RSP+176]
            movsd XMM2,QWORD PTR [RSP+456]
            subsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+216]
            movsd XMM3,QWORD PTR [RIP+.L_65de50]
            subsd XMM4,XMM2
            movsd XMM8,QWORD PTR [RSP+48]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            ja .L_40f820

            subsd XMM1,QWORD PTR [RSP+192]
            xor EAX,EAX
            subsd XMM2,QWORD PTR [RSP+200]
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            addsd XMM1,XMM2
            ucomisd XMM3,XMM1
            seta AL
            xor R15D,R15D
            mov DWORD PTR [RSP+288],EAX
.L_40f7a1:

            add R13D,1
            cmp DWORD PTR [RIP+.L_65de90],R13D
            jbe .L_40f9a0

            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM3,QWORD PTR [RSP+456]
            movsd QWORD PTR [RSP+32],XMM4
            jmp .L_40f020
          .byte 0x90
.L_40f7d0:

            movapd XMM5,XMM1
            andpd XMM5,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM5,XMM0
            jp .L_40f1f5

            jne .L_40f1f5

            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_40f246
          .byte 0x90
.L_40f800:

            movsd QWORD PTR [RSP+200],XMM4
            movsd QWORD PTR [RSP+192],XMM0
            jmp .L_40f5f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f820:

            mov DWORD PTR [RSP+288],1
            xor R15D,R15D
            jmp .L_40f7a1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f838:

            movapd XMM5,XMM1
            movapd XMM0,XMM4
            addsd XMM5,XMM4
            subsd XMM0,XMM1
            mulsd XMM0,XMM5
            jmp .L_40f227
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f858:

            ucomisd XMM8,XMM10
            jbe .L_40f5f0

            cmp EBX,R13D
            movsd XMM0,QWORD PTR [RSP+464]
            movsd XMM4,QWORD PTR [RSP+456]
            jae .L_40fae0
.L_40f87e:

            movsd QWORD PTR [RSP+216],XMM4
            movsd QWORD PTR [RSP+176],XMM0
            jmp .L_40f5f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f898:

            movsd QWORD PTR [RSP+232],XMM8
            lea RDX,QWORD PTR [RSP+520]
            sub RSP,8
.L_40f8ae:

            movsd QWORD PTR [RSP+232],XMM10
            push R12
            push QWORD PTR [RSP+72]
            push QWORD PTR [RSP+72]
.L_40f8c2:

            xor R9D,R9D
            xor R8D,R8D
            mov RDI,QWORD PTR [RSP+368]
            xor ECX,ECX
            xor ESI,ESI
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+296]
            movsd XMM2,QWORD PTR [RSP+304]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM6,QWORD PTR [RSP+272]
            movsd XMM5,QWORD PTR [RSP+288]
            movsd XMM0,QWORD PTR [RSP+312]
            call .L_40d670

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM4,QWORD PTR [RSP+520]
            divsd XMM1,QWORD PTR [RSP+216]
            movsd QWORD PTR [RSP+304],XMM4
            movsd XMM2,QWORD PTR [RSP+528]
            movsd XMM3,QWORD PTR [RSP+536]
            movsd XMM4,QWORD PTR [RSP+544]
            movsd QWORD PTR [RSP+296],XMM2
            movsd QWORD PTR [RSP+288],XMM3
            mulsd XMM1,QWORD PTR [RSP+552]
            movsd QWORD PTR [RSP+272],XMM4
            add RSP,32
.L_40f984:

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            jmp .L_40f557
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f9a0:

            mov R15D,DWORD PTR [RSP+344]
            mov EBX,DWORD PTR [RSP+348]
            movsd XMM9,QWORD PTR [RSP+280]
.L_40f9b9:

            mov ECX,DWORD PTR [RSP+40]
            test ECX,ECX
            jne .L_40fb10

            xor R9D,R9D
            xor R8D,R8D
.L_40f9cb:

            movsd QWORD PTR [RSP+16],XMM8
            lea RDX,QWORD PTR [RSP+432]
            lea RSI,QWORD PTR [RSP+424]
            sub RSP,8
.L_40f9e6:

            movapd XMM0,XMM9
            push R12
            xor ECX,ECX
            mov R13D,EBX
            push QWORD PTR [RSP+432]
            push QWORD PTR [RSP+424]
.L_40fa00:

            mov RDI,QWORD PTR [RSP+368]
            movsd XMM2,QWORD PTR [RSP+304]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM6,QWORD PTR [RSP+272]
            movsd XMM5,QWORD PTR [RSP+288]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+296]
            call .L_40d670

            movsd XMM1,QWORD PTR [RSP+464]
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM2,QWORD PTR [RSP+128]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+456]
            divsd XMM2,QWORD PTR [RIP+.L_65de80]
            movsd QWORD PTR [RSP+464],XMM1
            movsd QWORD PTR [RSP+456],XMM0
            add RSP,32
.L_40fa8e:

            and R13D,16384
            movsd XMM8,QWORD PTR [RSP+16]
            jne .L_40fbd0

            movsd XMM4,QWORD PTR [RSP+464]
            xor ECX,ECX
            movsd XMM3,QWORD PTR [RSP+456]
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4470e8]
            pxor XMM9,XMM9
            jmp .L_40e0eb
          .byte 0x66
          .byte 0x90
.L_40fad0:

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM5
            jmp .L_40e265
.L_40fae0:

            movapd XMM5,XMM4
            divsd XMM5,XMM0
.L_40fae8:

            movsd XMM6,QWORD PTR [RSP+216]
            divsd XMM6,QWORD PTR [RSP+176]
            ucomisd XMM6,XMM5
            jbe .L_40f5f0

            jmp .L_40f87e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fb10:

            lea R9,QWORD PTR [RSP+376]
            lea R8,QWORD PTR [RSP+368]
            jmp .L_40f9cb
.L_40fb25:

            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM4,XMM3
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+400]
            movsd XMM9,QWORD PTR [RSP+416]
            addsd XMM5,XMM6
            mulsd XMM4,XMM0
            movsd QWORD PTR [RSP+88],XMM8
            addsd XMM9,XMM6
            movsd QWORD PTR [RSP+64],XMM2
            addsd XMM6,XMM10
            movsd QWORD PTR [RSP+56],XMM7
            movapd XMM1,XMM5
            mulsd XMM3,XMM5
            mulsd XMM0,XMM9
            mulsd XMM1,XMM9
            addsd XMM0,XMM3
            addsd XMM4,XMM1
            movapd XMM1,XMM6
            mulsd XMM0,XMM11
            mulsd XMM1,XMM4
            call atan2@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            addsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+88]
            jmp .L_40e815
.L_40fbba:

            movsd XMM13,QWORD PTR [RSP]
            subsd XMM13,XMM3
            jmp .L_40e9a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fbd0:

            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+48],XMM8
            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+352]
            xor ECX,ECX
            movsd XMM10,QWORD PTR [RSP+360]
            movsd XMM3,QWORD PTR [RSP+440]
            movsd XMM1,QWORD PTR [RSP+448]
            movapd XMM11,XMM3
            mulsd XMM3,XMM10
            movapd XMM5,XMM1
            mulsd XMM1,XMM4
            mulsd XMM11,XMM4
            mulsd XMM5,XMM10
            movsd XMM4,QWORD PTR [RSP+464]
            addsd XMM1,XMM3
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+456]
            subsd XMM11,XMM5
            pxor XMM9,XMM9
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM10,XMM1
            jmp .L_40e0eb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fc78:

            mulsd XMM0,QWORD PTR [RIP+.L_448f50]
            movapd XMM13,XMM9
            movsd XMM3,QWORD PTR [RIP+.L_65de88]
            mulsd XMM13,XMM9
            movsd QWORD PTR [RSP+56],XMM3
            mulsd XMM0,XMM3
            mulsd XMM0,XMM13
            ucomisd XMM15,XMM0
            jae .L_40ed32

            movapd XMM7,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            xorpd XMM4,XMM7
            movsd QWORD PTR [RSP+248],XMM2
            xorpd XMM1,XMM7
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM13
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+224],XMM11
            movsd QWORD PTR [RSP+216],XMM10
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call atan2@PLT

            movsd XMM3,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RSP+240]
            movapd XMM15,XMM0
            movsd XMM12,QWORD PTR [RSP+176]
            ucomisd XMM3,XMM8
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM10,QWORD PTR [RSP+216]
            movsd XMM11,QWORD PTR [RSP+224]
            movsd XMM13,QWORD PTR [RSP+232]
            movsd XMM2,QWORD PTR [RSP+248]
            jb .L_4103cc

            mulsd XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RBP+32]
            addsd XMM0,XMM2
            movapd XMM1,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM2,XMM0
            ja .L_410aa0
.L_40fdb3:

            addsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,XMM9
            lea RAX,QWORD PTR [RBP+80]
            lea R14,QWORD PTR [RBP+120]
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            addsd XMM0,XMM1
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+72]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fde0:

            mulsd XMM0,XMM1
            add RAX,8
            cmp RAX,R14
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_40fde0

            mulsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RSP+56]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+184],XMM0
            movapd XMM0,XMM15
            mulsd XMM9,XMM2
            divsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RSP+96]
            divsd XMM2,XMM9
            movsd QWORD PTR [RSP+480],XMM0
            movsd QWORD PTR [RSP+32],XMM2
.L_40fe31:

            movsd XMM0,QWORD PTR [RIP+.L_65de60]
            movsd XMM5,QWORD PTR [RSP+32]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            ucomisd XMM5,XMM0
            jbe .L_40ffae

            movsd XMM5,QWORD PTR [RIP+.L_447a58]
            movsd XMM2,QWORD PTR [RSP+480]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+56],XMM5
            subsd XMM1,QWORD PTR [RIP+.L_65de48]
            ucomisd XMM2,XMM1
            jbe .L_40ffbc

            movsd XMM1,QWORD PTR [RBP+8]
            ucomisd XMM1,XMM8
            jb .L_4107ca

            movsd XMM0,QWORD PTR [RSP+480]
            ucomisd XMM0,XMM5
            jbe .L_410a61

            movapd XMM7,XMMWORD PTR [RSP+16]
            xorpd XMM7,XMM0
            mulsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+472],XMM7
            subsd XMM6,XMM0
            ucomisd XMM8,XMM6
            sqrtsd XMM2,XMM6
            movapd XMM0,XMM6
            ja .L_410b9b
.L_40fed6:

            xorpd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+488],XMM2
            jmp .L_40ed49
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ff00:

            mulsd XMM1,XMM6
            lea RSI,QWORD PTR [RSP+456]
            lea RDI,QWORD PTR [RSP+464]
            mulsd XMM4,XMM5
            movsd QWORD PTR [RSP+464],XMM0
            xor R15D,R15D
            subsd XMM1,XMM4
            movsd QWORD PTR [RSP+456],XMM1
            call .L_40c8b0

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RIP+.L_448f80]
            movsd XMM8,QWORD PTR [RSP+184]
            ucomisd XMM2,XMM3
            setae R15B
            jmp .L_40f7a1
.L_40ff61:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_40debf
.L_40ff85:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBP+32]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_40de91
.L_40ffae:

            movsd XMM3,QWORD PTR [RIP+.L_447a58]
            movsd QWORD PTR [RSP+56],XMM3
.L_40ffbc:

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+480]
            movapd XMM7,XMM2
            mulsd XMM0,XMM0
            mulsd XMM7,XMM2
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+176],XMM7
            movapd XMM2,XMM7
            addsd XMM1,XMM0
            ucomisd XMM2,XMM8
            subsd XMM1,QWORD PTR [RSP]
            movapd XMM7,XMM1
            divsd XMM7,QWORD PTR [RIP+.L_448f50]
            movsd QWORD PTR [RSP+192],XMM7
            jp .L_41001a

            jne .L_41001a

            ucomisd XMM8,XMM7
            jae .L_4108cd
.L_41001a:

            movsd XMM4,QWORD PTR [RSP+192]
            mulsd XMM0,QWORD PTR [RSP+176]
            movapd XMM2,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_448f60]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM0
            movapd XMM7,XMM2
            movsd QWORD PTR [RSP+216],XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM7
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            addsd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM1,XMM2
            ucomisd XMM0,XMM8
            movsd QWORD PTR [RSP+200],XMM1
            jb .L_410834

            ucomisd XMM8,XMM1
            sqrtsd XMM2,XMM0
            ja .L_4107b4

            ucomisd XMM8,XMM0
            ja .L_410bc8
.L_410097:

            addsd XMM2,QWORD PTR [RSP+200]
            movsd XMM1,QWORD PTR [RIP+.L_448f68]
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+200],XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+200]
            movsd XMM8,QWORD PTR [RSP+240]
            movsd XMM12,QWORD PTR [RSP+224]
            ucomisd XMM8,XMM2
            movsd XMM14,QWORD PTR [RSP+232]
            jbe .L_410114

            xorpd XMM0,XMMWORD PTR [RSP+16]
.L_410114:

            ucomisd XMM0,XMM8
            jp .L_410121

            pxor XMM1,XMM1
            je .L_41012e
.L_410121:

            movsd XMM1,QWORD PTR [RSP+216]
            divsd XMM1,XMM0
.L_41012e:

            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+192]
            addsd XMM1,XMM0
.L_41013f:

            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RSP+176]
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_410b31
.L_41015f:

            ucomisd XMM8,XMM1
            ja .L_410779

            addsd XMM1,XMM3
.L_41016e:

            movapd XMM2,XMM1
            addsd XMM3,XMM3
            subsd XMM2,QWORD PTR [RSP+176]
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+176],XMM4
            ja .L_410d15
.L_4101a7:

            addsd XMM2,QWORD PTR [RSP+176]
            divsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM2,XMM1
.L_4101bd:

            movsd XMM0,QWORD PTR [RBP+8]
            ucomisd XMM0,XMM8
            jb .L_410760

            movsd XMM0,QWORD PTR [RSP+480]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            divsd XMM1,XMM2
            movapd XMM0,XMM1
.L_4101e8:

            mulsd XMM0,QWORD PTR [RSP+184]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+192],XMM8
            movsd QWORD PTR [RSP+176],XMM14
            movsd QWORD PTR [RSP+32],XMM12
            call sincos@PLT

            movsd XMM12,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+360]
            movapd XMM1,XMM12
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM14,QWORD PTR [RSP+176]
            mulsd XMM1,XMM0
            addsd XMM2,QWORD PTR [RSP+352]
            mulsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+472],XMM1
            mulsd XMM0,XMM14
            movsd QWORD PTR [RSP+96],XMM3
            movsd XMM8,QWORD PTR [RSP+192]
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            movsd QWORD PTR [RSP+488],XMM6
            jmp .L_40ed49
.L_410296:

            movsd QWORD PTR [RSP+240],XMM1
            movsd QWORD PTR [RSP+232],XMM9
            movsd QWORD PTR [RSP+224],XMM4
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+256]
            movsd XMM1,QWORD PTR [RSP+240]
            movsd XMM9,QWORD PTR [RSP+232]
            movsd XMM4,QWORD PTR [RSP+224]
            jmp .L_40f3ea
.L_4102e2:

            movsd QWORD PTR [RSP+248],XMM3
            movsd QWORD PTR [RSP+184],XMM8
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+248]
            movsd XMM8,QWORD PTR [RSP+184]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40f12d
.L_41032a:

            movsd QWORD PTR [RSP+264],XMM8
            movsd QWORD PTR [RSP+256],XMM3
            movsd QWORD PTR [RSP+184],XMM2
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+264]
            movsd XMM3,QWORD PTR [RSP+256]
            movsd XMM2,QWORD PTR [RSP+184]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40f23a
.L_410384:

            movsd QWORD PTR [RSP+64],XMM8
            pxor XMM9,XMM9
            movsd QWORD PTR [RSP+240],XMM8
            lea R12,QWORD PTR [RSP+528]
            movsd QWORD PTR [RSP+256],XMM8
            movsd QWORD PTR [RSP+264],XMM8
            movsd QWORD PTR [RSP+272],XMM8
            movsd QWORD PTR [RSP+32],XMM8
            jmp .L_40f9b9
.L_4103cc:

            movapd XMM1,XMM10
            movsd QWORD PTR [RSP+224],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            subsd XMM1,XMM11
            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+216],XMM13
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+184],XMM10
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+176],XMM9
            movsd QWORD PTR [RSP+192],XMM5
            movsd QWORD PTR [RSP+32],XMM12
            call atan2@PLT

            movsd XMM9,QWORD PTR [RSP+176]
            lea RCX,QWORD PTR [RSP+520]
            movapd XMM2,XMMWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSP+512]
            sub RSP,8
.L_410459:

            lea RDI,QWORD PTR [RBP+32]
            xor R9D,R9D
            lea R12,QWORD PTR [RSP+536]
            xorpd XMM2,XMM9
            xor R8D,R8D
            xor ESI,ESI
            push R12
            movapd XMM3,XMM2
            movsd XMM12,QWORD PTR [RSP+48]
            sub RSP,16

            movsd XMM1,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM12
            movapd XMM6,XMM12
            movsd QWORD PTR [RSP],XMM9
            addsd XMM1,XMM0
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM5,QWORD PTR [RSP+224]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM2,QWORD PTR [RSP+272]
            movsd XMM0,QWORD PTR [RBP+40]
            movsd QWORD PTR [RSP+208],XMM9
            movsd QWORD PTR [RSP+64],XMM12
            call .L_40d670

            movsd XMM10,QWORD PTR [RSP+216]
            movsd XMM0,QWORD PTR [RSP+88]
            mulsd XMM10,QWORD PTR [RSP+552]
            movsd XMM1,QWORD PTR [RSP+544]
            mulsd XMM0,XMM10
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448f58]
            subsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+512],XMM0
            movsd XMM0,QWORD PTR [RSP+512]
            add RSP,32

            ucomisd XMM1,XMM0
            movsd XMM12,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+176]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM13,QWORD PTR [RSP+216]
            movsd XMM15,QWORD PTR [RSP+224]
            movsd XMM8,QWORD PTR [RSP+232]
            jbe .L_410793

            movsd XMM0,QWORD PTR [RSP+480]
            movsd XMM13,QWORD PTR [RSP+96]
            divsd XMM13,XMM0
.L_41058a:

            movapd XMM4,XMM13
            divsd XMM4,XMM9
            divsd XMM15,XMM4
            movsd QWORD PTR [RSP+184],XMM4
            movsd QWORD PTR [RSP+32],XMM15
            jmp .L_40fe31
.L_4105ae:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+184],XMM8
            movsd QWORD PTR [RSP+176],XMM2
            mov DWORD PTR [RSP+136],ECX
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+96],XMM5
            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+64],XMM11
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+184]
            movsd XMM2,QWORD PTR [RSP+176]
            mov ECX,DWORD PTR [RSP+136]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM11,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_40e691
.L_41064a:

            movsd QWORD PTR [RSP+288],XMM2
            movsd QWORD PTR [RSP+280],XMM8
            movsd QWORD PTR [RSP+272],XMM13
            movsd QWORD PTR [RSP+264],XMM4
            movsd QWORD PTR [RSP+256],XMM15
            movsd QWORD PTR [RSP+248],XMM3
            movsd QWORD PTR [RSP+240],XMM6
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM7
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+288]
            movsd XMM8,QWORD PTR [RSP+280]
            movsd XMM13,QWORD PTR [RSP+272]
            movsd XMM4,QWORD PTR [RSP+264]
            movsd XMM15,QWORD PTR [RSP+256]
            movsd XMM3,QWORD PTR [RSP+248]
            movsd XMM6,QWORD PTR [RSP+240]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM12,QWORD PTR [RSP+176]
            jmp .L_40e958
.L_410760:

            movsd XMM0,QWORD PTR [RSP+32]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            jmp .L_4101e8
.L_410779:

            movapd XMM0,XMM3
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+176]
            divsd XMM1,XMM0
            jmp .L_41016e
.L_410793:

            movsd XMM0,QWORD PTR [RBP+8]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM0,XMM13
            movsd XMM13,QWORD PTR [RSP+56]
            mulsd XMM13,XMM0
            jmp .L_41058a
.L_4107b4:

            ucomisd XMM8,XMM0
            ja .L_410c8e
.L_4107bf:

            xorpd XMM2,XMMWORD PTR [RSP+16]
            jmp .L_410097
.L_4107ca:

            movsd XMM1,QWORD PTR [RSP+480]
            movsd XMM2,QWORD PTR [RSP+480]
            movsd XMM5,QWORD PTR [RSP+56]
            cmpltsd XMM0,XMM2
            andnpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jbe .L_410a7c

            movsd QWORD PTR [RSP+488],XMM1
            mulsd XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM1,XMM0
            ja .L_410ce6
.L_41081a:

            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+472],XMM1
            movsd QWORD PTR [RSP+96],XMM3
            jmp .L_40ed49
.L_410834:

            ucomisd XMM0,QWORD PTR [RIP+.L_448f70]
            movapd XMM7,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+200]
            xorpd XMM1,XMM7
            xorpd XMM7,XMM0
            sqrtsd XMM3,XMM7
            ja .L_410c20
.L_41085d:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+224],XMM8
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM12
            call atan2@PLT

            divsd XMM0,QWORD PTR [RIP+.L_447a90]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+192]
            movsd XMM8,QWORD PTR [RSP+224]
            movapd XMM1,XMM5
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM12,QWORD PTR [RSP+200]
            addsd XMM1,XMM5
            mulsd XMM1,XMM0
            addsd XMM1,XMM5
            jmp .L_41013f
.L_4108cd:

            movsd XMM2,QWORD PTR [RSP]
            pxor XMM1,XMM1
            jmp .L_4101bd
.L_4108db:

            movsd QWORD PTR [RSP+200],XMM8
            mov DWORD PTR [RSP+184],ECX
            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+176],XMM1
            movsd QWORD PTR [RSP+136],XMM4
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+88],XMM11
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+16],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+200]
            movsd XMM2,QWORD PTR [RSP+192]
            mov ECX,DWORD PTR [RSP+184]
            movsd XMM1,QWORD PTR [RSP+176]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd XMM10,QWORD PTR [RSP+96]
            movsd XMM11,QWORD PTR [RSP+88]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_40eaa4
.L_410997:

            movsd QWORD PTR [RSP+256],XMM2
            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM4
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM7
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+256]
            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM12,QWORD PTR [RSP+176]
            jmp .L_40e3b7
.L_410a61:

            movsd XMM7,QWORD PTR [RSP]
            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+472],XMM7
            movapd XMM1,XMM7
            jmp .L_40fed6
.L_410a7c:

            movsd QWORD PTR [RSP+488],XMM0
            mulsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP]
            subsd XMM1,XMM0
            sqrtsd XMM1,XMM1
            jmp .L_41081a
.L_410a9b:

            call __stack_chk_fail@PLT
.L_410aa0:

            movsd QWORD PTR [RSP+224],XMM8
            movsd QWORD PTR [RSP+216],XMM2
            movsd QWORD PTR [RSP+200],XMM1
            movsd QWORD PTR [RSP+192],XMM15
            movsd QWORD PTR [RSP+184],XMM14
            movsd QWORD PTR [RSP+176],XMM9
            movsd QWORD PTR [RSP+32],XMM12
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RSP+224]
            movsd XMM2,QWORD PTR [RSP+216]
            movsd XMM1,QWORD PTR [RSP+200]
            movsd XMM15,QWORD PTR [RSP+192]
            movsd XMM14,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+176]
            movsd XMM12,QWORD PTR [RSP+32]
            jmp .L_40fdb3
.L_410b31:

            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM3
            movsd QWORD PTR [RSP+216],XMM1
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM3,QWORD PTR [RSP+224]
            movsd XMM1,QWORD PTR [RSP+216]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM12,QWORD PTR [RSP+192]
            jmp .L_41015f
.L_410b9b:

            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+472]
            movsd XMM8,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_40fed6
.L_410bc8:

            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+240]
            movsd XMM14,QWORD PTR [RSP+232]
            movsd XMM12,QWORD PTR [RSP+224]
            jmp .L_410097
.L_410c20:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM3
            movsd QWORD PTR [RSP+224],XMM1
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+240]
            movsd XMM3,QWORD PTR [RSP+232]
            movsd XMM1,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM12,QWORD PTR [RSP+200]
            jmp .L_41085d
.L_410c8e:

            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+240]
            movsd XMM14,QWORD PTR [RSP+232]
            movsd XMM12,QWORD PTR [RSP+224]
            jmp .L_4107bf
.L_410ce6:

            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_41081a
.L_410d0a:

            mov R15D,1
            jmp .L_40dd00
.L_410d15:

            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM2
            movsd QWORD PTR [RSP+216],XMM1
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM2,QWORD PTR [RSP+224]
            movsd XMM1,QWORD PTR [RSP+216]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM12,QWORD PTR [RSP+192]
            jmp .L_4101a7
.L_410d7f:

            nop
.L_410d80:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            movapd XMM2,XMM0
            sub RSP,120
.L_410d91:

            mov EAX,DWORD PTR [RIP+.L_65de98]
            test EAX,EAX
            je .L_411281

            movsd XMM5,QWORD PTR [RIP+.L_65de58]
            movsd QWORD PTR [RSP+16],XMM5
.L_410dad:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM3,QWORD PTR [RIP+.L_4470e8]
            movapd XMM0,XMM5
            movsd QWORD PTR [RBX],XMM2
            subsd XMM3,XMM1
            movsd QWORD PTR [RBX+8],XMM1
            subsd XMM0,XMM1
            movapd XMM4,XMM3
            movapd XMM6,XMM0
            movsd QWORD PTR [RBX+16],XMM0
            mulsd XMM4,XMM1
            mulsd XMM6,XMM0
            mulsd XMM0,XMM2
            mulsd XMM2,XMM2
            movapd XMM7,XMM4
            movsd QWORD PTR [RBX+24],XMM4
            divsd XMM7,XMM6
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM2,XMM0
            pxor XMM6,XMM6
            mulsd XMM2,XMM0
            movsd QWORD PTR [RBX+32],XMM7
            movapd XMM7,XMM1
            ucomisd XMM4,XMM6
            divsd XMM7,XMM3
            movsd QWORD PTR [RBX+40],XMM7
            jp .L_4110ed

            jne .L_4110ed

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
.L_410e45:

            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM4,XMM5
            andpd XMM3,XMM1
            addsd XMM0,XMM2
            mulsd XMM1,XMM7
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RIP+.L_448f48]
            mulsd XMM0,XMM7
            subsd XMM4,XMM1
            movsd QWORD PTR [RBX+56],XMM0
            movapd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_448fa0]
            movapd XMM1,XMM4
            ucomisd XMM0,XMM3
            jbe .L_4110d6

            ucomisd XMM5,XMM4
            ja .L_41121f
.L_410e9a:

            mulsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_41142b
.L_410eac:

            divsd XMM2,XMM1
            lea R9,QWORD PTR [RIP+.L_448e60]
            mov EDI,1
            xor R8D,R8D
            mov ECX,5
            xor ESI,ESI
            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM0,QWORD PTR [RIP+.L_448fb8]
            movsd QWORD PTR [RBX+64],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_448fb0]
.L_410ee0:

            divsd XMM0,XMM2
            sub ECX,1
            lea R8D,DWORD PTR [RSI+R8*1+2]
            cmp ECX,-1
            movsd QWORD PTR [RBX+RDI*8+64],XMM0
            je .L_410f45

            cmp ECX,EDI
            movsxd RAX,R8D
            mov ESI,EDI
            lea RDX,QWORD PTR [R9+RAX*8]
            cmovl ESI,ECX
            test ESI,ESI
            lea RAX,QWORD PTR [RDX+8]
            movsd XMM0,QWORD PTR [RDX]
            je .L_410f32

            lea R10D,DWORD PTR [RSI-1]
            lea RDX,QWORD PTR [RDX+R10*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_410f20:

            mulsd XMM0,XMM1
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp RDX,RAX
            jne .L_410f20
.L_410f32:

            lea EAX,DWORD PTR [RSI+R8*1+1]
            add RDI,1
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_410ee0
.L_410f45:

            movsd XMM2,QWORD PTR [RIP+.L_448fb0]
            lea R10,QWORD PTR [RIP+.L_448ce0]
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            xor R9D,R9D
            xor EDI,EDI
            mov R11D,1
            mov EBP,5
.L_410f6c:

            movsxd RAX,R9D
            mov ESI,5
            xor EDX,EDX
            lea R8,QWORD PTR [RBX+RAX*8]
.L_410f7a:

            divsd XMM0,XMM2
            sub ESI,1
            add R9D,1
            cmp ESI,R11D
            lea EDI,DWORD PTR [RDX+RDI*1+2]
            movsd QWORD PTR [R8+120],XMM0
            jl .L_410fe0

            mov EDX,EBP
            movsxd RAX,EDI
            sub EDX,ESI
            lea RCX,QWORD PTR [R10+RAX*8]
            cmp EDX,ESI
            cmovg EDX,ESI
            movsd XMM0,QWORD PTR [RCX]
            lea R12D,DWORD PTR [RDX-1]
            lea RAX,QWORD PTR [RCX+8]
            lea RCX,QWORD PTR [RCX+R12*8+16]
.L_410fb5:

            mulsd XMM0,XMM1
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp RCX,RAX
            jne .L_410fb5

            lea EAX,DWORD PTR [RDX+RDI*1+1]
            add R8,8
            cdqe 
            movsd XMM2,QWORD PTR [R10+RAX*8]
            jmp .L_410f7a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410fe0:

            add R11D,1
            cmp R11D,6
            je .L_411003

            movsxd RAX,EDI
            movsd XMM0,QWORD PTR [R10+RAX*8]
            lea EAX,DWORD PTR [RDI+1]
            cdqe 
            movsd XMM2,QWORD PTR [R10+RAX*8]
            jmp .L_410f6c
.L_411003:

            movsd XMM2,QWORD PTR [RIP+.L_448fc0]
            lea R9,QWORD PTR [RIP+.L_448a60]
            movsd XMM0,QWORD PTR [RIP+.L_448fc8]
            xor EDI,EDI
            xor ESI,ESI
            xor R10D,R10D
            mov EBP,7
            mov R12D,5
            nop
            nop
            nop
            nop
.L_411030:

            movsxd RAX,EDI
            mov R8D,16
            mov ECX,5
            lea R11,QWORD PTR [RBX+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_411048:

            divsd XMM0,XMM2
            mov EAX,EBP
            add EDI,1
            sub EAX,ECX
            sub ECX,1
            add ESI,EAX
            cmp ECX,R10D
            movsd QWORD PTR [R11+R8*1+224],XMM0
            jl .L_4110a8

            movsxd RAX,ESI
            mov R13D,R12D
            lea RDX,QWORD PTR [R9+RAX*8]
            sub R13D,ECX
            lea RAX,QWORD PTR [RDX+8]
            movsd XMM0,QWORD PTR [RDX]
            add RDX,R8
            nop
.L_411080:

            mulsd XMM0,XMM1
            add RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_411080

            lea EAX,DWORD PTR [RSI+R13*1+1]
            add R8,8
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_411048
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4110a8:

            add R10D,1
            cmp R10D,6
            je .L_4110cb

            movsxd RAX,ESI
            movsd XMM0,QWORD PTR [R9+RAX*8]
            lea EAX,DWORD PTR [RSI+1]
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_411030
.L_4110cb:

            add RSP,120
.L_4110cf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4110d6:

            ucomisd XMM5,XMM4
            ja .L_41121b

            movsd XMM1,QWORD PTR [RIP+.L_448fa8]
            jmp .L_410eac
.L_4110ed:

            ucomisd XMM4,XMM6
            jbe .L_411188

            ucomisd XMM6,XMM4
            sqrtsd XMM7,XMM4
            movsd QWORD PTR [RSP+24],XMM7
            ja .L_41135d
.L_41110b:

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM7,XMM5
            movsd XMM0,QWORD PTR [RSP+24]
            andpd XMM0,XMM3
            movapd XMM1,XMM0
            subsd XMM7,XMM0
            addsd XMM1,XMM0
            divsd XMM1,XMM7
            movapd XMM0,XMM1
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            subsd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,XMM6
            jp .L_411228

            jne .L_411228
.L_411165:

            ucomisd XMM6,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd XMM4,QWORD PTR [RBX+24]
            mulsd XMM1,XMM7
            jbe .L_4111f3

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_4111f3
.L_411188:

            movapd XMM0,XMM4
            ucomisd XMM4,QWORD PTR [RIP+.L_448f70]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            sqrtsd XMM1,XMM0
            ja .L_41138f
.L_4111a6:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            call atan@PLT

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
.L_4111f3:

            andpd XMM4,XMM3
            movapd XMM0,XMM4
            sqrtsd XMM4,XMM4
            ucomisd XMM6,XMM0
            ja .L_4113ce
.L_411209:

            divsd XMM1,XMM4
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            jmp .L_410e45
.L_41121b:

            movapd XMM0,XMM3
.L_41121f:

            mulsd XMM0,XMM1
            jmp .L_410e9a
.L_411228:

            movsd XMM0,QWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+104]
            mulsd XMM1,XMM0
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            divsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_411165
.L_411281:

            mov RAX,QWORD PTR [RIP+.L_447a78]
            movsd QWORD PTR [RSP+24],XMM0
            mov DWORD PTR [RIP+.L_65de94],20
            movsd XMM0,QWORD PTR [RIP+.L_447a58]
            mov DWORD PTR [RIP+.L_65de90],83
            movsd QWORD PTR [RSP+32],XMM1
            mov QWORD PTR [RIP+.L_65de88],RAX
            mov RAX,QWORD PTR [RIP+.L_448fd0]
            sqrtsd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM3
            mov QWORD PTR [RIP+.L_65de70],RAX
            mov RAX,QWORD PTR [RIP+.L_448fd8]
            mov QWORD PTR [RIP+.L_65de68],RAX
            mov RAX,QWORD PTR [RIP+.L_448fe0]
            mov QWORD PTR [RIP+.L_65de60],RAX
            mov RAX,QWORD PTR [RIP+.L_448f98]
            mov QWORD PTR [RIP+.L_65de58],RAX
            mov RAX,QWORD PTR [RIP+.L_448fe8]
            mov QWORD PTR [RIP+.L_65de50],RAX
            mov RAX,QWORD PTR [RIP+.L_448ff0]
            mov QWORD PTR [RIP+.L_65de48],RAX
            mov RAX,QWORD PTR [RIP+.L_448708]
            mov QWORD PTR [RIP+.L_65de80],RAX
            call sqrt@PLT

            mov RAX,QWORD PTR [RIP+.L_448f98]
            movsd XMM3,QWORD PTR [RSP+8]
            mov DWORD PTR [RIP+.L_65de98],1
            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RIP+.L_65de78],XMM3
            mov QWORD PTR [RSP+16],RAX
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_410dad
.L_41135d:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_41110b
.L_41138f:

            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBX+24]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_4111a6
.L_4113ce:

            movaps XMMWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_411209
.L_41142b:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_410eac
.L_41144d:

            nop
            nop
            nop
.L_411450:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,64
.L_411461:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call fmod@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_448ef8]
            ucomisd XMM0,XMM2
            jb .L_411510

            addsd XMM2,QWORD PTR [RIP+.L_448720]
.L_4114a8:

            pxor XMM0,XMM0
            ucomisd XMM2,XMM0
            jp .L_411530

            jne .L_411530
.L_4114b4:

            lea RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM2
            call .L_40cc80

            movsd XMM4,QWORD PTR [RSP+48]
            mov EDX,R12D
            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,RBP
            movsd XMM2,QWORD PTR [RSP+24]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_40cf70

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41154a

            add RSP,64
.L_411509:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_411510:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM2
            jae .L_4114a8

            subsd XMM2,QWORD PTR [RIP+.L_448720]
            jmp .L_4114a8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411530:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            call .L_40cf00

            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_4114b4
.L_41154a:

            call __stack_chk_fail@PLT
.L_41154f:

            nop
.L_411550:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            xor EBX,EBX
            sub RSP,296
.L_411568:

            mov RSI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+128],RDX
            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,QWORD PTR [RSP+352]
            mov R12,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RSP+368]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+136],RCX
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RSI
            xor ESI,ESI
            test RDX,RDX
            mov QWORD PTR [RSP+144],R8
            mov QWORD PTR [RSP+152],R9
            setne BL
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+168],RDI
            shl EBX,7
            mov EDX,EBX
            or EDX,264
            test RCX,RCX
            cmovne EBX,EDX
            mov EDX,EBX
            or DH,2
            test R8,R8
            cmovne EBX,EDX
            mov EDX,EBX
            or EDX,1025
            test R9,R9
            cmovne EBX,EDX
            mov EDX,EBX
            or EDX,4101
            test RAX,RAX
            cmovne EBX,EDX
            test R12,R12
            jne .L_411de8

            test RDI,RDI
            jne .L_411de8
.L_411626:

            mov EDX,EBX
            mov EAX,EBP
            or EDX,16400
            cmp QWORD PTR [RSP+48],0
            cmovne EBX,EDX
            mov EDX,DWORD PTR [R13+504]
            and EBX,EDX
            and EAX,1
            mov DWORD PTR [RSP+44],EAX
            je .L_411c70

            movsd XMM0,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+272]
            lea RDI,QWORD PTR [RSP+264]
            movsd XMM3,QWORD PTR [RIP+.L_65de80]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+32],XMM3
            call .L_40cc80

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            pxor XMM2,XMM2
            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM4,QWORD PTR [RSP+272]
            movsd XMM7,QWORD PTR [RSP+264]
            movsd XMM5,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [R13+128]
            movsd XMM10,QWORD PTR [R13+112]
.L_4116b9:

            movapd XMM3,XMM4
            movapd XMM0,XMM8
            mulsd XMM4,XMM8
            mulsd XMM3,XMM5
            mulsd XMM0,XMM7
            mulsd XMM5,XMM7
            addsd XMM3,XMM0
            subsd XMM4,XMM5
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM1,XMM3
            mulsd XMM1,XMM10
            addsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM1
            sqrtsd XMM5,XMM1
            movsd QWORD PTR [RSP+184],XMM5
            ja .L_4124d4
.L_41170b:

            test BH,52
            movsd QWORD PTR [RSP+72],XMM2
            jne .L_411f80
.L_41171a:

            movsd XMM4,QWORD PTR [R13+104]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [R13+96]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+56],XMM0
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM5,XMM0
            ja .L_412506

            movapd XMM1,XMM4
.L_411754:

            ucomisd XMM5,XMM2
            jp .L_41176a

            jne .L_41176a

            movsd XMM5,QWORD PTR [RIP+.L_65de70]
            movsd QWORD PTR [RSP+8],XMM5
.L_41176a:

            mulsd XMM1,QWORD PTR [RSP+8]
            mov EAX,EBX
            movsd QWORD PTR [RSP+64],XMM2
            and EAX,1024
            mov DWORD PTR [RSP+88],EAX
            movsd QWORD PTR [RSP+176],XMM1
            je .L_4117c7

            mov EDI,DWORD PTR [RSP+44]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+64],XMM6
            test EDI,EDI
            je .L_4117c7

            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+72]
            mulsd XMM0,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+64],XMM0
.L_4117c7:

            mov EAX,EBX
            movsd QWORD PTR [RSP+80],XMM2
            and EAX,256
            mov DWORD PTR [RSP+96],EAX
            je .L_411a40

            movsd XMM7,QWORD PTR [RSP+56]
            ucomisd XMM2,XMM7
            ja .L_412420

            ucomisd XMM7,XMM2
            jp .L_4117fa

            je .L_412290
.L_4117fa:

            movsd XMM6,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+80],XMM6
.L_411806:

            movsd XMM6,QWORD PTR [RSP+56]
            and EBP,32768
            lea R14,QWORD PTR [R13+408]
            movsd XMM7,QWORD PTR [RIP+.L_65de80]
            mulsd XMM6,XMM3
            movsd QWORD PTR [RSP+104],XMM7
            jne .L_4122b8

            movsd XMM7,QWORD PTR [R13+160]
            movsd QWORD PTR [RSP+192],XMM2
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM7
            movsd XMM0,QWORD PTR [R13+168]
            movapd XMM8,XMM2
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP+120],XMM5
            mulsd XMM7,XMM2
            movsd QWORD PTR [RSP+112],XMM4
            mulsd XMM8,XMM0
            movsd QWORD PTR [RSP+80],XMM3
            mulsd XMM0,XMM6
            addsd XMM1,XMM8
            subsd XMM0,XMM7
            call atan2@PLT

            movsd XMM3,QWORD PTR [R13+192]
            mov EDX,5
            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R14
            movsd QWORD PTR [RSP+208],XMM3
            mov EDI,1
            movsd XMM3,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+200],XMM0
            movapd XMM0,XMM3
            call .L_40c530

            movsd XMM2,QWORD PTR [R13+216]
            movsd QWORD PTR [RSP+216],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            movsd XMM0,QWORD PTR [R13+8]
            movsd QWORD PTR [RSP+224],XMM2
            call fmod@PLT

            movsd XMM2,QWORD PTR [RIP+.L_448ef8]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RSP+80]
            ucomisd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RSP+192]
            jb .L_412490

            addsd XMM6,QWORD PTR [RIP+.L_448720]
.L_411930:

            movsd XMM0,QWORD PTR [RSP+216]
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            subsd XMM0,QWORD PTR [RSP+224]
            movsd QWORD PTR [RSP+232],XMM2
            movsd QWORD PTR [RSP+192],XMM6
            movsd QWORD PTR [RSP+120],XMM3
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+80],XMM4
            addsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+208]
            addsd XMM0,QWORD PTR [RSP+200]
            divsd XMM0,QWORD PTR [RSP+104]
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_448ef8]
            movsd XMM4,QWORD PTR [RSP+80]
            ucomisd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+120]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RSP+192]
            movsd XMM2,QWORD PTR [RSP+232]
            jb .L_412468

            addsd XMM0,QWORD PTR [RIP+.L_448720]
.L_4119cf:

            addsd XMM0,XMM6
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+120],XMM3
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+104],XMM4
            call fmod@PLT

            movsd XMM3,QWORD PTR [RIP+.L_448ef8]
            movsd QWORD PTR [RSP+80],XMM0
            ucomisd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RSP+192]
            jb .L_412438

            movsd XMM7,QWORD PTR [RIP+.L_448720]
            addsd XMM7,XMM0
            movsd QWORD PTR [RSP+80],XMM7
.L_411a40:

            mov R15D,EBX
            movsd QWORD PTR [RSP+112],XMM2
            and R15D,128
            jne .L_411ff8
.L_411a56:

            mov EAX,EBX
            movsd QWORD PTR [RSP+120],XMM2
            and EAX,512
            mov DWORD PTR [RSP+104],EAX
            jne .L_412038
.L_411a6d:

            mov EBP,EBX
            mov R14D,EBX
            movsd QWORD PTR [RSP+200],XMM2
            and EBP,4096
            and R14D,8192
            test BH,48
            jne .L_411df8

            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+72],XMM2
.L_411aa0:

            and EBX,16384
            pxor XMM0,XMM0
            movsd QWORD PTR [RSP+184],XMM2
            je .L_411b6d

            movapd XMM0,XMM3
            lea RSI,QWORD PTR [R13+456]
            xor EDI,EDI
            movsd XMM1,QWORD PTR [RSP+8]
            mov EDX,6
            call .L_40c530

            movsd XMM4,QWORD PTR [R13+104]
            movsd XMM2,QWORD PTR [RSP+184]
            movapd XMM3,XMM0
            ucomisd XMM4,XMM2
            jp .L_4120c8

            jne .L_4120c8
.L_411af9:

            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM1,QWORD PTR [R13+48]
            movapd XMM0,XMM6
            movsd XMM2,QWORD PTR [R13+40]
            movapd XMM4,XMM5
            mulsd XMM0,XMM1
            mulsd XMM1,XMM5
            mulsd XMM4,XMM2
            mulsd XMM2,XMM6
            subsd XMM0,XMM4
            addsd XMM1,XMM2
.L_411b34:

            movsd XMM2,QWORD PTR [R13+80]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+8]
            subsd XMM3,QWORD PTR [R13+232]
            mulsd XMM3,QWORD PTR [R13+224]
            addsd XMM0,XMM3
.L_411b6d:

            test R15D,R15D
            je .L_411b84

            mov RAX,QWORD PTR [RSP+128]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd QWORD PTR [RAX],XMM3
.L_411b84:

            mov ESI,DWORD PTR [RSP+96]
            test ESI,ESI
            je .L_411b9e

            mov RAX,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RAX],XMM5
.L_411b9e:

            mov ECX,DWORD PTR [RSP+104]
            test ECX,ECX
            je .L_411bb8

            mov RAX,QWORD PTR [RSP+144]
            movsd XMM3,QWORD PTR [RSP+120]
            movsd QWORD PTR [RAX],XMM3
.L_411bb8:

            mov EDX,DWORD PTR [RSP+88]
            test EDX,EDX
            je .L_411bd2

            mov RAX,QWORD PTR [RSP+152]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd QWORD PTR [RAX],XMM5
.L_411bd2:

            test EBP,EBP
            je .L_411be8

            mov RAX,QWORD PTR [RSP+160]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd QWORD PTR [RAX],XMM6
.L_411be8:

            test R14D,R14D
            je .L_411c1b

            test R12,R12
            je .L_411c01

            movsd XMM3,QWORD PTR [RSP+192]
            movsd QWORD PTR [R12],XMM3
.L_411c01:

            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_411c1b

            movsd XMM3,QWORD PTR [RSP+200]
            movsd QWORD PTR [RAX],XMM3
.L_411c1b:

            test EBX,EBX
            je .L_411c28

            mov RAX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RAX],XMM0
.L_411c28:

            mov EAX,DWORD PTR [RSP+44]
            movsd XMM0,QWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_411c44

            movsd XMM0,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RIP+.L_65de80]
.L_411c44:

            mov RAX,QWORD PTR [RSP+280]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4125a6

            add RSP,296
.L_411c62:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411c70:

            and DH,8
            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            je .L_411c44

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            lea R14,QWORD PTR [RSP+248]
            lea R15,QWORD PTR [RSP+240]
            movsd XMM7,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+24],XMM6
            addsd XMM6,QWORD PTR [R13+176]
            mov RSI,R15
            movsd QWORD PTR [RSP+64],XMM7
            mov RDI,R14
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM7,XMM6
            movsd QWORD PTR [RSP+72],XMM6
            divsd XMM4,XMM7
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [R13+152]
            lea RSI,QWORD PTR [R13+296]
            movsd XMM2,QWORD PTR [R13+144]
            mov EDX,6
            movsd XMM5,QWORD PTR [RSP+240]
            mov EDI,1
            movsd XMM0,QWORD PTR [RSP+248]
            movapd XMM1,XMM3
            movapd XMM6,XMM2
            mulsd XMM2,XMM5
            mulsd XMM6,XMM0
            mulsd XMM1,XMM5
            mulsd XMM0,XMM3
            subsd XMM1,XMM6
            addsd XMM0,XMM2
            call .L_40c530

            movapd XMM6,XMM0
            mov RSI,R15
            movsd XMM5,QWORD PTR [R13+200]
            mov RDI,R14
            xorpd XMM6,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+80],XMM5
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+56],XMM6
            subsd XMM0,XMM5
            subsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [R13+32]
            movsd XMM1,QWORD PTR [RSP+240]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+272],XMM1
            movsd XMM7,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [R13+120]
            movsd QWORD PTR [RSP+264],XMM7
            ucomisd XMM0,QWORD PTR [RIP+.L_448ff8]
            movsd XMM8,QWORD PTR [R13+128]
            ja .L_412150

            movsd XMM10,QWORD PTR [R13+112]
            pxor XMM2,XMM2
            movsd XMM6,QWORD PTR [RSP+56]
            jmp .L_4116b9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411de8:

            or EBX,8197
            jmp .L_411626
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411df8:

            movsd XMM7,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R13+352]
            movapd XMM0,XMM3
            mov EDX,6
            movapd XMM1,XMM7
            mov EDI,1
            movsd QWORD PTR [RSP+192],XMM3
            call .L_40c530

            movsd XMM4,QWORD PTR [R13+184]
            test EBP,EBP
            subsd XMM0,QWORD PTR [R13+208]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+72]
            addsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+72],XMM2
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [R13+176]
            subsd XMM1,XMM4
            subsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+192]
            addsd XMM0,XMM1
            je .L_411ecf

            movsd XMM4,QWORD PTR [R13+128]
            movsd XMM5,QWORD PTR [R13+120]
            movapd XMM1,XMM4
            mulsd XMM4,XMM7
            mulsd XMM5,XMM7
            mulsd XMM1,XMM3
            mulsd XMM4,XMM0
            mulsd XMM5,QWORD PTR [R13+136]
            mulsd XMM1,QWORD PTR [RSP+184]
            subsd XMM1,XMM5
            subsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+72],XMM1
.L_411ecf:

            test R14D,R14D
            je .L_412080

            movsd XMM1,QWORD PTR [R13+120]
            movapd XMM4,XMM3
            movsd XMM12,QWORD PTR [RSP+184]
            subsd XMM4,XMM1
            movapd XMM5,XMM1
            movsd XMM7,QWORD PTR [R13+136]
            addsd XMM5,XMM3
            movapd XMM6,XMM3
            movsd XMM8,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [R13+112]
            mulsd XMM8,XMM0
            mulsd XMM0,QWORD PTR [R13+128]
            mulsd XMM4,XMM5
            movapd XMM5,XMM12
            addsd XMM5,XMM7
            divsd XMM4,XMM5
            movsd XMM5,QWORD PTR [RSP+272]
            mulsd XMM6,XMM4
            subsd XMM6,XMM8
            mulsd XMM6,XMM1
            mulsd XMM1,XMM4
            divsd XMM6,XMM7
            subsd XMM1,XMM0
            mulsd XMM1,XMM3
            addsd XMM6,XMM5
            divsd XMM1,XMM12
            movsd QWORD PTR [RSP+192],XMM6
            subsd XMM5,XMM1
            movsd QWORD PTR [RSP+200],XMM5
            jmp .L_411aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411f80:

            mov R8D,DWORD PTR [RSP+44]
            test R8D,R8D
            je .L_4120a0
.L_411f8e:

            movapd XMM0,XMM3
            lea RSI,QWORD PTR [R13+240]
            mov EDX,6
            movsd XMM1,QWORD PTR [RSP+8]
            mov EDI,1
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM3
            call .L_40c530

            movsd XMM2,QWORD PTR [RSP+64]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RSP+56]
.L_411fca:

            movsd XMM0,QWORD PTR [RSP+24]
            subsd XMM6,QWORD PTR [R13+200]
            addsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+72],XMM0
            jmp .L_41171a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ff8:

            mulsd XMM5,QWORD PTR [R13+88]
            movsd QWORD PTR [RSP+120],XMM2
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+104],XMM3
            movapd XMM0,XMM4
            movapd XMM1,XMM5
            call .L_40cdf0

            movsd XMM2,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+112],XMM0
            movsd XMM3,QWORD PTR [RSP+104]
            jmp .L_411a56
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412038:

            movsd XMM1,QWORD PTR [RSP+176]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+200],XMM2
            movsd QWORD PTR [RSP+192],XMM3
            call .L_40cdf0

            movsd XMM2,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM3,QWORD PTR [RSP+192]
            jmp .L_411a6d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412080:

            movsd QWORD PTR [RSP+200],XMM2
            movsd QWORD PTR [RSP+192],XMM2
            jmp .L_411aa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4120a0:

            movsd XMM0,QWORD PTR [R13+32]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_448ff8]
            jbe .L_411fca

            jmp .L_411f8e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4120c8:

            movsd XMM5,QWORD PTR [R13+96]
            ucomisd XMM5,XMM2
            jp .L_4120da

            je .L_411af9
.L_4120da:

            movsd XMM6,QWORD PTR [RSP+272]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [R13+128]
            ucomisd XMM2,XMM6
            mulsd XMM0,XMM5
            movsd XMM7,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [RSP+264]
            jae .L_4124b0

            movapd XMM2,XMM1
            addsd XMM6,QWORD PTR [RSP+24]
            mulsd XMM2,XMM8
            divsd XMM2,XMM6
            addsd XMM2,XMM7
            mulsd XMM2,XMM8
.L_41212a:

            mulsd XMM4,XMM4
            mulsd XMM5,XMM5
            mulsd XMM0,XMM2
            mulsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            addsd XMM1,XMM5
            jmp .L_411b34
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412150:

            movapd XMM9,XMM1
            mulsd XMM1,XMM8
            movapd XMM0,XMM7
            mulsd XMM7,XMM5
            mulsd XMM9,XMM5
            lea RSI,QWORD PTR [R13+240]
            mov EDX,6
            mulsd XMM0,XMM8
            mov EDI,1
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+8],XMM5
            subsd XMM1,XMM7
            addsd XMM9,XMM0
            movapd XMM0,XMM9
            call .L_40c530

            movapd XMM1,XMM0
            mulsd XMM9,XMM9
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [R13+112]
            divsd XMM0,QWORD PTR [RSP+64]
            addsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM9,XMM10
            pxor XMM2,XMM2
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM9,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+56]
            subsd XMM1,XMM0
            ucomisd XMM2,XMM9
            sqrtsd XMM3,XMM9
            ja .L_412552
.L_4121ff:

            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+80],XMM2
            mov RSI,R15
            mov RDI,R14
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM2,QWORD PTR [RSP+32]
            subsd XMM2,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+248]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd QWORD PTR [RSP+264],XMM7
            movsd QWORD PTR [RSP+272],XMM4
            movsd XMM2,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4116b9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412290:

            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM7
            ucomisd XMM2,XMM0
            ja .L_412420

            movsd XMM7,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+80],XMM7
            jmp .L_411806
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4122b8:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+224],XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+208],XMM4
            movsd QWORD PTR [RSP+200],XMM3
            movsd QWORD PTR [RSP+216],XMM5
            movsd QWORD PTR [RSP+120],XMM6
            call atan2@PLT

            movsd XMM1,QWORD PTR [R13+128]
            movsd QWORD PTR [RSP+192],XMM0
            movsd XMM0,QWORD PTR [R13+120]
            call atan2@PLT

            movsd XMM6,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+112],XMM0
            mulsd XMM6,QWORD PTR [RSP+80]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+120],XMM0
            mulsd XMM5,QWORD PTR [R13+160]
            movsd XMM1,QWORD PTR [R13+168]
            movapd XMM0,XMM5
            call atan2@PLT

            movsd XMM8,QWORD PTR [RSP+192]
            mov EDX,5
            movsd XMM11,QWORD PTR [RSP+32]
            mov RSI,R14
            subsd XMM8,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [RSP+120]
            movapd XMM3,XMM11
            mov EDI,1
            subsd XMM7,XMM0
            subsd XMM3,XMM8
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSP+200]
            addsd XMM1,XMM7
            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+112],XMM3
            mulsd XMM7,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_40c530

            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+112]
            subsd XMM1,QWORD PTR [R13+216]
            movsd XMM4,QWORD PTR [RSP+208]
            movsd XMM5,QWORD PTR [RSP+216]
            movsd XMM2,QWORD PTR [RSP+224]
            addsd XMM1,XMM11
            mulsd XMM1,QWORD PTR [R13+192]
            addsd XMM1,XMM7
            divsd XMM1,QWORD PTR [RSP+104]
            addsd XMM1,QWORD PTR [R13+8]
            movsd QWORD PTR [RSP+80],XMM1
            jmp .L_411a40
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412420:

            movsd XMM7,QWORD PTR [RIP+.L_447a58]
            movsd QWORD PTR [RSP+80],XMM7
            jmp .L_411806
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412438:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            movsd XMM6,QWORD PTR [RSP+80]
            ucomisd XMM0,XMM6
            jae .L_411a40

            subsd XMM6,QWORD PTR [RIP+.L_448720]
            movsd QWORD PTR [RSP+80],XMM6
            jmp .L_411a40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412468:

            movsd XMM1,QWORD PTR [RIP+.L_448738]
            ucomisd XMM1,XMM0
            jae .L_4119cf

            subsd XMM0,QWORD PTR [RIP+.L_448720]
            jmp .L_4119cf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412490:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM6
            jae .L_411930

            subsd XMM6,QWORD PTR [RIP+.L_448720]
            jmp .L_411930
          .byte 0x90
.L_4124b0:

            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM2,XMM6
            movapd XMM6,XMM2
            movapd XMM2,XMM7
            mulsd XMM6,XMM1
            mulsd XMM2,XMM8
            addsd XMM2,XMM6
            jmp .L_41212a
.L_4124d4:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM6
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            jmp .L_41170b
.L_412506:

            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+64],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [R13+96]
            movsd XMM1,QWORD PTR [R13+104]
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+96]
            jmp .L_411754
.L_412552:

            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [R13+128]
            movsd XMM10,QWORD PTR [R13+112]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4121ff
.L_4125a6:

            call __stack_chk_fail@PLT
.L_4125ab:

            nop
            nop
            nop
            nop
            nop
.L_4125b0:

            sub RSP,8
            lea R9,QWORD PTR [RDI+64]
            movsd QWORD PTR [RDI+56],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_65de78]
            push 0
            push 0
            xor R8D,R8D
            xor ECX,ECX
            push 0
            movsd QWORD PTR [RDI+64],XMM1
            push 0
            xor EDX,EDX
            mov ESI,1
            call .L_411550

            add RSP,40
            ret 
.L_4125e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4125f0:

            push RBX
            movsd QWORD PTR [RDI+64],XMM0
            push 0
            push 0
            push 0
            xor R9D,R9D
            push 0
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            call .L_411550

            add RSP,32
            movsd QWORD PTR [RBX+56],XMM0
            pop RBX
            ret 
.L_41261d:

            nop
            nop
            nop
.L_412620:

            and ESI,1
            jne .L_412630

            jmp .L_4125f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412630:

            jmp .L_4125b0
.L_412635:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412640:

            push RBP
            push RBX
            mov EBP,EDX
            mov EDX,ECX
            mov RBX,RDI
            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM3
            call .L_411450

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,24
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            movapd XMM0,XMM3
            jmp .L_412620
.L_41266f:

            nop
.L_412670:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM3
            call .L_411450

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,16
            mov RDI,RBX
            xor ESI,ESI
            pop RBX
            movapd XMM0,XMM3
            jmp .L_412620
.L_412699:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126a0:

            sub RSP,8
            mov R8,RCX
            xor R9D,R9D
            push 0
            push 0
            mov RCX,RDX
            push 0
            push 0
            mov RDX,RSI
            xor ESI,ESI
            call .L_411550

            add RSP,40
            ret 
.L_4126c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126d0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13,RCX
            mov EBP,ESI
            sub RSP,584
.L_4126e9:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+568],RBX
            xor EBX,EBX
            test RDX,RDX
            mov R14,QWORD PTR [RSP+640]
            mov R15,QWORD PTR [RSP+648]
            setne DL
            mov RCX,QWORD PTR [RSP+656]
            mov RAX,QWORD PTR [RSP+664]
            movzx EDX,DL
            shl EDX,7
            mov ESI,EDX
            or ESI,264
            test R13,R13
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,512
            test R8,R8
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,1025
            test R9,R9
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,4101
            test R14,R14
            cmovne EDX,ESI
            test R15,R15
            jne .L_412820

            test RCX,RCX
            jne .L_412820
.L_412772:

            mov ESI,EDX
            lea RBX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+40],RCX
            or ESI,16400
            test RAX,RAX
            mov QWORD PTR [RSP+32],R9
            cmovne EDX,ESI
            mov QWORD PTR [RSP+24],R8
            movsd QWORD PTR [RSP+16],XMM3
            mov ESI,EDX
            mov QWORD PTR [RSP+8],RAX
            or ESI,2051
            test BPL,1
            cmove EDX,ESI
            mov RSI,RDI
            mov RDI,RBX
            call .L_411450

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,R12
            mov ESI,EBP
            mov RDI,RBX
            push RAX
.L_4127c7:

            mov RCX,QWORD PTR [RSP+48]
            push RCX
            push R15
            mov RCX,R13
            push R14
            mov R9,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM3
            call .L_411550

            add RSP,32
            mov RAX,QWORD PTR [RSP+568]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41282b

            add RSP,584
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412820:

            or EDX,8197
            jmp .L_412772
.L_41282b:

            call __stack_chk_fail@PLT
.L_412830:

            sub RSP,8
            mov R8,RCX
            xor R9D,R9D
            push 0
            push 0
            mov RCX,RDX
            push 0
            push 0
            mov RDX,RSI
            xor ESI,ESI
            call .L_4126d0

            add RSP,40
            ret 
.L_412854:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412860:

            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RCX
            sub RSP,72
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+24]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push R9
            push R8
            lea R9,QWORD PTR [RSP+80]
            lea R8,QWORD PTR [RSP+72]
            call .L_40da60

            movsd QWORD PTR [RSP+40],XMM0
            add RSP,32
.L_4128ab:

            test RBP,RBP
            je .L_4128c6

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40cdf0

            movsd QWORD PTR [RBP],XMM0
.L_4128c6:

            test RBX,RBX
            je .L_4128e0

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+40]
            call .L_40cdf0

            movsd QWORD PTR [RBX],XMM0
.L_4128e0:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM0,QWORD PTR [RSP+8]
            jne .L_4128fd

            add RSP,72
.L_4128fa:

            pop RBX
            pop RBP
            ret 
.L_4128fd:

            call __stack_chk_fail@PLT
.L_412902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412910:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBX,EDX
            xor R9D,R9D
            xor R8D,R8D
            xor ESI,ESI
            mov RBP,RDI
            sub RSP,64
            mov RDI,R12
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+40]
            push 0
            push 0
            push 0
            push 0
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM0
            call .L_40da60

            movsd QWORD PTR [RSP+40],XMM0
            add RSP,32
.L_412968:

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+40]
            call .L_40cdf0

            test EBX,EBX
            movapd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            je .L_4129e8

            mov EAX,EBX
            or EAX,1025
            test BH,8
            cmovne EBX,EAX
.L_41299a:

            movapd XMM0,XMM5
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            mov EDX,EBX
            movapd XMM1,XMM6
            mov RSI,R12
            mov RDI,RBP
            call .L_40cf70

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_4125b0

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4129ef

            add RSP,64
.L_4129dd:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4129e8:

            mov EBX,3339
            jmp .L_41299a
.L_4129ef:

            call __stack_chk_fail@PLT
.L_4129f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412a00:

            sub RSP,8
            xor R9D,R9D
            xor R8D,R8D
            push 0
            push 0
            call .L_412860

            add RSP,24
            ret 
.L_412a18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412a20:

            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+48],0
            setne AL
            movsd QWORD PTR [RDI+8],XMM0
            mov QWORD PTR [RDI+40],0
            mov DWORD PTR [RDI+64],EAX
            movsd QWORD PTR [RDI],XMM0
            mov QWORD PTR [RDI+32],0
            movsd QWORD PTR [RDI+24],XMM0
            mov QWORD PTR [RDI+68],0
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_412a6e:

            nop
            nop
.L_412a70:

            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],0
            movsd QWORD PTR [RDI+8],XMM0
            mov QWORD PTR [RDI+32],0
            mov QWORD PTR [RDI+68],0
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+24],XMM0
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_412ab4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ac0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,88
.L_412acc:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448720]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call fmod@PLT

            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_448ef8]
            ucomisd XMM0,XMM4
            jb .L_412bc8

            addsd XMM4,QWORD PTR [RIP+.L_448720]
.L_412b10:

            mov EAX,DWORD PTR [RBX+72]
            test EAX,EAX
            je .L_412bed
.L_412b1b:

            mov EDX,DWORD PTR [RBX+64]
            xor EAX,EAX
            mov QWORD PTR [RSP+32],0
            test EDX,EDX
            jne .L_412b32

            lea RAX,QWORD PTR [RSP+32]
.L_412b32:

            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+24]
            push RAX
.L_412b42:

            push 0
            mov RDI,RBP
            push 0
            push 0
            movapd XMM3,XMM4
            movsd XMM1,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RSP+96]
            lea R8,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+40],XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX]
            call .L_40da60

            add RSP,32
.L_412b77:

            lea RDI,QWORD PTR [RBX+48]
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40c830

            mov EAX,DWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RSP+8]
            test EAX,EAX
            je .L_412c10
.L_412b93:

            movsd XMM6,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RBX+72]
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX],XMM6
.L_412ba4:

            add EAX,1
            mov DWORD PTR [RBX+72],EAX
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_412c41

            add RSP,88
.L_412bc2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412bc8:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM4
            jae .L_412b10

            mov EAX,DWORD PTR [RBX+72]
            subsd XMM4,QWORD PTR [RIP+.L_448720]
            test EAX,EAX
            jne .L_412b1b
.L_412bed:

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX],XMM5
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+24],XMM4
            jmp .L_412ba4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412c10:

            lea RDI,QWORD PTR [RBX+32]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_40c830

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RBX+8]
            movapd XMM1,XMM4
            call .L_40cab0

            movsd XMM4,QWORD PTR [RSP+8]
            add DWORD PTR [RBX+68],EAX
            jmp .L_412b93
.L_412c41:

            call __stack_chk_fail@PLT
.L_412c46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c50:

            push RBX
            sub RSP,48
.L_412c55:

            mov R8D,DWORD PTR [RSI+72]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test R8D,R8D
            je .L_412d00

            mov EDX,DWORD PTR [RSI+64]
            lea RAX,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+32],0
            mov RBX,RSI
            mov ESI,32768
            movapd XMM3,XMM1
            test EDX,EDX
            mov EDX,0
            cmovne RAX,RDX
            lea RDX,QWORD PTR [RSP+16]
            xor R9D,R9D
            push RAX
.L_412ca8:

            push 0
            xor R8D,R8D
            push 0
            push 0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+40],XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            call .L_4126d0

            add RSP,32
.L_412ccd:

            movsd XMM4,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+48]
            movapd XMM0,XMM4
            call .L_40c830

            mov ECX,DWORD PTR [RBX+64]
            test ECX,ECX
            je .L_412d20
.L_412ce7:

            movsd XMM0,QWORD PTR [RSP+16]
            add DWORD PTR [RBX+72],1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX+8],XMM0
.L_412d00:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_412d44

            add RSP,48
.L_412d14:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d20:

            lea RDI,QWORD PTR [RBX+32]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_40c830

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RBX+8]
            call .L_40cbe0

            add DWORD PTR [RBX+68],EAX
            jmp .L_412ce7
.L_412d44:

            call __stack_chk_fail@PLT
.L_412d49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d50:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,R8
            sub RSP,104
.L_412d67:

            mov EDX,DWORD PTR [RSI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            cmp EAX,1
            jbe .L_412f30

            test EDX,EDX
            mov RBX,RSI
            je .L_412dc0

            test R9,R9
            je .L_412d9c

            movsd XMM0,QWORD PTR [RSI+48]
            movsd QWORD PTR [R9],XMM0
.L_412d9c:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_412fba

            add RSP,104
.L_412db4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_412dc0:

            lea RAX,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RSP+16]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+40]
            mov R15,RDI
            push RAX
            push 0
            push 0
            push 0
            movsd XMM3,QWORD PTR [RBX+24]
            lea R9,QWORD PTR [RSP+88]
            lea R8,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RBX]
            call .L_40da60

            add RSP,32
            test R14,R14
            lea RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RDI
            je .L_412e41

            movsd XMM0,QWORD PTR [RBX+48]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RBX+56]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            call .L_40c830

            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [R14],XMM0
.L_412e41:

            movsd XMM0,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40c830

            movsd XMM1,QWORD PTR [RBX+24]
            mov R14D,DWORD PTR [RBX+68]
            movsd XMM0,QWORD PTR [RBX+8]
            call .L_40cab0

            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            add R14D,EAX
            and R14D,1
            mulsd XMM1,QWORD PTR [RIP+.L_65de88]
            mulsd XMM1,QWORD PTR [R15+56]
            je .L_412ecd

            pxor XMM2,XMM2
            movapd XMM0,XMM1
            ucomisd XMM2,QWORD PTR [RSP+64]
            ja .L_412eb0

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
.L_412eb0:

            mov RDI,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call .L_40c830

            movsd XMM1,QWORD PTR [RSP+8]
.L_412ecd:

            test R13D,R13D
            movsd XMM2,QWORD PTR [RSP+64]
            jne .L_412efa

            movq XMM3,QWORD PTR [RIP+.L_447ae0]
            movsd XMM0,QWORD PTR [RSP+72]
            xorpd XMM2,XMM3
            xorpd XMM0,XMM3
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+72],XMM0
.L_412efa:

            test R12D,R12D
            jne .L_412f60

            ucomisd XMM2,XMM1
            jae .L_412fa0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_412f8c
.L_412f13:

            test RBP,RBP
            je .L_412f27

            pxor XMM0,XMM0
            addsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBP],XMM0
.L_412f27:

            mov EAX,DWORD PTR [RBX+72]
            jmp .L_412d9c
          .byte 0x90
.L_412f30:

            test R9,R9
            je .L_412f3c

            mov QWORD PTR [R9],0
.L_412f3c:

            test EDX,EDX
            jne .L_412d9c

            test RBP,RBP
            je .L_412d9c

            mov QWORD PTR [RBP],0
            jmp .L_412d9c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412f60:

            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movapd XMM4,XMM1
            movapd XMM0,XMM1
            mulsd XMM4,XMM3
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            ucomisd XMM2,XMM4
            ja .L_412f90

            mulsd XMM0,XMM3
            ucomisd XMM0,XMM2
            jb .L_412f13
.L_412f8c:

            movapd XMM0,XMM1
.L_412f90:

            mov RDI,QWORD PTR [RSP]
            call .L_40c830

            jmp .L_412f13
          .byte 0x66
          .byte 0x90
.L_412fa0:

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            mov RDI,QWORD PTR [RSP]
            movapd XMM0,XMM1
            call .L_40c830

            jmp .L_412f13
.L_412fba:

            call __stack_chk_fail@PLT
.L_412fbf:

            nop
.L_412fc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_412fd1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            mov DWORD PTR [RSP+76],ECX
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            mov DWORD PTR [RSP+72],EDX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+48],R9
            add EAX,1
            mov ECX,EAX
            mov DWORD PTR [RSP+60],EAX
            mov EAX,DWORD PTR [RSI+64]
            cmp ECX,1
            je .L_4131d0

            pxor XMM7,XMM7
            test EAX,EAX
            mov RBX,RDI
            movsd XMM6,QWORD PTR [RSI+48]
            mov R12,RSI
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            je .L_4131c0
.L_41303c:

            lea RDI,QWORD PTR [RSP+96]
            mov EBP,DWORD PTR [R12+68]
            xor R15D,R15D
            lea R14,QWORD PTR [RSP+128]
            lea R13,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],RDI
            lea RDI,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_41310f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413070:

            test R15D,R15D
            jne .L_4132e0

            mov QWORD PTR [RSP+96],0
            xor EAX,EAX
.L_413084:

            lea RDX,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+88]
            push RAX
.L_41308f:

            push 0
            push 0
            mov R9,R14
            push 0
.L_413098:

            mov RCX,QWORD PTR [RSP+64]
            mov R8,R13
            movsd XMM1,QWORD PTR [R12+8]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [R12]
            call .L_40da60

            movsd XMM5,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R12+64]
            addsd XMM5,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+32],XMM5
            add RSP,32
.L_4130dc:

            test EAX,EAX
            jne .L_41310b

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [R12+8]
            addsd XMM6,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM6
.L_4130ff:

            call .L_40cab0

            add EBP,EAX
            mov EAX,DWORD PTR [R12+64]
.L_41310b:

            add R15D,1
.L_41310f:

            test EAX,EAX
            jne .L_413070

            cmp R15D,2
            je .L_413228

            test R15D,R15D
            mov QWORD PTR [RSP+96],0
            je .L_41339c

            lea RDX,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+88]
            push QWORD PTR [RSP+40]
.L_413141:

            push 0
            push 0
            mov R9,R14
            push 0
.L_41314a:

            mov RCX,QWORD PTR [RSP+64]
            mov R8,R13
            movsd XMM3,QWORD PTR [R12+24]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [R12+16]
            call .L_40da60

            movsd XMM4,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R12+64]
            addsd XMM4,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
.L_41318f:

            test EAX,EAX
            jne .L_41310b

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [R12+24]
            addsd XMM7,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_4130ff
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4131c0:

            movsd XMM3,QWORD PTR [RSI+32]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_41303c
.L_4131d0:

            test R9,R9
            je .L_4131dc

            mov QWORD PTR [R9],0
.L_4131dc:

            mov RBX,QWORD PTR [RSP+64]
            test RBX,RBX
            je .L_4131f8

            test EAX,EAX
            jne .L_4131f8

            mov QWORD PTR [RBX],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4131f8:

            mov RBX,QWORD PTR [RSP+136]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+60]
            jne .L_413397

            add RSP,152
.L_41321a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413228:

            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            jne .L_413330
.L_413236:

            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            and EBP,1
            mulsd XMM0,QWORD PTR [RIP+.L_65de88]
            mulsd XMM0,QWORD PTR [RBX+56]
            je .L_41327c

            pxor XMM2,XMM2
            movapd XMM1,XMM0
            ucomisd XMM2,QWORD PTR [RSP+8]
            ja .L_413268

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_413268:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            addsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM1
.L_41327c:

            mov EDX,DWORD PTR [RSP+72]
            test EDX,EDX
            jne .L_413298

            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM7,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+8],XMM7
.L_413298:

            mov EAX,DWORD PTR [RSP+76]
            test EAX,EAX
            jne .L_413300

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jb .L_413340

            subsd XMM7,XMM0
            movsd QWORD PTR [RSP+8],XMM7
.L_4132ba:

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_4131f8

            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_448740]
            movsd QWORD PTR [RAX],XMM0
            jmp .L_4131f8
          .byte 0x90
.L_4132e0:

            cmp QWORD PTR [RSP+48],0
            je .L_4131f8

            mov RAX,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM6
            jmp .L_4131f8
          .byte 0x90
.L_413300:

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM1
            ucomisd XMM3,XMM2
            jbe .L_413368

            subsd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_4132ba
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413330:

            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM2
            jmp .L_413236
          .byte 0x66
          .byte 0x90
.L_413340:

            pxor XMM1,XMM1
            ucomisd XMM1,QWORD PTR [RSP+8]
            jbe .L_4132ba

            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_4132ba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413368:

            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            mulsd XMM1,XMM2
            ucomisd XMM1,XMM3
            jb .L_4132ba

            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_4132ba
.L_413397:

            call __stack_chk_fail@PLT
.L_41339c:

            mov RAX,QWORD PTR [RSP+40]
            jmp .L_413084
.L_4133a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4133b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,R8
            push RBP
            push RBX
            mov R12,R9
            sub RSP,120
.L_4133c4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            lea EBP,DWORD PTR [RAX+1]
            mov EAX,DWORD PTR [RSI+64]
            cmp EBP,1
            je .L_413600

            movsd XMM5,QWORD PTR [RSI+48]
            test EAX,EAX
            mov RBX,RSI
            addsd XMM5,XMM1
            je .L_413428

            test R9,R9
            je .L_413400

            movsd QWORD PTR [R9],XMM5
.L_413400:

            mov RDI,QWORD PTR [RSP+104]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_413669

            add RSP,120
.L_41341a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413428:

            mov EAX,DWORD PTR [RSI+68]
            lea R11,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM4,QWORD PTR [RSI+32]
            mov DWORD PTR [RSP+28],EDX
            mov R15D,ECX
            lea RDX,QWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM4
            mov DWORD PTR [RSP+24],EAX
            push R11
            movapd XMM3,XMM1
            xor R9D,R9D
            mov QWORD PTR [RSP+16],R11
            movapd XMM2,XMM0
            push 0
            movsd XMM1,QWORD PTR [RBX+8]
            push 0
            movsd XMM0,QWORD PTR [RBX]
            push 0
            xor R8D,R8D
            mov ESI,32768
            mov R14,RDI
            call .L_4126d0

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX+8]
            addsd XMM4,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
            movsd XMM1,QWORD PTR [RSP+48]
            call .L_40cbe0

            add EAX,DWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+56]
            mov RDI,R14
            movsd XMM3,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+24],EAX
            push R11
            push 0
            push 0
            push 0
.L_4134dd:

            lea R9,QWORD PTR [RSP+128]
            lea R8,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+72]
            call .L_40da60

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+88]
            addsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
.L_413522:

            movsd XMM0,QWORD PTR [RSP+48]
            call .L_40cab0

            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            add EAX,DWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP]
            mov R10D,DWORD PTR [RSP+28]
            mulsd XMM0,QWORD PTR [RIP+.L_65de88]
            movsd XMM5,QWORD PTR [RSP+16]
            test AL,1
            mulsd XMM0,QWORD PTR [R14+56]
            je .L_41357d

            pxor XMM3,XMM3
            movapd XMM1,XMM0
            ucomisd XMM3,XMM4
            ja .L_413571

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_413571:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            addsd XMM4,XMM1
.L_41357d:

            test R10D,R10D
            jne .L_41358a

            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
.L_41358a:

            test R15D,R15D
            je .L_413640

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movapd XMM3,XMM0
            mulsd XMM3,XMM1
            ucomisd XMM4,XMM3
            ja .L_413660

            movapd XMM3,XMM0
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            mulsd XMM1,XMM3
            ucomisd XMM1,XMM4
            jae .L_413654

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4135d0:

            test R12,R12
            je .L_4135e1

            addsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12],XMM5
.L_4135e1:

            test R13,R13
            je .L_413400

            pxor XMM2,XMM2
            addsd XMM2,XMM4
            movsd QWORD PTR [R13],XMM2
            jmp .L_413400
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413600:

            test R9,R9
            je .L_413612

            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            movsd QWORD PTR [R9],XMM0
.L_413612:

            test EAX,EAX
            jne .L_413630

            test R13,R13
            je .L_413630

            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            xor EBP,EBP
            movsd QWORD PTR [R13],XMM0
            jmp .L_413400
.L_413630:

            xor EBP,EBP
            jmp .L_413400
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413640:

            ucomisd XMM4,XMM0
            jae .L_413660

            pxor XMM1,XMM1
            ucomisd XMM1,XMM4
            jbe .L_4135d0
.L_413654:

            addsd XMM4,XMM0
            jmp .L_4135d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413660:

            subsd XMM4,XMM0
            jmp .L_4135d0
.L_413669:

            call __stack_chk_fail@PLT
.L_41366e:

            nop
            nop
.L_413670:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_413684:

            movsd XMM0,QWORD PTR [RIP+.L_65de78]
            mov QWORD PTR [RSP+8],R8
            lea R12,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test ECX,ECX
            movsd QWORD PTR [RSP+24],XMM0
            mov QWORD PTR [RSP+48],0
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            movsd QWORD PTR [RSP+40],XMM0
            mov QWORD PTR [RSP+72],0
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+80],0
            mov DWORD PTR [RSP+88],0
            jle .L_413732

            mov RBX,RDX
            lea EDX,DWORD PTR [RCX-1]
            lea R12,QWORD PTR [RSP+16]
            mov R13,RSI
            lea R15,QWORD PTR [RBX+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_413710:

            movsd XMM1,QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [R13]
            add RBX,8
            add R13,8
            call .L_412ac0

            cmp RBX,R15
            jne .L_413710
.L_413732:

            mov R8,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov R9,R14
            mov ECX,1
            mov RSI,R12
            mov RDI,RBP
            call .L_412d50

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41376b

            add RSP,120
.L_413760:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41376b:

            call __stack_chk_fail@PLT
.L_413770:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,104
.L_413784:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call localeconv@PLT

            test RAX,RAX
            je .L_413870

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_413870

            movzx R12D,BYTE PTR [RAX]
            test R12B,R12B
            je .L_413870

            cmp R12B,46
            je .L_413870

            movsx ESI,R12B
            mov RDI,RBP
            call strchr@PLT

            mov ESI,46
            mov RDI,RBP
            mov R14,RAX
            call strchr@PLT

            test RAX,RAX
            mov R8,RAX
            jne .L_4137f2

            test R14,R14
            je .L_413870
.L_4137f2:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call strlen@PLT

            cmp RAX,63
            mov R8,QWORD PTR [RSP+8]
            ja .L_4138e0

            lea R13,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+1]
            mov ECX,64
            mov RSI,RBP
            xor R15D,R15D
            mov RDI,R13
            call __memcpy_chk@PLT

            mov R8,QWORD PTR [RSP+8]
.L_41382f:

            test R14,R14
            je .L_413842

            sub R14,RBP
            test R8,R8
            mov BYTE PTR [R13+R14*1],32
            je .L_41384a
.L_413842:

            sub R8,RBP
            mov BYTE PTR [R13+R8*1],R12B
.L_41384a:

            mov RSI,RBX
            mov RDI,R13
            call strtod@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            mov R14D,DWORD PTR [RAX]
            jne .L_413897

            jmp .L_4138a3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413870:

            mov RSI,RBX
            mov RDI,RBP
            xor R15D,R15D
            call strtod@PLT

            movsd QWORD PTR [RSP+8],XMM0
            mov R13,RBP
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            mov R14D,DWORD PTR [RAX]
            je .L_4138b0
.L_413897:

            mov RDX,QWORD PTR [RBX]
            sub RDX,R13
            add RBP,RDX
            mov QWORD PTR [RBX],RBP
.L_4138a3:

            test R15B,R15B
            je .L_4138b0

            mov RDI,R13
            call free@PLT
.L_4138b0:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            mov DWORD PTR [R12],R14D
            movsd XMM0,QWORD PTR [RSP+8]
            jne .L_413901

            add RSP,104
.L_4138ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4138e0:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call strdup@PLT

            cmp RBP,RAX
            mov R13,RAX
            mov R8,QWORD PTR [RSP+8]
            setne R15B
            jmp .L_41382f
.L_413901:

            call __stack_chk_fail@PLT
.L_413906:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413910:

            xor ESI,ESI
            jmp .L_413770
.L_413917:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413920:

            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+24],XMM3
            ret 
.L_413937:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413940:

            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            mov DWORD PTR [RDI+56],ESI
            movsd QWORD PTR [RDI+8],XMM1
            mov DWORD PTR [RDI+60],EDX
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+24],XMM3
            movsd QWORD PTR [RDI+32],XMM4
            movsd QWORD PTR [RDI+40],XMM5
            movsd QWORD PTR [RDI+48],XMM6
            ret 
.L_41396c:

            nop
            nop
            nop
            nop
.L_413970:

            sub RSP,40
.L_413974:

            movapd XMM7,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_448738]
            mov RDI,QWORD PTR [RDI+24]
            movapd XMM6,XMM0
            lea RCX,QWORD PTR [RSP+16]
            mulsd XMM3,XMM5
            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RSP
            mulsd XMM1,XMM5
            mulsd XMM7,XMM5
            mulsd XMM6,XMM5
            movsd XMM4,QWORD PTR [RIP+.L_447a78]
            movapd XMM2,XMM3
            movapd XMM0,XMM1
            divsd XMM7,XMM4
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            divsd XMM6,XMM4
            movapd XMM3,XMM7
            divsd XMM0,XMM4
            movapd XMM1,XMM6
            divsd XMM2,XMM4
            call .L_412a00

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM0,QWORD PTR [RSP]
            jne .L_4139fc

            add RSP,40
.L_4139fb:

            ret 
.L_4139fc:

            call __stack_chk_fail@PLT
.L_413a01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a10:

            subsd XMM0,XMM2
            subsd XMM1,XMM3
            jmp hypot@PLT
.L_413a1d:

            nop
            nop
            nop
.L_413a20:

            sub RSP,24
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            subsd XMM2,QWORD PTR [RSP+72]
            subsd XMM0,QWORD PTR [RSP+56]
            subsd XMM1,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM2
            jmp hypot@PLT
.L_413a66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a70:

            test RDI,RDI
            je .L_413a80

            jmp .L_4034d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413a80:

            sub RSP,24
            mov QWORD PTR [RSP+8],RSI
            call .L_404160

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RAX
            add RSP,24
            jmp .L_4034d0
.L_413a9f:

            nop
.L_413aa0:

            test RDI,RDI
            je .L_413ab0

            jmp .L_402540
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413ab0:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+4],ESI
            call .L_404160

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,RAX
            add RSP,24
            jmp .L_402540
.L_413ad7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ae0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EDX,485
            mov RBP,RDI
            mov ECX,512
            sub RSP,528
.L_413afb:

            mov RBX,RSP
            movdqa XMM0,XMMWORD PTR [RIP+.L_449070]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            mov RDI,RBX
            movabs RAX,7955937635051336819
            mov DWORD PTR [RSP+24],4027497
            movaps XMMWORD PTR [RSP],XMM0
            mov QWORD PTR [RSP+16],RAX
            call __strncat_chk@PLT

            mov RDX,RBX
.L_413b3f:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_413b3f

            mov ECX,EAX
            lea RSI,QWORD PTR [RIP+.L_449000]
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov EDI,EAX
            cmove RDX,RCX
            add DIL,AL
            mov RAX,RBX
            sbb RDX,3
            mov ECX,512
            mov RDI,RBX
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+512]
            call __strncat_chk@PLT

            mov RDX,RBX
.L_413b98:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_413b98

            mov ECX,EAX
            mov RDI,RBX
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov ESI,EAX
            cmove RDX,RCX
            add SIL,AL
            mov RAX,RBX
            sbb RDX,3
            mov ECX,512
            mov RSI,R12
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+512]
            call __strncat_chk@PLT

            test RBP,RBP
            jne .L_413bf7

            call .L_404160

            mov RBP,RAX
.L_413bf7:

            mov RDI,RBP
            mov RSI,RBX
            call .L_4034d0

            mov RDI,QWORD PTR [RSP+520]
            xor RDI,QWORD PTR FS:[40]
            jne .L_413c21

            add RSP,528
.L_413c1c:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_413c21:

            call __stack_chk_fail@PLT
.L_413c26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413c30:

            sub RSP,8
            call .L_4024b0

            xor EAX,EAX
            add RSP,8
            ret 
.L_413c40:

            sub RSP,8
            test RDI,RDI
            je .L_413c70

            mov EAX,DWORD PTR [RDI+120]
            test EAX,EAX
            je .L_413c58

            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413c58:

            call .L_404140

            add RSP,8
            mov RDI,RAX
            jmp .L_4041f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413c70:

            call .L_404160

            add RSP,8
            mov RDI,RAX
            jmp .L_4041f0
.L_413c81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413c90:

            test RDI,RDI
            push RBX
            je .L_413cc0

            test ESI,ESI
            mov EBX,ESI
            jne .L_413ca0

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_413ca0:

            mov DWORD PTR [RDI+120],ESI
            call .L_404140

            mov ESI,EBX
            mov RDI,RAX
            call .L_41b2d0

            call __errno_location@PLT

            mov DWORD PTR [RAX],EBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413cc0:

            call __errno_location@PLT

            mov DWORD PTR [RAX],22
            pop RBX
            ret 
.L_413ccd:

            nop
            nop
            nop
.L_413cd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_413ce1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_413ec0

            test EDX,EDX
            mov RBX,RDI
            mov R13D,EDX
            jle .L_413d3f

            movdqu XMM0,XMMWORD PTR [RSP+208]
            lea R15,QWORD PTR [RSP+64]
            mov R12D,ESI
            xor EBP,EBP
            mov R14,RSP
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+16],XMM0
.L_413d2f:

            cmp R12D,-1
            je .L_413e58

            cmp R12D,1
            je .L_413d80
.L_413d3f:

            mov ESI,22
            mov RDI,RBX
            call .L_413c90

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
.L_413d54:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_413ecd

            add RSP,152
.L_413d72:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413d80:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RSI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,R15
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41aaf0

            add RSP,64
            mov RSI,RBX
            mov RDI,R14
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41acb0

            add RSP,64
.L_413dde:

            add EBP,1
            cmp R13D,EBP
            jne .L_413d2f

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_413ecd

            mov RAX,QWORD PTR [RSP+224]
            movdqu XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RSP+232],XMM0
            movdqa XMM0,XMMWORD PTR [RSP]
            mov QWORD PTR [RSP+224],RAX
            movups XMMWORD PTR [RSP+208],XMM0
            add RSP,152
.L_413e43:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_413a20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413e58:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RSI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,R15
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41acb0

            add RSP,64
            mov RSI,RBX
            mov RDI,R14
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41aaf0

            add RSP,64
            jmp .L_413dde
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413ec0:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            jmp .L_413d54
.L_413ecd:

            call __stack_chk_fail@PLT
.L_413ed2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ee0:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_413ee8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_413f48

            test EDX,EDX
            je .L_413f48

            cmp EDX,1
            mov RDI,RSI
            je .L_413f78

            cmp EDX,-1
            je .L_413fb0

            mov ESI,22
            call .L_413c90

            mov RDI,RBX
            call .L_41aab0

            nop
            nop
            nop
            nop
.L_413f28:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_413fe1

            add RSP,16
.L_413f43:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413f48:

            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_413f28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413f78:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            mov RDI,RBX
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_41aaf0

            add RSP,64
            jmp .L_413f28
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413fb0:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            mov RDI,RBX
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_41acb0

            add RSP,64
            jmp .L_413f28
.L_413fe1:

            call __stack_chk_fail@PLT
.L_413fe6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ff0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_413ffe:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4140c8

            mov R12,RDI
            mov R14D,ESI
            mov R13,RDX
            mov RBX,RCX
            xor EBP,EBP
            mov R15,RSP
            jmp .L_414041
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414030:

            add RBP,1
            add RBX,64
            cmp R13,RBP
            je .L_4140c8
.L_414041:

            push QWORD PTR [RBX+56]
.L_414044:

            push QWORD PTR [RBX+48]
            mov EDX,R14D
            push QWORD PTR [RBX+40]
            push QWORD PTR [RBX+32]
            mov RSI,R12
            push QWORD PTR [RBX+24]
            push QWORD PTR [RBX+16]
            mov RDI,R15
            push QWORD PTR [RBX+8]
            push QWORD PTR [RBX]
            call .L_413ee0

            movdqu XMM0,XMMWORD PTR [RSP+64]
            mov RDI,R12
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
            call .L_413c40

            test EAX,EAX
            je .L_414030

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4140e9

            add RSP,88
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_413c40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4140c8:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4140e9

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4140e9:

            call __stack_chk_fail@PLT
.L_4140ee:

            nop
            nop
.L_4140f0:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_4140f8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_414150

            test EDX,EDX
            je .L_414150

            cmp EDX,1
            mov RDI,RSI
            je .L_414168

            cmp EDX,-1
            je .L_414190

            mov ESI,22
            call .L_413c90

            mov RDI,RBX
            call .L_41aa90
.L_414130:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4141ae

            add RSP,16
.L_414147:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414150:

            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_414130
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414168:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41ae70

            add RSP,32
            jmp .L_414130
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414190:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41b040

            add RSP,32
            jmp .L_414130
.L_4141ae:

            call __stack_chk_fail@PLT
.L_4141b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_4141ce:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_414270

            mov R12,RDI
            mov R14D,ESI
            mov R13,RDX
            mov RBX,RCX
            xor EBP,EBP
            mov R15,RSP
            jmp .L_41420d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414200:

            add RBP,1
            add RBX,32
            cmp R13,RBP
            je .L_414270
.L_41420d:

            push QWORD PTR [RBX+24]
.L_414210:

            push QWORD PTR [RBX+16]
            mov EDX,R14D
            push QWORD PTR [RBX+8]
            push QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,R15
            call .L_4140f0

            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov RDI,R12
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            call .L_413c40

            test EAX,EAX
            je .L_414200

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414291

            add RSP,56
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_413c40
          .byte 0x90
.L_414270:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_414291

            add RSP,56
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414291:

            call __stack_chk_fail@PLT
.L_414296:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4142a0:

            push R15
            push R14
            mov RAX,RDI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,R8
            mov R14,R9
            sub RSP,168
.L_4142bf:

            movdqu XMM0,XMMWORD PTR [RIP+.L_449920]
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RDI
            xor EDI,EDI
            movaps XMMWORD PTR [RSP+112],XMM0
            test RAX,RAX
            mov RDX,QWORD PTR [RSP+232]
            mov R15,QWORD PTR [RSP+240]
            movdqu XMM0,XMMWORD PTR [RIP+.L_449930]
            mov R8,QWORD PTR [RSP+256]
            mov R12,QWORD PTR [RSP+264]
            mov R9,QWORD PTR [RSP+280]
            mov QWORD PTR [RSP+104],0
            movaps XMMWORD PTR [RSP+128],XMM0
            je .L_4143f0

            test R13,R13
            mov R10D,ESI
            cmove RBP,RBX
            test R14,R14
            lea RBX,QWORD PTR [RBP+RDX*1]
            je .L_414440
.L_414341:

            test R15,R15
            je .L_414430

            add RBX,R8
.L_41434d:

            test R12,R12
            je .L_414420

            add RBX,R9
.L_414359:

            lea RSI,QWORD PTR [RSP+104]
            test RBP,RBP
            cmove R13,RSI
            test RDX,RDX
            cmove R14,RSI
            test R8,R8
            cmove R15,RSI
            test R9,R9
            cmove R12,RSI
            test RBX,RBX
            je .L_4143f0

            cmp RDX,1
            seta DIL
            cmp R8,1
            seta SIL
            cmp RBP,1
            jbe .L_414610

            cmp RBP,RDX
            jbe .L_4145f8

            test DIL,DIL
            je .L_4145f8
.L_4143ab:

            cmp RDX,R8
            mov RBX,RDX
            seta DIL
            and ESI,EDI
.L_4143b7:

            test SIL,SIL
            cmovne RBX,R8
.L_4143be:

            cmp R9,1
            jbe .L_4143cb

            cmp R9,RBX
            cmovb RBX,R9
.L_4143cb:

            test R10D,R10D
            je .L_4143f0

            cmp R10D,1
            je .L_414450

            cmp R10D,-1
            je .L_414450

            mov ESI,22
            mov RDI,RAX
            xor EBX,EBX
            call .L_413c90

            nop
            nop
            nop
            nop
            nop
.L_4143f0:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4146a4

            add RSP,168
.L_414411:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414420:

            xor R9D,R9D
            jmp .L_414359
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414430:

            xor R8D,R8D
            jmp .L_41434d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414440:

            mov RBX,RBP
            xor EDX,EDX
            jmp .L_414341
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414450:

            lea RDI,QWORD PTR [RSP+64]
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R12
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+40],RDI
            lea RDI,QWORD PTR [RSP+112]
            mov RBP,R13
            mov R12,R14
            mov R13,R15
            mov RBX,R11
            mov QWORD PTR [RSP+56],RDI
            mov DWORD PTR [RSP+36],R10D
            mov R15,R9
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+232],RDX
            mov R14,RAX
            mov QWORD PTR [RSP+256],R8
            jmp .L_414585
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4144b0:

            push QWORD PTR [RSP+136]
.L_4144b7:

            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
.L_4144cc:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+72]
            call .L_41b040

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+160],XMM0
.L_4144f7:

            movsd XMM3,QWORD PTR [RSP+144]
            movsd XMM2,QWORD PTR [RSP+152]
            movsd XMM1,QWORD PTR [RSP+160]
            movsd XMM0,QWORD PTR [RSP+168]
            add RSP,32
.L_41451f:

            cmp QWORD PTR [RSP+8],1
            jbe .L_414531

            movsd QWORD PTR [RBP],XMM3
            add RBP,QWORD PTR [RSP+48]
.L_414531:

            cmp QWORD PTR [RSP+232],1
            jbe .L_41454a

            movsd QWORD PTR [R12],XMM2
            add R12,QWORD PTR [RSP+224]
.L_41454a:

            cmp QWORD PTR [RSP+256],1
            jbe .L_414563

            movsd QWORD PTR [R13],XMM1
            add R13,QWORD PTR [RSP+248]
.L_414563:

            cmp R15,1
            jbe .L_414576

            movsd QWORD PTR [R14],XMM0
            add R14,QWORD PTR [RSP+272]
.L_414576:

            add RBX,1
            cmp QWORD PTR [RSP+16],RBX
            je .L_414640
.L_414585:

            cmp DWORD PTR [RSP+36],1
            movsd XMM3,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [R12]
            movsd XMM1,QWORD PTR [R13]
            movsd XMM0,QWORD PTR [R14]
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+120],XMM2
            movsd QWORD PTR [RSP+128],XMM1
            movsd QWORD PTR [RSP+136],XMM0
            jne .L_4144b0

            push QWORD PTR [RSP+136]
.L_4145cb:

            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+88]
            call .L_41ae70

            jmp .L_4144f7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4145f8:

            cmp RBP,R8
            mov RBX,RBP
            seta DIL
            and ESI,EDI
            jmp .L_4143b7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414610:

            cmp RDX,1
            ja .L_4143ab

            cmp R8,1
            mov RBX,R8
            ja .L_4143be

            test R9,R9
            mov EBX,1
            cmovne RBX,R9
            jmp .L_4143be
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414640:

            mov R9,R15
            mov R15,R13
            mov R13,RBP
            mov RBP,QWORD PTR [RSP+8]
            mov RAX,R14
            mov R11,RBX
            mov R14,R12
            mov RDX,QWORD PTR [RSP+232]
            mov R8,QWORD PTR [RSP+256]
            mov R12,RAX
            cmp RBP,1
            jne .L_414676

            movsd QWORD PTR [R13],XMM3
.L_414676:

            cmp RDX,1
            jne .L_414681

            movsd QWORD PTR [R14],XMM2
.L_414681:

            cmp R8,1
            jne .L_41468c

            movsd QWORD PTR [R15],XMM1
.L_41468c:

            cmp R9,1
            mov RBX,R11
            jne .L_4143f0

            movsd QWORD PTR [R12],XMM0
            jmp .L_4143f0
.L_4146a4:

            call __stack_chk_fail@PLT
.L_4146a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4146b0:

            jmp .L_413c90
.L_4146b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4146c0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            je .L_414710

            mov RDI,RBX
            call .L_413c40

            mov RDI,RBX
            mov DWORD PTR [RBX+120],0
            mov EBP,EAX
            call .L_404140

            xor ESI,ESI
            mov RDI,RAX
            call .L_404200

            mov DWORD PTR [R12],0
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414710:

            mov EBP,22
            mov DWORD PTR [RAX],22
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_414722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414730:

            jmp .L_404190
.L_414735:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414740:

            test RDI,RDI
            je .L_414768

            push RBX
            mov RBX,RDI
            call .L_404160

            cmp RAX,RBX
            je .L_414760

            mov RDI,RBX
            pop RBX
            jmp .L_4041e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414760:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414768:

            ret 
.L_41476a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_414770:

            push R15
            push R14
            mov ECX,81
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            xor R9D,R9D
            mov R8D,10
            mov EDX,64
            mov ESI,1
            sub RSP,696
            lea R12,QWORD PTR [RSP+16]
            sub RSP,8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+688],RAX
            xor EAX,EAX
            mov RDI,R12

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RSP+152],10
            lea RCX,QWORD PTR [RIP+.L_449013]
            mov DWORD PTR [RDI],0
            push 0
            lea RDI,QWORD PTR [R12+64]
            call __sprintf_chk@PLT

            call .L_4459e0

            mov EDX,64
            mov RSI,RAX
            mov RDI,R12
            call .L_41b280

            lea RDI,QWORD PTR [RIP+.L_4474c2]
            call getenv@PLT

            test RAX,RAX
            pop RDX
            pop RCX
.L_414808:

            je .L_41481f

            lea RDI,QWORD PTR [R12+140]
            mov EDX,512
            mov RSI,RAX
            call .L_41b280
.L_41481f:

            lea RDI,QWORD PTR [RIP+.L_446f64]
            call getenv@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41487d

            cmp BYTE PTR [RSP+156],0
            je .L_4149c8

            lea RBP,QWORD PTR [R12+140]
            lea RSI,QWORD PTR [RIP+.L_44901c]
            mov EDX,512
            mov RDI,RBP
            call __strcat_chk@PLT

            mov RDI,RBX
            call strlen@PLT

            mov EDX,511
            mov ECX,512
            mov RSI,RBX
            sub RDX,RAX
            mov RDI,RBP
            call __strncat_chk@PLT
.L_41487d:

            call .L_403da0

            mov R15,RAX
            call .L_403db0

            test EAX,EAX
            jle .L_414962

            sub EAX,1
            lea RBP,QWORD PTR [R12+140]
            lea R13,QWORD PTR [R15+RAX*8+8]
            jmp .L_4148e2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4148a8:

            mov EAX,59
            mov WORD PTR [RBP+RBX*1],AX
            mov RBX,QWORD PTR [R15]
            mov RDI,RBX
            call strlen@PLT

            mov EDX,511
            mov ECX,512
            mov RSI,RBX
            sub RDX,RAX
            mov RDI,RBP
            call __strncat_chk@PLT
.L_4148d5:

            add R15,8
            cmp R15,R13
            je .L_414962
.L_4148e2:

            mov RBX,RBP
.L_4148e5:

            mov ECX,DWORD PTR [RBX]
            add RBX,4
            lea EDX,DWORD PTR [RCX-16843009]
            not ECX
            and EDX,ECX
            and EDX,2155905152
            je .L_4148e5

            mov EAX,EDX
            mov RSI,QWORD PTR [R15]
            shr EAX,16
            test EDX,32896
            cmove EDX,EAX
            lea RAX,QWORD PTR [RBX+2]
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            cmove RBX,RAX
            mov EAX,EDX
            add AL,DL
            sbb RBX,3
            sub RBX,RBP
            call strlen@PLT

            add RAX,RBX
            cmp RAX,510
            ja .L_4148d5

            cmp BYTE PTR [RSP+156],0
            mov RSI,QWORD PTR [RSP+8]
            jne .L_4148a8

            mov EDX,512
            mov RDI,RBP
            add R15,8
            call .L_41b280

            cmp R15,R13
            jne .L_4148e2
.L_414962:

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+8]
            mov RCX,R14
            mov RSI,R12
            and RDI,-8
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [R12+644]
            sub RCX,RDI
            sub RSI,RCX
            add ECX,652
            shr ECX,3
            mov QWORD PTR [R14+644],RAX
            mov RAX,R14

            rep movsq 

            mov RSI,QWORD PTR [RSP+680]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4149e2

            add RSP,696
.L_4149b6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4149c8:

            lea RDI,QWORD PTR [R12+140]
            mov EDX,512
            mov RSI,RAX
            call .L_41b280

            jmp .L_41487d
.L_4149e2:

            call __stack_chk_fail@PLT
.L_4149e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4149f0:

            push R13
            push R12
            mov ECX,82
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,680
.L_414a08:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+664],RAX
            xor EAX,EAX
            mov RBX,RSP
            test RSI,RSI
            mov RDI,RBX

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDI],0
            je .L_414b08

            mov RSI,QWORD PTR [RSI+16]
            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_44901e]
            call .L_403e60

            test EAX,EAX
            jne .L_414b40
.L_414a4f:

            mov RSI,QWORD PTR [R12+8]
            lea RDI,QWORD PTR [RBX+16]
            mov EDX,128
            call .L_41b280

            xor ESI,ESI
            mov RDI,R12
            call .L_445190

            lea RDI,QWORD PTR [RBX+144]
            lea RSI,QWORD PTR [RAX+1]
            mov R13,RAX
            mov EDX,512
            call .L_41b280

            mov RDI,R13
            call .L_403770

            cmp QWORD PTR [R12+48],0
            mov EAX,1
            je .L_414b70
.L_414a9d:

            mov DWORD PTR [RSP+656],EAX
            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            and RDI,-8
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RBX+652]
            sub RCX,RDI
            sub RBX,RCX
            add ECX,660
            mov RSI,RBX
            shr ECX,3
            mov QWORD PTR [RBP+652],RAX

            rep movsq 
.L_414ada:

            mov RDX,QWORD PTR [RSP+664]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_414b8c

            add RSP,680
.L_414afb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b08:

            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            mov RAX,RSI
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+652],0
            and RDI,-8
            sub RCX,RDI
            add ECX,660
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_414ada
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b40:

            mov RSI,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_446fca]
            call .L_403e60

            mov EDX,16
            mov RSI,RAX
            mov RDI,RBX
            call .L_41b280

            jmp .L_414a4f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b70:

            cmp QWORD PTR [R12+64],0
            jne .L_414a9d

            xor EAX,EAX
            cmp QWORD PTR [R12+80],0
            setne AL
            jmp .L_414a9d
.L_414b8c:

            call __stack_chk_fail@PLT
.L_414b91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ba0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,368
.L_414bb5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RAX
            xor EAX,EAX
            mov RBX,RSP
            call .L_404160

            mov RSI,R14
            mov RDI,RAX
            mov R13,RAX
            call .L_409ff0

            mov ECX,45
            mov RBP,RAX
            mov RDI,RBX
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            cmp QWORD PTR [RBP+8],0
            je .L_414cf0

            mov EDX,32
            mov RSI,R14
            mov RDI,RBX
            call .L_41b280

            lea RDX,QWORD PTR [RBX+32]
            mov ECX,260
            mov RSI,R14
            mov RDI,R13
            call .L_403dd0

            mov RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBX+292]
            mov EDX,8
            call .L_41b280

            mov RCX,QWORD PTR [RBP+32]
            mov RSI,RBP
            mov RDI,R13
            movdqu XMM1,XMMWORD PTR [RCX+80]
            mov EDX,DWORD PTR [RCX+112]
            mov EAX,DWORD PTR [RCX+116]
            movsd XMM0,QWORD PTR [RCX+96]
            movsd XMM2,QWORD PTR [RCX+104]
            movaps XMMWORD PTR [RSP+304],XMM1
            pxor XMM1,XMM1
            mov DWORD PTR [RSP+336],EDX
            movsd QWORD PTR [RSP+344],XMM0
            movsd QWORD PTR [RSP+352],XMM2
            cvtsi2sd XMM1,EDX
            mov DWORD PTR [RSP+340],EAX
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM1,QWORD PTR [RSP+304]
            movsd QWORD PTR [RSP+320],XMM1
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+312]
            movsd QWORD PTR [RSP+328],XMM0
            call .L_409870

            mov ECX,45
            mov RDI,R12
            mov RSI,RBX

            rep movsq 
.L_414cc8:

            mov RBX,QWORD PTR [RSP+360]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_414d1d

            add RSP,368
.L_414ce5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_414cf0:

            mov RSI,RBP
            mov RDI,R13
            call .L_409870

            movabs RAX,29113321788762477
            mov ECX,45
            mov RDI,R12
            mov QWORD PTR [RSP+292],RAX
            mov RSI,RBX

            rep movsq 

            jmp .L_414cc8
.L_414d1d:

            call __stack_chk_fail@PLT
.L_414d22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d30:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,584
.L_414d47:

            lea RBX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+4],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+568],RAX
            xor EAX,EAX
            call .L_404160

            mov ECX,46
            mov R12,RAX
            mov RDI,RBX
            xor EAX,EAX
            lea RDX,QWORD PTR [RBX+32]
            mov RSI,R13

            rep stosq QWORD PTR [RDI]

            mov ECX,260
            mov DWORD PTR [RDI],0
            mov RDI,R12
            call .L_403dd0

            test EAX,EAX
            je .L_414da8

            mov RDI,R13
            call strlen@PLT

            cmp RAX,64
            jbe .L_414e10
.L_414da8:

            lea RDI,QWORD PTR [RBP+8]
            mov RAX,QWORD PTR [RSP+16]
            mov RCX,RBP
            and RDI,-8
            sub RCX,RDI
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RBX+364]
            sub RBX,RCX
            add ECX,372
            shr ECX,3
            mov RSI,RBX
            mov RDX,QWORD PTR [RSP+568]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP+364],RAX
            mov RAX,RBP

            rep movsq 

            jne .L_414fdd

            add RSP,584
.L_414e00:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414e10:

            lea R14,QWORD PTR [RSP+400]
            mov EDX,32
            mov RSI,R13
            mov RDI,RBX
            lea R15,QWORD PTR [RBX+292]
            call .L_41b280

            movabs RAX,31093567915781717
            mov EDX,64
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RBX+324],RAX
            mov QWORD PTR [RBX+292],RAX
            mov QWORD PTR [RBX+356],RAX
            call .L_41b280

            lea RSI,QWORD PTR [RIP+.L_449024]
            mov EDX,74
            mov RDI,R14
            call __strcat_chk@PLT

            lea R8,QWORD PTR [RSP+480]
            mov ECX,80
            mov EDX,73
            mov RSI,R14
            mov EAX,15732
            mov DWORD PTR [RSP+480],1768843563
            mov RDI,R8
            mov WORD PTR [RSP+484],AX
            mov BYTE PTR [RSP+486],0
            call __strncat_chk@PLT

            mov RDI,RAX
            call .L_403e10

            lea RSI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RSP+4]
            mov RCX,R14
            mov RDX,RAX
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_4024a0

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44902e]
            mov RDI,R12
            call .L_403e60

            test EAX,EAX
            jne .L_414f50
.L_414eec:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_449040]
            mov RDI,R12
            call .L_403e60

            test EAX,EAX
            jne .L_414fb0
.L_414f08:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_449050]
            mov RDI,R12
            call .L_403e60

            test EAX,EAX
            jne .L_414f80
.L_414f20:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_414da8

            nop
            nop
.L_414f30:

            mov R12,QWORD PTR [RDI]
            call .L_403730

            test R12,R12
            mov QWORD PTR [RSP+8],R12
            mov RDI,R12
            jne .L_414f30

            jmp .L_414da8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414f50:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_449037]
            mov RDI,R12
            call .L_403e60

            mov EDX,32
            mov RSI,RAX
            mov RDI,R15
            call .L_41b280

            jmp .L_414eec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414f80:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44905c]
            mov RDI,R12
            call .L_403e60

            lea RDI,QWORD PTR [RBX+356]
            mov EDX,16
            mov RSI,RAX
            call .L_41b280

            jmp .L_414f20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414fb0:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_449048]
            mov RDI,R12
            call .L_403e60

            lea RDI,QWORD PTR [RBX+324]
            mov EDX,32
            mov RSI,RAX
            call .L_41b280

            jmp .L_414f08
.L_414fdd:

            call __stack_chk_fail@PLT
.L_414fe2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ff0:

            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,48
.L_414ffb:

            movsd XMM2,QWORD PTR [RIP+.L_449068]
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_442de0

            test EAX,EAX
            je .L_41502c

            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
.L_41502c:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            movdqa XMM0,XMMWORD PTR [RSP]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jne .L_415057

            add RSP,48
.L_415055:

            pop RBX
            ret 
.L_415057:

            call __stack_chk_fail@PLT
.L_41505c:

            nop
            nop
            nop
            nop
.L_415060:

            push RBP
            push RBX
            mov RBX,RDI
            pxor XMM2,XMM2
            mov RDI,RSI
            sub RSP,120
.L_415070:

            mov RBP,RSP
            mov DWORD PTR [RSP+96],0
            mov RSI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_4438d0

            test EAX,EAX
            je .L_4150a4

            mov ECX,13
            xor EAX,EAX
            mov RDI,RBP

            rep stosq QWORD PTR [RDI]
.L_4150a4:

            movdqa XMM0,XMMWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            movdqa XMM0,XMMWORD PTR [RSP+16]
            mov QWORD PTR [RBX+96],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+64],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+80],XMM0
            jne .L_415101

            add RSP,120
.L_4150fe:

            pop RBX
            pop RBP
            ret 
.L_415101:

            call __stack_chk_fail@PLT
.L_415106:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415110:

            mulsd XMM0,QWORD PTR [RIP+.L_447a78]
            divsd XMM0,QWORD PTR [RIP+.L_448738]
            ret 
.L_415121:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415130:

            mulsd XMM0,QWORD PTR [RIP+.L_448738]
            divsd XMM0,QWORD PTR [RIP+.L_447a78]
            ret 
.L_415141:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415150:

            jmp .L_442c80
.L_415155:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415160:

            jmp .L_4456a0
.L_415165:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415170:

            jmp .L_403790
.L_415175:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415180:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,104
.L_415190:

            movsd XMM5,QWORD PTR [RSP+144]
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+152]
            movsd XMM6,QWORD PTR [RSP+160]
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+48],XMM4
            call hypot@PLT

            movapd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RBX+136]
            movapd XMM1,XMM7
            mulsd XMM0,QWORD PTR [RBX+128]
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movsd XMM2,QWORD PTR [RBX+192]
            movsd QWORD PTR [RSP+24],XMM2
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM1,QWORD PTR [RBX+176]
            movsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+128]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+88]
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            mulsd XMM1,XMM0
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            subsd XMM7,XMM1
            mulsd XMM0,XMM3
            movapd XMM1,XMM7
            mulsd XMM0,XMM3
            addsd XMM0,QWORD PTR [RSP]
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM0
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM1,XMM5
            movsd XMM6,QWORD PTR [RSP+88]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+56],XMM6
            call atan2@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RBX+176]
            movapd XMM6,XMM0
            movsd XMM4,QWORD PTR [RBX+128]
            ucomisd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jp .L_415338

            jne .L_415338
.L_4152e8:

            movq XMM5,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4490a0]
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            ja .L_415370

            movsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            subsd XMM0,XMM4
.L_415314:

            movsd QWORD PTR [RBP],XMM6
            mov RAX,RBP
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RBP+16],XMM0
            add RSP,104
.L_41532a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415338:

            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM7
            mulsd XMM1,XMM7
            subsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_415417
.L_415360:

            divsd XMM4,XMM1
            jmp .L_4152e8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415370:

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RBX+128]
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,XMM7
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RSP+56]
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM1,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            call hypot@PLT

            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM7,XMM0
            movapd XMM5,XMMWORD PTR [RSP+64]
            andpd XMM1,XMM5
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+48]
            subsd XMM1,XMM7
            movapd XMM0,XMM1
            jmp .L_415314
.L_415417:

            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_415360
.L_41545d:

            nop
            nop
            nop
.L_415460:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_415180

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4154e3

            add RSP,72
            ret 
.L_4154e3:

            call __stack_chk_fail@PLT
.L_4154e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4154f0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,72
.L_415500:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+120]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            pxor XMM4,XMM4
            movsd XMM3,QWORD PTR [RBP+176]
            movsd XMM7,QWORD PTR [RSP+48]
            ucomisd XMM3,XMM4
            movsd QWORD PTR [RSP+8],XMM7
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBP+128]
            jp .L_4155f0

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            jne .L_4155f0
.L_415559:

            movsd XMM0,QWORD PTR [RSP+112]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+128]
            mov RAX,RBX
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+48]
            subsd XMM1,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            addsd XMM1,XMM4
            mulsd XMM6,XMM0
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,XMM5
            movsd QWORD PTR [RBX],XMM6
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM1
            add RSP,72
.L_4155e6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4155f0:

            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM5
            movapd XMM7,XMM1
            mulsd XMM0,XMM5
            subsd XMM7,XMM0
            ucomisd XMM4,XMM7
            sqrtsd XMM6,XMM7
            movapd XMM0,XMM7
            ja .L_415623
.L_41561a:

            divsd XMM2,XMM6
            jmp .L_415559
.L_415623:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBP+176]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_41561a
.L_415662:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415670:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_4154f0

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4156f3

            add RSP,72
            ret 
.L_4156f3:

            call __stack_chk_fail@PLT
.L_4156f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415700:

            test RDI,RDI
            je .L_415750

            lea RAX,QWORD PTR [RIP+.L_4154f0]
            mov DWORD PTR [RDI+320],2
            mov DWORD PTR [RDI+324],1
            mov QWORD PTR [RDI+56],RAX
            lea RAX,QWORD PTR [RIP+.L_415180]
            mov QWORD PTR [RDI+64],RAX
            lea RAX,QWORD PTR [RIP+.L_415670]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_415460]
            mov QWORD PTR [RDI+48],RAX
            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415750:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41577e

            lea RDX,QWORD PTR [RIP+.L_415170]
            lea RCX,QWORD PTR [RIP+.L_449080]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41577e:

            add RSP,8
            ret 
.L_415783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415790:

            lea RDX,QWORD PTR [RIP+.L_4154f0]
            lea RCX,QWORD PTR [RIP+.L_415180]
            lea RSI,QWORD PTR [RIP+.L_415670]
            mov RAX,RDI
            mov QWORD PTR [RDI+56],RDX
            mov QWORD PTR [RDI+64],RCX
            mov QWORD PTR [RDI+40],RSI
            lea RDI,QWORD PTR [RIP+.L_415460]
            mov DWORD PTR [RAX+320],2
            mov DWORD PTR [RAX+324],1
            mov QWORD PTR [RAX+48],RDI
            ret 
.L_4157d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4157e0:

            xor EAX,EAX
            ret 
.L_4157e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4157f0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,120
.L_415804:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM7,QWORD PTR [RSP+176]
            movsd XMM6,QWORD PTR [RSP+184]
            movsd XMM5,QWORD PTR [RSP+192]
            mov R15D,DWORD PTR [RAX+4]
            test R15D,R15D
            je .L_415aa0

            movsxd RBX,R15D
            lea R14,QWORD PTR [RSP+32]
            lea RBP,QWORD PTR [RBX*8]
            shl RBX,2
            jmp .L_415946
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415860:

            push QWORD PTR [RSP+232]
.L_415867:

            push QWORD PTR [RSP+232]
            mov EDX,1
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            lea RDI,QWORD PTR [RSP+240]
            call .L_413ee0

            movsd XMM7,QWORD PTR [RSP+240]
            movsd XMM6,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [RSP+256]
            add RSP,64
.L_4158c9:

            mov RAX,QWORD PTR [R12+32]
            movsxd RDX,DWORD PTR [RAX+8]
            cmp EDX,99
            jg .L_415935

            movsd QWORD PTR [RSP+176],XMM7
            lea ECX,DWORD PTR [RDX+1]
            shl RDX,6
            movsd QWORD PTR [RSP+184],XMM6
            lea RDX,QWORD PTR [RAX+RDX*1+48]
            movsd QWORD PTR [RSP+192],XMM5
            mov DWORD PTR [RAX+8],ECX
            movdqu XMM0,XMMWORD PTR [RSP+176]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [RDX+56],XMM0
.L_415935:

            sub RBP,8
            sub RBX,4
            test R15D,R15D
            je .L_415aa0
.L_415946:

            sub R15D,1
            movapd XMM2,XMM5
            mov RAX,QWORD PTR [RAX+6456]
            movapd XMM1,XMM6
            movapd XMM0,XMM7
            lea RSI,QWORD PTR [RIP+.L_4490a8]
            mov EDX,R15D
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM5
            mov RAX,QWORD PTR [RAX+RBP*1]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            movsd XMM4,QWORD PTR [RAX+256]
            movsd XMM3,QWORD PTR [RAX+128]
            mov EAX,5
            call .L_41b500

            mov RAX,QWORD PTR [R12+32]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+32]
            mov EDX,DWORD PTR [RDX+RBX*1]
            test EDX,EDX
            jne .L_415935

            mov RDX,QWORD PTR [RAX+6456]
            mov RAX,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+176],XMM7
            movsd QWORD PTR [RSP+184],XMM6
            movsd QWORD PTR [RSP+192],XMM5
            mov EAX,DWORD PTR [RAX+RBX*1]
            mov RSI,QWORD PTR [RDX+RBP*1]
            test EAX,EAX
            jne .L_415860

            push QWORD PTR [RSP+232]
.L_4159fc:

            push QWORD PTR [RSP+232]
            mov EDX,4294967295
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            mov RDI,R14
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
.L_415a35:

            call .L_413ee0

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RSP+240],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RSP+256],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RSP+272],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movsd XMM7,QWORD PTR [RSP+240]
            movups XMMWORD PTR [RSP+288],XMM0
            movsd XMM6,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [RSP+256]
            add RSP,64
.L_415a97:

            jmp .L_4158c9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415aa0:

            movapd XMM0,XMM7
            lea RSI,QWORD PTR [RIP+.L_4490d8]
            movapd XMM2,XMM5
            mov EAX,3
            movapd XMM1,XMM6
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            call .L_41b500

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [R12+32]
            movsd QWORD PTR [RSP+176],XMM7
            movsd QWORD PTR [RSP+184],XMM6
            movsd XMM5,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            movdqu XMM0,XMMWORD PTR [RSP+176]
            mov DWORD PTR [RAX+8],0
            mov RAX,R13
            movsd QWORD PTR [RSP+192],XMM5
            movups XMMWORD PTR [R13],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [R13+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [R13+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [R13+48],XMM0
            jne .L_415b65

            add RSP,120
.L_415b5a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_415b65:

            call __stack_chk_fail@PLT
.L_415b6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_415b70:

            push RBX
            mov RSI,RDI
            sub RSP,80
.L_415b78:

            mov RDX,QWORD PTR [RIP+.L_4498f8]
            mov R9,QWORD PTR [RIP+.L_449900]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov R10,QWORD PTR [RIP+.L_449908]
            mov RAX,QWORD PTR [RIP+.L_4498f0]
            movq QWORD PTR [RSP],XMM0
            mov RCX,QWORD PTR [RIP+.L_449910]
            mov RBX,QWORD PTR [RIP+.L_449918]
            movq QWORD PTR [RSP+8],XMM1
            mov QWORD PTR [RSP+24],RDX
            mov RDI,RSP
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RBX
            push RBX
.L_415bdf:

            push RCX
            push R10
            push R9
            push RDX
            push RAX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_4157f0

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            add RSP,64
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415c19

            add RSP,80
            pop RBX
            ret 
.L_415c19:

            call __stack_chk_fail@PLT
.L_415c1e:

            nop
            nop
.L_415c20:

            push R12
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_415c2a:

            mov R9,QWORD PTR [RIP+.L_449900]
            mov R10,QWORD PTR [RIP+.L_449908]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RSP+112]
            mov RDI,RSP
            mov RCX,QWORD PTR [RSP+128]
            mov R11,QWORD PTR [RIP+.L_449910]
            mov R12,QWORD PTR [RIP+.L_449918]
            mov QWORD PTR [RSP+32],R9
            movdqu XMM0,XMMWORD PTR [RIP+.L_4498f0]
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RDX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+16],RCX
            push R12
.L_415c9c:

            push R11
            push R10
            push R9
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RDX
            push RAX
            call .L_4157f0

            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add RSP,64
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX],XMM0
            mov QWORD PTR [RBX+16],RAX
            jne .L_415ce2

            add RSP,88
            mov RAX,RBX
            pop RBX
            pop R12
            ret 
.L_415ce2:

            call __stack_chk_fail@PLT
.L_415ce7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415cf0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_415d04:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM4,QWORD PTR [RSP+184]
            movsd XMM3,QWORD PTR [RSP+192]
            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            je .L_415f90

            lea R12D,DWORD PTR [RDX-1]
            mov R15D,4
            xor EBX,EBX
            lea R14,QWORD PTR [RSP+32]
            add R12,1
            jmp .L_415e45
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415d60:

            push QWORD PTR [RSP+232]
.L_415d67:

            push QWORD PTR [RSP+232]
            mov EDX,4294967295
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            lea RDI,QWORD PTR [RSP+240]
            call .L_413ee0

            movsd XMM5,QWORD PTR [RSP+240]
            movsd XMM4,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+256]
            add RSP,64
.L_415dc9:

            mov RAX,QWORD PTR [RBP+32]
            movsxd RDX,DWORD PTR [RAX+8]
            cmp EDX,99
            jg .L_415e34

            movsd QWORD PTR [RSP+176],XMM5
            lea ECX,DWORD PTR [RDX+1]
            shl RDX,6
            movsd QWORD PTR [RSP+184],XMM4
            lea RDX,QWORD PTR [RAX+RDX*1+48]
            movsd QWORD PTR [RSP+192],XMM3
            mov DWORD PTR [RAX+8],ECX
            movdqu XMM0,XMMWORD PTR [RSP+176]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [RDX+56],XMM0
.L_415e34:

            add RBX,1
            add R15,4
            cmp R12,RBX
            je .L_415f90
.L_415e45:

            mov RAX,QWORD PTR [RAX+6456]
            movapd XMM2,XMM3
            movapd XMM1,XMM4
            lea RSI,QWORD PTR [RIP+.L_4490f8]
            movapd XMM0,XMM5
            mov EDX,EBX
            mov RAX,QWORD PTR [RAX+R15*2]
            mov RDI,RBP
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            mov RCX,QWORD PTR [RAX+8]
            mov EAX,3
            call .L_41b500

            mov RAX,QWORD PTR [RBP+32]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RDX+R15*1]
            test EDX,EDX
            jne .L_415e34

            mov RDX,QWORD PTR [RAX+6456]
            mov RAX,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+176],XMM5
            movsd QWORD PTR [RSP+184],XMM4
            movsd QWORD PTR [RSP+192],XMM3
            mov EAX,DWORD PTR [RAX+R15*1]
            mov RSI,QWORD PTR [RDX+R15*2]
            test EAX,EAX
            jne .L_415d60

            push QWORD PTR [RSP+232]
.L_415ee7:

            push QWORD PTR [RSP+232]
            mov EDX,1
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            mov RDI,R14
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
.L_415f20:

            call .L_413ee0

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RSP+240],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RSP+256],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RSP+272],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movsd XMM5,QWORD PTR [RSP+240]
            movups XMMWORD PTR [RSP+288],XMM0
            movsd XMM4,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+256]
            add RSP,64
.L_415f82:

            jmp .L_415dc9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f90:

            movapd XMM0,XMM5
            lea RSI,QWORD PTR [RIP+.L_4490d8]
            movapd XMM2,XMM3
            mov RDI,RBP
            movapd XMM1,XMM4
            mov EAX,3
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            call .L_41b500

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+176],XMM5
            movsd QWORD PTR [RSP+184],XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+104]
            xor RDI,QWORD PTR FS:[40]
            movdqu XMM0,XMMWORD PTR [RSP+176]
            mov DWORD PTR [RAX+8],0
            mov RAX,R13
            movsd QWORD PTR [RSP+192],XMM3
            movups XMMWORD PTR [R13],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [R13+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [R13+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [R13+48],XMM0
            jne .L_416054

            add RSP,120
.L_416049:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416054:

            call __stack_chk_fail@PLT
.L_416059:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416060:

            push RBX
            mov RSI,RDI
            sub RSP,80
.L_416068:

            mov RDX,QWORD PTR [RIP+.L_4498f8]
            mov R9,QWORD PTR [RIP+.L_449900]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov R10,QWORD PTR [RIP+.L_449908]
            mov RAX,QWORD PTR [RIP+.L_4498f0]
            movq QWORD PTR [RSP],XMM0
            mov RCX,QWORD PTR [RIP+.L_449910]
            mov RBX,QWORD PTR [RIP+.L_449918]
            movq QWORD PTR [RSP+8],XMM1
            mov QWORD PTR [RSP+24],RDX
            mov RDI,RSP
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RBX
            push RBX
.L_4160cf:

            push RCX
            push R10
            push R9
            push RDX
            push RAX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_415cf0

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            add RSP,64
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416109

            add RSP,80
            pop RBX
            ret 
.L_416109:

            call __stack_chk_fail@PLT
.L_41610e:

            nop
            nop
.L_416110:

            push R12
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41611a:

            mov R9,QWORD PTR [RIP+.L_449900]
            mov R10,QWORD PTR [RIP+.L_449908]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RSP+112]
            mov RDI,RSP
            mov RCX,QWORD PTR [RSP+128]
            mov R11,QWORD PTR [RIP+.L_449910]
            mov R12,QWORD PTR [RIP+.L_449918]
            mov QWORD PTR [RSP+32],R9
            movdqu XMM0,XMMWORD PTR [RIP+.L_4498f0]
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RDX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+16],RCX
            push R12
.L_41618c:

            push R11
            push R10
            push R9
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RDX
            push RAX
            call .L_415cf0

            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add RSP,64
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX],XMM0
            mov QWORD PTR [RBX+16],RAX
            jne .L_4161d2

            add RSP,88
            mov RAX,RBX
            pop RBX
            pop R12
            ret 
.L_4161d2:

            call __stack_chk_fail@PLT
.L_4161d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4161e0:

            test RDI,RDI
            je .L_416200

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416200:

            ret 
.L_416202:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416210:

            test RDI,RDI
            je .L_4162da

            test ESI,ESI
            push R12
            push RBP
            push RBX
.L_41621f:

            mov RBX,RDI
            jne .L_4162d0
.L_416228:

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_4162be

            mov EDX,DWORD PTR [RAX+4]
            xor EBP,EBP
            mov R12D,8
            test EDX,EDX
            jle .L_416268

            nop
            nop
            nop
            nop
.L_416248:

            mov RAX,QWORD PTR [RAX+6456]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R12*1]
            add R12,8
            call .L_4024b0

            mov RAX,QWORD PTR [RBX+32]
            cmp EBP,DWORD PTR [RAX+4]
            jl .L_416248
.L_416268:

            mov RDI,QWORD PTR [RAX+16]
            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+24]
            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+32]
            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+40]
            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+48]
            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+6456]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770
.L_4162be:

            mov RDI,RBX
            pop RBX
.L_4162c2:

            pop RBP
            pop R12
            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4162d0:

            call .L_413c90

            jmp .L_416228
.L_4162da:

            xor EAX,EAX
            ret 
.L_4162dd:

            nop
            nop
            nop
.L_4162e0:

            xor ESI,ESI
            jmp .L_416210
.L_4162e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4162f0:

            push R15
            lea RAX,QWORD PTR [RIP+.L_415cf0]
            push R14
            push R13
            push R12
            mov ESI,6464
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41630d:

            mov QWORD PTR [RDI+72],RAX
            lea RAX,QWORD PTR [RIP+.L_4157f0]
            mov QWORD PTR [RDI+80],RAX
            lea RAX,QWORD PTR [RIP+.L_416110]
            mov QWORD PTR [RDI+56],RAX
            lea RAX,QWORD PTR [RIP+.L_415c20]
            mov QWORD PTR [RDI+64],RAX
            lea RAX,QWORD PTR [RIP+.L_416060]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_415b70]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4162e0]
            mov QWORD PTR [RDI+112],RAX
            mov EDI,1
            call .L_403740

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_416a20

            mov R12,QWORD PTR [RBX+16]
            test R12,R12
            je .L_4169b0

            mov RAX,R12
            xor EBP,EBP
            jmp .L_416383
          .byte 0x66
          .byte 0x90
.L_416380:

            mov RBP,RDX
.L_416383:

            mov RAX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RBP+1]
            test RAX,RAX
            jne .L_416380

            add RBP,2
            mov ESI,8
            movsxd R15,EBP
            mov R14D,EBP
            mov RDI,R15
            call .L_403740

            test RAX,RAX
            mov R13,RAX
            je .L_41698c

            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_4163b8:

            lea RDX,QWORD PTR [R12+9]
            mov R12,QWORD PTR [R12]
            add RAX,1
            mov QWORD PTR [R13+RAX*8-8],RDX
            test R12,R12
            jne .L_4163b8

            lea RDI,QWORD PTR [RIP+.L_65d040]
            mov ESI,8
            mov QWORD PTR [R13+RAX*8],RDI
            mov RAX,QWORD PTR [RBX+32]
            mov RDI,R15
            mov QWORD PTR [RAX+40],R13
            call .L_403740

            mov R12,QWORD PTR [RBX+32]
            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_4169a0

            test EBP,EBP
            jle .L_416a27
.L_41640d:

            lea R9D,DWORD PTR [R14-1]
            lea R10,QWORD PTR [RIP+.L_449226]
            mov R14D,4294967295
            xor EAX,EAX
            mov EBP,R14D
            xor R11D,R11D
            add R9,1
.L_41642a:

            mov RDX,QWORD PTR [R13+RAX*8]
            lea RSI,QWORD PTR [RIP+.L_449221]
            mov ECX,5
            mov R8D,EAX
            mov RDI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_416930

            cmp EBP,-1
            je .L_416960

            test R11D,R11D
            cmovne R8D,R14D
            add R11D,1
            mov R14D,R8D
.L_416468:

            add RAX,1
            cmp RAX,R9
            jne .L_41642a

            lea EAX,DWORD PTR [R11-1]
            cmp EBP,-1
            mov DWORD PTR [RSP+44],R11D
            mov DWORD PTR [RSP+20],EAX
            mov DWORD PTR [R12+4],EAX
            je .L_416971

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            je .L_416971

            movsxd RAX,DWORD PTR [RSP+20]
            mov ESI,8
            add RAX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_403740

            mov QWORD PTR [R12+6456],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+6456],0
            je .L_4169a0

            mov ESI,DWORD PTR [RSP+20]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [R12+4],ESI
            mov ESI,4
            call .L_403740

            mov QWORD PTR [R12+16],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+16],0
            je .L_4169a0

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,4
            call .L_403740

            mov QWORD PTR [R12+24],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+24],0
            je .L_4169a0

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,4
            call .L_403740

            mov QWORD PTR [R12+32],RAX
            mov RAX,QWORD PTR [RBX+32]
            cmp QWORD PTR [RAX+32],0
            je .L_4169a0

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            jle .L_416ac7

            lea EAX,DWORD PTR [RBP+1]
            mov QWORD PTR [RSP+24],R13
            mov DWORD PTR [RSP+8],0
            shl RAX,3
            mov QWORD PTR [RSP+32],RAX
            mov EAX,4
            mov R13,RAX
            nop
.L_416570:

            mov EDX,DWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_449150]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b500

            lea R8D,DWORD PTR [R14+1]
            mov RDI,QWORD PTR [RSP+24]
            movsxd RAX,R8D
            lea R9,QWORD PTR [RDI+RAX*8]
            xor EAX,EAX
            jmp .L_4165a8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4165a0:

            mov QWORD PTR [R15+RAX*8],R10
            add RAX,1
.L_4165a8:

            mov R10,QWORD PTR [R9+RAX*8]
            lea RSI,QWORD PTR [RIP+.L_449221]
            mov ECX,5
            movsxd RBP,EAX
            lea R11D,DWORD PTR [R8+RAX*1]
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_4165a0

            mov RDI,QWORD PTR [RSP+32]
            mov RAX,RBP
            mov DWORD PTR [RSP+40],R11D
            neg RAX
            lea RDX,QWORD PTR [RDI+RAX*8]
            add RDX,QWORD PTR [RSP+24]
            jmp .L_4165f8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4165f0:

            mov QWORD PTR [R15+RBP*8],RAX
            add RBP,1
.L_4165f8:

            mov RAX,QWORD PTR [RDX+RBP*8]
            lea RSI,QWORD PTR [RIP+.L_449221]
            mov ECX,5
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R12B
            sbb R12B,0
            movsx R12D,R12B
            test R12D,R12D
            jne .L_4165f0

            test EBP,EBP
            mov DWORD PTR [RSP+16],EBP
            je .L_416a05

            lea EAX,DWORD PTR [RBP-1]
            lea R14,QWORD PTR [R15+8]
            mov RDX,R15
            lea R9,QWORD PTR [R14+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416640:

            mov RAX,QWORD PTR [RDX]
            lea RSI,QWORD PTR [RIP+.L_44924e]
            mov ECX,9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_41667a

            mov RCX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RCX+32]
            mov RCX,QWORD PTR [RCX+24]
            mov DWORD PTR [RSI+R13*1],1
            mov DWORD PTR [RCX+R13*1],0
.L_41667a:

            lea RSI,QWORD PTR [RIP+.L_449257]
            mov ECX,9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_4166b1

            mov RCX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RCX+32]
            mov RCX,QWORD PTR [RCX+24]
            mov DWORD PTR [RSI+R13*1],0
            mov DWORD PTR [RCX+R13*1],1
.L_4166b1:

            lea RSI,QWORD PTR [RIP+.L_449253]
            mov RDI,RAX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4166db

            mov RAX,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [RAX+R13*1],1
.L_4166db:

            add RDX,8
            cmp R9,RDX
            jne .L_416640

            mov ECX,DWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_449260]
            xor EAX,EAX
            mov RDI,RBX
            call .L_41b500

            cmp DWORD PTR [RSP+16],1
            jle .L_41672d

            lea EAX,DWORD PTR [RBP-2]
            lea RBP,QWORD PTR [R15+RAX*8+16]
            nop
.L_416710:

            mov RDX,QWORD PTR [R14]
            lea RSI,QWORD PTR [RIP+.L_449278]
            xor EAX,EAX
            mov RDI,RBX
            add R14,8
            call .L_41b500

            cmp RBP,R14
            jne .L_416710
.L_41672d:

            mov EDI,DWORD PTR [RSP+16]
            mov RSI,R15
            call .L_403690

            mov EDX,DWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_44927f]
            mov RBP,RAX
            mov RCX,RAX
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b500

            test RBP,RBP
            je .L_416a41

            mov RAX,QWORD PTR [RBX+32]
            lea RSI,QWORD PTR [RIP+.L_449297]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX+6456]
            mov QWORD PTR [RAX+R13*2],RBP
            xor EAX,EAX
            add R13,4
            call .L_41b500

            add DWORD PTR [RSP+8],1
            mov R14D,DWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+8]
            cmp DWORD PTR [RSP+20],EAX
            jne .L_416570

            mov EDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_4491d8]
            xor EAX,EAX
            mov RDI,RBX
            call .L_41b500

            mov RSI,QWORD PTR [RBX+32]
            mov RCX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RCX+4]
            test EAX,EAX
            je .L_416aed

            mov EAX,2
            mov EDI,DWORD PTR [RSP+8]
            jmp .L_4167e9

            nop
            nop
            nop
            nop
.L_4167d0:

            lea RDX,QWORD PTR [RAX+1]
            lea R9,QWORD PTR [RAX*4]
            mov R13D,DWORD PTR [RCX+RDX*4-4]
            test R13D,R13D
            je .L_41680e

            mov RAX,RDX
.L_4167e9:

            add R12D,1
            cmp R12D,EDI
            jne .L_4167d0

            cmp DWORD PTR [RSP+20],R12D
            je .L_416a99
.L_4167fd:

            movsxd RAX,DWORD PTR [RSP+8]
            add RAX,1
            lea R9,QWORD PTR [RAX*4]
.L_41680e:

            shl RAX,3
.L_416812:

            mov RDI,QWORD PTR [RSI+16]
            mov R8,QWORD PTR [RSI+6456]
            mov R12D,DWORD PTR [RDI+R9*1]
            mov RAX,QWORD PTR [R8+RAX*1]
            test R12D,R12D
            je .L_416a5a

            mov EAX,DWORD PTR [RAX+324]
            mov EDX,1
            test EAX,EAX
            cmove EAX,EDX
            mov DWORD PTR [RBX+320],EAX
.L_416844:

            mov EDX,DWORD PTR [RSP+44]
            mov ECX,EDX
            sub ECX,2
            js .L_41689f

            mov R10,QWORD PTR [RSI+32]
            movsxd RSI,ECX
            lea R9,QWORD PTR [RSI+1]
            mov EBP,DWORD PTR [R10+R9*4]
            lea RAX,QWORD PTR [R9*4]
            test EBP,EBP
            je .L_4168b7

            mov ECX,ECX
            sub EDX,3
            sub RAX,4
            sub RSI,RCX
            movsxd RDX,EDX
            shl RSI,2
            jmp .L_416898
          .byte 0x90
.L_416880:

            mov R11D,DWORD PTR [R10+RAX*1]
            lea R9,QWORD PTR [RDX+1]
            sub RDX,1
            lea RCX,QWORD PTR [RAX-4]
            test R11D,R11D
            je .L_4168b7

            mov RAX,RCX
.L_416898:

            cmp RSI,RAX
            mov ECX,EDX
            jne .L_416880
.L_41689f:

            cmp ECX,-1
            je .L_416abb

            movsxd RCX,ECX
            lea R9,QWORD PTR [RCX+1]
            lea RAX,QWORD PTR [R9*4]
.L_4168b7:

            mov ECX,DWORD PTR [RDI+RAX*1]
            mov RDX,QWORD PTR [R8+R9*8]
            test ECX,ECX
            je .L_416a75

            mov EAX,DWORD PTR [RDX+320]
            test EAX,EAX
            je .L_416aa5
.L_4168d4:

            cmp EAX,2
            mov DWORD PTR [RBX+324],EAX
            lea RCX,QWORD PTR [RIP+.L_44921a]
            lea RAX,QWORD PTR [RIP+.L_449212]
            cmove RCX,RAX
.L_4168ef:

            cmp DWORD PTR [RBX+320],2
            lea RAX,QWORD PTR [RIP+.L_449212]
            lea RDX,QWORD PTR [RIP+.L_44921a]
            lea RSI,QWORD PTR [RIP+.L_4491a8]
            mov RDI,RBX
            cmove RDX,RAX
            xor EAX,EAX
            call .L_41b500

            mov RAX,RBX
.L_41691c:

            add RSP,56
.L_416920:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416930:

            mov RDI,RDX
            mov ECX,14
            mov RSI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_416468

            cmp EBP,-1
            jne .L_416a35

            mov EBP,EAX
            jmp .L_416468
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416960:

            lea RSI,QWORD PTR [RIP+.L_449128]
.L_416967:

            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360
.L_416971:

            mov ESI,4294967246
.L_416976:

            add RSP,56
.L_41697a:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_416210
.L_41698c:

            mov RAX,QWORD PTR [RBX+32]
            mov ESI,12
            mov QWORD PTR [RAX+40],0
            jmp .L_416976
          .byte 0x90
.L_4169a0:

            mov ESI,12
            jmp .L_416976
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4169b0:

            mov ESI,8
            mov EDI,1
            call .L_403740

            test RAX,RAX
            mov R13,RAX
            je .L_41698c

            lea RAX,QWORD PTR [RIP+.L_65d040]
            mov ESI,8
            mov EDI,1
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RAX+40],R13
            call .L_403740

            mov R12,QWORD PTR [RBX+32]
            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_4169a0

            mov R14D,1
            jmp .L_41640d
.L_416a05:

            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_449260]
            xor ECX,ECX
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b500

            jmp .L_41672d
.L_416a20:

            xor EAX,EAX
            jmp .L_41691c
.L_416a27:

            mov DWORD PTR [R12+4],4294967295
            jmp .L_416971
.L_416a35:

            lea RSI,QWORD PTR [RIP+.L_449234]
            jmp .L_416967
.L_416a41:

            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_449180]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360

            jmp .L_416971
.L_416a5a:

            mov EAX,DWORD PTR [RAX+320]
            mov EDX,2
            test EAX,EAX
            cmove EAX,EDX
            mov DWORD PTR [RBX+320],EAX
            jmp .L_416844
.L_416a75:

            mov EAX,DWORD PTR [RDX+324]
            test EAX,EAX
            jne .L_4168d4

            mov DWORD PTR [RBX+324],1
            lea RCX,QWORD PTR [RIP+.L_44921a]
            jmp .L_4168ef
.L_416a99:

            lea RSI,QWORD PTR [RIP+.L_4492ae]
            jmp .L_416967
.L_416aa5:

            mov DWORD PTR [RBX+324],2
            lea RCX,QWORD PTR [RIP+.L_449212]
            jmp .L_4168ef
.L_416abb:

            lea RSI,QWORD PTR [RIP+.L_4492c9]
            jmp .L_416967
.L_416ac7:

            mov EDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_4491d8]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b500

            mov DWORD PTR [RSP+8],0
            mov RSI,QWORD PTR [RBX+32]
            jmp .L_4167fd
.L_416aed:

            mov EAX,8
            mov R9D,4
            jmp .L_416812
.L_416afd:

            nop
            nop
            nop
.L_416b00:

            test RDI,RDI
            je .L_416b10

            jmp .L_4162f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416b10:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_416b3e

            lea RDX,QWORD PTR [RIP+.L_4161e0]
            lea RCX,QWORD PTR [RIP+.L_449300]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_416b3e:

            add RSP,8
            ret 
.L_416b43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416b50:

            xor EAX,EAX
            ret 
.L_416b53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416b60:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+40]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,QWORD PTR [RBX+24]
            call .L_403770

            mov RDI,QWORD PTR [RBX+16]
            call .L_403770

            mov RDI,QWORD PTR [RBX+48]
            call .L_403770

            mov RDI,QWORD PTR [RBX+56]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
.L_416ba3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416bb0:

            test RDI,RDI
            je .L_416bd8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_416bce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_416b60

            mov RDI,RBX
            pop RBX
.L_416bce:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416bd8:

            xor EAX,EAX
            ret 
.L_416bdb:

            nop
            nop
            nop
            nop
            nop
.L_416be0:

            jmp .L_416bb0
.L_416be2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416bf0:

            test RDI,RDI
            je .L_416cd0

            test ESI,ESI
            jne .L_416c00

            ret 
          .byte 0x90
.L_416c00:

            mov EAX,DWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            mov RCX,QWORD PTR [RDI+56]
            lea EDX,DWORD PTR [RAX+RAX*1+2]
            mov RAX,QWORD PTR [RDI+48]
            movsxd RDX,EDX
            shl RDX,3
            cmp ESI,1
            je .L_416ce0

            mov RAX,QWORD PTR [RDI+72]
            movapd XMM2,XMM1
            add RDX,RCX
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM2,QWORD PTR [RAX+8]
.L_416c37:

            movq XMM1,QWORD PTR [RIP+.L_447130]
            movapd XMM4,XMM2
            andpd XMM4,XMM1
            ucomisd XMM4,XMM3
            ja .L_416d00

            andpd XMM1,XMM0
            ucomisd XMM1,XMM3
            ja .L_416d00

            lea RAX,QWORD PTR [RDX-16]
            movsd XMM4,QWORD PTR [RDX-8]
            movsd XMM1,QWORD PTR [RDX-16]
            cmp RCX,RAX
            jae .L_416d20

            sub RDX,RCX
            sub RDX,17
            not RDX
            and RDX,-16
            add RDX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416c90:

            movapd XMM3,XMM2
            movapd XMM5,XMM0
            sub RAX,16
            mulsd XMM3,XMM4
            mulsd XMM5,XMM1
            mulsd XMM4,XMM0
            mulsd XMM1,XMM2
            addsd XMM3,XMM5
            subsd XMM1,XMM4
            addsd XMM3,QWORD PTR [RAX+8]
            cmp RAX,RDX
            addsd XMM1,QWORD PTR [RAX]
            movapd XMM4,XMM3
            jne .L_416c90
.L_416cc6:

            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416cd0:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416ce0:

            mov RCX,QWORD PTR [RDI+64]
            movapd XMM2,XMM1
            add RDX,RAX
            subsd XMM0,QWORD PTR [RCX]
            subsd XMM2,QWORD PTR [RCX+8]
            mov RCX,RAX
            jmp .L_416c37
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416d00:

            sub RSP,8
.L_416d04:

            call __errno_location@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            mov DWORD PTR [RAX],33
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_416d20:

            movapd XMM3,XMM4
            jmp .L_416cc6
.L_416d26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416d30:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,4294967295
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_416bf0

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_416d86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416d90:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,1
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_416bf0

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_416de6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416df0:

            test RDI,RDI
            je .L_416ee8

            test ESI,ESI
            jne .L_416e00

            ret 
          .byte 0x90
.L_416e00:

            mov R8D,DWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            lea EAX,DWORD PTR [R8+1]
            lea EDX,DWORD PTR [R8+2]
            imul EDX,EAX
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            cdqe 
            shl RAX,3
            cmp ESI,1
            mov RCX,RAX
            je .L_416ef8

            add RAX,QWORD PTR [RDI+40]
            add RCX,QWORD PTR [RDI+32]
            mov RDX,RAX
            mov RAX,QWORD PTR [RDI+72]
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM1,QWORD PTR [RAX+8]
.L_416e46:

            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM4,XMM1
            andpd XMM4,XMM2
            ucomisd XMM4,XMM3
            ja .L_416f18

            andpd XMM2,XMM0
            ucomisd XMM2,XMM3
            ja .L_416f18

            test R8D,R8D
            lea RAX,QWORD PTR [RDX-8]
            movsd XMM4,QWORD PTR [RDX-8]
            lea RDX,QWORD PTR [RCX-8]
            movsd XMM5,QWORD PTR [RCX-8]
            jle .L_416edc

            mov ESI,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e90:

            movsd XMM3,QWORD PTR [RAX-8]
            mov ECX,R8D
            sub RAX,8
            movsd XMM2,QWORD PTR [RDX-8]
            sub RDX,8
            nop
            nop
            nop
.L_416ea8:

            mulsd XMM3,XMM1
            sub ECX,1
            sub RAX,8
            mulsd XMM2,XMM0
            sub RDX,8
            cmp ESI,ECX
            addsd XMM3,QWORD PTR [RAX]
            addsd XMM2,QWORD PTR [RDX]
            jle .L_416ea8

            mulsd XMM4,XMM0
            sub ESI,1
            mulsd XMM5,XMM1
            addsd XMM4,XMM3
            addsd XMM5,XMM2
            jne .L_416e90
.L_416edc:

            movapd XMM1,XMM4
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416ee8:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416ef8:

            add RAX,QWORD PTR [RDI+24]
            add RCX,QWORD PTR [RDI+16]
            mov RDX,RAX
            mov RAX,QWORD PTR [RDI+64]
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM1,QWORD PTR [RAX+8]
            jmp .L_416e46
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416f18:

            sub RSP,8
.L_416f1c:

            call __errno_location@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            mov DWORD PTR [RAX],33
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_416f38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416f40:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,4294967295
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_416df0

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_416f96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416fa0:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,1
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_416df0

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_416ff6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417000:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RDX
            mov RBP,RDX
            sub RSP,40
.L_41701d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],0
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+2]
            mov ESI,1
            call .L_403740

            test RAX,RAX
            je .L_417178

            lea RCX,QWORD PTR [RIP+.L_449334]
            mov RDI,RAX
            mov R13,RAX
            mov R8,RBP
            mov RDX,-1
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_403e60

            test EAX,EAX
            mov EDX,EAX
            jne .L_4170b0
.L_41708a:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_41719a

            add RSP,40
.L_4170a4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4170b0:

            lea RCX,QWORD PTR [RIP+.L_449338]
            mov R8,RBP
            mov RDX,-1
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_403e60

            mov RDI,R13
            mov R14,RAX
            call .L_403770

            test R15D,R15D
            jle .L_417190

            lea R13D,DWORD PTR [R15-1]
            lea RAX,QWORD PTR [R13+1]
            mov R13D,1
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41712a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417118:

            cmp BYTE PTR [RAX],44
            jne .L_417153

            lea R14,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+16],R14
.L_417126:

            add R13,1
.L_41712a:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call .L_413770

            cmp QWORD PTR [RSP],R13
            movsd QWORD PTR [R12+R13*8-8],XMM0
            je .L_417190

            test R13D,R13D
            jle .L_417126

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            jne .L_417118
.L_417153:

            lea RSI,QWORD PTR [RIP+.L_449388]
            mov RDX,RBP
            mov ECX,R15D
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360

            xor EDX,EDX
            jmp .L_41708a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417178:

            lea RSI,QWORD PTR [RIP+.L_449320]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360

            xor EDX,EDX
            jmp .L_41708a
.L_417190:

            mov EDX,1
            jmp .L_41708a
.L_41719a:

            call __stack_chk_fail@PLT
.L_41719f:

            nop
.L_4171a0:

            push R13
            lea RAX,QWORD PTR [RIP+.L_416fa0]
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_44933c]
            sub RSP,8
.L_4171bb:

            mov QWORD PTR [RDI+72],RAX
            lea RAX,QWORD PTR [RIP+.L_416f40]
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov QWORD PTR [RDI+80],RAX
            mov QWORD PTR [RDI+40],0
            mov QWORD PTR [RDI+48],0
            mov DWORD PTR [RDI+324],1
            mov DWORD PTR [RDI+320],1
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_403e60

            test EAX,EAX
            je .L_4173f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449341]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449346]
            mov R12,RAX
            call .L_403e60

            test EAX,EAX
            je .L_417408
.L_417243:

            mov ESI,80
            mov EDI,1
            call .L_403740

            test RAX,RAX
            mov RBP,RAX
            je .L_4173d6

            lea R13D,DWORD PTR [R12+R12*1+2]
            mov DWORD PTR [RBP],R12D
            mov ESI,8
            movsxd R12,R13D
            mov DWORD PTR [RBP+4],R13D
            mov RDI,R12
            call .L_403740

            mov ESI,8
            mov QWORD PTR [RBP+48],RAX
            mov RDI,R12
            call .L_403740

            cmp QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],RAX
            je .L_4173a8

            test RAX,RAX
            je .L_4173a8

            mov ESI,16
            mov EDI,1
            call .L_403740

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403740

            cmp QWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],RAX
            je .L_4173ce

            test RAX,RAX
            je .L_4173ce

            mov RSI,QWORD PTR [RBP+48]
            lea RDX,QWORD PTR [RIP+.L_449347]
            mov QWORD PTR [RBX+32],RBP
            mov ECX,R13D
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            mov RSI,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RIP+.L_44934e]
            mov ECX,R13D
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            lea RAX,QWORD PTR [RIP+.L_416d90]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_416d30]
            mov QWORD PTR [RBX+80],RAX
.L_417334:

            mov RSI,QWORD PTR [RBP+64]
            lea RDX,QWORD PTR [RIP+.L_449366]
            mov ECX,2
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            mov RSI,QWORD PTR [RBP+72]
            lea RDX,QWORD PTR [RIP+.L_449371]
            mov ECX,2
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            lea RSI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_44937c]
            mov ECX,1
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            jne .L_417397

            mov RAX,QWORD PTR [RIP+.L_449420]
            mov QWORD PTR [RBP+8],RAX
.L_417397:

            add RSP,8
.L_41739b:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4173a8:

            mov ESI,16
            mov EDI,1
            call .L_403740

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403740

            mov QWORD PTR [RBP+72],RAX
.L_4173ce:

            mov RDI,RBP
            call .L_416b60
.L_4173d6:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_416bb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4173f0:

            lea RSI,QWORD PTR [RIP+.L_4493c0]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b430

            jmp .L_4173d6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417408:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44934d]
            call .L_403e60

            test EAX,EAX
            jne .L_417243

            movsxd RAX,R12D
            mov ESI,80
            mov EDI,1
            lea R13,QWORD PTR [RAX+1]
            add RAX,2
            imul R13,RAX
            call .L_403740

            mov RBP,RAX
            shr R13,1
            test RAX,RAX
            je .L_4173d6

            mov DWORD PTR [RAX+4],R13D
            movsxd R13,R13D
            mov ESI,8
            mov RDI,R13
            mov DWORD PTR [RAX],R12D
            call .L_403740

            mov ESI,8
            mov RDI,R13
            mov QWORD PTR [RBP+16],RAX
            call .L_403740

            mov ESI,8
            mov RDI,R13
            mov QWORD PTR [RBP+24],RAX
            call .L_403740

            mov ESI,8
            mov QWORD PTR [RBP+32],RAX
            mov RDI,R13
            call .L_403740

            cmp QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+40],RAX
            je .L_4173a8

            cmp QWORD PTR [RBP+24],0
            je .L_4173a8

            cmp QWORD PTR [RBP+32],0
            je .L_4173a8

            test RAX,RAX
            je .L_4173a8

            mov ESI,16
            mov EDI,1
            call .L_403740

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403740

            cmp QWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],RAX
            je .L_4173ce

            test RAX,RAX
            je .L_4173ce

            lea EAX,DWORD PTR [R12+1]
            add R12D,2
            mov RSI,QWORD PTR [RBP+16]
            lea RDX,QWORD PTR [RIP+.L_449382]
            mov QWORD PTR [RBX+32],RBP
            mov RDI,RBX
            imul EAX,R12D
            mov R12D,EAX
            shr R12D,31
            add R12D,EAX
            sar R12D,1
            mov ECX,R12D
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            mov RSI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_449354]
            mov ECX,R12D
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            mov RSI,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RIP+.L_44935a]
            mov ECX,R12D
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            je .L_4173d6

            mov RSI,QWORD PTR [RBP+40]
            lea RDX,QWORD PTR [RIP+.L_449360]
            mov ECX,R12D
            mov RDI,RBX
            call .L_417000

            test EAX,EAX
            jne .L_417334

            jmp .L_4173d6
.L_417599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4175a0:

            test RDI,RDI
            je .L_4175b0

            jmp .L_4171a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4175b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4175de

            lea RDX,QWORD PTR [RIP+.L_416be0]
            lea RCX,QWORD PTR [RIP+.L_449400]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4175de:

            add RSP,8
            ret 
.L_4175e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4175f0:

            xor EAX,EAX
            ret 
.L_4175f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417600:

            test RDI,RDI
            je .L_417630

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_417616

            call .L_404200
.L_417616:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_417624

            call .L_403770
.L_417624:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417630:

            xor EAX,EAX
            ret 
.L_417633:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417640:

            xor ESI,ESI
            jmp .L_417600
.L_417644:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417650:

            push RBX
            sub RSP,32

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM0,QWORD PTR [RBX+168]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBX+144]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            subsd XMM4,QWORD PTR [RBX+24]
            subsd XMM1,QWORD PTR [RBX+32]
            movapd XMM5,XMM3
            add RSP,32

            pop RBX
            mulsd XMM0,XMM4
            mulsd XMM5,XMM1
            mulsd XMM3,XMM4
            mulsd XMM1,XMM2
            subsd XMM0,XMM5
            addsd XMM1,XMM3
            ret 
.L_4176d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4176e0:

            sub RSP,56
.L_4176e4:

            mov RDX,QWORD PTR [RSI+32]
            mov RAX,RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RDX+292]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+80]
            test EDI,EDI
            jne .L_417810

            mov ECX,DWORD PTR [RDX+280]
            subsd XMM0,QWORD PTR [RDX]
            subsd XMM1,QWORD PTR [RDX+8]
            subsd XMM2,QWORD PTR [RDX+16]
            test ECX,ECX
            jne .L_417800

            movsd XMM3,QWORD PTR [RIP+.L_4490a0]
            movsd XMM4,QWORD PTR [RDX+200]
            mulsd XMM3,QWORD PTR [RDX+144]
            movsd XMM5,QWORD PTR [RDX+232]
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RDX+224]
            mulsd XMM4,XMM0
            mulsd XMM3,XMM1
            mulsd XMM5,XMM1
            mulsd XMM1,QWORD PTR [RDX+216]
            addsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RDX+248]
            mulsd XMM3,XMM2
            addsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RDX+208]
            mulsd XMM3,XMM0
            mulsd XMM0,QWORD PTR [RDX+192]
            movsd QWORD PTR [RAX+8],XMM4
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RDX+256]
            mulsd XMM5,XMM2
            mulsd XMM2,QWORD PTR [RDX+240]
            addsd XMM0,XMM1
            addsd XMM3,XMM5
            addsd XMM0,XMM2
            movsd QWORD PTR [RAX+16],XMM3
            movsd QWORD PTR [RAX],XMM0
.L_4177e1:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_417848

            add RSP,56
.L_4177f5:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417800:

            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM2
            jmp .L_4177e1
.L_417810:

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RAX
            movsd QWORD PTR [RSP],XMM2
            call .L_417650

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM2
            jmp .L_4177e1
.L_417848:

            call __stack_chk_fail@PLT
.L_41784d:

            nop
            nop
            nop
.L_417850:

            push RBX
            sub RSP,32

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM0,QWORD PTR [RBX+168]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RBX+144]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            movapd XMM5,XMM2
            mulsd XMM2,XMM1
            mulsd XMM5,XMM4
            addsd XMM0,XMM2
            subsd XMM3,XMM5
            addsd XMM0,QWORD PTR [RBX+24]
            addsd XMM3,QWORD PTR [RBX+32]
            add RSP,32

            pop RBX
            movapd XMM1,XMM3
            ret 
.L_4178d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178e0:

            sub RSP,56
.L_4178e4:

            mov RDX,QWORD PTR [RSI+32]
            mov RAX,RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RDX+292]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+80]
            test EDI,EDI
            jne .L_417a30

            mov ECX,DWORD PTR [RDX+280]
            movsd XMM5,QWORD PTR [RDX]
            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+16]
            test ECX,ECX
            jne .L_417a10

            movsd XMM3,QWORD PTR [RDX+216]
            movsd XMM8,QWORD PTR [RDX+224]
            mulsd XMM3,XMM0
            mulsd XMM8,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_4490a0]
            mulsd XMM6,QWORD PTR [RDX+144]
            addsd XMM3,XMM8
            movsd XMM8,QWORD PTR [RDX+232]
            mulsd XMM8,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_4470f0]
            addsd XMM3,XMM8
            movsd XMM8,QWORD PTR [RDX+248]
            mulsd XMM8,XMM1
            mulsd XMM1,QWORD PTR [RDX+200]
            mulsd XMM3,XMM6
            addsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RDX+240]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX+192]
            movsd QWORD PTR [RAX+8],XMM3
            addsd XMM2,XMM8
            movsd XMM8,QWORD PTR [RDX+256]
            mulsd XMM8,XMM4
            mulsd XMM4,QWORD PTR [RDX+208]
            addsd XMM0,XMM1
            addsd XMM2,XMM8
            addsd XMM0,XMM4
            mulsd XMM2,XMM6
            mulsd XMM0,XMM6
            addsd XMM2,XMM7
            addsd XMM0,XMM5
            movsd QWORD PTR [RAX+16],XMM2
            movsd QWORD PTR [RAX],XMM0
.L_4179f9:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_417a68

            add RSP,56
.L_417a0d:

            ret 
          .byte 0x66
          .byte 0x90
.L_417a10:

            addsd XMM0,XMM5
            addsd XMM1,XMM2
            addsd XMM4,XMM7
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM4
            jmp .L_4179f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417a30:

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RAX
            movsd QWORD PTR [RSP],XMM4
            call .L_417850

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM4
            jmp .L_4179f9
.L_417a68:

            call __stack_chk_fail@PLT
.L_417a6d:

            nop
            nop
            nop
.L_417a70:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,4
            sub RSP,8
.L_417a7e:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RBX+272]
            movsd XMM1,QWORD PTR [RBX+48]
            subsd XMM0,QWORD PTR [RBX+264]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX],XMM1
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+8],XMM1
            movsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+16],XMM1
            movsd XMM1,QWORD PTR [RBX+120]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+96]
            movsd QWORD PTR [RBX+72],XMM1
            movsd XMM1,QWORD PTR [RBX+128]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+104]
            movsd QWORD PTR [RBX+80],XMM1
            movsd XMM1,QWORD PTR [RBX+136]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+112]
            movsd QWORD PTR [RBX+88],XMM1
            movsd XMM1,QWORD PTR [RBX+160]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RBX+184]
            addsd XMM1,QWORD PTR [RBX+152]
            addsd XMM0,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBX+144],XMM1
            movsd QWORD PTR [RBX+168],XMM0
            call .L_41b300

            cmp EAX,2
            ja .L_417b58

            add RSP,8
.L_417b4e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b58:

            movsd XMM0,QWORD PTR [RBX+272]
            lea RSI,QWORD PTR [RIP+.L_449428]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RIP+.L_44955c]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_449563]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_44956a]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RIP+.L_4490a0]
            lea RSI,QWORD PTR [RIP+.L_449555]
            mov RDI,RBP
            mov EAX,1
            mulsd XMM0,QWORD PTR [RBX+144]
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+72]
            lea RSI,QWORD PTR [RIP+.L_44955b]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+80]
            lea RSI,QWORD PTR [RIP+.L_449562]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+88]
            lea RSI,QWORD PTR [RIP+.L_449569]
            mov RDI,RBP
            mov EAX,1
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+168]
            add RSP,8
.L_417c39:

            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_449570]
            mov EAX,1
            pop RBX
            pop RBP
            jmp .L_41b500
.L_417c4f:

            nop
.L_417c50:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_417c5d:

            mov RBX,QWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RBX+284]
            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RBX+88]
            test EDX,EDX
            je .L_417d78

            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            movapd XMM5,XMM2
            movsd QWORD PTR [RBX+200],XMM0
            xorpd XMM5,XMM4
            movsd QWORD PTR [RBX+232],XMM3
            xorpd XMM0,XMM4
            movsd QWORD PTR [RBX+240],XMM2
            xorpd XMM3,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBX+208],XMM5
            movsd QWORD PTR [RBX+192],XMM1
            movsd QWORD PTR [RBX+216],XMM0
            movsd QWORD PTR [RBX+224],XMM1
            movsd QWORD PTR [RBX+248],XMM3
            movsd QWORD PTR [RBX+256],XMM1
.L_417ce6:

            mov EAX,DWORD PTR [RBX+288]
            test EAX,EAX
            je .L_417d50

            movsd XMM0,QWORD PTR [RBX+200]
            movsd XMM1,QWORD PTR [RBX+216]
            movsd QWORD PTR [RBX+216],XMM0
            movsd QWORD PTR [RBX+200],XMM1
            movsd XMM0,QWORD PTR [RBX+208]
            movsd XMM1,QWORD PTR [RBX+240]
            movsd QWORD PTR [RBX+240],XMM0
            movsd QWORD PTR [RBX+208],XMM1
            movsd XMM0,QWORD PTR [RBX+232]
            movsd XMM1,QWORD PTR [RBX+248]
            movsd QWORD PTR [RBX+248],XMM0
            movsd QWORD PTR [RBX+232],XMM1
.L_417d50:

            mov RDI,QWORD PTR [RBP]
            mov ESI,4
            call .L_41b300

            cmp EAX,2
            ja .L_417ef8

            add RSP,72
.L_417d6b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417d78:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RSI,R13
            movsd XMM1,QWORD PTR [RSP+48]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM6,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM3,XMM5
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM6,XMM7
            movsd QWORD PTR [RBX+240],XMM7
            mulsd XMM3,XMM1
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM8,XMM6
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX+192],XMM3
            movapd XMM3,XMM2
            mulsd XMM8,XMM1
            mulsd XMM3,XMM4
            addsd XMM3,XMM8
            movapd XMM8,XMM0
            mulsd XMM8,XMM4
            movsd QWORD PTR [RBX+200],XMM3
            movapd XMM3,XMM2
            mulsd XMM3,XMM7
            movapd XMM9,XMM3
            mulsd XMM9,XMM1
            subsd XMM8,XMM9
            movq XMM9,QWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RBX+208],XMM8
            movapd XMM8,XMM5
            xorpd XMM8,XMM9
            mulsd XMM8,XMM4
            mulsd XMM4,XMM3
            movsd QWORD PTR [RBX+216],XMM8
            movapd XMM8,XMM2
            mulsd XMM2,XMM5
            mulsd XMM8,XMM1
            mulsd XMM1,XMM0
            xorpd XMM0,XMM9
            movsd QWORD PTR [RBX+256],XMM2
            subsd XMM8,XMM6
            addsd XMM1,XMM4
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBX+224],XMM8
            movsd QWORD PTR [RBX+232],XMM1
            movsd QWORD PTR [RBX+248],XMM0
            jmp .L_417ce6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417ef8:

            lea RSI,QWORD PTR [RIP+.L_44957a]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b500

            movsd XMM2,QWORD PTR [RBX+208]
            lea RSI,QWORD PTR [RIP+.L_44958b]
            movsd XMM1,QWORD PTR [RBX+200]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+192]
            mov EAX,3
            call .L_41b500

            movsd XMM2,QWORD PTR [RBX+232]
            lea RSI,QWORD PTR [RIP+.L_44958b]
            movsd XMM1,QWORD PTR [RBX+224]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+216]
            mov EAX,3
            call .L_41b500

            movsd XMM0,QWORD PTR [RBX+240]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RBX+256]
            lea RSI,QWORD PTR [RIP+.L_44958b]
            movsd XMM1,QWORD PTR [RBX+248]
            add RSP,72
.L_417f87:

            pop RBX
            pop RBP
            pop R12
            pop R13
            mov EAX,3
            jmp .L_41b500
.L_417f97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417fa0:

            push RBX
            mov RBX,RDI
            sub RSP,64
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,QWORD PTR [RAX+272]
            jp .L_418050

            jne .L_418050
.L_417fd2:

            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
.L_417fe7:

            call .L_4176e0

            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RSP+112],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            add RSP,32
.L_418031:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41807c

            add RSP,64
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418050:

            movsd QWORD PTR [RAX+272],XMM0
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_417a70

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RSI
            call .L_417c50

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_417fd2
.L_41807c:

            call __stack_chk_fail@PLT
.L_418081:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418090:

            push RBX
            mov RBX,RDI
            sub RSP,64
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,QWORD PTR [RAX+272]
            jp .L_418140

            jne .L_418140
.L_4180c2:

            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
.L_4180d7:

            call .L_4178e0

            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RSP+112],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            add RSP,32
.L_418121:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41816c

            add RSP,64
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418140:

            movsd QWORD PTR [RAX+272],XMM0
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_417a70

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RSI
            call .L_417c50

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_4180c2
.L_41816c:

            call __stack_chk_fail@PLT
.L_418171:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418180:

            push RBP
            push RBX
            mov ESI,296
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_418193:

            call .L_403740

            test RAX,RAX
            mov ESI,12
            je .L_41864f

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_418090]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_448489]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_417fa0]
            mov DWORD PTR [RBX+320],1
            mov DWORD PTR [RBX+324],1
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_4178e0]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_4176e0]
            mov QWORD PTR [RBX+64],RAX
            lea RAX,QWORD PTR [RIP+.L_417850]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_417650]
            mov QWORD PTR [RBX+48],RAX
            call .L_403e60

            test EAX,EAX
            jne .L_418780
.L_41821e:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495a8]
            call .L_403e60

            test EAX,EAX
            jne .L_418760
.L_418239:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ab]
            call .L_403e60

            test EAX,EAX
            jne .L_418740
.L_418254:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ae]
            call .L_403e60

            test EAX,EAX
            jne .L_418710
.L_41826f:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495b2]
            call .L_403e60

            test EAX,EAX
            jne .L_4186e0
.L_41828a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495b6]
            call .L_403e60

            test EAX,EAX
            jne .L_4186b0
.L_4182a5:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ba]
            call .L_403e60

            test EAX,EAX
            jne .L_418660
.L_4182c0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb5]
            call .L_403e60

            test EAX,EAX
            jne .L_4185f8

            pxor XMM5,XMM5
            movsd QWORD PTR [RSP],XMM5
.L_4182e4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c1]
            call .L_403e60

            test EAX,EAX
            jne .L_418800
.L_4182ff:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c9]
            call .L_403e60

            test EAX,EAX
            jne .L_4187e0
.L_41831a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d1]
            call .L_403e60

            test EAX,EAX
            jne .L_4187c0
.L_418335:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d9]
            call .L_403e60

            test EAX,EAX
            jne .L_418928
.L_418350:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495e3]
            call .L_403e60

            test EAX,EAX
            jne .L_4188f0
.L_41836b:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ed]
            call .L_403e60

            test EAX,EAX
            jne .L_4188b8
.L_418386:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495f7]
            call .L_403e60

            test EAX,EAX
            jne .L_418880
.L_4183a1:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449607]
            call .L_403e60

            test EAX,EAX
            jne .L_418860
.L_4183bc:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44960f]
            call .L_403e60

            test EAX,EAX
            jne .L_418840
.L_4183d7:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44961d]
            call .L_403e60

            test EAX,EAX
            jne .L_418820
.L_4183f2:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449629]
            call .L_403e60

            test EAX,EAX
            je .L_418413

            mov DWORD PTR [RBP+284],1
.L_418413:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449631]
            call .L_403e60

            test EAX,EAX
            je .L_418434

            mov DWORD PTR [RBP+288],1
.L_418434:

            movdqu XMM0,XMMWORD PTR [RBP+24]
            mov ESI,4
            mov RAX,QWORD PTR [RBP+40]
            mov RDI,QWORD PTR [RBX]
            movups XMMWORD PTR [RBP],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+96]
            mov QWORD PTR [RBP+16],RAX
            mov RAX,QWORD PTR [RBP+112]
            movups XMMWORD PTR [RBP+72],XMM0
            movsd XMM0,QWORD PTR [RBP+152]
            mov QWORD PTR [RBP+88],RAX
            movsd QWORD PTR [RBP+144],XMM0
            movsd XMM0,QWORD PTR [RBP+176]
            movsd QWORD PTR [RBP+168],XMM0
            call .L_41b300

            cmp EAX,1
            jbe .L_418597

            lea RSI,QWORD PTR [RIP+.L_44963c]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b430

            movsd XMM2,QWORD PTR [RBP+16]
            lea RSI,QWORD PTR [RIP+.L_449460]
            movsd XMM1,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP]
            mov EAX,3
            call .L_41b430

            movsd XMM3,QWORD PTR [RIP+.L_448270]
            lea RSI,QWORD PTR [RIP+.L_449488]
            movsd XMM2,QWORD PTR [RBP+88]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RBP+80]
            mov EAX,3
            movsd XMM0,QWORD PTR [RBP+72]
            divsd XMM2,XMM3
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            call .L_41b430

            mov ECX,DWORD PTR [RBP+288]
            mov EDX,DWORD PTR [RBP+284]
            lea RSI,QWORD PTR [RIP+.L_4494b0]
            movsd XMM0,QWORD PTR [RBP+144]
            mov RDI,RBX
            mov EAX,1
            call .L_41b430

            movsd XMM2,QWORD PTR [RBP+64]
            lea RSI,QWORD PTR [RIP+.L_4494e0]
            movsd XMM1,QWORD PTR [RBP+56]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+48]
            mov EAX,3
            call .L_41b430

            movsd XMM2,QWORD PTR [RBP+136]
            lea RSI,QWORD PTR [RIP+.L_449508]
            movsd XMM1,QWORD PTR [RBP+128]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+120]
            mov EAX,3
            call .L_41b430

            movsd XMM2,QWORD PTR [RBP+272]
            lea RSI,QWORD PTR [RIP+.L_449530]
            movsd XMM1,QWORD PTR [RBP+264]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+160]
            mov EAX,3
            call .L_41b430
.L_418597:

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,QWORD PTR [RBP+72]
            jp .L_4187a0

            jne .L_4187a0

            ucomisd XMM4,QWORD PTR [RBP+80]
            jp .L_4187a0

            jne .L_4187a0

            ucomisd XMM4,QWORD PTR [RBP+88]
            jp .L_4187a0

            jne .L_4187a0

            ucomisd XMM4,QWORD PTR [RBP+144]
            jp .L_4187a0

            jne .L_4187a0

            mov DWORD PTR [RBP+280],1
            jmp .L_4187b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4185f8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44960c]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ba]
            mov QWORD PTR [RBP+152],RAX
            call .L_403e60

            test EAX,EAX
            je .L_418960

            pxor XMM6,XMM6
            ucomisd XMM6,QWORD PTR [RBP+152]
            movsd QWORD PTR [RSP],XMM6
            jp .L_4182e4

            jne .L_4182e4

            mov ESI,52
.L_41864f:

            add RSP,24
.L_418653:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_417600
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418660:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449600]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RSP]
            mov DWORD PTR [RBP+292],1
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            mov QWORD PTR [RBP+152],RAX
            movsd QWORD PTR [RBP+176],XMM0
            jmp .L_4182c0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4186b0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495f3]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+112],XMM0
            jmp .L_4182a5
          .byte 0x66
          .byte 0x90
.L_4186e0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495e9]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+104],XMM0
            jmp .L_41828a
          .byte 0x66
          .byte 0x90
.L_418710:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495df]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+96],XMM0
            jmp .L_41826f
          .byte 0x66
          .byte 0x90
.L_418740:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d6]
            call .L_403e60

            mov QWORD PTR [RBP+40],RAX
            jmp .L_418254
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418760:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ce]
            call .L_403e60

            mov QWORD PTR [RBP+32],RAX
            jmp .L_418239
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418780:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c6]
            call .L_403e60

            mov QWORD PTR [RBP+24],RAX
            jmp .L_41821e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187a0:

            mov RDI,RBX
            call .L_417a70

            mov RDI,RBX
            call .L_417c50
.L_4187b0:

            add RSP,24
.L_4187b4:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4187c0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d5]
            call .L_403e60

            mov QWORD PTR [RBP+64],RAX
            jmp .L_418335
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187e0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495cd]
            call .L_403e60

            mov QWORD PTR [RBP+56],RAX
            jmp .L_41831a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418800:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c5]
            call .L_403e60

            mov QWORD PTR [RBP+48],RAX
            jmp .L_4182ff
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418820:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449623]
            call .L_403e60

            mov QWORD PTR [RBP+272],RAX
            jmp .L_4183f2
          .byte 0x90
.L_418840:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449616]
            call .L_403e60

            mov QWORD PTR [RBP+264],RAX
            jmp .L_4183d7
          .byte 0x90
.L_418860:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44960b]
            call .L_403e60

            mov QWORD PTR [RBP+160],RAX
            jmp .L_4183bc
          .byte 0x90
.L_418880:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495ff]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+184],XMM0
            jmp .L_4183a1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4188b8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495f2]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+136],XMM0
            jmp .L_418386
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4188f0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495e8]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+128],XMM0
            jmp .L_41836b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418928:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495de]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            movsd QWORD PTR [RBP+120],XMM0
            jmp .L_418350
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418960:

            pxor XMM7,XMM7
            movsd QWORD PTR [RSP],XMM7
            jmp .L_4182e4
.L_41896e:

            nop
            nop
.L_418970:

            test RDI,RDI
            je .L_418980

            jmp .L_418180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418980:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4189ae

            lea RDX,QWORD PTR [RIP+.L_417640]
            lea RCX,QWORD PTR [RIP+.L_449660]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4189ae:

            add RSP,8
            ret 
.L_4189b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4189c0:

            xor EAX,EAX
            ret 
.L_4189c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4189d0:

            test RDI,RDI
            je .L_4189f0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_4189e6

            call .L_404200
.L_4189e6:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0x90
.L_4189f0:

            xor EAX,EAX
            ret 
.L_4189f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418a00:

            xor ESI,ESI
            jmp .L_4189d0
.L_418a04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418a10:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_418a18:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+464],0
            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_418a80

            mov RAX,RSP
            mov RDI,RSI
            lea RCX,QWORD PTR [RSI+472]
            lea RDX,QWORD PTR [RSI+464]
            lea RSI,QWORD PTR [RAX+16]
            mov R9D,1
            xor R8D,R8D
            push RSI
.L_418a68:

            lea RSI,QWORD PTR [RAX+8]
            push RSI
            lea RSI,QWORD PTR [RIP+.L_44968f]
            push RAX
            push 0
            call .L_40bd10

            add RSP,32
.L_418a80:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_418aaa

            add RSP,32
            pop RBX
            ret 
.L_418aaa:

            call __stack_chk_fail@PLT
.L_418aaf:

            nop
.L_418ab0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_418a10

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_418b24

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_418b24:

            call __stack_chk_fail@PLT
.L_418b29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418b30:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_418b38:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+464],0
            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_418ba3

            mov RAX,RSP
            mov RDI,RSI
            lea RCX,QWORD PTR [RSI+472]
            lea RDX,QWORD PTR [RSI+464]
            lea RSI,QWORD PTR [RAX+16]
            mov R9D,1
            mov R8D,1
            push RSI
.L_418b8b:

            lea RSI,QWORD PTR [RAX+8]
            push RSI
            lea RSI,QWORD PTR [RIP+.L_44968f]
            push RAX
            push 0
            call .L_40bd10

            add RSP,32
.L_418ba3:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_418bcd

            add RSP,32
            pop RBX
            ret 
.L_418bcd:

            call __stack_chk_fail@PLT
.L_418bd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418be0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_418b30

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_418c54

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_418c54:

            call __stack_chk_fail@PLT
.L_418c59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418c60:

            push RBX
.L_418c61:

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_449696]
            call .L_403e60

            test EAX,EAX
            je .L_418d10

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44968f]
            call .L_403e60

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+472]
            mov RSI,RAX
            call .L_40b610

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+464],RAX
            call .L_4041f0

            test EAX,EAX
            jne .L_418d30

            lea RAX,QWORD PTR [RIP+.L_418be0]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_418ab0]
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_418b30]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_418a10]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            pop RBX
.L_418d0b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418d10:

            lea RSI,QWORD PTR [RIP+.L_4496a0]
            mov RDI,RBX
            call .L_41b360

            mov RDI,RBX
            mov ESI,4294967295
            pop RBX
            jmp .L_4189d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418d30:

            lea RSI,QWORD PTR [RIP+.L_4496c8]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360

            mov RDI,QWORD PTR [RBX+464]
            call .L_403730

            mov QWORD PTR [RBX+464],0
            mov RDI,RBX
            mov ESI,4294967258
            pop RBX
            jmp .L_4189d0
.L_418d66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418d70:

            test RDI,RDI
            je .L_418d80

            jmp .L_418c60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418d80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_418dae

            lea RDX,QWORD PTR [RIP+.L_418a00]
            lea RCX,QWORD PTR [RIP+.L_449700]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_418dae:

            add RSP,8
            ret 
.L_418db3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418dc0:

            xor EAX,EAX
            ret 
.L_418dc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418dd0:

            test RDI,RDI
            je .L_418df0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_418de6

            call .L_404200
.L_418de6:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0x90
.L_418df0:

            xor EAX,EAX
            ret 
.L_418df3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e00:

            xor ESI,ESI
            jmp .L_418dd0
.L_418e04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e10:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,32
            mov RSI,QWORD PTR [RSI+464]
            mov RDX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_418e7d

            sub RSP,8
            xor R9D,R9D
            mov R8D,1
            lea RCX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+472]
            push RDI
            lea RDI,QWORD PTR [RCX+8]
            push RDI
            mov RDI,QWORD PTR [RAX]
            push RCX
            xor ECX,ECX
            call .L_4467c0

            add RSP,32
.L_418e7d:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_418ea7

            add RSP,32
            pop RBX
            ret 
.L_418ea7:

            call __stack_chk_fail@PLT
.L_418eac:

            nop
            nop
            nop
            nop
.L_418eb0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_418e10

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_418f24

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_418f24:

            call __stack_chk_fail@PLT
.L_418f29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418f30:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,32
            mov RSI,QWORD PTR [RSI+464]
            mov RDX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_418fa0

            sub RSP,8
            xor R9D,R9D
            mov R8D,1
            lea RCX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+472]
            push RDI
            lea RDI,QWORD PTR [RCX+8]
            push RDI
            mov RDI,QWORD PTR [RAX]
            push RCX
            mov ECX,1
            call .L_4467c0

            add RSP,32
.L_418fa0:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_418fca

            add RSP,32
            pop RBX
            ret 
.L_418fca:

            call __stack_chk_fail@PLT
.L_418fcf:

            nop
.L_418fd0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_418f30

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_419044

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_419044:

            call __stack_chk_fail@PLT
.L_419049:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419050:

            push RBX
.L_419051:

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_449696]
            call .L_403e60

            test EAX,EAX
            je .L_419100

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44968f]
            call .L_403e60

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+472]
            mov RSI,RAX
            call .L_40b610

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+464],RAX
            call .L_4041f0

            test EAX,EAX
            jne .L_419120

            lea RAX,QWORD PTR [RIP+.L_418fd0]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_418eb0]
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_418f30]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_418e10]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            pop RBX
.L_4190fb:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419100:

            lea RSI,QWORD PTR [RIP+.L_449718]
            mov RDI,RBX
            call .L_41b360

            mov RDI,RBX
            mov ESI,4294967295
            pop RBX
            jmp .L_418dd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419120:

            lea RSI,QWORD PTR [RIP+.L_449740]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41b360

            mov RDI,RBX
            mov ESI,4294967258
            pop RBX
            jmp .L_418dd0
.L_41913f:

            nop
.L_419140:

            test RDI,RDI
            je .L_419150

            jmp .L_419050
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419150:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41917e

            lea RDX,QWORD PTR [RIP+.L_418e00]
            lea RCX,QWORD PTR [RIP+.L_449770]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41917e:

            add RSP,8
            ret 
.L_419183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419190:

            xor EAX,EAX
            ret 
.L_419193:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4191a0:

            ret 
.L_4191a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4191b0:

            movsd XMM1,QWORD PTR [RIP+.L_449860]
            mov ECX,1859
            ucomisd XMM0,XMM1
            jb .L_419298

            movsd XMM3,QWORD PTR [RIP+.L_449868]
            mov ESI,1374389535
            movapd XMM4,XMM3
            jmp .L_4191e2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4191e0:

            mov ECX,EAX
.L_4191e2:

            mov EDI,ECX
            and EDI,3
            jne .L_4191fb

            mov EAX,ECX
            movapd XMM2,XMM4
            mul ESI
            shr EDX,5
            imul EDX,EDX,100
            cmp ECX,EDX
            jne .L_419218
.L_4191fb:

            mov EAX,ECX
            movapd XMM2,XMM3
            mul ESI
            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_419218

            movsd XMM2,QWORD PTR [RIP+.L_449870]
.L_419218:

            addsd XMM1,XMM2
            lea EAX,DWORD PTR [RCX+1]
            ucomisd XMM0,XMM1
            jae .L_4191e0

            pxor XMM3,XMM3
            mov EDX,1374389535
            mov EAX,ECX
            mul EDX
            test EDI,EDI
            cvtsi2sd XMM3,ECX
            jne .L_419268

            mov EAX,EDX
            shr EAX,5
            imul EAX,EAX,100
            cmp ECX,EAX
            je .L_419268
.L_419246:

            movsd XMM2,QWORD PTR [RIP+.L_449868]
            subsd XMM1,XMM2
            subsd XMM0,XMM1
            movapd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419268:

            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_419246

            movsd XMM2,QWORD PTR [RIP+.L_449870]
            subsd XMM1,XMM2
            subsd XMM0,XMM1
            movapd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419298:

            addsd XMM0,QWORD PTR [RIP+.L_449880]
            movsd XMM1,QWORD PTR [RIP+.L_449870]
            movsd XMM3,QWORD PTR [RIP+.L_449878]
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
.L_4192b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4192c0:

            mulsd XMM0,QWORD PTR [RIP+.L_449888]
            addsd XMM0,QWORD PTR [RIP+.L_449890]
            ret 
.L_4192d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4192e0:

            subsd XMM0,QWORD PTR [RIP+.L_449890]
            divsd XMM0,QWORD PTR [RIP+.L_449888]
            ret 
.L_4192f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419300:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_65ca20]
            movsxd RDX,DWORD PTR [RAX+8]
            movsxd RAX,DWORD PTR [RAX+12]
            shl RDX,5
            shl RAX,5
            movsd XMM2,QWORD PTR [RCX+RDX*1+24]
            divsd XMM2,QWORD PTR [RCX+RAX*1+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_419330:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_65ca20]
            movsxd RDX,DWORD PTR [RAX+12]
            movsxd RAX,DWORD PTR [RAX+8]
            shl RDX,5
            shl RAX,5
            movsd XMM2,QWORD PTR [RCX+RDX*1+24]
            divsd XMM2,QWORD PTR [RCX+RAX*1+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_419360:

            mov RCX,QWORD PTR [RSI+32]
            mov RAX,RDI
            lea RDX,QWORD PTR [RIP+.L_65ca20]
            movsd XMM2,QWORD PTR [RSP+16]
            movsxd RDI,DWORD PTR [RCX+8]
            movsxd RSI,DWORD PTR [RCX+12]
            shl RDI,5
            shl RSI,5
            movsd XMM0,QWORD PTR [RDX+RDI*1+24]
            divsd XMM0,QWORD PTR [RDX+RSI*1+24]
            movsxd RSI,DWORD PTR [RCX+16]
            movsxd RCX,DWORD PTR [RCX+20]
            shl RSI,5
            shl RCX,5
            movsd XMM1,QWORD PTR [RDX+RSI*1+24]
            divsd XMM1,QWORD PTR [RDX+RCX*1+24]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+8],XMM2
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+16],XMM1
            ret 
.L_4193cb:

            nop
            nop
            nop
            nop
            nop
.L_4193d0:

            mov RCX,QWORD PTR [RSI+32]
            mov RAX,RDI
            lea RDX,QWORD PTR [RIP+.L_65ca20]
            movsd XMM2,QWORD PTR [RSP+16]
            movsxd RDI,DWORD PTR [RCX+12]
            movsxd RSI,DWORD PTR [RCX+8]
            shl RDI,5
            shl RSI,5
            movsd XMM0,QWORD PTR [RDX+RDI*1+24]
            divsd XMM0,QWORD PTR [RDX+RSI*1+24]
            movsxd RSI,DWORD PTR [RCX+20]
            movsxd RCX,DWORD PTR [RCX+16]
            shl RSI,5
            shl RCX,5
            movsd XMM1,QWORD PTR [RDX+RSI*1+24]
            divsd XMM1,QWORD PTR [RDX+RCX*1+24]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+8],XMM2
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+16],XMM1
            ret 
.L_41943b:

            nop
            nop
            nop
            nop
            nop
.L_419440:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_65ca20]
            mov RBP,RDI
            sub RSP,40
.L_419450:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM2,QWORD PTR [RSP+64]
            movsxd RCX,DWORD PTR [RBX+8]
            movsxd RDX,DWORD PTR [RBX+12]
            shl RCX,5
            shl RDX,5
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            movsxd RCX,DWORD PTR [RBX+16]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX+20]
            shl RCX,5
            shl RDX,5
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX]
            test EDX,EDX
            mulsd XMM1,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            js .L_4194d0

            lea RAX,QWORD PTR [RIP+.L_65d060]
            shl RDX,5
            movsd XMM0,QWORD PTR [RSP+88]
            call QWORD PTR [RAX+RDX*1+8]
.L_4194d0:

            movsxd RDX,DWORD PTR [RBX+4]
            test EDX,EDX
            js .L_4194e7

            lea RAX,QWORD PTR [RIP+.L_65d060]
            shl RDX,5
            call QWORD PTR [RAX+RDX*1+16]
.L_4194e7:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,RBP
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [RBP+8],XMM4
            movsd QWORD PTR [RBP+16],XMM5
            movsd QWORD PTR [RBP+24],XMM0
            add RSP,40
.L_419514:

            pop RBX
            pop RBP
            ret 
.L_419517:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419520:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_65ca20]
            mov RBP,RDI
            sub RSP,40
.L_419530:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM2,QWORD PTR [RSP+64]
            movsxd RCX,DWORD PTR [RBX+12]
            movsxd RDX,DWORD PTR [RBX+8]
            shl RCX,5
            shl RDX,5
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            movsxd RCX,DWORD PTR [RBX+20]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX+16]
            shl RCX,5
            shl RDX,5
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            mov EAX,DWORD PTR [RBX]
            movsxd RDX,DWORD PTR [RBX+4]
            test EAX,EAX
            mulsd XMM1,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            js .L_4195b6

            lea RAX,QWORD PTR [RIP+.L_65d060]
            shl RDX,5
            movsd XMM0,QWORD PTR [RSP+88]
            call QWORD PTR [RAX+RDX*1+8]

            mov EDX,DWORD PTR [RBX+4]
.L_4195b6:

            test EDX,EDX
            js .L_4195cc

            movsxd RAX,DWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_65d060]
            shl RAX,5
            call QWORD PTR [RDX+RAX*1+16]
.L_4195cc:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,RBP
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [RBP+8],XMM4
            movsd QWORD PTR [RBP+16],XMM5
            movsd QWORD PTR [RBP+24],XMM0
            add RSP,40
.L_4195f9:

            pop RBX
            pop RBP
            ret 
.L_4195fc:

            nop
            nop
            nop
            nop
.L_419600:

            movsd XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_447a80]
            movapd XMM2,XMM0
            andpd XMM1,XMM3
            ucomisd XMM4,XMM1
            jbe .L_419655

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM3,XMM0
            cvtsi2sd XMM1,RAX
            movapd XMM2,XMM1
            cmpnlesd XMM2,XMM0
            andpd XMM2,XMM4
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM3
.L_419655:

            cvttsd2si ECX,XMM2
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            cvtsi2sd XMM1,ECX
            lea EAX,DWORD PTR [RCX-1859]
            imul EAX,EAX,365
            add EAX,45
            test CL,3
            cvtsi2sd XMM2,EAX
            subsd XMM0,XMM1
            jne .L_419710

            mov EAX,ECX
            mov EDX,1374389535
            imul EDX
            mov EAX,ECX
            sar EAX,31
            movsd XMM1,QWORD PTR [RIP+.L_449868]
            sar EDX,5
            sub EDX,EAX
            imul EDX,EDX,100
            cmp ECX,EDX
            je .L_419710
.L_4196a7:

            mulsd XMM0,XMM1
            sub ECX,1
            cmp ECX,1858
            addsd XMM0,XMM2
            jle .L_41970e

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mov ESI,1374389535
            jmp .L_4196ed
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4196d0:

            mov EAX,ECX
            mul ESI
            shr EDX,5
            imul EDX,EDX,100
            cmp ECX,EDX
            je .L_4196f2
.L_4196de:

            sub ECX,1
            addsd XMM0,XMM1
            cmp ECX,1858
            je .L_41970e
.L_4196ed:

            test CL,3
            je .L_4196d0
.L_4196f2:

            mov EAX,ECX
            mul ESI
            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_4196de

            sub ECX,1
            cmp ECX,1858
            jne .L_4196ed
.L_41970e:

            ret 
.L_419710:

            mov EAX,ECX
            mov EDX,1374389535
            imul EDX
            mov EAX,ECX
            sar EAX,31
            movsd XMM1,QWORD PTR [RIP+.L_449868]
            sar EDX,7
            sub EDX,EAX
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_4196a7

            movsd XMM1,QWORD PTR [RIP+.L_449870]
            jmp .L_4196a7
.L_419746:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419750:

            test RDI,RDI
            je .L_419770

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_419766

            call .L_404200
.L_419766:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0x90
.L_419770:

            xor EAX,EAX
            ret 
.L_419773:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419780:

            xor ESI,ESI
            jmp .L_419750
.L_419784:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419790:

            push R15
            push R14
            mov ESI,24
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,8
.L_4197ab:

            call .L_403740

            test RAX,RAX
            mov ESI,12
            je .L_419b35

            mov QWORD PTR [RBP+32],RAX
            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_419440]
            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_449786]
            mov QWORD PTR [RBP+72],RAX
            lea RAX,QWORD PTR [RIP+.L_419520]
            mov DWORD PTR [RBP+320],2
            mov DWORD PTR [RBP+324],2
            mov QWORD PTR [RBP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_419360]
            mov QWORD PTR [RBP+56],RAX
            lea RAX,QWORD PTR [RIP+.L_4193d0]
            mov QWORD PTR [RBP+64],RAX
            lea RAX,QWORD PTR [RIP+.L_419300]
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_419330]
            mov QWORD PTR [RBP+48],RAX
            mov QWORD PTR [R15],-1
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_4198a5

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ca20]
            test RSI,RSI
            jne .L_419878

            jmp .L_419b30
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419860:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_419878:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_419860

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497af]
            mov DWORD PTR [R15+8],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_4198a5:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_44978d]
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_419925

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ca20]
            test RSI,RSI
            jne .L_4198f8

            jmp .L_419b30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4198e0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_4198f8:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_4198e0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497be]
            mov DWORD PTR [R15+12],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_419925:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_449795]
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_4199a5

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ca20]
            test RSI,RSI
            jne .L_419978

            jmp .L_419b30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419960:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_419978:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_419960

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497ce]
            mov DWORD PTR [R15+16],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_4199a5:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_44979b]
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_419a25

            mov RSI,QWORD PTR [RIP+.L_65ca20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ca20]
            test RSI,RSI
            jne .L_4199f8

            jmp .L_419b30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4199e0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_4199f8:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_4199e0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497dc]
            mov DWORD PTR [R15+20],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_419a25:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_4497a2]
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_419aa4

            mov RSI,QWORD PTR [RIP+.L_65d060]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65d060]
            test RSI,RSI
            jne .L_419a78

            jmp .L_419b30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419a60:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_419a78:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_419a60

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497eb]
            mov DWORD PTR [R15],EBX
            mov RDX,QWORD PTR [R12+R13*1+24]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_419aa4:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_4497a8]
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            je .L_419b21

            mov RSI,QWORD PTR [RIP+.L_65d060]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65d060]
            test RSI,RSI
            jne .L_419af4

            jmp .L_419b30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ae0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_419b30
.L_419af4:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_419ae0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_4497f9]
            mov DWORD PTR [R15+4],EBX
            mov RDX,QWORD PTR [R12+R13*1+24]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41b430
.L_419b21:

            pop RDX
.L_419b22:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_419b30:

            mov ESI,4294967288
.L_419b35:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_419750
.L_419b4b:

            nop
            nop
            nop
            nop
            nop
.L_419b50:

            test RDI,RDI
            je .L_419b60

            jmp .L_419790
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419b60:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_419b8e

            lea RDX,QWORD PTR [RIP+.L_419780]
            lea RCX,QWORD PTR [RIP+.L_449850]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_419b8e:

            add RSP,8
            ret 
.L_419b93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419ba0:

            xor EAX,EAX
            ret 
.L_419ba3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419bb0:

            test RDI,RDI
            je .L_419be0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_419bc6

            call .L_404200
.L_419bc6:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_419bd4

            call .L_403770
.L_419bd4:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419be0:

            xor EAX,EAX
            ret 
.L_419be3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419bf0:

            xor ESI,ESI
            jmp .L_419bb0
.L_419bf4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c00:

            sub RSP,40
.L_419c04:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sin@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            jp .L_419c41

            movapd XMM3,XMM4
            je .L_419caa
.L_419c41:

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM2,XMM5
            movapd XMM3,XMM6
            subsd XMM3,XMM1
            jp .L_419c59

            je .L_419cb8
.L_419c59:

            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            jp .L_419c6d

            je .L_419cc8
.L_419c6d:

            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM1,XMM0
            subsd XMM6,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4498d8]
            movapd XMM0,XMM6
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            divsd XMM3,XMM0
.L_419caa:

            movapd XMM0,XMM3
            add RSP,40
.L_419cb2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419cb8:

            mulsd XMM3,XMM4
            add RSP,40
            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419cc8:

            ucomisd XMM5,XMM3
            sqrtsd XMM1,XMM3
            ja .L_419ce3
.L_419cd2:

            divsd XMM4,XMM1
            add RSP,40
            movapd XMM3,XMM4
            movapd XMM0,XMM3
            ret 
.L_419ce3:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_419cd2
.L_419d06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419d10:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,152
.L_419d23:

            lea R12,QWORD PTR [RSP+136]
            lea R13,QWORD PTR [RSP+128]
            movsd XMM0,QWORD PTR [RSP+192]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+200]
            mov RSI,R13
            movsd XMM10,QWORD PTR [RSP+128]
            mov RDI,R12
            movsd XMM8,QWORD PTR [RSP+136]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+32],XMM2
            call sincos@PLT

            mov RDX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RBX+232]
            movsd XMM5,QWORD PTR [RBX+128]
            movsd XMM4,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM5
            movsd XMM3,QWORD PTR [RDX]
            movsd XMM6,QWORD PTR [RSP+136]
            movsd XMM11,QWORD PTR [RSP+208]
            movsd XMM9,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+16]
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+56],XMM3
            movsd XMM4,QWORD PTR [RDX+32]
            movsd XMM3,QWORD PTR [RDX+24]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+176]
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM11
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+32],XMM5
            call .L_419c00

            pxor XMM1,XMM1
            movapd XMM13,XMM0
            movsd XMM0,QWORD PTR [RBX+192]
            movsd XMM5,QWORD PTR [RSP+32]
            ucomisd XMM0,XMM1
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM11,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM10,QWORD PTR [RSP+96]
            jp .L_419fc0

            jne .L_419fc0

            movapd XMM14,XMM5
            movsd XMM15,QWORD PTR [RIP+.L_4470f0]
.L_419e8e:

            movapd XMM12,XMM3
            mulsd XMM3,XMM4
            movapd XMM0,XMM6
            mov RAX,RBP
            xorpd XMM12,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM15,QWORD PTR [RSP+16]
            mulsd XMM0,XMM9
            movapd XMM1,XMM12
            mulsd XMM12,XMM8
            mulsd XMM0,XMM8
            mulsd XMM1,XMM6
            movapd XMM2,XMM15
            mulsd XMM2,XMM14
            mulsd XMM1,XMM10
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM7
            mulsd XMM7,XMM6
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+176]
            mulsd XMM1,XMM14
            mulsd XMM1,XMM6
            mulsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            divsd XMM5,XMM14
            addsd XMM1,XMM0
            movapd XMM0,XMM13
            divsd XMM0,XMM15
            movapd XMM15,XMM6
            mulsd XMM15,XMM4
            mulsd XMM5,QWORD PTR [RSP+8]
            addsd XMM0,XMM2
            mulsd XMM2,XMM6
            mulsd XMM0,XMM15
            movsd XMM15,QWORD PTR [RSP+24]
            mulsd XMM6,XMM2
            mulsd XMM0,XMM15
            mulsd XMM6,XMM15
            addsd XMM1,XMM0
            movapd XMM0,XMM10
            mulsd XMM10,XMM3
            mulsd XMM0,XMM9
            addsd XMM12,XMM0
            movapd XMM0,XMM11
            addsd XMM11,XMM13
            addsd XMM0,XMM14
            divsd XMM1,XMM11
            mulsd XMM0,XMM4
            mulsd XMM4,XMM9
            movsd QWORD PTR [RBP+8],XMM1
            divsd XMM12,XMM0
            mulsd XMM8,XMM4
            movsd QWORD PTR [RBP],XMM12
            addsd XMM8,XMM10
            addsd XMM7,XMM8
            subsd XMM7,XMM5
            addsd XMM6,XMM7
            movsd QWORD PTR [RBP+16],XMM6
            add RSP,152
.L_419fb5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419fc0:

            mulsd XMM0,XMM6
            movsd XMM15,QWORD PTR [RIP+.L_4470f0]
            movapd XMM2,XMM15
            mulsd XMM0,XMM6
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            sqrtsd XMM2,XMM2
            ucomisd XMM1,XMM0
            ja .L_419ff7
.L_419fe8:

            movapd XMM14,XMM5
            divsd XMM14,XMM2
            jmp .L_419e8e
.L_419ff7:

            movsd QWORD PTR [RSP+120],XMM15
            movsd QWORD PTR [RSP+112],XMM6
            movsd QWORD PTR [RSP+104],XMM4
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+80],XMM10
            movsd QWORD PTR [RSP+72],XMM11
            movsd QWORD PTR [RSP+64],XMM13
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM15,QWORD PTR [RSP+120]
            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM10,QWORD PTR [RSP+80]
            movsd XMM11,QWORD PTR [RSP+72]
            movsd XMM13,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_419fe8
.L_41a09d:

            nop
            nop
            nop
.L_41a0a0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,136
.L_41a0b3:

            lea R12,QWORD PTR [RSP+120]
            lea R13,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+72],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RSI,R13
            movsd XMM7,QWORD PTR [RSP+112]
            mov RDI,R12
            movsd XMM5,QWORD PTR [RSP+120]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            call sincos@PLT

            mov RDX,QWORD PTR [RBX+32]
            movsd XMM8,QWORD PTR [RBX+128]
            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RDX+24]
            movapd XMM1,XMM8
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM4,XMM6
            mulsd XMM1,QWORD PTR [RDX+32]
            movsd QWORD PTR [RSP+96],XMM6
            movsd XMM3,QWORD PTR [RDX]
            mulsd XMM4,QWORD PTR [RBX+232]
            movsd QWORD PTR [RSP+104],XMM8
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RDX+8]
            xorpd XMM6,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM7,QWORD PTR [RDX+16]
            movapd XMM0,XMM4
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RSP+72]
            addsd XMM4,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM10,XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+88],XMM3
            addsd XMM10,XMM1
            movsd QWORD PTR [RSP+80],XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM10
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM4,XMM5
            movsd QWORD PTR [RSP+72],XMM5
            mulsd XMM2,XMM5
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM3,XMM7
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM8,QWORD PTR [RSP+104]
            subsd XMM4,XMM2
            movapd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+176]
            addsd XMM4,XMM3
            addsd XMM4,XMM0
            movapd XMM0,XMM8
            movsd QWORD PTR [RSP+56],XMM4
            call .L_419c00

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            divsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+8]
            pxor XMM8,XMM8
            movsd XMM2,QWORD PTR [RBX+128]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+88]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+192]
            movsd XMM6,QWORD PTR [RSP+96]
            ucomisd XMM0,XMM8
            jp .L_41a2f0

            jne .L_41a2f0
.L_41a289:

            mulsd XMM2,XMM7
            movsd QWORD PTR [RBP+8],XMM4
            mov RAX,RBP
            mulsd XMM3,XMM7
            mulsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+32]
            divsd XMM1,XMM2
            mulsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBP],XMM1
            addsd XMM3,XMM7
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,XMM5
            subsd XMM3,XMM6
            mulsd XMM5,XMM0
            addsd XMM3,XMM5
            movsd QWORD PTR [RBP+16],XMM3
            add RSP,136
.L_41a2e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41a2f0:

            mulsd XMM0,XMM5
            movsd XMM9,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM5
            subsd XMM9,XMM0
            movapd XMM0,XMM9
            sqrtsd XMM9,XMM9
            ucomisd XMM8,XMM0
            ja .L_41a321
.L_41a317:

            divsd XMM2,XMM9
            jmp .L_41a289
.L_41a321:

            movsd QWORD PTR [RSP+104],XMM9
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM1
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            jmp .L_41a317
.L_41a38a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a390:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_41a398:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM4,QWORD PTR [RSP+128]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RSP+120]
            mov EAX,DWORD PTR [RAX+40]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+80],XMM4
            test EAX,EAX
            movsd QWORD PTR [RSP+24],XMM4
            jne .L_41a458

            movsd QWORD PTR [RSP+16],XMM2
            lea RDI,QWORD PTR [RSP+32]
            sub RSP,8
.L_41a3ef:

            movsd QWORD PTR [RSP+16],XMM3
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_419d10

            add RSP,32
.L_41a40a:

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
.L_41a41c:

            subsd XMM2,QWORD PTR [RSP+40]
            mov RAX,RBX
            subsd XMM4,QWORD PTR [RSP+48]
            subsd XMM3,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+88]
            xor RDX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+16],XMM4
            movsd QWORD PTR [RBX],XMM3
            jne .L_41a48a

            add RSP,96
.L_41a453:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a458:

            movapd XMM1,XMM2
            lea RDI,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call .L_41a0a0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_41a41c
.L_41a48a:

            call __stack_chk_fail@PLT
.L_41a48f:

            nop
.L_41a490:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_41a390

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41a513

            add RSP,72
            ret 
.L_41a513:

            call __stack_chk_fail@PLT
.L_41a518:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a520:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41a390

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41a594

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41a594:

            call __stack_chk_fail@PLT
.L_41a599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a5a0:

            push RBX
            mov RBX,RDI
            sub RSP,80
.L_41a5a8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+104]
            mov EAX,DWORD PTR [RAX+40]
            movsd QWORD PTR [RSP+8],XMM5
            test EAX,EAX
            jne .L_41a680

            movsd QWORD PTR [RSP+24],XMM3
            lea RDI,QWORD PTR [RSP+32]
            sub RSP,8
.L_41a5ee:

            movsd QWORD PTR [RSP+24],XMM4
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_419d10

            movdqu XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            movups XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+144],RAX
            movsd XMM2,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+144]
            add RSP,32
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
.L_41a64b:

            addsd XMM0,QWORD PTR [RSP+8]
            mov RAX,RBX
            addsd XMM2,XMM4
            addsd XMM1,XMM3
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX],XMM2
            movsd QWORD PTR [RBX+8],XMM1
            movsd QWORD PTR [RBX+16],XMM0
            jne .L_41a6be

            add RSP,80
            pop RBX
            ret 
.L_41a680:

            movapd XMM1,XMM3
            lea RDI,QWORD PTR [RSP+96]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call .L_41a0a0

            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_41a64b
.L_41a6be:

            call __stack_chk_fail@PLT
.L_41a6c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a6d0:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_41a5a0

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41a74a

            add RSP,72
            ret 
.L_41a74a:

            call __stack_chk_fail@PLT
.L_41a74f:

            nop
.L_41a750:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41a5a0

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41a7c4

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41a7c4:

            call __stack_chk_fail@PLT
.L_41a7c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a7d0:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_41a7e3:

            call .L_403740

            test RAX,RAX
            mov ESI,12
            je .L_41a935

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_41a750]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c1]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41a520]
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41a5a0]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_41a390]
            mov QWORD PTR [RBX+64],RAX
            lea RAX,QWORD PTR [RIP+.L_41a6d0]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_41a490]
            mov QWORD PTR [RBX+48],RAX
            call .L_403e60

            test EAX,EAX
            jne .L_41a9b8
.L_41a86e:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c9]
            call .L_403e60

            test EAX,EAX
            jne .L_41a9f8
.L_41a889:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d1]
            call .L_403e60

            test EAX,EAX
            jne .L_41a9d8
.L_41a8a4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449898]
            call .L_403e60

            test EAX,EAX
            jne .L_41a998
.L_41a8bf:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4498a0]
            call .L_403e60

            test EAX,EAX
            jne .L_41a978
.L_41a8da:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4498a8]
            call .L_403e60

            pxor XMM0,XMM0
            mov DWORD PTR [RBP+40],EAX
            ucomisd XMM0,QWORD PTR [RBP]
            jp .L_41a8fd

            je .L_41a948
.L_41a8fd:

            ucomisd XMM0,QWORD PTR [RBP+8]
            jp .L_41a906

            je .L_41a930
.L_41a906:

            ucomisd XMM0,QWORD PTR [RBP+16]
            jp .L_41a90f

            je .L_41a930
.L_41a90f:

            ucomisd XMM0,QWORD PTR [RBP+24]
            jp .L_41a918

            je .L_41a930
.L_41a918:

            ucomisd XMM0,QWORD PTR [RBP+32]
            jp .L_41aa18

            jne .L_41aa18

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a930:

            mov ESI,4294967242
.L_41a935:

            add RSP,8
.L_41a939:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_419bb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a948:

            ucomisd XMM0,QWORD PTR [RBP+8]
            jp .L_41a930

            jne .L_41a930

            ucomisd XMM0,QWORD PTR [RBP+16]
            jp .L_41a930

            jne .L_41a930

            ucomisd XMM0,QWORD PTR [RBP+24]
            jp .L_41a930

            jne .L_41a930

            ucomisd XMM0,QWORD PTR [RBP+32]
            jp .L_41a930

            mov ESI,4294967295
            jne .L_41a930

            jmp .L_41a935
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a978:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4498a4]
            call .L_403e60

            mov QWORD PTR [RBP+32],RAX
            jmp .L_41a8da
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a998:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44989c]
            call .L_403e60

            mov QWORD PTR [RBP+24],RAX
            jmp .L_41a8bf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a9b8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495c5]
            call .L_403e60

            mov QWORD PTR [RBP],RAX
            jmp .L_41a86e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a9d8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495d5]
            call .L_403e60

            mov QWORD PTR [RBP+16],RAX
            jmp .L_41a8a4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a9f8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4495cd]
            call .L_403e60

            mov QWORD PTR [RBP+8],RAX
            jmp .L_41a889
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41aa18:

            add RSP,8
.L_41aa1c:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41aa22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa30:

            test RDI,RDI
            je .L_41aa40

            jmp .L_41a7d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aa40:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41aa6e

            lea RDX,QWORD PTR [RIP+.L_419bf0]
            lea RCX,QWORD PTR [RIP+.L_4498c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41aa6e:

            add RSP,8
            ret 
.L_41aa73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa80:

            xor EAX,EAX
            ret 
.L_41aa83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aa90:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM0
            movsd QWORD PTR [RDI+16],XMM0
            movsd QWORD PTR [RDI+24],XMM0
            ret 
.L_41aaaf:

            nop
.L_41aab0:

            movabs RDX,9218868437227405312
            mov RAX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI],RDX
            mov QWORD PTR [RDI+8],RDX
            mov QWORD PTR [RDI+16],RDX
            mov QWORD PTR [RDI+24],RDX
            mov QWORD PTR [RDI+32],RDX
            mov QWORD PTR [RDI+40],RDX
            mov QWORD PTR [RDI+48],RDX
            ret 
.L_41aae1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aaf0:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,48
            mov RDX,QWORD PTR [RSI+72]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            test RDX,RDX
            je .L_41aba0

            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [RSP+128]
            call RDX

            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
.L_41ab79:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41ac9f

            add RSP,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aba0:

            cmp QWORD PTR [RSI+56],0
            jne .L_41ac00

            cmp QWORD PTR [RSI+40],0
            je .L_41ac60

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+72]
            call .L_443ed0

            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+72],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41ab79
          .byte 0x66
          .byte 0x90
.L_41ac00:

            mov RDI,RSP
            sub RSP,8
.L_41ac07:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]

            call .L_444250

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+112],RAX
            movups XMMWORD PTR [RSP+96],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            add RSP,32

            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41ab79
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ac60:

            mov RDI,RAX
            mov ESI,22
            call .L_413c90

            movabs RAX,9218868437227405312
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_41ab79
.L_41ac9f:

            call __stack_chk_fail@PLT
.L_41aca4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41acb0:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,48
            mov RDX,QWORD PTR [RSI+80]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            test RDX,RDX
            je .L_41ad60

            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [RSP+128]
            call RDX

            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
.L_41ad39:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41ae5f

            add RSP,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ad60:

            cmp QWORD PTR [RSI+64],0
            jne .L_41adc0

            cmp QWORD PTR [RSI+48],0
            je .L_41ae20

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+72]
            call .L_4440b0

            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+72],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41ad39
          .byte 0x66
          .byte 0x90
.L_41adc0:

            mov RDI,RSP
            sub RSP,8
.L_41adc7:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]

            call .L_4444a0

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+112],RAX
            movups XMMWORD PTR [RSP+96],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            add RSP,32

            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41ad39
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ae20:

            mov RDI,RAX
            mov ESI,22
            call .L_413c90

            movabs RAX,9218868437227405312
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_41ad39
.L_41ae5f:

            call __stack_chk_fail@PLT
.L_41ae64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ae70:

            push RBX
            mov RDX,RSI
            mov RBX,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+88]
            test RAX,RAX
            je .L_41aed8

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call RAX

            add RSP,32
.L_41aeb6:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41b034

            add RSP,112
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aed8:

            mov RAX,QWORD PTR [RSI+72]
            test RAX,RAX
            je .L_41af5a

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+136]
            lea RCX,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+144]
            mov R10,QWORD PTR [RSP+152]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDI
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+56],R10
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            push 0
.L_41af2a:

            push 0
            push 0
            push 0
            push R10
            push R9
            push RDI
            push RSI
            mov RDI,RCX
            mov RSI,RDX
            call RAX

            movdqa XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41aeb6
.L_41af5a:

            cmp QWORD PTR [RSI+56],0
            je .L_41afb6

            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call .L_444250

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+176],RAX
            movups XMMWORD PTR [RSP+160],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41aeb6
.L_41afb6:

            cmp QWORD PTR [RSI+40],0
            je .L_41b007

            movsd XMM0,QWORD PTR [RSP+128]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+136]
            call .L_443ed0

            movsd QWORD PTR [RSP+128],XMM0
            movsd QWORD PTR [RSP+136],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41aeb6
.L_41b007:

            mov ESI,22
            mov RDI,RDX
            call .L_413c90

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
            movsd QWORD PTR [RBX+24],XMM0
            jmp .L_41aeb6
.L_41b034:

            call __stack_chk_fail@PLT
.L_41b039:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b040:

            push RBX
            mov RDX,RSI
            mov RBX,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+96]
            test RAX,RAX
            je .L_41b0a8

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call RAX

            add RSP,32
.L_41b086:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41b204

            add RSP,112
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b0a8:

            mov RAX,QWORD PTR [RSI+80]
            test RAX,RAX
            je .L_41b12a

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+136]
            lea RCX,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+144]
            mov R10,QWORD PTR [RSP+152]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDI
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+56],R10
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            push 0
.L_41b0fa:

            push 0
            push 0
            push 0
            push R10
            push R9
            push RDI
            push RSI
            mov RDI,RCX
            mov RSI,RDX
            call RAX

            movdqa XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41b086
.L_41b12a:

            cmp QWORD PTR [RSI+64],0
            je .L_41b186

            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call .L_4444a0

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+176],RAX
            movups XMMWORD PTR [RSP+160],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41b086
.L_41b186:

            cmp QWORD PTR [RSI+48],0
            je .L_41b1d7

            movsd XMM0,QWORD PTR [RSP+128]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+136]
            call .L_4440b0

            movsd QWORD PTR [RSP+128],XMM0
            movsd QWORD PTR [RSP+136],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41b086
.L_41b1d7:

            mov ESI,22
            mov RDI,RDX
            call .L_413c90

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
            movsd QWORD PTR [RBX+24],XMM0
            jmp .L_41b086
.L_41b204:

            call __stack_chk_fail@PLT
.L_41b209:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b210:

            test RSI,RSI
            je .L_41b220

            jmp .L_404150
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b220:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDI
            call .L_404160

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            add RSP,24
            jmp .L_404150
.L_41b23f:

            nop
.L_41b240:

            test RDI,RDI
            push RBX
            mov RBX,RSI
            je .L_41b260

            call .L_404140

            mov RDI,RBX
            mov RSI,RAX
            pop RBX
            jmp .L_404150
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b260:

            call .L_404160

            mov RDI,RBX
            mov RSI,RAX
            pop RBX
            jmp .L_404150
.L_41b271:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b280:

            test RDX,RDX
            mov RAX,RSI
            je .L_41b2b8
.L_41b288:

            sub RDX,1
            je .L_41b2b0

            add RAX,1
            movzx ECX,BYTE PTR [RAX-1]
            add RDI,1
            test CL,CL
            mov BYTE PTR [RDI-1],CL
            jne .L_41b288
.L_41b2a1:

            sub RAX,RSI
            sub RAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b2b0:

            mov BYTE PTR [RDI],0
            nop
            nop
            nop
            nop
            nop
.L_41b2b8:

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_41b2a1

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            jne .L_41b2b8

            jmp .L_41b2a1
.L_41b2ce:

            nop
            nop
.L_41b2d0:

            test RDI,RDI
            je .L_41b2e0

            jmp .L_404200
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b2e0:

            sub RSP,24
            mov DWORD PTR [RSP+12],ESI
            call .L_404160

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RAX
            add RSP,24
            jmp .L_404200
.L_41b2fd:

            nop
            nop
            nop
.L_41b300:

            test RDI,RDI
            je .L_41b320

            cmp ESI,4
            mov EAX,DWORD PTR [RDI+4]
            je .L_41b318

            mov DWORD PTR [RDI+4],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b318:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b320:

            sub RSP,24
            mov DWORD PTR [RSP+12],ESI
            call .L_404160

            mov RDI,RAX
            mov ESI,DWORD PTR [RSP+12]
            mov EAX,4
            test RDI,RDI
            jne .L_41b348
.L_41b33e:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b348:

            cmp ESI,4
            mov EAX,DWORD PTR [RDI+4]
            je .L_41b33e

            mov DWORD PTR [RDI+4],ESI
            add RSP,24
            ret 
.L_41b358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b360:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41b36b:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41b3ba

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41b3ba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404140

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,1
            call .L_404300

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b421

            add RSP,208
.L_41b41f:

            pop RBX
            ret 
.L_41b421:

            call __stack_chk_fail@PLT
.L_41b426:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b430:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41b43b:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41b48a

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41b48a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404140

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,2
            call .L_404300

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b4f1

            add RSP,208
.L_41b4ef:

            pop RBX
            ret 
.L_41b4f1:

            call __stack_chk_fail@PLT
.L_41b4f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b500:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41b50b:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41b55a

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41b55a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404140

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,3
            call .L_404300

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b5c1

            add RSP,208
.L_41b5bf:

            pop RBX
            ret 
.L_41b5c1:

            call __stack_chk_fail@PLT
.L_41b5c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5d0:

            test RDI,RDI
            je .L_41b5f0

            test RDX,RDX
            mov QWORD PTR [RDI+16],RSI
            je .L_41b5e8

            mov QWORD PTR [RDI+8],RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5e8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5f0:

            jmp .L_404160
.L_41b5f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b600:

            test RDI,RDI
            je .L_41b638

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41b630

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            test RDI,RDI
            je .L_41b624

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_41b624:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41b630:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b638:

            xor EAX,EAX
            ret 
.L_41b63b:

            nop
            nop
            nop
            nop
            nop
.L_41b640:

            jmp .L_41b600
.L_41b642:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b650:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_41b659:

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RBP+32]
            movsd XMM0,QWORD PTR [RBP+176]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM4
            movapd XMM3,XMM2
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            sqrtsd XMM1,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            ja .L_41b756
.L_41b6c3:

            movapd XMM3,XMM2
            movsd XMM5,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX+16]
            movapd XMM2,XMM6
            divsd XMM3,XMM1
            movapd XMM0,XMM7
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+32],XMM3
            mulsd XMM5,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            call .L_4447b0

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM1,XMM0
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM2,XMM7
            subsd XMM1,QWORD PTR [RBX+24]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            add RSP,72
.L_41b73b:

            mulsd XMM2,XMM7
            movapd XMM0,XMM5
            pop RBX
            pop RBP
            mulsd XMM2,XMM6
            mulsd XMM2,XMM4
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            ret 
.L_41b756:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41b6c3
.L_41b79c:

            nop
            nop
            nop
            nop
.L_41b7a0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,80
.L_41b7ab:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM5,QWORD PTR [RSP+40]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+24],XMM5
            call sincos@PLT

            mov RDI,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RDI+64]
            movsd XMM4,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_41b91c

            movsd XMM3,QWORD PTR [RSP+16]
            jle .L_41b910

            cmp EAX,3
            jg .L_41b980

            movq XMM4,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            andpd XMM1,XMM4
            movsd XMM0,QWORD PTR [R12+336]
            ucomisd XMM2,XMM1
            jbe .L_41b87a

            movsd XMM1,QWORD PTR [RSP]
            subsd XMM1,XMM0
            andpd XMM1,XMM4
            ucomisd XMM2,XMM1
            ja .L_41b980
.L_41b87a:

            movsd XMM1,QWORD PTR [R12+328]
            lea RCX,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RIP+.L_448708]
            lea RSI,QWORD PTR [RSP+64]
            addsd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP]
            divsd XMM1,XMM4
            add RDI,72
            movsd QWORD PTR [RSP],XMM4
            divsd XMM2,XMM4
            divsd XMM0,XMM4
            divsd XMM3,XMM4
            call .L_412a00

            movsd XMM4,QWORD PTR [RSP]
            mov RSI,RBP
            mov RDI,RBX
            mulsd XMM4,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [R12+128]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+32]
            divsd XMM0,XMM2
            divsd XMM1,XMM2
            jmp .L_41b965
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b910:

            test EAX,EAX
            jne .L_41b980

            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
.L_41b91c:

            movsd QWORD PTR [RSP+16],XMM4
            movsd XMM3,QWORD PTR [RDI+40]
            mov RDI,QWORD PTR [RDI+16]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_4447b0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM1,XMM4
.L_41b965:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41b98a

            add RSP,80
.L_41b979:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41b980:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_41b965
.L_41b98a:

            call __stack_chk_fail@PLT
.L_41b98f:

            nop
.L_41b990:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41b999:

            mov RBP,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_41ba78

            mov EAX,DWORD PTR [RBP+64]
            lea EDX,DWORD PTR [RAX-2]
            cmp EDX,1
            jbe .L_41baa0

            test EAX,EAX
            mov RSI,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RBP+40]
            jne .L_41ba90

            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_41ba0c:

            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_4447f0

            mov EAX,DWORD PTR [RBP+64]
            movapd XMM2,XMM0
            test EAX,EAX
            jne .L_41ba39

            movsd XMM3,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+16],XMM3
.L_41ba39:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
.L_41ba56:

            movapd XMM1,XMM2
.L_41ba5a:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41bbaf

            add RSP,88
.L_41ba72:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ba78:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RBX+336]
            jmp .L_41ba5a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ba90:

            addsd XMM0,XMM2
            jmp .L_41ba0c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41baa0:

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM3,XMM0
            mulsd XMM5,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_448708]
            movsd XMM0,QWORD PTR [RBX+336]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+40],XMM4
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+328]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM0
            mulsd XMM5,XMM5
            mulsd XMM3,XMM3
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RSP+40]
            addsd XMM5,XMM3
            divsd XMM2,XMM4
            ucomisd XMM0,XMM5
            sqrtsd XMM3,XMM5
            ja .L_41bb86
.L_41bb35:

            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBP+72]
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_412830

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM2,XMM4
            mulsd XMM4,QWORD PTR [RSP+64]
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RBX+328]
            jmp .L_41ba56
.L_41bb86:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_41bb35
.L_41bbaf:

            call __stack_chk_fail@PLT
.L_41bbb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bbc0:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,3
            movapd XMM6,XMM0
            mov RBX,RDI
            sub RSP,72
.L_41bbd6:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+48],XMM1
            mulsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RDI+336]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+40],XMM0
.L_41bc04:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            mov R13,QWORD PTR [R12+16]
            movsd XMM2,QWORD PTR [RBX+168]
            addsd XMM4,QWORD PTR [R12+24]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBX+176]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM2,XMM2
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            pxor XMM7,XMM7
            subsd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+8],XMM6
            ja .L_41bcf0
.L_41bc94:

            mulsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM0,XMM3
            call .L_4447f0

            sub EBP,1
            movapd XMM3,XMM0
            jne .L_41bc04

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+8]
            add RSP,72
.L_41bcdd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movapd XMM1,XMM3
            ret 
.L_41bcf0:

            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_41bc94
.L_41bd09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd10:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_41bd1b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM7
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM2,XMM3
            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1
            je .L_41be34

            jle .L_41be20

            cmp EAX,2
            movapd XMM7,XMM4
            je .L_41be10

            cmp EAX,3
            jne .L_41be80

            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RBX]
            mulsd XMM1,XMM6
            mulsd XMM5,XMM4
            mulsd XMM1,XMM3
            addsd XMM5,XMM1
.L_41bdbe:

            movq XMM0,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM5
            andpd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_4470f0]
            andpd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_449990]
            ucomisd XMM0,XMM2
            jbe .L_41be98

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            ucomisd XMM1,XMM5
            ja .L_41bf40
.L_41bdfe:

            add RSP,64
.L_41be02:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41be10:

            movapd XMM5,XMM6
            mulsd XMM5,XMM3
            jmp .L_41bdbe
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41be20:

            test EAX,EAX
            jne .L_41be80

            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            xorpd XMM1,XMM0
            xorpd XMM2,XMM0
.L_41be34:

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            movapd XMM3,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            subsd XMM3,XMM0
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM3
            ja .L_41bf20

            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,64
.L_41be6c:

            pop RBX
            pop RBP
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41be80:

            add RSP,64
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41be98:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call acos@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+24]
            cmp DWORD PTR [RBX+64],2
            divsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            mulsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RSP+16]
            je .L_41bf0d

            mulsd XMM6,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM4,QWORD PTR [RBX+8]
            mulsd XMM3,XMM6
            subsd XMM4,XMM3
            movapd XMM7,XMM4
.L_41bf0d:

            mulsd XMM2,XMM7
            add RSP,64
.L_41bf15:

            pop RBX
            pop RBP
            pop R12
            movapd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_41bf20:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,64
            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41bf40:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movapd XMM1,XMM5
            jmp .L_41bdfe
.L_41bf70:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_41bf7b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call hypot@PLT

            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            movsd XMM4,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM0
            jbe .L_41c010

            subsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM0
            ja .L_41c160

            movapd XMM3,XMM0
.L_41bfbe:

            mov R12D,DWORD PTR [RBP+64]
            lea EAX,DWORD PTR [R12-2]
            cmp EAX,1
            jbe .L_41c038

            test R12D,R12D
            je .L_41c120

            movapd XMM2,XMM3
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
.L_41bffc:

            add RSP,64
.L_41c000:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c010:

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM3
            jbe .L_41bfbe

            movsd XMM1,QWORD PTR [RBX+336]
            add RSP,64
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c038:

            lea RDI,QWORD PTR [RSP+56]
            movapd XMM0,XMM3
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            cmp R12D,2
            movsd XMM4,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM4,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_41c180

            mulsd XMM4,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM4
            movapd XMM4,XMM1
            divsd XMM0,XMM3
            mulsd XMM4,QWORD PTR [RBP]
            addsd XMM0,XMM4
            call .L_442670

            movsd QWORD PTR [RSP+8],XMM0
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RBP]
            mulsd XMM5,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,XMM0
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM3
.L_41c0ec:

            pxor XMM0,XMM0
            ucomisd XMM1,XMM0
            jp .L_41c0fc

            je .L_41bffc
.L_41c0fc:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41bffc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c120:

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM2,XMM1
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM2,XMM3
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41bffc
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c160:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,64
.L_41c175:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41c180:

            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM4
            call .L_442670

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM3
            jmp .L_41c0ec
.L_41c1be:

            nop
            nop
.L_41c1c0:

            push R13
            push R12
            mov ESI,480
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_41c1d7:

            call .L_403740

            test RAX,RAX
            je .L_41c31e

            pxor XMM4,XMM4
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+176]
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_41c507
.L_41c20e:

            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBP+72]
            divsd XMM1,XMM2
            call .L_410d80

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44705c]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            movsd QWORD PTR [RBX+336],XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,XMM1
            jbe .L_41c2e8

            pxor XMM6,XMM6
            xor EAX,EAX
            ucomisd XMM6,XMM0
            seta AL
            mov DWORD PTR [RBP+64],EAX
            ja .L_41c3e8

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
.L_41c29d:

            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBP+8],0
.L_41c2aa:

            pxor XMM5,XMM5
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM5
            jp .L_41c310

            jne .L_41c310

            lea RAX,QWORD PTR [RIP+.L_41bf70]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41bd10]
            mov QWORD PTR [RBX+40],RAX
.L_41c2d4:

            add RSP,56
.L_41c2d8:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c2e8:

            ucomisd XMM2,XMM3
            jbe .L_41c3b0

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov DWORD PTR [RBP+64],2
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],RAX
            jmp .L_41c2aa
          .byte 0x66
          .byte 0x90
.L_41c310:

            call .L_4446c0

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            jne .L_41c330
.L_41c31e:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41b600
.L_41c330:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449940]
            call .L_403e60

            test EAX,EAX
            jne .L_41c3f8

            mov EAX,DWORD PTR [RBP+64]
            cmp EAX,1
            je .L_41c4e0

            jg .L_41c438

            test EAX,EAX
            jne .L_41c383

            mov RDI,QWORD PTR [RBP+16]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            call .L_4447b0

            movsd QWORD PTR [RBP+40],XMM0
.L_41c383:

            lea R13,QWORD PTR [RIP+.L_41b990]
.L_41c38a:

            lea R12,QWORD PTR [RIP+.L_41b7a0]
.L_41c391:

            mov QWORD PTR [RBX+48],R13
            mov QWORD PTR [RBX+40],R12
            add RSP,56
.L_41c39d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c3b0:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov DWORD PTR [RBP+64],3
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_41c2aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c3e8:

            movsd XMM0,QWORD PTR [RIP+.L_447a58]
            jmp .L_41c29d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c3f8:

            mov RDI,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+336]
            call .L_4447b0

            lea RAX,QWORD PTR [RIP+.L_41bbc0]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41b650]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_41c2d4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c438:

            cmp EAX,3
            lea R13,QWORD PTR [RIP+.L_41b990]
            jg .L_41c38a

            movsd XMM2,QWORD PTR [RBP]
            lea R12,QWORD PTR [RIP+.L_41b7a0]
            mov QWORD PTR [RBX+48],R13
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+40],R12
            mulsd XMM0,XMM2
            pxor XMM7,XMM7
            mulsd XMM0,XMM2
            subsd XMM6,XMM0
            ucomisd XMM7,XMM6
            sqrtsd XMM1,XMM6
            movapd XMM0,XMM6
            ja .L_41c557
.L_41c48e:

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            pxor XMM7,XMM7
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_41c529
.L_41c4bd:

            divsd XMM1,XMM3
            movapd XMM0,XMM1
            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+56],XMM2
            movsd QWORD PTR [RBP+48],XMM0
            jmp .L_41c391
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c4e0:

            mov RDI,QWORD PTR [RBP+16]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            call .L_4447b0

            movsd QWORD PTR [RBP+40],XMM0
            jmp .L_41c383
.L_41c507:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41c20e
.L_41c529:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41c4bd
.L_41c557:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41c48e
.L_41c572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c580:

            test RDI,RDI
            je .L_41c590

            jmp .L_41c1c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c590:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41c5be

            lea RDX,QWORD PTR [RIP+.L_41b640]
            lea RCX,QWORD PTR [RIP+.L_449960]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41c5be:

            add RSP,8
            ret 
.L_41c5c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c5d0:

            xor EAX,EAX
            ret 
.L_41c5d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c5e0:

            test RDI,RDI
            je .L_41c608

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41c5fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41c5fe:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_41c608:

            xor EAX,EAX
            ret 
.L_41c60b:

            nop
            nop
            nop
            nop
            nop
.L_41c610:

            jmp .L_41c5e0
.L_41c612:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c620:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_41c62b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM6
            call sincos@PLT

            mov RDX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RDX+16]
            movsd XMM5,QWORD PTR [RSP+40]
            movapd XMM4,XMM3
            cmp EAX,1
            je .L_41c7e0

            jle .L_41c798

            cmp EAX,2
            je .L_41c720

            cmp EAX,3
            jne .L_41c768

            movsd XMM4,QWORD PTR [RDX+8]
            movsd XMM6,QWORD PTR [RDX]
            movapd XMM1,XMM4
            movapd XMM0,XMM6
            mulsd XMM1,XMM2
            mulsd XMM0,XMM5
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM1
            jae .L_41c76c

            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM2
            mulsd XMM2,XMM6
            divsd XMM7,XMM1
            mulsd XMM4,XMM5
            mulsd XMM3,XMM2
            mulsd XMM0,XMM7
            movapd XMM1,XMM4
            subsd XMM1,XMM3
            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_41c713:

            pop RBX
            pop RBP
            mulsd XMM1,XMM7
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c720:

            mulsd XMM3,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM3
            movapd XMM1,XMM3
            jae .L_41c76c

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM3
            mulsd XMM2,XMM0
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
            pop RBX
            mulsd XMM1,XMM5
            mulsd XMM0,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c768:

            pxor XMM1,XMM1
.L_41c76c:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,48
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c798:

            test EAX,EAX
            jne .L_41c768

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM5
            jae .L_41c81a

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            divsd XMM1,XMM5
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
.L_41c7cc:

            mulsd XMM2,XMM4
            add RSP,48
            pop RBX
            pop RBP
            pop R12
            mulsd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c7e0:

            ucomisd XMM5,QWORD PTR [RIP+.L_4499b8]
            movapd XMM1,XMM5
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            jae .L_41c76c

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_41c7cc
.L_41c81a:

            movapd XMM1,XMM5
            jmp .L_41c76c
.L_41c823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c830:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41c839:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            call hypot@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call atan@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movapd XMM4,XMM0
            mulsd XMM0,XMM0
            movapd XMM6,XMM7
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM6,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM1,XMM6
            sqrtsd XMM8,XMM6
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RSP+16]
            ja .L_41cafd
.L_41c8b5:

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM5
            jae .L_41c988

            mov EAX,DWORD PTR [RBP+16]
            cmp EAX,1
            je .L_41c9f0

            jle .L_41ca00

            cmp EAX,2
            je .L_41c9a0

            cmp EAX,3
            jne .L_41c95b

            mulsd XMM2,XMM4
            movsd XMM9,QWORD PTR [RBP+8]
            movsd XMM10,QWORD PTR [RBP]
            mulsd XMM2,XMM9
            movapd XMM0,XMM10
            mulsd XMM0,XMM8
            divsd XMM2,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,XMM7
            jb .L_41ca90

            ucomisd XMM2,XMM1
            jbe .L_41ca30

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_41c936:

            mulsd XMM10,XMM7
            mulsd XMM4,XMM9
            subsd XMM8,XMM10
            mulsd XMM6,XMM4
            mulsd XMM8,XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM8
.L_41c95b:

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP]
            add RSP,88
.L_41c97a:

            pop RBX
            movapd XMM1,XMM3
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c988:

            movsd XMM3,QWORD PTR [RBX+336]
            add RSP,88
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_41c9a0:

            mulsd XMM2,XMM4
            divsd XMM2,XMM5
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,XMM7
            jb .L_41ca48

            ucomisd XMM2,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            ja .L_41c9d4

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
.L_41c9d4:

            mulsd XMM5,XMM8
            mulsd XMM6,XMM4
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            jmp .L_41c95b
          .byte 0x66
          .byte 0x90
.L_41c9f0:

            subsd XMM3,QWORD PTR [RIP+.L_447a20]
            jmp .L_41c95b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ca00:

            test EAX,EAX
            jne .L_41c95b

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movapd XMM3,XMM0
            jmp .L_41c95b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ca30:

            movsd XMM7,QWORD PTR [RIP+.L_447a58]
            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            jmp .L_41c936
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ca48:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            jmp .L_41c9d4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ca90:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            call asin@PLT

            movsd XMM10,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM10
            call sin@PLT

            movsd XMM9,QWORD PTR [RBP+8]
            movapd XMM7,XMM0
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            jmp .L_41c936
.L_41cafd:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_41c8b5
.L_41cb67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb70:

            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_41cb82:

            call .L_403740

            test RAX,RAX
            je .L_41cc60

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,XMM1
            ja .L_41cc08

            ucomisd XMM2,XMM3
            jbe .L_41cc20

            mov DWORD PTR [RAX+16],2
.L_41cbd7:

            lea RAX,QWORD PTR [RIP+.L_41c830]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41c620]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_41cbfc:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cc08:

            pxor XMM1,XMM1
            xor EDX,EDX
            ucomisd XMM1,XMM0
            seta DL
            mov DWORD PTR [RAX+16],EDX
            jmp .L_41cbd7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc20:

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX+16],3
            movsd QWORD PTR [RAX],XMM1
            movsd QWORD PTR [RAX+8],XMM0
            jmp .L_41cbd7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cc60:

            add RSP,32
.L_41cc64:

            mov RDI,RBX
            pop RBX
            jmp .L_41c5e0
.L_41cc6d:

            nop
            nop
            nop
.L_41cc70:

            test RDI,RDI
            je .L_41cc80

            jmp .L_41cb70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41ccae

            lea RDX,QWORD PTR [RIP+.L_41c610]
            lea RCX,QWORD PTR [RIP+.L_4499a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41ccae:

            add RSP,8
            ret 
.L_41ccb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccc0:

            xor EAX,EAX
            ret 
.L_41ccc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccd0:

            test RDI,RDI
            je .L_41cd00

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41ccf8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+64]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41ccf8:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cd00:

            xor EAX,EAX
            ret 
.L_41cd03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd10:

            jmp .L_41ccd0
.L_41cd12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd20:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_41cd2b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBX
            movsd XMM7,QWORD PTR [RSP+56]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM7
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RSP+56]
            movapd XMM5,XMM3
            cmp EAX,1
            je .L_41cf18

            jle .L_41ce80

            cmp EAX,2
            movapd XMM6,XMM2
            je .L_41ce38

            cmp EAX,3
            jne .L_41cf00

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM1
            jae .L_41ce56
.L_41cddf:

            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            pxor XMM5,XMM5
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_41cf96
.L_41cdfd:

            movapd XMM0,XMM1
            cmp EAX,2
            mulsd XMM0,XMM4
            mulsd XMM0,QWORD PTR [RSP+16]
            je .L_41ce25

            mulsd XMM4,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM3,XMM4
            movapd XMM6,XMM2
            subsd XMM6,XMM3
.L_41ce25:

            add RSP,64
.L_41ce29:

            mulsd XMM1,XMM6
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce38:

            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            mulsd XMM1,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM1
            jb .L_41cddf
.L_41ce56:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP]
            add RSP,64
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce80:

            test EAX,EAX
            jne .L_41cf00

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            addsd XMM0,QWORD PTR [R12+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM0
            ja .L_41cf78

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
.L_41cee7:

            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,64
.L_41cef1:

            pop RBX
            mulsd XMM0,XMM1
            mulsd XMM1,XMM5
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41cf00:

            add RSP,64
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf18:

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            addsd XMM0,QWORD PTR [R12+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM0
            ja .L_41cf78

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM3
            subsd XMM0,XMM1
            call cos@PLT

            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            jmp .L_41cee7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cf78:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,64
.L_41cf8d:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
.L_41cf96:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_41cdfd
.L_41cfdd:

            nop
            nop
            nop
.L_41cfe0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41cfe9:

            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM6
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_445250

            mov EAX,DWORD PTR [RBP+72]
            movapd XMM4,XMM0
            lea EDX,DWORD PTR [RAX-2]
            cmp EDX,1
            jbe .L_41d1d0

            pxor XMM3,XMM3
            pxor XMM5,XMM5
            pxor XMM1,XMM1
.L_41d059:

            cmp EAX,1
            je .L_41d240

            jle .L_41d178

            cmp EAX,2
            je .L_41d108

            cmp EAX,3
            jne .L_41d1b1

            movsd XMM6,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RBP+8]
            movapd XMM2,XMM6
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            movapd XMM0,XMM4
            mulsd XMM2,XMM1
            mulsd XMM0,XMM5
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_41d1b1

            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            divsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_41d2a8
.L_41d0de:

            mulsd XMM6,XMM5
            mulsd XMM1,XMM4
            mulsd XMM6,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RBP+24]
            mulsd XMM1,XMM2
            subsd XMM4,XMM6
            mulsd XMM1,XMM4
            jmp .L_41d157
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d108:

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            mulsd XMM2,XMM5
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM0
            ja .L_41d1b1

            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            divsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_41d2e0
.L_41d14e:

            mulsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RBP+24]
.L_41d157:

            mulsd XMM2,QWORD PTR [RBP+16]
            movapd XMM0,XMM2
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,88
.L_41d16e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d178:

            test EAX,EAX
            jne .L_41d1b1

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RBP+40]
            addsd XMM2,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,XMM4
            movapd XMM4,XMM0
.L_41d197:

            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM2
            jbe .L_41d260
.L_41d1b1:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_413c90

            pxor XMM0,XMM0
            movapd XMM1,XMM0
.L_41d1c6:

            add RSP,88
.L_41d1ca:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d1d0:

            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,QWORD PTR [RBP+40]
            pxor XMM3,XMM3
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM5,XMM0
            jbe .L_41d059

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBP+72]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            jmp .L_41d059
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d240:

            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM4,QWORD PTR [RBP+40]
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            jmp .L_41d197
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d260:

            ucomisd XMM4,XMM3
            jae .L_41d278

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_41d1c6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d278:

            ucomisd XMM3,XMM4
            sqrtsd XMM1,XMM4
            ja .L_41d30e
.L_41d286:

            movsd XMM0,QWORD PTR [RSP+24]
            cmp EAX,1
            mulsd XMM0,XMM1
            je .L_41d29d

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_41d29d:

            mulsd XMM1,QWORD PTR [RSP+16]
            jmp .L_41d1c6
.L_41d2a8:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+8]
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41d0de
.L_41d2e0:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41d14e
.L_41d30e:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBP+72]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41d286
.L_41d32b:

            nop
            nop
            nop
            nop
            nop
.L_41d330:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_41d33b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            ucomisd XMM1,QWORD PTR [RIP+.L_4470f0]
            jbe .L_41d3a0

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_413c90

            pxor XMM3,XMM3
            movsd XMM1,QWORD PTR [RSP]
            add RSP,64
.L_41d395:

            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41d3a0:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM3
            call asin@PLT

            mov R12D,DWORD PTR [RBP+72]
            movapd XMM2,XMM0
            pxor XMM1,XMM1
            addsd XMM2,XMM0
            pxor XMM5,XMM5
            lea EAX,DWORD PTR [R12-2]
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+32]
            cmp EAX,1
            ja .L_41d41e

            movapd XMM0,XMM2
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
.L_41d41e:

            cmp R12D,1
            je .L_41d550

            jle .L_41d4f8

            cmp R12D,2
            je .L_41d560

            cmp R12D,3
            jne .L_41d540

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            movsd XMM6,QWORD PTR [RBP]
            ucomisd XMM0,XMM4
            movsd XMM7,QWORD PTR [RBP+8]
            jb .L_41d598

            movsd XMM2,QWORD PTR [RBX+336]
.L_41d466:

            mulsd XMM1,XMM7
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM0,XMM6
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM5,XMM0
            pxor XMM0,XMM0
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+8],XMM5
.L_41d4c3:

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jp .L_41d51b

            jne .L_41d51b

            mov EAX,DWORD PTR [RBP+72]
            sub EAX,2
            cmp EAX,1
            ja .L_41d51b
.L_41d4dc:

            movapd XMM3,XMM0
            add RSP,64
.L_41d4e4:

            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4f8:

            test R12D,R12D
            jne .L_41d540

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM2,XMM0
.L_41d51b:

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_41d4dc
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d540:

            pxor XMM0,XMM0
            jmp .L_41d4c3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d550:

            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            jmp .L_41d51b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d560:

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM4
            jb .L_41d5f0

            pxor XMM2,XMM2
            pxor XMM0,XMM0
.L_41d57a:

            mulsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            jmp .L_41d4c3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d598:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM3
            mulsd XMM0,XMM7
            divsd XMM0,XMM4
            addsd XMM0,XMM6
            call asin@PLT

            movsd XMM7,QWORD PTR [RBP+8]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_41d466
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d5f0:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            movapd XMM0,XMM3
            divsd XMM0,XMM4
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_41d57a
.L_41d630:

            push RBX
            movapd XMM2,XMM1
            sub RSP,48
.L_41d639:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+72]
            cmp EAX,1
            je .L_41d700

            jg .L_41d6a0

            test EAX,EAX
            jne .L_41d738

            movapd XMM3,XMM0
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            addsd XMM3,XMM2
            ucomisd XMM3,QWORD PTR [RIP+.L_448740]
            jp .L_41d673

            je .L_41d720
.L_41d673:

            divsd XMM3,QWORD PTR [RBX+40]
            movapd XMM2,XMM1
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            subsd XMM3,XMM1
            jmp .L_41d73c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d6a0:

            cmp EAX,3
            mov QWORD PTR [RSP+8],RDI
            jg .L_41d738

            movsd XMM1,QWORD PTR [RBX+48]
            divsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM1
            call hypot@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM2
            jbe .L_41d7a0

            mov RDI,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RDI+336]
            add RSP,48
.L_41d6f7:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d700:

            movapd XMM3,XMM1
            mulsd XMM3,XMM1
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            addsd XMM1,XMM3
            ucomisd XMM1,QWORD PTR [RIP+.L_448740]
            jp .L_41d780

            jne .L_41d780
.L_41d720:

            movsd XMM1,QWORD PTR [RDI+336]
            add RSP,48
            pxor XMM0,XMM0
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d738:

            pxor XMM3,XMM3
.L_41d73c:

            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call asin@PLT

            mov RDI,RBX
            call .L_442d40

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,48
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_41d780:

            divsd XMM1,QWORD PTR [RBX+40]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            subsd XMM3,XMM1
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_41d73c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d7a0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,QWORD PTR [RBX+56]
            call asin@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            cmp DWORD PTR [RBX+72],3
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_41d810

            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM3,XMM4
            divsd XMM3,XMM2
            mulsd XMM2,XMM1
            jmp .L_41d73c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d810:

            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RBX+8]
            movapd XMM3,XMM8
            movsd XMM5,QWORD PTR [RBX]
            mulsd XMM3,XMM4
            movapd XMM7,XMM5
            mulsd XMM5,XMM8
            mulsd XMM7,XMM1
            mulsd XMM3,XMM6
            mulsd XMM4,XMM5
            divsd XMM3,XMM2
            mulsd XMM2,XMM6
            addsd XMM3,XMM7
            mulsd XMM2,XMM1
            subsd XMM2,XMM4
            jmp .L_41d73c
.L_41d857:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d860:

            push RBP
            push RBX
            mov ESI,80
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_41d873:

            call .L_403740

            test RAX,RAX
            je .L_41db40

            movsd XMM0,QWORD PTR [RBX+336]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RBX+176]
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,XMM1
            ja .L_41d908

            ucomisd XMM2,XMM3
            jbe .L_41dac0

            pxor XMM3,XMM3
            mov DWORD PTR [RAX+72],2
            ucomisd XMM4,XMM3
            jp .L_41d920
.L_41d8e1:

            jne .L_41d920
.L_41d8e3:

            lea RAX,QWORD PTR [RIP+.L_41d330]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41cd20]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_41d8fd:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d908:

            pxor XMM3,XMM3
            xor EAX,EAX
            ucomisd XMM3,XMM0
            seta AL
            ucomisd XMM4,XMM3
            mov DWORD PTR [RBP+72],EAX
            jnp .L_41d8e1

            nop
            nop
.L_41d920:

            ucomisd XMM3,XMM4
            sqrtsd XMM1,XMM4
            ja .L_41db9e
.L_41d92e:

            movsd QWORD PTR [RBX+168],XMM1
            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_445250

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            subsd XMM1,XMM0
            divsd XMM6,XMM1
            movsd QWORD PTR [RBP+32],XMM6
            call .L_442cb0

            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBP+72]
            movsd XMM3,QWORD PTR [RSP+8]
            cmp EAX,2
            je .L_41db50

            jle .L_41db08

            cmp EAX,3
            jne .L_41db17

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RBP+40]
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_41dc25
.L_41d9c0:

            movsd QWORD PTR [RBP+56],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM0
            call .L_445250

            divsd XMM0,QWORD PTR [RBP+40]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM0
            mulsd XMM0,XMM0
            subsd XMM7,XMM0
            ucomisd XMM3,XMM7
            sqrtsd XMM5,XMM7
            movapd XMM0,XMM7
            ja .L_41dc03
.L_41da25:

            movsd QWORD PTR [RBP+8],XMM5
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            subsd XMM5,XMM0
            ucomisd XMM3,XMM5
            sqrtsd XMM4,XMM5
            movapd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP+16]
            ja .L_41dbdc
.L_41da87:

            movsd XMM1,QWORD PTR [RBP+56]
            mulsd XMM4,XMM1
            mulsd XMM4,XMM5
            divsd XMM2,XMM4
            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+48],XMM2
            movapd XMM2,XMM1
            mulsd XMM1,XMM0
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+24],XMM2
            jmp .L_41db17
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dac0:

            pxor XMM3,XMM3
            mov DWORD PTR [RAX+72],3
            ucomisd XMM4,XMM3
            jp .L_41d920

            jne .L_41d920

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_41d8e3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41db08:

            test EAX,EAX
            js .L_41db17

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBP+48],RAX
.L_41db17:

            lea RAX,QWORD PTR [RIP+.L_41d630]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41cfe0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_41db31:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db40:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41ccd0
          .byte 0x66
          .byte 0x90
.L_41db50:

            movsd XMM1,QWORD PTR [RBP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_41dbc4
.L_41db6b:

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RBP+56],XMM2
            divsd XMM0,XMM2
            mov QWORD PTR [RBP+16],RAX
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+48],XMM0
            jmp .L_41db17
.L_41db9e:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41d92e
.L_41dbc4:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBP+40]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41db6b
.L_41dbdc:

            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41da87
.L_41dc03:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_41da25
.L_41dc25:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41d9c0
.L_41dc47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dc50:

            test RDI,RDI
            je .L_41dc60

            jmp .L_41d860
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dc60:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41dc8e

            lea RDX,QWORD PTR [RIP+.L_41cd10]
            lea RCX,QWORD PTR [RIP+.L_4499c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41dc8e:

            add RSP,8
            ret 
.L_41dc93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dca0:

            xor EAX,EAX
            ret 
.L_41dca3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dcb0:

            test RDI,RDI
            je .L_41dcd8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41dcce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41dcce:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_41dcd8:

            xor EAX,EAX
            ret 
.L_41dcdb:

            nop
            nop
            nop
            nop
            nop
.L_41dce0:

            jmp .L_41dcb0
.L_41dce2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dcf0:

            push RBP
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41dcfd:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM0,QWORD PTR [RDI+176]
            movsd XMM1,QWORD PTR [RDI+336]
            jp .L_41dd60

            jne .L_41dd60
.L_41dd15:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RIP+.L_41df80]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP+16],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41de10]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_41dd58:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41dd60:

            movsd XMM3,QWORD PTR [RBX+168]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_447a20]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            subsd XMM4,XMM2
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            divsd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            jmp .L_41dd15
.L_41de07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41de10:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_41de1d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [R13+32]
            movsd XMM7,QWORD PTR [R13+168]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            addsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM4,XMM6
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+32],XMM6
            subsd XMM4,XMM1
            addsd XMM1,XMM6
            movapd XMM0,XMM4
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,QWORD PTR [RSP+8]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R12
            mov RDI,RBP
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBX]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            addsd XMM0,XMM6
            movapd XMM6,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4470e8]
            mulsd XMM6,XMM5
            mulsd XMM3,XMM5
            mulsd XMM2,XMM7
            mulsd XMM6,XMM4
            mulsd XMM3,XMM4
            addsd XMM0,XMM6
            subsd XMM2,XMM3
            divsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            call .L_4453f0

            add RSP,72
.L_41df77:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41df7e:

            nop
            nop
.L_41df80:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,20
            movapd XMM4,XMM0
            sub RSP,120
.L_41df96:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            mov RBP,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            jmp .L_41dfd1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dfc8:

            sub EBX,1
            je .L_41e140
.L_41dfd1:

            mov ESI,DWORD PTR [RBP+24]
            mov RDI,QWORD PTR [RBP]
            mov RDX,R12
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            call .L_445490

            movsd XMM6,QWORD PTR [RSP+88]
            subsd XMM0,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+80]
            subsd XMM1,QWORD PTR [RSP+24]
            movapd XMM2,XMM6
            movapd XMM5,XMM7
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM2,XMM6
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM8,XMM1
            mulsd XMM1,XMM7
            addsd XMM5,XMM2
            movapd XMM2,XMM0
            mulsd XMM8,XMM6
            mulsd XMM0,XMM6
            mulsd XMM2,XMM7
            movsd XMM6,QWORD PTR [RIP+.L_447e58]
            subsd XMM1,XMM0
            addsd XMM2,XMM8
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            divsd XMM1,XMM5
            divsd XMM2,XMM5
            addsd XMM3,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            addsd XMM4,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            addsd XMM1,XMM2
            ucomisd XMM6,XMM1
            jb .L_41dfc8

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            call hypot@PLT

            movapd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+32],XMM7
            mulsd XMM0,XMM7
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+48],XMM6
            movsd XMM6,QWORD PTR [RIP+.L_447e58]
            movsd QWORD PTR [RSP+56],XMM4
            ucomisd XMM6,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            jb .L_41e158

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [R13+336]
.L_41e119:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e2cb

            add RSP,120
.L_41e131:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e140:

            movsd XMM2,QWORD PTR [RIP+.L_4470e0]
            movapd XMM0,XMM2
.L_41e14c:

            movapd XMM1,XMM2
            jmp .L_41e119
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e158:

            movsd XMM0,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [R13]
            movsd XMM1,QWORD PTR [RSP+48]
            mov EBX,20
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM1,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,QWORD PTR [RBP+8]
            divsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,XMM1
            call .L_442670

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_41e1e1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e1d8:

            sub EBX,1
            je .L_41e140
.L_41e1e1:

            movsd XMM1,QWORD PTR [R13+168]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            subsd XMM7,XMM0
            addsd XMM5,XMM0
            divsd XMM5,XMM7
            movapd XMM0,XMM5
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RIP+.L_447e58]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,XMM2
            addsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            jb .L_41e1d8

            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP],XMM2
            mulsd XMM1,QWORD PTR [RBP+8]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM7,XMM4
            movapd XMM0,XMM7
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_41e14c
.L_41e2cb:

            call __stack_chk_fail@PLT
.L_41e2d0:

            push RBX
.L_41e2d1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e330

            mov RDX,QWORD PTR [RIP+.L_449b28]
            mov RCX,QWORD PTR [RIP+.L_449b30]
            lea RSI,QWORD PTR [RIP+.L_65d380]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+24],2
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RBX+176],0
            pop RBX
.L_41e328:

            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e330:

            mov RDI,RBX
            pop RBX
            jmp .L_41dcb0
.L_41e339:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e340:

            test RDI,RDI
            je .L_41e350

            jmp .L_41e2d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e350:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e37e

            lea RDX,QWORD PTR [RIP+.L_41dce0]
            lea RCX,QWORD PTR [RIP+.L_449b00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41e37e:

            add RSP,8
            ret 
.L_41e383:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e390:

            push RBX
.L_41e391:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e3f0

            mov RDX,QWORD PTR [RIP+.L_449b38]
            mov RCX,QWORD PTR [RIP+.L_449b40]
            lea RSI,QWORD PTR [RIP+.L_65d340]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+24],2
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RBX+176],0
            pop RBX
.L_41e3e8:

            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e3f0:

            mov RDI,RBX
            pop RBX
            jmp .L_41dcb0
.L_41e3f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e400:

            test RDI,RDI
            je .L_41e410

            jmp .L_41e390
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e410:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e43e

            lea RDX,QWORD PTR [RIP+.L_41dce0]
            lea RCX,QWORD PTR [RIP+.L_449ac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41e43e:

            add RSP,8
            ret 
.L_41e443:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e450:

            push RBX
.L_41e451:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e4c0

            mov RDX,QWORD PTR [RIP+.L_449b48]
            mov RCX,QWORD PTR [RIP+.L_449b50]
            lea RSI,QWORD PTR [RIP+.L_65d2e0]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],4
            mov RDI,RBX
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_449b58]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_41e4b6:

            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e4c0:

            mov RDI,RBX
            pop RBX
            jmp .L_41dcb0
.L_41e4c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e4d0:

            test RDI,RDI
            je .L_41e4e0

            jmp .L_41e450
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e4e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e50e

            lea RDX,QWORD PTR [RIP+.L_41dce0]
            lea RCX,QWORD PTR [RIP+.L_449a80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41e50e:

            add RSP,8
            ret 
.L_41e513:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e520:

            push RBX
.L_41e521:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e5d8

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [RIP+.L_449b60]
            mov RCX,QWORD PTR [RIP+.L_449b68]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],5
            ucomisd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            jp .L_41e598

            jne .L_41e598

            lea RDX,QWORD PTR [RIP+.L_65d220]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RIP+.L_449b58]
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_41e58f:

            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e598:

            lea RSI,QWORD PTR [RIP+.L_65d280]
            mov RDI,RBX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_449b70]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_449b78]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_449b80]
            mov QWORD PTR [RBX+168],RAX
            pop RBX
            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e5d8:

            mov RDI,RBX
            pop RBX
            jmp .L_41dcb0
.L_41e5e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e5f0:

            test RDI,RDI
            je .L_41e600

            jmp .L_41e520
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e600:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e62e

            lea RDX,QWORD PTR [RIP+.L_41dce0]
            lea RCX,QWORD PTR [RIP+.L_449a40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41e62e:

            add RSP,8
            ret 
.L_41e633:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e640:

            push RBX
.L_41e641:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e6f8

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [RIP+.L_449b88]
            mov RCX,QWORD PTR [RIP+.L_447a38]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],9
            ucomisd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            jp .L_41e6b8

            jne .L_41e6b8

            lea RDX,QWORD PTR [RIP+.L_65d0e0]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RIP+.L_449b58]
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_41e6af:

            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e6b8:

            lea RSI,QWORD PTR [RIP+.L_65d180]
            mov RDI,RBX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_449b70]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_449b78]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_449b80]
            mov QWORD PTR [RBX+168],RAX
            pop RBX
            jmp .L_41dcf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e6f8:

            mov RDI,RBX
            pop RBX
            jmp .L_41dcb0
.L_41e701:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e710:

            test RDI,RDI
            je .L_41e720

            jmp .L_41e640
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e720:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41e74e

            lea RDX,QWORD PTR [RIP+.L_41dce0]
            lea RCX,QWORD PTR [RIP+.L_449a00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41e74e:

            add RSP,8
            ret 
.L_41e753:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e760:

            xor EAX,EAX
            ret 
.L_41e763:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e770:

            xor EAX,EAX
            ret 
.L_41e773:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e780:

            xor EAX,EAX
            ret 
.L_41e783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e790:

            xor EAX,EAX
            ret 
.L_41e793:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e7a0:

            xor EAX,EAX
            ret 
.L_41e7a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e7b0:

            test RDI,RDI
            je .L_41e7d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41e7ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41e7ce:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e7d8:

            xor EAX,EAX
            ret 
.L_41e7db:

            nop
            nop
            nop
            nop
            nop
.L_41e7e0:

            jmp .L_41e7b0
.L_41e7e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e7f0:

            push RBP
            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_449b90]
            sub RSP,40
.L_41e800:

            mov RBP,QWORD PTR [RDI+32]
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_403e60

            pxor XMM4,XMM4
            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM4,XMM1
            movsd QWORD PTR [RBP],XMM1
            jae .L_41e948

            movsd XMM0,QWORD PTR [RBX+336]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM5,XMM0
            andpd XMM5,XMM3
            movapd XMM2,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM2
            ja .L_41e8f0

            ucomisd XMM3,XMM5
            jbe .L_41e908

            mov DWORD PTR [RBP+96],2
.L_41e879:

            divsd XMM1,QWORD PTR [RBX+128]
            lea RAX,QWORD PTR [RIP+.L_41ec30]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM6,XMM2
            movapd XMM3,XMM2
            movapd XMM0,XMM1
            divsd XMM6,XMM1
            movsd QWORD PTR [RBP+40],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            divsd XMM3,XMM0
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+56],XMM6
            mulsd XMM0,XMM6
            movsd QWORD PTR [RBP+32],XMM3
            movsd QWORD PTR [RBP+48],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41e970]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,40
.L_41e8e7:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e8f0:

            xor EAX,EAX
            ucomisd XMM4,XMM0
            seta AL
            mov DWORD PTR [RBP+96],EAX
            jmp .L_41e879
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e908:

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mov DWORD PTR [RBP+96],3
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41e879
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e948:

            mov RDI,RBX
            mov ESI,4294967266
            call .L_413c90

            add RSP,40
.L_41e959:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41e7b0
.L_41e963:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e970:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_41e97b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            mov RAX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RAX+96]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RAX+32]
            cmp EDX,1
            je .L_41eb20

            jle .L_41eb60

            cmp EDX,2
            je .L_41eae0

            cmp EDX,3
            jne .L_41ebc0

            movsd XMM7,QWORD PTR [RAX+16]
            movsd XMM6,QWORD PTR [RAX+8]
            movapd XMM1,XMM7
            movapd XMM0,XMM6
            mulsd XMM1,XMM2
            mulsd XMM0,XMM4
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            ucomisd XMM5,XMM1
            ja .L_41eb36

            movsd XMM0,QWORD PTR [RAX+24]
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RAX+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+24]
.L_41ea53:

            mulsd XMM2,XMM6
            mulsd XMM7,XMM4
            mulsd XMM3,XMM2
            subsd XMM7,XMM3
            mulsd XMM1,XMM7
.L_41ea67:

            mov EDX,DWORD PTR [RAX+100]
            test EDX,EDX
            je .L_41eb53

            movsd XMM2,QWORD PTR [RAX+64]
            movsd XMM6,QWORD PTR [RAX+72]
            movapd XMM5,XMM2
            movsd XMM7,QWORD PTR [RAX+88]
            movapd XMM3,XMM6
            mulsd XMM5,XMM1
            mulsd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM6
            mulsd XMM0,XMM2
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RAX+80]
            subsd XMM0,XMM1
            mulsd XMM3,XMM5
            mulsd XMM0,XMM7
            mulsd XMM3,QWORD PTR [RAX+56]
            add RSP,48
.L_41eabf:

            pop RBX
            pop RBP
            pop R12
            addsd XMM3,XMM7
            divsd XMM4,XMM3
            mulsd XMM5,XMM4
            mulsd XMM0,XMM4
            movapd XMM1,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eae0:

            mulsd XMM3,XMM2
            ucomisd XMM5,XMM3
            movapd XMM1,XMM3
            ja .L_41eb36

            movsd XMM0,QWORD PTR [RAX+24]
            movsd XMM1,QWORD PTR [RAX+40]
            subsd XMM0,XMM3
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM2,XMM1
            mulsd XMM0,XMM2
.L_41eb0e:

            mulsd XMM1,XMM4
            jmp .L_41ea67
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eb20:

            movapd XMM1,XMM4
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            ucomisd XMM5,XMM1
            jbe .L_41ebd0
.L_41eb36:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
.L_41eb53:

            add RSP,48
.L_41eb57:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41eb60:

            test EDX,EDX
            movapd XMM1,XMM4
            jne .L_41ebc0
.L_41eb68:

            ucomisd XMM5,XMM1
            ja .L_41eb36

            movsd XMM0,QWORD PTR [RAX+24]
            cmp EDX,1
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RAX+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            je .L_41eba9

            jg .L_41ec00

            test EDX,EDX
            jne .L_41ea67

            movapd XMM6,XMM3
            xorpd XMM6,XMMWORD PTR [RIP+.L_447ae0]
.L_41eba9:

            mulsd XMM2,XMM6
            mulsd XMM1,XMM2
            jmp .L_41ea67
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ebc0:

            pxor XMM1,XMM1
            jmp .L_41eb68
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ebd0:

            addsd XMM4,QWORD PTR [RAX+24]
            movsd XMM1,QWORD PTR [RAX+40]
            movapd XMM0,XMM2
            mulsd XMM2,XMM6
            divsd XMM1,XMM4
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_41ea67
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ec00:

            cmp EDX,2
            je .L_41eb0e

            cmp EDX,3
            jne .L_41ea67

            movsd XMM6,QWORD PTR [RAX+8]
            movsd XMM7,QWORD PTR [RAX+16]
            jmp .L_41ea53
.L_41ec21:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ec30:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,56
.L_41ec3d:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM2,XMM1
            mov EAX,DWORD PTR [RBX+100]
            test EAX,EAX
            je .L_41ecb5

            movsd XMM0,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM0,XMM2
            movapd XMM6,XMM1
            mulsd XMM2,XMM1
            mulsd XMM3,XMM1
            movsd XMM4,QWORD PTR [RBX+72]
            subsd XMM6,XMM0
            movsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM2,QWORD PTR [RBX+88]
            movapd XMM5,XMM3
            movapd XMM3,XMM1
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            divsd XMM6,XMM0
            movapd XMM0,XMM4
            mulsd XMM5,XMM6
            mulsd XMM2,XMM6
            mulsd XMM3,XMM5
            mulsd XMM0,XMM2
            mulsd XMM4,XMM5
            mulsd XMM2,XMM1
            addsd XMM3,XMM0
            subsd XMM2,XMM4
.L_41ecb5:

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call hypot@PLT

            movapd XMM5,XMM0
            mulsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            movapd XMM0,XMM7
            ja .L_41ee40

            movsd XMM6,QWORD PTR [RBX+24]
            sqrtsd XMM7,XMM7
            ja .L_41ef7e
.L_41ed12:

            movsd XMM4,QWORD PTR [RBX+40]
            subsd XMM6,XMM7
            movapd XMM7,XMM5
            movapd XMM0,XMM4
            divsd XMM7,XMM4
            divsd XMM0,XMM5
            addsd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            mulsd XMM0,XMM6
            subsd XMM7,XMM0
            movapd XMM0,XMM7
            sqrtsd XMM7,XMM7
            ucomisd XMM1,XMM0
            ja .L_41ef34
.L_41ed59:

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM5
            jb .L_41ed80

            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RBP+336]
.L_41ed73:

            add RSP,56
.L_41ed77:

            movapd XMM1,XMM4
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41ed80:

            mov EAX,DWORD PTR [RBX+96]
            cmp EAX,1
            je .L_41eea0

            jle .L_41ee68

            cmp EAX,2
            je .L_41eee0

            cmp EAX,3
            jne .L_41eed0

            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+32],XMM3
            movsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM0,XMM2
            movapd XMM2,XMM7
            movsd QWORD PTR [RSP+8],XMM7
            mulsd XMM2,QWORD PTR [RBX+8]
            divsd XMM0,XMM5
            addsd XMM0,XMM2
            call asin@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            mulsd XMM0,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM6,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM7,XMM0
            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM7
            mulsd XMM3,XMM6
            mulsd XMM2,XMM5
.L_41ee20:

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP]
            jmp .L_41ed73
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ee40:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_41ee5b:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ee68:

            test EAX,EAX
            jne .L_41eed0

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_41ee20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eea0:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41ee20
.L_41eed0:

            pxor XMM4,XMM4
            jmp .L_41ee20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eee0:

            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM2
            divsd XMM0,XMM5
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,XMM6
            movapd XMM2,XMM5
            jmp .L_41ee20
.L_41ef34:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_41ed59
.L_41ef7e:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_41ed12
.L_41efce:

            nop
            nop
.L_41efd0:

            push RBX
            mov ESI,104
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41f000

            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+100],0
            pop RBX
            jmp .L_41e7f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f000:

            mov RDI,RBX
            pop RBX
            jmp .L_41e7b0
.L_41f009:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f010:

            test RDI,RDI
            je .L_41f020

            jmp .L_41efd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f020:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41f04e

            lea RDX,QWORD PTR [RIP+.L_41e7e0]
            lea RCX,QWORD PTR [RIP+.L_449be0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41f04e:

            add RSP,8
            ret 
.L_41f053:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f060:

            push R13
            push R12
            mov ESI,104
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,56
.L_41f077:

            call .L_403740

            test RAX,RAX
            je .L_41f160

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_449b93]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448708]
            call sincos@PLT

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_449b99]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            mov RDI,R12
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_448708]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RSP+40]
            mov DWORD PTR [RBX+100],1
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+64],XMM3
            movsd QWORD PTR [RBX+72],XMM0
            movsd QWORD PTR [RBX+88],XMM2
            movsd QWORD PTR [RBX+80],XMM1
            add RSP,56
.L_41f14c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41e7f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f160:

            add RSP,56
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41e7b0
.L_41f172:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f180:

            test RDI,RDI
            je .L_41f190

            jmp .L_41f060
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f190:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41f1be

            lea RDX,QWORD PTR [RIP+.L_41e7e0]
            lea RCX,QWORD PTR [RIP+.L_449ba0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41f1be:

            add RSP,8
            ret 
.L_41f1c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f1d0:

            xor EAX,EAX
            ret 
.L_41f1d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f1e0:

            xor EAX,EAX
            ret 
.L_41f1e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f1f0:

            test RDI,RDI
            je .L_41f200

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f200:

            ret 
.L_41f202:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f210:

            sub RSP,8
.L_41f214:

            lea RAX,QWORD PTR [RIP+.L_65d408]
            subsd XMM1,QWORD PTR [RDI+336]
            movapd XMM2,XMM0
            lea RDX,QWORD PTR [RAX-72]
            movsd XMM0,QWORD PTR [RIP+.L_65d408]
            mulsd XMM1,QWORD PTR [RIP+.L_449c48]
            nop
            nop
            nop
            nop
            nop
.L_41f240:

            mulsd XMM0,XMM1
            sub RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX]
            jne .L_41f240

            mulsd XMM0,XMM1
            lea RDI,QWORD PTR [RIP+.L_65d480]
            mov ESI,5
            movapd XMM1,XMM2
            call .L_4453f0

            movapd XMM2,XMM0
            add RSP,8
.L_41f272:

            movapd XMM0,XMM1
            movapd XMM1,XMM2
            ret 
.L_41f27b:

            nop
            nop
            nop
            nop
            nop
.L_41f280:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RBP,QWORD PTR [RIP+.L_65d480]
            movapd XMM4,XMM0
            mov EBX,20
            sub RSP,72
.L_41f29d:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            jmp .L_41f2d1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f2c8:

            sub EBX,1
            je .L_41f3f8
.L_41f2d1:

            movapd XMM0,XMM3
            movapd XMM1,XMM4
            mov RDX,R12
            mov ESI,5
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call .L_445490

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RSP+24]
            subsd XMM1,QWORD PTR [RSP+16]
            movapd XMM2,XMM6
            movapd XMM5,XMM7
            mulsd XMM2,XMM6
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            movapd XMM8,XMM1
            mulsd XMM1,XMM7
            addsd XMM5,XMM2
            movapd XMM2,XMM0
            mulsd XMM0,XMM6
            mulsd XMM8,XMM6
            mulsd XMM2,XMM7
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            subsd XMM1,XMM0
            addsd XMM2,XMM8
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM0,XMM1
            divsd XMM2,XMM5
            divsd XMM0,XMM5
            addsd XMM3,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            addsd XMM4,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            addsd XMM0,XMM2
            ucomisd XMM6,XMM0
            jb .L_41f2c8

            lea RAX,QWORD PTR [RIP+.L_65d460]
            movsd XMM1,QWORD PTR [RIP+.L_65d460]
            lea RDX,QWORD PTR [RAX-64]
            nop
            nop
            nop
            nop
            nop
.L_41f3b0:

            mulsd XMM1,XMM3
            sub RAX,8
            cmp RAX,RDX
            addsd XMM1,QWORD PTR [RAX]
            jne .L_41f3b0

            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RIP+.L_449c50]
            addsd XMM1,QWORD PTR [R13+336]
.L_41f3d6:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM4
            jne .L_41f406

            add RSP,72
.L_41f3ee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f3f8:

            movsd XMM4,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM4
            jmp .L_41f3d6
.L_41f406:

            call __stack_chk_fail@PLT
.L_41f40b:

            nop
            nop
            nop
            nop
            nop
.L_41f410:

            test RDI,RDI
            je .L_41f488

            mov RAX,QWORD PTR [RIP+.L_449c58]
            mov QWORD PTR [RDI+128],RAX
            mov RAX,QWORD PTR [RIP+.L_449c60]
            mov QWORD PTR [RDI+144],RAX
            mov RAX,QWORD PTR [RIP+.L_449c68]
            mov QWORD PTR [RDI+328],RAX
            mov RAX,QWORD PTR [RIP+.L_449c70]
            mov QWORD PTR [RDI+336],RAX
            mov RAX,QWORD PTR [RIP+.L_449c78]
            mov QWORD PTR [RDI+344],RAX
            mov RAX,QWORD PTR [RIP+.L_449c80]
            mov QWORD PTR [RDI+352],RAX
            lea RAX,QWORD PTR [RIP+.L_41f280]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41f210]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f488:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41f4b6

            lea RDX,QWORD PTR [RIP+.L_41f1f0]
            lea RCX,QWORD PTR [RIP+.L_449c20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41f4b6:

            add RSP,8
            ret 
.L_41f4bb:

            nop
            nop
            nop
            nop
            nop
.L_41f4c0:

            mov RDX,QWORD PTR [RIP+.L_449c58]
            mov RCX,QWORD PTR [RIP+.L_449c60]
            mov RAX,RDI
            mov RSI,QWORD PTR [RIP+.L_449c68]
            mov QWORD PTR [RDI+128],RDX
            mov QWORD PTR [RDI+144],RCX
            mov QWORD PTR [RDI+328],RSI
            mov RDI,QWORD PTR [RIP+.L_449c70]
            lea RSI,QWORD PTR [RIP+.L_41f280]
            mov RDX,QWORD PTR [RIP+.L_449c78]
            mov RCX,QWORD PTR [RIP+.L_449c80]
            mov QWORD PTR [RAX+48],RSI
            mov QWORD PTR [RAX+336],RDI
            lea RDI,QWORD PTR [RIP+.L_41f210]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+352],RCX
            mov QWORD PTR [RAX+40],RDI
            ret 
.L_41f52e:

            nop
            nop
.L_41f530:

            xor EAX,EAX
            ret 
.L_41f533:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f540:

            test RDI,RDI
            je .L_41f568

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41f55e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_41f55e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f568:

            xor EAX,EAX
            ret 
.L_41f56b:

            nop
            nop
            nop
            nop
            nop
.L_41f570:

            jmp .L_41f540
.L_41f572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f580:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_41f58b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+40]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            mov RDX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RDX+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM3
            cmp EAX,1
            je .L_41f69c

            jle .L_41f690

            cmp EAX,2
            je .L_41f650

            cmp EAX,3
            jne .L_41f6e0

            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM5,QWORD PTR [RDX]
            movapd XMM1,XMM2
            movapd XMM6,XMM5
            mulsd XMM1,XMM0
            mulsd XMM6,XMM4
            mulsd XMM1,XMM3
            addsd XMM1,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4499b8]
            ucomisd XMM6,XMM1
            ja .L_41f670

            mulsd XMM5,XMM0
            mulsd XMM2,XMM4
            mulsd XMM3,XMM5
            movapd XMM1,XMM2
            subsd XMM1,XMM3
            jmp .L_41f6ca
          .byte 0x90
.L_41f650:

            mulsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_4499b8]
            ucomisd XMM1,XMM3
            ja .L_41f670

            movapd XMM1,XMM4
            jmp .L_41f6ca
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f670:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,48
.L_41f685:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41f690:

            test EAX,EAX
            jne .L_41f6e0

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_41f69c:

            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM2,QWORD PTR [R12+336]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            subsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            ja .L_41f670

            mulsd XMM1,XMM0
.L_41f6ca:

            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_41f6d4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f6e0:

            pxor XMM1,XMM1
            jmp .L_41f6ca
.L_41f6e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f6f0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41f6f9:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM3,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+16]
            jbe .L_41f878

            subsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM6
            ja .L_41f858

            pxor XMM2,XMM2
            movapd XMM0,XMM1
            pxor XMM7,XMM7
.L_41f75e:

            ucomisd XMM6,XMM3
            jb .L_41f780

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RBX+336]
.L_41f770:

            add RSP,88
.L_41f774:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f780:

            mov EAX,DWORD PTR [RBP+16]
            cmp EAX,1
            je .L_41f970

            jle .L_41f910

            cmp EAX,2
            je .L_41f9a8

            cmp EAX,3
            jne .L_41f998

            mulsd XMM4,XMM0
            movsd XMM6,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RBP]
            mulsd XMM0,XMM6
            mulsd XMM4,XMM6
            movapd XMM9,XMM8
            mulsd XMM9,XMM7
            mulsd XMM5,XMM0
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            addsd XMM4,XMM9
            mulsd XMM8,XMM4
            subsd XMM7,XMM8
            mulsd XMM7,XMM3
            movsd QWORD PTR [RSP+24],XMM7
.L_41f7ec:

            movapd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,XMM1
            jb .L_41f9e0

            ucomisd XMM2,XMM4
            ja .L_41f9d0

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_41f814:

            movsd XMM7,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM2
            jp .L_41f831

            jne .L_41f831

            mov EAX,DWORD PTR [RBP+16]
            sub EAX,2
            cmp EAX,1
            jbe .L_41f940
.L_41f831:

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_41f770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f858:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,88
.L_41f86d:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f878:

            mulsd XMM0,XMM0
            movapd XMM8,XMM1
            pxor XMM2,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            subsd XMM8,XMM0
            movapd XMM0,XMM3
            ucomisd XMM2,XMM8
            sqrtsd XMM7,XMM8
            jbe .L_41f75e

            movapd XMM0,XMM8
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_41f75e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f910:

            test EAX,EAX
            jne .L_41f998

            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_41f814
.L_41f940:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,XMM2
            jp .L_41f956

            pxor XMM0,XMM0
            je .L_41f770
.L_41f956:

            ucomisd XMM2,QWORD PTR [RSP+32]
            ja .L_41fa00

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            jmp .L_41f770
          .byte 0x90
.L_41f970:

            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_41f814
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f998:

            pxor XMM3,XMM3
            jmp .L_41f814
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f9a8:

            mulsd XMM4,XMM0
            mulsd XMM5,XMM0
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP+24],XMM3
            jmp .L_41f7ec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f9d0:

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            jmp .L_41f814
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f9e0:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_41f814
          .byte 0x66
          .byte 0x90
.L_41fa00:

            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            jmp .L_41f770
.L_41fa0d:

            nop
            nop
            nop
.L_41fa10:

            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_41fa22:

            call .L_403740

            test RAX,RAX
            je .L_41faf8

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,XMM1
            jae .L_41fad0

            ucomisd XMM3,XMM2
            jbe .L_41fae8

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX+8],XMM0
            mov DWORD PTR [RAX+16],3
            movsd QWORD PTR [RAX],XMM1
.L_41faa5:

            lea RAX,QWORD PTR [RIP+.L_41f6f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41f580]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_41faca:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_41fad0:

            pxor XMM1,XMM1
            xor EDX,EDX
            ucomisd XMM1,XMM0
            seta DL
            mov DWORD PTR [RAX+16],EDX
            jmp .L_41faa5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fae8:

            mov DWORD PTR [RAX+16],2
            jmp .L_41faa5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41faf8:

            add RSP,32
            mov RDI,RBX
            pop RBX
            jmp .L_41f540
.L_41fb05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb10:

            test RDI,RDI
            je .L_41fb20

            jmp .L_41fa10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fb20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_41fb4e

            lea RDX,QWORD PTR [RIP+.L_41f570]
            lea RCX,QWORD PTR [RIP+.L_449c90]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41fb4e:

            add RSP,8
            ret 
.L_41fb53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb60:

            xor EAX,EAX
            ret 
.L_41fb63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb70:

            test RDI,RDI
            je .L_41fb90

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fb90:

            xor EAX,EAX
            ret 
.L_41fb93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fba0:

            jmp .L_41fb70
.L_41fba2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fbb0:

            sub RSP,40
.L_41fbb4:

            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM4,XMM3
            addsd XMM3,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,XMM2
            movapd XMM0,XMM4
            divsd XMM0,XMM3
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
.L_41fc22:

            ret 
.L_41fc23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fc30:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,88
.L_41fc3d:

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+48],XMM0
            call sin@PLT

            mov EAX,DWORD PTR [RBX+32]
            movapd XMM5,XMM0
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            lea EDX,DWORD PTR [RAX-2]
            movsd XMM4,QWORD PTR [RSP+16]
            cmp EDX,1
            jbe .L_41fdd8

            cmp EAX,1
            je .L_41fe3b
.L_41fcb5:

            jle .L_41fd60

            cmp EAX,2
            je .L_41fcf8

            cmp EAX,3
            jne .L_41fe50

            mulsd XMM4,XMM0
            pxor XMM3,XMM3
            addsd XMM4,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM4,XMM3
            jp .L_41fce5

            je .L_41fe60
.L_41fce5:

            movsd XMM3,QWORD PTR [RBX+24]
            divsd XMM3,XMM4
            mulsd XMM1,XMM3
            jmp .L_41fd43
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fcf8:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM2,QWORD PTR [RBX+16]
            movapd XMM5,XMM6
            mulsd XMM6,XMM0
            movapd XMM3,XMM2
            mulsd XMM5,XMM1
            mulsd XMM3,XMM0
            mulsd XMM1,XMM2
            addsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM3,XMM4
            mulsd XMM4,XMM6
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RBX+24]
            subsd XMM1,XMM4
            mulsd XMM5,XMM2
            divsd XMM3,XMM5
            mulsd XMM1,XMM3
.L_41fd43:

            mulsd XMM0,XMM3
.L_41fd47:

            mulsd XMM0,QWORD PTR [RSP+32]
            add RSP,88
.L_41fd51:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fd60:

            test EAX,EAX
            jne .L_41fe50

            movq XMM3,QWORD PTR [RIP+.L_447ae0]
            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM4,XMM3
            xorpd XMM7,XMM3
            xorpd XMM5,XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+48],XMM7
.L_41fd8e:

            movsd XMM2,QWORD PTR [RBX+24]
            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM2,QWORD PTR [RBP+168]
            movaps XMMWORD PTR [RSP+16],XMM3
            call .L_445330

            mulsd XMM0,QWORD PTR [RSP+8]
            movapd XMM3,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+40]
            xorpd XMM3,XMM0
            mulsd XMM1,XMM3
            jmp .L_41fd47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fdd8:

            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM2,QWORD PTR [RBP+168]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM5
            call .L_41fbb0

            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+16]
            cmp EAX,1
            movsd XMM4,QWORD PTR [RSP+56]
            jne .L_41fcb5
.L_41fe3b:

            movq XMM3,QWORD PTR [RIP+.L_447ae0]
            jmp .L_41fd8e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fe50:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_41fd47
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fe60:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            jmp .L_41fd43
.L_41fe6d:

            nop
            nop
            nop
.L_41fe70:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41fe79:

            mov RBP,QWORD PTR [RDI+32]
            movsd XMM4,QWORD PTR [RDI+336]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM4
            movsd XMM8,QWORD PTR [RIP+.L_447a20]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            andpd XMM1,XMM3
            movapd XMM0,XMM1
            subsd XMM0,XMM8
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            jbe .L_41ffa8

            pxor XMM5,XMM5
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RBP]
            ucomisd XMM5,XMM4
            movapd XMM7,XMM0
            andpd XMM7,XMM3
            setbe AL
            ucomisd XMM5,QWORD PTR [RDI+176]
            mov DWORD PTR [RBP+32],EAX
            movsd QWORD PTR [RBP],XMM7
            jp .L_41feef

            je .L_41ffe1
.L_41feef:

            movapd XMM4,XMM7
            movsd XMM2,QWORD PTR [RBX+168]
            subsd XMM4,XMM8
            andpd XMM3,XMM4
            ucomisd XMM6,XMM3
            jbe .L_4201b0

            movsd XMM0,QWORD PTR [RBX+360]
            movsd QWORD PTR [RSP+16],XMM5
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM0,XMM2
            movapd XMM1,XMM0
            call pow@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+8],XMM0
            subsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_420250
.L_41ff77:

            movsd XMM0,QWORD PTR [RSP]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM0
.L_41ff85:

            lea RAX,QWORD PTR [RIP+.L_420800]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41fc30]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_41ff9f:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ffa8:

            xor EAX,EAX
            pxor XMM5,XMM5
            ucomisd XMM1,XMM6
            movsd XMM0,QWORD PTR [RBP]
            movapd XMM7,XMM0
            setbe AL
            add EAX,2
            andpd XMM7,XMM3
            ucomisd XMM5,QWORD PTR [RDI+176]
            mov DWORD PTR [RBP+32],EAX
            movsd QWORD PTR [RBP],XMM7
            jp .L_420078

            jne .L_420078
.L_41ffe1:

            cmp EAX,2
            je .L_420178

            cmp EAX,3
            jne .L_420020
.L_41ffef:

            movsd XMM0,QWORD PTR [RBX+360]
            addsd XMM0,XMM0
.L_41fffb:

            lea RAX,QWORD PTR [RIP+.L_4204b0]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_420280]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_42001a:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_420020:

            movapd XMM1,XMM7
            movsd QWORD PTR [RSP],XMM7
            subsd XMM1,XMM8
            andpd XMM3,XMM1
            ucomisd XMM3,XMM6
            jb .L_41ffef

            call cos@PLT

            movsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            subsd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            jmp .L_41fffb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420078:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            call .L_41fbb0

            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RBX+168]
            subsd XMM0,XMM8
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM1,QWORD PTR [RBX+360]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,XMM1
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM3,XMM3
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM2
            ja .L_420246
.L_420134:

            movsd XMM0,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+8],XMM2
            movsd QWORD PTR [RBP+24],XMM0
            jmp .L_41ff85
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420178:

            movapd XMM0,XMM4
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            jmp .L_41ffef
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4201b0:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM7
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM7
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM7
            call .L_445330

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            divsd XMM4,XMM0
            mulsd XMM3,QWORD PTR [RBX+168]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+24],XMM4
            mulsd XMM3,XMM3
            subsd XMM1,XMM3
            ucomisd XMM5,XMM1
            sqrtsd XMM2,XMM1
            ja .L_420266
.L_420238:

            divsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            jmp .L_41ff85
.L_420246:

            call sqrt@PLT

            jmp .L_420134
.L_420250:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41ff77
.L_420266:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBP+24]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_420238
.L_420280:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_42028b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM2,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+24],XMM6
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movapd XMM3,XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_420458

            jle .L_4203d0

            cmp EAX,2
            je .L_420360

            cmp EAX,3
            jne .L_420440

            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            addsd XMM3,XMM2
            ucomisd XMM0,XMM3
            jb .L_420470
.L_420336:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,48
.L_420353:

            pop RBX
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBP
            pop R12
            ret 
.L_420360:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RBX+16]
            movapd XMM3,XMM6
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            movapd XMM1,XMM7
            mulsd XMM3,XMM5
            mulsd XMM1,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM2
            addsd XMM3,XMM1
            ucomisd XMM0,XMM3
            jae .L_420336

            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM0,XMM4
            mulsd XMM4,XMM6
            divsd XMM1,XMM3
            mulsd XMM5,XMM7
            mulsd XMM2,XMM4
            mulsd XMM0,XMM1
            subsd XMM5,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
.L_4203bf:

            add RSP,48
.L_4203c3:

            mulsd XMM1,XMM5
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4203d0:

            test EAX,EAX
            jne .L_420440
.L_4203d4:

            movapd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_449d28]
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            ja .L_420490

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_420432:

            pop RBX
            pop RBP
            mulsd XMM0,XMM1
            mulsd XMM1,XMM3
            pop R12
            ret 
          .byte 0x90
.L_420440:

            add RSP,48
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420458:

            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            xorpd XMM3,XMM0
            xorpd XMM1,XMM0
            jmp .L_4203d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420470:

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM2,XMM3
            mulsd XMM4,XMM2
            movapd XMM1,XMM2
            mulsd XMM0,XMM4
            jmp .L_4203bf
.L_420490:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,48
.L_4204a5:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
.L_4204ae:

            nop
            nop
.L_4204b0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_4204b9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call hypot@PLT

            movsd QWORD PTR [RSP],XMM0
            divsd XMM0,QWORD PTR [RBX+24]
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            je .L_420700

            movsd XMM5,QWORD PTR [RSP+24]
            jle .L_420680

            cmp EAX,2
            je .L_4205a8

            cmp EAX,3
            jne .L_4206e8

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM1
            jb .L_420750

            pxor XMM0,XMM0
            pxor XMM5,XMM5
.L_420557:

            ucomisd XMM2,XMM0
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_42057c

            ucomisd XMM4,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_4206da
.L_42057c:

            mulsd XMM6,XMM2
            movsd QWORD PTR [RSP],XMM5
            mulsd XMM1,XMM4
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
            add RSP,72
.L_42059b:

            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4205a8:

            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            mov RBX,QWORD PTR [RBP+32]
            ucomisd XMM0,XMM1
            movsd XMM3,QWORD PTR [RBX+8]
            jb .L_4207a0

            movsd XMM5,QWORD PTR [RBP+336]
.L_4205cb:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov EDX,1
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            subsd XMM4,XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP+40]
            ucomisd XMM4,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_42064b

            ucomisd XMM2,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_4206da
.L_42064b:

            mulsd XMM6,XMM2
            movsd QWORD PTR [RSP],XMM5
            movsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM1,XMM4
            mulsd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
            add RSP,72
.L_42066f:

            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420680:

            test EAX,EAX
            jne .L_4206e8

            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM4,XMM1
            jb .L_420740
.L_420696:

            movsd XMM5,QWORD PTR [RBP+336]
.L_42069e:

            pxor XMM0,XMM0
            mov EDX,1
            ucomisd XMM3,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_4206c3

            ucomisd XMM2,XMM0
            setp AL
            cmove EDX,EAX
            test DL,DL
            je .L_4206da
.L_4206c3:

            movapd XMM1,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM5
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
.L_4206da:

            add RSP,72
.L_4206de:

            movapd XMM1,XMM5
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4206e8:

            pxor XMM5,XMM5
            add RSP,72
            pxor XMM0,XMM0
            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420700:

            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            ucomisd XMM4,XMM1
            jae .L_420696
.L_42071a:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42069e
          .byte 0x66
          .byte 0x90
.L_420740:

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_42071a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420750:

            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM5
            divsd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM5,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_420557
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4207a0:

            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM3,XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM5,QWORD PTR [RBX+16]
            movapd XMM0,XMM3
            divsd XMM5,XMM1
            addsd XMM0,XMM5
            call asin@PLT

            mov RBX,QWORD PTR [RBP+32]
            movapd XMM5,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_4205cb
.L_4207fe:

            nop
            nop
.L_420800:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,80
.L_42080b:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+40],XMM1
            call hypot@PLT

            mov EAX,DWORD PTR [R12+32]
            movapd XMM2,XMM0
            cmp EAX,1
            je .L_420b70

            jg .L_420960

            test EAX,EAX
            jne .L_420b40

            movq XMM0,QWORD PTR [RIP+.L_447ae0]
.L_420854:

            xorpd XMM2,XMM0
            divsd XMM2,QWORD PTR [R12+24]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd XMM1,QWORD PTR [RBP+168]
            movapd XMM7,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM7,QWORD PTR [RIP+.L_449d30]
            movsd QWORD PTR [RSP+24],XMM7
            call sin@PLT

            movsd XMM7,QWORD PTR [RIP+.L_447a18]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM7
.L_4208c0:

            mov EBX,8
.L_4208c5:

            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            subsd XMM3,XMM0
            addsd XMM1,XMM0
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+24]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM0
            ja .L_420ad0

            sub EBX,1
            je .L_420aa0

            movsd XMM1,QWORD PTR [RBP+168]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4208c5
.L_420960:

            cmp EAX,3
            jg .L_420b40

            movsd QWORD PTR [RSP],XMM0
            mulsd XMM0,QWORD PTR [R12+16]
            movsd XMM1,QWORD PTR [R12+24]
            call atan2@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+64]
            ucomisd XMM2,QWORD PTR [RIP+.L_448740]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            jp .L_420ba0

            jne .L_420ba0

            mulsd XMM7,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM7
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM0
.L_4209e6:

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+56],XMM2
            mulsd XMM0,XMM7
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM7,XMM5
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM2,QWORD PTR [R12+16]
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+48],XMM7
            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM7,QWORD PTR [R12+8]
            mulsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM5
            mulsd XMM7,XMM1
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+40],XMM2
            call sin@PLT

            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_4208c0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420aa0:

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM2
            call .L_413c90

            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
.L_420abb:

            add RSP,80
.L_420abf:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420ad0:

            mov EAX,DWORD PTR [R12+32]
            test EAX,EAX
            je .L_420b90
.L_420add:

            pxor XMM0,XMM0
            mov EDX,1
            movsd XMM7,QWORD PTR [RSP+40]
            ucomisd XMM7,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_420b0e

            movsd XMM6,QWORD PTR [RSP+48]
            ucomisd XMM6,XMM0
            setp AL
            cmove EDX,EAX
            test DL,DL
            je .L_420abb
.L_420b0e:

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,80
.L_420b2d:

            pop RBX
            movapd XMM1,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420b40:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_4208c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420b70:

            movsd XMM7,QWORD PTR [RSP+40]
            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            xorpd XMM7,XMM0
            movsd QWORD PTR [RSP+40],XMM7
            jmp .L_420854
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420b90:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_420add
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420ba0:

            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM1,QWORD PTR [R12+8]
            mulsd XMM0,QWORD PTR [R12+16]
            divsd XMM0,XMM2
            addsd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM0
            jmp .L_4209e6
.L_420be3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420bf0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
            call .L_403740

            test RAX,RAX
            je .L_420c70

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449ca8]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            jne .L_420c50
.L_420c33:

            movsd QWORD PTR [RBP],XMM0
            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41fe70
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420c50:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_420c33
.L_420c70:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41fb70
.L_420c7e:

            nop
            nop
.L_420c80:

            test RDI,RDI
            je .L_420c90

            jmp .L_420bf0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420c90:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_420cbe

            lea RDX,QWORD PTR [RIP+.L_41fba0]
            lea RCX,QWORD PTR [RIP+.L_449d00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_420cbe:

            add RSP,8
            ret 
.L_420cc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420cd0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_420ce3:

            call .L_403740

            test RAX,RAX
            je .L_420d8d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb8]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            je .L_420da0
.L_420d1b:

            movsd QWORD PTR [RBX+336],XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_420d33

            je .L_420d80
.L_420d33:

            mov RAX,QWORD PTR [RIP+.L_449d38]
            movsd XMM0,QWORD PTR [RIP+.L_449d40]
            mov RDI,RBX
            movsd QWORD PTR [RBX+344],XMM0
            mov QWORD PTR [RBX+360],RAX
            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RBX+352],XMM0
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBX+328],0
            add RSP,8
.L_420d76:

            pop RBX
            pop RBP
            jmp .L_41fe70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420d80:

            mov ESI,4294967262
            mov RDI,RBX
            call .L_413c90
.L_420d8d:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41fb70
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420da0:

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            jmp .L_420d1b
.L_420dad:

            nop
            nop
            nop
.L_420db0:

            test RDI,RDI
            je .L_420dc0

            jmp .L_420cd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420dc0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_420dee

            lea RDX,QWORD PTR [RIP+.L_41fba0]
            lea RCX,QWORD PTR [RIP+.L_449cc0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_420dee:

            add RSP,8
            ret 
.L_420df3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e00:

            xor EAX,EAX
            ret 
.L_420e03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e10:

            xor EAX,EAX
            ret 
.L_420e13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e20:

            test RDI,RDI
            je .L_420e50

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_420e48

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+32]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_420e48:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420e50:

            xor EAX,EAX
            ret 
.L_420e53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e60:

            jmp .L_420e20
.L_420e62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420e70:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_420e7d:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RBX+32]
            call .L_445c60

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM6,QWORD PTR [RSP+32]
            mov RDI,R12
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM5,XMM1
            mulsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM5,XMM4
            movsd XMM2,QWORD PTR [RBP+360]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM3,XMM4
            mulsd XMM2,QWORD PTR [RBX+24]
            mulsd XMM5,XMM6
            mulsd XMM1,XMM7
            mulsd XMM3,XMM6
            addsd XMM0,XMM5
            subsd XMM1,XMM3
            divsd XMM2,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,56
.L_420f48:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_420f4f:

            nop
.L_420f50:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM2,XMM2
            sub RSP,72
.L_420f5d:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RDI+360]
            movq QWORD PTR [RSP],XMM2
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call hypot@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            movapd XMM4,XMM0
            jp .L_420fc0

            movq XMM2,QWORD PTR [RSP]
            jne .L_420fc0

            movsd XMM3,QWORD PTR [RBX]
.L_420fa0:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP]
            add RSP,72
.L_420fac:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            jmp .L_445d30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420fc0:

            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM1,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM6,QWORD PTR [RBX+16]
            divsd XMM0,XMM4
            addsd XMM0,XMM6
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RBX+8]
            movq QWORD PTR [RSP],XMM0
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM5
            mulsd XMM0,XMM5
            subsd XMM1,XMM2
            call atan2@PLT

            movq XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM0
            jmp .L_420fa0
.L_42107e:

            nop
            nop
.L_421080:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_421093:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_403740

            test RAX,RAX
            je .L_421148

            lea RSI,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RBX+168]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RAX
            mov RBP,RAX
            call .L_4459f0

            test RAX,RAX
            mov QWORD PTR [RBP+32],RAX
            je .L_421148

            movsd XMM0,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            lea RAX,QWORD PTR [RIP+.L_420f50]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM1
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_420e70]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_42112d:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_421152

            add RSP,40
.L_421141:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421148:

            mov RDI,RBX
            call .L_420e20

            jmp .L_42112d
.L_421152:

            call __stack_chk_fail@PLT
.L_421157:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421160:

            test RDI,RDI
            je .L_421170

            jmp .L_421080
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421170:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42119e

            lea RDX,QWORD PTR [RIP+.L_420e60]
            lea RCX,QWORD PTR [RIP+.L_449d60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42119e:

            add RSP,8
            ret 
.L_4211a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4211b0:

            xor EAX,EAX
            ret 
.L_4211b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4211c0:

            test RDI,RDI
            je .L_4211f0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4211e8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+72]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4211e8:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4211f0:

            xor EAX,EAX
            ret 
.L_4211f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421200:

            jmp .L_4211c0
.L_421202:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421210:

            push R13
            push R12
            lea RAX,QWORD PTR [RIP+.L_4217a0]
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_421224:

            mov RBP,QWORD PTR [RDI+32]
            mov QWORD PTR [RDI+48],RAX
            movq XMM3,QWORD PTR [RIP+.L_447130]
            lea RAX,QWORD PTR [RIP+.L_421660]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            movsd XMM2,QWORD PTR [RBP+56]
            mov QWORD PTR [RDI+40],RAX
            movsd XMM5,QWORD PTR [RBP+64]
            movapd XMM0,XMM2
            addsd XMM0,XMM5
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            ja .L_4215f0

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            mov RSI,R13
            mov RDI,R12
            movaps XMMWORD PTR [RSP+16],XMM3
            call sincos@PLT

            pxor XMM7,XMM7
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM7
            subsd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM3,XMMWORD PTR [RSP+16]
            seta AL
            movsd XMM1,QWORD PTR [RSP+48]
            andpd XMM3,XMM2
            movsd QWORD PTR [RBP+8],XMM4
            mov DWORD PTR [RBP+80],EAX
            ja .L_4213b0

            ucomisd XMM3,QWORD PTR [RIP+.L_447cd0]
            jb .L_421610

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM3,XMM4
            mulsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RBP+8],XMM3
.L_42131a:

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM3
            mulsd XMM1,XMM1
            divsd XMM2,XMM3
            addsd XMM5,XMM3
            movsd QWORD PTR [RBP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM4,XMM5
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+24],XMM2
            addsd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM5,XMM0
            pxor XMM6,XMM6
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM1,XMM5
            ucomisd XMM6,XMM1
            sqrtsd XMM3,XMM1
            ja .L_421636
.L_421392:

            mulsd XMM2,XMM3
            mov RAX,RBX
            movsd QWORD PTR [RBP+40],XMM2
.L_42139e:

            add RSP,72
.L_4213a2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4213b0:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM3
            call .L_4446c0

            test RAX,RAX
            mov QWORD PTR [RBP+72],RAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            je .L_4215fa

            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call .L_444980

            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM2,QWORD PTR [RBX+216]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_445250

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            ucomisd XMM3,QWORD PTR [RIP+.L_447cd0]
            jb .L_421620

            movsd XMM0,QWORD PTR [RBP+64]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            call .L_444980

            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RBX+216]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_445250

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jp .L_4214ac

            je .L_42162f
.L_4214ac:

            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM0,QWORD PTR [RSP]
            mulsd XMM3,XMM3
            mulsd XMM4,XMM4
            movapd XMM1,XMM4
            subsd XMM1,XMM3
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_4214d0:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM1,QWORD PTR [RBX+168]
            movapd XMM6,XMM3
            mulsd XMM0,QWORD PTR [RBX+216]
            movsd QWORD PTR [RSP+40],XMM4
            subsd XMM6,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM6
            divsd XMM0,XMM1
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM5,QWORD PTR [RBP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM7,XMM3
            divsd XMM3,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM3
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP],XMM3
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBP],XMM7
            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM4
            movsd QWORD PTR [RSP+16],XMM4
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RSP+32]
            call .L_445250

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            pxor XMM6,XMM6
            movsd XMM3,QWORD PTR [RSP]
            subsd XMM4,XMM5
            ucomisd XMM6,XMM4
            sqrtsd XMM2,XMM4
            jbe .L_421392

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_421392
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4215f0:

            mov ESI,4294967275
            call .L_413c90
.L_4215fa:

            add RSP,72
.L_4215fe:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4211c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421610:

            movapd XMM3,XMM4
            jmp .L_42131a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421620:

            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM4
            jmp .L_4214d0
.L_42162f:

            xor EAX,EAX
            jmp .L_42139e
.L_421636:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_421392
.L_421655:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421660:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_421669:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            mov EAX,DWORD PTR [RBX+80]
            test EAX,EAX
            jne .L_421720

            mulsd XMM0,QWORD PTR [RBX+32]
.L_421697:

            movsd XMM4,QWORD PTR [RSP+8]
            pxor XMM1,XMM1
            subsd XMM4,XMM0
            ucomisd XMM1,XMM4
            movapd XMM0,XMM4
            movsd QWORD PTR [RBX+48],XMM4
            ja .L_421750

            movsd XMM2,QWORD PTR [RBX+24]
            sqrtsd XMM1,XMM4
            ja .L_421774
.L_4216c7:

            movsd XMM0,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+48],XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,56
.L_42170f:

            pop RBX
            pop RBP
            subsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421720:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM2,QWORD PTR [RBP+216]
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+24],XMM6
            call .L_445250

            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_421697
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421750:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,56
.L_42176d:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
.L_421774:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4216c7
.L_421796:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4217a0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            movapd XMM3,XMM0
            sub RSP,112
.L_4217b3:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP],XMM3
            movsd XMM0,QWORD PTR [RBX+40]
            subsd XMM0,XMM1
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call hypot@PLT

            pxor XMM2,XMM2
            movsd QWORD PTR [RBX+48],XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            jp .L_4217f4

            je .L_421868
.L_4217f4:

            movsd XMM4,QWORD PTR [RBX+8]
            ucomisd XMM2,XMM4
            ja .L_421900
.L_421803:

            divsd XMM0,QWORD PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+80]
            test EAX,EAX
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,XMM0
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            je .L_421890

            divsd XMM1,XMM4
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movsd XMM0,QWORD PTR [RBX]
            movsd XMM5,QWORD PTR [RIP+.L_449e30]
            movapd XMM3,XMM1
            andpd XMM3,XMM4
            subsd XMM0,XMM3
            andpd XMM0,XMM4
            ucomisd XMM0,XMM5
            ja .L_421930

            ucomisd XMM2,XMM1
            jbe .L_4218b9
.L_421858:

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            jmp .L_4218c1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421868:

            movsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM0,XMM2
            jbe .L_4218e8

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_42187f:

            movapd XMM1,XMM3
.L_421883:

            add RSP,112
.L_421887:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_421890:

            divsd XMM0,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM1
            jae .L_421ae0

            ucomisd XMM2,XMM0
            ja .L_421858
.L_4218b9:

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_4218c1:

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP]
            divsd XMM0,QWORD PTR [RBX+8]
            jmp .L_42187f

            nop
            nop
            nop
            nop
            nop
.L_4218e8:

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            pxor XMM0,XMM0
            jmp .L_42187f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421900:

            movq XMM1,QWORD PTR [RIP+.L_447ae0]
            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM0,XMM1
            xorpd XMM3,XMM1
            xorpd XMM7,XMM1
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_421803
.L_421930:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM7,QWORD PTR [RBP+168]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM5
            movsd XMM6,QWORD PTR [RBP+216]
            movsd QWORD PTR [RSP+72],XMM7
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+64],XMM1
            call asin@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP]
            movapd XMM3,XMM0
            ucomisd XMM5,XMM7
            ja .L_421aa3

            movsd XMM1,QWORD PTR [RSP+64]
            mov R12D,15
            lea R14,QWORD PTR [RSP+104]
            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            lea R13,QWORD PTR [RSP+96]
            divsd XMM1,QWORD PTR [RSP+24]
            movapd XMM4,XMMWORD PTR [RSP+32]
            divsd XMM6,XMM7
            movsd QWORD PTR [RSP+80],XMM1
            movsd QWORD PTR [RSP+88],XMM6
            jmp .L_4219d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4219c8:

            sub R12D,1
            je .L_421af0
.L_4219d2:

            movapd XMM0,XMM3
            mov RSI,R13
            mov RDI,R14
            movaps XMMWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd XMM6,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP],XMM6
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM1
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+24],XMM5
            divsd XMM0,XMM1
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+80]
            divsd XMM2,XMM5
            movapd XMM4,XMMWORD PTR [RSP+48]
            mulsd XMM0,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM1,XMM2
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,XMM5
            mulsd XMM1,XMM5
            divsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,XMM1
            addsd XMM3,XMM0
            andpd XMM0,XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_447cd0]
            ja .L_4219c8
.L_421aa3:

            ucomisd XMM3,QWORD PTR [RIP+.L_447db8]
            jbe .L_4218c1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421ab8:

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP]
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            jmp .L_421883
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421ae0:

            call asin@PLT

            movapd XMM3,XMM0
            jmp .L_4218c1
          .byte 0x66
          .byte 0x90
.L_421af0:

            movsd XMM3,QWORD PTR [RIP+.L_4470e0]
            jmp .L_421ab8
.L_421afa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_421b00:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_421b13:

            call .L_403740

            test RAX,RAX
            je .L_421b60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov QWORD PTR [RBP+56],RAX
            call .L_403e60

            mov QWORD PTR [RBP+64],RAX
            add RSP,8
.L_421b56:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_421210
.L_421b60:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4211c0
.L_421b6e:

            nop
            nop
.L_421b70:

            test RDI,RDI
            je .L_421b80

            jmp .L_421b00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421b80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_421bae

            lea RDX,QWORD PTR [RIP+.L_421200]
            lea RCX,QWORD PTR [RIP+.L_449e00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_421bae:

            add RSP,8
            ret 
.L_421bb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421bc0:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_421bd3:

            call .L_403740

            test RAX,RAX
            je .L_421c40

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb8]
            mov QWORD PTR [RBP+64],RAX
            call .L_403e60

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            je .L_421c30
.L_421c1a:

            movsd QWORD PTR [RBP+56],XMM0
            add RSP,8
.L_421c23:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_421210
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421c30:

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            jmp .L_421c1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421c40:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4211c0
.L_421c4e:

            nop
            nop
.L_421c50:

            test RDI,RDI
            je .L_421c60

            jmp .L_421bc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421c60:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_421c8e

            lea RDX,QWORD PTR [RIP+.L_421200]
            lea RCX,QWORD PTR [RIP+.L_449dc0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_421c8e:

            add RSP,8
            ret 
.L_421c93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421ca0:

            mov EAX,10000
            ret 
.L_421ca6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421cb0:

            mov EAX,10000
            ret 
.L_421cb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421cc0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,152
.L_421cd0:

            lea RBP,QWORD PTR [RSP+136]
            lea RBX,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+112],XMM1
            mov RSI,RBX
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea0]
            mov RSI,RBX
            movsd XMM6,QWORD PTR [RSP+128]
            mov RDI,RBP
            subsd XMM0,QWORD PTR [RSP]
            mov R13,QWORD PTR [R12+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+16],XMM6
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+112]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            movsd XMM5,QWORD PTR [RSP+128]
            andpd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+136]
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_4221d0

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_421f88

            movsd QWORD PTR [RSP+112],XMM2
            movsd XMM4,QWORD PTR [RIP+.L_449ea8]
.L_421d97:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM5
            addsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM0
            andpd XMM1,XMM3
            ucomisd XMM1,XMM4
            jbe .L_422330

            ucomisd XMM1,QWORD PTR [RIP+.L_449ec8]
            ja .L_422240

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_422268

            movsd XMM6,QWORD PTR [RIP+.L_449e78]
            movsd XMM2,QWORD PTR [RIP+.L_449e88]
            movsd QWORD PTR [RSP],XMM6
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RIP+.L_449e90]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM0,QWORD PTR [RIP+.L_449e98]
            movsd XMM6,QWORD PTR [RIP+.L_449ed0]
.L_421e1a:

            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+80],XMM6
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            call acos@PLT

            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+112],XMM1
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+96]
.L_421e6c:

            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM6
            andpd XMM3,XMM1
            ucomisd XMM0,XMM3
            jbe .L_421ecf

            movsd XMM7,QWORD PTR [RSP+112]
            movapd XMM4,XMM1
            ucomisd XMM7,XMM2
            ja .L_421e9e

            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
.L_421e9e:

            addsd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM5,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
.L_421ecf:

            movapd XMM0,XMM1
            mov RSI,RBX
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM2
            movsd XMM0,QWORD PTR [RSP+136]
            movsd XMM1,QWORD PTR [RSP+128]
            mulsd XMM0,XMM5
            jbe .L_421f20

            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
.L_421f20:

            mov EAX,DWORD PTR [R13]
            mulsd XMM1,XMM5
            test EAX,EAX
            addsd XMM1,QWORD PTR [RSP]
            je .L_4221c2

            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_449ef0]
            movsd XMM2,QWORD PTR [RIP+.L_449ef8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM5,XMM1
            add RSP,152
.L_421f5c:

            mulsd XMM1,XMM4
            mulsd XMM5,XMM2
            mulsd XMM0,XMM2
            mulsd XMM3,XMM4
            pop RBX
            pop RBP
            subsd XMM0,XMM1
            subsd XMM3,XMM5
            pop R12
            pop R13
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421f88:

            movsd XMM7,QWORD PTR [RIP+.L_447a78]
            movsd QWORD PTR [RSP+112],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470e0]
            movsd QWORD PTR [RSP+32],XMM7
.L_421fa4:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,RBX
            mov RDI,RBP
            movaps XMMWORD PTR [RSP+48],XMM3
            addsd XMM0,QWORD PTR [RIP+.L_449eb0]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RIP+.L_449eb8]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            movapd XMM3,XMMWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RIP+.L_449ec0]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RSP+136]
            addsd XMM0,XMM2
            movapd XMM2,XMM0
            andpd XMM2,XMM3
            ucomisd XMM2,XMM4
            jbe .L_4222e0

            ucomisd XMM2,QWORD PTR [RIP+.L_449ec8]
            ja .L_422240

            pxor XMM2,XMM2
            movapd XMM7,XMM4
            ucomisd XMM2,XMM0
            ja .L_4222a0
.L_42203b:

            movsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            jbe .L_422398

            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RIP+.L_449e70]
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_449e80]
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM5
.L_422076:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+96],XMM4
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+80],XMM2
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_449ed0]
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            call pow@PLT

            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM8,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_449ed8]
            movsd XMM2,QWORD PTR [RSP+80]
            subsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+32]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+96]
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            ucomisd XMM2,XMM0
            ja .L_4221a0

            movapd XMM5,XMM8
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+120],XMM4
            mulsd XMM5,QWORD PTR [RIP+.L_449ee0]
            movsd QWORD PTR [RSP+80],XMM8
            movaps XMMWORD PTR [RSP+96],XMM3
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+64],XMM5
            call pow@PLT

            movsd XMM8,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+96]
            addsd XMM0,XMM8
            movsd XMM4,QWORD PTR [RSP+120]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+64]
            divsd XMM0,QWORD PTR [RIP+.L_449ee8]
            movapd XMM1,XMM0
            andpd XMM1,XMM3
            ucomisd XMM1,XMM4
            jbe .L_422422

            ucomisd XMM1,QWORD PTR [RIP+.L_449ec8]
            movsd XMM2,QWORD PTR [RSP+32]
            ja .L_4221a0

            ucomisd XMM2,XMM0
            ja .L_422380

            movapd XMM0,XMM4
            movsd XMM2,QWORD PTR [RIP+.L_449e88]
            jmp .L_421e6c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4221a0:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM2
.L_4221c2:

            add RSP,152
.L_4221c9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4221d0:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_449ea8]
            divsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            movaps XMMWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            call atan2@PLT

            movsd XMM2,QWORD PTR [RIP+.L_449e88]
            movsd QWORD PTR [RSP+112],XMM0
            ucomisd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+80]
            ja .L_421fa4

            jmp .L_421d97
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422240:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,152
.L_422258:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422268:

            movsd XMM7,QWORD PTR [RIP+.L_449e78]
            movsd QWORD PTR [RSP],XMM7
.L_422275:

            mov RDI,R12
            mov ESI,4294967276
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP]
            add RSP,152
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4222a0:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,QWORD PTR [RIP+.L_447db8]
            ja .L_422410

            mulsd XMM1,QWORD PTR [RIP+.L_449f00]
            movapd XMM0,XMM6
            mulsd XMM5,QWORD PTR [RSP+32]
            addsd XMM1,XMM5
            call atan2@PLT

            movsd XMM6,QWORD PTR [RIP+.L_449e70]
            movsd QWORD PTR [RSP],XMM6
            jmp .L_422275
          .byte 0x66
          .byte 0x90
.L_4222e0:

            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+48],XMM5
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM1
            call acos@PLT

            pxor XMM2,XMM2
            movapd XMM7,XMM0
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            movapd XMM3,XMMWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+64]
            jmp .L_42203b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422330:

            movsd QWORD PTR [RSP+48],XMM4
            movaps XMMWORD PTR [RSP+32],XMM3
            call acos@PLT

            pxor XMM2,XMM2
            movapd XMM7,XMM0
            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RIP+.L_449e88]
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM6,QWORD PTR [RIP+.L_449e78]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM6
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM3,XMMWORD PTR [RSP+32]
            jmp .L_422076
.L_422380:

            movsd XMM0,QWORD PTR [RIP+.L_447a58]
            movsd XMM2,QWORD PTR [RIP+.L_449e88]
            jmp .L_421e6c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422398:

            mulsd XMM1,QWORD PTR [RIP+.L_449f00]
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+80],XMM2
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM1,XMM5
            addsd XMM1,XMM0
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM4,QWORD PTR [RIP+.L_449e80]
            movsd XMM6,QWORD PTR [RIP+.L_449e70]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP],XMM6
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+96]
            jmp .L_422076
.L_422410:

            movsd XMM5,QWORD PTR [RIP+.L_449e70]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_422275
.L_422422:

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RIP+.L_449e88]
            movsd QWORD PTR [RSP+112],XMM4
            jmp .L_421e1a
.L_422441:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422450:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_422459:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            je .L_4224ab

            movapd XMM4,XMM1
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM7,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_449ef0]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_449ef8]
            mulsd XMM3,XMM2
            mulsd XMM4,XMM0
            mulsd XMM1,XMM2
            mulsd XMM0,XMM7
            subsd XMM4,XMM3
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM4
.L_4224ab:

            pxor XMM4,XMM4
            ucomisd XMM4,QWORD PTR [RSP+40]
            ja .L_422788

            addsd XMM1,QWORD PTR [RIP+.L_449e70]
            movsd XMM4,QWORD PTR [RIP+.L_449ea8]
            movsd XMM7,QWORD PTR [RIP+.L_449e88]
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+88],XMM7
            movsd QWORD PTR [RSP+64],XMM4
            movapd XMM2,XMM1
.L_4224e9:

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+48],XMM0
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+40]
            call atan2@PLT

            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+80],XMM0
            movapd XMM4,XMM0
            movsd QWORD PTR [RSP+56],XMM0
            movapd XMM5,XMM0
            ucomisd XMM3,QWORD PTR [RSP+40]
            andpd XMM4,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP+32],XMM4
            ja .L_422555

            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+56],XMM5
.L_422555:

            movsd XMM2,QWORD PTR [RSP+48]
            mov EBX,10
            jmp .L_4225b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422568:

            addsd XMM0,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM2
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+16]
.L_422585:

            subsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM2
            ja .L_422680

            sub EBX,1
            je .L_422660

            movapd XMM2,XMM0
.L_4225b0:

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_449f08]
            movsd QWORD PTR [RSP+24],XMM2
            divsd XMM0,QWORD PTR [RIP+.L_449ee0]
            call pow@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM0,XMM6
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_449ed0]
            call pow@PLT

            movsd XMM7,QWORD PTR [RIP+.L_449ed8]
            movsd QWORD PTR [RSP+16],XMM0
            subsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_449ed0]
            call pow@PLT

            addsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,QWORD PTR [RIP+.L_449ee8]
            call acos@PLT

            ucomisd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            ja .L_422568

            movapd XMM0,XMM2
            jmp .L_422585
.L_422660:

            mov RDI,RBP
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,120
.L_422675:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422680:

            lea RBX,QWORD PTR [RSP+104]
            lea RBP,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+80]
            mov RSI,RBP
            movsd XMM5,QWORD PTR [RSP+88]
            mov RDI,RBX
            divsd XMM1,QWORD PTR [RIP+.L_449ed0]
            movsd XMM3,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            subsd XMM5,XMM1
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+96]
            mulsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM2
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            mulsd XMM4,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM0,XMM5
            subsd XMM1,XMM4
            call atan2@PLT

            pxor XMM3,XMM3
            ucomisd XMM3,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            ja .L_4227c8

            movsd XMM2,QWORD PTR [RIP+.L_449ea0]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_422777:

            add RSP,120
.L_42277b:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422788:

            movsd XMM2,QWORD PTR [RIP+.L_449e70]
            movsd XMM3,QWORD PTR [RIP+.L_449e80]
            movsd XMM5,QWORD PTR [RIP+.L_449eb8]
            subsd XMM2,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_449ec0]
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM7
            jmp .L_4224e9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4227c8:

            subsd XMM0,QWORD PTR [RIP+.L_449eb0]
            jmp .L_422777
.L_4227d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4227e0:

            test RDI,RDI
            je .L_422800

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422800:

            ret 
.L_422802:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422810:

            push RBP
            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_422823:

            call .L_403740

            test RAX,RAX
            je .L_422878

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449e38]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            call .L_403e60

            mov DWORD PTR [RBP],EAX
            lea RAX,QWORD PTR [RIP+.L_422450]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_421cc0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_42286e:

            add RSP,8
.L_422872:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422878:

            test RBX,RBX
            je .L_422898

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422898:

            xor EAX,EAX
            jmp .L_42286e
.L_42289c:

            nop
            nop
            nop
            nop
.L_4228a0:

            test RDI,RDI
            je .L_4228b0

            jmp .L_422810
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4228b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4228de

            lea RDX,QWORD PTR [RIP+.L_4227e0]
            lea RCX,QWORD PTR [RIP+.L_449e40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4228de:

            add RSP,8
            ret 
.L_4228e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4228f0:

            xor EAX,EAX
            ret 
.L_4228f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422900:

            test RDI,RDI
            je .L_422930

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_422928

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+32]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_422928:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422930:

            xor EAX,EAX
            ret 
.L_422933:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422940:

            jmp .L_422900
.L_422942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422950:

            sub RSP,56
.L_422954:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RAX+8]
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM2,QWORD PTR [RAX]
            subsd XMM2,XMM1
            movapd XMM4,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            andpd XMM4,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,QWORD PTR [RIP+.L_447cd0]
            jbe .L_4229e8

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM0,XMM2
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            add RSP,56
.L_4229d9:

            subsd XMM3,XMM2
            movapd XMM1,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4229e8:

            pxor XMM1,XMM1
            add RSP,56
            pxor XMM0,XMM0
            ret 
.L_4229f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422a00:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_422a0d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX+32]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM4
            addsd XMM3,QWORD PTR [RBX+24]
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+32],XMM3
            call .L_4447b0

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [R13+176]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM1,XMM5
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM1,XMM5
            mulsd XMM4,QWORD PTR [RSP+8]
            subsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_422b0b
.L_422ac0:

            mulsd XMM1,XMM3
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            divsd XMM4,XMM1
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RSP+56]
            add RSP,72
.L_422afc:

            pop RBX
            pop RBP
            subsd XMM1,XMM2
            pop R12
            pop R13
            movapd XMM0,XMM3
            ret 
.L_422b0b:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_422ac0
.L_422b36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422b40:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_422b49:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM3,QWORD PTR [RBX+8]
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movapd XMM5,XMM0
            movq XMM1,QWORD PTR [RIP+.L_447130]
            addsd XMM2,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RIP+.L_447a20]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMM1
            ucomisd XMM0,XMM4
            ja .L_422c20

            subsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            andpd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM4,XMM1
            jb .L_422bd0
.L_422bc0:

            add RSP,40
.L_422bc4:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422bd0:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            divsd XMM0,XMM1
            jmp .L_422bc0
          .byte 0x66
          .byte 0x90
.L_422c20:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
.L_422c3d:

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
.L_422c48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422c50:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM7,XMM0
            sub RSP,72
.L_422c5d:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            movapd XMM5,XMM0
            movapd XMM0,XMM7
            subsd XMM5,XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP],XMM5
            call hypot@PLT

            movapd XMM6,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RBP+176]
            subsd XMM0,XMM6
            call .L_4447f0

            movq XMM1,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM1
            ucomisd XMM2,XMM0
            ja .L_422d00

            subsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            andpd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM2,XMM1
            jb .L_422d98
.L_422cef:

            add RSP,72
.L_422cf3:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422d00:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            pxor XMM4,XMM4
            subsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_422dc6
.L_422d81:

            mulsd XMM2,XMM1
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+24]
            jmp .L_422cef
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422d98:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,72
.L_422dbf:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
.L_422dc6:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_422d81
.L_422def:

            nop
.L_422df0:

            push R12
            push RBP
            mov ESI,40
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_422e05:

            call .L_403740

            test RAX,RAX
            je .L_422ec5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM1
            movsd QWORD PTR [RBP],XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM2
            ja .L_422eb8

            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM4
            jp .L_422ee8

            jne .L_422ee8

            addsd XMM2,XMM3
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            jae .L_422ed8

            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_422e93:

            lea RAX,QWORD PTR [RIP+.L_422b40]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_422950]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_422ead:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422eb8:

            mov ESI,4294967273
            mov RDI,RBX
            call .L_413c90
.L_422ec5:

            add RSP,48
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_422900
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422ed8:

            mov QWORD PTR [RBP+8],0
            jmp .L_422e93
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422ee8:

            movsd QWORD PTR [RSP+24],XMM4
            call .L_4446c0

            movsd XMM5,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBP+32],RAX
            mov R12,RAX
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM2,XMM3
            movsd QWORD PTR [RBP+16],XMM1
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call .L_4447b0

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBP+24],XMM0
            mulsd XMM2,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_422fb0
.L_422f81:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_422c50]
            divsd XMM3,XMM1
            movsd QWORD PTR [RBP+16],XMM3
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_422a00]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_422fa8:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_422fb0:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_422f81
.L_422fd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422fe0:

            test RDI,RDI
            je .L_422ff0

            jmp .L_422df0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422ff0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42301e

            lea RDX,QWORD PTR [RIP+.L_422940]
            lea RCX,QWORD PTR [RIP+.L_449f20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42301e:

            add RSP,8
            ret 
.L_423023:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423030:

            xor EAX,EAX
            ret 
.L_423033:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423040:

            test RDI,RDI
            je .L_423078

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_423070

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+48]
            test RDI,RDI
            je .L_423064

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_423064:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_423070:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423078:

            xor EAX,EAX
            ret 
.L_42307b:

            nop
            nop
            nop
            nop
            nop
.L_423080:

            jmp .L_423040
.L_423082:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423090:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            movapd XMM0,XMM1
            sub RSP,56
.L_4230a0:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBP+32]
            mov RDX,QWORD PTR [RIP+.L_4470f0]
            or DWORD PTR [RBX+96],4
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            mov QWORD PTR [RBX+32],RDX
            mov EDX,DWORD PTR [RAX+56]
            movsd XMM7,QWORD PTR [RAX+16]
            movsd XMM3,QWORD PTR [RAX+40]
            test EDX,EDX
            movsd XMM4,QWORD PTR [RSP]
            je .L_423130

            mov RDI,QWORD PTR [RAX+48]
            movapd XMM2,XMM6
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM5
            call .L_4447b0

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
.L_423130:

            subsd XMM3,XMM4
            movsd XMM2,QWORD PTR [RBP+176]
            movapd XMM1,XMM6
            movapd XMM0,XMM5
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP],XMM3
            call .L_444980

            movsd XMM3,QWORD PTR [RSP]
            divsd XMM3,XMM0
            movsd QWORD PTR [RBX+40],XMM3
            add RSP,56
.L_423164:

            pop RBX
            pop RBP
            ret 
.L_423167:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423170:

            push R12
            push RBP
            push RBX
            movapd XMM4,XMM0
            movapd XMM5,XMM1
            sub RSP,48
.L_423180:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+56]
            movsd XMM3,QWORD PTR [RBX+40]
            test EAX,EAX
            jne .L_4231f0

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
.L_42319a:

            mulsd XMM4,QWORD PTR [RBX+16]
            subsd XMM3,XMM5
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RBX+24],XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+32]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,48
.L_4231dc:

            pop RBX
            pop RBP
            subsd XMM1,XMM3
            pop R12
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4231f0:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+40]
            call .L_4447b0

            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_42319a
.L_42324f:

            nop
.L_423250:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_423259:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RBX+32]
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call hypot@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBX+24],XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM1
            jp .L_42329e

            je .L_4232e8
.L_42329e:

            ucomisd XMM1,QWORD PTR [RBX+16]
            ja .L_423360

            mov EAX,DWORD PTR [RBX+56]
            movsd XMM3,QWORD PTR [RBX+40]
            subsd XMM3,XMM0
            test EAX,EAX
            jne .L_423330
.L_4232b9:

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RBX+16]
            add RSP,40
.L_4232dd:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4232e8:

            movsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM0,XMM1
            jbe .L_423310

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            add RSP,40
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423310:

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            add RSP,40
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423330:

            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RBP+176]
            call .L_4447f0

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_4232b9
          .byte 0x66
          .byte 0x90
.L_423360:

            movq XMM1,QWORD PTR [RIP+.L_447ae0]
            mov EAX,DWORD PTR [RBX+56]
            xorpd XMM3,XMM1
            xorpd XMM0,XMM1
            test EAX,EAX
            xorpd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM3,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+24],XMM0
            subsd XMM3,XMM0
            je .L_4232b9

            jmp .L_423330
.L_423395:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4233a0:

            push R13
            push R12
            mov ESI,64
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_4233b7:

            call .L_403740

            test RAX,RAX
            je .L_423508

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov QWORD PTR [RBP],RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM0
            addsd XMM0,QWORD PTR [RBP]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_423640

            movsd XMM0,QWORD PTR [RBX+176]
            call .L_4446c0

            test RAX,RAX
            mov QWORD PTR [RBP+48],RAX
            je .L_423508

            movsd XMM1,QWORD PTR [RBP]
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xor EAX,EAX
            movsd XMM6,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+56]
            subsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBP+16],XMM4
            movapd XMM5,XMM0
            pxor XMM0,XMM0
            andpd XMM5,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            seta AL
            mov DWORD PTR [RBP+56],EAX
            ja .L_423570

            ucomisd XMM5,QWORD PTR [RIP+.L_447cd0]
            jae .L_423520
.L_4234bb:

            divsd XMM3,XMM4
            addsd XMM3,XMM1
            movsd QWORD PTR [RBP+40],XMM3
            subsd XMM3,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+32],XMM3
.L_4234d5:

            lea RAX,QWORD PTR [RIP+.L_423250]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_423170]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_423090]
            mov QWORD PTR [RBX+104],RAX
            mov RAX,RBX
.L_4234f9:

            add RSP,72
.L_4234fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423508:

            add RSP,72
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_423040
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423520:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+8]
            movapd XMM4,XMM3
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM4,XMM0
            subsd XMM6,XMM1
            divsd XMM4,XMM6
            movsd QWORD PTR [RBP+16],XMM4
            jmp .L_4234bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423570:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call .L_444980

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM2,XMM3
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RBP]
            call .L_4447b0

            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM6,XMM0
            ucomisd XMM5,QWORD PTR [RIP+.L_447cd0]
            jae .L_423660

            movsd XMM0,QWORD PTR [RBP+16]
.L_4235d4:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            movsd XMM4,QWORD PTR [RBX+336]
            divsd XMM3,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            addsd XMM3,XMM6
            movsd QWORD PTR [RBP+40],XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+48]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            call .L_4447b0

            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            movsd QWORD PTR [RBP+32],XMM3
            jmp .L_4234d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423640:

            mov ESI,4294967275
            mov RDI,RBX
            call .L_413c90

            mov RDI,RBX
            call .L_423040

            xor EAX,EAX
            jmp .L_4234f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423660:

            movsd QWORD PTR [RSP+40],XMM0
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RBP+8]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movapd XMM1,XMM5
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            call .L_444980

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RBP+48]
            subsd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM2,XMM5
            movapd XMM1,XMM3
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_4447b0

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM0,XMM6
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+16],XMM4
            jmp .L_4235d4
.L_4236f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423700:

            test RDI,RDI
            je .L_423710

            jmp .L_4233a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423710:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42373e

            lea RDX,QWORD PTR [RIP+.L_423080]
            lea RCX,QWORD PTR [RIP+.L_449f60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42373e:

            add RSP,8
            ret 
.L_423743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423750:

            xor EAX,EAX
            ret 
.L_423753:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423760:

            test RDI,RDI
            je .L_423788

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42377e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42377e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_423788:

            xor EAX,EAX
            ret 
.L_42378b:

            nop
            nop
            nop
            nop
            nop
.L_423790:

            jmp .L_423760
.L_423792:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4237a0:

            push RBX
            mov RBX,RDI
            sub RSP,16

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM1,QWORD PTR [RIP+.L_448430]
            mulsd XMM0,QWORD PTR [RIP+.L_447a78]
            divsd XMM0,QWORD PTR [RIP+.L_448738]
            ucomisd XMM0,XMM1
            jb .L_4237da

            nop
            nop
.L_4237d0:

            subsd XMM0,XMM1
            ucomisd XMM0,XMM1
            jae .L_4237d0
.L_4237da:

            movsd XMM2,QWORD PTR [RIP+.L_44a128]
            ucomisd XMM2,XMM0
            jb .L_4237fa

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4237f0:

            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            jae .L_4237f0
.L_4237fa:

            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP]
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM5,XMM3
            mulsd XMM2,XMM0
            mulsd XMM1,XMM4
            mulsd XMM5,XMM4
            mulsd XMM0,XMM3
            addsd XMM2,XMM5
            subsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM2
            movsd QWORD PTR [RBX+8],XMM0
            add RSP,16

            pop RBX
            ret 
.L_42384a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_423850:

            divsd XMM1,QWORD PTR [RIP+.L_447c88]
            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movq XMM8,QWORD PTR [RIP+.L_447130]
            movsd XMM7,QWORD PTR [RIP+.L_447a80]
            movapd XMM4,XMM1
            divsd XMM1,XMM0
            mulsd XMM4,XMM3
            movapd XMM6,XMM1
            subsd XMM2,XMM4
            movapd XMM9,XMM1
            addsd XMM6,XMM3
            xorpd XMM9,XMMWORD PTR [RIP+.L_447ae0]
            divsd XMM2,XMM0
            movapd XMM0,XMM8
            movapd XMM4,XMM6
            movapd XMM5,XMM6
            andpd XMM4,XMM8
            ucomisd XMM7,XMM4
            subsd XMM9,XMM2
            jbe .L_4238f4

            cvttsd2si RAX,XMM6
            pxor XMM4,XMM4
            movsd XMM10,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM0,XMM6
            cvtsi2sd XMM4,RAX
            movapd XMM12,XMM4
            cmpnlesd XMM12,XMM6
            movapd XMM5,XMM12
            andpd XMM5,XMM10
            subsd XMM4,XMM5
            movapd XMM5,XMM4
            orpd XMM5,XMM0
.L_4238f4:

            movapd XMM4,XMM2
            cvttsd2si EDX,XMM5
            movapd XMM0,XMM8
            addsd XMM4,XMM3
            movapd XMM6,XMM4
            movapd XMM10,XMM4
            andpd XMM6,XMM8
            ucomisd XMM7,XMM6
            jbe .L_423956

            cvttsd2si RAX,XMM4
            pxor XMM6,XMM6
            movsd XMM11,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM0,XMM10
            cvtsi2sd XMM6,RAX
            movapd XMM13,XMM6
            cmpnlesd XMM13,XMM4
            movapd XMM4,XMM13
            andpd XMM4,XMM11
            subsd XMM6,XMM4
            movapd XMM4,XMM6
            orpd XMM4,XMM0
.L_423956:

            addsd XMM3,XMM9
            cvttsd2si EAX,XMM4
            movapd XMM6,XMM8
            movapd XMM0,XMM3
            movapd XMM10,XMM3
            andpd XMM3,XMM8
            ucomisd XMM7,XMM3
            jbe .L_4239b0

            cvttsd2si RCX,XMM0
            pxor XMM3,XMM3
            andnpd XMM6,XMM10
            cvtsi2sd XMM3,RCX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM0
            movapd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            andpd XMM0,XMM7
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            orpd XMM0,XMM6
.L_4239b0:

            cvttsd2si R8D,XMM0
            lea ECX,DWORD PTR [RDX+RAX*1]
            add ECX,R8D
            je .L_4239f0

            subsd XMM5,XMM1
            subsd XMM4,XMM2
            subsd XMM0,XMM9
            andpd XMM5,XMM8
            andpd XMM4,XMM8
            andpd XMM0,XMM8
            ucomisd XMM5,XMM4
            jb .L_423a18

            ucomisd XMM5,XMM0
            jb .L_423a18

            sub EDX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4239f0:

            test EDX,EDX
            js .L_423a30
.L_4239f4:

            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RDI],EDX
            imul EDX,EDX,100
            mov ECX,R8D
            shr ECX,31
            add ECX,R8D
            sar ECX,1
            neg ECX
            sub ECX,EAX
            add EAX,EDX
            mov DWORD PTR [RSI],ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423a18:

            ucomisd XMM4,XMM5
            jb .L_4239f0

            mov R9D,EAX
            sub R9D,ECX
            ucomisd XMM4,XMM0
            cmovae EAX,R9D
            test EDX,EDX
            jns .L_4239f4
.L_423a30:

            mov ECX,EDX
            mov DWORD PTR [RDI],EDX
            shr ECX,31
            add ECX,EDX
            sar ECX,1
            imul EDX,EDX,100
            neg ECX
            sub ECX,EAX
            mov DWORD PTR [RSI],ECX
            add EAX,EDX
            ret 
.L_423a47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a50:

            sub EDI,1
            mov EDX,1717986919
            push RBP
            mov EAX,EDI
            mov ECX,EDI
            push RBX
            imul EDX
            sar ECX,31
            mov RBX,RSI
            sub RSP,8
            mov EAX,EDX
            sar EDX,1
            sub EDX,ECX
            sar EAX,2
            sub EAX,ECX
            lea ECX,DWORD PTR [RDX+RDX*4]
            lea EAX,DWORD PTR [RAX+RAX*4]
            sub EDI,ECX
            mov ECX,EDX
            shr ECX,31
            lea EBP,DWORD PTR [RAX+RDI*1+1]
            add EDX,ECX
            and EDX,1
            sub EDX,ECX
            cmp EDX,1
            je .L_423ab0

            movsd XMM0,QWORD PTR [RIP+.L_447c98]
            mov RDI,RSI
            call .L_4237a0

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423ab0:

            movsd XMM0,QWORD PTR [RIP+.L_44a130]
            mov RDI,RSI
            call .L_4237a0

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov EAX,EBP
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44a138]
            addsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+8],XMM0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_423aeb:

            nop
            nop
            nop
            nop
            nop
.L_423af0:

            mov EDX,DWORD PTR [RDI+4]
            mov ECX,DWORD PTR [RDI+8]
            test EDX,EDX
            js .L_423b20

            lea ESI,DWORD PTR [RDX+1]
            neg EDX
            mov DWORD PTR [RDI],1
            mov EAX,ESI
            shr EAX,31
            add EAX,ESI
            sar EAX,1
            neg EAX
            sub EAX,ECX
            sub EDX,EAX
            mov DWORD PTR [RDI+8],EAX
            mov DWORD PTR [RDI+12],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423b20:

            mov EAX,EDX
            mov DWORD PTR [RDI],1
            shr EAX,31
            add EAX,EDX
            neg EDX
            sar EAX,1
            neg EAX
            sub EAX,ECX
            sub EDX,EAX
            mov DWORD PTR [RDI+8],EAX
            mov DWORD PTR [RDI+12],EDX
            ret 
.L_423b3e:

            nop
            nop
.L_423b40:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,ESI
            mov R13,RCX
            sub RSP,88
.L_423b52:

            movdqa XMM0,XMMWORD PTR [RDX]
            lea RSI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_423a50

            mov EBX,EAX
            movabs RAX,8589934591
            movabs RDX,4294967299
            and RAX,QWORD PTR [R12+40]
            cmp RAX,RDX
            je .L_423d60

            mov EAX,DWORD PTR [R12+40]
            mov EBP,DWORD PTR [R12+44]
            pxor XMM1,XMM1
            test EAX,EAX
            cvtsi2sd XMM1,EBP
            jg .L_423cd0
.L_423bb3:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM0,QWORD PTR [RIP+.L_44a140]
            call .L_4237a0

            movsd XMM1,QWORD PTR [RSP+8]
            lea R10,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            lea RSI,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RSP+52]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+32]
            call .L_423850

            mov RDI,R10
            mov DWORD PTR [RSP+48],0
            call .L_423af0

            cmp EBX,5
            jg .L_423c90

            mov EDX,DWORD PTR [RSP+52]
            mov ECX,EBP
            mov EAX,DWORD PTR [RSP+60]
            neg ECX
            test EDX,EDX
            jne .L_423d00

            cmp EAX,ECX
            je .L_423e60
.L_423c39:

            pxor XMM0,XMM0
            neg EAX
            cmp EBP,EDX
            cvtsi2sd XMM0,EAX
            je .L_423e20
.L_423c4b:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            nop
            nop
            nop
            nop
            nop
.L_423c58:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            movsd QWORD PTR [R13],XMM1
            mov EAX,EBX
            movsd QWORD PTR [R13+8],XMM0
            mov DWORD PTR [R12+64],EBX
            jne .L_423f0b

            add RSP,88
.L_423c83:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423c90:

            mov EAX,DWORD PTR [RSP+60]
            mov EDX,DWORD PTR [RSP+52]
            test EAX,EAX
            jne .L_423d30

            cmp EBP,EDX
            je .L_423e49
.L_423ca8:

            add EBP,DWORD PTR [RSP+56]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            je .L_423e30

            neg EAX
.L_423cbc:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            jmp .L_423c58
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423cd0:

            pxor XMM0,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            cvtsi2sd XMM0,EAX
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_4470f8]
            pxor XMM1,XMM1
            cvttsd2si EBP,XMM0
            cvtsi2sd XMM1,EBP
            jmp .L_423bb3
          .byte 0x66
          .byte 0x90
.L_423d00:

            cmp EAX,ECX
            jne .L_423c39

            add EBX,1
            pxor XMM0,XMM0
            cmp EBX,6
            mov EAX,1
            cmove EBX,EAX
            sub EBP,EDX
            cvtsi2sd XMM0,EBP
            pxor XMM1,XMM1
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423d30:

            cmp EBP,EDX
            jne .L_423ca8

            add EBX,1
            mov EAX,6
            cmp EBX,11
            pxor XMM1,XMM1
            cmove EBX,EAX
            add EBP,DWORD PTR [RSP+56]
            cvtsi2sd XMM1,EBP
            movapd XMM0,XMM1
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423d60:

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            cvtsi2sd XMM1,DWORD PTR [R12+44]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            lea R11,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            lea RSI,QWORD PTR [RSP+56]
            addsd XMM1,XMM0
            lea RDI,QWORD PTR [RSP+52]
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RSP+24]
            cvttsd2si R10D,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447c88]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_423850

            mov RDI,R11
            mov DWORD PTR [RSP+48],0
            call .L_423af0

            mov EAX,DWORD PTR [RSP+52]
            mov ECX,DWORD PTR [RSP+56]
            mov EDX,EAX
            sub EDX,DWORD PTR [RSP+60]
            cmp EBX,5
            lea EAX,DWORD PTR [RAX+RCX*2]
            jg .L_423e40

            test EDX,EDX
            jne .L_423e00

            cmp R10D,EAX
            je .L_423eb0
.L_423e00:

            cmp R10D,EAX
            je .L_423ee8

            pxor XMM0,XMM0
            cmp R10D,EDX
            cvtsi2sd XMM0,EAX
            jne .L_423c4b

            nop
            nop
            nop
            nop
            nop
            nop
.L_423e20:

            add EBX,5
            pxor XMM1,XMM1
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423e30:

            sub EBX,4
            movapd XMM0,XMM1
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423e40:

            test EAX,EAX
            jne .L_423e70

            cmp R10D,EDX
            jne .L_423e70
.L_423e49:

            pxor XMM0,XMM0
            mov EBX,11
            pxor XMM1,XMM1
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423e60:

            xor EBX,EBX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            jmp .L_423c58
          .byte 0x90
.L_423e70:

            cmp R10D,EDX
            je .L_423ec0

            pxor XMM1,XMM1
            cmp R10D,EAX
            cvtsi2sd XMM1,EDX
            jne .L_423cbc

            lea ECX,DWORD PTR [RBX-4]
            mov EDX,3435973837
            pxor XMM0,XMM0
            mov EAX,ECX
            mul EDX
            mov EBX,EDX
            shr EBX,2
            lea EAX,DWORD PTR [RBX+RBX*4]
            sub ECX,EAX
            mov EBX,ECX
            jmp .L_423c58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423eb0:

            pxor XMM0,XMM0
            xor EBX,EBX
            pxor XMM1,XMM1
            jmp .L_423c58
          .byte 0x90
.L_423ec0:

            add EBX,1
            pxor XMM1,XMM1
            cmp EBX,11
            mov EDX,6
            cmove EBX,EDX
            sub R10D,EAX
            cvtsi2sd XMM1,R10D
            pxor XMM0,XMM0
            jmp .L_423c58
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423ee8:

            add EBX,1
            pxor XMM0,XMM0
            cmp EBX,6
            mov EAX,1
            cmove EBX,EAX
            sub R10D,EDX
            cvtsi2sd XMM0,R10D
            pxor XMM1,XMM1
            jmp .L_423c58
.L_423f0b:

            call __stack_chk_fail@PLT
.L_423f10:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,168
.L_423f21:

            mov R14,QWORD PTR [RDI+32]
            lea RBX,QWORD PTR [RSP+104]
            lea RBP,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+96]
            mov RSI,RBP
            movsd XMM1,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [R14+8]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM6,QWORD PTR [RIP+.L_447a78]
            mov RSI,RBP
            movsd XMM4,QWORD PTR [RSP+8]
            mov RDI,RBX
            addsd XMM6,QWORD PTR [R14+16]
            movsd XMM7,QWORD PTR [R14+24]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            subsd XMM4,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movapd XMM4,XMM2
            mulsd XMM2,XMM3
            mulsd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,XMM6
            mulsd XMM0,XMM6
            mulsd XMM3,QWORD PTR [RSP+104]
            mulsd XMM4,XMM1
            mulsd XMM1,XMM5
            subsd XMM4,XMM0
            addsd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            call atan2@PLT

            addsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_448430]
            call fmod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_447a78]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            jbe .L_42406a

            nop
            nop
            nop
            nop
            nop
.L_424058:

            subsd XMM1,QWORD PTR [RIP+.L_448430]
            ucomisd XMM1,QWORD PTR [RIP+.L_447a78]
            ja .L_424058
.L_42406a:

            movsd XMM2,QWORD PTR [RIP+.L_447a60]
            ucomisd XMM2,XMM1
            jbe .L_42408e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424080:

            addsd XMM1,QWORD PTR [RIP+.L_448430]
            ucomisd XMM2,XMM1
            ja .L_424080
.L_42408e:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call asin@PLT

            movsd XMM3,QWORD PTR [RIP+.L_447a78]
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM0,QWORD PTR [RIP+.L_447a78]
            addsd XMM0,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_448430]
            call fmod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_447a78]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            jbe .L_424128
.L_424100:

            subsd XMM3,QWORD PTR [RIP+.L_448430]
            ucomisd XMM3,QWORD PTR [RIP+.L_447a78]
            ja .L_424100

            ucomisd XMM2,XMM3
            jbe .L_42412e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424120:

            addsd XMM3,QWORD PTR [RIP+.L_448430]
.L_424128:

            ucomisd XMM2,XMM3
            ja .L_424120
.L_42412e:

            movsd XMM0,QWORD PTR [RSP+88]
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM3
            lea R12,QWORD PTR [RIP+.L_65d4f0]
            mov R13D,1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+96]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+56],XMM3
.L_424176:

            movsd XMM0,QWORD PTR [R12+8]
            mov RSI,RBP
            mov RDI,RBX
            mov R15D,R13D
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+96]
            mov RDI,RBX
            subsd XMM5,QWORD PTR [R12]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+96]
            mulsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+48],XMM5
            mulsd XMM0,XMM3
            addsd XMM0,XMM1
            call acos@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_44a168]
            movsd XMM3,QWORD PTR [RSP+24]
            jbe .L_424260
.L_42420b:

            add R13,1
            add R12,16
            cmp R13,21
            jne .L_424176

            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov RDI,QWORD PTR [RIP+stderr]
            movsd XMM3,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_449f98]
            mov ESI,1
            mov EAX,2
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RSP+88]
            movapd XMM0,XMM3
            call __fprintf_chk@PLT

            mov EDI,1
            call exit@PLT
.L_424260:

            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RSP+80],XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM2,XMM3
            mulsd XMM0,XMM7
            subsd XMM1,XMM2
            call atan2@PLT

            lea RAX,QWORD PTR [RIP+.L_44a060]
            lea RCX,QWORD PTR [RIP+.L_65d640]
            movsd QWORD PTR [RSP+72],XMM0
            mov RSI,RBP
            mov RDI,RBX
            movsxd RAX,DWORD PTR [RAX+R13*4]
            shl RAX,4
            add RAX,RCX
            movsd XMM0,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+64],RAX
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+96]
            mov RSI,RBP
            movsd XMM6,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+64]
            mov RSI,RBP
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,QWORD PTR [R12]
            movsd QWORD PTR [RSP+24],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RSP+104]
            mulsd XMM3,QWORD PTR [RSP+96]
            movapd XMM0,XMM4
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            pxor XMM7,XMM7
            subsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+80]
            ucomisd XMM7,XMM2
            jbe .L_424380

            addsd XMM2,QWORD PTR [RIP+.L_448430]
.L_424380:

            pxor XMM6,XMM6
            xor EAX,EAX
            movsd XMM4,QWORD PTR [RIP+.L_44a170]
            ucomisd XMM6,XMM2
            jbe .L_424730

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4243a0:

            addsd XMM2,QWORD PTR [RIP+.L_44a170]
            pxor XMM7,XMM7
            sub EAX,1
            ucomisd XMM7,XMM2
            ja .L_4243a0

            ucomisd XMM2,XMM4
            jbe .L_4243cd

            nop
            nop
            nop
            nop
            nop
.L_4243c0:

            subsd XMM2,XMM4
            add EAX,1
.L_4243c7:

            ucomisd XMM2,XMM4
            ja .L_4243c0
.L_4243cd:

            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM5
            mov DWORD PTR [RSP+64],EAX
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+48],XMM2
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RIP+.L_44a178]
            movsd XMM8,QWORD PTR [RSP+96]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            movsd XMM0,QWORD PTR [RIP+.L_44a180]
            movsd QWORD PTR [RSP+16],XMM8
            addsd XMM1,XMM8
            call atan2@PLT

            movsd XMM1,QWORD PTR [RIP+.L_44a188]
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            ucomisd XMM5,XMM1
            ja .L_42420b

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            mulsd XMM6,QWORD PTR [RIP+.L_44a190]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM8,QWORD PTR [RIP+.L_44a1a0]
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM0,QWORD PTR [RIP+.L_44a198]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM4
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM2
            subsd XMM0,XMM8
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_44a1b0]
            addsd XMM2,QWORD PTR [RIP+.L_44a1a8]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44a178]
            subsd XMM0,QWORD PTR [RIP+.L_447a78]
            addsd XMM0,XMM0
            mulsd XMM2,XMM0
            subsd XMM1,XMM2
            call atan2@PLT

            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM7
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM5
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_44a178]
            mov EAX,DWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RIP+.L_44a1b8]
            mov RSI,RBP
            mulsd XMM2,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM2,QWORD PTR [RSP+96]
            divsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44a1c0]
            mulsd XMM6,XMM2
            divsd XMM1,XMM6
            mulsd XMM1,XMM2
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [R14+56]
            movsd XMM0,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [R14+48]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+96]
            cmp EAX,4
            mov DWORD PTR [R14+60],R15D
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+120],XMM1
            je .L_424800

            divsd XMM0,XMM3
            cmp EAX,8
            divsd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_44a1d8]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM1,QWORD PTR [RIP+.L_44a1e0]
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+120],XMM1
            ja .L_4246e0

            lea RDX,QWORD PTR [RIP+.L_449fe0]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_42461b:

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtsi2sd XMM0,DWORD PTR [R14+40]
            cvtsi2sd XMM1,DWORD PTR [R14+44]
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_4470f8]
            cmp EBX,11
            cvttsd2si EAX,XMM0
            je .L_4248d9

            mov ECX,DWORD PTR [R14+40]
            sub EBX,1
            mov EDX,DWORD PTR [R14+44]
            imul EBX,EAX
            cmp ECX,3
            jne .L_424672

            mov ESI,EDX
            shr ESI,31
            lea EAX,DWORD PTR [RDX+RSI*1]
            and EAX,1
            sub EAX,ESI
            cmp EAX,1
            je .L_4248fd
.L_424672:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            cvtsi2sd XMM1,EDX
            cvtsi2sd XMM0,ECX
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            call pow@PLT

            movapd XMM2,XMM0
            pxor XMM3,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            cvtsi2sd XMM3,EBX
            cvttsd2si EAX,XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EAX
            mulsd XMM2,XMM0
            addsd XMM2,XMM3
            addsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_4470e8]
            cvttsd2si EAX,XMM2
.L_4246d9:

            cdqe 
            mov QWORD PTR [R14+72],RAX
            nop
.L_4246e0:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42494e

            add RSP,168
.L_4246fe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424710:

            lea RSI,QWORD PTR [RSP+112]
            mov EDI,R15D
            call .L_423a50

            movsd XMM1,QWORD PTR [RSP+120]
            mov DWORD PTR [R14+64],EAX
            movsd XMM0,QWORD PTR [RSP+112]
            jmp .L_4246e0
          .byte 0x90
.L_424730:

            movsd XMM4,QWORD PTR [RIP+.L_44a170]
            jmp .L_4243c7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424740:

            lea RDX,QWORD PTR [RSP+112]
            lea RCX,QWORD PTR [RSP+128]
            mov ESI,R15D
            mov RDI,R14
            call .L_423b40

            cvttsd2si EDX,QWORD PTR [RSP+128]
            pxor XMM0,XMM0
            shl EDX,4
            add EAX,EDX
            movsd XMM1,QWORD PTR [RSP+136]
            cvtsi2sd XMM0,EAX
            jmp .L_4246e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424780:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RSP+112]
            mov ESI,R15D
            mov RDI,R14
            call .L_423b40

            mov DWORD PTR [R14+64],EAX
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            jmp .L_4246e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4247b8:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RSP+112]
            mov ESI,R15D
            mov RDI,R14
            call .L_423b40

            mov EBX,DWORD PTR [R14+64]
            test EBX,EBX
            jne .L_42461b

            mov QWORD PTR [R14+72],1
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+128]
            jmp .L_4246e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424800:

            sub R15D,1
            mov EDX,3435973837
            mov EAX,R15D
            mul EDX
            shr EDX,2
            test DL,1
            mov EBX,EDX
            jne .L_4248aa
.L_42481c:

            mov EAX,R15D
            mov EDX,3435973837
            mov ECX,R15D
            mul EDX
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_44a1c8]
            shr EDX,2
            lea EAX,DWORD PTR [RDX+RDX*4]
            sub ECX,EAX
            mov EAX,ECX
            sub EAX,2
            cmp R15D,9
            cvtsi2sd XMM2,EAX
            mulsd XMM2,XMM4
            addsd XMM2,XMM2
            jle .L_424858

            addsd XMM2,XMM4
.L_424858:

            cmp EBX,2
            je .L_4248a0

            cmp EBX,3
            je .L_424896

            cmp EBX,1
            je .L_42488c

            movsd XMM4,QWORD PTR [RIP+.L_44a148]
.L_42486f:

            mulsd XMM2,QWORD PTR [RIP+.L_44a1d0]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM4
            addsd XMM0,XMM2
            addsd XMM1,XMM3
            jmp .L_4246e0
.L_42488c:

            movsd XMM4,QWORD PTR [RIP+.L_44a150]
            jmp .L_42486f
.L_424896:

            movsd XMM4,QWORD PTR [RIP+.L_44a160]
            jmp .L_42486f
.L_4248a0:

            movsd XMM4,QWORD PTR [RIP+.L_44a158]
            jmp .L_42486f
.L_4248aa:

            movsd XMM0,QWORD PTR [RIP+.L_448738]
            lea RDI,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_4237a0

            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_42481c
.L_4248d9:

            lea EAX,DWORD PTR [RAX+RAX*4]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+128]
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            cdqe 
            mov QWORD PTR [R14+72],RAX
            jmp .L_4246e0
.L_4248fd:

            pxor XMM1,XMM1
            sub EDX,1
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            cvtsi2sd XMM1,EDX
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            call pow@PLT

            cvttsd2si ECX,XMM0
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            cvttsd2si EAX,XMM0
            imul EAX,ECX
            mov ESI,EAX
            cvttsd2si EAX,XMM1
            cdq 
            idiv ECX
            add EAX,ESI
            lea EAX,DWORD PTR [RAX+RBX*1+2]
            jmp .L_4246d9
.L_42494e:

            call __stack_chk_fail@PLT
.L_424953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424960:

            push RBP
            push RBX
            mov ESI,80
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_424973:

            call .L_403740

            test RAX,RAX
            je .L_424ce5

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_423f10]
            lea RDX,QWORD PTR [RIP+.L_44a0b4]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,QWORD PTR [RIP+.L_44a1e8]
            mov QWORD PTR [RBP+44],6
            mov DWORD PTR [RBP],20
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_44a1f0]
            mov QWORD PTR [RBP+16],RAX
            movabs RAX,17179869190
            mov QWORD PTR [RBP+36],RAX
            add RAX,1072693242
            mov QWORD PTR [RBP+52],RAX
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            call .L_403e60

            test RAX,RAX
            je .L_424a48

            lea RDI,QWORD PTR [RIP+.L_44725c]
            mov ECX,5
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_424b80

            lea RDI,QWORD PTR [RIP+.L_44a0bc]
            mov RSI,RAX
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_424cd8

            mov RAX,QWORD PTR [RIP+.L_447a20]
            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
.L_424a48:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0c1]
            call .L_403e60

            test EAX,EAX
            jne .L_424bf8
.L_424a63:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0cb]
            call .L_403e60

            test EAX,EAX
            jne .L_424c78
.L_424a7e:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0d2]
            call .L_403e60

            test EAX,EAX
            jne .L_424c58
.L_424a99:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0d9]
            call .L_403e60

            test EAX,EAX
            jne .L_424c38
.L_424ab4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0ed]
            call .L_403e60

            test EAX,EAX
            jne .L_424c18
.L_424acf:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a105]
            call .L_403e60

            test RAX,RAX
            je .L_424b0d

            lea RDI,QWORD PTR [RIP+.L_44a10b]
            mov ECX,6
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_424ba8

            mov DWORD PTR [RBP+56],4
.L_424b0d:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a11b]
            call .L_403e60

            test EAX,EAX
            je .L_424b2f

            mov RAX,QWORD PTR [RIP+.L_44a1d8]
            mov QWORD PTR [RBP+48],RAX
.L_424b2f:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0ed]
            call .L_403e60

            test EAX,EAX
            jne .L_424c98

            mov DWORD PTR [RBP+44],4
.L_424b51:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0d9]
            call .L_403e60

            test EAX,EAX
            jne .L_424d08

            mov DWORD PTR [RBP+40],3
            add RSP,8
.L_424b77:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424b80:

            mov RAX,QWORD PTR [RIP+.L_44a1e8]
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_44a1f0]
            mov QWORD PTR [RBP+16],RAX
            jmp .L_424a48
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424ba8:

            lea RDI,QWORD PTR [RIP+.L_44a111]
            mov ECX,3
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_424cf8

            lea RDI,QWORD PTR [RIP+.L_44a114]
            mov ECX,3
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_424cb8

            mov DWORD PTR [RBP+56],5
            jmp .L_424b0d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424bf8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0c6]
            call .L_403e60

            mov QWORD PTR [RBP+24],RAX
            jmp .L_424a63
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424c18:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0f9]
            call .L_403e60

            mov DWORD PTR [RBP+44],EAX
            jmp .L_424acf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424c38:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0e3]
            call .L_403e60

            mov DWORD PTR [RBP+40],EAX
            jmp .L_424ab4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424c58:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44705c]
            call .L_403e60

            mov QWORD PTR [RBP+8],RAX
            jmp .L_424a99
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424c78:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447055]
            call .L_403e60

            mov QWORD PTR [RBP+16],RAX
            jmp .L_424a7e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424c98:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0f9]
            call .L_403e60

            mov DWORD PTR [RBP+44],EAX
            jmp .L_424b51
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424cb8:

            lea RDI,QWORD PTR [RIP+.L_44a117]
            mov RSI,RAX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_424d30

            nop
            nop
            nop
            nop
            nop
            nop
.L_424cd8:

            mov ESI,4294967262
            mov RDI,RBX
            call .L_413c90
.L_424ce5:

            add RSP,8
.L_424ce9:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_423760
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424cf8:

            mov DWORD PTR [RBP+56],1
            jmp .L_424b0d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424d08:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0e3]
            call .L_403e60

            mov DWORD PTR [RBP+40],EAX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424d30:

            mov DWORD PTR [RBP+56],8
            jmp .L_424b0d
.L_424d3c:

            nop
            nop
            nop
            nop
.L_424d40:

            test RDI,RDI
            je .L_424d50

            jmp .L_424960
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424d50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_424d7e

            lea RDX,QWORD PTR [RIP+.L_423790]
            lea RCX,QWORD PTR [RIP+.L_44a020]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_424d7e:

            add RSP,8
            ret 
.L_424d83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424d90:

            xor EAX,EAX
            ret 
.L_424d93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424da0:

            test RDI,RDI
            je .L_424dd8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_424dd0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+96]
            test RDI,RDI
            je .L_424dc4

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_424dc4:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_424dd0:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424dd8:

            xor EAX,EAX
            ret 
.L_424ddb:

            nop
            nop
            nop
            nop
            nop
.L_424de0:

            jmp .L_424da0
.L_424de2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424df0:

            pxor XMM3,XMM3
            movapd XMM2,XMM1
            movapd XMM5,XMM0
            ucomisd XMM1,XMM3
            jp .L_424e10

            pxor XMM1,XMM1
            jne .L_424e10

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424e10:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            mov R12,RDX
            sub RSP,96
.L_424e25:

            lea R13,QWORD PTR [RSP+88]
            lea R14,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+56],XMM3
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RBX+96]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+40],XMM6
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_4447b0

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RBX]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RBX+16]
            addsd XMM2,QWORD PTR [RBX+8]
            addsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            call tan@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RBP]
            movapd XMM4,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM6
            movapd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM1,XMM6
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4251c9
.L_424ef4:

            mulsd XMM4,XMM1
            movapd XMM1,XMM7
            mulsd XMM2,XMM2
            divsd XMM1,XMM4
            movapd XMM6,XMM1
            mulsd XMM6,XMM1
            movapd XMM0,XMM6
            subsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_42521b
.L_424f22:

            ucomisd XMM3,QWORD PTR [RSP+8]
            jbe .L_424f32

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_424f32:

            mov EBP,DWORD PTR [RBX+104]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RBX+64]
            subsd XMM0,XMM1
            test EBP,EBP
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            js .L_425098

            movsd XMM0,QWORD PTR [RSP+16]
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+72],XMM7
            mulsd XMM0,QWORD PTR [RBX+56]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            test EBP,EBP
            movsd XMM8,QWORD PTR [RBX+40]
            movapd XMM0,XMM7
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+56]
            subsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM2,XMM8
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+64]
            mulsd XMM0,XMM8
            addsd XMM4,XMM0
            je .L_42509e

            pxor XMM0,XMM0
            mov QWORD PTR [R12],0
            movsd XMM5,QWORD PTR [RSP+32]
.L_424fec:

            subsd XMM4,XMM0
            subsd XMM2,XMM5
            addsd XMM1,QWORD PTR [RSP+24]
            divsd XMM2,XMM4
            movapd XMM4,XMM1
            subsd XMM4,XMM0
            movapd XMM0,XMM6
            mulsd XMM4,XMM2
            addsd XMM4,XMM5
            movapd XMM5,XMM2
            mulsd XMM5,XMM2
            addsd XMM5,XMM7
            movapd XMM7,XMM4
            mulsd XMM7,XMM4
            mulsd XMM0,XMM5
            subsd XMM0,XMM7
            ucomisd XMM3,XMM0
            sqrtsd XMM7,XMM0
            ja .L_42516b
.L_42503c:

            mulsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM3
            jbe .L_425130

            subsd XMM4,XMM2
            divsd XMM4,XMM5
            movapd XMM0,XMM4
            movapd XMM5,XMM4
            mulsd XMM0,XMM4
            subsd XMM6,XMM0
            ucomisd XMM3,XMM6
            sqrtsd XMM2,XMM6
            ja .L_42526d
.L_425076:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_42507e:

            add RSP,96
.L_425082:

            addsd XMM1,XMM2
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425098:

            movsd XMM2,QWORD PTR [RSP+16]
.L_42509e:

            movsd XMM0,QWORD PTR [RSP+16]
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+72],XMM7
            mulsd XMM0,QWORD PTR [RBX+48]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM8,QWORD PTR [RBX+32]
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+64]
            subsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM5,XMM8
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,XMM8
            movsd QWORD PTR [R12],XMM0
            jmp .L_424fec

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425130:

            addsd XMM4,XMM2
            divsd XMM4,XMM5
            movapd XMM0,XMM4
            movapd XMM5,XMM4
            mulsd XMM0,XMM4
            subsd XMM6,XMM0
            ucomisd XMM3,XMM6
            sqrtsd XMM2,XMM6
            ja .L_42526d
.L_425156:

            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM3
            jbe .L_42507e

            jmp .L_425076
.L_42516b:

            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_42503c
.L_4251c9:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_424ef4
.L_42521b:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_424f22
.L_42526d:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_425156
.L_4252ab:

            nop
            nop
            nop
            nop
            nop
.L_4252b0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea R14,QWORD PTR [R12+176]
            mov EBX,1000
            sub RSP,48
.L_4252cc:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+32],0
            lea R13,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd XMM2,QWORD PTR [RBP+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP]
            divsd XMM3,XMM0
            jmp .L_42532d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425328:

            mov RDI,QWORD PTR [R12+32]
.L_42532d:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            mov RDX,R13
            mov RSI,R14
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_424df0

            movsd XMM7,QWORD PTR [RSP+24]
            sub EBX,1
            movsd XMM4,QWORD PTR [RBP+72]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM6,XMM7
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM6,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM4
            mulsd XMM2,XMM6
            movapd XMM6,XMM1
            subsd XMM6,XMM5
            divsd XMM2,XMM6
            addsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            divsd XMM3,XMM0
            je .L_4253f3

            subsd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447cd0]
            ja .L_425328

            subsd XMM1,XMM7
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_447cd0]
            ja .L_425328
.L_4253ce:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM3
            movapd XMM1,XMM2
            jne .L_425401

            add RSP,48
.L_4253ea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4253f3:

            movsd XMM2,QWORD PTR [RIP+.L_4470e0]
            movapd XMM3,XMM2
            jmp .L_4253ce
.L_425401:

            call __stack_chk_fail@PLT
.L_425406:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425410:

            sub RSP,24
            lea RSI,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI+32]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_424df0

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42544c

            add RSP,24
            ret 
.L_42544c:

            call __stack_chk_fail@PLT
.L_425451:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425460:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov RBP,R8
            mov R12,RDX
            mov R13,RCX
            mov RBX,R9
            sub RSP,56
.L_425480:

            movsd QWORD PTR [RSP+16],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [R15]
            pxor XMM4,XMM4
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM1
            subsd XMM5,XMM0
            ucomisd XMM4,XMM5
            sqrtsd XMM3,XMM5
            ja .L_42554d
.L_4254da:

            mulsd XMM2,XMM3
            movapd XMM6,XMM1
            mov RDX,QWORD PTR [R14]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            divsd XMM6,XMM2
            movsd QWORD PTR [RBX],XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM0,QWORD PTR [RDX+88]
            mulsd XMM0,QWORD PTR [RBP]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM1,XMM2
            movsd QWORD PTR [R13],XMM1
            mulsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [R12],XMM0
            add RSP,56
.L_425542:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42554d:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4254da
.L_42557f:

            nop
.L_425580:

            push R12
            push RBP
            mov ESI,112
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,96
.L_425595:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_403740

            test RAX,RAX
            je .L_4258dd

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4446c0

            test RAX,RAX
            mov QWORD PTR [RBP+96],RAX
            je .L_4258dd

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1f8]
            mov R12,QWORD PTR [RBX+32]
            call .L_403e60

            test EAX,EAX
            je .L_4258d0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1ff]
            call .L_403e60

            test EAX,EAX
            je .L_4258d0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov QWORD PTR [R12+72],RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM1,XMM0
            movsd QWORD PTR [R12+80],XMM0
            subsd XMM0,XMM3
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movq XMM2,QWORD PTR [RIP+.L_447130]
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            ja .L_4259b0

            movapd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            ja .L_4259b0

            movsd XMM3,QWORD PTR [RBP+80]
            movsd XMM0,QWORD PTR [RBP+72]
            ucomisd XMM0,XMM3
            jbe .L_4256b8

            movsd QWORD PTR [RBP+72],XMM3
            movsd QWORD PTR [RBP+80],XMM0
.L_4256b8:

            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_44a206]
            movsd QWORD PTR [RSP+8],XMM1
            mov RDI,QWORD PTR [RBX]
            movaps XMMWORD PTR [RSP+16],XMM2
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMMWORD PTR [RSP+16]
            jne .L_425930

            mulsd XMM1,QWORD PTR [RIP+.L_447ce0]
            movsd XMM0,QWORD PTR [RIP+.L_44a280]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447c98]
            ucomisd XMM2,XMM1
            jb .L_425908
.L_425710:

            movsd QWORD PTR [RBP+88],XMM0
.L_425715:

            pxor XMM7,XMM7
            mov DWORD PTR [RBP+104],0
            movsd XMM0,QWORD PTR [RBP+72]
            ucomisd XMM0,XMM7
            jp .L_425980

            jne .L_425980

            movsd XMM0,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+104],1
            mov QWORD PTR [RSP+80],0
            movsd QWORD PTR [RSP+56],XMM0
.L_425750:

            pxor XMM6,XMM6
            movsd XMM0,QWORD PTR [RBP+80]
            ucomisd XMM0,XMM6
            jp .L_425950

            jne .L_425950

            movsd XMM0,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+104],4294967295
            mov QWORD PTR [RSP+72],0
            movsd QWORD PTR [RSP+64],XMM0
.L_425784:

            movsd XMM3,QWORD PTR [RBP+72]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+96]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBP+48]
            movapd XMM0,XMM3
            call .L_4447b0

            movsd XMM3,QWORD PTR [RBP+80]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+96]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBP+56]
            movapd XMM0,XMM3
            call .L_4447b0

            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM9,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM5,XMM7
            movapd XMM1,XMM0
            subsd XMM9,XMM4
            pxor XMM6,XMM6
            subsd XMM5,XMM8
            movapd XMM0,XMM9
            movapd XMM2,XMM5
            mulsd XMM0,XMM9
            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4259ba
.L_42583c:

            movsd XMM6,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RIP+.L_425410]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM6
            divsd XMM3,XMM9
            movapd XMM9,XMM4
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBP+64],XMM0
            movapd XMM0,XMM6
            mulsd XMM9,XMM2
            subsd XMM2,XMM6
            mulsd XMM0,XMM1
            mulsd XMM4,XMM7
            mulsd XMM1,XMM8
            mulsd XMM2,XMM3
            subsd XMM0,XMM9
            subsd XMM1,XMM4
            movsd QWORD PTR [RBP+16],XMM2
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM3,XMM5
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RBP+24],XMM3
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4252b0]
            mov QWORD PTR [RBX+48],RAX
            mov RAX,RBX
            jmp .L_4258e5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4258d0:

            mov ESI,4294967255
.L_4258d5:

            mov RDI,RBX
            call .L_413c90
.L_4258dd:

            mov RDI,RBX
            call .L_424da0
.L_4258e5:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_425a06

            add RSP,96
.L_4258fd:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425908:

            movsd XMM2,QWORD PTR [RIP+.L_44a298]
            movsd XMM0,QWORD PTR [RIP+.L_44a288]
            ucomisd XMM2,XMM1
            jae .L_425710

            movsd XMM0,QWORD PTR [RIP+.L_44a290]
            jmp .L_425710
          .byte 0x90
.L_425930:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a20d]
            call .L_403e60

            mov QWORD PTR [RBP+88],RAX
            jmp .L_425715
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425950:

            lea RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+176]
            lea RDI,QWORD PTR [RBX+32]
            lea R9,QWORD PTR [RBP+40]
            lea R8,QWORD PTR [RBP+56]
            call .L_425460

            jmp .L_425784
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425980:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RBX+176]
            lea RDI,QWORD PTR [RBX+32]
            lea R9,QWORD PTR [RBP+32]
            lea R8,QWORD PTR [RBP+48]
            call .L_425460

            jmp .L_425750
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4259b0:

            mov ESI,4294967254
            jmp .L_4258d5
.L_4259ba:

            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM5,XMM7
            movsd XMM9,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            subsd XMM5,XMM8
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_42583c
.L_425a06:

            call __stack_chk_fail@PLT
.L_425a0b:

            nop
            nop
            nop
            nop
            nop
.L_425a10:

            test RDI,RDI
            je .L_425a20

            jmp .L_425580
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425a20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_425a4e

            lea RDX,QWORD PTR [RIP+.L_424de0]
            lea RCX,QWORD PTR [RIP+.L_44a220]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_425a4e:

            add RSP,8
            ret 
.L_425a53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425a60:

            xor EAX,EAX
            ret 
.L_425a63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425a70:

            test RDI,RDI
            je .L_425a98

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_425a8e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_425a8e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_425a98:

            xor EAX,EAX
            ret 
.L_425a9b:

            nop
            nop
            nop
            nop
            nop
.L_425aa0:

            jmp .L_425a70
.L_425aa2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ab0:

            push R12
            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,64
.L_425abc:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM1,QWORD PTR [RDI+168]
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RBX]
            movapd XMM5,XMM0
            addsd XMM5,XMM4
            subsd XMM4,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            divsd XMM5,XMM4
            movapd XMM0,XMM5
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RIP+.L_44a2c8]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM6,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM7,XMM2
            movapd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            mov RSI,R12
            mov RDI,RBP
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R12
            movsd XMM0,QWORD PTR [RBX]
            mov RDI,RBP
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+48]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RSP+40],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RIP+.L_44a2d0]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RIP+.L_44a2c8]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM7,XMM2
            movapd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RSP+16]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,DWORD PTR [RBX+40]
            divsd XMM2,XMM0
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            add RSP,64
.L_425ce5:

            pop RBX
            pop RBP
            movapd XMM0,XMM3
            pop R12
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            ret 
.L_425cf6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d00:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            pxor XMM2,XMM2
            sub RSP,72
.L_425d11:

            mov RBX,QWORD PTR [RDI+32]
            cvtsi2sd XMM2,DWORD PTR [RBX+40]
            mulsd XMM1,XMM2
            mulsd XMM2,XMM0
            movapd XMM0,XMM1
            movapd XMM3,XMM2
            mulsd XMM0,XMM1
            mulsd XMM3,XMM2
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
            ja .L_425faa
.L_425d4d:

            movapd XMM0,XMM2
            lea RBP,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call atan2@PLT

            divsd XMM0,QWORD PTR [RIP+.L_44a2d8]
            mov RDI,RBP
            mov RSI,R13
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,QWORD PTR [RSP]
            divsd XMM1,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44a2d0]
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            mov RDI,RBP
            mov RSI,R13
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            mov RDI,RBP
            movsd XMM1,QWORD PTR [RSP+56]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RBX+32]
            mov EBP,100
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM3
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [R12+328]
            divsd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM7
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM1
            jmp .L_425e8a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425e78:

            sub EBP,1
            je .L_425f90

            movsd XMM2,QWORD PTR [RBX]
            movsd QWORD PTR [RSP],XMM1
.L_425e8a:

            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM2
            call pow@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            addsd XMM0,XMM4
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            movsd XMM1,QWORD PTR [R12+168]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            subsd XMM5,XMM0
            addsd XMM2,XMM0
            divsd XMM2,XMM5
            movapd XMM0,XMM2
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM1
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            movsd XMM3,QWORD PTR [RIP+.L_447a48]
            movapd XMM1,XMM0
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            jbe .L_425e78
.L_425f75:

            movsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [R12+328]
            add RSP,72
.L_425f89:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_425f90:

            mov RDI,QWORD PTR [R12]
            mov ESI,4294967243
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_425f75
.L_425faa:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_425d4d
.L_425fcc:

            nop
            nop
            nop
            nop
.L_425fd0:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_425fe3:

            call .L_403740

            test RAX,RAX
            je .L_4262c0

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            mov RAX,QWORD PTR [RIP+.L_44a2e0]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0d2]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_44a2e8]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_44a2f0]
            mov QWORD PTR [RBX+168],RAX
            call .L_403e60

            test EAX,EAX
            jne .L_426047

            mov RAX,QWORD PTR [RIP+.L_44a2f8]
            mov QWORD PTR [RBX+336],RAX
.L_426047:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0cb]
            call .L_403e60

            test EAX,EAX
            jne .L_42606c

            mov RAX,QWORD PTR [RIP+.L_44a300]
            mov QWORD PTR [RBX+328],RAX
.L_42606c:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447077]
            call .L_403e60

            test EAX,EAX
            jne .L_426091

            mov RAX,QWORD PTR [RIP+.L_44a308]
            mov QWORD PTR [RBX+360],RAX
.L_426091:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a2a0]
            mov DWORD PTR [RBP+40],1
            call .L_403e60

            test EAX,EAX
            je .L_4262b0
.L_4260b3:

            movsd XMM5,QWORD PTR [RBX+176]
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,QWORD PTR [RSP]
            subsd XMM1,QWORD PTR [RBX+176]
            pxor XMM6,XMM6
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4262e0
.L_42610d:

            movsd QWORD PTR [RBP],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            divsd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RBP]
            subsd XMM4,XMM0
            addsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            divsd XMM3,XMM4
            movapd XMM0,XMM3
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM5,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            addsd XMM0,XMM5
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM6,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RIP+.L_44a2c8]
            addsd XMM0,XMM6
            call tan@PLT

            movsd XMM1,QWORD PTR [RBP]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+176]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            pxor XMM7,XMM7
            subsd XMM0,XMM1
            mulsd XMM2,QWORD PTR [RSP]
            ucomisd XMM7,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RBP+8],XMM2
            ja .L_4262ce
.L_426225:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            mulsd XMM0,XMM0
            mov RAX,QWORD PTR [RIP+.L_44a2d8]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RSP]
            mov QWORD PTR [RBP+16],RAX
            mulsd XMM0,XMM1
            mov RAX,QWORD PTR [RIP+.L_44a318]
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mov QWORD PTR [RBP+32],RAX
            lea RAX,QWORD PTR [RIP+.L_425d00]
            divsd XMM4,XMM7
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_44a310]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_425ab0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_4262a4:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4262b0:

            mov DWORD PTR [RBP+40],4294967295
            jmp .L_4260b3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4262c0:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_425a70
.L_4262ce:

            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBX+176]
            jmp .L_426225
.L_4262e0:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_42610d
.L_4262f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426300:

            test RDI,RDI
            je .L_426310

            jmp .L_425fd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426310:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42633e

            lea RDX,QWORD PTR [RIP+.L_425aa0]
            lea RCX,QWORD PTR [RIP+.L_44a2b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42633e:

            add RSP,8
            ret 
.L_426343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426350:

            xor EAX,EAX
            ret 
.L_426353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426360:

            test RDI,RDI
            je .L_426388

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42637e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42637e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_426388:

            xor EAX,EAX
            ret 
.L_42638b:

            nop
            nop
            nop
            nop
            nop
.L_426390:

            jmp .L_426360
.L_426392:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4263a0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM4,XMM1
            mov RBX,RSI
            sub RSP,48
.L_4263b2:

            mov RBP,QWORD PTR [RDI+32]
            movq XMM1,QWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            movsd XMM3,QWORD PTR [RBP+16]
            andpd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM1,XMM0
            jbe .L_426490

            movapd XMM1,XMM4
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            ucomisd XMM0,XMM1
            jae .L_42647d

            movsd QWORD PTR [RSP+8],XMM0
.L_426406:

            movapd XMM0,XMM4
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            or DWORD PTR [RBX+96],12
            movsd XMM2,QWORD PTR [R12+176]
            mulsd XMM3,QWORD PTR [R12+360]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_444980

            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RBX+32],XMM3
            movsd QWORD PTR [RBX+40],XMM3
            movsd QWORD PTR [RBX+64],XMM0
.L_42647d:

            add RSP,48
.L_426481:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426490:

            mov EAX,DWORD PTR [RBP+40]
            movsd XMM6,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM6
            test EAX,EAX
            movsd QWORD PTR [RSP+16],XMM4
            jne .L_426500

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
.L_4264e4:

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_426406
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426500:

            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [R12+168]
            movapd XMM0,XMM4
            call .L_445330

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_4264e4
.L_426539:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426540:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM4,XMM0
            sub RSP,56
.L_42654d:

            movapd XMM3,XMM1
            movq XMM0,QWORD PTR [RIP+.L_447130]
            mov RBX,QWORD PTR [RDI+32]
            andpd XMM1,XMM0
            movsd XMM5,QWORD PTR [RBX+16]
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM1
            jbe .L_4265f0

            mulsd XMM3,XMM5
            pxor XMM2,XMM2
            ucomisd XMM2,XMM3
            jae .L_4266b0
.L_426592:

            mulsd XMM4,XMM5
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+24]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RBP+360]
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
.L_4265e0:

            add RSP,56
.L_4265e4:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4265f0:

            mov EAX,DWORD PTR [RBX+40]
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM6
            test EAX,EAX
            jne .L_426660

            mulsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_447a38]
            movapd XMM0,XMM3
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
.L_426643:

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+16]
            mulsd XMM2,XMM0
            jmp .L_426592
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426660:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBP+168]
            movapd XMM0,XMM3
            call .L_445330

            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_426643
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4266b0:

            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movapd XMM1,XMM2
            jmp .L_4265e0
.L_4266d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4266e0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM4,XMM0
            sub RSP,40
.L_4266ed:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RDI+360]
            divsd XMM1,XMM2
            divsd XMM4,XMM2
            movsd XMM0,QWORD PTR [RBX+24]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM4
            call hypot@PLT

            pxor XMM2,XMM2
            ucomisd XMM0,XMM2
            jp .L_42672f

            je .L_4267a0
.L_42672f:

            movsd XMM3,QWORD PTR [RBX+16]
            ucomisd XMM2,XMM3
            ja .L_426830
.L_42673e:

            mov EAX,DWORD PTR [RBX+40]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RBX+32]
            divsd XMM1,XMM3
            test EAX,EAX
            jne .L_4267d0

            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call pow@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_426778:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM0,QWORD PTR [RBX+16]
            jmp .L_4267bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4267a0:

            movsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM0,XMM2
            jbe .L_426868

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
.L_4267bb:

            movapd XMM1,XMM3
.L_4267bf:

            add RSP,40
.L_4267c3:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4267d0:

            divsd XMM0,XMM2
            movsd XMM3,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+24],XMM3
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM3
            call .L_444e90

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movapd XMM3,XMM0
            jbe .L_426778

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM0
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            jmp .L_4267bf
          .byte 0x90
.L_426830:

            movq XMM1,QWORD PTR [RIP+.L_447ae0]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            xorpd XMM5,XMM1
            xorpd XMM6,XMM1
            xorpd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_42673e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426868:

            movsd XMM3,QWORD PTR [RIP+.L_447a18]
            pxor XMM0,XMM0
            jmp .L_4267bb
.L_426879:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426880:

            push R13
            push R12
            mov ESI,48
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_426897:

            call .L_403740

            test RAX,RAX
            je .L_426add

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1ff]
            mov QWORD PTR [RBP],RAX
            call .L_403e60

            test EAX,EAX
            je .L_426a90

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+8],XMM4
.L_426904:

            movapd XMM0,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            addsd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_426ad0

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xor EAX,EAX
            pxor XMM3,XMM3
            mov EDX,1
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+16]
            ucomisd XMM2,XMM3
            subsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP],XMM7
            setp AL
            movsd QWORD PTR [RBP+16],XMM5
            movapd XMM6,XMM0
            cmovne EAX,EDX
            mov DWORD PTR [RBP+40],EAX
            andpd XMM6,XMMWORD PTR [RIP+.L_447130]
            jp .L_426af0

            jne .L_426af0

            ucomisd XMM6,QWORD PTR [RIP+.L_447cd0]
            jae .L_426c38

            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd XMM6,QWORD PTR [RIP+.L_447a38]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM6
.L_4269d7:

            mulsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBP+16]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            divsd XMM2,XMM1
            andpd XMM4,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RBP+32],XMM2
            subsd XMM4,QWORD PTR [RIP+.L_447a20]
            andpd XMM4,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM4
            jbe .L_426bf0
.L_426a5a:

            movsd QWORD PTR [RBP+24],XMM3
.L_426a5f:

            lea RAX,QWORD PTR [RIP+.L_4266e0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_426540]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4263a0]
            mov QWORD PTR [RBX+104],RAX
            add RSP,72
.L_426a84:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_426a90:

            movsd XMM0,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a0d2]
            movsd QWORD PTR [RBP+8],XMM0
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RBP]
            jne .L_426abe

            movsd QWORD PTR [RBX+336],XMM1
.L_426abe:

            movsd XMM4,QWORD PTR [RBP+8]
            jmp .L_426904
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ad0:

            mov ESI,4294967275
            mov RDI,RBX
            call .L_413c90
.L_426add:

            add RSP,72
.L_426ae1:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_426360
          .byte 0x90
.L_426af0:

            ucomisd XMM3,XMM2
            sqrtsd XMM1,XMM2
            ja .L_426dde
.L_426afe:

            movsd QWORD PTR [RBX+168],XMM1
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            call .L_444980

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RBP]
            call .L_445330

            movsd XMM6,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            ucomisd XMM6,QWORD PTR [RIP+.L_447cd0]
            jae .L_426d30

            movsd XMM1,QWORD PTR [RBP+16]
.L_426b6a:

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RBX+336]
            mulsd XMM1,XMM0
            movsd XMM5,QWORD PTR [RBP+16]
            movapd XMM2,XMM4
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            divsd XMM1,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+32],XMM1
            ucomisd XMM6,XMM2
            jbe .L_426ce0
.L_426bd9:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RBP+24],XMM3
            jmp .L_426a5f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426bf0:

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,QWORD PTR [RSP+16]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM3,XMM2
            mulsd XMM3,XMM0
            jmp .L_426a5a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c38:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP]
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            call log@PLT

            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            movsd XMM5,QWORD PTR [RIP+.L_447a38]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            addsd XMM0,XMM5
            call tan@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RSP+16]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBP]
            divsd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM5
            jmp .L_4269d7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426ce0:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM4
            call .L_445330

            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM1,QWORD PTR [RBP+24]
            movapd XMM3,XMM0
            jmp .L_426bd9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426d30:

            movsd QWORD PTR [RSP+16],XMM0
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+24],XMM3
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call .L_444980

            movsd XMM6,QWORD PTR [RSP]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM1,XMM5
            movsd XMM2,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RBP+8]
            call .L_445330

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            call log@PLT

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+16],XMM1
            jmp .L_426b6a
.L_426dde:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_426afe
.L_426e24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e30:

            test RDI,RDI
            je .L_426e40

            jmp .L_426880
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426e40:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_426e6e

            lea RDX,QWORD PTR [RIP+.L_426390]
            lea RCX,QWORD PTR [RIP+.L_44a320]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_426e6e:

            add RSP,8
            ret 
.L_426e73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e80:

            xor EAX,EAX
            ret 
.L_426e83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e90:

            test RDI,RDI
            je .L_426ec8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_426ec0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            je .L_426eb4

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_426eb4:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_426ec0:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426ec8:

            xor EAX,EAX
            ret 
.L_426ecb:

            nop
            nop
            nop
            nop
            nop
.L_426ed0:

            jmp .L_426e90
.L_426ed2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426ee0:

            movapd XMM2,XMM0
            movapd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            jae .L_426fa0

            push RBX
            movapd XMM0,XMM1
            mov RBX,RDI
            sub RSP,48
.L_426f0e:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM3,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX+336]
            movsd XMM2,QWORD PTR [RSP+40]
            add RSP,48
.L_426f85:

            mulsd XMM2,XMM3
            pop RBX
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426fa0:

            mov RAX,QWORD PTR [RDI+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RAX]
            ret 
.L_426fad:

            nop
            nop
            nop
.L_426fb0:

            addsd XMM1,QWORD PTR [RDI+336]
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            movapd XMM2,XMM0
            movapd XMM3,XMM1
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM3
            jae .L_4270d0

            push RBP
            push RBX
            mulsd XMM2,XMM0
            movapd XMM3,XMM1
            mov RBP,RDI
            sub RSP,40
.L_426feb:

            mov EBX,10
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            movsd QWORD PTR [RSP+16],XMM2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427010:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM4,XMM3
            mulsd XMM2,XMM3
            mulsd XMM4,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            addsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,XMM1
            mulsd XMM4,QWORD PTR [RIP+.L_4470f8]
            subsd XMM2,XMM3
            mulsd XMM4,XMM0
            subsd XMM2,XMM4
            movapd XMM4,XMM3
            subsd XMM4,XMM1
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            subsd XMM3,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447cd0]
            jbe .L_4270e0

            sub EBX,1
            jne .L_427010

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
.L_4270bf:

            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4270d0:

            pxor XMM3,XMM3
            movapd XMM1,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4270e0:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
            divsd XMM2,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            movapd XMM0,XMM2
            ret 
.L_42712b:

            nop
            nop
            nop
            nop
            nop
.L_427130:

            push R13
            push R12
            push RBP
            push RBX
            movapd XMM4,XMM1
            sub RSP,88
.L_42713e:

            mov RBP,QWORD PTR [RDI+32]
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            andpd XMM4,XMM2
            ucomisd XMM6,XMM4
            jae .L_427250

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mov RBX,RDI
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM2,XMMWORD PTR [RSP]
            andpd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+72]
            ucomisd XMM2,QWORD PTR [RIP+.L_447cd0]
            ja .L_427270

            pxor XMM6,XMM6
            movsd QWORD PTR [RSP],XMM6
.L_4271b8:

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+56],XMM5
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+48],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP+8]
            movsd XMM5,QWORD PTR [RSP+56]
            mulsd XMM3,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM5
            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+40],XMM3
            call .L_4447b0

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+40]
            subsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP]
            add RSP,88
.L_42723b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427250:

            movsd XMM1,QWORD PTR [RBP]
            movapd XMM3,XMM0
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            add RSP,88
            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_427270:

            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            movsd XMM2,QWORD PTR [RBX+176]
            call .L_444980

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+40]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM0
            jmp .L_4271b8
.L_4272a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4272b0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,80
.L_4272bc:

            mov R12,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            addsd XMM1,QWORD PTR [R12]
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM5,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM1
            jae .L_427500

            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+48],XMM0
            mov RBX,RDI
            mov EBP,20
            lea R14,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM5
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_42749b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427328:

            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM4,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            ja .L_4275ba
.L_42735a:

            movapd XMM7,XMM1
            mov RDI,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+24],XMM10
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM7,XMM4
            movsd QWORD PTR [RSP],XMM5
            divsd XMM7,XMM2
            movsd QWORD PTR [RSP+8],XMM7
            call .L_4447b0

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            movapd XMM3,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movapd XMM0,XMM4
            movsd XMM9,QWORD PTR [RBX+216]
            mulsd XMM0,XMM4
            movapd XMM1,XMM7
            movsd XMM10,QWORD PTR [RSP+24]
            addsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM4,XMM0
            movapd XMM0,XMM3
            movapd XMM8,XMM5
            addsd XMM0,XMM3
            movsd XMM6,QWORD PTR [RBX+176]
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM9,XMM4
            movapd XMM4,XMM7
            addsd XMM8,XMM5
            subsd XMM5,XMM3
            mulsd XMM4,XMM2
            mulsd XMM1,XMM8
            mulsd XMM3,XMM8
            addsd XMM0,XMM4
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447e58]
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM4,XMM1
            movapd XMM1,XMM7
            divsd XMM0,XMM10
            mulsd XMM1,XMM9
            mulsd XMM10,XMM6
            subsd XMM1,XMM0
            movapd XMM0,XMM5
            addsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM10
            divsd XMM0,XMM7
            addsd XMM0,XMM1
            subsd XMM0,XMM9
            subsd XMM0,XMM9
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            addsd XMM5,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            jae .L_427520

            sub EBP,1
            je .L_4275b0
.L_42749b:

            movapd XMM0,XMM5
            mov RSI,R13
            mov RDI,R14
            movsd QWORD PTR [RSP],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RIP+.L_447e58]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            movapd XMM10,XMM1
            mulsd XMM10,XMM2
            ucomisd XMM6,XMM0
            jbe .L_427328
.L_4274e8:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_413c90

            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_42750c
.L_427500:

            pxor XMM5,XMM5
            movapd XMM2,XMM0
.L_427508:

            movapd XMM0,XMM2
.L_42750c:

            add RSP,80
.L_427510:

            movapd XMM1,XMM5
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427520:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM5
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM6,XMM3
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            pxor XMM7,XMM7
            mulsd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM0,XMM6
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_427600
.L_427586:

            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM2
            call asin@PLT

            movapd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            divsd XMM2,QWORD PTR [RSP]
            jmp .L_427508
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4275b0:

            movsd QWORD PTR [RSP],XMM5
            jmp .L_4274e8
.L_4275ba:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM10
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_42735a
.L_427600:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_427586
.L_42762e:

            nop
            nop
.L_427630:

            push R12
            push RBP
            mov ESI,16
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_427645:

            call .L_403740

            test RAX,RAX
            je .L_427720

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            jp .L_4276a8

            jne .L_4276a8

            movsd XMM0,QWORD PTR [RBX+336]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_426fb0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_426ee0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_42769c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4276a8:

            call .L_4446c0

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_427720

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM3
            call .L_4447b0

            lea RAX,QWORD PTR [RIP+.L_4272b0]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_427130]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_427717:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_427720:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_426e90
.L_427730:

            test RDI,RDI
            je .L_427740

            jmp .L_427630
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427740:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42776e

            lea RDX,QWORD PTR [RIP+.L_426ed0]
            lea RCX,QWORD PTR [RIP+.L_44a380]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42776e:

            add RSP,8
            ret 
.L_427773:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427780:

            xor EAX,EAX
            ret 
.L_427783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427790:

            test RDI,RDI
            je .L_4277b8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4277ae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4277ae:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_4277b8:

            xor EAX,EAX
            ret 
.L_4277bb:

            nop
            nop
            nop
            nop
            nop
.L_4277c0:

            jmp .L_427790
.L_4277c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4277d0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_4277d9:

            mov RBP,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBP+24]
            test EAX,EAX
            je .L_4278c8

            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,XMM0
.L_427805:

            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_44a3f8]
            movsd XMM3,QWORD PTR [RBX+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM0
            ja .L_4278e0

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM4,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RSP+8]
            subsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+40]
            add RSP,56
.L_4278b0:

            subsd XMM1,XMM3
            mulsd XMM0,XMM4
            pop RBX
            mulsd XMM2,XMM4
            pop RBP
            addsd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4278c8:

            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM2,XMM0
            jmp .L_427805
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4278e0:

            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            addsd XMM2,XMM2
            add RSP,56
            pop RBX
            pop RBP
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            ret 
.L_4278fb:

            nop
            nop
            nop
            nop
            nop
.L_427900:

            push RBP
            push RBX
            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_427913:

            call .L_403740

            test RAX,RAX
            je .L_4279a8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_44a3f8]
            movsd QWORD PTR [RBP],XMM0
            seta AL
            mov DWORD PTR [RBP+24],EAX
            jbe .L_427984

            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM1
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_427984:

            lea RAX,QWORD PTR [RIP+.L_4277d0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_42799e:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4279a8:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_427790
.L_4279b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4279c0:

            test RDI,RDI
            je .L_4279d0

            jmp .L_427900
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4279d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4279fe

            lea RDX,QWORD PTR [RIP+.L_4277c0]
            lea RCX,QWORD PTR [RIP+.L_44a3c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4279fe:

            add RSP,8
            ret 
.L_427a03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a10:

            xor EAX,EAX
            ret 
.L_427a13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a20:

            test RDI,RDI
            je .L_427a48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_427a3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_427a3e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_427a48:

            xor EAX,EAX
            ret 
.L_427a4b:

            nop
            nop
            nop
            nop
            nop
.L_427a50:

            jmp .L_427a20
.L_427a52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a60:

            push RBX
            movapd XMM3,XMM0
            sub RSP,32
.L_427a69:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+48]
            cmp EAX,2
            je .L_427b00

            cmp EAX,4
            je .L_427ad0

            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM1
.L_427a87:

            mulsd XMM3,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            add RSP,32
.L_427ac3:

            pop RBX
            subsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427ad0:

            subsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RBX+40]
            jmp .L_427a87
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427b00:

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            subsd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM2,XMM0
            jmp .L_427a87
.L_427b28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427b30:

            push RBX
            sub RSP,16
.L_427b35:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM3,QWORD PTR [RBX+16]
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call hypot@PLT

            movapd XMM4,XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM0,QWORD PTR [RBX]
            jbe .L_427b83

            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            xorpd XMM4,XMM0
            xorpd XMM2,XMM0
            xorpd XMM3,XMM0
.L_427b83:

            movapd XMM0,XMM2
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            mov EAX,DWORD PTR [RBX+48]
            movapd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP]
            divsd XMM2,QWORD PTR [RBX]
            cmp EAX,2
            je .L_427c00

            cmp EAX,4
            je .L_427bc8

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RBX+8]
            add RSP,16
.L_427bbc:

            pop RBX
            subsd XMM1,XMM4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427bc8:

            divsd XMM4,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP],XMM2
            movsd XMM0,QWORD PTR [RBX+32]
            subsd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427c00:

            subsd XMM4,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_427c2b:

            nop
            nop
            nop
            nop
            nop
.L_427c30:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,56
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_427c48:

            call .L_403740

            test RAX,RAX
            je .L_427d65

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1f8]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+48],R12D
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            je .L_427d58

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1ff]
            call .L_403e60

            test EAX,EAX
            je .L_427d58

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM1
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM2,XMM3
            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            movsd XMM5,QWORD PTR [RIP+.L_447cd0]
            subsd XMM2,XMM1
            addsd XMM1,XMM3
            movq XMM3,QWORD PTR [RIP+.L_447130]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM4
            movapd XMM0,XMM2
            movsd QWORD PTR [RAX+24],XMM1
            andpd XMM0,XMM3
            ucomisd XMM5,XMM0
            ja .L_4281a8

            andpd XMM1,XMM3
            ucomisd XMM5,XMM1
            ja .L_4281a8

            cmp DWORD PTR [RBP+48],6
            ja .L_427de9

            mov EAX,DWORD PTR [RBP+48]
            lea RDX,QWORD PTR [RIP+.L_44a400]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427d58:

            mov ESI,4294967255
.L_427d5d:

            mov RDI,RBX
            call .L_413c90
.L_427d65:

            add RSP,48
.L_427d69:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_427a20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427d78:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call tan@PLT

            movsd XMM6,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP],XMM0
.L_427db6:

            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM2
            subsd XMM2,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM2
.L_427de9:

            lea RAX,QWORD PTR [RIP+.L_427b30]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_427a60]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_427e0e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427e20:

            movsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            divsd XMM1,XMM0
            divsd XMM0,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            pxor XMM2,XMM2
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            divsd XMM0,XMM3
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4281bc
.L_427eac:

            movsd QWORD PTR [RBP+16],XMM1
            jmp .L_427de9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427ec0:

            movsd XMM6,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            divsd XMM0,XMM2
            mulsd XMM2,XMM4
            movsd QWORD PTR [RBP],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call tan@PLT

            movsd QWORD PTR [RSP+32],XMM0
            jmp .L_427db6
          .byte 0x66
          .byte 0x90
.L_427f30:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM3,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM1,XMM2
            movapd XMM0,XMM1
            addsd XMM0,XMM3
            movsd QWORD PTR [RBP+8],XMM0
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd QWORD PTR [RBP],XMM0
            jmp .L_427de9
.L_427fa0:

            movapd XMM0,XMM2
            call cos@PLT

            sqrtsd XMM7,XMM0
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP+8],XMM7
            ucomisd XMM1,XMM0
            ja .L_4281b2
.L_427fc1:

            movsd XMM2,QWORD PTR [RBP+24]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+16],XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM0
            jmp .L_427de9
          .byte 0x90
.L_428030:

            movsd XMM1,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM2
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+32],XMM2
            divsd XMM0,XMM3
            addsd XMM0,XMM1
            movsd QWORD PTR [RBP+8],XMM0
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM2,XMM2
            mulsd XMM0,XMM4
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP],XMM0
            jmp .L_427de9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4280e8:

            movsd XMM7,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+40],XMM5
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM7
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RBP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM3,XMMWORD PTR [RSP+16]
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd XMM5,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+32],XMM1
            andpd XMM3,XMM0
            subsd XMM3,XMM5
            ucomisd XMM3,QWORD PTR [RIP+.L_447a20]
            jae .L_428198

            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM1,XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            jmp .L_427eac
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428198:

            mov ESI,4294967253
            jmp .L_427d5d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4281a8:

            mov ESI,4294967254
            jmp .L_427d5d
.L_4281b2:

            call sqrt@PLT

            jmp .L_427fc1
.L_4281bc:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_427eac
.L_4281d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4281e0:

            test RDI,RDI
            je .L_4281f0

            xor ESI,ESI
            jmp .L_427c30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4281f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42821e

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a5a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42821e:

            add RSP,8
            ret 
.L_428223:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428230:

            xor ESI,ESI
            jmp .L_427c30
.L_428237:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428240:

            test RDI,RDI
            je .L_428250

            mov ESI,5
            jmp .L_427c30
          .byte 0x90
.L_428250:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42827e

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a460]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42827e:

            add RSP,8
            ret 
.L_428283:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428290:

            mov ESI,5
            jmp .L_427c30
.L_42829a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4282a0:

            test RDI,RDI
            je .L_4282b0

            mov ESI,1
            jmp .L_427c30
          .byte 0x90
.L_4282b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4282de

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a560]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4282de:

            add RSP,8
            ret 
.L_4282e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4282f0:

            mov ESI,1
            jmp .L_427c30
.L_4282fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428300:

            test RDI,RDI
            je .L_428310

            mov ESI,2
            jmp .L_427c30
          .byte 0x90
.L_428310:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42833e

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a520]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42833e:

            add RSP,8
            ret 
.L_428343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428350:

            mov ESI,2
            jmp .L_427c30
.L_42835a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428360:

            test RDI,RDI
            je .L_428370

            mov ESI,3
            jmp .L_427c30
          .byte 0x90
.L_428370:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42839e

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a4e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42839e:

            add RSP,8
            ret 
.L_4283a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4283b0:

            mov ESI,3
            jmp .L_427c30
.L_4283ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4283c0:

            test RDI,RDI
            je .L_4283d0

            mov ESI,4
            jmp .L_427c30
          .byte 0x90
.L_4283d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4283fe

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a4a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4283fe:

            add RSP,8
            ret 
.L_428403:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428410:

            mov ESI,4
            jmp .L_427c30
.L_42841a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428420:

            test RDI,RDI
            je .L_428430

            mov ESI,6
            jmp .L_427c30
          .byte 0x90
.L_428430:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42845e

            lea RDX,QWORD PTR [RIP+.L_427a50]
            lea RCX,QWORD PTR [RIP+.L_44a420]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42845e:

            add RSP,8
            ret 
.L_428463:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428470:

            mov ESI,6
            jmp .L_427c30
.L_42847a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428480:

            xor EAX,EAX
            ret 
.L_428483:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428490:

            xor EAX,EAX
            ret 
.L_428493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284a0:

            xor EAX,EAX
            ret 
.L_4284a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284b0:

            xor EAX,EAX
            ret 
.L_4284b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284c0:

            xor EAX,EAX
            ret 
.L_4284c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284d0:

            xor EAX,EAX
            ret 
.L_4284d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284e0:

            xor EAX,EAX
            ret 
.L_4284e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4284f0:

            test RDI,RDI
            je .L_428530

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_428523

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+272]
            test RDI,RDI
            je .L_428517

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_428517:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_428523:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428530:

            xor EAX,EAX
            ret 
.L_428533:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428540:

            jmp .L_4284f0
.L_428542:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428550:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_428559:

            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM5
            mov RDI,QWORD PTR [RBX+272]
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call .L_444c20

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBP+176]
            movapd XMM3,XMM0
            movsd XMM8,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM4
            subsd XMM3,QWORD PTR [RBX]
            movapd XMM0,XMM8
            pxor XMM2,XMM2
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM1,XMM4
            mulsd XMM5,QWORD PTR [RSP+8]
            movapd XMM7,XMM3
            subsd XMM0,XMM1
            mulsd XMM7,XMM3
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4286d7
.L_428608:

            divsd XMM5,XMM1
            movsd XMM0,QWORD PTR [RBX+96]
            movsd XMM1,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RBX+72]
            movapd XMM6,XMM5
            mulsd XMM1,XMM7
            movsd XMM4,QWORD PTR [RBP+360]
            mulsd XMM6,XMM5
            mulsd XMM5,XMM4
            addsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM0,XMM6
            subsd XMM2,XMM0
            mulsd XMM1,XMM7
            movapd XMM0,XMM3
            mulsd XMM0,XMM6
            mulsd XMM2,XMM6
            addsd XMM2,XMM8
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+104]
            mulsd XMM1,XMM3
            addsd XMM1,QWORD PTR [RBX+88]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM0,XMM7
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+80]
            mulsd XMM1,XMM6
            addsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RBX+24]
            addsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM0,XMM7
            mulsd XMM7,QWORD PTR [RBX+40]
            addsd XMM3,QWORD PTR [RBX+16]
            mulsd XMM1,XMM6
            addsd XMM0,XMM8
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RBX+48]
            addsd XMM3,XMM7
            add RSP,72
.L_4286bc:

            mulsd XMM2,XMM6
            pop RBX
            mulsd XMM1,XMM4
            pop RBP
            addsd XMM3,XMM2
            mulsd XMM3,XMM6
            subsd XMM0,XMM3
            mulsd XMM0,XMM5
            ret 
.L_4286d7:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_428608
.L_42871f:

            nop
.L_428720:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_428728:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RDI+360]
            mov RDI,QWORD PTR [RDI]
            divsd XMM1,XMM2
            mov RSI,QWORD PTR [RAX+272]
            divsd XMM0,XMM2
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RAX+136]
            movsd XMM3,QWORD PTR [RAX+144]
            mulsd XMM2,XMM1
            movapd XMM5,XMM0
            mulsd XMM4,XMM1
            movsd XMM6,QWORD PTR [RAX+120]
            mulsd XMM5,XMM0
            addsd XMM2,QWORD PTR [RAX+128]
            mulsd XMM6,XMM4
            mulsd XMM3,XMM5
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RAX+152]
            mulsd XMM3,XMM4
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RAX+168]
            mulsd XMM3,XMM5
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM7,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM5
            subsd XMM7,XMM6
            movsd XMM6,QWORD PTR [RAX+160]
            mulsd XMM6,XMM4
            addsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RAX+176]
            mulsd XMM7,XMM5
            mulsd XMM7,XMM1
            subsd XMM6,XMM7
            mulsd XMM6,XMM4
            addsd XMM2,XMM6
            movsd XMM6,QWORD PTR [RAX+248]
            mulsd XMM6,XMM5
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RAX+264]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            movsd XMM2,QWORD PTR [RAX+256]
            subsd XMM0,QWORD PTR [RAX+232]
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RAX+224]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+216]
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RAX+208]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+200]
            subsd XMM2,XMM6
            mulsd XMM2,XMM5
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+184]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RAX+240]
            mulsd XMM2,XMM4
            mulsd XMM0,XMM5
            subsd XMM2,QWORD PTR [RAX+192]
            mulsd XMM4,XMM2
            addsd XMM4,XMM3
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RAX]
            addsd XMM0,XMM1
            call .L_444d10

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            sqrtsd XMM2,XMM3
            ja .L_4288f9
.L_4288e6:

            movsd XMM0,QWORD PTR [RSP]
            add RSP,48
.L_4288ef:

            pop RBX
            mulsd XMM0,XMM2
            divsd XMM0,XMM4
            ret 
.L_4288f9:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4288e6
.L_428922:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428930:

            push R12
            push RBP
            mov ESI,280
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,64
.L_428945:

            call .L_403740

            test RAX,RAX
            je .L_428f08

            movsd XMM0,QWORD PTR [RBP+176]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_4449e0

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBX+272],RAX
            je .L_428f08

            movsd XMM4,QWORD PTR [RBP+336]
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM3
            movsd XMM2,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call .L_444c20

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM9,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX],XMM0
            movapd XMM6,XMM9
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            subsd XMM6,XMM1
            ucomisd XMM0,XMM6
            sqrtsd XMM2,XMM6
            ja .L_428f18
.L_428a01:

            mulsd XMM6,XMM6
            movapd XMM4,XMM9
            movsd XMM0,QWORD PTR [RBP+336]
            divsd XMM4,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+16],XMM9
            divsd XMM6,QWORD PTR [RBP+216]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM3,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM3,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            call tan@PLT

            movapd XMM2,XMM0
            lea RAX,QWORD PTR [RIP+.L_428550]
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_448f60]
            movapd XMM5,XMM6
            movsd XMM9,QWORD PTR [RSP+16]
            mulsd XMM5,XMM7
            movapd XMM8,XMM6
            movapd XMM10,XMM2
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM10,XMM2
            movsd XMM11,QWORD PTR [RIP+.L_44a608]
            movsd QWORD PTR [RBX+8],XMM5
            addsd XMM1,XMM1
            mulsd XMM8,XMM0
            movsd QWORD PTR [RBX+120],XMM5
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM5,XMM10
            movsd XMM15,QWORD PTR [RIP+.L_44a610]
            movapd XMM13,XMM3
            subsd XMM5,XMM9
            movsd XMM14,QWORD PTR [RIP+.L_447a88]
            divsd XMM13,XMM15
            subsd XMM5,XMM1
            mulsd XMM5,XMM6
            mulsd XMM14,XMM2
            movsd QWORD PTR [RBX+32],XMM13
            movapd XMM13,XMM2
            divsd XMM5,XMM11
            movapd XMM4,XMM14
            movsd QWORD PTR [RSP+8],XMM14
            movapd XMM14,XMM0
            addsd XMM4,XMM9
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM13,XMM11
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+128],XMM5
            movapd XMM5,XMM4
            movsd XMM4,QWORD PTR [RSP+32]
            mulsd XMM5,XMM8
            movapd XMM12,XMM4
            mulsd XMM12,XMM11
            divsd XMM5,XMM12
            movsd XMM12,QWORD PTR [RIP+.L_44a618]
            addsd XMM12,XMM13
            movsd QWORD PTR [RBX+24],XMM5
            movapd XMM5,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_44a618]
            mulsd XMM12,XMM2
            subsd XMM13,XMM10
            addsd XMM10,XMM9
            subsd XMM12,XMM9
            mulsd XMM13,XMM2
            movsd QWORD PTR [RSP+24],XMM10
            mulsd XMM12,XMM3
            divsd XMM12,XMM15
            movsd QWORD PTR [RBX+40],XMM12
            movsd XMM12,QWORD PTR [RIP+.L_4470e8]
            subsd XMM13,XMM12
            mulsd XMM13,XMM3
            divsd XMM13,QWORD PTR [RIP+.L_44a130]
            movsd QWORD PTR [RBX+48],XMM13
            movapd XMM13,XMM4
            addsd XMM13,XMM4
            divsd XMM14,XMM13
            movapd XMM13,XMM6
            divsd XMM13,XMM11
            movapd XMM11,XMM10
            subsd XMM11,XMM1
            movapd XMM1,XMM12
            movsd QWORD PTR [RBX+184],XMM14
            movsd QWORD PTR [RBX+56],XMM14
            subsd XMM1,XMM2
            mulsd XMM11,XMM6
            movapd XMM6,XMM4
            mulsd XMM1,XMM8
            mulsd XMM6,XMM15
            movsd QWORD PTR [RBX+64],XMM13
            mulsd XMM11,XMM7
            divsd XMM1,XMM6
            movsd QWORD PTR [RBX+72],XMM11
            movsd QWORD PTR [RBX+80],XMM1
            movsd XMM6,QWORD PTR [RIP+.L_447a68]
            movsd XMM10,QWORD PTR [RIP+.L_447ce8]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX+192],XMM13
            addsd XMM1,XMM10
            movsd XMM7,QWORD PTR [RIP+.L_448f50]
            movsd QWORD PTR [RBX+200],XMM11
            mulsd XMM7,XMM2
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM1,XMM8
            divsd XMM1,XMM6
            movapd XMM6,XMM7
            subsd XMM7,XMM10
            mulsd XMM7,XMM2
            movsd QWORD PTR [RBX+88],XMM1
            subsd XMM7,XMM12
            movsd XMM1,QWORD PTR [RIP+.L_44a620]
            movsd XMM12,QWORD PTR [RIP+.L_447a90]
            mulsd XMM7,XMM3
            divsd XMM7,XMM1
            movsd QWORD PTR [RBX+96],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_44a628]
            addsd XMM7,XMM5
            addsd XMM5,QWORD PTR [RIP+.L_44a648]
            mulsd XMM7,XMM2
            mulsd XMM5,XMM2
            addsd XMM7,XMM10
            movapd XMM10,XMM2
            addsd XMM10,XMM9
            addsd XMM5,QWORD PTR [RIP+.L_447a88]
            mulsd XMM7,XMM3
            mulsd XMM10,XMM8
            divsd XMM7,XMM15
            movapd XMM14,XMM10
            mulsd XMM5,XMM3
            movsd QWORD PTR [RBX+104],XMM7
            movapd XMM7,XMM3
            divsd XMM5,XMM15
            divsd XMM7,QWORD PTR [RIP+.L_44a630]
            movsd QWORD PTR [RBX+152],XMM5
            movsd XMM15,QWORD PTR [RIP+.L_448f80]
            movsd XMM5,QWORD PTR [RIP+.L_44a650]
            mulsd XMM15,XMM2
            movsd QWORD PTR [RBX+112],XMM7
            movapd XMM7,XMM4
            addsd XMM5,XMM15
            movapd XMM15,XMM4
            mulsd XMM7,XMM12
            mulsd XMM15,XMM1
            mulsd XMM1,XMM2
            mulsd XMM5,XMM2
            divsd XMM14,XMM7
            addsd XMM5,QWORD PTR [RIP+.L_44a618]
            movsd XMM7,QWORD PTR [RIP+.L_44a638]
            mulsd XMM5,XMM0
            mulsd XMM7,XMM2
            movsd QWORD PTR [RBX+136],XMM14
            movapd XMM14,XMM3
            divsd XMM5,XMM15
            addsd XMM7,QWORD PTR [RIP+.L_44a640]
            mulsd XMM7,XMM2
            movsd XMM15,QWORD PTR [RIP+.L_44a658]
            movsd QWORD PTR [RBX+168],XMM5
            mulsd XMM15,XMM4
            subsd XMM7,XMM12
            movsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            mulsd XMM7,XMM3
            divsd XMM5,XMM15
            divsd XMM7,QWORD PTR [RIP+.L_44a130]
            movsd QWORD PTR [RBX+176],XMM5
            movsd QWORD PTR [RBX+144],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_448f08]
            mulsd XMM14,XMM7
            movsd QWORD PTR [RBX+160],XMM14
            divsd XMM10,QWORD PTR [RSP+32]
            addsd XMM6,QWORD PTR [RIP+.L_448f50]
            addsd XMM12,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_44a688]
            mulsd XMM6,XMM2
            mulsd XMM8,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RIP+.L_447a88]
            mulsd XMM1,XMM2
            mulsd XMM5,XMM4
            addsd XMM9,XMM6
            mulsd XMM4,QWORD PTR [RIP+.L_44a680]
            movsd QWORD PTR [RBX+208],XMM10
            addsd XMM1,QWORD PTR [RIP+.L_44a690]
            divsd XMM8,XMM5
            movapd XMM5,XMM3
            mulsd XMM9,XMM3
            divsd XMM3,QWORD PTR [RIP+.L_447c78]
            movsd QWORD PTR [RBX+216],XMM8
            mulsd XMM5,XMM2
            mulsd XMM1,XMM0
            mulsd XMM7,XMM9
            mulsd XMM12,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_44a668]
            movsd QWORD PTR [RBX+240],XMM3
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+224],XMM7
            mulsd XMM5,XMM2
            movsd XMM3,QWORD PTR [RIP+.L_44a670]
            mulsd XMM12,QWORD PTR [RIP+.L_44a660]
            movsd QWORD PTR [RBX+256],XMM1
            subsd XMM3,XMM5
            mulsd XMM3,XMM2
            movsd QWORD PTR [RBX+232],XMM12
            mulsd XMM2,QWORD PTR [RIP+.L_44a698]
            subsd XMM3,QWORD PTR [RIP+.L_44a678]
            addsd XMM2,QWORD PTR [RIP+.L_44a6a0]
            mulsd XMM3,XMM0
            mulsd XMM0,XMM2
            divsd XMM3,QWORD PTR [RIP+.L_448f00]
            divsd XMM0,XMM4
            movsd QWORD PTR [RBX+248],XMM3
            movsd QWORD PTR [RBX+264],XMM0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_428720]
            mov QWORD PTR [RBP+48],RAX
            add RSP,64
.L_428ef9:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428f08:

            add RSP,64
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_4284f0
.L_428f18:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_428a01
.L_428f58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428f60:

            test RDI,RDI
            je .L_428f70

            jmp .L_428930
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428f70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_428f9e

            lea RDX,QWORD PTR [RIP+.L_428540]
            lea RCX,QWORD PTR [RIP+.L_44a5e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_428f9e:

            add RSP,8
            ret 
.L_428fa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428fb0:

            xor EAX,EAX
            ret 
.L_428fb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428fc0:

            test RDI,RDI
            je .L_428ff0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_428fe7

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_428fe7:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428ff0:

            xor EAX,EAX
            ret 
.L_428ff3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429000:

            jmp .L_428fc0
.L_429002:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429010:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_429019:

            movsd QWORD PTR [RSP+16],XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            mov RBP,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            call .L_4447b0

            movsd XMM8,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movapd XMM0,XMM8
            pxor XMM5,XMM5
            mulsd XMM0,XMM4
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM6,XMM4
            subsd XMM6,XMM0
            ucomisd XMM5,XMM6
            sqrtsd XMM2,XMM6
            ja .L_4291e0
.L_4290b3:

            movapd XMM6,XMM4
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM3
            divsd XMM6,XMM2
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM7,XMM0
            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM2,XMM3
            movapd XMM6,XMM4
            mulsd XMM7,XMM0
            subsd XMM6,XMM8
            mulsd XMM2,XMM8
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RIP+.L_448f50]
            mulsd XMM5,XMM3
            divsd XMM2,XMM6
            movapd XMM8,XMM5
            mulsd XMM8,XMM5
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM0,XMM6
            subsd XMM3,XMM7
            mulsd XMM6,XMM5
            mulsd XMM9,XMM2
            mulsd XMM0,XMM8
            addsd XMM3,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_447a68]
            mulsd XMM2,XMM9
            mulsd XMM3,XMM8
            mulsd XMM3,QWORD PTR [RIP+.L_44a6c8]
            addsd XMM3,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            subsd XMM0,XMM3
            movapd XMM3,XMM0
            movapd XMM0,XMM9
            subsd XMM1,XMM3
            subsd XMM0,XMM7
            mulsd XMM7,XMM8
            addsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44a6d8]
            mulsd XMM2,XMM8
            mulsd XMM2,QWORD PTR [RIP+.L_44a6d0]
            add RSP,88
.L_4291c9:

            pop RBX
            pop RBP
            subsd XMM0,XMM2
            mulsd XMM7,XMM0
            movapd XMM0,XMM6
            subsd XMM4,XMM7
            mulsd XMM0,XMM4
            ret 
.L_4291e0:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_4290b3
.L_429227:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429230:

            push RBX
            mov RBX,RDI
            sub RSP,80
.L_429238:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM1,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            call .L_4447f0

            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            call tan@PLT

            movsd XMM9,QWORD PTR [RBX+176]
            movapd XMM10,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM2,XMM0
            mulsd XMM10,XMM0
            movapd XMM0,XMM9
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM3
            movapd XMM6,XMM3
            subsd XMM5,XMM0
            pxor XMM0,XMM0
            divsd XMM6,XMM5
            ucomisd XMM0,XMM6
            sqrtsd XMM7,XMM6
            ja .L_429385
.L_4292f3:

            movsd XMM8,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_447a90]
            divsd XMM8,XMM7
            mulsd XMM4,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_44a6e0]
            mulsd XMM2,XMM7
            movapd XMM5,XMM8
            addsd XMM4,XMM3
            mulsd XMM5,XMM8
            mulsd XMM4,XMM5
            mulsd XMM10,XMM5
            mulsd XMM0,XMM4
            mulsd XMM4,QWORD PTR [RIP+.L_44a6c8]
            subsd XMM0,QWORD PTR [RIP+.L_448f68]
            mulsd XMM0,XMM10
            addsd XMM0,XMM3
            subsd XMM3,XMM9
            mulsd XMM0,XMM8
            mulsd XMM3,XMM7
            divsd XMM0,QWORD PTR [RSP]
            mulsd XMM3,XMM6
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            add RSP,80
.L_429373:

            pop RBX
            subsd XMM3,XMM4
            mulsd XMM2,XMM5
            mulsd XMM2,XMM3
            subsd XMM1,XMM2
            ret 
.L_429385:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM10
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_4292f3
.L_4293e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4293f0:

            push RBX
            mov RBX,RDI
            sub RSP,48

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            call atan2@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX+336]
            add RSP,48

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_429467:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429470:

            sub RSP,56
.L_429474:

            addsd XMM1,QWORD PTR [RDI+336]
            lea RAX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            mov RDI,RAX
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            add RSP,56
.L_4294e0:

            movapd XMM1,XMM2
            ret 
.L_4294e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4294f0:

            push R12
            push RBP
            mov ESI,16
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_429505:

            call .L_403740

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_4295a0

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            call .L_4446c0

            mov QWORD PTR [RBP],RAX
            mov RBP,QWORD PTR [RBX+32]
            mov R12,QWORD PTR [RBP]
            test R12,R12
            je .L_4295a0

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM3
            call .L_4447b0

            lea RAX,QWORD PTR [RIP+.L_429230]
            movsd QWORD PTR [RBP+8],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429010]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_429596:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4295a0:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_428fc0
.L_4295b0:

            test RDI,RDI
            je .L_4295e8

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_4295e0

            jne .L_4295e0

            lea RAX,QWORD PTR [RIP+.L_429470]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4293f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4295e0:

            jmp .L_4294f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4295e8:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_429616

            lea RDX,QWORD PTR [RIP+.L_429000]
            lea RCX,QWORD PTR [RIP+.L_44a6b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_429616:

            add RSP,8
            ret 
.L_42961b:

            nop
            nop
            nop
            nop
            nop
.L_429620:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_429650

            jne .L_429650

            lea RAX,QWORD PTR [RIP+.L_429470]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4293f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429650:

            jmp .L_4294f0
.L_429655:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429660:

            xor EAX,EAX
            ret 
.L_429663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429670:

            jmp .L_403770
.L_429675:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429680:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_4296a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296b0:

            sub RSP,24
.L_4296b4:

            movapd XMM2,XMM1
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            andpd XMM2,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM4
            ucomisd XMM0,XMM2
            jae .L_429710

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,24
.L_4296fb:

            movapd XMM1,XMM0
            movapd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429710:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM2,XMM2
            add RSP,24
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_42972b:

            nop
            nop
            nop
            nop
            nop
.L_429730:

            test RDI,RDI
            je .L_429760

            lea RAX,QWORD PTR [RIP+.L_429680]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4296b0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429760:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42978e

            lea RDX,QWORD PTR [RIP+.L_429670]
            lea RCX,QWORD PTR [RIP+.L_44a6f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42978e:

            add RSP,8
            ret 
.L_429793:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297a0:

            lea RDX,QWORD PTR [RIP+.L_429680]
            lea RCX,QWORD PTR [RIP+.L_4296b0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4297c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297d0:

            xor EAX,EAX
            ret 
.L_4297d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297e0:

            test RDI,RDI
            je .L_429810

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_429808

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+8]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_429808:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429810:

            xor EAX,EAX
            ret 
.L_429813:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429820:

            jmp .L_4297e0
.L_429822:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429830:

            sub RSP,24
            movsd XMM3,QWORD PTR [RDI+360]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            add RSP,24
            mulsd XMM2,XMM3
            divsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
.L_429870:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd XMM3,QWORD PTR [RDI+360]
            mulsd XMM3,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM2,QWORD PTR [RBX+216]
            call .L_445250

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movapd XMM0,XMM3
            divsd XMM1,QWORD PTR [RBX+360]
            add RSP,16

            pop RBX
            ret 
.L_4298cc:

            nop
            nop
            nop
            nop
.L_4298d0:

            addsd XMM1,XMM1
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_4298dd:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RDI+360]
            mov RBP,QWORD PTR [RAX+8]
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RAX]
            call asin@PLT

            mov RDI,RBP
            call .L_442d40

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RBX+360]
            add RSP,24
.L_42991e:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            ret 
.L_429925:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429930:

            sub RSP,24
.L_429934:

            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RDI+360]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM3
            movapd XMM5,XMM1
            andpd XMM5,XMMWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM5
            subsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM4,XMM0
            jb .L_429990

            ucomisd XMM5,XMM4
            jb .L_4299b0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_4299e0

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
.L_429982:

            divsd XMM2,XMM3
            add RSP,24
.L_42998a:

            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_429990:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,24
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4299b0:

            movapd XMM0,XMM1
            mov QWORD PTR [RSP+8],RDI
            movsd QWORD PTR [RSP],XMM2
            call asin@PLT

            mov RDI,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RDI+360]
            jmp .L_429982

            nop
            nop
            nop
            nop
            nop
.L_4299e0:

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            jmp .L_429982
.L_4299ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4299f0:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_429a03:

            call .L_403740

            test RAX,RAX
            je .L_429b90

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449ca8]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            pxor XMM1,XMM1
            pxor XMM3,XMM3
            jne .L_429a70
.L_429a37:

            movsd XMM2,QWORD PTR [RBX+176]
            ucomisd XMM2,XMM1
            jp .L_429ac8

            jne .L_429ac8

            lea RAX,QWORD PTR [RIP+.L_429930]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429830]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_429a64:

            add RSP,24
.L_429a68:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429a70:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM3
            call cos@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBX+360],XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM1,XMM0
            jbe .L_429a37

            mov ESI,4294967272
            mov RDI,RBX
            call .L_413c90

            mov RDI,RBX
            call .L_4297e0

            xor EAX,EAX
            jmp .L_429a64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429ac8:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM3,XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM3,XMM0
            mulsd XMM0,XMM3
            subsd XMM4,XMM0
            ucomisd XMM1,XMM4
            sqrtsd XMM3,XMM4
            movapd XMM0,XMM4
            ja .L_429b9e
.L_429b11:

            movsd XMM0,QWORD PTR [RBX+360]
            ucomisd XMM1,XMM2
            divsd XMM0,XMM3
            sqrtsd XMM3,XMM2
            movsd QWORD PTR [RBX+360],XMM0
            ja .L_429bc0
.L_429b33:

            movsd QWORD PTR [RBX+168],XMM3
            movapd XMM0,XMM2
            call .L_442cb0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_429b90

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            call .L_445250

            lea RAX,QWORD PTR [RIP+.L_4298d0]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429870]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_429b89:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_429b90:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4297e0
.L_429b9e:

            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_429b11
.L_429bc0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_429b33
.L_429be0:

            test RDI,RDI
            je .L_429bf0

            jmp .L_4299f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429bf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_429c1e

            lea RDX,QWORD PTR [RIP+.L_429820]
            lea RCX,QWORD PTR [RIP+.L_44a720]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_429c1e:

            add RSP,8
            ret 
.L_429c23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c30:

            xor EAX,EAX
            ret 
.L_429c33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c40:

            mov RAX,QWORD PTR [RDI+32]
            subsd XMM1,QWORD PTR [RDI+336]
            mulsd XMM0,QWORD PTR [RAX]
            ret 
.L_429c51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c60:

            mov RAX,QWORD PTR [RDI+32]
            addsd XMM1,QWORD PTR [RDI+336]
            divsd XMM0,QWORD PTR [RAX]
            ret 
.L_429c71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c80:

            test RDI,RDI
            je .L_429ca8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_429c9e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_429c9e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429ca8:

            xor EAX,EAX
            ret 
.L_429cab:

            nop
            nop
            nop
            nop
            nop
.L_429cb0:

            jmp .L_429c80
.L_429cb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429cc0:

            push RBP
            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_429cd3:

            call .L_403740

            test RAX,RAX
            je .L_429d55

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBP],XMM0
            ucomisd XMM1,XMM0
            jae .L_429d48

            lea RAX,QWORD PTR [RIP+.L_429c60]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429c40]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_429d3b:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429d48:

            mov ESI,4294967272
            mov RDI,RBX
            call .L_413c90
.L_429d55:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_429c80
.L_429d63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429d70:

            test RDI,RDI
            je .L_429d80

            jmp .L_429cc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429d80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_429dae

            lea RDX,QWORD PTR [RIP+.L_429cb0]
            lea RCX,QWORD PTR [RIP+.L_44a760]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_429dae:

            add RSP,8
            ret 
.L_429db3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429dc0:

            xor EAX,EAX
            ret 
.L_429dc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429dd0:

            test RDI,RDI
            je .L_429de0

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429de0:

            ret 
.L_429de2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429df0:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_449ea8]
            mulsd XMM1,QWORD PTR [RIP+.L_44a7e8]
            add RSP,24
            movapd XMM0,XMM2
            ret 
.L_429e2e:

            nop
            nop
.L_429e30:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_44a7f0]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_44a7f8]
            add RSP,24
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            ret 
.L_429e6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_429e70:

            test RDI,RDI
            je .L_429ea0

            lea RAX,QWORD PTR [RIP+.L_429e30]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429df0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429ea0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_429ece

            lea RDX,QWORD PTR [RIP+.L_429dd0]
            lea RCX,QWORD PTR [RIP+.L_44a7c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_429ece:

            add RSP,8
            ret 
.L_429ed3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429ee0:

            lea RDX,QWORD PTR [RIP+.L_429e30]
            lea RCX,QWORD PTR [RIP+.L_429df0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_429f05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f10:

            xor EAX,EAX
            ret 
.L_429f13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f20:

            test RDI,RDI
            je .L_429f48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_429f3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_429f3e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429f48:

            xor EAX,EAX
            ret 
.L_429f4b:

            nop
            nop
            nop
            nop
            nop
.L_429f50:

            jmp .L_429f20
.L_429f52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f60:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_429f69:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM7,QWORD PTR [RBX+16]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM7
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM4,XMM0
            addsd XMM4,XMM1
            subsd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RBX+16]
            movapd XMM6,XMM4
            divsd XMM6,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM6
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP+16]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            addsd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            movapd XMM5,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            subsd XMM5,QWORD PTR [RIP+.L_447a38]
            addsd XMM5,XMM5
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RBX+16]
            movapd XMM11,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM11,XMM2
            mulsd XMM4,XMM6
            movapd XMM10,XMM3
            mulsd XMM2,XMM6
            mulsd XMM10,XMM3
            movsd XMM9,QWORD PTR [RIP+.L_447ce8]
            movsd XMM7,QWORD PTR [RSP+40]
            mulsd XMM4,XMM2
            movapd XMM0,XMM2
            movapd XMM5,XMM10
            mulsd XMM9,XMM11
            movapd XMM8,XMM7
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM4,XMM3
            movapd XMM3,XMM6
            movapd XMM12,XMM9
            mulsd XMM8,XMM7
            mulsd XMM3,XMM2
            subsd XMM9,XMM10
            movsd XMM2,QWORD PTR [RIP+.L_44a850]
            mulsd XMM12,XMM11
            mulsd XMM2,XMM11
            subsd XMM11,XMM10
            mulsd XMM3,XMM6
            mulsd XMM7,XMM1
            subsd XMM5,XMM2
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM2,XMM10
            subsd XMM5,QWORD PTR [RBX+8]
            addsd XMM2,XMM12
            movapd XMM12,XMM6
            mulsd XMM12,XMM6
            mulsd XMM2,XMM12
            divsd XMM2,QWORD PTR [RIP+.L_44a630]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM11
            mulsd XMM2,XMM8
            divsd XMM3,QWORD PTR [RIP+.L_448f50]
            addsd XMM2,XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM4
            mulsd XMM2,XMM8
            mulsd XMM3,XMM6
            addsd XMM2,XMM0
            mulsd XMM3,XMM9
            mulsd XMM2,XMM7
            divsd XMM3,QWORD PTR [RIP+.L_44a608]
            movapd XMM0,XMM2
            movapd XMM6,XMM2
            mulsd XMM0,XMM2
            mulsd XMM6,XMM0
            mulsd XMM3,XMM8
            addsd XMM3,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_447a90]
            mulsd XMM0,XMM4
            mulsd XMM3,XMM8
            addsd XMM3,XMM5
            movapd XMM5,XMM2
            mulsd XMM5,XMM4
            movsd XMM4,QWORD PTR [RBX+32]
            mulsd XMM3,XMM1
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM5,XMM1
            mulsd XMM1,XMM3
            subsd XMM5,XMM6
            movsd XMM6,QWORD PTR [RBX+40]
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            movapd XMM7,XMM6
            add RSP,72
.L_42a1d2:

            pop RBX
            mulsd XMM0,XMM5
            mulsd XMM7,XMM1
            mulsd XMM5,XMM6
            mulsd XMM1,XMM4
            pop RBP
            addsd XMM0,XMM7
            subsd XMM1,XMM5
            addsd XMM0,XMM2
            addsd XMM1,XMM3
            ret 
.L_42a1f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a200:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM9,XMM0
            movapd XMM6,XMM1
            mulsd XMM1,XMM1
            sub RSP,80
.L_42a218:

            mulsd XMM9,XMM0
            mov RBX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_447a90]
            mov EBP,20
            movapd XMM3,XMM0
            mulsd XMM2,XMM0
            movapd XMM7,XMM1
            mulsd XMM3,XMM9
            movapd XMM5,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_44a858]
            mulsd XMM7,XMM6
            mulsd XMM2,XMM1
            mulsd XMM5,XMM4
            movsd XMM10,QWORD PTR [RBX+32]
            subsd XMM2,XMM3
            movapd XMM3,XMM4
            addsd XMM5,XMM9
            movapd XMM4,XMM10
            mulsd XMM3,XMM9
            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM8,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447a90]
            addsd XMM3,XMM1
            mulsd XMM5,XMM9
            mulsd XMM2,XMM9
            mulsd XMM4,XMM8
            mulsd XMM3,XMM1
            mulsd XMM2,XMM6
            subsd XMM7,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM1,XMM9
            addsd XMM5,XMM2
            movsd XMM2,QWORD PTR [RBX+40]
            movapd XMM11,XMM2
            mulsd XMM2,XMM8
            mulsd XMM9,XMM1
            mulsd XMM11,XMM7
            mulsd XMM5,XMM0
            movsd XMM1,QWORD PTR [RBX+48]
            addsd XMM3,XMM9
            mulsd XMM7,XMM10
            movsd XMM9,QWORD PTR [RBX+56]
            subsd XMM4,XMM11
            movapd XMM11,XMM1
            mulsd XMM3,XMM6
            subsd XMM2,XMM7
            mulsd XMM11,XMM5
            mulsd XMM5,XMM9
            mulsd XMM1,XMM3
            addsd XMM4,XMM11
            movapd XMM11,XMM9
            subsd XMM2,XMM5
            mulsd XMM11,XMM3
            addsd XMM1,XMM2
            addsd XMM4,XMM11
            addsd XMM1,XMM6
            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+48],XMM4
            addsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM1
            addsd XMM1,QWORD PTR [RDI+336]
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM1
            jmp .L_42a379
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a370:

            sub EBP,1
            je .L_42a47c
.L_42a379:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [R12+168]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM7,QWORD PTR [RBX+16]
            addsd XMM5,XMM0
            subsd XMM4,XMM0
            movapd XMM2,XMM5
            mulsd XMM7,XMM1
            divsd XMM2,XMM4
            movsd QWORD PTR [RSP+32],XMM7
            movapd XMM0,XMM2
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            addsd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_447cd0]
            addsd XMM0,XMM0
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM6,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP+8],XMM6
            ucomisd XMM4,XMM0
            jbe .L_42a370
.L_42a47c:

            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            mulsd XMM0,QWORD PTR [R12+168]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM6,QWORD PTR [R12+216]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM0,XMM0
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            sqrtsd XMM6,XMM3
            movsd QWORD PTR [RSP+24],XMM6
            ja .L_42a640
.L_42a4c9:

            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+72],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            mulsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM2,XMM0
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM7,XMM1
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            mulsd XMM4,QWORD PTR [R12+360]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RIP+.L_44a610]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+32]
            mulsd XMM0,XMM8
            movapd XMM9,XMM7
            movsd XMM3,QWORD PTR [RIP+.L_44a630]
            mulsd XMM1,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM0,QWORD PTR [RIP+.L_448f38]
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM6,XMM5
            mulsd XMM8,XMM4
            addsd XMM4,XMM4
            mulsd XMM6,XMM5
            mulsd XMM9,XMM1
            mulsd XMM0,XMM2
            mulsd XMM3,XMM9
            mulsd XMM9,QWORD PTR [RIP+.L_448f50]
            addsd XMM0,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM3,XMM7
            mulsd XMM7,XMM8
            divsd XMM0,XMM3
            movapd XMM3,XMM2
            addsd XMM3,XMM2
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            divsd XMM3,XMM9
            mulsd XMM0,XMM6
            subsd XMM0,XMM3
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM3,XMM6
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a90]
            mulsd XMM1,XMM2
            addsd XMM0,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM5
            divsd XMM5,XMM4
            divsd XMM1,XMM7
            mulsd XMM1,XMM6
            subsd XMM1,XMM5
            mulsd XMM1,XMM6
            addsd XMM1,QWORD PTR [RSP+8]
            add RSP,80
.L_42a63b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42a640:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            jmp .L_42a4c9
.L_42a65a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42a660:

            push RBP
            push RBX
            mov ESI,72
            mov RBX,RDI
            mov EDI,1
            sub RSP,88
.L_42a673:

            call .L_403740

            test RAX,RAX
            je .L_42a930

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a800]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            sete AL
            lea RDX,QWORD PTR [RIP+.L_44a0c6]
            movzx EAX,AL
            mov DWORD PTR [RBP+64],EAX
            call .L_403e60

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RSP+24],RAX
            call sin@PLT

            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM3
            movapd XMM2,XMM1
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            subsd XMM2,XMM0
            ucomisd XMM4,XMM2
            sqrtsd XMM5,XMM2
            ja .L_42a9c0
.L_42a701:

            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM6,QWORD PTR [RBX+360]
            divsd XMM7,XMM5
            mulsd XMM0,XMM7
            movapd XMM5,XMM7
            divsd XMM0,XMM2
            movapd XMM2,XMM0
            movapd XMM0,XMM7
            mulsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM7,XMM0
            ja .L_42a964
.L_42a73f:

            divsd XMM2,XMM5
            mulsd XMM6,XMM7
            ucomisd XMM4,XMM2
            sqrtsd XMM7,XMM2
            movsd QWORD PTR [RBP],XMM6
            movsd QWORD PTR [RSP],XMM7
            ja .L_42a93e
.L_42a75f:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP]
            call atan@PLT

            movsd QWORD PTR [RBP+8],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM4,XMM3
            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+40],XMM2
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM4,XMM0
            movapd XMM0,XMM3
            subsd XMM6,XMM3
            addsd XMM0,XMM1
            divsd XMM0,XMM6
            movsd QWORD PTR [RBP+16],XMM4
            movsd QWORD PTR [RSP+48],XMM4
            call log@PLT

            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM7,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RBP+16]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM5,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            addsd XMM0,XMM5
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RSP]
            addsd XMM2,XMM3
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_42a200]
            movsd XMM2,QWORD PTR [RIP+.L_44a608]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM3
            movapd XMM6,XMM1
            movsd XMM0,QWORD PTR [RSP+72]
            subsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM2,XMM3
            divsd XMM6,XMM2
            mulsd XMM1,XMM6
            mulsd XMM0,XMM6
            movapd XMM2,XMM1
            movsd QWORD PTR [RBP+32],XMM1
            movapd XMM3,XMM0
            movsd QWORD PTR [RBP+40],XMM0
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_448f50]
            subsd XMM2,XMM3
            mulsd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_447a90]
            movsd QWORD PTR [RBP+56],XMM1
            movsd QWORD PTR [RBP+48],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429f60]
            mov QWORD PTR [RBX+40],RAX
            add RSP,88
.L_42a923:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a930:

            add RSP,88
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_429f20
.L_42a93e:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_42a75f
.L_42a964:

            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_42a73f
.L_42a9c0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_42a701
.L_42aa08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aa10:

            test RDI,RDI
            je .L_42aa20

            jmp .L_42a660
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42aa20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42aa4e

            lea RDX,QWORD PTR [RIP+.L_429f50]
            lea RCX,QWORD PTR [RIP+.L_44a820]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42aa4e:

            add RSP,8
            ret 
.L_42aa53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aa60:

            xor EAX,EAX
            ret 
.L_42aa63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aa70:

            test RDI,RDI
            je .L_42aa98

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42aa8e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42aa8e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_42aa98:

            xor EAX,EAX
            ret 
.L_42aa9b:

            nop
            nop
            nop
            nop
            nop
.L_42aaa0:

            jmp .L_42aa70
.L_42aaa2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aab0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,152
.L_42aac0:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM1,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+8],XMM0
            ja .L_42ab20

            movapd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM1,XMM5
            jbe .L_42adcc

            movsd XMM5,QWORD PTR [RIP+.L_447a58]
            movsd XMM0,QWORD PTR [RIP+.L_44a8c0]
            movsd QWORD PTR [RSP+88],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_44a8b8]
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM5
            pxor XMM5,XMM5
            movsd QWORD PTR [RSP+96],XMM5
            jmp .L_42ab51
.L_42ab20:

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd XMM0,QWORD PTR [RIP+.L_44a8c8]
            movsd QWORD PTR [RSP+88],XMM5
            pxor XMM5,XMM5
            mov QWORD PTR [RSP+104],RAX
            mov QWORD PTR [RSP+72],RAX
            movsd QWORD PTR [RSP+96],XMM5
.L_42ab51:

            movsd XMM6,QWORD PTR [R13+216]
            mov R12D,3
            movsd XMM7,QWORD PTR [RBP+80]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+112],XMM6
            movsd XMM5,QWORD PTR [RBP+72]
            movsd XMM4,QWORD PTR [RBP+88]
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM5,QWORD PTR [RSP+72]
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+120],XMM7
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+80],XMM0
.L_42abb0:

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+88]
            ja .L_42ad50

            movsd XMM5,QWORD PTR [RSP+72]
            subsd XMM5,XMM0
            movsd QWORD PTR [RSP+40],XMM5
.L_42abe0:

            movsd XMM3,QWORD PTR [RSP+80]
            mov EBX,50
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_42ac2d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42abf8:

            sub EBX,1
            cmp EBX,-1
            je .L_42acd7

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM3,XMM0
            movapd XMM1,XMM2
.L_42ac2d:

            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            jbe .L_42ac5b

            subsd XMM0,XMM7
.L_42ac5b:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd QWORD PTR [RSP+64],XMM0
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+56]
            divsd XMM0,XMM3
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            subsd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM1
            jbe .L_42abf8

            test EBX,EBX
            je .L_42ad70
.L_42acd7:

            sub R12D,1
            je .L_42ad68

            movsd XMM0,QWORD PTR [RBP+104]
            ucomisd XMM2,XMM0
            jbe .L_42acfb

            movsd XMM1,QWORD PTR [RBP+112]
            ucomisd XMM1,XMM2
            ja .L_42ae18
.L_42acfb:

            ucomisd XMM0,XMM2
            jae .L_42ad90

            ucomisd XMM2,QWORD PTR [RBP+112]
            jb .L_42abb0

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_447a20]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42abb0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ad50:

            addsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_42abe0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ad68:

            test EBX,EBX
            jne .L_42ae18
.L_42ad70:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM3,XMM1
.L_42ad7c:

            add RSP,152
.L_42ad83:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_42ad90:

            movsd XMM0,QWORD PTR [RIP+.L_44a8d0]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_44a8d0]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42abb0
.L_42adcc:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM5
            call tan@PLT

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+104]
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+96],XMM6
            jb .L_42b093

            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+88],XMM5
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42ab51
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ae18:

            lea RBX,QWORD PTR [RSP+136]
            lea R12,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+112]
            mulsd XMM0,QWORD PTR [RSP+128]
            mulsd XMM1,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM7,QWORD PTR [RSP+96]
            movapd XMM6,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM1,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM3
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM6,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            ucomisd XMM7,XMM0
            ja .L_42b0b4
.L_42aebc:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+48],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13]
            movsd XMM5,QWORD PTR [RSP+128]
            divsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM3,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_442670

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM3,XMM5
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM4,QWORD PTR [RBP+64]
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBP+72]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RBP+40]
            mulsd XMM1,QWORD PTR [RBP+80]
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+96]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM4
            divsd XMM0,XMM3
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_42b0d0
.L_42af93:

            mulsd XMM1,XMM3
            movsd XMM4,QWORD PTR [RBP+96]
            movapd XMM0,XMM4
            movapd XMM3,XMM1
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            addsd XMM0,XMM3
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM5
            movsd XMM5,QWORD PTR [RSP+96]
            ucomisd XMM5,XMM0
            ja .L_42b0f8
.L_42afca:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            mulsd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RBP+16]
            mulsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM3,XMM2
            divsd XMM1,QWORD PTR [RSP+24]
            addsd XMM3,XMM5
            addsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_447a90]
            subsd XMM3,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP+32]
            mulsd XMM1,QWORD PTR [RBP+24]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RSP+24]
            addsd XMM1,XMM0
            jmp .L_42ad7c
.L_42b093:

            movsd XMM5,QWORD PTR [RIP+.L_447a58]
            movsd QWORD PTR [RSP+88],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_44a8b8]
            movsd QWORD PTR [RSP+72],XMM5
            jmp .L_42ab51
.L_42b0b4:

            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_42aebc
.L_42b0d0:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_42af93
.L_42b0f8:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_42afca
.L_42b11f:

            nop
.L_42b120:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,50
            push RBX
            movapd XMM5,XMM0
            sub RSP,96
.L_42b138:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+72],XMM0
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM1
            divsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_42b16e
          .byte 0x66
          .byte 0x90
.L_42b160:

            sub EBP,1
            je .L_42b2df

            movsd QWORD PTR [RSP],XMM1
.L_42b16e:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RBX+48]
            movapd XMM1,XMM2
            movsd XMM3,QWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RBX+72]
            mulsd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM4,QWORD PTR [RBX+80]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RBX+40]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,QWORD PTR [RSP+80]
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM3
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42b65a
.L_42b1e5:

            movsd XMM7,QWORD PTR [RSP]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RBX+96]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            call sin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            mulsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd XMM6,QWORD PTR [RBX+24]
            mulsd XMM0,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM4
            divsd XMM0,XMM5
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM6,QWORD PTR [RBX]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,XMM0
            subsd XMM1,XMM6
            subsd XMM1,XMM3
            subsd XMM1,XMM2
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_449e30]
            jae .L_42b160
.L_42b2df:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            pxor XMM7,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM4,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM5
            divsd XMM4,XMM5
            addsd XMM4,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM7,XMM4
            sqrtsd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            ja .L_42b688
.L_42b355:

            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP]
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+64]
            subsd XMM7,XMM2
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            call exp@PLT

            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM5,QWORD PTR [RIP+.L_449e30]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM0
            mulsd XMM2,XMM2
            ucomisd XMM5,XMM3
            jbe .L_42b3de

            subsd XMM1,XMM5
.L_42b3de:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP],XMM5
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [R14+224]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX+40]
            subsd XMM4,XMM6
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM7,XMM6
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM7
            movsd XMM3,QWORD PTR [RBX+56]
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            subsd XMM2,XMM5
            mulsd XMM5,XMM3
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_42b6b2
.L_42b4b9:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+56],XMM3
            call cos@PLT

            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM5
            mulsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+16]
            subsd XMM5,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM2
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            jae .L_42b550

            movsd XMM2,QWORD PTR [RIP+.L_447a58]
.L_42b550:

            pxor XMM4,XMM4
            pxor XMM3,XMM3
            ucomisd XMM5,XMM4
            jae .L_42b566

            movsd XMM3,QWORD PTR [RIP+.L_447a78]
.L_42b566:

            mulsd XMM2,XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            movsd XMM4,QWORD PTR [R14+216]
            subsd XMM0,XMM2
            movapd XMM3,XMM0
            subsd XMM3,XMM1
            movapd XMM1,XMM6
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM1
            ja .L_42b610

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+88]
            mulsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+88]
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM4
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
.L_42b5f7:

            add RSP,96
.L_42b5fb:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b610:

            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM4,XMM4
            mulsd XMM0,QWORD PTR [R14+176]
            pxor XMM6,XMM6
            addsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42b6cc
.L_42b638:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            call .L_442670

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_42b5f7
.L_42b65a:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_42b1e5
.L_42b688:

            movapd XMM0,XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_42b355
.L_42b6b2:

            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+56]
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_42b4b9
.L_42b6cc:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42b638
.L_42b6ec:

            nop
            nop
            nop
            nop
.L_42b6f0:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_42b6f8:

            mulsd XMM0,QWORD PTR [RIP+.L_448708]
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM4,XMM4
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            mulsd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+72]
            addsd XMM2,XMM7
            movsd XMM5,QWORD PTR [RSP+80]
            addsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RBX+80]
            addsd XMM0,XMM7
            movapd XMM6,XMM2
            mulsd XMM6,XMM3
            mulsd XMM1,XMM5
            divsd XMM0,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42b8de
.L_42b787:

            movapd XMM0,XMM3
            mulsd XMM1,XMM8
            divsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42b997
.L_42b7a3:

            mulsd XMM3,XMM3
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+72]
            mulsd XMM7,XMM1
            mulsd XMM0,QWORD PTR [RBX+88]
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RBX+96]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM8
            addsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_42b94c
.L_42b7e5:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_447a88]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            addsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_447a90]
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM5,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX+24],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            add RSP,96
.L_42b8dc:

            pop RBX
            ret 
.L_42b8de:

            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            addsd XMM3,XMM7
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_42b787
.L_42b94c:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+96]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_42b7e5
.L_42b997:

            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM4,XMM7
            movapd XMM2,XMM4
            jmp .L_42b7a3
.L_42ba04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ba10:

            push R12
            push RBP
            mov ESI,120
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_42ba25:

            call .L_403740

            test RAX,RAX
            je .L_42bce5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a860]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov R12,RAX
            lea EAX,DWORD PTR [RAX-1]
            mov ESI,4294967268
            cmp EAX,4
            ja .L_42bcdd

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a866]
            call .L_403e60

            test EAX,EAX
            jle .L_42bcd8

            cmp R12D,3
            jg .L_42bcf8

            cmp EAX,251
            jg .L_42bcd8

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_44a910]
            movsd XMM2,QWORD PTR [RIP+.L_44a8f0]
            cvtsi2sd XMM0,EAX
            movsd XMM3,QWORD PTR [RIP+.L_44a8f8]
            mulsd XMM0,QWORD PTR [RIP+.L_44a908]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44a900]
            movsd QWORD PTR [RBX+328],XMM1
.L_42bacd:

            movsd XMM4,QWORD PTR [RBX+176]
            mov RAX,QWORD PTR [RIP+.L_44a930]
            mov R12D,5
            movsd QWORD PTR [RBP+72],XMM0
            mov RDI,QWORD PTR [RBX+32]
            movapd XMM1,XMM4
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+88],XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+80],XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RBX+224]
            subsd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBP+64],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+48],XMM0
            movsd QWORD PTR [RBP+56],XMM1
            movsd XMM1,QWORD PTR [RBX+216]
            mov QWORD PTR [RBP+104],RAX
            movapd XMM0,XMM1
            mov RAX,QWORD PTR [RIP+.L_44a938]
            mov QWORD PTR [RBP+32],0
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+16],0
            mulsd XMM0,XMM1
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+112],RAX
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBP+96],XMM0
            pxor XMM0,XMM0
            call .L_42b6f0

            movsd XMM2,QWORD PTR [RIP+.L_446fb0]
.L_42bbd2:

            mov RDI,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42b6f0

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_44a850]
            jne .L_42bbd2

            movsd XMM2,QWORD PTR [RIP+.L_44a850]
            mov R12D,4
.L_42bc0f:

            mov RDI,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4470e8]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42b6f0

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_44a850]
            jne .L_42bc0f

            mov RDI,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_448730]
            call .L_42b6f0

            movsd XMM0,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_42b120]
            movsd XMM1,QWORD PTR [RIP+.L_44a928]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            divsd XMM0,QWORD PTR [RIP+.L_447c98]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+16],XMM0
            movsd XMM0,QWORD PTR [RBP+24]
            divsd XMM0,QWORD PTR [RIP+.L_447cf0]
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RBP+32]
            divsd XMM0,QWORD PTR [RIP+.L_449860]
            movsd QWORD PTR [RBP+32],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42aab0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_42bccb:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bcd8:

            mov ESI,4294967267
.L_42bcdd:

            mov RDI,RBX
            call .L_413c90
.L_42bce5:

            add RSP,16
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42aa70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bcf8:

            cmp EAX,233
            jg .L_42bcd8

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_44a920]
            movsd XMM2,QWORD PTR [RIP+.L_44a8d8]
            cvtsi2sd XMM0,EAX
            movsd XMM3,QWORD PTR [RIP+.L_44a8e0]
            mulsd XMM0,QWORD PTR [RIP+.L_44a918]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44a8e8]
            movsd QWORD PTR [RBX+328],XMM1
            jmp .L_42bacd
.L_42bd40:

            test RDI,RDI
            je .L_42bd50

            jmp .L_42ba10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bd50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42bd7e

            lea RDX,QWORD PTR [RIP+.L_42aaa0]
            lea RCX,QWORD PTR [RIP+.L_44a880]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42bd7e:

            add RSP,8
            ret 
.L_42bd83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd90:

            xor EAX,EAX
            ret 
.L_42bd93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bda0:

            test RDI,RDI
            je .L_42bdc8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42bdbe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42bdbe:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_42bdc8:

            xor EAX,EAX
            ret 
.L_42bdcb:

            nop
            nop
            nop
            nop
            nop
.L_42bdd0:

            jmp .L_42bda0
.L_42bdd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bde0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,152
.L_42bdf0:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM1,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+8],XMM0
            ja .L_42be50

            movapd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM1,XMM5
            jbe .L_42c35e

            pxor XMM5,XMM5
            movsd QWORD PTR [RSP+104],XMM1
            movsd XMM4,QWORD PTR [RIP+.L_447a58]
            movsd XMM7,QWORD PTR [RIP+.L_44a8b8]
            movsd QWORD PTR [RSP+96],XMM4
            movsd XMM0,QWORD PTR [RIP+.L_44a8c0]
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+88],XMM5
            jmp .L_42be81
.L_42be50:

            pxor XMM6,XMM6
            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_44a8c8]
            movsd QWORD PTR [RSP+96],XMM5
            mov QWORD PTR [RSP+104],RAX
            mov QWORD PTR [RSP+72],RAX
            movsd QWORD PTR [RSP+88],XMM6
.L_42be81:

            movsd XMM7,QWORD PTR [R13+216]
            mov R12D,3
            movsd XMM4,QWORD PTR [RBP+80]
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+112],XMM7
            movsd XMM5,QWORD PTR [RBP+72]
            movsd XMM6,QWORD PTR [RBP+88]
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM5,QWORD PTR [RSP+72]
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+80],XMM0
.L_42bee0:

            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+96]
            ja .L_42c070

            movsd XMM5,QWORD PTR [RSP+72]
            subsd XMM5,XMM0
            movsd QWORD PTR [RSP+40],XMM5
.L_42bf10:

            movsd XMM3,QWORD PTR [RSP+80]
            mov EBX,50
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_42bf5a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bf28:

            sub EBX,1
            je .L_42c350

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM3,XMM0
            movapd XMM1,XMM2
.L_42bf5a:

            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            jbe .L_42bf88

            subsd XMM0,XMM7
.L_42bf88:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd QWORD PTR [RSP+64],XMM0
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+56]
            divsd XMM0,XMM3
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            subsd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM1
            jbe .L_42bf28

            sub R12D,1
            je .L_42c088

            movsd XMM0,QWORD PTR [RBP+104]
            ucomisd XMM2,XMM0
            jbe .L_42c01c

            movsd XMM1,QWORD PTR [RBP+112]
            ucomisd XMM1,XMM2
            ja .L_42c088
.L_42c01c:

            ucomisd XMM0,XMM2
            jae .L_42c310

            ucomisd XMM2,QWORD PTR [RBP+112]
            jb .L_42bee0

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RIP+.L_447a20]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42bee0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c070:

            addsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_42bf10
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c088:

            lea RBX,QWORD PTR [RSP+136]
            lea R12,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+24],XMM2
            movsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+112]
            mulsd XMM0,QWORD PTR [RSP+128]
            mulsd XMM1,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM6,XMM5
            mulsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM1,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,XMM3
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM7,XMM6
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM6,QWORD PTR [RSP+88]
            ucomisd XMM6,XMM0
            ja .L_42c412
.L_42c12c:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+48],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13]
            movsd XMM5,QWORD PTR [RSP+128]
            divsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM3,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+24],XMM3
            call .L_442670

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM3,XMM5
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM4,QWORD PTR [RBP+64]
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBP+72]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RBP+40]
            mulsd XMM1,QWORD PTR [RBP+80]
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM4
            divsd XMM0,XMM3
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_42c3ea
.L_42c203:

            mulsd XMM1,XMM3
            movsd XMM4,QWORD PTR [RBP+96]
            movapd XMM0,XMM4
            movapd XMM3,XMM1
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            addsd XMM0,XMM3
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM5,QWORD PTR [RSP+88]
            ucomisd XMM5,XMM0
            ja .L_42c3c3
.L_42c23a:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            mulsd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RBP+16]
            mulsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM3,XMM2
            divsd XMM1,QWORD PTR [RSP+16]
            addsd XMM3,XMM5
            addsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_447a90]
            subsd XMM3,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RBP+32]
            mulsd XMM1,QWORD PTR [RBP+24]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RSP+16]
            addsd XMM1,XMM0
.L_42c2fe:

            add RSP,152
.L_42c305:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42c310:

            movsd XMM0,QWORD PTR [RIP+.L_44a8d0]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RIP+.L_44a8d0]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42bee0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c350:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM3,XMM1
            jmp .L_42c2fe
.L_42c35e:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM5
            call tan@PLT

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+104]
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+88],XMM6
            jb .L_42c3a2

            mov RAX,QWORD PTR [RIP+.L_447a20]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+96],XMM4
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42be81
.L_42c3a2:

            movsd XMM7,QWORD PTR [RIP+.L_447a58]
            movsd QWORD PTR [RSP+96],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_44a8b8]
            movsd QWORD PTR [RSP+72],XMM7
            jmp .L_42be81
.L_42c3c3:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_42c23a
.L_42c3ea:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_42c203
.L_42c412:

            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_42c12c
.L_42c42e:

            nop
            nop
.L_42c430:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,50
            push RBX
            movapd XMM5,XMM0
            sub RSP,96
.L_42c448:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+72],XMM0
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM1
            divsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_42c47e
          .byte 0x66
          .byte 0x90
.L_42c470:

            sub EBP,1
            je .L_42c5ef

            movsd QWORD PTR [RSP],XMM1
.L_42c47e:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RBX+48]
            movapd XMM1,XMM2
            movsd XMM3,QWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RBX+72]
            mulsd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM4,QWORD PTR [RBX+80]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RBX+40]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,QWORD PTR [RSP+80]
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM3
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c96a
.L_42c4f5:

            movsd XMM7,QWORD PTR [RSP]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RBX+96]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            call sin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            mulsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd XMM6,QWORD PTR [RBX+24]
            mulsd XMM0,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM4
            divsd XMM0,XMM5
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM6,QWORD PTR [RBX]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,XMM0
            subsd XMM1,XMM6
            subsd XMM1,XMM3
            subsd XMM1,XMM2
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_449e30]
            jae .L_42c470
.L_42c5ef:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            pxor XMM7,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM4,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM5
            divsd XMM4,XMM5
            addsd XMM4,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM7,XMM4
            sqrtsd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            ja .L_42c998
.L_42c665:

            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP]
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+64]
            subsd XMM7,XMM2
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            call exp@PLT

            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM5,QWORD PTR [RIP+.L_449e30]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM0
            mulsd XMM2,XMM2
            ucomisd XMM5,XMM3
            jbe .L_42c6ee

            subsd XMM1,XMM5
.L_42c6ee:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP],XMM5
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [R14+224]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX+40]
            subsd XMM4,XMM6
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM7,XMM6
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM7
            movsd XMM3,QWORD PTR [RBX+56]
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            subsd XMM2,XMM5
            mulsd XMM5,XMM3
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_42c9c2
.L_42c7c9:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+56],XMM3
            call cos@PLT

            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM5
            mulsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+16]
            subsd XMM5,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM2
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            jae .L_42c860

            movsd XMM2,QWORD PTR [RIP+.L_447a58]
.L_42c860:

            pxor XMM4,XMM4
            pxor XMM3,XMM3
            ucomisd XMM5,XMM4
            jae .L_42c876

            movsd XMM3,QWORD PTR [RIP+.L_447a78]
.L_42c876:

            mulsd XMM2,XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            movsd XMM4,QWORD PTR [R14+216]
            subsd XMM0,XMM2
            movapd XMM3,XMM0
            subsd XMM3,XMM1
            movapd XMM1,XMM6
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM1
            ja .L_42c920

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+88]
            mulsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+88]
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM4
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
.L_42c907:

            add RSP,96
.L_42c90b:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c920:

            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM4,XMM4
            mulsd XMM0,QWORD PTR [R14+176]
            pxor XMM6,XMM6
            addsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c9dc
.L_42c948:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            call .L_442670

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_42c907
.L_42c96a:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_42c4f5
.L_42c998:

            movapd XMM0,XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_42c665
.L_42c9c2:

            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+56]
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_42c7c9
.L_42c9dc:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42c948
.L_42c9fc:

            nop
            nop
            nop
            nop
.L_42ca00:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_42ca08:

            mulsd XMM0,QWORD PTR [RIP+.L_448708]
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM4,XMM4
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            mulsd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+72]
            addsd XMM2,XMM7
            movsd XMM5,QWORD PTR [RSP+80]
            addsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RBX+80]
            addsd XMM0,XMM7
            movapd XMM6,XMM2
            mulsd XMM6,XMM3
            mulsd XMM1,XMM5
            divsd XMM0,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42cbee
.L_42ca97:

            movapd XMM0,XMM3
            mulsd XMM1,XMM8
            divsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42cca7
.L_42cab3:

            mulsd XMM3,XMM3
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+72]
            mulsd XMM7,XMM1
            mulsd XMM0,QWORD PTR [RBX+88]
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RBX+96]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM8
            addsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_42cc5c
.L_42caf5:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_447a88]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            addsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_447a90]
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM5,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX+24],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            add RSP,96
.L_42cbec:

            pop RBX
            ret 
.L_42cbee:

            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            addsd XMM3,XMM7
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_42ca97
.L_42cc5c:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+96]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_42caf5
.L_42cca7:

            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM4,XMM7
            movapd XMM2,XMM4
            jmp .L_42cab3
.L_42cd14:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cd20:

            push R12
            push RBP
            mov ESI,120
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,16
.L_42cd35:

            call .L_403740

            test RAX,RAX
            je .L_42cfbd

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_44a866]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_403e60

            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,232
            ja .L_42cfb0

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBP+32]
            mov R12D,5
            movsd XMM1,QWORD PTR [RIP+.L_44a970]
            movsd XMM4,QWORD PTR [RBP+176]
            cvtsi2sd XMM0,EAX
            mov RAX,QWORD PTR [RIP+.L_44a978]
            movsd XMM2,QWORD PTR [RIP+.L_44a988]
            movsd XMM3,QWORD PTR [RIP+.L_44a980]
            mulsd XMM0,QWORD PTR [RIP+.L_44a918]
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBP+328],XMM1
            movapd XMM1,XMM4
            movsd QWORD PTR [RBX+88],XMM2
            mov QWORD PTR [RBX+72],RAX
            mov RAX,QWORD PTR [RIP+.L_448430]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBX+80],XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBP+224]
            subsd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBX+64],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBX+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RBX+56],XMM1
            movsd XMM1,QWORD PTR [RBP+216]
            mov QWORD PTR [RBX+104],0
            movapd XMM0,XMM1
            mov QWORD PTR [RBX+112],RAX
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+16],0
            mulsd XMM0,XMM1
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX],0
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBX+96],XMM0
            pxor XMM0,XMM0
            call .L_42ca00

            movsd XMM2,QWORD PTR [RIP+.L_446fb0]
.L_42cea8:

            mov RDI,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42ca00

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_44a850]
            jne .L_42cea8

            movsd XMM2,QWORD PTR [RIP+.L_44a850]
            mov R12D,4
.L_42cee5:

            mov RDI,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4470e8]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42ca00

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_44a850]
            jne .L_42cee5

            mov RDI,QWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_448730]
            call .L_42ca00

            movsd XMM0,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RIP+.L_42c430]
            movsd XMM1,QWORD PTR [RIP+.L_44a928]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM0,QWORD PTR [RIP+.L_447c98]
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            divsd XMM0,QWORD PTR [RIP+.L_447cf0]
            movsd QWORD PTR [RBX+24],XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            divsd XMM0,QWORD PTR [RIP+.L_449860]
            movsd QWORD PTR [RBX+32],XMM0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42bde0]
            mov QWORD PTR [RBP+40],RAX
            add RSP,16
.L_42cf9f:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cfb0:

            mov ESI,4294967267
            mov RDI,RBP
            call .L_413c90
.L_42cfbd:

            add RSP,16
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_42bda0
.L_42cfcd:

            nop
            nop
            nop
.L_42cfd0:

            test RDI,RDI
            je .L_42cfe0

            jmp .L_42cd20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cfe0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42d00e

            lea RDX,QWORD PTR [RIP+.L_42bdd0]
            lea RCX,QWORD PTR [RIP+.L_44a940]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d00e:

            add RSP,8
            ret 
.L_42d013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d020:

            xor EAX,EAX
            ret 
.L_42d023:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d030:

            jmp .L_403770
.L_42d035:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d040:

            push RBX
            mov RBX,RDI
            sub RSP,16

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            call exp@PLT

            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RBX+360]
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            add RSP,16

            pop RBX
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            ret 
.L_42d09c:

            nop
            nop
            nop
            nop
.L_42d0a0:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_42d0a8:

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RDI+168]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            call exp@PLT

            movsd XMM2,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX]
            movapd XMM1,XMM2
            call .L_444e90

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_42d110

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM3,QWORD PTR [RBX+360]
            add RSP,16
.L_42d105:

            pop RBX
            movapd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_42d110:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM0
            call .L_413c90

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP]
            add RSP,16
            pop RBX
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_42d139:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d140:

            sub RSP,40
.L_42d144:

            movapd XMM5,XMM1
            movq XMM2,QWORD PTR [RIP+.L_447130]
            andpd XMM1,XMM2
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM2,XMM1
            jae .L_42d1f0

            movsd XMM3,QWORD PTR [RDI+360]
            movapd XMM4,XMM0
            movapd XMM0,XMM5
            mov QWORD PTR [RSP+24],RDI
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            mov RDI,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RDI+168]
            movapd XMM0,XMM5
            call .L_445330

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            add RSP,40
.L_42d1dd:

            movapd XMM2,XMM4
            movapd XMM1,XMM3
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_42d1f0:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM2,XMM2
            add RSP,40
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_42d20b:

            nop
            nop
            nop
            nop
            nop
.L_42d210:

            sub RSP,24
.L_42d214:

            movapd XMM2,XMM1
            movq XMM3,QWORD PTR [RIP+.L_447130]
            andpd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM2
            jae .L_42d290

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RDI+360]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            addsd XMM1,QWORD PTR [RIP+.L_447a38]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
.L_42d282:

            mulsd XMM3,XMM0
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            ret 
          .byte 0x90
.L_42d290:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM2,XMM2
            add RSP,24
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_42d2ab:

            nop
            nop
            nop
            nop
            nop
.L_42d2b0:

            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_449ca8]
            sub RSP,16
.L_42d2bf:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_403e60

            test EAX,EAX
            jne .L_42d310

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_42d3a0

            jne .L_42d3a0
.L_42d2e7:

            lea RAX,QWORD PTR [RIP+.L_42d040]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d210]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_42d300:

            add RSP,16
.L_42d304:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d310:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            jae .L_42d3d0

            movsd XMM3,QWORD PTR [RBX+176]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM3,QWORD PTR [RIP+.L_448740]
            jp .L_42d379

            je .L_42d3c0
.L_42d379:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_444980

            movsd QWORD PTR [RBX+360],XMM0
.L_42d3a0:

            lea RAX,QWORD PTR [RIP+.L_42d0a0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d140]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_42d3ba:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_42d3c0:

            movsd QWORD PTR [RBX+360],XMM0
            jmp .L_42d2e7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d3d0:

            mov ESI,4294967272
            mov RDI,RBX
            call .L_413c90

            mov RDI,RBX
            call .L_403770

            xor EAX,EAX
            jmp .L_42d300
.L_42d3ec:

            nop
            nop
            nop
            nop
.L_42d3f0:

            test RDI,RDI
            je .L_42d400

            jmp .L_42d2b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d400:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42d42e

            lea RDX,QWORD PTR [RIP+.L_42d030]
            lea RCX,QWORD PTR [RIP+.L_44a9a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d42e:

            add RSP,8
            ret 
.L_42d433:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d440:

            xor EAX,EAX
            ret 
.L_42d443:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d450:

            test RDI,RDI
            je .L_42d460

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d460:

            ret 
.L_42d462:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d470:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_44a9e0]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            addsd XMM0,XMM1
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_44a9e8]
            add RSP,24
            ret 
.L_42d4b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d4c0:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_44a9f0]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RIP+.L_447a38]
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_44a9f8]
            add RSP,24
            ret 
.L_42d503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d510:

            test RDI,RDI
            je .L_42d540

            lea RAX,QWORD PTR [RIP+.L_42d4c0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d470]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d540:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42d56e

            lea RDX,QWORD PTR [RIP+.L_42d450]
            lea RCX,QWORD PTR [RIP+.L_44a9c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d56e:

            add RSP,8
            ret 
.L_42d573:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d580:

            lea RDX,QWORD PTR [RIP+.L_42d4c0]
            lea RCX,QWORD PTR [RIP+.L_42d470]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_42d5a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d5b0:

            xor EAX,EAX
            ret 
.L_42d5b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d5c0:

            test RDI,RDI
            je .L_42d5e8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42d5de

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42d5de:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d5e8:

            xor EAX,EAX
            ret 
.L_42d5eb:

            nop
            nop
            nop
            nop
            nop
.L_42d5f0:

            jmp .L_42d5c0
.L_42d5f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d600:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_42d60b:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call tan@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM1,XMM7
            movsd QWORD PTR [RSP+40],XMM7
            addsd XMM0,XMM1
            divsd XMM0,QWORD PTR [RSP+8]
            call atan@PLT

            movapd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RSP+8]
            jbe .L_42d698

            addsd XMM3,QWORD PTR [RIP+.L_447a78]
.L_42d698:

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            subsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RBX]
            add RSP,64
.L_42d6e8:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42d6ed:

            nop
            nop
            nop
.L_42d6f0:

            push RBX
            movapd XMM2,XMM1
            movapd XMM3,XMM0
            sub RSP,64
.L_42d6fd:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM2,QWORD PTR [RBX]
            divsd XMM3,QWORD PTR [RBX+8]
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            subsd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            sqrtsd XMM6,XMM1
            movsd QWORD PTR [RSP+8],XMM6
            ja .L_42d7e1
.L_42d736:

            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+24]
            movapd XMM4,XMM2
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM4,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,XMM3
            addsd XMM0,XMM4
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM5
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            add RSP,64
.L_42d7db:

            pop RBX
            movapd XMM1,XMM4
            ret 
.L_42d7e1:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_42d736
.L_42d807:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d810:

            push R13
            push R12
            mov ESI,48
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,104
.L_42d827:

            call .L_403740

            test RAX,RAX
            je .L_42db90

            movsd XMM1,QWORD PTR [RBX+360]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_44aa00]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+32],RAX
            movsd QWORD PTR [RAX+8],XMM1
            mov RBP,RAX
            divsd XMM0,XMM1
            movsd QWORD PTR [RAX],XMM0
            call .L_403e60

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            je .L_42d9d8

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aa07]
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aa0e]
            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+32],XMM0
            call .L_403e60

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            mulsd XMM1,QWORD PTR [RIP+.L_448740]
            divsd XMM0,XMM1
            call atan@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM6,QWORD PTR [RSP+8]
            addsd XMM0,XMM6
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call asin@PLT

            movsd XMM1,QWORD PTR [RBP+32]
            movapd XMM4,XMM0
.L_42d91c:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            mov RSI,R13
            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,R12
            addsd XMM1,QWORD PTR [RIP+.L_447a20]
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RSP+88]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RBX+328],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RIP+.L_42d6f0]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+40],XMM3
            movsd QWORD PTR [RBP+32],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d600]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,104
.L_42d9c9:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d9d8:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call .L_403e60

            mov QWORD PTR [RSP+16],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+16]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a20d]
            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            call .L_403e60

            mov QWORD PTR [RSP+16],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+72],XMM3
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aa14]
            movsd XMM6,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+64],XMM4
            call .L_403e60

            mov QWORD PTR [RSP+56],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+56]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            mulsd XMM4,XMM0
            mulsd XMM2,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM1,XMM4
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM1,XMM0
            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            ucomisd XMM3,QWORD PTR [RIP+.L_447a18]
            jp .L_42db39

            jne .L_42db39

            xorpd XMM1,XMM4
.L_42db39:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP+16],XMM4
            subsd XMM0,XMM3
            call cos@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call tan@PLT

            movapd XMM4,XMMWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            xorpd XMM2,XMM4
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM4,XMM0
            jmp .L_42d91c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42db90:

            add RSP,104
.L_42db94:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_42d5c0
.L_42dba2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dbb0:

            test RDI,RDI
            je .L_42dbc0

            jmp .L_42d810
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dbc0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42dbee

            lea RDX,QWORD PTR [RIP+.L_42d5f0]
            lea RCX,QWORD PTR [RIP+.L_44aa20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42dbee:

            add RSP,8
            ret 
.L_42dbf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc00:

            xor EAX,EAX
            ret 
.L_42dc03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc10:

            test RDI,RDI
            je .L_42dc38

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42dc2e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42dc2e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_42dc38:

            xor EAX,EAX
            ret 
.L_42dc3b:

            nop
            nop
            nop
            nop
            nop
.L_42dc40:

            jmp .L_42dc10
.L_42dc42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc50:

            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,88
.L_42dc5a:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            andpd XMM2,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            ja .L_42dcf0

            ucomisd XMM1,QWORD PTR [RIP+.L_448740]
            jbe .L_42dce8

            movsd XMM2,QWORD PTR [RBX+88]
.L_42dc93:

            mulsd XMM1,QWORD PTR [RBX+32]
.L_42dc98:

            mov EAX,DWORD PTR [RBX+112]
            test EAX,EAX
            jne .L_42dcd6

            movapd XMM5,XMM1
            movsd XMM4,QWORD PTR [RBX+80]
            movsd XMM3,QWORD PTR [RBX+72]
            subsd XMM5,QWORD PTR [RBX+104]
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            mulsd XMM1,XMM2
            mulsd XMM2,XMM3
            mulsd XMM4,XMM5
            mulsd XMM0,XMM5
            subsd XMM4,XMM2
            addsd XMM1,XMM0
            movapd XMM2,XMM4
.L_42dcd6:

            add RSP,88
.L_42dcda:

            movapd XMM0,XMM1
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dce8:

            movsd XMM2,QWORD PTR [RBX+96]
            jmp .L_42dc93
          .byte 0x90
.L_42dcf0:

            movsd XMM5,QWORD PTR [RBX+16]
            mov RBP,RDI
            movsd XMM7,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movaps XMMWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBP+168]
            movapd XMM0,XMM3
            call .L_445330

            movsd XMM7,QWORD PTR [RSP+24]
            movapd XMM1,XMM7
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM6,QWORD PTR [RBX+8]
            movapd XMM1,XMM5
            movapd XMM5,XMM2
            divsd XMM5,XMM1
            movapd XMM7,XMM1
            movsd QWORD PTR [RSP+64],XMM1
            movapd XMM0,XMM6
            subsd XMM7,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM7
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RBX+64]
            addsd XMM1,XMM5
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM7,XMM3
            movapd XMM4,XMMWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+72]
            subsd XMM0,XMM7
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            andpd XMM0,XMM4
            subsd XMM0,XMM2
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            ja .L_42dea0

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_4470f8]
            movaps XMMWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM1
            mulsd XMM6,QWORD PTR [RBX+32]
            addsd XMM1,XMM2
            movsd QWORD PTR [RSP+64],XMM3
            divsd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM6
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+24],XMM2
            call cos@PLT

            movapd XMM4,XMMWORD PTR [RSP+32]
            andpd XMM4,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_449e30]
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM1,XMM4
            movsd XMM3,QWORD PTR [RSP+64]
            jbe .L_42dec8

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RBX]
            jmp .L_42dc98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dea0:

            mov RDI,RBP
            mov ESI,4294967276
            call .L_413c90

            pxor XMM1,XMM1
            add RSP,88
.L_42deb5:

            pop RBX
            pop RBP
            movapd XMM2,XMM1
            movapd XMM0,XMM1
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42dec8:

            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RBX+56]
            movapd XMM1,XMM0
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+24],XMM2
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM3,XMM4
            movapd XMM0,XMM3
            call atan2@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM1,XMM0
            jmp .L_42dc98
.L_42df0f:

            nop
.L_42df10:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_42df19:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            mov EAX,DWORD PTR [RBX+112]
            test EAX,EAX
            jne .L_42df65

            movapd XMM6,XMM0
            movsd XMM2,QWORD PTR [RBX+72]
            movsd XMM0,QWORD PTR [RBX+80]
            movapd XMM4,XMM6
            movapd XMM3,XMM2
            mulsd XMM2,XMM6
            mulsd XMM4,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            addsd XMM0,XMM2
            subsd XMM4,XMM3
            addsd XMM0,QWORD PTR [RBX+104]
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM0
.L_42df65:

            movsd XMM0,QWORD PTR [RBX+40]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mulsd XMM0,XMM1
            call exp@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM3,XMM1
            movsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM3,XMM0
            mulsd XMM7,QWORD PTR [RBX+40]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM7
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+64]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM3,QWORD PTR [RIP+.L_4470f8]
            addsd XMM2,XMM0
            divsd XMM2,XMM3
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            andpd XMM0,XMM3
            subsd XMM0,XMM1
            andpd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM0
            jbe .L_42e058

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_42e048

            movsd XMM2,QWORD PTR [RIP+.L_447a20]
.L_42e038:

            add RSP,56
.L_42e03c:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e048:

            movsd XMM2,QWORD PTR [RIP+.L_447a18]
            jmp .L_42e038
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e058:

            movapd XMM3,XMM2
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RBX+16]
            addsd XMM3,XMM1
            subsd XMM0,XMM2
            movapd XMM2,XMM3
            divsd XMM2,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            sqrtsd XMM3,XMM2
            ja .L_42e166
.L_42e087:

            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            divsd XMM1,QWORD PTR [RBX+8]
            movapd XMM0,XMM4
            movsd XMM2,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+16],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM2
            call .L_444e90

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movsd XMM5,QWORD PTR [RSP+24]
            ja .L_42e140

            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM5,QWORD PTR [RBX+40]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            mulsd XMM3,QWORD PTR [RBX+64]
            mulsd XMM5,QWORD PTR [RBX+56]
            subsd XMM3,XMM5
            movapd XMM0,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+16]
            jmp .L_42e038
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e140:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM0
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP]
            add RSP,56
.L_42e15b:

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
.L_42e166:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_42e087
.L_42e1a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e1b0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov ESI,120
            push RBP
            push RBX
            mov EDI,1
            sub RSP,168
.L_42e1ce:

            call .L_403740

            test RAX,RAX
            je .L_42e37d

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa75]
            mov QWORD PTR [R15+32],RAX
            mov RBX,RAX
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa00]
            mov DWORD PTR [RBX+112],EAX
            call .L_403e60

            test EAX,EAX
            mov RBP,RAX
            mov RSI,QWORD PTR [R15+16]
            jne .L_42e3a0

            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa7d]
            call .L_403e60

            test EAX,EAX
            mov R14D,EAX
            jne .L_42ebd8

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44a20d]
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RSP+24],RAX
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+16],RAX
            lea RDX,QWORD PTR [RIP+.L_44aa14]
            mov RDI,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM3
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov RDI,QWORD PTR [R15]
            mov QWORD PTR [RSP+48],RAX
            call .L_403e60

            movsd XMM3,QWORD PTR [RSP]
            mov QWORD PTR [RSP+16],RAX
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movq XMM6,QWORD PTR [RIP+.L_447130]
            movsd XMM1,QWORD PTR [RIP+.L_449e30]
            subsd XMM0,XMM4
            movaps XMMWORD PTR [RSP],XMM6
            andpd XMM0,XMM6
            ucomisd XMM1,XMM0
            jae .L_42e370

            movapd XMM5,XMMWORD PTR [RSP]
            movapd XMM6,XMM5
            andpd XMM6,XMM3
            ucomisd XMM1,XMM6
            movapd XMM0,XMM6
            jae .L_42e370

            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_42e370

            movsd XMM0,QWORD PTR [R15+336]
            andpd XMM0,XMM5
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_42e370

            movapd XMM6,XMM5
            andpd XMM6,XMM4
            movapd XMM0,XMM6
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_42e370

            pxor XMM2,XMM2
            mov DWORD PTR [RSP+72],0
            mov DWORD PTR [RSP+84],0
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+96],XMM2
            jmp .L_42e45e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e370:

            mov ESI,4294967263
            mov RDI,R15
            call .L_413c90
.L_42e37d:

            add RSP,168
.L_42e384:

            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_42dc10
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e3a0:

            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa07]
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa7d]
            mov QWORD PTR [RSP+64],RAX
            call .L_403e60

            test EAX,EAX
            mov R14D,EAX
            jne .L_42e6e0

            pxor XMM4,XMM4
            mov DWORD PTR [RSP+72],EBP
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+40],XMM4
.L_42e3e6:

            mov RSI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_44aa0e]
            mov RDI,QWORD PTR [R15]
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa8b]
            mov QWORD PTR [RSP+96],RAX
            call .L_403e60

            test EAX,EAX
            jne .L_42e710

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aaa4]
            call .L_403e60

            test EAX,EAX
            mov DWORD PTR [RSP+84],EAX
            jne .L_42e710

            movq XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM7,QWORD PTR [RSP+16]
            pxor XMM4,XMM4
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movaps XMMWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM7
.L_42e45e:

            movsd XMM0,QWORD PTR [R15+216]
            movsd XMM7,QWORD PTR [RSP+16]
            sqrtsd XMM5,XMM0
            ucomisd XMM7,XMM0
            ja .L_42ec58
.L_42e47b:

            movsd XMM0,QWORD PTR [R15+336]
            movapd XMM6,XMMWORD PTR [RSP]
            andpd XMM6,XMM0
            ucomisd XMM6,QWORD PTR [RIP+.L_447cd0]
            ja .L_42e7a0

            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            mov EDX,DWORD PTR [RSP+72]
            lea R12,QWORD PTR [RSP+152]
            lea R13,QWORD PTR [RSP+144]
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+32],XMM7
            test EDX,EDX
            movsd QWORD PTR [RSP+88],XMM7
            divsd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [R15+360]
            movsd QWORD PTR [RBX+16],XMM7
            movsd QWORD PTR [RBX],XMM0
            je .L_42e92d
.L_42e4f0:

            test EBP,EBP
            je .L_42e770

            movsd XMM0,QWORD PTR [RSP+64]
            call sin@PLT

            divsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            test R14D,R14D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_42e525

            movsd XMM3,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+40],XMM3
.L_42e525:

            movsd XMM0,QWORD PTR [RSP+24]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM1,XMM4
            subsd XMM4,XMM1
            movapd XMM1,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+72],XMM4
            mulsd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+96]
            divsd XMM0,XMM2
            subsd XMM7,XMM0
            movsd QWORD PTR [R15+328],XMM7
.L_42e57f:

            movsd XMM0,QWORD PTR [RSP+40]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+88],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+144]
            mov RSI,R13
            movsd XMM3,QWORD PTR [RSP+152]
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RSP+84]
            movsd XMM0,QWORD PTR [RSP+144]
            movsd XMM4,QWORD PTR [RSP+152]
            movsd XMM2,QWORD PTR [RSP+88]
            test EAX,EAX
            movsd QWORD PTR [RBX+80],XMM1
            movapd XMM1,XMM6
            movsd QWORD PTR [RBX+64],XMM0
            divsd XMM1,XMM2
            movsd QWORD PTR [RBX+56],XMM4
            movsd XMM0,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBX+48],XMM1
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX+72],XMM3
            divsd XMM6,XMM1
            movsd QWORD PTR [RBX+32],XMM1
            movsd QWORD PTR [RBX+24],XMM0
            movsd QWORD PTR [RBX+40],XMM6
            je .L_42eb40

            mov QWORD PTR [RBX+104],0
.L_42e643:

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            mulsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM7,QWORD PTR [RBX+32]
            addsd XMM0,XMM2
            movsd QWORD PTR [RBX+88],XMM1
            movsd QWORD PTR [RSP+16],XMM7
            call tan@PLT

            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_42df10]
            movsd QWORD PTR [RBX+96],XMM0
            mov QWORD PTR [R15+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42dc50]
            mov QWORD PTR [R15+40],RAX
            add RSP,168
.L_42e6cd:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e6e0:

            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+16],XMM2
.L_42e6ea:

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa84]
            call .L_403e60

            mov QWORD PTR [RSP+40],RAX
            mov EAX,R14D
            or EAX,EBP
            mov DWORD PTR [RSP+72],EAX
            jmp .L_42e3e6
.L_42e710:

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa93]
            call .L_403e60

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44aa9c]
            call .L_403e60

            movsd XMM5,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+84],1
            movq XMM2,QWORD PTR [RIP+.L_447130]
            pxor XMM4,XMM4
            movsd QWORD PTR [RSP+48],XMM5
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movaps XMMWORD PTR [RSP],XMM2
            jmp .L_42e45e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e770:

            movsd XMM0,QWORD PTR [RSP+40]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+24],XMM6
            jmp .L_42e525
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e7a0:

            lea R12,QWORD PTR [RSP+152]
            lea R13,QWORD PTR [RSP+144]
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+88],XMM4
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+56],XMM3
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+144]
            movsd XMM2,QWORD PTR [R15+176]
            movsd XMM1,QWORD PTR [RSP+152]
            movapd XMM8,XMM7
            movapd XMM0,XMM2
            mulsd XMM8,XMM7
            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RSP+88]
            mulsd XMM2,XMM8
            movapd XMM6,XMM3
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RBX+8],XMM8
            movsd XMM5,QWORD PTR [RSP+104]
            subsd XMM6,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM8
            divsd XMM0,QWORD PTR [R15+216]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+16]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+56]
            ja .L_42ece2
.L_42e85b:

            movsd XMM0,QWORD PTR [R15+360]
            movsd QWORD PTR [RBX+8],XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,XMM5
            mulsd XMM5,XMM2
            sqrtsd XMM2,XMM6
            divsd XMM0,XMM6
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM6
            ja .L_42ec86
.L_42e891:

            mulsd XMM7,XMM2
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM5,XMM7
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM5
            mulsd XMM0,XMM5
            subsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM2,XMM0
            jb .L_42ec28

            movsd XMM0,QWORD PTR [R15+336]
.L_42e8c6:

            addsd XMM2,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+88],XMM2
            movsd QWORD PTR [RBX+16],XMM2
            movsd XMM2,QWORD PTR [R15+168]
            call .L_445330

            movsd XMM5,QWORD PTR [RSP+104]
            movapd XMM1,XMM5
            call pow@PLT

            mulsd XMM0,QWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+120]
            test EDX,EDX
            movsd QWORD PTR [RBX+16],XMM0
            jne .L_42e4f0
.L_42e92d:

            movsd XMM5,QWORD PTR [RBX+8]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+88],XMM4
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+40],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [R15+168]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            call .L_445330

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+72],XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [R15+168]
            movapd XMM0,XMM4
            call .L_445330

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMM0
            movapd XMM2,XMM1
            mulsd XMM1,XMM1
            subsd XMM5,XMM3
            movapd XMM4,XMM3
            divsd XMM2,XMM3
            addsd XMM4,XMM0
            mulsd XMM3,XMM0
            movapd XMM0,XMM1
            divsd XMM5,XMM4
            subsd XMM0,XMM3
            addsd XMM3,XMM1
            divsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RIP+.L_447a60]
            movsd QWORD PTR [RSP+64],XMM0
            movapd XMM0,XMM4
            subsd XMM0,XMM3
            ucomisd XMM1,XMM0
            jbe .L_42ebf0

            subsd XMM3,QWORD PTR [RIP+.L_448430]
            subsd XMM4,XMM3
            movsd QWORD PTR [RSP+48],XMM3
            movapd XMM0,XMM4
.L_42ea50:

            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+72],XMM1
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+88],XMM3
            mulsd XMM0,XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+64]
            divsd XMM0,QWORD PTR [RSP+40]
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+72]
            addsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSP+88]
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_442820

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RBX+8]
            subsd XMM6,XMM0
            movsd QWORD PTR [R15+328],XMM0
            movsd QWORD PTR [RSP+40],XMM7
            movapd XMM0,XMM6
            call .L_442820

            mulsd XMM0,QWORD PTR [RSP+40]
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+96]
            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM1,XMM2
            subsd XMM2,XMM1
            divsd XMM0,XMM2
            call atan@PLT

            movsd QWORD PTR [RSP+24],XMM0
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+64],XMM0
            jmp .L_42e57f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb40:

            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_42ed4c
.L_42eb6a:

            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+40],XMM1
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movapd XMM4,XMMWORD PTR [RSP]
            mulsd XMM1,XMM0
            andpd XMM4,XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [RBX+104],XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            ucomisd XMM4,QWORD PTR [R15+336]
            jbe .L_42ebc8

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RBX+104],XMM0
.L_42ebc8:

            movsd XMM1,QWORD PTR [RBX+32]
            jmp .L_42e643
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ebd8:

            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+64],XMM6
            jmp .L_42e6ea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ebf0:

            ucomisd XMM0,QWORD PTR [RIP+.L_447a78]
            jbe .L_42ea50

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM6,QWORD PTR [RIP+.L_448430]
            movsd QWORD PTR [RSP+48],XMM6
            subsd XMM0,XMM6
            jmp .L_42ea50
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec28:

            sqrtsd XMM2,XMM0
            ja .L_42ed62
.L_42ec32:

            movsd XMM0,QWORD PTR [R15+336]
            movsd XMM7,QWORD PTR [RSP+16]
            ucomisd XMM7,XMM0
            jbe .L_42e8c6

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_42e8c6
.L_42ec58:

            movsd QWORD PTR [RSP+88],XMM5
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+32]
            jmp .L_42e47b
.L_42ec86:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+128],XMM7
            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+88],XMM2
            movsd QWORD PTR [RSP+56],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+56]
            jmp .L_42e891
.L_42ece2:

            movsd QWORD PTR [RSP+136],XMM7
            movsd QWORD PTR [RSP+128],XMM6
            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+104],XMM4
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+136]
            movsd XMM6,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+56]
            jmp .L_42e85b
.L_42ed4c:

            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_42eb6a
.L_42ed62:

            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+88],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+88]
            jmp .L_42ec32
.L_42ed9c:

            nop
            nop
            nop
            nop
.L_42eda0:

            test RDI,RDI
            je .L_42edb0

            jmp .L_42e1b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42edb0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42edde

            lea RDX,QWORD PTR [RIP+.L_42dc40]
            lea RCX,QWORD PTR [RIP+.L_44aac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42edde:

            add RSP,8
            ret 
.L_42ede3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42edf0:

            xor EAX,EAX
            ret 
.L_42edf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee00:

            test RDI,RDI
            je .L_42ee28

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42ee1e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42ee1e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_42ee28:

            xor EAX,EAX
            ret 
.L_42ee2b:

            nop
            nop
            nop
            nop
            nop
.L_42ee30:

            jmp .L_42ee00
.L_42ee32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee40:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_42ee4d:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RBP+168]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM7,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+32],XMM4
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM7
            call tan@PLT

            call log@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM4
            movsd XMM5,QWORD PTR [RBX+16]
            addsd XMM0,XMM2
            subsd XMM2,XMM4
            movsd QWORD PTR [RSP+16],XMM5
            divsd XMM0,XMM2
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBX]
            call exp@PLT

            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            mulsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RSP+56]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM1,QWORD PTR [RSP+48]
            subsd XMM0,XMM1
            call .L_442670

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            mulsd XMM6,QWORD PTR [RSP+8]
            movapd XMM1,XMM6
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_442670

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM2
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            add RSP,72
.L_42f004:

            mulsd XMM3,XMM1
            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            movapd XMM0,XMM3
            pop R12
            pop R13
            ret 
.L_42f017:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f020:

            push R14
            push R13
            push R12
            push RBP
            mov EBP,6
            push RBX
            mov RBX,RDI
            sub RSP,80
.L_42f034:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            lea R13,QWORD PTR [RSP+72]
            lea R14,QWORD PTR [RSP+64]
            divsd XMM1,QWORD PTR [R12+24]
            movapd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_447a38]
            mov RSI,R14
            mov RDI,R13
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R14
            movsd XMM5,QWORD PTR [RSP+64]
            mov RDI,R13
            divsd XMM2,QWORD PTR [R12+24]
            movsd QWORD PTR [RSP+8],XMM5
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [R12+40]
            mulsd XMM1,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,QWORD PTR [RSP+64]
            addsd XMM0,XMM1
            call .L_442670

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call .L_442670

            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM2,QWORD PTR [R12]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            divsd XMM2,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+48],XMM2
.L_42f166:

            movapd XMM0,XMM1
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM3,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            call log@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM4,XMM3
            movsd XMM6,QWORD PTR [R12+16]
            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM6
            divsd XMM0,XMM4
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            addsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM3
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            subsd XMM2,XMM3
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+224]
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_42f2a8

            sub EBP,1
            je .L_42f280

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_42f166
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f280:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,80
.L_42f295:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f2a8:

            movsd XMM6,QWORD PTR [RSP+56]
            divsd XMM6,QWORD PTR [R12+8]
            add RSP,80
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            movapd XMM0,XMM6
            ret 
.L_42f2c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f2d0:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_42f2e3:

            call .L_403740

            test RAX,RAX
            je .L_42f4d0

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            movsd XMM2,QWORD PTR [RBX+336]
            mulsd XMM0,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RAX+16],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movapd XMM1,XMM0
            pxor XMM5,XMM5
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RBX+224]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_42f503
.L_42f364:

            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            mov RDI,QWORD PTR [RBX]
            divsd XMM0,XMM3
            movsd QWORD PTR [RBP+40],XMM0
            call .L_442670

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RBX+168]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd QWORD PTR [RSP+24],XMM1
            call tan@PLT

            call log@PLT

            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd XMM6,QWORD PTR [RBP+8]
            mulsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM4,XMM1
            movsd XMM7,QWORD PTR [RBP+16]
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM7
            divsd XMM0,XMM4
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM5,XMM0
            mulsd XMM2,QWORD PTR [RSP+8]
            subsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RBX+360]
            movsd QWORD PTR [RBP],XMM3
            sqrtsd XMM3,XMM0
            ja .L_42f4de
.L_42f491:

            mulsd XMM1,XMM1
            lea RAX,QWORD PTR [RIP+.L_42f020]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM3
            subsd XMM0,XMM1
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+24],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42ee40]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_42f4c8:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_42f4d0:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_42ee00
.L_42f4de:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_42f491
.L_42f503:

            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+336]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_42f364
.L_42f521:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f530:

            test RDI,RDI
            je .L_42f540

            jmp .L_42f2d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f540:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42f56e

            lea RDX,QWORD PTR [RIP+.L_42ee30]
            lea RCX,QWORD PTR [RIP+.L_44ab40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42f56e:

            add RSP,8
            ret 
.L_42f573:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f580:

            xor EAX,EAX
            ret 
.L_42f583:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f590:

            jmp .L_403770
.L_42f595:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f5a0:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_42f5a8:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM2
            mulsd XMM1,XMM2
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM1,XMM0
            ja .L_42f650

            pxor XMM1,XMM1
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+16],XMM4
            ucomisd XMM1,XMM0
            ja .L_42f66f
.L_42f612:

            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RSP+16]
            add RSP,48
.L_42f641:

            pop RBX
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f650:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_413c90

            pxor XMM2,XMM2
            add RSP,48
            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_42f66f:

            movsd QWORD PTR [RSP+24],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_42f612
.L_42f682:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f690:

            test RDI,RDI
            je .L_42f6c0

            lea RAX,QWORD PTR [RIP+.L_42f5a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f6c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42f6ee

            lea RDX,QWORD PTR [RIP+.L_42f590]
            lea RCX,QWORD PTR [RIP+.L_44ab80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42f6ee:

            add RSP,8
            ret 
.L_42f6f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f700:

            lea RDX,QWORD PTR [RIP+.L_42f5a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_42f722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f730:

            xor EAX,EAX
            ret 
.L_42f733:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f740:

            jmp .L_403770
.L_42f745:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f750:

            push RBX
            mov RBX,RDI
            sub RSP,48

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RBX+360]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM3,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RBX+336]
            add RSP,48

            pop RBX
            movapd XMM0,XMM3
            mulsd XMM1,XMM2
            divsd XMM0,XMM2
            ret 
.L_42f7db:

            nop
            nop
            nop
            nop
            nop
.L_42f7e0:

            sub RSP,56
.L_42f7e4:

            movsd XMM2,QWORD PTR [RDI+360]
            divsd XMM1,XMM2
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM1,QWORD PTR [RDI+336]
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            subsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP],XMM5
            ja .L_42f887
.L_42f823:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+16],XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,56
.L_42f882:

            movapd XMM1,XMM3
            ret 
.L_42f887:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42f823
.L_42f8a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f8b0:

            test RDI,RDI
            je .L_42f8e0

            lea RAX,QWORD PTR [RIP+.L_42f7e0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42f750]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f8e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42f90e

            lea RDX,QWORD PTR [RIP+.L_42f740]
            lea RCX,QWORD PTR [RIP+.L_44abc0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42f90e:

            add RSP,8
            ret 
.L_42f913:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f920:

            lea RDX,QWORD PTR [RIP+.L_42f7e0]
            lea RCX,QWORD PTR [RIP+.L_42f750]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_42f945:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f950:

            xor EAX,EAX
            ret 
.L_42f953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f960:

            test RDI,RDI
            je .L_42f970

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f970:

            ret 
.L_42f972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f980:

            sub RSP,24
.L_42f984:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movapd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_447a38]
            movapd XMM0,XMM3
            call sin@PLT

            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44ac08]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44ac00]
            mulsd XMM1,QWORD PTR [RIP+.L_44ac10]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            add RSP,24
.L_42f9e4:

            mulsd XMM0,XMM2
            ret 
.L_42f9e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f9f0:

            sub RSP,40
.L_42f9f4:

            divsd XMM1,QWORD PTR [RIP+.L_44ac10]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_447a38]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44ac08]
            mulsd XMM2,XMM2
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM1,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_44ac00]
            add RSP,40
.L_42fa5a:

            subsd XMM0,XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM3
            ret 
.L_42fa67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fa70:

            test RDI,RDI
            je .L_42faa0

            lea RAX,QWORD PTR [RIP+.L_42f9f0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42f980]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42faa0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_42face

            lea RDX,QWORD PTR [RIP+.L_42f960]
            lea RCX,QWORD PTR [RIP+.L_44abf0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42face:

            add RSP,8
            ret 
.L_42fad3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fae0:

            lea RDX,QWORD PTR [RIP+.L_42f9f0]
            lea RCX,QWORD PTR [RIP+.L_42f980]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_42fb05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fb10:

            xor EAX,EAX
            ret 
.L_42fb13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fb20:

            test RDI,RDI
            je .L_42fb50

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42fb48

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_42fb48:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fb50:

            xor EAX,EAX
            ret 
.L_42fb53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fb60:

            jmp .L_42fb20
.L_42fb62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fb70:

            push RBP
            push RBX
            mov RBX,RDI
            movapd XMM6,XMM0
            sub RSP,104
.L_42fb7d:

            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM0,XMM6
            ja .L_42fea0

            ucomisd XMM6,QWORD PTR [RIP+.L_447a20]
            ja .L_42fea0

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+88]
            movapd XMM0,XMM2
            movsd XMM12,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447cd0]
            ja .L_42fec0

            pxor XMM1,XMM1
            pxor XMM4,XMM4
.L_42fbf7:

            movsd XMM0,QWORD PTR [RBX+176]
            movapd XMM9,XMM2
            movsd XMM10,QWORD PTR [RIP+.L_4470f0]
            mov RBP,QWORD PTR [RBX+32]
            mulsd XMM0,XMM5
            movapd XMM7,XMM10
            mulsd XMM9,XMM6
            mulsd XMM0,XMM5
            movapd XMM8,XMM9
            mulsd XMM8,XMM9
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            sqrtsd XMM3,XMM7
            movapd XMM0,XMM7
            ja .L_42fed5
.L_42fc43:

            movapd XMM0,XMM4
            divsd XMM9,XMM3
            mov RDI,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+72],XMM6
            subsd XMM0,QWORD PTR [RIP+.L_44a850]
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM10
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM0,XMM4
            movsd XMM11,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RIP+.L_44ac48]
            mulsd XMM11,XMM2
            movsd QWORD PTR [RSP+24],XMM9
            mulsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_447ce8]
            movsd XMM7,QWORD PTR [RBX+360]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44ac50]
            mulsd XMM11,XMM2
            movsd QWORD PTR [RSP+32],XMM7
            subsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44ac70]
            mulsd XMM3,XMM8
            movsd QWORD PTR [RSP+56],XMM11
            mulsd XMM0,XMM11
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44ac58]
            subsd XMM1,XMM4
            mulsd XMM1,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_44ac60]
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_44ac68]
            mulsd XMM1,XMM3
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44ac78]
            mulsd XMM0,XMM8
            addsd XMM3,XMM1
            movapd XMM1,XMM5
            mulsd XMM3,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM4
            addsd XMM0,XMM11
            addsd XMM3,XMM0
            movapd XMM0,XMM8
            mulsd XMM0,QWORD PTR [RIP+.L_44a6d8]
            mulsd XMM3,XMM0
            movapd XMM0,XMM7
            mulsd XMM0,XMM9
            addsd XMM3,XMM10
            mulsd XMM3,XMM0
            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+16],XMM3
            call .L_4447b0

            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM12,QWORD PTR [RIP+.L_44ac80]
            subsd XMM0,QWORD PTR [RBP+8]
            movapd XMM2,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_44ac88]
            mulsd XMM12,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_44ac48]
            movsd XMM11,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM1,XMM12
            movsd XMM12,QWORD PTR [RIP+.L_44aca8]
            movsd XMM9,QWORD PTR [RSP+24]
            mulsd XMM12,XMM8
            mulsd XMM2,XMM4
            mulsd XMM1,XMM11
            mulsd XMM5,XMM9
            movsd XMM6,QWORD PTR [RSP+72]
            addsd XMM2,QWORD PTR [RIP+.L_44ac68]
            movsd XMM10,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM6,XMM5
            movsd XMM7,QWORD PTR [RSP+32]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44ac90]
            mulsd XMM6,QWORD PTR [RIP+.L_4470f8]
            subsd XMM1,XMM4
            mulsd XMM1,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_44ac98]
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_44aca0]
            mulsd XMM1,XMM12
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44acb0]
            mulsd XMM1,XMM8
            mulsd XMM8,QWORD PTR [RIP+.L_44acb8]
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            mulsd XMM1,XMM11
            addsd XMM1,QWORD PTR [RIP+.L_446fb0]
            mulsd XMM1,XMM11
            movsd XMM11,QWORD PTR [RIP+.L_447ce8]
            add RSP,104
.L_42fe74:

            pop RBX
            subsd XMM11,XMM4
            pop RBP
            addsd XMM1,XMM11
            addsd XMM1,XMM2
            mulsd XMM1,XMM8
            addsd XMM1,XMM10
            mulsd XMM1,XMM6
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM1,XMM7
            ret 
          .byte 0x90
.L_42fea0:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404200

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,104
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
.L_42fec0:

            movapd XMM4,XMM5
            pxor XMM1,XMM1
            divsd XMM4,XMM2
            mulsd XMM4,XMM4
            jmp .L_42fbf7
.L_42fed5:

            movsd QWORD PTR [RSP+72],XMM10
            movsd QWORD PTR [RSP+64],XMM12
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM10,QWORD PTR [RSP+72]
            movsd XMM12,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM9,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_42fc43
.L_42ff53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ff60:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_42ff68:

            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM1,XMM0
            ja .L_4300d0

            ucomisd XMM0,QWORD PTR [RIP+.L_447a20]
            ja .L_4300d0

            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            mulsd XMM4,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            movapd XMM0,XMM4
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            jae .L_4300f0

            movapd XMM0,XMM4
            movapd XMM6,XMM5
            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+48],XMM1
            subsd XMM6,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM4
            movsd XMM7,QWORD PTR [RAX+8]
            movaps XMMWORD PTR [RSP+64],XMM3
            divsd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM7
            call log@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM4,XMM4
            movapd XMM3,XMMWORD PTR [RSP+64]
            mulsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            mulsd XMM1,QWORD PTR [RSP+16]
            subsd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            ja .L_43016e
.L_430079:

            divsd XMM1,XMM6
            andpd XMM3,XMM1
            ucomisd XMM3,XMM5
            jb .L_430110

            subsd XMM3,XMM5
            ucomisd XMM3,QWORD PTR [RIP+.L_447cd0]
            ja .L_430140

            pxor XMM1,XMM1
.L_4300a1:

            ucomisd XMM4,QWORD PTR [RSP+8]
            jbe .L_4300b1

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_4300b1:

            subsd XMM1,QWORD PTR [RBX+336]
            mov RAX,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RAX]
            add RSP,96
.L_4300c9:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4300d0:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404200

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
.L_4300e9:

            add RSP,96
            pop RBX
            ret 
          .byte 0x90
.L_4300f0:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,96
            pop RBX
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430110:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_4300a1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430140:

            mov ESI,4294967276
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM2
            jmp .L_4300e9
.L_43016e:

            movsd QWORD PTR [RSP+64],XMM5
            movaps XMMWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_430079
.L_4301bf:

            nop
.L_4301c0:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_4301c8:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM1
            divsd XMM0,QWORD PTR [RAX]
            call exp@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM4
            divsd XMM5,XMM0
            subsd XMM0,XMM5
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+16],XMM2
            addsd XMM0,QWORD PTR [RBX+336]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movapd XMM3,XMM2
            mulsd XMM0,XMM0
            movapd XMM6,XMM4
            mulsd XMM3,XMM2
            subsd XMM6,XMM0
            addsd XMM3,XMM4
            movapd XMM0,XMM6
            divsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM4,XMM0
            ja .L_43030c
.L_430264:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            ja .L_4302f0
.L_43029d:

            ucomisd XMM2,XMM3
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_4302d0

            ucomisd XMM1,XMM3
            pxor XMM0,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_4302d0

            add RSP,48
.L_4302c6:

            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4302d0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            add RSP,48
            pop RBX
            movapd XMM1,XMM4
            ret 
          .byte 0x90
.L_4302f0:

            movsd XMM0,QWORD PTR [RBX+336]
            subsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jbe .L_43029d

            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43029d
.L_43030c:

            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_430264
.L_430346:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430350:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_430359:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            mov RSI,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            addsd XMM0,QWORD PTR [RBP+8]
            call .L_4447f0

            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM2
            ucomisd XMM0,XMM4
            jb .L_4303d0

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM0,XMM3
            ja .L_4303c8

            movapd XMM1,XMM4
.L_4303c8:

            add RSP,104
.L_4303cc:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4303d0:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM2,XMMWORD PTR [RSP+16]
            andpd XMM2,XMM7
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM2,QWORD PTR [RIP+.L_447cd0]
            ja .L_430690

            pxor XMM4,XMM4
            pxor XMM11,XMM11
.L_430421:

            movsd XMM14,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM14
            movsd XMM10,QWORD PTR [RBP]
            movapd XMM13,XMM2
            mulsd XMM0,XMM3
            mulsd XMM10,XMM7
            mulsd XMM0,XMM3
            mulsd XMM10,XMM7
            subsd XMM13,XMM0
            ucomisd XMM4,XMM13
            sqrtsd XMM8,XMM13
            ja .L_4306a3
.L_430469:

            movsd XMM3,QWORD PTR [RIP+.L_446fb0]
            movapd XMM4,XMM11
            movsd XMM5,QWORD PTR [RIP+.L_447a90]
            mulsd XMM3,XMM10
            movapd XMM6,XMM2
            mulsd XMM4,XMM11
            movsd XMM12,QWORD PTR [RIP+.L_447ce8]
            movsd XMM9,QWORD PTR [RIP+.L_44ac68]
            subsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447a88]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM3,XMM10
            mulsd XMM0,XMM8
            mulsd XMM5,XMM4
            movsd XMM15,QWORD PTR [RIP+.L_44aca8]
            subsd XMM6,XMM3
            mulsd XMM11,XMM13
            divsd XMM0,QWORD PTR [RBX+360]
            addsd XMM5,XMM12
            movapd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_44acc0]
            mulsd XMM3,XMM10
            mulsd XMM6,XMM10
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_448730]
            movapd XMM8,XMM0
            mulsd XMM0,XMM0
            subsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_449860]
            mulsd XMM6,XMM4
            mulsd XMM15,XMM0
            mulsd XMM11,XMM0
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_44acc8]
            mulsd XMM6,XMM10
            mulsd XMM3,XMM4
            addsd XMM3,XMM9
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_44acd0]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_44acd8]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_44ace0]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_44aca0]
            mulsd XMM6,XMM15
            subsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_44acb0]
            mulsd XMM6,XMM0
            mulsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_447a68]
            mulsd XMM6,XMM10
            subsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44acb8]
            mulsd XMM3,XMM0
            mulsd XMM5,XMM3
            movapd XMM3,XMM2
            subsd XMM3,XMM5
            movapd XMM5,XMM2
            subsd XMM5,XMM14
            divsd XMM11,XMM5
            movapd XMM5,XMM4
            addsd XMM5,XMM4
            addsd XMM5,XMM2
            addsd XMM5,XMM10
            mulsd XMM10,QWORD PTR [RIP+.L_448f50]
            mulsd XMM11,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM11,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44a610]
            mulsd XMM3,XMM4
            subsd XMM1,XMM11
            addsd XMM3,QWORD PTR [RIP+.L_448f38]
            addsd XMM3,XMM6
            mulsd XMM3,XMM4
            addsd XMM12,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_448f00]
            mulsd XMM3,XMM4
            addsd XMM12,XMM10
            movsd XMM10,QWORD PTR [RIP+.L_44ac78]
            addsd XMM3,QWORD PTR [RIP+.L_44ace8]
            mulsd XMM10,XMM0
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_44acf0]
            mulsd XMM3,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_44ac70]
            mulsd XMM4,XMM0
            addsd XMM3,XMM9
            mulsd XMM0,QWORD PTR [RIP+.L_44a6d8]
            add RSP,104
.L_43065e:

            pop RBX
            pop RBP
            mulsd XMM3,XMM4
            subsd XMM12,XMM3
            mulsd XMM12,XMM10
            subsd XMM5,XMM12
            mulsd XMM0,XMM5
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM8
            divsd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430690:

            movapd XMM11,XMM3
            pxor XMM4,XMM4
            divsd XMM11,XMM7
            jmp .L_430421
.L_4306a3:

            movapd XMM0,XMM13
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM10
            movsd QWORD PTR [RSP+48],XMM11
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+32],XMM13
            call sqrt@PLT

            movsd XMM14,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM10,QWORD PTR [RSP+56]
            movsd XMM11,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM13,QWORD PTR [RSP+32]
            jmp .L_430469
.L_430717:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430720:

            push R12
            push RBP
            mov ESI,24
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_430735:

            call .L_403740

            test RAX,RAX
            je .L_430840

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            jp .L_4307a0

            jne .L_4307a0

            movsd XMM0,QWORD PTR [RBX+360]
            movsd QWORD PTR [RAX],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RAX+8],XMM0
            lea RAX,QWORD PTR [RIP+.L_4301c0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42ff60]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_430791:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4307a0:

            call .L_4446c0

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP+16],RAX
            je .L_430840

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            call .L_4447b0

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            lea RAX,QWORD PTR [RIP+.L_430350]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            subsd XMM1,XMM0
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42fb70]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_430830:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430840:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42fb20
.L_430850:

            test RDI,RDI
            je .L_430860

            jmp .L_430720
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430860:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43088e

            lea RDX,QWORD PTR [RIP+.L_42fb60]
            lea RCX,QWORD PTR [RIP+.L_44ac20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43088e:

            add RSP,8
            ret 
.L_430893:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4308a0:

            xor EAX,EAX
            ret 
.L_4308a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4308b0:

            test RDI,RDI
            je .L_4308d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4308ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4308ce:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_4308d8:

            xor EAX,EAX
            ret 
.L_4308db:

            nop
            nop
            nop
            nop
            nop
.L_4308e0:

            jmp .L_4308b0
.L_4308e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4308f0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
            sub RSP,64
.L_4308ff:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBP,QWORD PTR [R14+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RBP+32]
            test EBX,EBX
            js .L_430a64

            cmp EBX,1
            movsd XMM1,QWORD PTR [RSP]
            jle .L_430a18

            cmp EBX,3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            jg .L_430a64

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP]
            cmp EBX,3
            movsd XMM5,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM5
            jne .L_43099b

            mulsd XMM0,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RBP+8]
            mulsd XMM1,XMM6
            addsd XMM0,XMM1
.L_43099b:

            mov ECX,DWORD PTR [RBP+36]
            test ECX,ECX
            jne .L_4309b4

            movsd XMM1,QWORD PTR [RIP+.L_4499b8]
            ucomisd XMM1,XMM0
            ja .L_430b90
.L_4309b4:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM7,XMM3
            subsd XMM7,XMM0
            movapd XMM1,XMM7
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_447cd0]
            ja .L_430a80

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            subsd XMM1,QWORD PTR [RBP+24]
.L_4309eb:

            movapd XMM0,XMM1
            cmp EBX,3
            mulsd XMM0,XMM5
            mulsd XMM0,XMM2
            je .L_430bb0

            add RSP,64
.L_430a04:

            mulsd XMM1,XMM6
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a18:

            movsd XMM0,QWORD PTR [RBP]
            mov EDX,DWORD PTR [RBP+36]
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447cd0]
            test EDX,EDX
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            jne .L_430a4e

            movapd XMM3,XMM0
            subsd XMM3,XMM1
            ucomisd XMM3,QWORD PTR [RIP+.L_447a20]
            ja .L_430b90
.L_430a4e:

            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM3,XMM0
            ucomisd XMM3,XMM1
            ja .L_430b08
.L_430a64:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
.L_430a6c:

            add RSP,64
.L_430a70:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a80:

            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call log@PLT

            movapd XMM1,XMM0
            mov EBX,DWORD PTR [RBP+32]
            movsd XMM7,QWORD PTR [RSP+16]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM0,QWORD PTR [RBP+24]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            divsd XMM1,XMM7
            divsd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+40]
            subsd XMM1,XMM0
            jmp .L_4309eb

            nop
            nop
            nop
            nop
.L_430b08:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RBP+24]
            divsd XMM0,XMM5
            test EAX,EAX
            mulsd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            addsd XMM1,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_448f78]
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            movapd XMM0,XMM2
            jne .L_430a6c

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_430a6c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430b90:

            mov ESI,4294967276
            mov RDI,R14
            call .L_413c90

            pxor XMM0,XMM0
            movapd XMM1,XMM0
            jmp .L_430a6c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430bb0:

            mulsd XMM5,QWORD PTR [RBP+8]
            mulsd XMM6,QWORD PTR [RBP+16]
            mulsd XMM4,XMM5
            subsd XMM6,XMM4
            mulsd XMM1,XMM6
            jmp .L_430a6c
.L_430bcb:

            nop
            nop
            nop
            nop
            nop
.L_430bd0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_430be3:

            call .L_403740

            test RAX,RAX
            je .L_430d60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44acf8]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44ad00]
            mov DWORD PTR [RBP+36],EAX
            call .L_403e60

            movsd XMM4,QWORD PTR [RIP+.L_447a20]
            mov QWORD PTR [RSP],RAX
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM1,XMM4
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            subsd XMM1,XMM6
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movapd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jbe .L_430cd0

            mov RAX,QWORD PTR [RIP+.L_449d30]
            mov QWORD PTR [RBP+24],RAX
.L_430c6b:

            movsd XMM0,QWORD PTR [RBX+336]
            movapd XMM5,XMM0
            andpd XMM5,XMM2
            movapd XMM1,XMM5
            subsd XMM1,XMM4
            andpd XMM1,XMM2
            ucomisd XMM3,XMM1
            jbe .L_430d48

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_430da8

            movsd QWORD PTR [RBP],XMM4
            mov DWORD PTR [RBP+32],0
.L_430cab:

            lea RAX,QWORD PTR [RIP+.L_4308f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,72
.L_430cc5:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430cd0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movaps XMMWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM5
            movsd QWORD PTR [RSP],XMM5
            call cos@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM5,XMM0
            movapd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBP+24],XMM5
            jmp .L_430c6b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430d48:

            ucomisd XMM3,XMM5
            jbe .L_430d70

            mov DWORD PTR [RBP+32],2
            jmp .L_430cab
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430d60:

            add RSP,72
.L_430d64:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4308b0
          .byte 0x66
          .byte 0x90
.L_430d70:

            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            mov DWORD PTR [RBP+32],3
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            jmp .L_430cab
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430da8:

            mov RAX,QWORD PTR [RIP+.L_447a18]
            mov DWORD PTR [RBP+32],1
            mov QWORD PTR [RBP],RAX
            jmp .L_430cab
.L_430dbf:

            nop
.L_430dc0:

            test RDI,RDI
            je .L_430dd0

            jmp .L_430bd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430dd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_430dfe

            lea RDX,QWORD PTR [RIP+.L_4308e0]
            lea RCX,QWORD PTR [RIP+.L_44ad20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_430dfe:

            add RSP,8
            ret 
.L_430e03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e10:

            xor EAX,EAX
            ret 
.L_430e13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e20:

            test RDI,RDI
            je .L_430e48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_430e3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_430e3e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_430e48:

            xor EAX,EAX
            ret 
.L_430e4b:

            nop
            nop
            nop
            nop
            nop
.L_430e50:

            jmp .L_430e20
.L_430e52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e60:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_430e6b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBX
            mulsd XMM4,QWORD PTR [RSP]
            mov R12,QWORD PTR [R12+32]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM6
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+32],XMM7
            call acos@PLT

            pxor XMM1,XMM1
            movapd XMM2,XMM0
            ucomisd XMM0,XMM1
            jp .L_430f30

            pxor XMM0,XMM0
            jne .L_430f30
.L_430ef9:

            mov EAX,DWORD PTR [R12+8]
            test EAX,EAX
            je .L_430f27

            movsd XMM2,QWORD PTR [RSP]
            addsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [R12]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
.L_430f27:

            add RSP,64
.L_430f2b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_430f30:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            jmp .L_430ef9
.L_430f75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430f80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,104
.L_430f92:

            mov R13,QWORD PTR [RDI+32]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            movsd XMM3,QWORD PTR [RIP+.L_447e58]
            ucomisd XMM3,XMM2
            jbe .L_430fc2

            movapd XMM2,XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM2
            ja .L_4315f8
.L_430fc2:

            lea RBP,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM0
            movapd XMM0,XMM1
            mov R15,RDI
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+72],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+80]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RSP+64]
            xor R14D,R14D
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM10
            nop
            nop
            nop
            nop
            nop
.L_431060:

            xor EBX,EBX
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM10,QWORD PTR [RSP+24]
            jmp .L_4310db
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431080:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+80]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
.L_4310db:

            movapd XMM0,XMM9
            movsd XMM8,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+56],XMM10
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            subsd XMM8,XMM1
            movsd QWORD PTR [RSP+16],XMM8
            call acos@PLT

            movsd XMM8,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_4498d8]
            movapd XMM0,XMM8
            call pow@PLT

            movsd XMM10,QWORD PTR [RSP+56]
            mov ECX,DWORD PTR [R13+8]
            movsd XMM9,QWORD PTR [RSP+40]
            movapd XMM1,XMM10
            movsd XMM11,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            test ECX,ECX
            mulsd XMM1,XMM9
            divsd XMM11,XMM0
            movapd XMM6,XMM2
            mulsd XMM1,XMM2
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM3,XMM5
            mulsd XMM6,XMM11
            mulsd XMM1,XMM5
            movapd XMM7,XMM8
            mulsd XMM3,XMM5
            movapd XMM4,XMM11
            mulsd XMM7,XMM11
            movapd XMM0,XMM6
            mulsd XMM6,XMM5
            divsd XMM1,XMM8
            addsd XMM4,XMM11
            mulsd XMM3,XMM10
            mulsd XMM0,XMM10
            mulsd XMM7,XMM2
            mulsd XMM6,XMM5
            mulsd XMM3,XMM10
            subsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM4,XMM8
            mulsd XMM0,XMM11
            divsd XMM3,XMM8
            addsd XMM1,XMM1
            mulsd XMM0,XMM9
            mulsd XMM6,XMM10
            mulsd XMM4,XMM5
            mulsd XMM0,XMM2
            mulsd XMM6,XMM9
            mulsd XMM4,XMM10
            mulsd XMM0,XMM2
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM2,XMM5
            mulsd XMM0,XMM9
            mulsd XMM2,XMM10
            divsd XMM0,XMM8
            divsd XMM2,XMM8
            movapd XMM12,XMM0
            movapd XMM0,XMM11
            mulsd XMM0,XMM10
            subsd XMM2,XMM6
            mulsd XMM0,XMM10
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM5
            addsd XMM0,XMM12
            je .L_4312ac

            movsd XMM5,QWORD PTR [R13]
            addsd XMM7,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM3,XMM5
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM6,XMM5
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM7,QWORD PTR [RIP+.L_4470f8]
            addsd XMM4,XMM6
            mulsd XMM3,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM4,QWORD PTR [RIP+.L_4470f8]
.L_4312ac:

            subsd XMM7,QWORD PTR [RSP+72]
            movapd XMM6,XMM3
            subsd XMM4,QWORD PTR [RSP+64]
            movapd XMM5,XMM1
            mulsd XMM6,XMM0
            mulsd XMM5,XMM2
            mulsd XMM1,XMM7
            mulsd XMM0,XMM4
            subsd XMM5,XMM6
            mulsd XMM3,XMM7
            mulsd XMM2,XMM4
            subsd XMM1,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a78]
            divsd XMM2,XMM5
            divsd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call fmod@PLT

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+16]
            subsd XMM7,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP],XMM7
            ucomisd XMM2,QWORD PTR [RIP+.L_447e58]
            movsd XMM7,QWORD PTR [RSP+8]
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP+8],XMM7
            ja .L_43134b

            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            jbe .L_431357
.L_43134b:

            add EBX,1
            cmp EBX,11
            jne .L_431080
.L_431357:

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,QWORD PTR [RIP+.L_447a20]
            jbe .L_43137f

            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            addsd XMM0,XMM0
            subsd XMM4,XMM0
            movsd QWORD PTR [RSP],XMM4
.L_43137f:

            movsd XMM4,QWORD PTR [RIP+.L_447a18]
            movsd XMM7,QWORD PTR [RSP]
            ucomisd XMM4,XMM7
            jbe .L_4313ab

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            addsd XMM0,XMM7
            addsd XMM0,XMM0
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
.L_4313ab:

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RIP+.L_447e58]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            ja .L_431560

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+88]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM4
            call cos@PLT

            movsd QWORD PTR [RSP+40],XMM0
.L_43142a:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+88]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call acos@PLT

            pxor XMM3,XMM3
            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM3
            jp .L_43147b

            je .L_4315c0
.L_43147b:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM3,XMM0
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
.L_4314c8:

            mov EAX,DWORD PTR [R13+8]
            test EAX,EAX
            je .L_4314f5

            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [R13]
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
.L_4314f5:

            movsd XMM3,QWORD PTR [RSP+64]
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            ja .L_431535

            movsd XMM0,QWORD PTR [RSP+72]
            subsd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            jbe .L_43160f
.L_431535:

            add R14D,1
            cmp R14D,21
            jne .L_431060
.L_431543:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,104
.L_431552:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431560:

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            je .L_4315d0

            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+88]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM7
            call cos@PLT

            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_43142a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4315c0:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_4314c8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4315d0:

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_43142a
.L_4315f8:

            pxor XMM0,XMM0
            add RSP,104
.L_431600:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43160f:

            cmp EBX,10
            jne .L_431543

            cmp R14D,20
            jne .L_431543

            mov RDI,QWORD PTR [R15]
            mov ESI,4294967243
            call .L_404200

            jmp .L_431543
.L_431634:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431640:

            push RBX
.L_431641:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431690

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+8],0
            lea RAX,QWORD PTR [RIP+.L_430f80]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_430e60]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_431688:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431690:

            mov RDI,RBX
            pop RBX
            jmp .L_430e20
.L_431699:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4316a0:

            test RDI,RDI
            je .L_4316b0

            jmp .L_431640
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4316b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4316de

            lea RDX,QWORD PTR [RIP+.L_430e50]
            lea RCX,QWORD PTR [RIP+.L_44ad70]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4316de:

            add RSP,8
            ret 
.L_4316e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4316f0:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_431703:

            call .L_403740

            test RAX,RAX
            je .L_4317b1

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44a1f8]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+8],1
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            jne .L_431770

            mov RAX,QWORD PTR [RIP+.L_44ad88]
            mov QWORD PTR [RBP],RAX
.L_431741:

            lea RAX,QWORD PTR [RIP+.L_430f80]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_430e60]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_431766:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431770:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            movsd QWORD PTR [RBP],XMM0
            jp .L_431741

            jne .L_431741

            mov ESI,4294967274
            mov RDI,RBX
            call .L_413c90
.L_4317b1:

            add RSP,24
.L_4317b5:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_430e20
.L_4317bf:

            nop
.L_4317c0:

            test RDI,RDI
            je .L_4317d0

            jmp .L_4316f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4317d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4317fe

            lea RDX,QWORD PTR [RIP+.L_430e50]
            lea RCX,QWORD PTR [RIP+.L_44ad50]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4317fe:

            add RSP,8
            ret 
.L_431803:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431810:

            xor EAX,EAX
            ret 
.L_431813:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431820:

            xor EAX,EAX
            ret 
.L_431823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431830:

            jmp .L_403770
.L_431835:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431840:

            sub RSP,56
.L_431844:

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM1
            call tan@PLT

            movapd XMM1,XMM0
            mulsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            pxor XMM3,XMM3
            subsd XMM7,XMM0
            ucomisd XMM3,XMM7
            sqrtsd XMM2,XMM7
            ja .L_43192f
.L_431881:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            movapd XMM3,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_447a90]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM2,XMM0
            divsd XMM3,XMM0
            movapd XMM4,XMM2
            mulsd XMM4,XMM2
            movapd XMM6,XMM3
            movapd XMM0,XMM4
            mulsd XMM4,XMM5
            mulsd XMM6,XMM3
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            movapd XMM1,XMM6
            mulsd XMM1,XMM5
            subsd XMM4,XMM6
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44adc8]
            add RSP,56
.L_43191e:

            mulsd XMM2,XMM1
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            mulsd XMM1,XMM4
            ret 
.L_43192f:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_431881
.L_431955:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431960:

            test RDI,RDI
            je .L_431990

            lea RAX,QWORD PTR [RIP+.L_431840]
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431990:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4319be

            lea RDX,QWORD PTR [RIP+.L_431830]
            lea RCX,QWORD PTR [RIP+.L_44ada0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4319be:

            add RSP,8
            ret 
.L_4319c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4319d0:

            lea RDX,QWORD PTR [RIP+.L_431840]
            mov RAX,RDI
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4319f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a00:

            xor EAX,EAX
            ret 
.L_431a03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a10:

            test RDI,RDI
            je .L_431a38

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_431a2e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_431a2e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431a38:

            xor EAX,EAX
            ret 
.L_431a3b:

            nop
            nop
            nop
            nop
            nop
.L_431a40:

            jmp .L_431a10
.L_431a42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a50:

            push RBX
            movapd XMM5,XMM0
            movapd XMM4,XMM1
            sub RSP,48
.L_431a5d:

            mov RBX,QWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RBX]
            test EDX,EDX
            je .L_431a92

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_447a20]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP]
.L_431a92:

            movapd XMM2,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            jb .L_431b20

            mov EAX,DWORD PTR [RBX+4]
            test EAX,EAX
            je .L_431ac1

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM2,XMM3
            jae .L_431b30
.L_431ac1:

            movsd XMM3,QWORD PTR [RIP+.L_44ae88]
            movapd XMM0,XMM4
            pxor XMM1,XMM1
            divsd XMM3,XMM2
            mulsd XMM0,XMM4
            addsd XMM3,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_4470f8]
            subsd XMM2,XMM3
            mulsd XMM3,XMM3
            subsd XMM3,XMM0
            ucomisd XMM1,XMM3
            sqrtsd XMM6,XMM3
            ja .L_431b60
.L_431afb:

            addsd XMM2,XMM6
            movapd XMM0,XMM2
.L_431b03:

            ucomisd XMM1,XMM5
            jbe .L_431b11

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
.L_431b11:

            add RSP,48
.L_431b15:

            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431b20:

            add RSP,48
            pxor XMM0,XMM0
            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_431b30:

            mulsd XMM1,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_44ae88]
            subsd XMM6,XMM1
            pxor XMM1,XMM1
            addsd XMM0,XMM6
            ucomisd XMM1,XMM0
            sqrtsd XMM6,XMM0
            ja .L_431ba8
.L_431b52:

            addsd XMM2,XMM6
            subsd XMM2,XMM3
            movapd XMM0,XMM2
            jmp .L_431b03
.L_431b60:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_431afb
.L_431ba8:

            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_431b52
.L_431bf8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431c00:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431c40

            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],1
            lea RAX,QWORD PTR [RIP+.L_431a50]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_431c40:

            mov RDI,RBX
            pop RBX
            jmp .L_431a10
.L_431c49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431c50:

            test RDI,RDI
            je .L_431c60

            jmp .L_431c00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431c60:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431c8e

            lea RDX,QWORD PTR [RIP+.L_431a40]
            lea RCX,QWORD PTR [RIP+.L_44ade0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_431c8e:

            add RSP,8
            ret 
.L_431c93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ca0:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431ce0

            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],0
            lea RAX,QWORD PTR [RIP+.L_431a50]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_431ce0:

            mov RDI,RBX
            pop RBX
            jmp .L_431a10
.L_431ce9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431cf0:

            test RDI,RDI
            je .L_431d00

            jmp .L_431ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431d00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431d2e

            lea RDX,QWORD PTR [RIP+.L_431a40]
            lea RCX,QWORD PTR [RIP+.L_44ae60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_431d2e:

            add RSP,8
            ret 
.L_431d33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431d40:

            push RBX
.L_431d41:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431d88

            movabs RDX,4294967296
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_431a50]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_431d83:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431d88:

            mov RDI,RBX
            pop RBX
            jmp .L_431a10
.L_431d91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431da0:

            test RDI,RDI
            je .L_431db0

            jmp .L_431d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431db0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_431dde

            lea RDX,QWORD PTR [RIP+.L_431a40]
            lea RCX,QWORD PTR [RIP+.L_44ae20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_431dde:

            add RSP,8
            ret 
.L_431de3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431df0:

            xor EAX,EAX
            ret 
.L_431df3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e00:

            xor EAX,EAX
            ret 
.L_431e03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e10:

            xor EAX,EAX
            ret 
.L_431e13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e20:

            test RDI,RDI
            je .L_431e48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_431e3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_431e3e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431e48:

            xor EAX,EAX
            ret 
.L_431e4b:

            nop
            nop
            nop
            nop
            nop
.L_431e50:

            jmp .L_431e20
.L_431e52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431e60:

            push RBX
            mov RBX,RDI
            add RSP,-128
.L_431e68:

            movsd QWORD PTR [RSP+48],XMM0
            lea RDI,QWORD PTR [RSP+120]
            lea RSI,QWORD PTR [RSP+112]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+64],XMM5
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movq XMM1,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RSP+112]
            andpd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+120]
            mulsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+80],XMM4
            ja .L_431eff

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM0,XMM5
            andpd XMM0,XMM1
            ucomisd XMM0,XMM3
            jbe .L_431fa0
.L_431eff:

            movsd XMM0,QWORD PTR [RSP+32]
            mov RDI,RBX
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+40]
            movaps XMMWORD PTR [RSP+48],XMM1
            addsd XMM0,XMM2
            call .L_442710

            movapd XMM1,XMMWORD PTR [RSP+48]
            movapd XMM2,XMM0
.L_431f2c:

            andpd XMM1,XMM2
            ucomisd XMM1,QWORD PTR [RIP+.L_44a3f8]
            ja .L_431f50

            pxor XMM2,XMM2
            sub RSP,-128
.L_431f42:

            pxor XMM1,XMM1
            pop RBX
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431f50:

            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM3,XMM6
            movsd QWORD PTR [RSP+48],XMM2
            mulsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM6
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            sub RSP,-128
.L_431f95:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0x90
.L_431fa0:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movaps XMMWORD PTR [RSP+96],XMM1
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+88],XMM5
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM5
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,XMM0
            movapd XMM1,XMMWORD PTR [RSP+96]
            mulsd XMM3,XMM3
            mulsd XMM0,XMM2
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_432033
.L_43200f:

            movapd XMM0,XMM2
            mov RDI,RBX
            movaps XMMWORD PTR [RSP+48],XMM1
            call .L_442670

            movapd XMM2,XMM0
            movapd XMM1,XMMWORD PTR [RSP+48]
            addsd XMM2,XMM0
            jmp .L_431f2c
.L_432033:

            movaps XMMWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movapd XMM1,XMMWORD PTR [RSP+64]
            jmp .L_43200f
.L_432051:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432060:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor R13D,R13D
            sub RSP,152
.L_432077:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM0
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            lea RBX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+56],RSI
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [R12+32]
            movsd XMM6,QWORD PTR [RSP+72]
            mov R15,RBX
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM6
            mov R14,RBP
.L_4320de:

            movsd XMM0,QWORD PTR [RSP+40]
            movsxd RAX,R13D
            movsd XMM5,QWORD PTR [RSP+32]
            mov RCX,RAX
            subsd XMM0,QWORD PTR [R14]
            mov RDI,QWORD PTR [R12]
            shl RCX,4
            subsd XMM5,QWORD PTR [R14+8]
            movsd XMM1,QWORD PTR [R14+16]
            movsd XMM4,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP],RCX
            movsd XMM3,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM2,QWORD PTR [R14+24]
            call .L_431e60

            mov RCX,QWORD PTR [RSP]
            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+RCX*1+80],XMM0
            movsd QWORD PTR [RSP+RCX*1+88],XMM1
            ucomisd XMM6,QWORD PTR [R15]
            jp .L_43214f

            mov RAX,QWORD PTR [RSP+8]
            je .L_4322d8
.L_43214f:

            movsd XMM0,QWORD PTR [R15+8]
            add R13D,1
            add R14,72
            add R15,16
            subsd XMM0,QWORD PTR [R14-32]
            call .L_442820

            movsd QWORD PTR [R15-8],XMM0
            cmp R13D,3
            jne .L_4320de

            movsd XMM7,QWORD PTR [RBP+216]
            xor R14D,R14D
            movsd XMM3,QWORD PTR [RBP+224]
            movsd QWORD PTR [RSP],XMM7
            movsd QWORD PTR [RSP+8],XMM3
.L_43219a:

            lea R13D,DWORD PTR [R14+1]
            cmp R14,2
            mov EAX,0
            movsd XMM1,QWORD PTR [RBX]
            mov R15D,R14D
            cmovne EAX,R13D
            mov RDI,QWORD PTR [R12]
            cdqe 
            movapd XMM4,XMM1
            shl RAX,4
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM3,QWORD PTR [RSP+RAX*1+80]
            lea RAX,QWORD PTR [R14+R14*8]
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RBP+RAX*8+32]
            mulsd XMM3,XMM3
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM2,XMM1
            addsd XMM0,XMM4
            subsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM2
            call .L_442710

            pxor XMM7,XMM7
            movsd XMM1,QWORD PTR [RSP+16]
            ucomisd XMM7,QWORD PTR [RBX+8]
            jbe .L_43221c

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
.L_43221c:

            test R14,R14
            movsd QWORD PTR [RSP+16],XMM1
            je .L_4322f0

            cmp R15D,1
            je .L_432334

            movsd XMM2,QWORD PTR [RBP+248]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            cmp R13D,3
            movsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RSP]
            addsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            je .L_432298
.L_432286:

            add R14,1
            add RBX,16
            jmp .L_43219a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432298:

            movsd XMM1,QWORD PTR [RIP+.L_448f68]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+8]
.L_4322aa:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43238c

            add RSP,152
.L_4322c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4322d8:

            lea RAX,QWORD PTR [RAX+RAX*8]
            lea RAX,QWORD PTR [RBP+RAX*8+48]
            movsd XMM0,QWORD PTR [RAX]
            movsd XMM1,QWORD PTR [RAX+8]
            jmp .L_4322aa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4322f0:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RSP]
            subsd XMM7,XMM1
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_432286
.L_432334:

            movsd XMM2,QWORD PTR [RBP+240]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd XMM7,QWORD PTR [RSP+8]
            subsd XMM6,XMM0
            subsd XMM7,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_432286
.L_43238c:

            call __stack_chk_fail@PLT
.L_432391:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4323a0:

            push R15
            push R14
            mov ESI,256
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_4323bb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_403740

            test RAX,RAX
            je .L_4326dd

            lea R13,QWORD PTR [RSP+46]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            mov R15,RAX
            mov R12,RAX
            xor R14D,R14D
.L_4323ee:

            add R14D,1
            lea RCX,QWORD PTR [RIP+.L_44ae90]
            mov EDX,10
            mov R8D,R14D
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            add R12,72
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_403e60

            lea RCX,QWORD PTR [RIP+.L_44ae98]
            mov R8D,R14D
            mov QWORD PTR [R12-72],RAX
            mov EDX,10
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12-64],XMM0
            subsd XMM0,QWORD PTR [RBX+328]
            call .L_442820

            movsd XMM1,QWORD PTR [R12-72]
            movsd QWORD PTR [R12-64],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12-56],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd QWORD PTR [R12-48],XMM0
            cmp R14D,3
            jne .L_4323ee

            xor R12D,R12D
.L_4324bb:

            cmp R12D,2
            je .L_4326e7

            lea EAX,DWORD PTR [R12+1]
.L_4324ca:

            cdqe 
            movsxd RDX,R12D
            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RAX+RAX*8]
            lea RDX,QWORD PTR [RDX+RDX*8]
            movsd XMM1,QWORD PTR [R15+16]
            lea RAX,QWORD PTR [RBP+RAX*8]
            movsd XMM2,QWORD PTR [R15+24]
            lea R13,QWORD PTR [RBP+RDX*8]
            movsd XMM5,QWORD PTR [RAX+8]
            movsd XMM0,QWORD PTR [RAX]
            subsd XMM5,QWORD PTR [R15+8]
            movsd XMM4,QWORD PTR [RAX+24]
            subsd XMM0,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RAX+16]
            call .L_431e60

            pxor XMM6,XMM6
            movsd QWORD PTR [R13+32],XMM0
            movsd QWORD PTR [R13+40],XMM1
            ucomisd XMM6,QWORD PTR [R15+32]
            jp .L_432531

            je .L_4326d0
.L_432531:

            add R12D,1
            add R15,72
            cmp R12D,3
            jne .L_4324bb

            movsd XMM3,QWORD PTR [RBP+32]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBP+176]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBP+104]
            movapd XMM4,XMM1
            mulsd XMM0,XMM3
            mulsd XMM4,XMM1
            mulsd XMM2,XMM2
            mulsd XMM1,XMM3
            addsd XMM0,XMM4
            subsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM1
            call .L_442710

            movsd XMM3,QWORD PTR [RBP+32]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBP+104]
            movsd QWORD PTR [RBP+232],XMM0
            movapd XMM0,XMM3
            movapd XMM4,XMM1
            mulsd XMM0,XMM3
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RBP+176]
            mulsd XMM1,XMM3
            mulsd XMM2,XMM2
            addsd XMM0,XMM4
            subsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM1
            call .L_442710

            movsd XMM3,QWORD PTR [RBP+232]
            lea RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP+240],XMM0
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_432060]
            movsd XMM2,QWORD PTR [RIP+.L_447a78]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+200],0
            movsd QWORD PTR [RBP+248],XMM2
            movsd XMM2,QWORD PTR [RBP+176]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+128],XMM0
            movsd QWORD PTR [RBP+56],XMM0
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+224],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RBP+32]
            movapd XMM3,XMM0
            movsd QWORD PTR [RBP+120],XMM0
            subsd XMM1,XMM0
            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RBP+192],XMM1
            movsd QWORD PTR [RBP+216],XMM1
            movsd QWORD PTR [RBP+48],XMM3
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            mov QWORD PTR [RBX+176],0
.L_4326aa:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4326ee

            add RSP,72
.L_4326be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4326d0:

            mov ESI,4294967271
            mov RDI,RBX
            call .L_413c90
.L_4326dd:

            mov RDI,RBX
            call .L_431e20

            jmp .L_4326aa
.L_4326e7:

            xor EAX,EAX
            jmp .L_4324ca
.L_4326ee:

            call __stack_chk_fail@PLT
.L_4326f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432700:

            test RDI,RDI
            je .L_432710

            jmp .L_4323a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432710:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43273e

            lea RDX,QWORD PTR [RIP+.L_431e50]
            lea RCX,QWORD PTR [RIP+.L_44aea0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43273e:

            add RSP,8
            ret 
.L_432743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432750:

            xor EAX,EAX
            ret 
.L_432753:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432760:

            test RDI,RDI
            je .L_432788

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43277e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43277e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_432788:

            xor EAX,EAX
            ret 
.L_43278b:

            nop
            nop
            nop
            nop
            nop
.L_432790:

            jmp .L_432760
.L_432792:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4327a0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,40
.L_4327ad:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_448f60]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RBX]
            movapd XMM1,XMM0
            mulsd XMM1,XMM2
            mulsd XMM2,XMM4
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM2,XMM4
            mulsd XMM1,XMM3
            mulsd XMM1,XMM3
            subsd XMM0,XMM1
            pxor XMM1,XMM1
            subsd XMM0,XMM2
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4328b4
.L_432803:

            movapd XMM1,XMM2
            addsd XMM1,XMM2
            mulsd XMM1,XMM2
            subsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_447cd0]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM5,XMM0
            ja .L_432890

            mulsd XMM3,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            call .L_4427e0

            movapd XMM3,XMM0
            mov RDI,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM3,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,XMM4
            movsd QWORD PTR [RSP],XMM3
            movapd XMM0,XMM2
            call .L_442670

            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
.L_43287d:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432890:

            mov RDI,RBP
            mov ESI,4294967282
            call .L_413c90

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            add RSP,40
            pop RBX
            movapd XMM3,XMM1
            pop RBP
            movapd XMM0,XMM3
            ret 
.L_4328b4:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_432803
.L_4328ec:

            nop
            nop
            nop
            nop
.L_4328f0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_4328fb:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+32]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+40]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            mulsd XMM1,XMM4
            movsd XMM3,QWORD PTR [RSP+40]
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,XMM1
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4329ae
.L_432986:

            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM1,XMM2
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM1,QWORD PTR [RSP]
            add RSP,48
.L_43299d:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            pop R12
            mulsd XMM0,XMM4
            mulsd XMM0,XMM3
            ret 
.L_4329ae:

            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_432986
.L_4329d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4329e0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_4329f3:

            call .L_403740

            test RAX,RAX
            je .L_432ad6

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aef3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            jne .L_432a90

            mov RAX,QWORD PTR [RIP+.L_4470f8]
            mov QWORD PTR [RBP],RAX
.L_432a2a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aef9]
            call .L_403e60

            test EAX,EAX
            jne .L_432ae8

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM1
.L_432a51:

            divsd XMM0,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_4328f0]
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+8],XMM0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4327a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_432a85:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432a90:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aef6]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            jb .L_432a2a
.L_432ac9:

            mov ESI,4294967269
            mov RDI,RBX
            call .L_413c90
.L_432ad6:

            add RSP,24
.L_432ada:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_432760
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432ae8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aefc]
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM0
            jae .L_432ac9

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM0
            jmp .L_432a51
.L_432b2e:

            nop
            nop
.L_432b30:

            test RDI,RDI
            je .L_432b40

            jmp .L_4329e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432b40:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_432b6e

            lea RDX,QWORD PTR [RIP+.L_432790]
            lea RCX,QWORD PTR [RIP+.L_44af00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_432b6e:

            add RSP,8
            ret 
.L_432b73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b80:

            xor EAX,EAX
            ret 
.L_432b83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432b90:

            test RDI,RDI
            je .L_432bb8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_432bae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_432bae:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_432bb8:

            xor EAX,EAX
            ret 
.L_432bbb:

            nop
            nop
            nop
            nop
            nop
.L_432bc0:

            jmp .L_432b90
.L_432bc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432bd0:

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM1
            andpd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_447a20]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM2
            jbe .L_432c28

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_432c18

            movsd XMM1,QWORD PTR [RIP+.L_4470e8]
            pxor XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c18:

            movsd XMM1,QWORD PTR [RIP+.L_448f78]
            pxor XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432c28:

            push RBP
.L_432c29:

            push RBX
            mov RBX,RDI
            sub RSP,56
.L_432c31:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM6,XMM0
            movsd XMM5,QWORD PTR [RBP]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            addsd XMM6,XMM4
            movsd XMM1,QWORD PTR [RBP+8]
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM5
            divsd XMM6,XMM7
            movapd XMM0,XMM6
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBP+16]
            divsd XMM4,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM4
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+40]
            addsd XMM2,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            addsd XMM2,QWORD PTR [RSP+32]
            ucomisd XMM3,XMM2
            ja .L_432d10

            addsd XMM0,XMM0
            subsd XMM1,XMM4
            divsd XMM0,XMM2
            divsd XMM1,XMM2
.L_432d03:

            add RSP,56
.L_432d07:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432d10:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_413c90

            pxor XMM0,XMM0
            movapd XMM1,XMM0
            jmp .L_432d03
.L_432d27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432d30:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_432d43:

            call .L_403740

            test RAX,RAX
            je .L_432e5d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44aef6]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            pxor XMM0,XMM0
            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RSP]
            mov ESI,4294967269
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RBP+16],XMM1
            jae .L_432e55

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov RDI,QWORD PTR [RBX]
            movapd XMM4,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM4,XMM1
            movapd XMM1,XMM4
            movsd QWORD PTR [RBP+16],XMM4
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RBP+8],XMM1
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            andpd XMM1,XMM3
            subsd XMM1,XMM2
            andpd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM1
            ja .L_432e50

            movapd XMM1,XMM2
            subsd XMM1,XMM0
            addsd XMM0,XMM2
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBP+8]
            call pow@PLT

            lea RAX,QWORD PTR [RIP+.L_432bd0]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_432e42:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432e50:

            mov ESI,4294967274
.L_432e55:

            mov RDI,RBX
            call .L_413c90
.L_432e5d:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_432b90
.L_432e6b:

            nop
            nop
            nop
            nop
            nop
.L_432e70:

            test RDI,RDI
            je .L_432e80

            jmp .L_432d30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432e80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_432eae

            lea RDX,QWORD PTR [RIP+.L_432bc0]
            lea RCX,QWORD PTR [RIP+.L_44af40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_432eae:

            add RSP,8
            ret 
.L_432eb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ec0:

            xor EAX,EAX
            ret 
.L_432ec3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ed0:

            test RDI,RDI
            je .L_432ee0

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432ee0:

            ret 
.L_432ee2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432ef0:

            sub RSP,56
.L_432ef4:

            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+32],XMM0
            mulsd XMM4,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call cos@PLT

            sqrtsd XMM7,XMM0
            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM0
            ja .L_432f9a
.L_432f35:

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM6,QWORD PTR [RIP+.L_44a6d8]
            movapd XMM0,XMM6
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM0
            divsd XMM1,XMM3
            mulsd XMM2,QWORD PTR [RSP+8]
            add RSP,56
.L_432f95:

            movapd XMM0,XMM2
            ret 
.L_432f9a:

            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_432f35
.L_432fa7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432fb0:

            test RDI,RDI
            je .L_432fd0

            lea RAX,QWORD PTR [RIP+.L_432ef0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_432fd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_432ffe

            lea RDX,QWORD PTR [RIP+.L_432ed0]
            lea RCX,QWORD PTR [RIP+.L_44af60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_432ffe:

            add RSP,8
            ret 
.L_433003:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433010:

            lea RDX,QWORD PTR [RIP+.L_432ef0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43302a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_433030:

            xor EAX,EAX
            ret 
.L_433033:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433040:

            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44afa0]
            movapd XMM4,XMM1
            mulsd XMM5,XMM0
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_44afb0]
            mulsd XMM3,XMM5
            mulsd XMM2,XMM4
            subsd XMM3,QWORD PTR [RIP+.L_44afa8]
            addsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44afc0]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_44afc8]
            addsd XMM3,QWORD PTR [RIP+.L_44afb8]
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44afd0]
            mulsd XMM3,XMM5
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44afe0]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM5
            addsd XMM3,QWORD PTR [RIP+.L_44afe8]
            addsd XMM2,QWORD PTR [RIP+.L_44afd8]
            mulsd XMM3,XMM4
            addsd XMM2,XMM3
            mulsd XMM1,XMM2
            ret 
.L_4330d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4330e0:

            test RDI,RDI
            je .L_433100

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433100:

            ret 
.L_433102:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433110:

            test RDI,RDI
            je .L_433130

            lea RAX,QWORD PTR [RIP+.L_433040]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_433130:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43315e

            lea RDX,QWORD PTR [RIP+.L_4330e0]
            lea RCX,QWORD PTR [RIP+.L_44af80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43315e:

            add RSP,8
            ret 
.L_433163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433170:

            lea RDX,QWORD PTR [RIP+.L_433040]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43318a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_433190:

            xor EAX,EAX
            ret 
.L_433193:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4331a0:

            test RDI,RDI
            je .L_4331b0

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4331b0:

            ret 
.L_4331b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4331c0:

            movq XMM7,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            movapd XMM4,XMM1
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_433250

            movapd XMM8,XMM1
            movapd XMM5,XMM0
            andpd XMM8,XMM7
            ucomisd XMM6,XMM8
            ja .L_433240

            sub RSP,120
.L_4331fb:

            movsd XMM9,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP],XMM0
            subsd XMM2,XMM9
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_433260

            subsd XMM8,XMM9
            pxor XMM5,XMM5
            andpd XMM7,XMM8
            ucomisd XMM6,XMM7
            jbe .L_4332c0
.L_433230:

            movapd XMM0,XMM5
            movapd XMM1,XMM4
            add RSP,120
.L_43323c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433240:

            pxor XMM4,XMM4
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433250:

            pxor XMM5,XMM5
            movapd XMM1,XMM4
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433260:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM5,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM5
            call sin@PLT

            movsd XMM9,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM5,QWORD PTR [RSP]
            add RSP,120

            mulsd XMM4,XMM9
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4332c0:

            movsd QWORD PTR [RSP+24],XMM0
            lea RDI,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+96]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM11,XMM9
            movapd XMM2,XMM3
            movapd XMM4,XMM1
            divsd XMM11,XMM3
            divsd XMM4,XMM9
            divsd XMM2,XMM9
            movsd XMM12,QWORD PTR [RIP+.L_4470f0]
            movsd XMM7,QWORD PTR [RSP+104]
            movapd XMM10,XMM12
            movsd XMM13,QWORD PTR [RIP+.L_4470f8]
            subsd XMM11,XMM2
            movapd XMM2,XMM4
            movapd XMM6,XMM7
            mulsd XMM2,XMM4
            subsd XMM6,XMM4
            movsd XMM0,QWORD PTR [RSP+96]
            movapd XMM8,XMM11
            movapd XMM4,XMM7
            mulsd XMM0,XMM0
            subsd XMM10,XMM2
            divsd XMM10,XMM6
            movapd XMM6,XMM11
            mulsd XMM6,XMM7
            mulsd XMM11,XMM13
            divsd XMM8,XMM10
            divsd XMM6,XMM10
            mulsd XMM8,XMM8
            mulsd XMM13,XMM10
            subsd XMM6,XMM11
            movapd XMM11,XMM12
            movapd XMM2,XMM8
            divsd XMM4,XMM8
            addsd XMM2,XMM12
            divsd XMM6,XMM2
            addsd XMM13,XMM4
            movapd XMM4,XMM13
            divsd XMM0,XMM2
            movapd XMM2,XMM6
            divsd XMM11,XMM8
            mulsd XMM2,XMM6
            pxor XMM13,XMM13
            addsd XMM11,XMM12
            addsd XMM0,XMM2
            divsd XMM4,XMM11
            ucomisd XMM13,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4334ab
.L_4333e4:

            ucomisd XMM13,XMM3
            ja .L_433450
.L_4333eb:

            movapd XMM5,XMM2
            movapd XMM2,XMM7
            movapd XMM0,XMM4
            addsd XMM5,XMM6
            mulsd XMM2,XMM7
            mulsd XMM7,XMM10
            mulsd XMM0,XMM4
            mulsd XMM5,XMM9
            divsd XMM2,XMM8
            addsd XMM2,XMM7
            subsd XMM2,XMM12
            divsd XMM2,XMM11
            subsd XMM0,XMM2
            ucomisd XMM13,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43345a
.L_43342f:

            ucomisd XMM13,XMM1
            ja .L_43343e

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_43343e:

            addsd XMM4,XMM2
            mulsd XMM4,XMM9
            jmp .L_433230
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433450:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_4333eb
.L_43345a:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM13
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM13,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43342f
.L_4334ab:

            movsd QWORD PTR [RSP+88],XMM1
            movsd QWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+72],XMM12
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM13
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM10
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM11
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM12,QWORD PTR [RSP+72]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM13,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM10,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM11,QWORD PTR [RSP]
            jmp .L_4333e4
.L_43354f:

            nop
.L_433550:

            test RDI,RDI
            je .L_433570

            lea RAX,QWORD PTR [RIP+.L_4331c0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_433570:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43359e

            lea RDX,QWORD PTR [RIP+.L_4331a0]
            lea RCX,QWORD PTR [RIP+.L_44b000]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43359e:

            add RSP,8
            ret 
.L_4335a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4335b0:

            lea RDX,QWORD PTR [RIP+.L_4331c0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4335ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4335d0:

            xor EAX,EAX
            ret 
.L_4335d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4335e0:

            test RDI,RDI
            je .L_433618

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_433610

            push RBX
            mov RDX,QWORD PTR [RAX]
            mov RBX,RDI
            test RDX,RDX
            je .L_433604

            mov RDI,RDX
            call QWORD PTR [RDX+112]

            mov RAX,QWORD PTR [RBX+32]
.L_433604:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_433610:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433618:

            xor EAX,EAX
            ret 
.L_43361b:

            nop
            nop
            nop
            nop
            nop
.L_433620:

            jmp .L_4335e0
.L_433622:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433630:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_43363d:

            mov RBP,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RBP]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movapd XMM2,XMM0
            ja .L_433701

            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,R12
            subsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+40]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_4427e0

            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            call .L_442670

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
.L_433701:

            add RSP,56
.L_433705:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_433710:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43371d:

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RBX]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            movapd XMM2,XMM0
            movapd XMM3,XMM1
            ja .L_433817

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM4,QWORD PTR [RSP+48]
            mov RDI,R12
            subsd XMM2,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RBX+24]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+24],XMM6
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            call .L_442670

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM4
            mulsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBX+16]
            subsd XMM1,XMM2
            call .L_4427e0

            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM0
.L_433817:

            add RSP,72
.L_43381b:

            movapd XMM0,XMM2
            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_43382a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_433830:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_43383b:

            lea RBX,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM3
            call .L_4427e0

            addsd XMM0,QWORD PTR [RBX+8]
            call .L_442820

            movsd XMM2,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP+16],XMM0
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            call .L_442670

            mov RDI,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            mov RAX,QWORD PTR [RDI+40]
            add RSP,48
.L_4338f6:

            pop RBX
            pop RBP
            pop R12
            jmp RAX
.L_4338fc:

            nop
            nop
            nop
            nop
.L_433900:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_43390b:

            lea RBX,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM6,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM5,XMM3
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            mulsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM4,XMM2
            mulsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM4
            addsd XMM1,XMM5
            call .L_4427e0

            addsd XMM0,QWORD PTR [RBX+8]
            call .L_442820

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM3,QWORD PTR [RBX+24]
            mulsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            call .L_442670

            mov RDI,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM4
            mov RAX,QWORD PTR [RDI+40]
            add RSP,48
.L_4339f1:

            pop RBX
            pop RBP
            pop R12
            jmp RAX
.L_4339f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433a00:

            push R15
            push R14
            mov ESI,32
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,120
.L_433a1b:

            call .L_403740

            test RAX,RAX
            je .L_433d53

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b025]
            mov QWORD PTR [RBX+32],RAX
            mov R13,RAX
            call .L_403e60

            test RAX,RAX
            mov R14,RAX
            mov ESI,4294967270
            je .L_433d4b

            lea RDI,QWORD PTR [RIP+.L_44734b]
            mov RSI,RAX
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_433d70

            mov RSI,QWORD PTR [RIP+.L_65bbe0]
            test RSI,RSI
            je .L_433d70

            lea RBP,QWORD PTR [RIP+.L_65bbf8]
            xor R12D,R12D
            jmp .L_433aa5
          .byte 0x66
          .byte 0x90
.L_433a90:

            add RBP,24
            mov RSI,QWORD PTR [RBP-24]
            add R12D,1
            test RSI,RSI
            je .L_433d70
.L_433aa5:

            mov RDI,R14
            call strcmp@PLT

            test EAX,EAX
            jne .L_433a90

            movsxd R12,R12D
            lea RAX,QWORD PTR [RIP+.L_65bbe0]
            xor EDI,EDI
            lea RDX,QWORD PTR [R12+R12*2]
            lea RBP,QWORD PTR [RAX+RDX*8]
            call QWORD PTR [RBP+8]

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            je .L_433d70

            mov RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+176],0
            mov RDI,RAX
            movsd XMM0,QWORD PTR [RBX+128]
            mov QWORD PTR [RAX+16],RDX
            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX],RDX
            mov EDX,DWORD PTR [RBX+304]
            mov DWORD PTR [RAX+304],EDX
            mov EDX,DWORD PTR [RBX+308]
            movsd QWORD PTR [RAX+128],XMM0
            movsd XMM0,QWORD PTR [RBX+144]
            mov QWORD PTR [RAX+176],0
            movsd QWORD PTR [RAX+144],XMM0
            mov DWORD PTR [RAX+308],EDX
            movsd XMM0,QWORD PTR [RBX+328]
            movsd QWORD PTR [RAX+328],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RAX+336],XMM0
            movsd XMM0,QWORD PTR [RBX+344]
            movsd QWORD PTR [RAX+344],XMM0
            movsd XMM0,QWORD PTR [RBX+352]
            movsd QWORD PTR [RAX+352],XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mov QWORD PTR [RAX+168],0
            movsd QWORD PTR [RAX+360],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RAX+224],XMM0
            movsd QWORD PTR [RAX+216],XMM0
            call QWORD PTR [RBP+8]

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            je .L_433d53

            cmp QWORD PTR [RAX+40],0
            je .L_433d53

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b02d]
            call .L_403e60

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            jne .L_433d80

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b051]
            call .L_403e60

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            je .L_433cb0

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b05a]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b063]
            mov QWORD PTR [R13+8],RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
.L_433c3d:

            andpd XMM2,XMM0
            mov RAX,QWORD PTR [R13]
            ucomisd XMM2,XMM3
            mov RBP,QWORD PTR [RAX+48]
            jbe .L_433eb0

            lea RDI,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+96]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RIP+.L_433900]
            movsd XMM1,QWORD PTR [RSP+96]
            test RBP,RBP
            movsd QWORD PTR [R13+24],XMM0
            movsd QWORD PTR [R13+16],XMM1
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_433710]
            cmovne RBP,RAX
            mov QWORD PTR [RBX+48],RBP
.L_433c97:

            add RSP,120
.L_433c9b:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433cb0:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b06c]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b075]
            mov RBP,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_44b07e]
            mov RDI,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_44b087]
            mov R12,RAX
            mov RDI,QWORD PTR [RBX]
            call .L_403e60

            movsd XMM4,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            movq XMM2,QWORD PTR [RIP+.L_447130]
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            subsd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jb .L_433ed8
.L_433d46:

            mov ESI,4294967264
.L_433d4b:

            mov RDI,RBX
            call .L_413c90
.L_433d53:

            add RSP,120
.L_433d57:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4335e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433d70:

            mov ESI,4294967259
            mov RDI,RBX
            call .L_413c90

            jmp .L_433d53
          .byte 0x90
.L_433d80:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b036]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b03f]
            mov QWORD PTR [RSP+16],RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b048]
            mov QWORD PTR [RSP+8],RAX
            call .L_403e60

            movsd XMM0,QWORD PTR [RSP+8]
            mov R14,RAX
            movq XMM2,QWORD PTR [RIP+.L_447130]
            mov ESI,4294967263
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            andpd XMM1,XMM2
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM1,XMM2
            ucomisd XMM3,XMM1
            jae .L_433d4b

            lea RBP,QWORD PTR [RSP+104]
            lea R12,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+56],XMM3
            movaps XMMWORD PTR [RSP+32],XMM2
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+48],R14
            movsd XMM7,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+104]
            movq XMM5,QWORD PTR [RIP+.L_447ae0]
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+48],XMM4
            xorpd XMM1,XMM5
            xorpd XMM0,XMM5
            mulsd XMM1,QWORD PTR [RSP+24]
            call .L_4427e0

            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [R13+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            call .L_442670

            movapd XMM2,XMMWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+56]
            jmp .L_433c3d
          .byte 0x90
.L_433eb0:

            lea RAX,QWORD PTR [RIP+.L_433830]
            test RBP,RBP
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_433630]
            cmovne RBP,RAX
            mov QWORD PTR [RBX+48],RBP
            jmp .L_433c97
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433ed8:

            movapd XMM0,XMM4
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_433d46

            movsd XMM5,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,XMM5
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_433d46

            movapd XMM0,XMM1
            andpd XMM0,XMM2
            subsd XMM0,XMM5
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_433d46

            lea R14,QWORD PTR [RSP+104]
            lea R15,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],RBP
            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,R15
            mov RDI,R14
            movsd QWORD PTR [RSP+88],XMM3
            movaps XMMWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+48],XMM1
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+96]
            mov RSI,R15
            mov QWORD PTR [RSP+16],R12
            mov RDI,R14
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+80],XMM6
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            mov RSI,R15
            movsd XMM7,QWORD PTR [RSP+104]
            mov RDI,R14
            movsd XMM5,QWORD PTR [RSP+96]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            mov RSI,R15
            movsd XMM5,QWORD PTR [RSP+96]
            mov RDI,R14
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+48],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+96]
            mulsd XMM5,QWORD PTR [RSP+104]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+80]
            movapd XMM0,XMM1
            mulsd XMM7,XMM5
            mulsd XMM6,XMM0
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+8]
            movapd XMM1,XMM7
            subsd XMM1,XMM6
            subsd XMM0,XMM5
            call atan2@PLT

            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [R13+8],XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            subsd XMM0,XMM6
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+88]
            movapd XMM2,XMMWORD PTR [RSP+64]
            jmp .L_433c3d
.L_434085:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434090:

            test RDI,RDI
            je .L_4340a0

            jmp .L_433a00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4340a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4340ce

            lea RDX,QWORD PTR [RIP+.L_433620]
            lea RCX,QWORD PTR [RIP+.L_44b0a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4340ce:

            add RSP,8
            ret 
.L_4340d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4340e0:

            xor EAX,EAX
            ret 
.L_4340e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4340f0:

            test RDI,RDI
            je .L_434118

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43410e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43410e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_434118:

            xor EAX,EAX
            ret 
.L_43411b:

            nop
            nop
            nop
            nop
            nop
.L_434120:

            jmp .L_4340f0
.L_434122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434130:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43413d:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+32],XMM0
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RBX+48]
            movsd XMM5,QWORD PTR [RBX+64]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call .L_442670

            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RBX+56]
            mulsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RBP]
            mulsd XMM3,QWORD PTR [RBX+40]
            mulsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RSP+48]
            call .L_442670

            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RBX+24]
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            addsd XMM2,XMM2
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM2,QWORD PTR [RSP+48]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call .L_4427e0

            subsd XMM0,QWORD PTR [RBX]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM5
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov RDI,QWORD PTR [RBP]
            call .L_442670

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM6,XMM3
            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM6,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM2,QWORD PTR [RBX+80]
            mulsd XMM0,XMM6
            addsd XMM0,XMM2
            call .L_442670

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            subsd XMM1,XMM2
            call .L_4427e0

            movsd XMM4,QWORD PTR [RSP+8]
            add RSP,72
.L_434321:

            pop RBX
            movapd XMM1,XMM4
            pop RBP
            pop R12
            pop R13
            ret 
.L_43432c:

            nop
            nop
            nop
            nop
.L_434330:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_43433d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM6,QWORD PTR [RSP+48]
            mov RDI,RBP
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RBX+80]
            movapd XMM1,XMM3
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM5,XMM2
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+32],XMM2
            mulsd XMM4,XMM2
            mulsd XMM5,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            subsd XMM1,XMM5
            call .L_4427e0

            addsd XMM0,QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [R13]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM2,QWORD PTR [RBX+72]
            mulsd XMM3,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            addsd XMM0,XMM3
            call .L_442710

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [R13]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM4,XMM0
            movapd XMM0,XMM4
            call .L_442670

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM7,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            mulsd XMM7,QWORD PTR [RBX+24]
            movapd XMM0,XMM7
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [R13]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_442670

            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM0,QWORD PTR [RBX+32]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM2,QWORD PTR [RBX+24]
            mulsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+48]
            add RSP,72
.L_43450f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_434516:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434520:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_434533:

            call .L_403740

            test RAX,RAX
            je .L_43467d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b156]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            pxor XMM4,XMM4
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM4,XMM0
            movsd QWORD PTR [RBP+16],XMM0
            jae .L_434670

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4475cd]
            call .L_403e60

            pxor XMM5,XMM5
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RBP+8],XMM0
            jae .L_434670

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b159]
            call .L_403e60

            movsd XMM0,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBP],RAX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_434330]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+72],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RBP+80],XMM1
            movapd XMM1,XMM0
            divsd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBP+16]
            divsd XMM1,XMM2
            movsd QWORD PTR [RBP+40],XMM0
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBP+48],XMM1
            mulsd XMM2,XMM0
            addsd XMM1,XMM1
            movsd QWORD PTR [RBP+56],XMM3
            movsd QWORD PTR [RBP+32],XMM1
            movsd QWORD PTR [RBP+64],XMM2
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_434130]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            add RSP,40
.L_434667:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434670:

            mov ESI,4294967257
            mov RDI,RBX
            call .L_413c90
.L_43467d:

            add RSP,40
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4340f0
.L_43468b:

            nop
            nop
            nop
            nop
            nop
.L_434690:

            test RDI,RDI
            je .L_4346a0

            jmp .L_434520
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4346a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4346ce

            lea RDX,QWORD PTR [RIP+.L_434120]
            lea RCX,QWORD PTR [RIP+.L_44b160]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4346ce:

            add RSP,8
            ret 
.L_4346d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4346e0:

            xor EAX,EAX
            ret 
.L_4346e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4346f0:

            test RDI,RDI
            je .L_434718

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43470e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43470e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_434718:

            xor EAX,EAX
            ret 
.L_43471b:

            nop
            nop
            nop
            nop
            nop
.L_434720:

            jmp .L_4346f0
.L_434722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434730:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43473d:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+48]
            mov RSI,R13
            movsd XMM7,QWORD PTR [RSP+56]
            mov RDI,R12
            addsd XMM6,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            movapd XMM0,XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX]
            mulsd XMM1,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,XMM1
            call .L_442710

            movsd XMM6,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd QWORD PTR [RSP+24],XMM0
            mov RDI,R12
            subsd XMM6,QWORD PTR [RBX+72]
            movapd XMM0,XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM1,QWORD PTR [RBX+24]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,XMM1
            call .L_442710

            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM5,XMM0
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM4,XMM4
            mulsd XMM5,XMM0
            movapd XMM7,XMM1
            movsd XMM2,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+24],XMM1
            subsd XMM4,XMM5
            mulsd XMM7,XMM4
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM7,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_447a88]
            subsd XMM7,XMM4
            movapd XMM4,XMM7
            movapd XMM0,XMM2
            mulsd XMM4,XMM7
            mulsd XMM0,XMM5
            subsd XMM0,XMM4
            call .L_4427a0

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            mulsd XMM3,QWORD PTR [RBX+40]
            mulsd XMM6,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RBX+32]
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            subsd XMM3,XMM6
            movsd XMM7,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            subsd XMM2,XMM3
            ucomisd XMM0,XMM2
            jbe .L_4348c5

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_4348c5:

            add RSP,72
.L_4348c9:

            movapd XMM0,XMM7
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4348d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4348e0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM7,XMM1
            sub RSP,72
.L_4348f1:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            addsd XMM1,QWORD PTR [RBX+80]
            call hypot@PLT

            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            subsd XMM3,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM1,XMM3
            call hypot@PLT

            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM2
            subsd XMM2,XMM0
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,QWORD PTR [RBX+88]
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            mulsd XMM3,QWORD PTR [RBX+88]
            xorpd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            movaps XMMWORD PTR [RSP],XMM4
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RBX+96]
            mov RDI,QWORD PTR [RBP]
            call .L_442710

            pxor XMM1,XMM1
            movapd XMM4,XMMWORD PTR [RSP]
            ucomisd XMM1,QWORD PTR [RSP+16]
            jbe .L_4349c2

            xorpd XMM0,XMM4
.L_4349c2:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            mov RDI,R12
            mov RSI,R13
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            subsd XMM0,QWORD PTR [RBX+120]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBX+104]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RBX+112]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            call .L_442670

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM5
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            mulsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RBX+104]
            subsd XMM1,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RBX+128]
            add RSP,72
.L_434a90:

            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_434a9b:

            nop
            nop
            nop
            nop
            nop
.L_434aa0:

            push R13
            push R12
            mov ESI,136
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,88
.L_434ab7:

            call .L_403740

            test RAX,RAX
            je .L_434b8e

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_44a20d]
            mov RDI,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM2
            call .L_403e60

            mov RSI,QWORD PTR [RBP+16]
            lea RDX,QWORD PTR [RIP+.L_449d9d]
            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RAX
            call .L_403e60

            mov RSI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+16],RAX
            lea RDX,QWORD PTR [RIP+.L_44aa14]
            mov RDI,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            call .L_403e60

            movsd XMM0,QWORD PTR [RSP+24]
            mov EDX,0
            movsd XMM2,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            movsd XMM1,QWORD PTR [RSP+16]
            ucomisd XMM2,XMM0
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_434ba0

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM1
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_434ba0

            mov ESI,4294967271
            mov RDI,RBP
            call .L_413c90
.L_434b8e:

            add RSP,88
.L_434b92:

            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4346f0
.L_434ba0:

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+64]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+64]
            addsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call .L_442820

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+328],XMM0
            subsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            call .L_442820

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+72],XMM6
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX],XMM3
            mulsd XMM3,XMM5
            movsd QWORD PTR [RBX+24],XMM4
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+40],XMM6
            movapd XMM6,XMM5
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX+8],XMM2
            mulsd XMM6,XMM2
            mulsd XMM3,XMM0
            mulsd XMM2,XMM4
            movsd QWORD PTR [RBX+32],XMM1
            movsd QWORD PTR [RBX+48],XMM6
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            call .L_442710

            movsd QWORD PTR [RBX+64],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R13
            movsd XMM2,QWORD PTR [RBX+16]
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RBX+80],XMM0
            movsd XMM0,QWORD PTR [RBX+72]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RBX+24]
            mulsd XMM2,QWORD PTR [RSP+72]
            mulsd XMM3,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            subsd XMM1,XMM3
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RBP]
            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM0,QWORD PTR [RBX]
            call .L_442670

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBX+112],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+104],XMM1
            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBX+8]
            call atan2@PLT

            subsd XMM0,QWORD PTR [RBX+80]
            call .L_442820

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+120],XMM0
            mulsd XMM4,QWORD PTR [RBX+72]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+72],XMM4
            call atan2@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+80]
            subsd XMM0,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RBX+128],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+88],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM5,QWORD PTR [RIP+.L_4470f8]
            lea RAX,QWORD PTR [RIP+.L_4348e0]
            movsd XMM1,QWORD PTR [RBX+64]
            divsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+96],XMM5
            mulsd XMM1,XMM1
            movsd QWORD PTR [RBX+56],XMM0
            movsd QWORD PTR [RBX+64],XMM1
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_434730]
            mov QWORD PTR [RBP+176],0
            mov QWORD PTR [RBP+40],RAX
            add RSP,88
.L_434e75:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_434e7f:

            nop
.L_434e80:

            test RDI,RDI
            je .L_434e90

            jmp .L_434aa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434e90:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_434ebe

            lea RDX,QWORD PTR [RIP+.L_434720]
            lea RCX,QWORD PTR [RIP+.L_44b1a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_434ebe:

            add RSP,8
            ret 
.L_434ec3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434ed0:

            xor EAX,EAX
            ret 
.L_434ed3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434ee0:

            test RDI,RDI
            je .L_434ef0

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434ef0:

            ret 
.L_434ef2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434f00:

            movapd XMM2,XMM1
            sub RSP,104
.L_434f08:

            movq XMM5,QWORD PTR [RIP+.L_447130]
            divsd XMM2,QWORD PTR [RIP+.L_447a20]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            andpd XMM2,XMM5
            movapd XMM0,XMM2
            subsd XMM0,XMM3
            ucomisd XMM0,XMM4
            ja .L_435140

            movapd XMM7,XMM4
            movapd XMM0,XMM6
            minsd XMM7,XMM2
            movapd XMM2,XMM7
            movapd XMM7,XMM1
            andpd XMM7,XMM5
            ucomisd XMM3,XMM7
            jb .L_434f70

            pxor XMM3,XMM3
.L_434f64:

            movapd XMM1,XMM3
.L_434f68:

            add RSP,104
.L_434f6c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434f70:

            andpd XMM0,XMM5
            ucomisd XMM3,XMM0
            jae .L_4350f0

            movapd XMM0,XMM2
            subsd XMM0,XMM4
            andpd XMM0,XMM5
            ucomisd XMM3,XMM0
            ja .L_4350f0

            movsd XMM10,QWORD PTR [RIP+.L_447a78]
            movapd XMM0,XMM6
            movapd XMM3,XMM4
            movapd XMM7,XMM10
            divsd XMM0,XMM10
            divsd XMM7,XMM6
            subsd XMM7,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            andpd XMM7,XMM5
            subsd XMM3,XMM0
            mulsd XMM7,QWORD PTR [RIP+.L_4470f8]
            movapd XMM0,XMM3
            sqrtsd XMM8,XMM3
            pxor XMM3,XMM3
            movapd XMM11,XMM7
            ucomisd XMM3,XMM0
            mulsd XMM11,XMM7
            ja .L_43523e
.L_434ff0:

            movapd XMM0,XMM2
            movsd XMM9,QWORD PTR [RIP+.L_4470e8]
            movapd XMM12,XMM11
            addsd XMM0,XMM8
            divsd XMM9,XMM2
            subsd XMM0,XMM4
            divsd XMM8,XMM0
            subsd XMM9,XMM4
            mulsd XMM9,XMM8
            movapd XMM0,XMM8
            mulsd XMM8,XMM8
            mulsd XMM9,XMM9
            subsd XMM0,XMM9
            addsd XMM12,XMM9
            subsd XMM8,XMM9
            mulsd XMM11,XMM0
            movapd XMM2,XMM0
            mulsd XMM8,XMM12
            mulsd XMM2,XMM7
            mulsd XMM11,XMM0
            subsd XMM11,XMM8
            ucomisd XMM3,XMM11
            sqrtsd XMM8,XMM11
            ja .L_4351aa
.L_435069:

            addsd XMM2,XMM8
            ucomisd XMM3,XMM6
            mulsd XMM2,XMM10
            divsd XMM2,XMM12
            ja .L_435160
.L_435082:

            movapd XMM0,XMM2
            addsd XMM7,XMM7
            divsd XMM0,XMM10
            andpd XMM0,XMM5
            movapd XMM5,XMM7
            addsd XMM5,XMM0
            mulsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4499b8]
            subsd XMM4,XMM5
            ucomisd XMM0,XMM4
            ja .L_435170

            ucomisd XMM3,XMM4
            movapd XMM0,XMM2
            ja .L_434f64

            sqrtsd XMM5,XMM4
            ja .L_4352cd
.L_4350cd:

            ucomisd XMM3,XMM1
            ja .L_43519d

            movapd XMM1,XMM10
.L_4350dc:

            mulsd XMM5,XMM1
            movapd XMM0,XMM2
            movapd XMM3,XMM5
            jmp .L_434f64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4350f0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call asin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_447a78]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            jbe .L_434f64

            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_434f64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435140:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,104
.L_435152:

            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435160:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_435082
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435170:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            movapd XMM1,XMM4
            jmp .L_434f68
.L_43519d:

            movsd XMM1,QWORD PTR [RIP+.L_447a60]
            jmp .L_4350dc
.L_4351aa:

            movapd XMM0,XMM11
            movsd QWORD PTR [RSP+72],XMM3
            movaps XMMWORD PTR [RSP+80],XMM5
            mov QWORD PTR [RSP+48],RDI
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM12
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM8
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM12,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_435069
.L_43523e:

            movaps XMMWORD PTR [RSP+80],XMM5
            mov QWORD PTR [RSP+48],RDI
            movsd QWORD PTR [RSP+72],XMM3
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM11
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM11,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_434ff0
.L_4352cd:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM10,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_4350cd
.L_435317:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435320:

            movapd XMM6,XMM0
            sub RSP,168
.L_43532b:

            movapd XMM7,XMM0
            mulsd XMM6,XMM0
            movapd XMM0,XMM1
            movq XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM9,QWORD PTR [RIP+.L_447cd0]
            andpd XMM0,XMM5
            ucomisd XMM9,XMM0
            jbe .L_4353c0

            andpd XMM5,XMM7
            pxor XMM0,XMM0
            ucomisd XMM9,XMM5
            jb .L_435370
.L_435362:

            pxor XMM1,XMM1
            add RSP,168
.L_43536d:

            ret 
          .byte 0x66
          .byte 0x90
.L_435370:

            movsd XMM1,QWORD PTR [RIP+.L_44b210]
            movapd XMM2,XMM6
            addsd XMM1,XMM6
            mulsd XMM2,XMM6
            subsd XMM6,QWORD PTR [RIP+.L_44b220]
            mulsd XMM1,QWORD PTR [RIP+.L_44b218]
            addsd XMM1,XMM2
            ucomisd XMM0,XMM1
            sqrtsd XMM2,XMM1
            ja .L_4357c9
.L_4353a6:

            addsd XMM6,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM6
            divsd XMM0,XMM7
            jmp .L_435362
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4353c0:

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            movsd XMM14,QWORD PTR [RIP+.L_447a78]
            movapd XMM13,XMM1
            addsd XMM3,XMM0
            movapd XMM12,XMM6
            mulsd XMM13,XMM1
            movsd XMM10,QWORD PTR [RIP+.L_447a60]
            movsd XMM2,QWORD PTR [RIP+.L_44b220]
            mulsd XMM3,XMM14
            addsd XMM12,XMM13
            mulsd XMM10,XMM0
            movsd XMM15,QWORD PTR [RIP+.L_448f68]
            addsd XMM3,XMM13
            mulsd XMM0,XMM12
            movapd XMM8,XMM12
            addsd XMM2,XMM12
            movapd XMM4,XMM12
            mulsd XMM3,XMM14
            mulsd XMM4,XMM12
            mulsd XMM10,XMM2
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM0,XMM13
            movapd XMM11,XMM10
            mulsd XMM3,QWORD PTR [RIP+.L_448430]
            subsd XMM8,XMM0
            mulsd XMM8,QWORD PTR [RIP+.L_44b220]
            addsd XMM3,XMM4
            movapd XMM4,XMM1
            mulsd XMM4,XMM14
            divsd XMM11,XMM3
            addsd XMM8,XMM10
            divsd XMM8,XMM3
            mulsd XMM15,XMM8
            movapd XMM0,XMM15
            mulsd XMM0,XMM8
            subsd XMM11,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44b228]
            mulsd XMM0,XMM11
            sqrtsd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM2
            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_4356ec
.L_4354bc:

            mulsd XMM4,XMM4
            mulsd XMM10,XMM15
            movsd XMM0,QWORD PTR [RIP+.L_44b230]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM8
            subsd XMM4,XMM10
            addsd XMM2,XMM2
            mulsd XMM0,XMM8
            divsd XMM4,XMM3
            mulsd XMM8,XMM0
            mulsd XMM11,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM4,XMM8
            mulsd XMM4,QWORD PTR [RIP+.L_447a90]
            divsd XMM4,XMM11
            movapd XMM3,XMM4
            andpd XMM3,XMM5
            movapd XMM8,XMM3
            subsd XMM8,XMM9
            ucomisd XMM0,XMM8
            jb .L_4355d8

            ucomisd XMM3,XMM0
            jbe .L_435648

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_44b208]
            ucomisd XMM4,XMM3
            ja .L_43554f

            movsd XMM0,QWORD PTR [RIP+.L_44b200]
.L_43554f:

            mulsd XMM2,XMM0
            pxor XMM3,XMM3
            subsd XMM2,XMM15
            ucomisd XMM3,XMM1
            mulsd XMM2,XMM14
            jbe .L_43556f

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_43556f:

            andpd XMM5,XMM7
            pxor XMM0,XMM0
            ucomisd XMM9,XMM5
            jae .L_4355c5

            subsd XMM6,XMM13
            movsd XMM0,QWORD PTR [RIP+.L_44b210]
            pxor XMM1,XMM1
            subsd XMM12,QWORD PTR [RIP+.L_44b220]
            addsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RIP+.L_44b218]
            addsd XMM0,QWORD PTR [RSP+16]
            ucomisd XMM1,XMM0
            jb .L_4355f8
.L_4355b0:

            movapd XMM0,XMM12
            addsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM7
.L_4355c5:

            movapd XMM1,XMM2
            add RSP,168
.L_4355d0:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4355d8:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,168
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4355f8:

            pxor XMM5,XMM5
            sqrtsd XMM1,XMM0
            ucomisd XMM5,XMM0
            jbe .L_4355b0

            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM12
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4355b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435648:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+96],XMM9
            movaps XMMWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM14
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM12
            movsd QWORD PTR [RSP+32],XMM13
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM15
            call acos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_448f68]
            addsd XMM0,QWORD PTR [RIP+.L_44b238]
            call cos@PLT

            movsd XMM15,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM13,QWORD PTR [RSP+32]
            movsd XMM12,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM14,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+96]
            jmp .L_43554f
.L_4356ec:

            movsd QWORD PTR [RSP+152],XMM9
            mov QWORD PTR [RSP+120],RDI
            movaps XMMWORD PTR [RSP+128],XMM5
            movsd QWORD PTR [RSP+144],XMM14
            movsd QWORD PTR [RSP+112],XMM1
            movsd QWORD PTR [RSP+104],XMM7
            movsd QWORD PTR [RSP+96],XMM11
            movsd QWORD PTR [RSP+80],XMM8
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM10
            movsd QWORD PTR [RSP+48],XMM12
            movsd QWORD PTR [RSP+40],XMM13
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM15
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+152]
            movapd XMM5,XMMWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+120]
            movsd XMM14,QWORD PTR [RSP+144]
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [RSP+104]
            movsd XMM11,QWORD PTR [RSP+96]
            movsd XMM8,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM10,QWORD PTR [RSP+56]
            movsd XMM12,QWORD PTR [RSP+48]
            movsd XMM13,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM15,QWORD PTR [RSP+24]
            jmp .L_4354bc
.L_4357c9:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4353a6
.L_4357fb:

            nop
            nop
            nop
            nop
            nop
.L_435800:

            test RDI,RDI
            je .L_435830

            lea RAX,QWORD PTR [RIP+.L_435320]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_434f00]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435830:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43585e

            lea RDX,QWORD PTR [RIP+.L_434ee0]
            lea RCX,QWORD PTR [RIP+.L_44b1e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43585e:

            add RSP,8
            ret 
.L_435863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435870:

            lea RDX,QWORD PTR [RIP+.L_435320]
            lea RCX,QWORD PTR [RIP+.L_434f00]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_435895:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4358a0:

            xor EAX,EAX
            ret 
.L_4358a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4358b0:

            test RDI,RDI
            je .L_4358d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4358ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4358ce:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4358d8:

            xor EAX,EAX
            ret 
.L_4358db:

            nop
            nop
            nop
            nop
            nop
.L_4358e0:

            jmp .L_4358b0
.L_4358e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4358f0:

            push RBX
            movapd XMM5,XMM0
            movapd XMM6,XMM1
            sub RSP,96
.L_4358fd:

            pxor XMM10,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_44ad88]
            mov RBX,QWORD PTR [RDI+32]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movapd XMM4,XMM7
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM1,XMM0
            mulsd XMM0,XMM0
            andpd XMM1,XMM3
            subsd XMM4,XMM0
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            jbe .L_435ab8
.L_435948:

            movapd XMM0,XMM5
            movsd XMM9,QWORD PTR [RIP+.L_447cd0]
            andpd XMM0,XMM3
            ucomisd XMM9,XMM0
            jbe .L_435990

            ucomisd XMM4,XMM6
            ja .L_435b20

            mulsd XMM1,QWORD PTR [RIP+.L_447a78]
.L_435972:

            movapd XMM0,XMM10
            pxor XMM3,XMM3
            addsd XMM0,XMM7
            divsd XMM1,XMM0
.L_435983:

            add RSP,96
.L_435987:

            movapd XMM0,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435990:

            movsd XMM8,QWORD PTR [RIP+.L_447a78]
            mov EAX,DWORD PTR [RBX]
            movapd XMM0,XMM5
            movapd XMM2,XMM8
            divsd XMM0,XMM8
            test EAX,EAX
            divsd XMM2,XMM5
            subsd XMM2,XMM0
            andpd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            movapd XMM12,XMM3
            addsd XMM12,XMM7
            jne .L_435a78

            ucomisd XMM4,XMM12
            sqrtsd XMM11,XMM12
            ja .L_435b35
.L_4359e7:

            movapd XMM0,XMM11
            movapd XMM11,XMM10
            mulsd XMM3,XMM1
            mulsd XMM11,XMM2
            addsd XMM2,XMM2
            mulsd XMM0,XMM10
            mulsd XMM1,XMM3
            mulsd XMM10,XMM11
            addsd XMM1,XMM7
            subsd XMM0,XMM10
            divsd XMM0,XMM1
            addsd XMM2,XMM0
            movapd XMM3,XMM0
            mulsd XMM3,XMM8
            mulsd XMM2,XMM0
            subsd XMM7,XMM2
            movapd XMM0,XMM7
            addsd XMM0,XMM9
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_435bce
.L_435a45:

            mulsd XMM1,XMM8
.L_435a4a:

            ucomisd XMM4,XMM5
            jbe .L_435a58

            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
.L_435a58:

            ucomisd XMM4,XMM6
            jbe .L_435983

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            add RSP,96
.L_435a6e:

            movapd XMM0,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435a78:

            movapd XMM0,XMM10
            addsd XMM0,XMM7
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM12,XMM0
            ucomisd XMM4,XMM12
            sqrtsd XMM3,XMM12
            ja .L_435c20
.L_435aa2:

            subsd XMM3,XMM2
            mulsd XMM1,XMM8
            mulsd XMM3,XMM8
            jmp .L_435a4a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435ab8:

            sqrtsd XMM10,XMM0
            jbe .L_435948

            movsd QWORD PTR [RSP+56],XMM7
            movaps XMMWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM10
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM3,XMMWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM10,QWORD PTR [RSP]
            jmp .L_435948
.L_435b20:

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            mulsd XMM1,QWORD PTR [RIP+.L_447a78]
            jmp .L_435972
.L_435b35:

            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+80],XMM9
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM10
            movsd QWORD PTR [RSP],XMM11
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM11,QWORD PTR [RSP]
            jmp .L_4359e7
.L_435bce:

            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_435a45
.L_435c20:

            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_435aa2
.L_435c83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435c90:

            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_435cc8

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX],0
            lea RAX,QWORD PTR [RIP+.L_4358f0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435cc8:

            mov RDI,RBX
            pop RBX
            jmp .L_4358b0
.L_435cd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435ce0:

            test RDI,RDI
            je .L_435cf0

            jmp .L_435c90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435cf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_435d1e

            lea RDX,QWORD PTR [RIP+.L_4358e0]
            lea RCX,QWORD PTR [RIP+.L_44b280]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_435d1e:

            add RSP,8
            ret 
.L_435d23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435d30:

            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_435d70

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX],1
            lea RAX,QWORD PTR [RIP+.L_4358f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435d70:

            mov RDI,RBX
            pop RBX
            jmp .L_4358b0
.L_435d79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435d80:

            test RDI,RDI
            je .L_435d90

            jmp .L_435d30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435d90:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_435dbe

            lea RDX,QWORD PTR [RIP+.L_4358e0]
            lea RCX,QWORD PTR [RIP+.L_44b240]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_435dbe:

            add RSP,8
            ret 
.L_435dc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435dd0:

            xor EAX,EAX
            ret 
.L_435dd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435de0:

            xor EAX,EAX
            ret 
.L_435de3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435df0:

            test RDI,RDI
            je .L_435e00

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435e00:

            ret 
.L_435e02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435e10:

            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM3,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            andpd XMM3,XMM2
            ucomisd XMM6,XMM3
            ja .L_435e60

            movapd XMM8,XMM0
            pxor XMM5,XMM5
            andpd XMM8,XMM2
            ucomisd XMM6,XMM8
            ja .L_435e59

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            subsd XMM3,XMM7
            andpd XMM3,XMM2
            ucomisd XMM6,XMM3
            jbe .L_435e70
.L_435e59:

            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0x90
.L_435e60:

            movapd XMM5,XMM0
            pxor XMM1,XMM1
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435e70:

            sub RSP,136
.L_435e77:

            movapd XMM3,XMM0
            movapd XMM14,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_44ad88]
            movapd XMM4,XMM1
            movsd XMM9,QWORD PTR [RIP+.L_4470e8]
            mulsd XMM14,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_447a68]
            movsd XMM10,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM3
            movapd XMM1,XMM14
            mulsd XMM14,XMM14
            movsd XMM13,QWORD PTR [RIP+.L_447a88]
            andpd XMM1,XMM2
            addsd XMM9,XMM14
            mulsd XMM9,XMM1
            subsd XMM6,XMM9
            movapd XMM9,XMM1
            subsd XMM9,XMM10
            mulsd XMM6,XMM1
            mulsd XMM9,XMM14
            subsd XMM6,QWORD PTR [RIP+.L_447ce8]
            mulsd XMM6,QWORD PTR [RIP+.L_4470f8]
            divsd XMM6,XMM9
            movapd XMM9,XMM0
            movapd XMM0,XMM10
            divsd XMM0,XMM9
            movapd XMM12,XMM6
            mulsd XMM12,XMM6
            addsd XMM0,XMM9
            pxor XMM9,XMM9
            mulsd XMM0,XMM0
            subsd XMM0,XMM13
            ucomisd XMM9,XMM0
            sqrtsd XMM11,XMM0
            ja .L_43616f
.L_435f39:

            subsd XMM8,XMM7
            ucomisd XMM9,XMM8
            jbe .L_435f4e

            xorpd XMM11,XMMWORD PTR [RIP+.L_447ae0]
.L_435f4e:

            movapd XMM5,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_447a90]
            movapd XMM15,XMM12
            addsd XMM5,XMM6
            movapd XMM8,XMM11
            mulsd XMM0,XMM6
            mulsd XMM15,XMM13
            mulsd XMM8,XMM11
            mulsd XMM5,XMM5
            addsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_44a608]
            mulsd XMM0,XMM0
            mulsd XMM6,XMM1
            movapd XMM1,XMM12
            addsd XMM0,XMM15
            mulsd XMM1,XMM8
            addsd XMM6,XMM15
            mulsd XMM0,XMM14
            mulsd XMM6,XMM12
            addsd XMM12,XMM5
            addsd XMM6,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM14
            addsd XMM14,XMM1
            mulsd XMM0,XMM6
            subsd XMM14,XMM10
            mulsd XMM14,XMM5
            addsd XMM14,XMM0
            movapd XMM0,XMM12
            subsd XMM0,XMM10
            ucomisd XMM9,XMM14
            sqrtsd XMM1,XMM14
            mulsd XMM0,XMM11
            movapd XMM12,XMM0
            ja .L_4360c6
.L_435ffb:

            addsd XMM1,XMM1
            mulsd XMM13,XMM5
            movapd XMM0,XMM1
            addsd XMM8,XMM13
            addsd XMM0,XMM12
            divsd XMM0,XMM8
            andpd XMM2,XMM0
            movapd XMM5,XMM0
            mulsd XMM0,XMM0
            mulsd XMM2,XMM11
            mulsd XMM5,XMM7
            addsd XMM2,XMM10
            subsd XMM2,XMM0
            ucomisd XMM9,XMM2
            sqrtsd XMM1,XMM2
            ja .L_43606e
.L_436040:

            ucomisd XMM9,XMM3
            mulsd XMM1,XMM7
            jbe .L_436053

            xorpd XMM5,XMMWORD PTR [RIP+.L_447ae0]
.L_436053:

            ucomisd XMM9,XMM4
            jbe .L_436062

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_436062:

            movapd XMM0,XMM5
            add RSP,136
.L_43606d:

            ret 
.L_43606e:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_436040
.L_4360c6:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM14
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+80],XMM7
            movaps XMMWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM13
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM11
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM10,QWORD PTR [RSP+96]
            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM2,XMMWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM13,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM11,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM12,QWORD PTR [RSP+8]
            jmp .L_435ffb
.L_43616f:

            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM10
            movsd QWORD PTR [RSP+96],XMM7
            movaps XMMWORD PTR [RSP+80],XMM2
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM13
            movsd QWORD PTR [RSP+48],XMM12
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM14
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM11
            movsd QWORD PTR [RSP+8],XMM8
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+120]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM10,QWORD PTR [RSP+104]
            movsd XMM7,QWORD PTR [RSP+96]
            movapd XMM2,XMMWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM13,QWORD PTR [RSP+56]
            movsd XMM12,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM14,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM11,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_435f39
.L_436222:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436230:

            test RDI,RDI
            je .L_436250

            lea RAX,QWORD PTR [RIP+.L_435e10]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_436250:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43627e

            lea RDX,QWORD PTR [RIP+.L_435df0]
            lea RCX,QWORD PTR [RIP+.L_44b2c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43627e:

            add RSP,8
            ret 
.L_436283:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436290:

            lea RDX,QWORD PTR [RIP+.L_435e10]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4362aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4362b0:

            xor EAX,EAX
            ret 
.L_4362b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4362c0:

            jmp .L_403770
.L_4362c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4362d0:

            sub RSP,56
.L_4362d4:

            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_44b310]
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call asin@PLT

            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM0
            lea RSI,QWORD PTR [RSP+32]
            divsd XMM3,QWORD PTR [RIP+.L_447a90]
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RIP+.L_44b318]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RSP+40]
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            ucomisd XMM0,XMM2
            sqrtsd XMM5,XMM2
            ja .L_43638b
.L_43636e:

            divsd XMM3,XMM5
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RIP+.L_44b320]
            add RSP,56
.L_436382:

            movapd XMM0,XMM4
            mulsd XMM1,XMM3
            ret 
.L_43638b:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43636e
.L_4363c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4363d0:

            test RDI,RDI
            je .L_436400

            lea RAX,QWORD PTR [RIP+.L_4362d0]
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436400:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43642e

            lea RDX,QWORD PTR [RIP+.L_4362c0]
            lea RCX,QWORD PTR [RIP+.L_44b2f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43642e:

            add RSP,8
            ret 
.L_436433:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436440:

            lea RDX,QWORD PTR [RIP+.L_4362d0]
            mov RAX,RDI
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_436462:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436470:

            xor EAX,EAX
            ret 
.L_436473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436480:

            test RDI,RDI
            je .L_4364b0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4364a7

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            call .L_403770

            mov RDI,QWORD PTR [RBX+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4364a7:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4364b0:

            xor EAX,EAX
            ret 
.L_4364b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4364c0:

            jmp .L_436480
.L_4364c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4364d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_4364dd:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movapd XMM0,XMM3
            mov RDI,QWORD PTR [RBX]
            call .L_4447b0

            subsd XMM0,QWORD PTR [RBX+24]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RBX+8]
            mov RSI,R12
            mulsd XMM4,QWORD PTR [RBX+16]
            mov RDI,RBP
            movapd XMM5,XMM3
            movsd XMM1,QWORD PTR [R13+360]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM1
            movapd XMM2,XMM0
            mulsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RBX+32]
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM0
            movapd XMM0,XMM4
            subsd XMM5,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_4365a6:

            pop RBX
            mulsd XMM0,XMM1
            pop RBP
            pop R12
            subsd XMM3,XMM2
            pop R13
            mulsd XMM1,XMM3
            ret 
.L_4365b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4365c0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_4365c9:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RDI+360]
            divsd XMM1,XMM3
            divsd XMM0,XMM3
            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM1,QWORD PTR [RBX+8]
            subsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            call atan2@PLT

            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            mov EAX,10
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM4,QWORD PTR [RBX+16]
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RBX+32]
            movapd XMM1,XMM3
            movsd XMM8,QWORD PTR [RIP+.L_447a90]
            movq XMM7,QWORD PTR [RIP+.L_447130]
            subsd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM4
            movsd XMM6,QWORD PTR [RIP+.L_447e58]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436670:

            movapd XMM2,XMM0
            movapd XMM3,XMM0
            mulsd XMM2,XMM0
            mulsd XMM3,XMM8
            mulsd XMM2,XMM5
            mulsd XMM3,XMM0
            addsd XMM2,XMM4
            mulsd XMM3,XMM5
            mulsd XMM2,XMM0
            addsd XMM3,XMM4
            subsd XMM2,XMM1
            divsd XMM2,XMM3
            subsd XMM0,XMM2
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_4366e0

            sub EAX,1
            jne .L_436670

            mov RDI,RBP
            mov ESI,4294967276
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
.L_4366cb:

            pxor XMM1,XMM1
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4366e0:

            addsd XMM0,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RBP+176]
            call .L_4447f0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_43670e:

            nop
            nop
.L_436710:

            push R12
            push RBP
            mov ESI,40
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_436725:

            call .L_403740

            test RAX,RAX
            je .L_43687d

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4446c0

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP],RAX
            je .L_43687d

            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RBX+336]
            ucomisd XMM3,XMM5
            jp .L_43676f

            je .L_436870
.L_43676f:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd QWORD PTR [RBP+16],XMM1
            call .L_4447b0

            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM0
            movapd XMM6,XMM2
            movapd XMM3,XMM2
            mulsd XMM0,QWORD PTR [RBX+176]
            subsd XMM6,XMM0
            divsd XMM3,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM3
            sqrtsd XMM4,XMM3
            ja .L_43688d
.L_4367eb:

            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM1,QWORD PTR [RBX+216]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_4365c0]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RIP+.L_448f50]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM7,XMM4
            divsd XMM7,XMM0
            mulsd XMM1,XMM4
            movsd QWORD PTR [RBP+8],XMM7
            divsd XMM2,XMM1
            movsd QWORD PTR [RBP+32],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4364d0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_436868:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_436870:

            mov ESI,4294967241
            mov RDI,RBX
            call .L_413c90
.L_43687d:

            add RSP,48
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_436480
.L_43688d:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4367eb
.L_4368bf:

            nop
.L_4368c0:

            test RDI,RDI
            je .L_4368d0

            jmp .L_436710
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4368d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4368fe

            lea RDX,QWORD PTR [RIP+.L_4364c0]
            lea RCX,QWORD PTR [RIP+.L_44b340]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4368fe:

            add RSP,8
            ret 
.L_436903:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436910:

            xor EAX,EAX
            ret 
.L_436913:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436920:

            test RDI,RDI
            je .L_436948

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43693e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43693e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_436948:

            xor EAX,EAX
            ret 
.L_43694b:

            nop
            nop
            nop
            nop
            nop
.L_436950:

            jmp .L_436920
.L_436952:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436960:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_43696b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [R12+32]
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM3,XMM2
            mov EAX,DWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RBX+40]
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RBX+32]
            test EAX,EAX
            subsd XMM3,XMM1
            jne .L_436a70

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            divsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            call atan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM5,XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM1,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM5
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            add RSP,64
.L_436a5e:

            mulsd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436a70:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            divsd XMM4,XMM3
            mulsd XMM5,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM5,QWORD PTR [RSP+8]
            add RSP,64
.L_436ada:

            mulsd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            ret 
.L_436ae7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436af0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_436afd:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [R13+32]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+16]
            call atan@PLT

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM5,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM0,XMM3
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM5,XMM0
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM5
            mulsd XMM4,XMM5
            mulsd XMM6,XMM5
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            mulsd XMM4,XMM3
            movapd XMM5,XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            subsd XMM6,XMM2
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            mulsd XMM2,XMM6
            subsd XMM2,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RBX+24]
            subsd XMM2,XMM0
            ucomisd XMM1,XMM2
            ja .L_436d00

            mov EAX,DWORD PTR [RBX+64]
            movsd XMM7,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP+8],XMM7
            test EAX,EAX
            jne .L_436c90

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM4
            divsd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM1,XMM6
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
.L_436c7f:

            add RSP,72
.L_436c83:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_436c90:

            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+32],XMM4
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM5,XMM6
            mulsd XMM2,XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            jmp .L_436c7f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436d00:

            mov RDI,R13
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,72
.L_436d1d:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            pop R12
            pop R13
            ret 
.L_436d28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436d30:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_436d39:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM3,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            subsd XMM3,XMM7
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            call tan@PLT

            mov EAX,DWORD PTR [RBX+64]
            movapd XMM6,XMM0
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+16]
            test EAX,EAX
            movsd XMM5,QWORD PTR [RSP+24]
            je .L_436ea0

            movapd XMM2,XMM4
            pxor XMM1,XMM1
            mulsd XMM2,XMM4
            movapd XMM0,XMM2
            addsd XMM0,XMM7
            ucomisd XMM1,XMM0
            sqrtsd XMM3,XMM0
            ja .L_436f47
.L_436dd7:

            mulsd XMM6,XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM6
.L_436de3:

            addsd XMM2,XMM3
            movapd XMM3,XMM5
            addsd XMM3,XMM5
            addsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_447a88]
            movapd XMM0,XMM3
            mulsd XMM7,XMM2
            mulsd XMM0,XMM3
            mulsd XMM7,QWORD PTR [RBX+48]
            subsd XMM0,XMM7
            ucomisd XMM1,XMM0
            ja .L_436ed0

            sqrtsd XMM1,XMM0
            ja .L_436f9c
.L_436e24:

            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            subsd XMM3,XMM1
            divsd XMM3,XMM2
            subsd XMM5,XMM3
            mulsd XMM6,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM6
            call atan2@PLT

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM4,XMM3
            mulsd XMM0,XMM4
            divsd XMM0,XMM5
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,56
.L_436e8d:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436ea0:

            movapd XMM3,XMM0
            pxor XMM1,XMM1
            mulsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM7
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_436ef2
.L_436ebe:

            mulsd XMM4,XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM4
            jmp .L_436de3
          .byte 0x90
.L_436ed0:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_436eeb:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
.L_436ef2:

            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_436ebe
.L_436f47:

            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_436dd7
.L_436f9c:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_436e24
.L_436fe5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436ff0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_436ff9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM3,QWORD PTR [RBX+40]
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            call tan@PLT

            mov EAX,DWORD PTR [RBX+64]
            test EAX,EAX
            je .L_437160

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM4,XMM0
.L_437078:

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RBX+32]
            divsd XMM2,QWORD PTR [RBX+8]
            movapd XMM1,XMM5
            addsd XMM1,XMM5
            mulsd XMM2,XMM2
            movapd XMM0,XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM4
            addsd XMM2,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447a88]
            mulsd XMM3,XMM2
            mulsd XMM3,QWORD PTR [RBX+48]
            subsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            ja .L_4371a0

            sqrtsd XMM3,XMM0
            ja .L_4371c8
.L_4370dd:

            subsd XMM1,XMM3
            addsd XMM2,XMM2
            divsd XMM1,XMM2
            mulsd XMM4,XMM1
            subsd XMM5,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM1,XMM5
            call atan2@PLT

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM1
            divsd XMM0,XMM5
            call atan@PLT

            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+24]
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            add RSP,56
.L_437151:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437160:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_437078
          .byte 0x66
          .byte 0x90
.L_4371a0:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,56
.L_4371bd:

            pop RBX
            movapd XMM0,XMM3
            movapd XMM1,XMM3
            pop RBP
            ret 
.L_4371c8:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_4370dd
.L_437207:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437210:

            push RBP
            push RBX
            mov ESI,72
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_437223:

            call .L_403740

            test RAX,RAX
            je .L_4372c0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449b90]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov ESI,4294967266
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            jae .L_4372b8

            ucomisd XMM1,QWORD PTR [RBX+336]
            jp .L_4372d0

            jne .L_4372d0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b37c]
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_4372e0

            cmp BYTE PTR [RAX+1],0
            jne .L_4372b3

            movzx EAX,BYTE PTR [RAX]
            lea EDX,DWORD PTR [RAX-120]
            cmp DL,1
            jbe .L_437358
.L_4372b3:

            mov ESI,4294967247
.L_4372b8:

            mov RDI,RBX
            call .L_413c90
.L_4372c0:

            add RSP,24
.L_4372c4:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_436920
          .byte 0x66
          .byte 0x90
.L_4372d0:

            mov ESI,4294967250
            mov RDI,RBX
            call .L_413c90

            jmp .L_4372c0
          .byte 0x90
.L_4372e0:

            mov DWORD PTR [RBP+64],0
.L_4372e7:

            movsd XMM0,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,QWORD PTR [RBX+128]
            ucomisd XMM1,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBP+40],XMM0
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+32],XMM0
            mulsd XMM0,XMM0
            subsd XMM0,XMM2
            movsd QWORD PTR [RBP+48],XMM0
            jp .L_437368

            jne .L_437368

            lea RAX,QWORD PTR [RIP+.L_436d30]
            movsd QWORD PTR [RBP+24],XMM2
            movsd QWORD PTR [RBP+16],XMM2
            movsd QWORD PTR [RBP+8],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_436960]
            mov QWORD PTR [RBX+40],RAX
.L_437348:

            add RSP,24
.L_43734c:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437358:

            cmp AL,120
            sete AL
            movzx EAX,AL
            mov DWORD PTR [RBP+64],EAX
            jmp .L_4372e7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437368:

            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4373a9
.L_43737a:

            movsd QWORD PTR [RBP+16],XMM0
            lea RAX,QWORD PTR [RIP+.L_436ff0]
            movsd XMM0,QWORD PTR [RBX+224]
            movsd QWORD PTR [RBP+8],XMM2
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_436af0]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_437348
.L_4373a9:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_43737a
.L_4373c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4373d0:

            test RDI,RDI
            je .L_4373e0

            jmp .L_437210
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4373e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43740e

            lea RDX,QWORD PTR [RIP+.L_436950]
            lea RCX,QWORD PTR [RIP+.L_44b3a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43740e:

            add RSP,8
            ret 
.L_437413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437420:

            xor EAX,EAX
            ret 
.L_437423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437430:

            test RDI,RDI
            je .L_437458

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43744e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43744e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_437458:

            xor EAX,EAX
            ret 
.L_43745b:

            nop
            nop
            nop
            nop
            nop
.L_437460:

            jmp .L_437430
.L_437462:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437470:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            mov R12,RDX
            sub RSP,48
.L_437481:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM8
            call sinh@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call cosh@PLT

            movsd XMM9,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RBX+40]
            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM7,XMM9
            movsd XMM6,QWORD PTR [RIP+.L_448f78]
            movsd XMM10,QWORD PTR [RSP+8]
            addsd XMM7,XMM9
            mulsd XMM6,XMM8
            movsd XMM4,QWORD PTR [RBX+40]
            pxor XMM5,XMM5
            pxor XMM3,XMM3
            mulsd XMM7,XMM0
            mulsd XMM6,XMM10
            pxor XMM11,XMM11
            jmp .L_437528
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437520:

            movapd XMM3,XMM2
            movapd XMM4,XMM1
.L_437528:

            movapd XMM1,XMM7
            movapd XMM2,XMM6
            sub RAX,8
            mulsd XMM1,XMM4
            cmp RAX,RBX
            mulsd XMM2,XMM3
            subsd XMM1,XMM11
            movapd XMM11,XMM7
            mulsd XMM11,XMM3
            subsd XMM1,XMM2
            movapd XMM2,XMM6
            mulsd XMM2,XMM4
            addsd XMM1,QWORD PTR [RAX]
            subsd XMM2,XMM5
            movapd XMM5,XMM3
            addsd XMM2,XMM11
            movapd XMM11,XMM4
            jne .L_437520

            mulsd XMM0,XMM8
            mulsd XMM9,XMM10
            movapd XMM3,XMM0
            mulsd XMM0,XMM2
            movapd XMM4,XMM9
            mulsd XMM9,XMM1
            mulsd XMM3,XMM1
            mulsd XMM4,XMM2
            addsd XMM0,XMM9
            subsd XMM3,XMM4
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [R12],XMM0
            movsd XMM0,QWORD PTR [RBP]
            add RSP,48
.L_4375b3:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4375b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4375c0:

            push RBX
            movapd XMM5,XMM0
            addsd XMM0,XMM0
            mov RBX,RDI
            sub RSP,32

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RBX+40]
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM4,XMM4
            movsd XMM2,QWORD PTR [RBX+40]
            pxor XMM3,XMM3
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_437614
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437610:

            movapd XMM2,XMM1
.L_437614:

            movapd XMM1,XMM4
            sub RAX,8
            cmp RAX,RBX
            mulsd XMM1,XMM2
            subsd XMM1,XMM3
            movapd XMM3,XMM2
            addsd XMM1,QWORD PTR [RAX]
            jne .L_437610

            mulsd XMM0,XMM1
            add RSP,32

            pop RBX
            addsd XMM0,XMM5
            ret 
.L_43763f:

            nop
.L_437640:

            push R12
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,96
.L_43764c:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM4,QWORD PTR [RIP+.L_44b460]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movsd XMM3,QWORD PTR [RBX]
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM0
            jae .L_4376b0

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM2,XMM1
.L_43768e:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_4377c9

            add RSP,96
.L_4376aa:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4376b0:

            subsd XMM1,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [RBX+112]
            movsd QWORD PTR [RSP+24],XMM2
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM1
            movapd XMM1,XMM2
            addsd XMM1,XMM2
            call .L_437470

            movsd XMM3,QWORD PTR [RSP+8]
            mov RSI,R12
            mov RDI,RBP
            addsd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+56]
            addsd XMM2,QWORD PTR [RSP+80]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM2
            call sinh@PLT

            call atan@PLT

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+56]
            mulsd XMM3,XMM4
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            call atan2@PLT

            lea RDI,QWORD PTR [RBX+16]
            call .L_4375c0

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            jmp .L_43768e
.L_4377c9:

            call __stack_chk_fail@PLT
.L_4377ce:

            nop
            nop
.L_4377d0:

            push R12
            push RBP
            push RBX
            sub RSP,112
.L_4377d8:

            mov RBX,QWORD PTR [RDI+32]
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+64]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_4375c0

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM4
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call hypot@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            call atan2@PLT

            call tan@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM0
            andpd XMM5,XMMWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call hypot@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+32]
            addsd XMM0,XMM3
            pxor XMM1,XMM1
            movapd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            addsd XMM2,XMM3
            mulsd XMM2,XMM5
            movapd XMM0,XMM2
            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+88]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            ucomisd XMM0,XMM1
            jp .L_4379f0

            jne .L_4379f0
.L_437940:

            ucomisd XMM1,XMM4
            jbe .L_43794e

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_43794e:

            movapd XMM1,XMM2
            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+160]
            addsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call .L_437470

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_44b460]
            addsd XMM2,QWORD PTR [RSP+80]
            movapd XMM3,XMM2
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM3
            jb .L_4379e0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBX]
            addsd XMM1,XMM0
            mulsd XMM1,XMM3
            mulsd XMM3,XMM2
            addsd XMM1,QWORD PTR [RBX+8]
            movapd XMM0,XMM3
.L_4379c5:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_437a32

            add RSP,112
.L_4379d9:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4379e0:

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            movapd XMM0,XMM1
            jmp .L_4379c5
          .byte 0x66
          .byte 0x90
.L_4379f0:

            movsd XMM0,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+96]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+16]
            divsd XMM2,XMM3
            jmp .L_437940
.L_437a32:

            call __stack_chk_fail@PLT
.L_437a37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a40:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM5,XMM5
            sub RSP,72
.L_437a4d:

            movsd XMM1,QWORD PTR [RDI+176]
            ucomisd XMM5,XMM1
            jae .L_438088

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mov RBX,QWORD PTR [RDI+32]
            movapd XMM0,XMM3
            subsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4380a6
.L_437a81:

            addsd XMM2,XMM3
            movapd XMM0,XMM1
            movsd XMM10,QWORD PTR [RIP+.L_44b480]
            lea RDI,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+40],XMM5
            divsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_4470e8]
            movapd XMM1,XMM2
            subsd XMM1,XMM0
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b468]
            mulsd XMM1,XMM0
            movapd XMM6,XMM0
            movapd XMM8,XMM0
            mulsd XMM6,XMM0
            movapd XMM7,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b470]
            mulsd XMM8,XMM6
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b478]
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            mulsd XMM1,XMM0
            subsd XMM1,XMM10
            mulsd XMM1,XMM0
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+16],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b488]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b490]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b498]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b4a0]
            mulsd XMM1,XMM0
            addsd XMM1,XMM10
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44b4c0]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+64],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b4a8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b4b0]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b4b8]
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b4c8]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+24],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b4d0]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b4d8]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b4e0]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b4e8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b4f0]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+72],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b4f8]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b500]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b508]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b510]
            mulsd XMM1,XMM8
            movsd QWORD PTR [RBX+32],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b518]
            mulsd XMM1,XMM0
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44b520]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44b528]
            mulsd XMM1,XMM8
            movsd QWORD PTR [RBX+80],XMM1
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44b530]
            mulsd XMM1,XMM8
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_44b580]
            movsd XMM9,QWORD PTR [RBP+360]
            mulsd XMM7,XMM1
            subsd XMM2,QWORD PTR [RIP+.L_44b538]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_44b540]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RBX+40],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44b548]
            mulsd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_44b550]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_44b558]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RBX+88],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44b560]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_44b568]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RBX+48],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44b570]
            mulsd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_44b578]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RBX+96],XMM2
            movapd XMM2,XMM0
            mulsd XMM2,XMM7
            mulsd XMM4,XMM2
            movsd QWORD PTR [RBX+56],XMM4
            movsd XMM4,QWORD PTR [RIP+.L_44b588]
            mulsd XMM4,XMM2
            movsd QWORD PTR [RBX+104],XMM4
            movsd XMM4,QWORD PTR [RIP+.L_448f28]
            mulsd XMM4,XMM6
            addsd XMM4,QWORD PTR [RIP+.L_44b590]
            mulsd XMM4,XMM6
            addsd XMM4,QWORD PTR [RIP+.L_448f60]
            mulsd XMM4,XMM6
            addsd XMM4,XMM3
            addsd XMM3,XMM0
            divsd XMM9,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b598]
            mulsd XMM3,XMM0
            mulsd XMM4,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_4470f8]
            addsd XMM3,QWORD PTR [RIP+.L_44b5a0]
            movsd QWORD PTR [RBX],XMM4
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b5a8]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b5b0]
            mulsd XMM3,XMM0
            addsd XMM3,XMM10
            mulsd XMM3,XMM0
            subsd XMM3,XMM9
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+112],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b5b8]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b5c0]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b5c8]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b5d0]
            mulsd XMM3,XMM0
            subsd XMM3,XMM10
            mulsd XMM3,XMM0
            addsd XMM3,XMM9
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+160],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b5d8]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b5e0]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b5e8]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44a6e0]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b5f0]
            mulsd XMM3,XMM6
            movsd QWORD PTR [RBX+120],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b5f8]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b600]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b608]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b610]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b618]
            mulsd XMM6,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b620]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+168],XMM6
            addsd XMM3,QWORD PTR [RIP+.L_44b628]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b630]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b638]
            mulsd XMM3,XMM8
            movsd QWORD PTR [RBX+128],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b640]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b648]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b650]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b658]
            mulsd XMM8,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b660]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+176],XMM8
            addsd XMM3,QWORD PTR [RIP+.L_44b668]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b670]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RBX+136],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b678]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_44b680]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_44b688]
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX+184],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b690]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_44b6a0]
            subsd XMM1,QWORD PTR [RIP+.L_44b698]
            mulsd XMM1,XMM7
            movsd QWORD PTR [RBX+144],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b6a8]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44b6b0]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_44b6b8]
            mulsd XMM1,XMM7
            movsd QWORD PTR [RBX+152],XMM0
            movsd XMM0,QWORD PTR [RBP+336]
            movsd QWORD PTR [RBX+192],XMM1
            movsd QWORD PTR [RBX+200],XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+32],XMM1
            call .L_4375c0

            movsd XMM4,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+56]
            movapd XMM6,XMM0
            lea RSI,QWORD PTR [RSP+48]
            xorpd XMM4,XMMWORD PTR [RIP+.L_447ae0]
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            lea RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RBX+160]
            movsd XMM3,QWORD PTR [RSP+48]
            cmp RDX,RAX
            movsd XMM4,QWORD PTR [RSP+56]
            addsd XMM3,XMM3
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            je .L_4380a0

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_438035
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438028:

            movapd XMM5,XMM2
            movsd XMM1,QWORD PTR [RDX-8]
            movapd XMM2,XMM0
.L_438035:

            movapd XMM0,XMM3
            sub RDX,8
            cmp RDX,RAX
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            addsd XMM0,XMM1
            jne .L_438028
.L_43804e:

            mulsd XMM0,XMM4
            lea RAX,QWORD PTR [RIP+.L_437640]
            addsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+8],XMM0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4377d0]
            mov QWORD PTR [RBP+40],RAX
            add RSP,72
.L_43807b:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438088:

            mov ESI,4294967262
            call .L_413c90

            add RSP,72
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_437430
.L_4380a0:

            movapd XMM0,XMM2
            jmp .L_43804e
.L_4380a6:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_437a81
.L_4380e0:

            push RBX
            mov ESI,208
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438108

            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            pop RBX
            jmp .L_437a40
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438108:

            mov RDI,RBX
            pop RBX
            jmp .L_437430
.L_438111:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438120:

            test RDI,RDI
            je .L_438130

            jmp .L_4380e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438130:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43815e

            lea RDX,QWORD PTR [RIP+.L_437460]
            lea RCX,QWORD PTR [RIP+.L_44b420]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43815e:

            add RSP,8
            ret 
.L_438163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438170:

            xor EAX,EAX
            ret 
.L_438173:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438180:

            push RBX
.L_438181:

            mov ESI,208
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438245

            pxor XMM7,XMM7
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM7,QWORD PTR [RBX+176]
            jp .L_4381b4

            je .L_438238
.L_4381b4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb8]
            call .L_403e60

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_44b6c0]
            jne .L_4381d7

            pxor XMM0,XMM0
.L_4381d7:

            mov RAX,QWORD PTR [RIP+.L_449420]
            mov RSI,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+352],XMM0
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b3cf]
            mov QWORD PTR [RBX+344],RAX
            call .L_403e60

            test EAX,EAX
            je .L_438250

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b3d5]
            call .L_403e60

            sub EAX,1
            cmp EAX,59
            ja .L_438340

            movsd XMM2,QWORD PTR [RIP+.L_447a78]
            movsd XMM4,QWORD PTR [RIP+.L_44a928]
            jmp .L_4382b4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438238:

            mov ESI,4294967262
.L_43823d:

            mov RDI,RBX
            call .L_413c90
.L_438245:

            mov RDI,RBX
            pop RBX
.L_438249:

            jmp .L_437430
          .byte 0x66
          .byte 0x90
.L_438250:

            movsd XMM0,QWORD PTR [RBX+328]
            call .L_442820

            movsd XMM2,QWORD PTR [RIP+.L_447a78]
            movsd XMM4,QWORD PTR [RIP+.L_44a928]
            addsd XMM0,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_447a80]
            mulsd XMM0,XMM4
            divsd XMM0,XMM2
            movapd XMM3,XMM0
            movapd XMM1,XMM0
            andpd XMM3,XMM5
            ucomisd XMM6,XMM3
            ja .L_438300
.L_43829b:

            cvttsd2si EAX,XMM1
            mov EDX,59
            cmp EAX,59
            cmovg EAX,EDX
            mov EDX,0
            test EAX,EAX
            cmovs EAX,EDX
.L_4382b4:

            pxor XMM0,XMM0
            mov QWORD PTR [RBX+336],0
            mov RDI,RBX
            cvtsi2sd XMM0,EAX
            mov RAX,QWORD PTR [RIP+.L_44b6c8]
            mov QWORD PTR [RBX+360],RAX
            addsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,XMM2
            divsd XMM0,XMM4
            subsd XMM0,XMM2
            movsd QWORD PTR [RBX+328],XMM0
            pop RBX

            jmp .L_437a40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438300:

            cvttsd2si RAX,XMM0
            pxor XMM3,XMM3
            andnpd XMM5,XMM0
            cvtsi2sd XMM3,RAX
            movapd XMM6,XMM3
            cmpnlesd XMM6,XMM0
            movapd XMM1,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            andpd XMM1,XMM6
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM5
            jmp .L_43829b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438340:

            mov ESI,4294967261
            jmp .L_43823d
.L_43834a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438350:

            test RDI,RDI
            je .L_438360

            jmp .L_438180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438360:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43838e

            lea RDX,QWORD PTR [RIP+.L_437460]
            lea RCX,QWORD PTR [RIP+.L_44b3e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43838e:

            add RSP,8
            ret 
.L_438393:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383a0:

            xor EAX,EAX
            ret 
.L_4383a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383b0:

            jmp .L_403770
.L_4383b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383c0:

            push R12
            push RBP
            push RBX
            sub RSP,64
.L_4383c8:

            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_449e30]
            movsd QWORD PTR [RSP+24],XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM0
            ja .L_438538

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            mov EBX,20
            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RIP+.L_447a78]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+16],XMM3
            jmp .L_43847c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438450:

            sub EBX,1
            je .L_4384ac

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+8]
.L_43847c:

            addsd XMM1,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM1,QWORD PTR [RSP+16]
            divsd XMM1,XMM0
            subsd XMM2,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM1
            jbe .L_438450
.L_4384ac:

            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM4,QWORD PTR [RIP+.L_44b710]
            divsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_44b708]
            addsd XMM1,XMM4
            divsd XMM3,XMM1
.L_4384f9:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44a7f8]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM1,QWORD PTR [RIP+.L_44b718]
            add RSP,64
.L_438530:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438538:

            movsd XMM2,QWORD PTR [RSP+24]
            pxor XMM3,XMM3
            jmp .L_4384f9
.L_438544:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438550:

            test RDI,RDI
            je .L_438570

            lea RAX,QWORD PTR [RIP+.L_4383c0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_438570:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43859e

            lea RDX,QWORD PTR [RIP+.L_4383b0]
            lea RCX,QWORD PTR [RIP+.L_44b6e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43859e:

            add RSP,8
            ret 
.L_4385a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4385b0:

            lea RDX,QWORD PTR [RIP+.L_4383c0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4385ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4385d0:

            xor EAX,EAX
            ret 
.L_4385d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4385e0:

            jmp .L_403770
.L_4385e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4385f0:

            sub RSP,40
.L_4385f4:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM3,XMM1
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            jae .L_438650

            sqrtsd XMM2,XMM3
            ja .L_43865e
.L_438623:

            subsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_44b738]
.L_43862f:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44b740]
            add RSP,40
.L_438641:

            mulsd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438650:

            movsd XMM1,QWORD PTR [RIP+.L_44b738]
            pxor XMM2,XMM2
            jmp .L_43862f
.L_43865e:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_438623
.L_438681:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438690:

            sub RSP,40
.L_438694:

            movapd XMM3,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_44b738]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM2
            subsd XMM1,XMM2
            mulsd XMM1,XMM1
            subsd XMM5,XMM1
            movapd XMM0,XMM5
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            ja .L_438710

            ucomisd XMM0,QWORD PTR [RIP+.L_44b750]
            ja .L_4386f0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM5
            ja .L_438768

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
.L_4386ea:

            add RSP,40
.L_4386ee:

            ret 
          .byte 0x90
.L_4386f0:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM5
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,40
            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_438710:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM2,XMM0
            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM2
            jae .L_4386ea

            sqrtsd XMM4,XMM2
            ja .L_438785

            mulsd XMM4,QWORD PTR [RIP+.L_44b740]
            movapd XMM0,XMM4
            jmp .L_438778
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438768:

            movsd XMM0,QWORD PTR [RIP+.L_44b748]
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
.L_438778:

            divsd XMM3,XMM0
            add RSP,40

            movapd XMM0,XMM3
            ret 
.L_438785:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM4,QWORD PTR [RIP+.L_44b740]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM4
            jmp .L_438778
.L_4387c0:

            test RDI,RDI
            je .L_4387f0

            lea RAX,QWORD PTR [RIP+.L_438690]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4385f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4387f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43881e

            lea RDX,QWORD PTR [RIP+.L_4385e0]
            lea RCX,QWORD PTR [RIP+.L_44b720]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43881e:

            add RSP,8
            ret 
.L_438823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438830:

            lea RDX,QWORD PTR [RIP+.L_438690]
            lea RCX,QWORD PTR [RIP+.L_4385f0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_438855:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438860:

            xor EAX,EAX
            ret 
.L_438863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438870:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_44b780]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_44b788]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_44b790]
            mulsd XMM1,XMM2
            ret 
.L_43889d:

            nop
            nop
            nop
.L_4388a0:

            jmp .L_403770
.L_4388a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4388b0:

            movsd XMM2,QWORD PTR [RIP+.L_44b798]
            ucomisd XMM1,XMM2
            ja .L_438990

            movsd XMM3,QWORD PTR [RIP+.L_44b7a0]
            movapd XMM2,XMM1
            cmpnltsd XMM2,XMM3
            andpd XMM1,XMM2
            andnpd XMM2,XMM3
            orpd XMM1,XMM2
.L_4388df:

            movapd XMM3,XMM1
            mov EAX,100
            movsd XMM10,QWORD PTR [RIP+.L_44b780]
            movsd XMM9,QWORD PTR [RIP+.L_44b788]
            movsd XMM4,QWORD PTR [RIP+.L_44b790]
            movsd XMM8,QWORD PTR [RIP+.L_44b7a8]
            movsd XMM7,QWORD PTR [RIP+.L_44b7b0]
            movq XMM6,QWORD PTR [RIP+.L_447130]
            movsd XMM5,QWORD PTR [RIP+.L_447b90]
            jmp .L_43892d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438928:

            sub EAX,1
            je .L_4389a0
.L_43892d:

            movapd XMM11,XMM3
            mulsd XMM11,XMM3
            movapd XMM2,XMM11
            movapd XMM12,XMM11
            mulsd XMM2,XMM10
            mulsd XMM12,XMM8
            addsd XMM2,XMM9
            addsd XMM12,XMM7
            mulsd XMM2,XMM11
            mulsd XMM11,XMM12
            addsd XMM2,XMM4
            addsd XMM11,XMM4
            mulsd XMM2,XMM3
            subsd XMM2,XMM1
            divsd XMM2,XMM11
            subsd XMM3,XMM2
            andpd XMM2,XMM6
            ucomisd XMM5,XMM2
            jbe .L_438928

            movapd XMM1,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438990:

            movapd XMM1,XMM2
            jmp .L_4388df
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4389a0:

            sub RSP,24

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM3
            call .L_404200

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM3
            ret 
.L_4389d0:

            test RDI,RDI
            je .L_438a00

            lea RAX,QWORD PTR [RIP+.L_4388b0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_438870]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438a00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438a2e

            lea RDX,QWORD PTR [RIP+.L_4388a0]
            lea RCX,QWORD PTR [RIP+.L_44b760]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_438a2e:

            add RSP,8
            ret 
.L_438a33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438a40:

            lea RDX,QWORD PTR [RIP+.L_4388b0]
            lea RCX,QWORD PTR [RIP+.L_438870]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_438a65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438a70:

            xor EAX,EAX
            ret 
.L_438a73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438a80:

            jmp .L_403770
.L_438a85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438a90:

            sub RSP,40
.L_438a94:

            mulsd XMM1,QWORD PTR [RIP+.L_448f68]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM0,XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            addsd XMM2,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_44b7f0]
            mulsd XMM1,QWORD PTR [RIP+.L_44b7f8]
            subsd XMM2,QWORD PTR [RIP+.L_4470f0]
            add RSP,40
.L_438afa:

            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            ret 
.L_438b03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438b10:

            sub RSP,24
.L_438b14:

            mulsd XMM1,QWORD PTR [RIP+.L_44b800]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447a90]
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_448f68]
            call cos@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RIP+.L_44b808]
            movapd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_4470f0]
            add RSP,24
.L_438b78:

            divsd XMM3,XMM2
            movapd XMM0,XMM3
            ret 
.L_438b81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438b90:

            test RDI,RDI
            je .L_438bc0

            lea RAX,QWORD PTR [RIP+.L_438b10]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_438a90]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438bc0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438bee

            lea RDX,QWORD PTR [RIP+.L_438a80]
            lea RCX,QWORD PTR [RIP+.L_44b7c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_438bee:

            add RSP,8
            ret 
.L_438bf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c00:

            lea RDX,QWORD PTR [RIP+.L_438b10]
            lea RCX,QWORD PTR [RIP+.L_438a90]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_438c25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c30:

            xor EAX,EAX
            ret 
.L_438c33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c40:

            jmp .L_403770
.L_438c45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c50:

            movapd XMM3,XMM0
            mulsd XMM0,XMM0
            sub RSP,24
.L_438c5c:

            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_44b850]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            subsd XMM0,QWORD PTR [RIP+.L_44acb8]
            mulsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44b860]
            mulsd XMM2,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_44b858]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_44b868]
            mulsd XMM2,XMM1
            mulsd XMM0,XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
.L_438ccb:

            mulsd XMM0,XMM3
            ret 
.L_438cd0:

            test RDI,RDI
            je .L_438cf0

            lea RAX,QWORD PTR [RIP+.L_438c50]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_438cf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438d1e

            lea RDX,QWORD PTR [RIP+.L_438c40]
            lea RCX,QWORD PTR [RIP+.L_44b820]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_438d1e:

            add RSP,8
            ret 
.L_438d23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438d30:

            lea RDX,QWORD PTR [RIP+.L_438c50]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_438d4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438d50:

            xor EAX,EAX
            ret 
.L_438d53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438d60:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            mulsd XMM3,QWORD PTR [RIP+.L_44b888]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b890]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            ret 
.L_438d95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438da0:

            movsd XMM4,QWORD PTR [RIP+.L_44b890]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM4
            movapd XMM3,XMM1
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            mulsd XMM3,QWORD PTR [RIP+.L_44b888]
            subsd XMM2,XMM3
            mulsd XMM2,XMM4
            divsd XMM0,XMM2
            ret 
.L_438dd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438de0:

            jmp .L_403770
.L_438de5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438df0:

            test RDI,RDI
            je .L_438e20

            lea RAX,QWORD PTR [RIP+.L_438da0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_438d60]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438e20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_438e4e

            lea RDX,QWORD PTR [RIP+.L_438de0]
            lea RCX,QWORD PTR [RIP+.L_44b870]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_438e4e:

            add RSP,8
            ret 
.L_438e53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438e60:

            lea RDX,QWORD PTR [RIP+.L_438da0]
            lea RCX,QWORD PTR [RIP+.L_438d60]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_438e85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438e90:

            xor EAX,EAX
            ret 
.L_438e93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438ea0:

            jmp .L_403770
.L_438ea5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438eb0:

            sub RSP,40
.L_438eb4:

            mulsd XMM0,QWORD PTR [RIP+.L_44b8b8]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_447a90]
            pxor XMM4,XMM4
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a88]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_438f38
.L_438f04:

            movsd XMM2,QWORD PTR [RIP+.L_4470e8]
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM2,XMM1
            ucomisd XMM4,XMM3
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b8c0]
            mulsd XMM1,XMM2
            jbe .L_438f33

            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
.L_438f33:

            add RSP,40
.L_438f37:

            ret 
.L_438f38:

            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_438f04
.L_438f63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438f70:

            sub RSP,24
.L_438f74:

            movapd XMM3,XMM1
            movq XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM2,QWORD PTR [RIP+.L_4470e8]
            movapd XMM4,XMM0
            andpd XMM3,XMM5
            divsd XMM3,QWORD PTR [RIP+.L_44b8c0]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44b8b8]
            mulsd XMM3,XMM2
            divsd XMM4,XMM3
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447a88]
            subsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_448f68]
            andpd XMM5,XMM2
            ucomisd XMM5,QWORD PTR [RIP+.L_4470f0]
            jb .L_439048

            ucomisd XMM5,QWORD PTR [RIP+.L_44b750]
            ja .L_439018

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_439078

            movsd XMM2,QWORD PTR [RIP+.L_447a20]
.L_438ff6:

            ucomisd XMM0,XMM1
            jbe .L_439004

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_439004:

            movapd XMM0,XMM4
            add RSP,24
.L_43900c:

            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439018:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call .L_413c90

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM4
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439048:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            jmp .L_438ff6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439078:

            movsd XMM2,QWORD PTR [RIP+.L_447a18]
            jmp .L_438ff6
.L_439085:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439090:

            test RDI,RDI
            je .L_4390c0

            lea RAX,QWORD PTR [RIP+.L_438f70]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_438eb0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4390c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4390ee

            lea RDX,QWORD PTR [RIP+.L_438ea0]
            lea RCX,QWORD PTR [RIP+.L_44b8a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4390ee:

            add RSP,8
            ret 
.L_4390f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439100:

            lea RDX,QWORD PTR [RIP+.L_438f70]
            lea RCX,QWORD PTR [RIP+.L_438eb0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_439125:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439130:

            xor EAX,EAX
            ret 
.L_439133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439140:

            test RDI,RDI
            je .L_439168

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43915e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43915e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439168:

            xor EAX,EAX
            ret 
.L_43916b:

            nop
            nop
            nop
            nop
            nop
.L_439170:

            jmp .L_439140
.L_439172:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439180:

            sub RSP,40
.L_439184:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RAX+24]
            mulsd XMM0,QWORD PTR [RAX]
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RAX+8]
            movsd XMM5,QWORD PTR [RAX+16]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+24],XMM3
            subsd XMM0,XMM2
            call .L_4427a0

            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
.L_4391e4:

            ret 
.L_4391e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4391f0:

            sub RSP,40
.L_4391f4:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,QWORD PTR [RAX+8]
            movsd XMM4,QWORD PTR [RAX+24]
            movsd XMM5,QWORD PTR [RAX]
            movsd XMM3,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movapd XMM2,XMM4
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            call .L_4427a0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RSP]
            ucomisd XMM2,QWORD PTR [RIP+.L_448740]
            jp .L_439268

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            je .L_439272
.L_439268:

            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM2
.L_439272:

            add RSP,40
.L_439276:

            ret 
.L_439277:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439280:

            push RBX
.L_439281:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4392f0

            mov RDX,QWORD PTR [RIP+.L_44b948]
            mov QWORD PTR [RBX+32],RAX
            mov RCX,QWORD PTR [RIP+.L_44b950]
            mov RSI,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_44b958]
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_4391f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439180]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_4392ec:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4392f0:

            mov RDI,RBX
            pop RBX
            jmp .L_439140
.L_4392f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439300:

            test RDI,RDI
            je .L_439310

            jmp .L_439280
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439310:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43933e

            lea RDX,QWORD PTR [RIP+.L_439170]
            lea RCX,QWORD PTR [RIP+.L_44b930]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43933e:

            add RSP,8
            ret 
.L_439343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439350:

            push RBX
.L_439351:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4393c0

            mov RDX,QWORD PTR [RIP+.L_44b960]
            mov RCX,QWORD PTR [RIP+.L_4470f0]
            mov RSI,QWORD PTR [RIP+.L_44b968]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+24],RSI
            lea RAX,QWORD PTR [RIP+.L_4391f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439180]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_4393b9:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4393c0:

            mov RDI,RBX
            pop RBX
            jmp .L_439140
.L_4393c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4393d0:

            test RDI,RDI
            je .L_4393e0

            jmp .L_439350
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4393e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43940e

            lea RDX,QWORD PTR [RIP+.L_439170]
            lea RCX,QWORD PTR [RIP+.L_44b8d0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43940e:

            add RSP,8
            ret 
.L_439413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439420:

            push RBX
.L_439421:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_439490

            mov RDX,QWORD PTR [RIP+.L_44b968]
            movsd XMM0,QWORD PTR [RIP+.L_44b970]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+16],0
            movsd QWORD PTR [RAX+8],XMM0
            movsd QWORD PTR [RAX],XMM0
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_4391f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439180]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_439485:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439490:

            mov RDI,RBX
            pop RBX
            jmp .L_439140
.L_439499:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4394a0:

            test RDI,RDI
            je .L_4394b0

            jmp .L_439420
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4394b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4394de

            lea RDX,QWORD PTR [RIP+.L_439170]
            lea RCX,QWORD PTR [RIP+.L_44b8f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4394de:

            add RSP,8
            ret 
.L_4394e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4394f0:

            push RBX
.L_4394f1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_439560

            mov RDX,QWORD PTR [RIP+.L_44b978]
            mov QWORD PTR [RBX+32],RAX
            mov RCX,QWORD PTR [RIP+.L_44b970]
            mov RSI,QWORD PTR [RIP+.L_449d30]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_44b968]
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_4391f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439180]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43955c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439560:

            mov RDI,RBX
            pop RBX
            jmp .L_439140
.L_439569:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439570:

            test RDI,RDI
            je .L_439580

            jmp .L_4394f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439580:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4395ae

            lea RDX,QWORD PTR [RIP+.L_439170]
            lea RCX,QWORD PTR [RIP+.L_44b910]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4395ae:

            add RSP,8
            ret 
.L_4395b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4395c0:

            xor EAX,EAX
            ret 
.L_4395c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4395d0:

            xor EAX,EAX
            ret 
.L_4395d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4395e0:

            xor EAX,EAX
            ret 
.L_4395e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4395f0:

            xor EAX,EAX
            ret 
.L_4395f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439600:

            test RDI,RDI
            je .L_439610

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439610:

            ret 
.L_439612:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439620:

            push R12
            push RBP
            push RBX
            mov EBX,6
            sub RSP,48
.L_43962d:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44b9a8]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44b9b0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b9b8]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b9c0]
            mulsd XMM1,XMM0
.L_43968c:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RIP+.L_4470e8]
            movsd XMM0,QWORD PTR [RSP+40]
            addsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_449e30]
            movapd XMM2,XMM3
            mulsd XMM3,XMM4
            mulsd XMM2,XMM0
            mulsd XMM0,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            subsd XMM2,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            divsd XMM2,XMM3
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM2
            ja .L_439738

            sub EBX,1
            jne .L_43968c

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_44b948]
            ja .L_439780

            movsd XMM1,QWORD PTR [RIP+.L_44b998]
            add RSP,48
.L_43972c:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439738:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_44b948]
            addsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44b998]
            mulsd XMM1,QWORD PTR [RSP+40]
            add RSP,48
.L_439779:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_439780:

            movsd XMM1,QWORD PTR [RIP+.L_44b9a0]
            add RSP,48
            pop RBX
            pop RBP
            pop R12
            ret 
.L_439791:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4397a0:

            push RBX
            mov RBX,RDI
            sub RSP,32

            mov RDI,QWORD PTR [RDI]
            divsd XMM1,QWORD PTR [RIP+.L_44b998]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call .L_442670

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_4470e8]
            mulsd XMM0,QWORD PTR [RIP+.L_44b948]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_44b9a8]
            call .L_442670

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_43983d:

            nop
            nop
            nop
.L_439840:

            test RDI,RDI
            je .L_439870

            lea RAX,QWORD PTR [RIP+.L_4397a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439620]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439870:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43989e

            lea RDX,QWORD PTR [RIP+.L_439600]
            lea RCX,QWORD PTR [RIP+.L_44b980]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43989e:

            add RSP,8
            ret 
.L_4398a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4398b0:

            lea RDX,QWORD PTR [RIP+.L_4397a0]
            lea RCX,QWORD PTR [RIP+.L_439620]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4398d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4398e0:

            xor EAX,EAX
            ret 
.L_4398e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4398f0:

            test RDI,RDI
            je .L_439900

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439900:

            ret 
.L_439902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439910:

            sub RSP,24
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RIP+.L_44b9f0]
            mulsd XMM0,QWORD PTR [RIP+.L_44b9e8]
            mulsd XMM0,QWORD PTR [RSP]
            add RSP,24
            ret 
.L_439950:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_44b9f8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_44ba00]
            add RSP,24
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_439998:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4399a0:

            test RDI,RDI
            je .L_4399d0

            lea RAX,QWORD PTR [RIP+.L_439950]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439910]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4399d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4399fe

            lea RDX,QWORD PTR [RIP+.L_4398f0]
            lea RCX,QWORD PTR [RIP+.L_44b9d0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4399fe:

            add RSP,8
            ret 
.L_439a03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a10:

            lea RDX,QWORD PTR [RIP+.L_439950]
            lea RCX,QWORD PTR [RIP+.L_439910]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_439a35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a40:

            xor EAX,EAX
            ret 
.L_439a43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a50:

            test RDI,RDI
            je .L_439a60

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439a60:

            ret 
.L_439a62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439a70:

            sub RSP,24
.L_439a74:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movapd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_44ba28]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_4427a0

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RIP+.L_44ba30]
            add RSP,24
.L_439ad2:

            ret 
.L_439ad3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439ae0:

            sub RSP,40
.L_439ae4:

            divsd XMM1,QWORD PTR [RIP+.L_44ba30]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4490a0]
            mulsd XMM2,XMM2
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM2
            jbe .L_439b48

            pxor XMM0,XMM0
            add RSP,40
.L_439b41:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439b48:

            pxor XMM3,XMM3
            sqrtsd XMM2,XMM0
            ucomisd XMM3,XMM0
            ja .L_439b6d
.L_439b56:

            mulsd XMM2,QWORD PTR [RIP+.L_44ba28]
            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,40
            divsd XMM0,XMM2
            ret 
.L_439b6d:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_439b56
.L_439b8c:

            nop
            nop
            nop
            nop
.L_439b90:

            test RDI,RDI
            je .L_439bc0

            lea RAX,QWORD PTR [RIP+.L_439ae0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439a70]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439bc0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_439bee

            lea RDX,QWORD PTR [RIP+.L_439a50]
            lea RCX,QWORD PTR [RIP+.L_44ba10]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_439bee:

            add RSP,8
            ret 
.L_439bf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c00:

            lea RDX,QWORD PTR [RIP+.L_439ae0]
            lea RCX,QWORD PTR [RIP+.L_439a70]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_439c25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c30:

            xor EAX,EAX
            ret 
.L_439c33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c40:

            test RDI,RDI
            je .L_439c68

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_439c5e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_439c5e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439c68:

            xor EAX,EAX
            ret 
.L_439c6b:

            nop
            nop
            nop
            nop
            nop
.L_439c70:

            jmp .L_439c40
.L_439c72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439c80:

            push RBX
            mov RBX,RDI
            sub RSP,32

            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RAX+8]
            mulsd XMM3,XMM2
            mulsd XMM2,XMM4
            movsd XMM5,QWORD PTR [RAX]
            mulsd XMM4,QWORD PTR [RSP+24]
            add RSP,32

            mulsd XMM1,XMM5
            movapd XMM0,XMM3
            addsd XMM2,XMM5
            pop RBX
            divsd XMM0,XMM2
            addsd XMM1,XMM4
            ret 
.L_439cec:

            nop
            nop
            nop
            nop
.L_439cf0:

            push R12
            push RBP
            push RBX
            pxor XMM7,XMM7
            sub RSP,64
.L_439cfc:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+32],XMM1
            movsd XMM4,QWORD PTR [RBX]
            ucomisd XMM4,XMM7
            jp .L_439d1c

            je .L_439e10
.L_439d1c:

            movsd XMM1,QWORD PTR [RSP+32]
            lea R12,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RBX+8]
            mov EBX,10
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439d40:

            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM0,XMM4
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM3,XMM2
            subsd XMM0,QWORD PTR [RSP+32]
            addsd XMM3,XMM4
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM0
            ja .L_439e58

            sub EBX,1
            jne .L_439d40

            pxor XMM7,XMM7
            movsd XMM0,QWORD PTR [RIP+.L_448438]
            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM7,QWORD PTR [RSP+32]
            jbe .L_439dec

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
.L_439dec:

            mulsd XMM2,XMM0
            addsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,64
.L_439dfe:

            pop RBX
            pop RBP
            pop R12
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439e10:

            mov RDI,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_442670

            movsd XMM4,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_439dec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439e58:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_439dec
.L_439e7e:

            nop
            nop
.L_439e80:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_439e93:

            call .L_403740

            test RAX,RAX
            je .L_439eec

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b156]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            ja .L_439edf

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM1
            jbe .L_439f00
.L_439edf:

            mov ESI,4294967256
            mov RDI,RBX
            call .L_413c90
.L_439eec:

            add RSP,24
.L_439ef0:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_439c40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439f00:

            subsd XMM1,XMM0
            lea RAX,QWORD PTR [RIP+.L_439cf0]
            movsd QWORD PTR [RBP+8],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439c80]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_439f34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439f40:

            test RDI,RDI
            je .L_439f50

            jmp .L_439e80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439f50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_439f7e

            lea RDX,QWORD PTR [RIP+.L_439c70]
            lea RCX,QWORD PTR [RIP+.L_44ba40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_439f7e:

            add RSP,8
            ret 
.L_439f83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439f90:

            xor EAX,EAX
            ret 
.L_439f93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439fa0:

            movapd XMM2,XMM1
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44ba90]
            mulsd XMM2,XMM1
            mulsd XMM6,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_44ba98]
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM3,XMM2
            mulsd XMM4,XMM6
            movapd XMM7,XMM5
            mulsd XMM2,QWORD PTR [RIP+.L_44acb8]
            subsd XMM7,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44baa0]
            mulsd XMM4,XMM6
            mulsd XMM0,XMM7
            addsd XMM2,XMM5
            subsd XMM3,XMM4
            mulsd XMM1,XMM2
            mulsd XMM0,XMM3
            ret 
.L_43a001:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a010:

            test RDI,RDI
            je .L_43a020

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a020:

            ret 
.L_43a022:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a030:

            test RDI,RDI
            je .L_43a060

            lea RAX,QWORD PTR [RIP+.L_439fa0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a060:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43a08e

            lea RDX,QWORD PTR [RIP+.L_43a010]
            lea RCX,QWORD PTR [RIP+.L_44ba60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43a08e:

            add RSP,8
            ret 
.L_43a093:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a0a0:

            lea RDX,QWORD PTR [RIP+.L_439fa0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43a0c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a0d0:

            xor EAX,EAX
            ret 
.L_43a0d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a0e0:

            test RDI,RDI
            je .L_43a108

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43a0fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43a0fe:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a108:

            xor EAX,EAX
            ret 
.L_43a10b:

            nop
            nop
            nop
            nop
            nop
.L_43a110:

            jmp .L_43a0e0
.L_43a112:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a120:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43a129:

            mov RBX,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM3,QWORD PTR [RBX+24]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+32],XMM5
            call sin@PLT

            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RBP+168]
            xorpd XMM1,XMM4
            xorpd XMM0,XMM4
            movaps XMMWORD PTR [RSP],XMM4
            call .L_445330

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            call cosh@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            call asin@PLT

            movapd XMM4,XMMWORD PTR [RSP]
            pxor XMM2,XMM2
            xorpd XMM0,XMM4
            pxor XMM1,XMM1
            call .L_445330

            call log@PLT

            movsd XMM1,QWORD PTR [RBX+32]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RBX+48]
            mulsd XMM2,XMM1
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP],XMM7
            addsd XMM2,QWORD PTR [RBX+40]
            mulsd XMM2,QWORD PTR [RBP+144]
            movsd QWORD PTR [RSP+16],XMM2
            call sinh@PLT

            divsd XMM0,QWORD PTR [RSP+24]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            addsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RBP+144]
            add RSP,72
.L_43a268:

            pop RBX
            pop RBP
            ret 
.L_43a26b:

            nop
            nop
            nop
            nop
            nop
.L_43a270:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43a279:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM0,QWORD PTR [RDI+128]
            movsd QWORD PTR [RSP+8],XMM1
            subsd XMM0,QWORD PTR [RBX+40]
            divsd XMM0,QWORD PTR [RBX+32]
            call sinh@PLT

            movsd XMM2,QWORD PTR [RBP+128]
            lea RDI,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            movsd XMM4,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RBX+48]
            divsd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+56]
            divsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM3
            call atan@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+40]
            divsd XMM0,XMM4
            call cosh@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movq XMM4,QWORD PTR [RIP+.L_447ae0]
            pxor XMM2,XMM2
            xorpd XMM0,XMM4
            pxor XMM1,XMM1
            movaps XMMWORD PTR [RSP+16],XMM4
            call .L_445330

            call log@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBP+168]
            divsd XMM3,XMM2
            movsd QWORD PTR [RSP],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call exp@PLT

            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            call .L_444e90

            movapd XMM4,XMMWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,72
.L_43a3b8:

            xorpd XMM1,XMM4
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
.L_43a3c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a3d0:

            push RBP
            push RBX
            mov ESI,56
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_43a3e3:

            call .L_403740

            test RAX,RAX
            je .L_43a5d8

            movsd XMM0,QWORD PTR [RBX+328]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            movsd XMM5,QWORD PTR [RBX+176]
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447a88]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RBX+176]
            pxor XMM6,XMM6
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43a5f8
.L_43a460:

            movsd QWORD PTR [RBP+24],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RBP+8],XMM0
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            call .L_445330

            call log@PLT

            movsd XMM2,QWORD PTR [RBX+336]
            movsd XMM7,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RBX+168]
            call .L_445330

            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RBX+176]
            pxor XMM4,XMM4
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mulsd XMM0,QWORD PTR [RBX+128]
            movsd QWORD PTR [RBP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            ja .L_43a5e6
.L_43a555:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RIP+.L_43a270]
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+40],0
            mulsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            divsd XMM1,XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP+32],XMM1
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mulsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+48],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43a120]
            mov QWORD PTR [RBX+40],RAX
            add RSP,40
.L_43a5cf:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a5d8:

            add RSP,40
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43a0e0
.L_43a5e6:

            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            jmp .L_43a555
.L_43a5f8:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43a460
.L_43a60e:

            nop
            nop
.L_43a610:

            test RDI,RDI
            je .L_43a620

            jmp .L_43a3d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a620:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43a64e

            lea RDX,QWORD PTR [RIP+.L_43a110]
            lea RCX,QWORD PTR [RIP+.L_44bac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43a64e:

            add RSP,8
            ret 
.L_43a653:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a660:

            xor EAX,EAX
            ret 
.L_43a663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a670:

            test RDI,RDI
            je .L_43a6a8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43a69f

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_43a693

            call .L_403730

            mov RAX,QWORD PTR [RBX+32]
.L_43a693:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43a69f:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a6a8:

            xor EAX,EAX
            ret 
.L_43a6ab:

            nop
            nop
            nop
            nop
            nop
.L_43a6b0:

            jmp .L_43a670
.L_43a6b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a6c0:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43a6c8:

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM2,XMM3
            mov RDI,QWORD PTR [RAX]
            movapd XMM1,XMM4
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM4
            call .L_4447b0

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            mulsd XMM2,XMM4
            pxor XMM4,XMM4
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43a769
.L_43a75b:

            divsd XMM3,XMM2
            add RSP,48
.L_43a763:

            pop RBX
            movapd XMM0,XMM3
            ret 
.L_43a769:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43a75b
.L_43a792:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a7a0:

            push RBX
            pxor XMM4,XMM4
            lea RAX,QWORD PTR [RIP+.L_43aac0]
            sub RSP,16
.L_43a7b0:

            mov RBX,QWORD PTR [RDI+32]
            mov QWORD PTR [RDI+176],0
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43a950]
            movsd XMM2,QWORD PTR [RBX+8]
            mov QWORD PTR [RDI+40],RAX
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43a806
.L_43a7f2:

            movsd QWORD PTR [RBX+32],XMM1
            divsd XMM1,XMM2
            movsd QWORD PTR [RBX+24],XMM1
            add RSP,16
.L_43a804:

            pop RBX
            ret 
.L_43a806:

            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM3,QWORD PTR [RBX+8]
            movapd XMM2,XMM3
            jmp .L_43a7f2
.L_43a82c:

            nop
            nop
            nop
            nop
.L_43a830:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43a838:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            mov RSI,QWORD PTR [RAX]
            call .L_4447f0

            movapd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM3,XMM0
            ja .L_43a8c0

            movapd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM3,XMM2
            jbe .L_43a890

            add RSP,48
.L_43a88c:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_43a890:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call .L_413c90

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,48
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a8c0:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBX+176]
            pxor XMM4,XMM4
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43a928
.L_43a915:

            movsd XMM0,QWORD PTR [RSP]
            add RSP,48
.L_43a91e:

            pop RBX
            mulsd XMM0,XMM2
            divsd XMM0,XMM3
            ret 
.L_43a928:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43a915
.L_43a94d:

            nop
            nop
            nop
.L_43a950:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,48
.L_43a963:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM7,QWORD PTR [RBP+8]
            movsd XMM3,QWORD PTR [RBP+16]
            ucomisd XMM7,QWORD PTR [RIP+.L_448740]
            movsd QWORD PTR [RSP+8],XMM7
            jp .L_43a98d

            je .L_43aa40
.L_43a98d:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            lea R13,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM2
            lea R12,QWORD PTR [RSP+32]
            mov EBX,8
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM0
.L_43a9c5:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM4
            movsd XMM6,QWORD PTR [RIP+.L_449e30]
            addsd XMM4,QWORD PTR [RSP+32]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM4
            subsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM0
            ja .L_43aa4c

            sub EBX,1
            jne .L_43a9c5

            mov ESI,4294967276
            mov RDI,R14
            call .L_413c90

            pxor XMM0,XMM0
            movapd XMM2,XMM0
            jmp .L_43aa79
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43aa40:

            ucomisd XMM3,QWORD PTR [RIP+.L_4470f0]
            jp .L_43aa90

            jne .L_43aa90
.L_43aa4c:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RBP+24]
            mulsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM0,XMM1
.L_43aa79:

            add RSP,48
.L_43aa7d:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43aa90:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            mov RDI,QWORD PTR [R14]
            mulsd XMM0,XMM3
            call .L_442670

            movsd XMM5,QWORD PTR [RBP+8]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM5
            jmp .L_43aa4c
.L_43aac0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM1
            sub RSP,40
.L_43aacd:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM2,QWORD PTR [RBX+8]
            divsd XMM3,QWORD PTR [RBX+32]
            ucomisd XMM2,QWORD PTR [RIP+.L_448740]
            movsd XMM1,QWORD PTR [RBX+16]
            jp .L_43ab90

            jne .L_43ab90

            ucomisd XMM1,QWORD PTR [RIP+.L_4470f0]
            jp .L_43ab50

            jne .L_43ab50

            movapd XMM1,XMM3
.L_43ab09:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            addsd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+24]
            add RSP,40
.L_43ab3c:

            pop RBX
            pop RBP
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ab50:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
.L_43ab6b:

            divsd XMM0,XMM1
            mov RDI,QWORD PTR [RBP]
            call .L_442670

            movsd XMM2,QWORD PTR [RBX+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_43ab09
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ab90:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            addsd XMM0,XMM4
            jmp .L_43ab6b
.L_43abcf:

            nop
.L_43abd0:

            test RDI,RDI
            je .L_43ac08

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_43abeb

            mov ESI,4294967257
            call .L_404200
.L_43abeb:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_43abf9

            call .L_403770
.L_43abf9:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ac08:

            xor EAX,EAX
            ret 
.L_43ac0b:

            nop
            nop
            nop
            nop
            nop
.L_43ac10:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_43ac23:

            call .L_403740

            test RAX,RAX
            je .L_43aca8

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4446c0

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_43aca8

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_43ac5a

            je .L_43ac80
.L_43ac5a:

            lea RAX,QWORD PTR [RIP+.L_43a830]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43a6c0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,8
.L_43ac74:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ac80:

            mov RAX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBP+8],0
            mov RDI,RBX
            mov QWORD PTR [RBP+16],RAX
            call .L_43a7a0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43aca8:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43a670
.L_43acb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43acc0:

            test RDI,RDI
            je .L_43acd0

            jmp .L_43ac10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43acd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43acfe

            lea RDX,QWORD PTR [RIP+.L_43a6b0]
            lea RCX,QWORD PTR [RIP+.L_44bba0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43acfe:

            add RSP,8
            ret 
.L_43ad03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad10:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43ad50

            mov RDX,QWORD PTR [RIP+.L_4470f0]
            mov RCX,QWORD PTR [RIP+.L_44bc10]
            mov RDI,RBX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            call .L_43a7a0

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_43ad50:

            mov RDI,RBX
            pop RBX
            jmp .L_43a670
.L_43ad59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad60:

            test RDI,RDI
            je .L_43ad70

            jmp .L_43ad10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ad70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43ad9e

            lea RDX,QWORD PTR [RIP+.L_43a6b0]
            lea RCX,QWORD PTR [RIP+.L_44bb80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ad9e:

            add RSP,8
            ret 
.L_43ada3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43adb0:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43adf0

            mov RDX,QWORD PTR [RIP+.L_4470f8]
            mov RCX,QWORD PTR [RIP+.L_44bc18]
            mov RDI,RBX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            call .L_43a7a0

            mov RAX,RBX
            pop RBX
            ret 

            nop
.L_43adf0:

            mov RDI,RBX
            pop RBX
            jmp .L_43a670
.L_43adf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ae00:

            test RDI,RDI
            je .L_43ae10

            jmp .L_43adb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ae10:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43ae3e

            lea RDX,QWORD PTR [RIP+.L_43a6b0]
            lea RCX,QWORD PTR [RIP+.L_44bb40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ae3e:

            add RSP,8
            ret 
.L_43ae43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ae50:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_43ae63:

            call .L_403740

            test RAX,RAX
            je .L_43aeb0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44bb22]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            je .L_43aea2

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447430]
            call .L_403e60

            test EAX,EAX
            jne .L_43aec0
.L_43aea2:

            mov RDI,RBX
.L_43aea5:

            add RSP,24
.L_43aea9:

            pop RBX
            pop RBP
            jmp .L_43abd0
.L_43aeb0:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43a670
          .byte 0x66
          .byte 0x90
.L_43aec0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b156]
            call .L_403e60

            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_4475cd]
            mov QWORD PTR [RBP+16],RAX
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            ucomisd XMM1,QWORD PTR [RBP+16]
            movsd QWORD PTR [RBP+8],XMM0
            ja .L_43aea5

            ucomisd XMM1,XMM0
            ja .L_43aea5

            call .L_43a7a0

            add RSP,24
.L_43af17:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_43af1d:

            nop
            nop
            nop
.L_43af20:

            test RDI,RDI
            je .L_43af30

            jmp .L_43ae50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43af30:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43af5e

            lea RDX,QWORD PTR [RIP+.L_43a6b0]
            lea RCX,QWORD PTR [RIP+.L_44bbe0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43af5e:

            add RSP,8
            ret 
.L_43af63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43af70:

            xor EAX,EAX
            ret 
.L_43af73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43af80:

            xor EAX,EAX
            ret 
.L_43af83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43af90:

            xor EAX,EAX
            ret 
.L_43af93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43afa0:

            xor EAX,EAX
            ret 
.L_43afa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43afb0:

            sub RSP,24
.L_43afb4:

            movapd XMM2,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RIP+.L_44bc50]
            ucomisd XMM3,XMM1
            jae .L_43b010

            mov RAX,QWORD PTR [RAX+8]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_44bc40]
            ucomisd XMM2,QWORD PTR [RIP+.L_448740]
            jb .L_43b028
.L_43affe:

            subsd XMM1,XMM3
            add RSP,24
.L_43b006:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b010:

            mov RAX,QWORD PTR [RAX]
            movapd XMM1,XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b028:

            movsd XMM3,QWORD PTR [RIP+.L_44bc48]
            jmp .L_43affe
.L_43b032:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b040:

            movapd XMM2,XMM1
            sub RSP,8
            movsd XMM3,QWORD PTR [RIP+.L_44bc50]
            mov RAX,QWORD PTR [RDI+32]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM2
            jb .L_43b070

            mov RAX,QWORD PTR [RAX]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            add RSP,8
            ret 
.L_43b070:

            ucomisd XMM1,QWORD PTR [RIP+.L_448740]
            movsd XMM2,QWORD PTR [RIP+.L_44bc40]
            jae .L_43b08a

            movsd XMM2,QWORD PTR [RIP+.L_44bc48]
.L_43b08a:

            mov RAX,QWORD PTR [RAX+8]
            addsd XMM1,XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            add RSP,8
            ret 
.L_43b09d:

            nop
            nop
            nop
.L_43b0a0:

            test RDI,RDI
            je .L_43b0f0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43b0e1

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_43b0c3

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_43b0c3:

            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            je .L_43b0d5

            call .L_403770

            mov RAX,QWORD PTR [RBX+32]
.L_43b0d5:

            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43b0e1:

            jmp .L_403770
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b0f0:

            xor EAX,EAX
            ret 
.L_43b0f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b100:

            jmp .L_43b0a0
.L_43b102:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b110:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,16
            mov EDI,1
            sub RSP,8
.L_43b123:

            call .L_403740

            test RAX,RAX
            je .L_43b1c0

            xor EDI,EDI
            mov QWORD PTR [RBP+32],RAX
            mov QWORD PTR [RBP+176],0
            mov RBX,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43b1c0

            xor EDI,EDI
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_43b1c0

            mov RDI,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBP]
            mov QWORD PTR [RDI],RDX
            mov RDX,QWORD PTR [RBP]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RAX],RDX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43b1c0

            mov RDI,QWORD PTR [RBX+8]
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_43b1c0

            lea RAX,QWORD PTR [RIP+.L_43afb0]
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_43b040]
            mov QWORD PTR [RBP+48],RAX
            add RSP,8
.L_43b1b7:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b1c0:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_43b0a0
.L_43b1ce:

            nop
            nop
.L_43b1d0:

            test RDI,RDI
            je .L_43b1e0

            jmp .L_43b110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b1e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43b20e

            lea RDX,QWORD PTR [RIP+.L_43b100]
            lea RCX,QWORD PTR [RIP+.L_44bc20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43b20e:

            add RSP,8
            ret 
.L_43b213:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b220:

            xor EAX,EAX
            ret 
.L_43b223:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b230:

            ucomisd XMM1,QWORD PTR [RIP+.L_44bcd0]
            push RBX
            mov RDX,QWORD PTR [RDI+32]
            jb .L_43b280

            movsd XMM2,QWORD PTR [RIP+.L_44bcd8]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
.L_43b250:

            cdqe 
            lea RBX,QWORD PTR [RDX+RAX*8]
            mov RAX,QWORD PTR [RBX]
            subsd XMM0,QWORD PTR [RAX+328]
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            mov RAX,QWORD PTR [RBX]
            pop RBX
            addsd XMM0,QWORD PTR [RAX+344]
            addsd XMM1,QWORD PTR [RAX+352]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43b280:

            ucomisd XMM1,QWORD PTR [RIP+.L_448740]
            jb .L_43b2a0

            movsd XMM2,QWORD PTR [RIP+.L_44bcd8]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,2
            jmp .L_43b250
.L_43b2a0:

            ucomisd XMM1,QWORD PTR [RIP+.L_44bce0]
            jb .L_43b2f0

            movsd XMM2,QWORD PTR [RIP+.L_44bce8]
            mov EAX,4
            ucomisd XMM2,XMM0
            jae .L_43b250

            movsd XMM2,QWORD PTR [RIP+.L_44bcf0]
            mov EAX,5
            ucomisd XMM2,XMM0
            jae .L_43b250

            movsd XMM2,QWORD PTR [RIP+.L_44bcf8]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,6
            jmp .L_43b250
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b2f0:

            movsd XMM2,QWORD PTR [RIP+.L_44bce8]
            mov EAX,8
            ucomisd XMM2,XMM0
            jae .L_43b250

            movsd XMM2,QWORD PTR [RIP+.L_44bcf0]
            mov EAX,9
            ucomisd XMM2,XMM0
            jae .L_43b250

            movsd XMM2,QWORD PTR [RIP+.L_44bcf8]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,10
            jmp .L_43b250
.L_43b337:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b340:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_44a7f8]
            movsd XMM3,QWORD PTR [RIP+.L_447cd0]
            addsd XMM2,QWORD PTR [RAX+96]
            movapd XMM4,XMM2
            addsd XMM4,XMM3
            ucomisd XMM1,XMM4
            ja .L_43b371

            subsd XMM3,XMM2
            ucomisd XMM3,XMM1
            jbe .L_43b380
.L_43b371:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0x90
.L_43b380:

            push RBP
.L_43b381:

            push RBX
            sub RSP,8
.L_43b386:

            ucomisd XMM1,QWORD PTR [RIP+.L_44bcd0]
            jae .L_43b410

            ucomisd XMM1,QWORD PTR [RIP+.L_448740]
            jb .L_43b5e0

            movsd XMM2,QWORD PTR [RIP+.L_44bcd8]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,3
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,4
.L_43b3c0:

            movsxd RDX,EDX
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [RBP]
            subsd XMM0,QWORD PTR [RAX+344]
            mov RDI,RAX
            subsd XMM1,QWORD PTR [RAX+352]
            call QWORD PTR [RAX+48]

            mov RAX,QWORD PTR [RBP]
            cmp EBX,12
            movapd XMM2,XMM1
            addsd XMM0,QWORD PTR [RAX+328]
            ja .L_43b598

            lea RDX,QWORD PTR [RIP+.L_44bc60]
            movsxd RAX,DWORD PTR [RDX+RBX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b410:

            movsd XMM2,QWORD PTR [RIP+.L_44bcd8]
            xor EDX,EDX
            ucomisd XMM2,XMM0
            setb DL
            sbb EBX,EBX
            not EBX
            add EBX,2
            jmp .L_43b3c0

            nop
            nop
            nop
            nop
            nop
            nop
.L_43b430:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd00]
            jb .L_43b468

            movsd XMM2,QWORD PTR [RIP+.L_44bd50]
            ucomisd XMM2,XMM0
            jb .L_43b468
.L_43b448:

            add RSP,8
.L_43b44c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_43b450:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd58]
            jb .L_43b468

            movsd XMM2,QWORD PTR [RIP+.L_44bd60]
            ucomisd XMM2,XMM0
            jae .L_43b448
.L_43b468:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,8
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b480:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd68]
            jb .L_43b468

            movsd XMM2,QWORD PTR [RIP+.L_44bd70]
            ucomisd XMM2,XMM0
            jae .L_43b448

            jmp .L_43b468
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b4a0:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd78]
            jb .L_43b468
.L_43b4aa:

            movsd XMM2,QWORD PTR [RIP+.L_44bd30]
            ucomisd XMM2,XMM0
            jae .L_43b448

            jmp .L_43b468
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b4c0:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd10]
            jb .L_43b4dc

            movsd XMM3,QWORD PTR [RIP+.L_44bd30]
            ucomisd XMM3,XMM0
            jae .L_43b448
.L_43b4dc:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd00]
            jb .L_43b510

            movsd XMM3,QWORD PTR [RIP+.L_44bd38]
            ucomisd XMM3,XMM0
            jb .L_43b510

            ucomisd XMM2,QWORD PTR [RIP+.L_44bd40]
            jb .L_43b510

            movsd XMM3,QWORD PTR [RIP+.L_44bd28]
            ucomisd XMM3,XMM2
            jae .L_43b448
.L_43b510:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd48]
            jb .L_43b468

            movsd XMM3,QWORD PTR [RIP+.L_44bd08]
            ucomisd XMM3,XMM0
            jb .L_43b468
.L_43b530:

            ucomisd XMM2,QWORD PTR [RIP+.L_44bd20]
            jb .L_43b468

            movsd XMM3,QWORD PTR [RIP+.L_44bd28]
            ucomisd XMM3,XMM2
            jae .L_43b448

            jmp .L_43b468
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b558:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd10]
            jb .L_43b468

            jmp .L_43b4aa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b570:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd00]
            jb .L_43b468

            movsd XMM2,QWORD PTR [RIP+.L_44bd08]
            ucomisd XMM2,XMM0
            jae .L_43b448

            jmp .L_43b468
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b598:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd00]
            jb .L_43b5b4

            movsd XMM3,QWORD PTR [RIP+.L_44bd08]
            ucomisd XMM3,XMM0
            jae .L_43b448
.L_43b5b4:

            ucomisd XMM0,QWORD PTR [RIP+.L_44bd10]
            jb .L_43b468

            movsd XMM3,QWORD PTR [RIP+.L_44bd18]
            ucomisd XMM3,XMM0
            jb .L_43b468

            jmp .L_43b530
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b5e0:

            ucomisd XMM1,QWORD PTR [RIP+.L_44bce0]
            movsd XMM2,QWORD PTR [RIP+.L_44bce8]
            jb .L_43b630

            ucomisd XMM2,XMM0
            jae .L_43b670

            movsd XMM2,QWORD PTR [RIP+.L_44bcf0]
            ucomisd XMM2,XMM0
            jae .L_43b68f

            movsd XMM2,QWORD PTR [RIP+.L_44bcf8]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,7
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,8
            jmp .L_43b3c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b630:

            ucomisd XMM2,XMM0
            jae .L_43b680

            movsd XMM2,QWORD PTR [RIP+.L_44bcf0]
            ucomisd XMM2,XMM0
            jae .L_43b69e

            movsd XMM2,QWORD PTR [RIP+.L_44bcf8]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,11
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,12
            jmp .L_43b3c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b670:

            mov EDX,4
            mov EBX,5
            jmp .L_43b3c0
          .byte 0x90
.L_43b680:

            mov EDX,8
            mov EBX,9
            jmp .L_43b3c0
.L_43b68f:

            mov EDX,5
            mov EBX,6
            jmp .L_43b3c0
.L_43b69e:

            mov EDX,9
            mov EBX,10
            jmp .L_43b3c0
.L_43b6ad:

            nop
            nop
            nop
.L_43b6b0:

            test RDI,RDI
            je .L_43b701

            push RBP
            push RBX
            mov RBP,RDI
            xor EBX,EBX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_43b6f3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b6d0:

            movsxd RAX,EBX
            mov RAX,QWORD PTR [RDI+RAX*8]
            test RAX,RAX
            je .L_43b6e6

            mov RDI,RAX
            call QWORD PTR [RAX+112]

            mov RDI,QWORD PTR [RBP+32]
.L_43b6e6:

            add EBX,1
            cmp EBX,12
            jne .L_43b6d0

            call .L_403770
.L_43b6f3:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_403770
.L_43b701:

            xor EAX,EAX
            ret 
.L_43b704:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b710:

            jmp .L_43b6b0
.L_43b712:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b720:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM4,XMM4
            mov ESI,104
            sub RSP,40
.L_43b732:

            mov EDI,1
            movsd XMM5,QWORD PTR [RIP+.L_44bcd0]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            call .L_403740

            test RAX,RAX
            je .L_43bbc8

            xor EDI,EDI
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_44bce8]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RIP+.L_44bd80]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_44bd88]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_44bd90]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_449b28]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43acc0

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RIP+.L_44bd98]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,RAX
            movapd XMM0,XMM3
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_44bce8]
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM1,XMM2
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            call QWORD PTR [RAX+40]

            movsd XMM2,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM1,XMM2
            mov RDI,RAX
            movapd XMM0,XMM3
            call QWORD PTR [RAX+40]

            subsd XMM1,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX]
            xor EDI,EDI
            movsd QWORD PTR [RBX+96],XMM1
            movsd QWORD PTR [RAX+352],XMM1
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_43bbc8

            mov RDX,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+96]
            xor EDI,EDI
            movsd QWORD PTR [RAX+352],XMM0
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_44bd80]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_43bbc8

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RSI,QWORD PTR [RIP+.L_44bd88]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            movsd QWORD PTR [RAX+352],XMM0
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_43bbc8

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RCX,QWORD PTR [RIP+.L_44bd90]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            movsd QWORD PTR [RAX+352],XMM0
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            je .L_43bbc8

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RCX,QWORD PTR [RIP+.L_449b28]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            movsd QWORD PTR [RAX+352],XMM0
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+88],RAX
            je .L_43bbc8

            mov RDI,RAX
            call .L_43d0f0

            test RAX,RAX
            mov QWORD PTR [RBX+88],RAX
            je .L_43bbc8

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_44bd98]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            movsd QWORD PTR [RAX+352],XMM0
            lea RAX,QWORD PTR [RIP+.L_43b340]
            mov QWORD PTR [RBP+176],0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43b230]
            mov QWORD PTR [RBP+40],RAX
            add RSP,40
.L_43bbbf:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bbc8:

            add RSP,40
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_43b6b0
.L_43bbd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bbe0:

            test RDI,RDI
            je .L_43bbf0

            jmp .L_43b720
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bbf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43bc1e

            lea RDX,QWORD PTR [RIP+.L_43b710]
            lea RCX,QWORD PTR [RIP+.L_44bca0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43bc1e:

            add RSP,8
            ret 
.L_43bc23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bc30:

            xor EAX,EAX
            ret 
.L_43bc33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bc40:

            test RDI,RDI
            je .L_43bc50

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bc50:

            ret 
.L_43bc52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bc60:

            push R12
            push RBP
            push RBX
            sub RSP,48
.L_43bc68:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM1
            ja .L_43bd70

            movsd XMM2,QWORD PTR [RIP+.L_44bdd8]
.L_43bc99:

            mulsd XMM0,XMM2
            mov EBX,20
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_43bcbd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43bcb8:

            sub EBX,1
            je .L_43bd14
.L_43bcbd:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM2
            jbe .L_43bcb8
.L_43bd14:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            mov RDI,RBP
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            pxor XMM6,XMM6
            mulsd XMM0,QWORD PTR [RIP+.L_44bdf0]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            ucomisd XMM6,XMM1
            mulsd XMM0,QWORD PTR [RSP+32]
            ja .L_43bd80

            movsd XMM1,QWORD PTR [RIP+.L_44bde8]
            add RSP,48
.L_43bd67:

            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            pop R12
            ret 
.L_43bd70:

            movsd XMM2,QWORD PTR [RIP+.L_44bdd0]
            jmp .L_43bc99
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bd80:

            movsd XMM1,QWORD PTR [RIP+.L_44bde0]
            add RSP,48
            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            pop R12
            ret 
.L_43bd95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bda0:

            pxor XMM5,XMM5
            sub RSP,72
.L_43bda8:

            movapd XMM3,XMM0
            movapd XMM0,XMM1
            ucomisd XMM5,XMM1
            ja .L_43be58

            mulsd XMM0,QWORD PTR [RIP+.L_44be08]
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            movapd XMM2,XMM0
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            jbe .L_43bfa0
.L_43bde4:

            ucomisd XMM2,QWORD PTR [RIP+.L_44be10]
            ja .L_43bf50

            ucomisd XMM0,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_447a78]
            jbe .L_43bf70
.L_43be04:

            mulsd XMM3,QWORD PTR [RIP+.L_44be18]
            ucomisd XMM5,XMM1
            divsd XMM3,QWORD PTR [RIP+.L_448438]
            jbe .L_43c031

            mulsd XMM2,QWORD PTR [RIP+.L_44bdf8]
.L_43be26:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call .L_413c90

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            add RSP,72
.L_43be4c:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43be58:

            mulsd XMM0,QWORD PTR [RIP+.L_44be20]
            movq XMM4,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            movapd XMM2,XMM0
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            ja .L_43bde4

            movaps XMMWORD PTR [RSP+48],XMM4
            mov QWORD PTR [RSP+24],RDI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_44be18]
            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_44bdf8]
            addsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM4,XMMWORD PTR [RSP+48]
.L_43bf0e:

            mulsd XMM2,XMM1
            andpd XMM4,XMM2
            ucomisd XMM4,XMM6
            jbe .L_43bf80

            ucomisd XMM4,QWORD PTR [RIP+.L_44be10]
            ja .L_43be26

            ucomisd XMM2,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            ja .L_43bf40

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
.L_43bf40:

            movapd XMM0,XMM3
            add RSP,72
.L_43bf48:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bf50:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,72
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bf70:

            movsd XMM2,QWORD PTR [RIP+.L_447a60]
            jmp .L_43be04

            nop
            nop
            nop
.L_43bf80:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_43bf40
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bfa0:

            movaps XMMWORD PTR [RSP+48],XMM4
            mov QWORD PTR [RSP+24],RDI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_44be18]
            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_44be00]
            mov RDI,QWORD PTR [RSP+24]
            addsd XMM2,XMM0
            movapd XMM4,XMMWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_43bf0e
.L_43c031:

            mulsd XMM2,QWORD PTR [RIP+.L_44be00]
            jmp .L_43be26
.L_43c03e:

            nop
            nop
.L_43c040:

            test RDI,RDI
            je .L_43c070

            lea RAX,QWORD PTR [RIP+.L_43bda0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43bc60]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c070:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43c09e

            lea RDX,QWORD PTR [RIP+.L_43bc40]
            lea RCX,QWORD PTR [RIP+.L_44bda0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43c09e:

            add RSP,8
            ret 
.L_43c0a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c0b0:

            lea RDX,QWORD PTR [RIP+.L_43bda0]
            lea RCX,QWORD PTR [RIP+.L_43bc60]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43c0d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c0e0:

            xor EAX,EAX
            ret 
.L_43c0e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c0f0:

            test RDI,RDI
            je .L_43c118

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43c10e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43c10e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c118:

            xor EAX,EAX
            ret 
.L_43c11b:

            nop
            nop
            nop
            nop
            nop
.L_43c120:

            jmp .L_43c0f0
.L_43c122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c130:

            push RBX
            movapd XMM3,XMM1
            sub RSP,16
.L_43c139:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM4,QWORD PTR [RIP+.L_449d28]
            subsd XMM3,QWORD PTR [RBX]
            movapd XMM2,XMM3
            andpd XMM2,XMM5
            ucomisd XMM4,XMM2
            ja .L_43c1a8

            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            pxor XMM6,XMM6
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_447a38]
            movapd XMM1,XMM2
            andpd XMM1,XMM5
            ucomisd XMM4,XMM1
            ja .L_43c197

            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            andpd XMM5,XMM1
            ucomisd XMM4,XMM5
            jbe .L_43c1c0
.L_43c197:

            add RSP,16
.L_43c19b:

            movapd XMM0,XMM6
            movapd XMM1,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c1a8:

            movsd XMM6,QWORD PTR [RBX+8]
            add RSP,16
            movapd XMM1,XMM3
            mulsd XMM6,XMM0
            pop RBX
            movapd XMM0,XMM6
            ret 
          .byte 0x90
.L_43c1c0:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            divsd XMM0,QWORD PTR [RBX+16]
            call log@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            add RSP,16
            movapd XMM1,XMM3
            mulsd XMM6,XMM3
            pop RBX
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            ret 
.L_43c1ff:

            nop
.L_43c200:

            push RBX
            movapd XMM5,XMM1
            sub RSP,32
.L_43c209:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movsd XMM2,QWORD PTR [RIP+.L_449d28]
            andpd XMM5,XMM3
            movsd XMM4,QWORD PTR [RBX]
            ucomisd XMM2,XMM5
            addsd XMM4,XMM1
            ja .L_43c278

            movsd XMM7,QWORD PTR [RIP+.L_4470f8]
            pxor XMM6,XMM6
            mulsd XMM7,XMM4
            addsd XMM7,QWORD PTR [RIP+.L_447a38]
            movapd XMM5,XMM7
            andpd XMM5,XMM3
            ucomisd XMM2,XMM5
            ja .L_43c267

            subsd XMM5,QWORD PTR [RIP+.L_447a20]
            andpd XMM3,XMM5
            ucomisd XMM2,XMM3
            jbe .L_43c290
.L_43c267:

            add RSP,32
.L_43c26b:

            movapd XMM0,XMM6
            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c278:

            movapd XMM6,XMM0
            movapd XMM1,XMM4
            divsd XMM6,QWORD PTR [RBX+8]
            add RSP,32
            pop RBX
            movapd XMM0,XMM6
            ret 
          .byte 0x90
.L_43c290:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM1
            call tan@PLT

            divsd XMM0,QWORD PTR [RBX+16]
            call log@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM6,XMM0
            movapd XMM1,XMM4
            divsd XMM6,QWORD PTR [RSP+16]
            add RSP,32
.L_43c2d3:

            pop RBX
            movapd XMM0,XMM6
            ret 
.L_43c2d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c2e0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_43c2f3:

            call .L_403740

            test RAX,RAX
            je .L_43c3ad

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM1
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RIP+.L_449d28]
            movsd QWORD PTR [RBP+8],XMM0
            ucomisd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            ja .L_43c3a0

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            addsd XMM0,XMM1
            call tan@PLT

            lea RAX,QWORD PTR [RIP+.L_43c200]
            movsd QWORD PTR [RBP+16],XMM0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43c130]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_43c390:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c3a0:

            mov ESI,4294967274
            mov RDI,RBX
            call .L_413c90
.L_43c3ad:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43c0f0
.L_43c3bb:

            nop
            nop
            nop
            nop
            nop
.L_43c3c0:

            test RDI,RDI
            je .L_43c3d0

            jmp .L_43c2e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c3d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43c3fe

            lea RDX,QWORD PTR [RIP+.L_43c120]
            lea RCX,QWORD PTR [RIP+.L_44be30]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43c3fe:

            add RSP,8
            ret 
.L_43c403:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c410:

            xor EAX,EAX
            ret 
.L_43c413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c420:

            test RDI,RDI
            je .L_43c430

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c430:

            ret 
.L_43c432:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c440:

            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,64
.L_43c44d:

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44be98]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
.L_43c480:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBP
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+56]
            divsd XMM0,QWORD PTR [RIP+.L_44bea0]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44bea8]
            movsd XMM2,QWORD PTR [RIP+.L_448f68]
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RSP+16]
            addsd XMM2,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+32]
            divsd XMM0,XMM2
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM0
            ja .L_43c525

            sub EBX,1
            jne .L_43c480
.L_43c525:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            divsd XMM0,QWORD PTR [RIP+.L_44bea0]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RIP+.L_44beb0]
            divsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44beb8]
            mulsd XMM1,QWORD PTR [RSP+56]
            add RSP,64
.L_43c58b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_43c590:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43c59b:

            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RIP+.L_44beb8]
            call .L_442670

            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RIP+.L_44bea0]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_447a90]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RIP+.L_44bea8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM1,QWORD PTR [RSP]
            addsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RIP+.L_44be98]
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_44beb0]
            divsd XMM3,XMM1
            movsd QWORD PTR [RSP],XMM3
            call .L_442670

            movsd XMM3,QWORD PTR [RSP]
            add RSP,48
.L_43c667:

            movapd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
.L_43c674:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c680:

            test RDI,RDI
            je .L_43c6b0

            lea RAX,QWORD PTR [RIP+.L_43c590]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43c440]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c6b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43c6de

            lea RDX,QWORD PTR [RIP+.L_43c420]
            lea RCX,QWORD PTR [RIP+.L_44be60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43c6de:

            add RSP,8
            ret 
.L_43c6e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c6f0:

            lea RDX,QWORD PTR [RIP+.L_43c590]
            lea RCX,QWORD PTR [RIP+.L_43c440]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43c715:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c720:

            xor EAX,EAX
            ret 
.L_43c723:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c730:

            test RDI,RDI
            je .L_43c740

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c740:

            ret 
.L_43c742:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c750:

            sub RSP,40
.L_43c754:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44bef0]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_44b480]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_448f68]
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            addsd XMM2,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_44bef8]
            mulsd XMM1,QWORD PTR [RIP+.L_44bf00]
            subsd XMM2,QWORD PTR [RIP+.L_4470f0]
            add RSP,40
.L_43c7d0:

            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            ret 
.L_43c7d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c7e0:

            sub RSP,56
.L_43c7e4:

            movapd XMM2,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_44bf00]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_4470f0]
            jb .L_43c880

            ucomisd XMM0,QWORD PTR [RIP+.L_44b750]
            ja .L_43c860

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43c950

            movsd XMM1,QWORD PTR [RIP+.L_44bf10]
.L_43c82a:

            divsd XMM2,QWORD PTR [RIP+.L_44bf18]
.L_43c832:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            add RSP,56
.L_43c858:

            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c860:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,56
            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_43c880:

            movapd XMM0,XMM1
            mov QWORD PTR [RSP+40],RDI
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_447a90]
            mulsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,QWORD PTR [RIP+.L_44b480]
            call cos@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            movapd XMM0,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,QWORD PTR [RIP+.L_44bef8]
            divsd XMM2,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sin@PLT

            movapd XMM1,XMM0
            movapd XMM3,XMMWORD PTR [RSP+16]
            divsd XMM1,QWORD PTR [RIP+.L_44bef0]
            movsd XMM2,QWORD PTR [RSP+8]
            andpd XMM3,XMM1
            ucomisd XMM3,QWORD PTR [RIP+.L_4470f0]
            jb .L_43c960

            ucomisd XMM3,QWORD PTR [RIP+.L_44b750]
            mov RDI,QWORD PTR [RSP+40]
            ja .L_43c832

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43c980

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
.L_43c93e:

            movapd XMM0,XMM2
            add RSP,56

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c950:

            movsd XMM1,QWORD PTR [RIP+.L_44bf08]
            jmp .L_43c82a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c960:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_43c93e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c980:

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            jmp .L_43c93e
.L_43c98a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43c990:

            test RDI,RDI
            je .L_43c9c0

            lea RAX,QWORD PTR [RIP+.L_43c7e0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43c750]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c9c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43c9ee

            lea RDX,QWORD PTR [RIP+.L_43c730]
            lea RCX,QWORD PTR [RIP+.L_44bec0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43c9ee:

            add RSP,8
            ret 
.L_43c9f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ca00:

            lea RDX,QWORD PTR [RIP+.L_43c7e0]
            lea RCX,QWORD PTR [RIP+.L_43c750]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43ca25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ca30:

            xor EAX,EAX
            ret 
.L_43ca33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ca40:

            test RDI,RDI
            je .L_43ca50

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ca50:

            ret 
.L_43ca52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ca60:

            push R12
            push RBP
            push RBX
            mov EBX,20
            sub RSP,64
.L_43ca6d:

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44a7e8]
            movsd QWORD PTR [RSP+32],XMM0
            jmp .L_43caa9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43caa0:

            sub EBX,1
            je .L_43cb43
.L_43caa9:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RIP+.L_449e30]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            subsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+48]
            addsd XMM1,QWORD PTR [RSP+16]
            divsd XMM0,XMM1
            subsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            movsd QWORD PTR [RSP+8],XMM2
            ucomisd XMM5,XMM0
            jbe .L_43caa0
.L_43cb43:

            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd QWORD PTR [RSP+16],XMM0
            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RSP+8]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM1,XMM1
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RIP+.L_44bf50]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44bf58]
            mulsd XMM1,QWORD PTR [RSP+56]
            add RSP,64
.L_43cbad:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_43cbb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cbc0:

            push RBX
            movapd XMM2,XMM0
            mov RBX,RDI
            sub RSP,80
.L_43cbcc:

            mulsd XMM1,QWORD PTR [RIP+.L_44bf70]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            ucomisd XMM0,XMM4
            jbe .L_43cc70

            ucomisd XMM0,QWORD PTR [RIP+.L_44be10]
            ja .L_43cc48

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43cd48

            movsd XMM1,QWORD PTR [RIP+.L_44bf68]
.L_43cc12:

            mulsd XMM2,QWORD PTR [RIP+.L_44bf78]
            divsd XMM2,QWORD PTR [RIP+.L_44bf80]
.L_43cc22:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
.L_43cc3b:

            add RSP,80
.L_43cc3f:

            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cc48:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c90

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,80
            pxor XMM0,XMM0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cc70:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM4
            movaps XMMWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call asin@PLT

            movapd XMM5,XMM0
            addsd XMM5,XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+24]
            addsd XMM5,XMM5
            movapd XMM3,XMMWORD PTR [RSP+32]
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            divsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RIP+.L_44a7f0]
            mulsd XMM2,QWORD PTR [RIP+.L_44bf78]
            addsd XMM5,XMM4
            andpd XMM3,XMM1
            ucomisd XMM3,XMM4
            divsd XMM2,XMM5
            jbe .L_43cc22

            ucomisd XMM3,QWORD PTR [RIP+.L_44be10]
            ja .L_43cd58

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43cd90

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
            jmp .L_43cc3b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cd48:

            movsd XMM1,QWORD PTR [RIP+.L_44bf60]
            jmp .L_43cc12
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cd58:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,80
.L_43cd81:

            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cd90:

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            jmp .L_43cc3b
.L_43cd9d:

            nop
            nop
            nop
.L_43cda0:

            test RDI,RDI
            je .L_43cdd0

            lea RAX,QWORD PTR [RIP+.L_43cbc0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43ca60]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cdd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43cdfe

            lea RDX,QWORD PTR [RIP+.L_43ca40]
            lea RCX,QWORD PTR [RIP+.L_44bf20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43cdfe:

            add RSP,8
            ret 
.L_43ce03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ce10:

            lea RDX,QWORD PTR [RIP+.L_43cbc0]
            lea RCX,QWORD PTR [RIP+.L_43ca60]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43ce35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ce40:

            xor EAX,EAX
            ret 
.L_43ce43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ce50:

            test RDI,RDI
            je .L_43ce78

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43ce6e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43ce6e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ce78:

            xor EAX,EAX
            ret 
.L_43ce7b:

            nop
            nop
            nop
            nop
            nop
.L_43ce80:

            jmp .L_43ce50
.L_43ce82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ce90:

            push R13
            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_43ce9f:

            mov R13,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            mulsd XMM0,QWORD PTR [R13+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            nop
            nop
            nop
            nop
.L_43ced8:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM2
            ja .L_43cf50

            sub EBX,1
            jne .L_43ced8

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43cf98

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM2,QWORD PTR [RIP+.L_448438]
            jmp .L_43cf73
.L_43cf50:

            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            mov RDI,RBP
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
.L_43cf73:

            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [R13+8]
            mulsd XMM0,QWORD PTR [R13]
            add RSP,56
.L_43cf89:

            pop RBX
            pop RBP
            pop R12
            pop R13
            mulsd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43cf98:

            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movsd XMM2,QWORD PTR [RIP+.L_448438]
            jmp .L_43cf73
.L_43cfaa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43cfb0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_43cfb9:

            mov RBP,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+8],XMM0
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call .L_442670

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_447a78]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            ja .L_43d028

            movsd XMM1,QWORD PTR [RIP+.L_4470e0]
            add RSP,24
.L_43d018:

            pop RBX
            movapd XMM2,XMM1
            pop RBP
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d028:

            addsd XMM1,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX]
            addsd XMM1,XMM0
            divsd XMM1,QWORD PTR [RBP+16]
            movapd XMM0,XMM1
            call .L_442670

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_43d06f:

            nop
.L_43d070:

            push RBX
.L_43d071:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d0d8

            mov RDX,QWORD PTR [RIP+.L_44bfe8]
            mov RCX,QWORD PTR [RIP+.L_44a7f8]
            mov RSI,QWORD PTR [RIP+.L_447a78]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_43cfb0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43ce90]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43d0d1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d0d8:

            mov RDI,RBX
            pop RBX
            jmp .L_43ce50
.L_43d0e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d0f0:

            test RDI,RDI
            je .L_43d100

            jmp .L_43d070
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d100:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d12e

            lea RDX,QWORD PTR [RIP+.L_43ce80]
            lea RCX,QWORD PTR [RIP+.L_44bfd0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d12e:

            add RSP,8
            ret 
.L_43d133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d140:

            push RBX
.L_43d141:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d1a8

            mov RDX,QWORD PTR [RIP+.L_44bff0]
            mov RCX,QWORD PTR [RIP+.L_44bff8]
            mov RSI,QWORD PTR [RIP+.L_44c000]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_43cfb0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43ce90]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43d1a1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d1a8:

            mov RDI,RBX
            pop RBX
            jmp .L_43ce50
.L_43d1b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d1c0:

            test RDI,RDI
            je .L_43d1d0

            jmp .L_43d140
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d1d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d1fe

            lea RDX,QWORD PTR [RIP+.L_43ce80]
            lea RCX,QWORD PTR [RIP+.L_44bfb0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d1fe:

            add RSP,8
            ret 
.L_43d203:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d210:

            push RBX
.L_43d211:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d278

            mov RDX,QWORD PTR [RIP+.L_44c008]
            mov RCX,QWORD PTR [RIP+.L_44c010]
            mov RSI,QWORD PTR [RIP+.L_44c018]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_43cfb0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43ce90]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43d271:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d278:

            mov RDI,RBX
            pop RBX
            jmp .L_43ce50
.L_43d281:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d290:

            test RDI,RDI
            je .L_43d2a0

            jmp .L_43d210
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d2a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d2ce

            lea RDX,QWORD PTR [RIP+.L_43ce80]
            lea RCX,QWORD PTR [RIP+.L_44bf90]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d2ce:

            add RSP,8
            ret 
.L_43d2d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d2e0:

            xor EAX,EAX
            ret 
.L_43d2e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d2f0:

            xor EAX,EAX
            ret 
.L_43d2f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d300:

            xor EAX,EAX
            ret 
.L_43d303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d310:

            test RDI,RDI
            je .L_43d320

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d320:

            ret 
.L_43d322:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d330:

            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,48
.L_43d33d:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea R12,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM0,XMM0
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44c038]
            mulsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_44c040]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44c048]
            mulsd XMM1,XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d3a0:

            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM2
            ja .L_43d3fc

            sub EBX,1
            jne .L_43d3a0
.L_43d3fc:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            add RSP,48
.L_43d42b:

            pop RBX
            pop RBP
            pop R12
            mulsd XMM0,XMM2
            ret 
.L_43d434:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d440:

            push RBX
            mov RBX,RDI
            sub RSP,32

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM2,XMM2
            addsd XMM1,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            call .L_442670

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_43d4b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d4c0:

            test RDI,RDI
            je .L_43d4f0

            lea RAX,QWORD PTR [RIP+.L_43d440]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43d330]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d4f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d51e

            lea RDX,QWORD PTR [RIP+.L_43d310]
            lea RCX,QWORD PTR [RIP+.L_44c020]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d51e:

            add RSP,8
            ret 
.L_43d523:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d530:

            lea RDX,QWORD PTR [RIP+.L_43d440]
            lea RCX,QWORD PTR [RIP+.L_43d330]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43d555:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d560:

            xor EAX,EAX
            ret 
.L_43d563:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d570:

            test RDI,RDI
            je .L_43d580

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d580:

            ret 
.L_43d582:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d590:

            sub RSP,40
.L_43d594:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM4,XMM1
            movapd XMM0,XMM4
            call tan@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RSP+8]
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,40
.L_43d5f0:

            subsd XMM1,XMM0
            mulsd XMM2,XMM3
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            ret 
.L_43d601:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d610:

            push RBX
            pxor XMM4,XMM4
            mov EBX,9
            sub RSP,48
.L_43d61e:

            movsd XMM3,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM1,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+32],XMM1
            pxor XMM1,XMM1
            jmp .L_43d690
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d648:

            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
.L_43d690:

            mulsd XMM0,XMM0
            movapd XMM5,XMM3
            movapd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            subsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_449e30]
            divsd XMM5,XMM0
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM6,XMM5
            divsd XMM2,XMM6
            movapd XMM0,XMM2
            subsd XMM1,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_43d710

            sub EBX,1
            jne .L_43d648

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            ucomisd XMM5,QWORD PTR [RSP+32]
            ja .L_43d6fd

            movsd XMM1,QWORD PTR [RIP+.L_447a20]
.L_43d6fd:

            movsd XMM0,QWORD PTR [RSP+40]
            add RSP,48
.L_43d707:

            pop RBX
            addsd XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d710:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,48
            addsd XMM2,XMM2
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_43d743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d750:

            test RDI,RDI
            je .L_43d780

            lea RAX,QWORD PTR [RIP+.L_43d610]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43d590]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d780:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d7ae

            lea RDX,QWORD PTR [RIP+.L_43d570]
            lea RCX,QWORD PTR [RIP+.L_44c050]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d7ae:

            add RSP,8
            ret 
.L_43d7b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d7c0:

            lea RDX,QWORD PTR [RIP+.L_43d610]
            lea RCX,QWORD PTR [RIP+.L_43d590]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43d7e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d7f0:

            xor EAX,EAX
            ret 
.L_43d7f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d800:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_44c090]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_44c098]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_44c0a0]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_44c0a8]
            mulsd XMM1,XMM2
            ret 
.L_43d83d:

            nop
            nop
            nop
.L_43d840:

            test RDI,RDI
            je .L_43d850

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d850:

            ret 
.L_43d852:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d860:

            movsd XMM6,QWORD PTR [RIP+.L_44c0b0]
            ucomisd XMM1,XMM6
            ja .L_43d87a

            movsd XMM6,QWORD PTR [RIP+.L_44c0b8]
            maxsd XMM6,XMM1
.L_43d87a:

            mov EAX,100
            movsd XMM14,QWORD PTR [RIP+.L_44c090]
            movsd XMM13,QWORD PTR [RIP+.L_44c098]
            movsd XMM12,QWORD PTR [RIP+.L_44c0a0]
            movsd XMM5,QWORD PTR [RIP+.L_44c0a8]
            movsd XMM11,QWORD PTR [RIP+.L_44c0c0]
            movsd XMM10,QWORD PTR [RIP+.L_44c0c8]
            movsd XMM9,QWORD PTR [RIP+.L_44c0d0]
            movq XMM8,QWORD PTR [RIP+.L_447130]
            movsd XMM7,QWORD PTR [RIP+.L_447b90]
            jmp .L_43d8d5
.L_43d8d0:

            sub EAX,1
            je .L_43d948
.L_43d8d5:

            movapd XMM3,XMM1
            mulsd XMM3,XMM1
            movapd XMM2,XMM3
            movapd XMM15,XMM3
            movapd XMM4,XMM3
            mulsd XMM2,XMM14
            mulsd XMM15,XMM11
            mulsd XMM4,XMM3
            subsd XMM2,XMM13
            subsd XMM15,XMM10
            mulsd XMM2,XMM3
            mulsd XMM3,XMM15
            addsd XMM2,XMM12
            addsd XMM3,XMM9
            mulsd XMM2,XMM4
            mulsd XMM4,XMM3
            addsd XMM2,XMM5
            addsd XMM4,XMM5
            mulsd XMM2,XMM1
            subsd XMM2,XMM6
            divsd XMM2,XMM4
            subsd XMM1,XMM2
            andpd XMM2,XMM8
            ucomisd XMM7,XMM2
            jbe .L_43d8d0

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d948:

            sub RSP,24

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
            ret 
.L_43d974:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d980:

            test RDI,RDI
            je .L_43d9b0

            lea RAX,QWORD PTR [RIP+.L_43d860]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43d800]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43d9b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43d9de

            lea RDX,QWORD PTR [RIP+.L_43d840]
            lea RCX,QWORD PTR [RIP+.L_44c070]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d9de:

            add RSP,8
            ret 
.L_43d9e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d9f0:

            lea RDX,QWORD PTR [RIP+.L_43d860]
            lea RCX,QWORD PTR [RIP+.L_43d800]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43da15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da20:

            xor EAX,EAX
            ret 
.L_43da23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da30:

            test RDI,RDI
            je .L_43da40

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43da40:

            ret 
.L_43da42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43da50:

            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,48
.L_43da5d:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44c110]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44c118]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44c120]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44c128]
            mulsd XMM1,XMM0
            nop
            nop
            nop
            nop
.L_43dac0:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_447cd0]
            subsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM2,XMM3
            mulsd XMM3,XMM0
            mulsd XMM2,XMM4
            mulsd XMM4,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            subsd XMM2,QWORD PTR [RSP+16]
            subsd XMM3,XMM4
            divsd XMM2,XMM3
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM6,XMM2
            ja .L_43db78

            sub EBX,1
            jne .L_43dac0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_43dbb0

            movsd XMM1,QWORD PTR [RIP+.L_44c0f8]
            movsd XMM2,QWORD PTR [RIP+.L_44c100]
.L_43db56:

            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RIP+.L_44b978]
            add RSP,48
.L_43db68:

            pop RBX
            pop RBP
            pop R12
            mulsd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43db78:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_44c130]
            subsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM1,QWORD PTR [RSP+40]
            movapd XMM2,XMM0
            jmp .L_43db56
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43dbb0:

            movsd XMM1,QWORD PTR [RIP+.L_44c108]
            movsd XMM2,QWORD PTR [RIP+.L_44c100]
            jmp .L_43db56
.L_43dbc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dbd0:

            push RBX
            mov RBX,RDI
            sub RSP,32

            mov RDI,QWORD PTR [RDI]
            divsd XMM1,QWORD PTR [RIP+.L_44c130]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call .L_442670

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mulsd XMM0,QWORD PTR [RIP+.L_44b978]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_44c110]
            call .L_442670

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_43dc6d:

            nop
            nop
            nop
.L_43dc70:

            test RDI,RDI
            je .L_43dca0

            lea RAX,QWORD PTR [RIP+.L_43dbd0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43da50]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43dca0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43dcce

            lea RDX,QWORD PTR [RIP+.L_43da30]
            lea RCX,QWORD PTR [RIP+.L_44c0e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43dcce:

            add RSP,8
            ret 
.L_43dcd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dce0:

            lea RDX,QWORD PTR [RIP+.L_43dbd0]
            lea RCX,QWORD PTR [RIP+.L_43da50]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43dd05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd10:

            xor EAX,EAX
            ret 
.L_43dd13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd20:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM3,XMM1
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44c178]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            ret 
.L_43dd51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dd60:

            movsd XMM4,QWORD PTR [RIP+.L_44c178]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM4
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM3,XMM1
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            mulsd XMM2,XMM4
            divsd XMM0,XMM2
            ret 
.L_43dd91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dda0:

            test RDI,RDI
            je .L_43ddc8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43ddbe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43ddbe:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ddc8:

            xor EAX,EAX
            ret 
.L_43ddcb:

            nop
            nop
            nop
            nop
            nop
.L_43ddd0:

            jmp .L_43dda0
.L_43ddd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dde0:

            push RBX
.L_43dde1:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43de30

            mov RDX,QWORD PTR [RIP+.L_44c180]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_43dd60]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43dd20]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43de2b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43de30:

            mov RDI,RBX
            pop RBX
            jmp .L_43dda0
.L_43de39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43de40:

            test RDI,RDI
            je .L_43de50

            jmp .L_43dde0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43de50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43de7e

            lea RDX,QWORD PTR [RIP+.L_43ddd0]
            lea RCX,QWORD PTR [RIP+.L_44c160]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43de7e:

            add RSP,8
            ret 
.L_43de83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43de90:

            push RBX
.L_43de91:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43dee0

            mov RDX,QWORD PTR [RIP+.L_44c188]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_43dd60]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43dd20]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43dedb:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43dee0:

            mov RDI,RBX
            pop RBX
            jmp .L_43dda0
.L_43dee9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43def0:

            test RDI,RDI
            je .L_43df00

            jmp .L_43de90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43df00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43df2e

            lea RDX,QWORD PTR [RIP+.L_43ddd0]
            lea RCX,QWORD PTR [RIP+.L_44c140]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43df2e:

            add RSP,8
            ret 
.L_43df33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df40:

            xor EAX,EAX
            ret 
.L_43df43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df50:

            xor EAX,EAX
            ret 
.L_43df53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df60:

            test RDI,RDI
            je .L_43df88

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43df7e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43df7e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43df88:

            xor EAX,EAX
            ret 
.L_43df8b:

            nop
            nop
            nop
            nop
            nop
.L_43df90:

            jmp .L_43df60
.L_43df92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43dfa0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_43dfa9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44c1d0]
            mov RDI,QWORD PTR [RBP]
            call .L_442670

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RIP+.L_44c1d8]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+32]
            add RSP,56
.L_43e028:

            pop RBX
            pop RBP
            ret 
.L_43e02b:

            nop
            nop
            nop
            nop
            nop
.L_43e030:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_43e039:

            mov RBP,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call .L_442670

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RIP+.L_447a90]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RIP+.L_44c1e0]
            mulsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+40]
            divsd XMM2,QWORD PTR [RBP]
            divsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_442670

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,56
.L_43e0c3:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_43e0ce:

            nop
            nop
.L_43e0d0:

            push RBX
.L_43e0d1:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e130

            mov RDX,QWORD PTR [RIP+.L_44c1e8]
            mov RCX,QWORD PTR [RIP+.L_44c1f0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_43e030]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43dfa0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43e126:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e130:

            mov RDI,RBX
            pop RBX
            jmp .L_43df60
.L_43e139:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e140:

            test RDI,RDI
            je .L_43e150

            jmp .L_43e0d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e150:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e17e

            lea RDX,QWORD PTR [RIP+.L_43df90]
            lea RCX,QWORD PTR [RIP+.L_44c1b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e17e:

            add RSP,8
            ret 
.L_43e183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e190:

            push RBX
.L_43e191:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e1f0

            mov RDX,QWORD PTR [RIP+.L_4470f0]
            mov RCX,QWORD PTR [RIP+.L_44c1f8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_43e030]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43dfa0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43e1e6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e1f0:

            mov RDI,RBX
            pop RBX
            jmp .L_43df60
.L_43e1f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e200:

            test RDI,RDI
            je .L_43e210

            jmp .L_43e190
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e210:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e23e

            lea RDX,QWORD PTR [RIP+.L_43df90]
            lea RCX,QWORD PTR [RIP+.L_44c190]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e23e:

            add RSP,8
            ret 
.L_43e243:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e250:

            xor EAX,EAX
            ret 
.L_43e253:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e260:

            xor EAX,EAX
            ret 
.L_43e263:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e270:

            test RDI,RDI
            je .L_43e298

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43e28e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43e28e:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e298:

            xor EAX,EAX
            ret 
.L_43e29b:

            nop
            nop
            nop
            nop
            nop
.L_43e2a0:

            jmp .L_43e270
.L_43e2a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e2b0:

            sub RSP,56
.L_43e2b4:

            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44c240]
            mov RAX,QWORD PTR [RDI+32]
            pxor XMM0,XMM0
            mulsd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_44c238]
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM4,XMM6
            mulsd XMM2,XMM1
            movsd XMM5,QWORD PTR [RAX+8]
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM2
            sqrtsd XMM7,XMM2
            ja .L_43e310
.L_43e2f7:

            mulsd XMM5,XMM7
            add RSP,56
.L_43e2ff:

            mulsd XMM1,XMM6
            subsd XMM3,XMM5
            mulsd XMM3,XMM4
            movapd XMM0,XMM3
            ret 
.L_43e310:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_43e2f7
.L_43e361:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e370:

            sub RSP,56
.L_43e374:

            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_44c238]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_44c240]
            divsd XMM1,XMM6
            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RAX]
            movsd XMM5,QWORD PTR [RAX+8]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM2
            sqrtsd XMM7,XMM2
            ja .L_43e3d0
.L_43e3b7:

            mulsd XMM5,XMM7
            add RSP,56
.L_43e3bf:

            subsd XMM3,XMM5
            mulsd XMM3,XMM6
            divsd XMM4,XMM3
            movapd XMM0,XMM4
            ret 
.L_43e3d0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43e3b7
.L_43e421:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e430:

            push RBX
.L_43e431:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e490

            mov RDX,QWORD PTR [RIP+.L_4470e8]
            mov RCX,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_43e370]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e2b0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43e486:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e490:

            mov RDI,RBX
            pop RBX
            jmp .L_43e270
.L_43e499:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e4a0:

            test RDI,RDI
            je .L_43e4b0

            jmp .L_43e430
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e4b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e4de

            lea RDX,QWORD PTR [RIP+.L_43e2a0]
            lea RCX,QWORD PTR [RIP+.L_44c220]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e4de:

            add RSP,8
            ret 
.L_43e4e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e4f0:

            push RBX
.L_43e4f1:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e550

            mov RDX,QWORD PTR [RIP+.L_4498d8]
            mov RCX,QWORD PTR [RIP+.L_4470f8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_43e370]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e2b0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43e546:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e550:

            mov RDI,RBX
            pop RBX
            jmp .L_43e270
.L_43e559:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e560:

            test RDI,RDI
            je .L_43e570

            jmp .L_43e4f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e570:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e59e

            lea RDX,QWORD PTR [RIP+.L_43e2a0]
            lea RCX,QWORD PTR [RIP+.L_44c200]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e59e:

            add RSP,8
            ret 
.L_43e5a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e5b0:

            xor EAX,EAX
            ret 
.L_43e5b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e5c0:

            xor EAX,EAX
            ret 
.L_43e5c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e5d0:

            test RDI,RDI
            je .L_43e5f8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43e5ee

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43e5ee:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e5f8:

            xor EAX,EAX
            ret 
.L_43e5fb:

            nop
            nop
            nop
            nop
            nop
.L_43e600:

            jmp .L_43e5d0
.L_43e602:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e610:

            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_43e61b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP+24]
            mulsd XMM1,QWORD PTR [RIP+.L_44c2a0]
            movsd QWORD PTR [RSP+32],XMM0
            nop
            nop
            nop
.L_43e650:

            movapd XMM0,XMM1
            pxor XMM5,XMM5
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_43e7b0
.L_43e672:

            movsd XMM2,QWORD PTR [RBP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            subsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            addsd XMM3,XMM3
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RIP+.L_447cd0]
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM0,XMM3
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM2
            ja .L_43e740

            sub EBX,1
            jne .L_43e650

            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_44c290]
            ucomisd XMM4,QWORD PTR [RSP+32]
            ja .L_43e70a

            movsd XMM1,QWORD PTR [RIP+.L_44c298]
.L_43e70a:

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM3,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RIP+.L_44c288]
.L_43e722:

            subsd XMM2,XMM4
            mulsd XMM1,QWORD PTR [RBP+8]
            add RSP,56
.L_43e72f:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e740:

            movapd XMM0,XMM1
            pxor XMM6,XMM6
            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM3,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            jbe .L_43e722

            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_43e722
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e7b0:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_43e672
.L_43e7d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e7e0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,40
.L_43e7ed:

            mov RBX,QWORD PTR [RDI+32]
            pxor XMM0,XMM0
            divsd XMM1,QWORD PTR [RBX+8]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM2
            sqrtsd XMM4,XMM2
            ja .L_43e87c
.L_43e814:

            movsd XMM2,QWORD PTR [RBX+32]
            subsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RBX]
            divsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RBX+16]
            subsd XMM2,XMM4
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM1
            addsd XMM1,XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RBX+24]
            call .L_442670

            movsd XMM3,QWORD PTR [RSP+16]
            add RSP,40
.L_43e871:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
.L_43e87c:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43e814
.L_43e8ae:

            nop
            nop
.L_43e8b0:

            push RBX
.L_43e8b1:

            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e930

            mov RDX,QWORD PTR [RIP+.L_44c238]
            mov RCX,QWORD PTR [RIP+.L_44c2a8]
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RIP+.L_447a88]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov RDX,QWORD PTR [RIP+.L_44c2b0]
            mov RCX,QWORD PTR [RIP+.L_4470e8]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RCX
            lea RAX,QWORD PTR [RIP+.L_43e7e0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e610]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43e927:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e930:

            mov RDI,RBX
            pop RBX
            jmp .L_43e5d0
.L_43e939:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e940:

            test RDI,RDI
            je .L_43e950

            jmp .L_43e8b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e950:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43e97e

            lea RDX,QWORD PTR [RIP+.L_43e600]
            lea RCX,QWORD PTR [RIP+.L_44c270]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e97e:

            add RSP,8
            ret 
.L_43e983:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e990:

            push RBX
.L_43e991:

            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43ea10

            mov RDX,QWORD PTR [RIP+.L_44c2b8]
            mov RCX,QWORD PTR [RIP+.L_44c2c0]
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RIP+.L_448f50]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov RDX,QWORD PTR [RIP+.L_44c2c8]
            mov RCX,QWORD PTR [RIP+.L_447a90]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RCX
            lea RAX,QWORD PTR [RIP+.L_43e7e0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e610]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43ea07:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ea10:

            mov RDI,RBX
            pop RBX
            jmp .L_43e5d0
.L_43ea19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea20:

            test RDI,RDI
            je .L_43ea30

            jmp .L_43e990
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ea30:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_43ea5e

            lea RDX,QWORD PTR [RIP+.L_43e600]
            lea RCX,QWORD PTR [RIP+.L_44c250]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ea5e:

            add RSP,8
            ret 
.L_43ea63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea70:

            xor EAX,EAX
            ret 
.L_43ea73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea80:

            xor EAX,EAX
            ret 
.L_43ea83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea90:

            test RDI,RDI
            je .L_43eab8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43eaae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_43eaae:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43eab8:

            xor EAX,EAX
            ret 
.L_43eabb:

            nop
            nop
            nop
            nop
            nop
.L_43eac0:

            jmp .L_43ea90
.L_43eac2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ead0:

            movapd XMM2,XMM0
            mulsd XMM0,XMM0
            movapd XMM3,XMM1
            mulsd XMM1,XMM1
            pxor XMM6,XMM6
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            addsd XMM0,XMM1
            sub RSP,64
.L_43eaf7:

            mov RBX,QWORD PTR [RDI+32]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43f1ed
.L_43eb09:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP],XMM2
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            pxor XMM7,XMM7
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM2,XMM7
            jb .L_43eb88

            movapd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            jb .L_43eb88

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            xor R14D,R14D
            movsd QWORD PTR [RSP],XMM6
            jmp .L_43ebc3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43eb88:

            pxor XMM7,XMM7
            ucomisd XMM3,XMM7
            jb .L_43edd8

            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM3,XMM0
            jb .L_43edd8

            movsd XMM5,QWORD PTR [RIP+.L_447a20]
            mov R14D,1
            subsd XMM1,XMM5
            movsd QWORD PTR [RSP],XMM5
.L_43ebc3:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call tan@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44c310]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+56]
            subsd XMM2,QWORD PTR [RIP+.L_44c318]
            divsd XMM0,XMM2
            call atan@PLT

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            divsd XMM0,QWORD PTR [RSP+48]
            call atan@PLT

            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM6,XMM3
            movapd XMM7,XMM3
            mulsd XMM1,XMM4
            subsd XMM6,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a58]
            mulsd XMM1,XMM4
            mulsd XMM1,XMM6
            subsd XMM7,XMM1
            ucomisd XMM0,XMM7
            movapd XMM1,XMM7
            ja .L_43eec0

            movapd XMM7,XMM3
            mov EAX,DWORD PTR [RBX]
            minsd XMM7,XMM1
            cmp EAX,4
            movapd XMM1,XMM7
            je .L_43eecf
.L_43ecd6:

            cmp EAX,5
            je .L_43f030

            movapd XMM4,XMM1
            pxor XMM0,XMM0
            pxor XMM2,XMM2
            mulsd XMM4,XMM1
            ucomisd XMM4,XMM3
            jb .L_43f110
.L_43ecf9:

            addsd XMM4,XMM0
            pxor XMM5,XMM5
            ucomisd XMM4,XMM3
            jb .L_43f0c0
.L_43ed0b:

            cmp R14D,1
            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            je .L_43ef88

            cmp R14D,2
            je .L_43f0b0

            cmp R14D,3
            je .L_43efc8
.L_43ed31:

            mov EAX,DWORD PTR [RBX]
            cmp EAX,1
            je .L_43ef70

            cmp EAX,2
            je .L_43f070

            cmp EAX,3
            je .L_43efb0
.L_43ed4e:

            xorpd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            call acos@PLT

            movapd XMM3,XMM0
            movsd XMM5,QWORD PTR [RSP+24]
            subsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            mov EAX,DWORD PTR [RBX]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_43ef20

            cmp EAX,2
            je .L_43f080

            cmp EAX,3
            je .L_43ef50

            nop
            nop
.L_43edb0:

            pxor XMM6,XMM6
            ucomisd XMM6,QWORD PTR [RBP+176]
            jp .L_43ee08

            jne .L_43ee08
.L_43edc0:

            add RSP,64
.L_43edc4:

            movapd XMM0,XMM2
            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43edd8:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            ja .L_43efe0
.L_43ede6:

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            mov R14D,3
            movsd QWORD PTR [RSP],XMM6
            addsd XMM1,XMM6
            jmp .L_43ebc3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ee08:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            mulsd XMM0,XMM0
            pxor XMM7,XMM7
            movsd XMM4,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43f255
.L_43ee47:

            divsd XMM4,XMM1
            movsd XMM1,QWORD PTR [RBP+128]
            pxor XMM6,XMM6
            mulsd XMM1,XMM1
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            subsd XMM1,XMM0
            ucomisd XMM6,XMM1
            sqrtsd XMM5,XMM1
            ja .L_43f219
.L_43ee75:

            mulsd XMM4,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            divsd XMM5,XMM4
            movapd XMM0,XMM5
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM5,XMM3
            movapd XMM3,XMM0
            jbe .L_43edc0

            xorpd XMM3,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43edc0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43eec0:

            mov EAX,DWORD PTR [RBX]
            movapd XMM1,XMM0
            cmp EAX,4
            jne .L_43ecd6
.L_43eecf:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movsd XMM7,QWORD PTR [RSP]
            test R14D,R14D
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM7
            subsd XMM3,XMM0
            je .L_43efa0

            cmp R14D,1
            je .L_43f180

            cmp R14D,2
            jne .L_43edb0
.L_43ef0e:

            subsd XMM2,QWORD PTR [RSP]
            jmp .L_43edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ef20:

            subsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_447a60]
            ucomisd XMM0,XMM2
            ja .L_43ef63
.L_43ef33:

            ucomisd XMM2,QWORD PTR [RIP+.L_447a78]
            jbe .L_43edb0
.L_43ef41:

            subsd XMM2,QWORD PTR [RIP+.L_448430]
            jmp .L_43edb0
          .byte 0x66
          .byte 0x90
.L_43ef50:

            addsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_447a60]
            ucomisd XMM0,XMM2
            jbe .L_43ef33
.L_43ef63:

            addsd XMM2,QWORD PTR [RIP+.L_448430]
            jmp .L_43edb0
.L_43ef70:

            xorpd XMM5,XMM0
            movapd XMM3,XMM5
            movapd XMM5,XMM1
            movapd XMM1,XMM3
            jmp .L_43ed4e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ef88:

            xorpd XMM2,XMM0
            movapd XMM3,XMM2
            movapd XMM2,XMM5
            movapd XMM5,XMM3
            jmp .L_43ed31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43efa0:

            addsd XMM2,XMM7
            jmp .L_43edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43efb0:

            movapd XMM3,XMM1
            movapd XMM1,XMM5
            xorpd XMM3,XMM0
            movapd XMM5,XMM3
            jmp .L_43ed4e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43efc8:

            xorpd XMM5,XMM0
            movapd XMM3,XMM5
            movapd XMM5,XMM2
            movapd XMM2,XMM3
            jmp .L_43ed31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43efe0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            andpd XMM3,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM3
            jb .L_43ede6

            pxor XMM6,XMM6
            ucomisd XMM6,XMM1
            ja .L_43f1a0

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            subsd XMM1,QWORD PTR [RIP+.L_447a78]
            mov R14D,2
            movsd QWORD PTR [RSP],XMM7
            jmp .L_43ebc3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f030:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movsd XMM7,QWORD PTR [RSP]
            test R14D,R14D
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM3,XMM7
            jne .L_43f140

            subsd XMM7,XMM2
            movapd XMM2,XMM7
            jmp .L_43edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f070:

            xorpd XMM1,XMM0
            xorpd XMM5,XMM0
            jmp .L_43ed4e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f080:

            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            movsd XMM1,QWORD PTR [RIP+.L_447a60]
            subsd XMM2,XMM0
            ucomisd XMM1,XMM2
            ja .L_43ef63

            ucomisd XMM2,XMM0
            jbe .L_43edb0

            jmp .L_43ef41
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f0b0:

            xorpd XMM5,XMM0
            xorpd XMM2,XMM0
            jmp .L_43ed31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f0c0:

            subsd XMM3,XMM4
            pxor XMM6,XMM6
            ucomisd XMM6,XMM3
            sqrtsd XMM5,XMM3
            jbe .L_43ed0b

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43ed0b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f110:

            movapd XMM0,XMM3
            pxor XMM6,XMM6
            subsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43f28d
.L_43f12a:

            mulsd XMM2,QWORD PTR [RSP+40]
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            jmp .L_43ecf9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f140:

            cmp R14D,1
            je .L_43f1c0

            cmp R14D,2
            je .L_43f170

            pxor XMM6,XMM6
            ucomisd XMM6,XMM2
            ja .L_43f1d0

            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            jmp .L_43edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f170:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43ef0e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f180:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            ja .L_43f1e0
.L_43f18a:

            subsd XMM2,QWORD PTR [RIP+.L_447a78]
            jmp .L_43edb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f1a0:

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            addsd XMM1,QWORD PTR [RIP+.L_447a78]
            mov R14D,2
            movsd QWORD PTR [RSP],XMM6
            jmp .L_43ebc3
.L_43f1c0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f1d0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43f18a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f1e0:

            addsd XMM2,QWORD PTR [RIP+.L_447a78]
            jmp .L_43edb0
.L_43f1ed:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43eb09
.L_43f219:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43ee75
.L_43f255:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43ee47
.L_43f28d:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_43f12a
.L_43f2c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f2d0:

            push RBX
.L_43f2d1:

            mov RBX,RDI
            call atan2@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_447a38]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,XMM2
            jae .L_43f350

            ucomisd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_447a28]
            ja .L_43f330
.L_43f301:

            ucomisd XMM0,XMM1
            ja .L_43f315

            movsd XMM1,QWORD PTR [RIP+.L_447a40]
            ucomisd XMM1,XMM0
            jb .L_43f370
.L_43f315:

            ucomisd XMM0,QWORD PTR [RIP+.L_448740]
            mov DWORD PTR [RBX],2
            jb .L_43f360

            subsd XMM0,QWORD PTR [RIP+.L_447a78]
            pop RBX
.L_43f32e:

            ret 
          .byte 0x90
.L_43f330:

            ucomisd XMM1,XMM0
            jb .L_43f301

            mov DWORD PTR [RBX],1
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f350:

            mov DWORD PTR [RBX],0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f360:

            addsd XMM0,QWORD PTR [RIP+.L_447a78]
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f370:

            mov DWORD PTR [RBX],3
            addsd XMM0,QWORD PTR [RIP+.L_447a20]
            pop RBX
            ret 
.L_43f380:

            push R12
            pxor XMM6,XMM6
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,96
.L_43f390:

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            ucomisd XMM6,QWORD PTR [RDI+176]
            jp .L_43f5c0

            movapd XMM3,XMM1
            jne .L_43f5c0

            mov EBX,DWORD PTR [RBX]
            movsd QWORD PTR [RSP],XMM2
            cmp EBX,4
            je .L_43f5f1
.L_43f3cc:

            cmp EBX,5
            je .L_43f6a0

            cmp EBX,1
            je .L_43f990

            cmp EBX,2
            je .L_43f890

            cmp EBX,3
            je .L_43faa0

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM3
            movsd XMM0,QWORD PTR [RSP]
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movapd XMM1,XMM0
            test EBX,EBX
            movsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM1
            jne .L_43fe0b

            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            ucomisd XMM0,XMM2
            jbe .L_43fba8

            movapd XMM0,XMM2
            mov DWORD PTR [RSP+84],0
            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+16],XMM6
.L_43f4b0:

            movsd QWORD PTR [RSP+40],XMM2
            call acos@PLT

            addsd XMM0,QWORD PTR [RSP]
            subsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RIP+.L_44c320]
            call atan@PLT

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            divsd XMM0,QWORD PTR [RSP+56]
            call atan@PLT

            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM3,XMM3
            subsd XMM2,XMM0
            subsd XMM1,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM1,XMM3
            divsd XMM1,XMM2
            movapd XMM0,XMM1
            sqrtsd XMM1,XMM1
            ucomisd XMM5,XMM0
            ja .L_43fde6
.L_43f544:

            mov EAX,DWORD PTR [RSP+84]
            cmp EAX,1
            je .L_43f970

            cmp EAX,2
            je .L_43f980

            cmp EAX,3
            jne .L_43f570

            addsd XMM4,QWORD PTR [RIP+.L_44a8b8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f570:

            movapd XMM0,XMM4
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            jne .L_43fe06

            add RSP,96
.L_43f5b1:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f5c0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+32]
            call atan@PLT

            mov EBX,DWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd QWORD PTR [RSP],XMM2
            cmp EBX,4
            jne .L_43f3cc
.L_43f5f1:

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM6
            subsd XMM0,XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+48],XMM0
            ucomisd XMM2,QWORD PTR [RIP+.L_447a38]
            movsd XMM0,QWORD PTR [RIP+.L_447a28]
            jb .L_43f750

            movsd XMM5,QWORD PTR [RSP]
            ucomisd XMM0,XMM5
            jb .L_43f750

            subsd XMM5,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],0
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM5
.L_43f66a:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea8]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM5
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            jmp .L_43f4b0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f6a0:

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM3,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM0,XMM3
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a38]
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM5,XMM0
            jb .L_43f820

            movsd XMM1,QWORD PTR [RIP+.L_447a28]
            ucomisd XMM1,XMM5
            jb .L_43f820

            movsd XMM7,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],0
            subsd XMM7,XMM5
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM7
            movapd XMM0,XMM7
.L_43f721:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea8]
            movsd XMM6,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM6
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            jmp .L_43f4b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f750:

            ucomisd XMM2,XMM0
            jbe .L_43f7c0
.L_43f756:

            pxor XMM6,XMM6
            mov DWORD PTR [RSP+84],1
            ucomisd XMM2,XMM6
            jbe .L_43fa90

            subsd XMM2,QWORD PTR [RIP+.L_447a78]
.L_43f774:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
.L_43f78d:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea8]
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            jmp .L_43f4b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f7c0:

            movsd XMM0,QWORD PTR [RIP+.L_447a40]
            ucomisd XMM0,XMM2
            jae .L_43f756

            ucomisd XMM2,XMM0
            ja .L_43fb28
.L_43f7d8:

            mov DWORD PTR [RSP+84],3
.L_43f7e0:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
.L_43f7f4:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea8]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM7
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            jmp .L_43f4b0
.L_43f820:

            ucomisd XMM0,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_447a30]
            jbe .L_43f838

            ucomisd XMM2,XMM0
            jae .L_43fb00
.L_43f838:

            ucomisd XMM0,XMM2
            jbe .L_43f84c

            ucomisd XMM2,QWORD PTR [RIP+.L_447a40]
            jae .L_43fb70
.L_43f84c:

            pxor XMM4,XMM4
            mov DWORD PTR [RSP+84],3
            ucomisd XMM2,XMM4
            jbe .L_43fd08

            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            subsd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM0
            jmp .L_43f66a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f890:

            movsd XMM1,QWORD PTR [RIP+.L_447a78]
            addsd XMM2,XMM1
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_447a60]
            ucomisd XMM2,XMM0
            ja .L_43fae0

            ucomisd XMM0,XMM1
            ja .L_43fd28

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+16],XMM7
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f8d0:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+32],XMM3
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM1,QWORD PTR [RSP+64]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            cmp EBX,2
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+72]
            mulsd XMM1,XMM2
            mulsd XMM2,QWORD PTR [RSP]
            je .L_43fc28

            cmp EBX,3
            je .L_43fc88
.L_43f944:

            pxor XMM0,XMM0
            mov DWORD PTR [RSP+84],0
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM2
            jmp .L_43f4b0
          .byte 0x66
          .byte 0x90
.L_43f970:

            addsd XMM4,QWORD PTR [RSP+16]
            jmp .L_43f570
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f980:

            addsd XMM4,QWORD PTR [RIP+.L_447a78]
            jmp .L_43f570
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f990:

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd XMM1,QWORD PTR [RIP+.L_447a60]
            addsd XMM2,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            ucomisd XMM1,XMM2
            movapd XMM0,XMM2
            jbe .L_43fa70

            addsd XMM0,QWORD PTR [RIP+.L_448430]
.L_43f9c0:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP],XMM3
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+64]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM6
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movsd QWORD PTR [RSP],XMM0
            mulsd XMM0,QWORD PTR [RSP+72]
            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            jbe .L_43fd48
.L_43fa33:

            movapd XMM0,XMM2
            mov DWORD PTR [RSP+84],0
.L_43fa3f:

            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+56],XMM2
            jmp .L_43f4b0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fa70:

            ucomisd XMM2,QWORD PTR [RIP+.L_447a78]
            jbe .L_43f9c0

            subsd XMM0,QWORD PTR [RIP+.L_448430]
            jmp .L_43f9c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fa90:

            addsd XMM2,QWORD PTR [RIP+.L_447a78]
            jmp .L_43f774
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43faa0:

            movsd XMM7,QWORD PTR [RIP+.L_447a20]
            movsd XMM1,QWORD PTR [RIP+.L_447a60]
            subsd XMM2,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            ucomisd XMM1,XMM2
            movapd XMM0,XMM2
            ja .L_43fb18

            ucomisd XMM2,QWORD PTR [RIP+.L_447a78]
            jbe .L_43f8d0

            subsd XMM0,QWORD PTR [RIP+.L_448430]
            jmp .L_43f8d0
          .byte 0x90
.L_43fae0:

            movsd XMM4,QWORD PTR [RIP+.L_447a20]
            addsd XMM0,QWORD PTR [RIP+.L_448430]
            movsd QWORD PTR [RSP+16],XMM4
            jmp .L_43f8d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fb00:

            mov DWORD PTR [RSP+84],1
            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_43f774

            nop
            nop
            nop
.L_43fb18:

            addsd XMM0,QWORD PTR [RIP+.L_448430]
            jmp .L_43f8d0

            nop
            nop
            nop
.L_43fb28:

            movsd XMM0,QWORD PTR [RIP+.L_447a30]
            ucomisd XMM0,XMM2
            jb .L_43f7d8

            addsd XMM2,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],2
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            jmp .L_43f721
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fb70:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],2
            mov RDI,R12
            mov RSI,RBP
            subsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            jmp .L_43f66a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43fba8:

            lea RDI,QWORD PTR [RSP+84]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM2
            call .L_43f2d0

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            mov RSI,RBP
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_449ea8]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            jmp .L_43f4b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fc28:

            movq XMM5,QWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+32],XMM3
            xorpd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP],XMM5
            movapd XMM0,XMM1
            call acos@PLT

            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            movapd XMM5,XMMWORD PTR [RSP]
            ucomisd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jbe .L_43fda0

            mov DWORD PTR [RSP+84],0
            movapd XMM0,XMM4
            jmp .L_43fa3f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fc88:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM2
            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447cd0]
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            movsd XMM3,QWORD PTR [RSP+24]
            ja .L_43fa33

            lea RDI,QWORD PTR [RSP+84]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            call .L_43f2d0

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_43f78d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fd08:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            subsd XMM2,QWORD PTR [RIP+.L_447a78]
            movsd QWORD PTR [RSP],XMM2
            jmp .L_43f7e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fd28:

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            subsd XMM0,QWORD PTR [RIP+.L_448430]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_43f8d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fd48:

            mulsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+84]
            movsd QWORD PTR [RSP+40],XMM2
            movsd XMM0,QWORD PTR [RSP+32]
            xorpd XMM1,XMMWORD PTR [RIP+.L_447ae0]
            call .L_43f2d0

            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_43f7f4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fda0:

            xorpd XMM2,XMM5
            lea RDI,QWORD PTR [RSP+84]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movapd XMM1,XMM2
            call .L_43f2d0

            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_43f66a
.L_43fde6:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_43f544
.L_43fe06:

            call __stack_chk_fail@PLT
.L_43fe0b:

            movsd XMM6,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_43f944
.L_43fe1e:

            nop
            nop
.L_43fe20:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_43fe32:

            call .L_403740

            test RAX,RAX
            je .L_43ff90

            movsd XMM0,QWORD PTR [RBX+336]
            lea RCX,QWORD PTR [RIP+.L_43ead0]
            lea RDX,QWORD PTR [RIP+.L_43f380]
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_447aa0]
            mov QWORD PTR [RBX+48],RCX
            mov QWORD PTR [RBX+40],RDX
            jae .L_43fea8

            movsd XMM1,QWORD PTR [RIP+.L_44c328]
            ucomisd XMM1,XMM0
            jb .L_43ff30

            pxor XMM3,XMM3
            mov DWORD PTR [RAX],5
.L_43fe88:

            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_43feb8

            jne .L_43feb8

            add RSP,32
.L_43fe9c:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fea8:

            mov DWORD PTR [RAX],4
            pxor XMM3,XMM3
            jmp .L_43fe88
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43feb8:

            movsd XMM2,QWORD PTR [RBX+128]
            movapd XMM1,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RAX+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM1
            subsd XMM5,XMM0
            ucomisd XMM3,XMM5
            sqrtsd XMM4,XMM5
            movapd XMM0,XMM5
            ja .L_43ffaf

            movapd XMM3,XMM2
.L_43fef3:

            mulsd XMM2,XMM4
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RAX+16],XMM2
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RAX+24],XMM1
            mulsd XMM0,XMM1
            movsd QWORD PTR [RAX+32],XMM0
            add RSP,32
.L_43ff22:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ff30:

            movsd XMM1,QWORD PTR [RBX+328]
            movsd XMM2,QWORD PTR [RIP+.L_447a38]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,XMM0
            jae .L_43ff80

            movsd XMM2,QWORD PTR [RIP+.L_447a28]
            ucomisd XMM2,XMM0
            jb .L_43ffa0

            pxor XMM3,XMM3
            xor EDX,EDX
            ucomisd XMM1,XMM3
            setbe DL
            lea EDX,DWORD PTR [RDX+RDX*1+1]
            mov DWORD PTR [RAX],EDX
            jmp .L_43fe88
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ff80:

            mov DWORD PTR [RAX],0
            pxor XMM3,XMM3
            jmp .L_43fe88
          .byte 0x90
.L_43ff90:

            add RSP,32
.L_43ff94:

            mov RDI,RBX
            pop RBX
            jmp .L_43ea90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ffa0:

            mov DWORD PTR [RAX],2
            pxor XMM3,XMM3
            jmp .L_43fe88
.L_43ffaf:

            movsd QWORD PTR [RSP+24],XMM1
            mov QWORD PTR [RSP+16],RAX
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+128]
            movsd XMM2,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_43fef3
.L_43ffed:

            nop
            nop
            nop
.L_43fff0:

            test RDI,RDI
            je .L_440000

            jmp .L_43fe20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440000:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44002e

            lea RDX,QWORD PTR [RIP+.L_43eac0]
            lea RCX,QWORD PTR [RIP+.L_44c2e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44002e:

            add RSP,8
            ret 
.L_440033:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440040:

            xor EAX,EAX
            ret 
.L_440043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440050:

            test RDI,RDI
            je .L_440060

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440060:

            ret 
.L_440062:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440070:

            movq XMM4,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_44c5c8]
            movsd XMM7,QWORD PTR [RIP+.L_447a80]
            andpd XMM2,XMM4
            mulsd XMM5,XMM2
            movapd XMM6,XMM5
            movapd XMM3,XMM5
            andpd XMM6,XMM4
            ucomisd XMM7,XMM6
            jbe .L_4400bc

            cvttsd2si RAX,XMM5
            pxor XMM3,XMM3
            andnpd XMM4,XMM5
            cvtsi2sd XMM3,RAX
            orpd XMM3,XMM4
.L_4400bc:

            cvttsd2si EAX,XMM3
            test EAX,EAX
            js .L_4401b0

            pxor XMM3,XMM3
            cmp EAX,17
            mov EDX,17
            cmovg EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_44c480]
            pxor XMM4,XMM4
            cvtsi2sd XMM3,EAX
            cdqe 
            shl RAX,4
            add RDX,RAX
            cvtss2sd XMM4,DWORD PTR [RDX+8]
            mulsd XMM3,QWORD PTR [RIP+.L_44c5d0]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447ce0]
            mulsd XMM3,XMM2
            pxor XMM2,XMM2
            cvtss2sd XMM2,DWORD PTR [RDX+12]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RDX+4]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RDX]
            lea RDX,QWORD PTR [RIP+.L_44c340]
            mulsd XMM2,XMM3
            add RAX,RDX
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RAX+8]
            mulsd XMM2,QWORD PTR [RIP+.L_44c5d8]
            mulsd XMM0,XMM2
            pxor XMM2,XMM2
            cvtss2sd XMM2,DWORD PTR [RAX+12]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RAX+4]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            mulsd XMM2,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX]
            addsd XMM2,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_44c5e0]
            jbe .L_4401a9

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
.L_4401a9:

            movapd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_4401b0:

            sub RSP,8
.L_4401b4:

            mov ESI,4294967276
            call .L_413c90

            pxor XMM0,XMM0
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_4401cb:

            nop
            nop
            nop
            nop
            nop
.L_4401d0:

            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,40
.L_4401da:

            divsd XMM2,QWORD PTR [RIP+.L_44c5e0]
            movq XMM8,QWORD PTR [RIP+.L_447130]
            divsd XMM0,QWORD PTR [RIP+.L_44c5d8]
            andpd XMM2,XMM8
            ucomisd XMM2,QWORD PTR [RIP+.L_4470f0]
            jb .L_440268

            ucomisd XMM2,QWORD PTR [RIP+.L_44be10]
            ja .L_440238

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_440490

            movsd XMM2,QWORD PTR [RIP+.L_447a20]
.L_440222:

            divsd XMM0,QWORD PTR [RIP+.L_44c5e8]
.L_44022a:

            add RSP,40
.L_44022e:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440238:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call .L_413c90

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440268:

            movsd XMM5,QWORD PTR [RIP+.L_44a850]
            movsd XMM7,QWORD PTR [RIP+.L_447a80]
            movapd XMM4,XMM8
            mulsd XMM5,XMM2
            movapd XMM6,XMM5
            movapd XMM3,XMM5
            andpd XMM6,XMM8
            ucomisd XMM7,XMM6
            ja .L_440460
.L_440298:

            cvttsd2si EBX,XMM3
            cmp EBX,17
            ja .L_440238

            lea RDX,QWORD PTR [RIP+.L_44c340]
            movsxd RAX,EBX
            shl RAX,4
            movss XMM3,DWORD PTR [RDX+RAX*1]
            nop
            nop
            nop
            nop
.L_4402b8:

            pxor XMM5,XMM5
            cvtss2sd XMM5,XMM3
            ucomisd XMM5,XMM2
            jbe .L_4402e3
.L_4402c6:

            sub EBX,1
            pxor XMM5,XMM5
            movsxd RAX,EBX
            shl RAX,4
            movss XMM3,DWORD PTR [RDX+RAX*1]
            cvtss2sd XMM5,XMM3
            ucomisd XMM5,XMM2
            ja .L_4402c6
.L_4402e3:

            lea ECX,DWORD PTR [RBX+1]
            pxor XMM4,XMM4
            movsxd RAX,ECX
            shl RAX,4
            movss XMM6,DWORD PTR [RDX+RAX*1]
            cvtss2sd XMM4,XMM6
            ucomisd XMM2,XMM4
            jb .L_440310

            movaps XMM3,XMM6
            mov EBX,ECX
            jmp .L_4402b8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440310:

            movapd XMM4,XMM2
            movsxd RBP,EBX
            mov RAX,RBP
            subss XMM6,XMM3
            subsd XMM4,XMM5
            shl RAX,4
            add RDX,RAX
            subsd XMM5,XMM2
            mov EAX,100
            movss XMM9,DWORD PTR [RDX+8]
            movaps XMM10,XMM9
            cvtss2sd XMM6,XMM6
            mulsd XMM4,QWORD PTR [RIP+.L_447ce8]
            addss XMM10,XMM9
            pxor XMM7,XMM7
            cvtsd2ss XMM5,XMM5
            cvtss2sd XMM9,XMM9
            cvtss2sd XMM5,XMM5
            cvtss2sd XMM7,DWORD PTR [RDX+4]
            cvtss2sd XMM10,XMM10
            divsd XMM4,XMM6
            pxor XMM6,XMM6
            movsd XMM12,QWORD PTR [RIP+.L_447a90]
            movsd XMM11,QWORD PTR [RIP+.L_449d28]
            cvtss2sd XMM6,DWORD PTR [RDX+12]
            jmp .L_440399
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440390:

            sub EAX,1
            je .L_4404a0
.L_440399:

            movapd XMM2,XMM4
            movapd XMM3,XMM4
            mulsd XMM2,XMM6
            mulsd XMM3,XMM12
            addsd XMM2,XMM9
            mulsd XMM3,XMM6
            mulsd XMM2,XMM4
            addsd XMM3,XMM10
            addsd XMM2,XMM7
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            addsd XMM3,XMM7
            addsd XMM2,XMM5
            divsd XMM2,XMM3
            subsd XMM4,XMM2
            andpd XMM2,XMM8
            ucomisd XMM11,XMM2
            jbe .L_440390
.L_4403e4:

            pxor XMM2,XMM2
            lea EDX,DWORD PTR [RBX+RBX*4]
            pxor XMM3,XMM3
            cvtsi2sd XMM2,EDX
            ucomisd XMM3,XMM1
            addsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RIP+.L_448708]
            ja .L_440480
.L_440405:

            lea RAX,QWORD PTR [RIP+.L_44c480]
            pxor XMM1,XMM1
            shl RBP,4
            pxor XMM3,XMM3
            add RAX,RBP
            cvtss2sd XMM1,DWORD PTR [RAX+12]
            cvtss2sd XMM3,DWORD PTR [RAX+8]
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX+4]
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            mulsd XMM4,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RAX]
            addsd XMM4,XMM1
            divsd XMM0,XMM4
            jmp .L_44022a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440460:

            cvttsd2si RAX,XMM5
            pxor XMM3,XMM3
            andnpd XMM4,XMM5
            cvtsi2sd XMM3,RAX
            orpd XMM3,XMM4
            jmp .L_440298
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440480:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_440405
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440490:

            movsd XMM2,QWORD PTR [RIP+.L_447a18]
            jmp .L_440222
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4404a0:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404200

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_4403e4
.L_4404d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4404e0:

            test RDI,RDI
            je .L_440510

            lea RAX,QWORD PTR [RIP+.L_4401d0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_440070]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440510:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44053e

            lea RDX,QWORD PTR [RIP+.L_440050]
            lea RCX,QWORD PTR [RIP+.L_44c5b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44053e:

            add RSP,8
            ret 
.L_440543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440550:

            lea RDX,QWORD PTR [RIP+.L_4401d0]
            lea RCX,QWORD PTR [RIP+.L_440070]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_440575:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440580:

            xor EAX,EAX
            ret 
.L_440583:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440590:

            test RDI,RDI
            je .L_4405b8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4405ae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4405ae:

            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4405b8:

            xor EAX,EAX
            ret 
.L_4405bb:

            nop
            nop
            nop
            nop
            nop
.L_4405c0:

            jmp .L_440590
.L_4405c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4405d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_4405e4:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSI+128]
            mov R12,RSP
            movsd XMM1,QWORD PTR [RSP+96]
            lea R15,QWORD PTR [R12+16]
            lea R14,QWORD PTR [R12+8]
            movsd XMM3,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBX+136]
            mulsd XMM1,XMM0
            mov RCX,R15
            mov RDX,R14
            mulsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            movsd XMM2,QWORD PTR [RSP+112]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            divsd XMM1,XMM3
            divsd XMM0,XMM3
            call .L_409070

            test RAX,RAX
            jne .L_440728

            movsd XMM3,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+184]
            mov RCX,R15
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,R14
            movsd XMM2,QWORD PTR [RBX+80]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RBX+88]
            mulsd XMM2,XMM3
            mulsd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RBX+64]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+96]
            mulsd XMM5,XMM0
            mulsd XMM1,XMM4
            mulsd XMM0,QWORD PTR [RBX+40]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM1,XMM3
            mulsd XMM3,QWORD PTR [RBX+32]
            addsd XMM2,QWORD PTR [RBX+120]
            addsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RBX+72]
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RBX+48]
            addsd XMM0,XMM3
            addsd XMM1,XMM5
            addsd XMM0,XMM4
            addsd XMM1,QWORD PTR [RBX+112]
            addsd XMM0,QWORD PTR [RBX+104]
            call .L_409290

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM0
.L_440703:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_44074f

            add RSP,40
.L_44071a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440728:

            mov ESI,4294967276
            mov RDI,R13
            call .L_413c90

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            jmp .L_440703
.L_44074f:

            call __stack_chk_fail@PLT
.L_440754:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440760:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_440774:

            mov RBX,QWORD PTR [RSI+32]
            mov R12,RSP
            movsd XMM2,QWORD PTR [RSP+112]
            lea R15,QWORD PTR [R12+16]
            lea R14,QWORD PTR [R12+8]
            mov RSI,R12
            lea RDI,QWORD PTR [RBX+184]
            movsd XMM1,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+104]
            mov RCX,R15
            mov RDX,R14
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_409070

            test RAX,RAX
            jne .L_4408d0

            movsd XMM3,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+136]
            mov RCX,R15
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,R14
            subsd XMM3,QWORD PTR [RBX+104]
            movsd XMM2,QWORD PTR [RBX+48]
            subsd XMM0,QWORD PTR [RBX+112]
            movsd XMM1,QWORD PTR [RBX+72]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RBX+64]
            subsd XMM4,QWORD PTR [RBX+120]
            movsd XMM6,QWORD PTR [RBX+96]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP],XMM3
            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM5,XMM0
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM1,XMM3
            mulsd XMM3,QWORD PTR [RBX+32]
            addsd XMM2,XMM6
            addsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RBX+88]
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RBX+80]
            addsd XMM0,XMM3
            addsd XMM1,XMM5
            addsd XMM0,XMM4
            call .L_409290

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R13+128]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM0
.L_4408a5:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4408f7

            add RSP,40
.L_4408bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4408d0:

            mov ESI,4294967276
            mov RDI,R13
            call .L_413c90

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            jmp .L_4408a5
.L_4408f7:

            call __stack_chk_fail@PLT
.L_4408fc:

            nop
            nop
            nop
            nop
.L_440900:

            push R14
            push R13
            mov ESI,232
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,112
.L_440919:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_403740

            test RAX,RAX
            je .L_440d45

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c5f0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+24],0
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            je .L_440d38

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c5f8]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c600]
            mov QWORD PTR [RBP],RAX
            call .L_403e60

            test EAX,EAX
            je .L_440d38

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c608]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c610]
            mov QWORD PTR [RBP+8],RAX
            call .L_403e60

            test EAX,EAX
            je .L_440d38

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c618]
            call .L_403e60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c620]
            mov QWORD PTR [RBP+16],RAX
            call .L_403e60

            test EAX,EAX
            jne .L_440d70
.L_4409f7:

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mov RBP,QWORD PTR [RBX+32]
            pxor XMM3,XMM3
            subsd XMM0,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_440da3

            movapd XMM0,XMM1
.L_440a29:

            mulsd XMM1,XMM2
            lea R12,QWORD PTR [RBP+184]
            mov RDI,R12
            call .L_408fa0

            test RAX,RAX
            jne .L_440d38

            lea R13,QWORD PTR [RSP+72]
            lea R14,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RBP]
            mov RSI,R14
            mov RDI,R13
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+64]
            mov RSI,R14
            movsd XMM7,QWORD PTR [RSP+72]
            mov RDI,R13
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RBX+176]
            movapd XMM0,XMM7
            pxor XMM6,XMM6
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM0,XMM5
            movsd XMM3,QWORD PTR [RSP+72]
            mulsd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            subsd XMM7,XMM0
            movapd XMM0,XMM7
            sqrtsd XMM7,XMM7
            ucomisd XMM6,XMM0
            ja .L_440dcd
.L_440acf:

            movsd XMM6,QWORD PTR [RBX+128]
            movapd XMM0,XMM7
            movsd XMM1,QWORD PTR [RIP+.L_447a90]
            movapd XMM2,XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            divsd XMM2,XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            mov RSI,R14
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mov RDI,R13
            movsd XMM6,QWORD PTR [RSP+16]
            subsd XMM1,XMM5
            mulsd XMM1,XMM6
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+136]
            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM1,XMM5
            mulsd XMM2,XMM6
            mulsd XMM1,XMM5
            addsd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBP+128],XMM0
            movapd XMM1,XMM0
            call .L_408fa0

            test RAX,RAX
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            jne .L_440d38

            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM2,XMM5
            movsd XMM9,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+80]
            movapd XMM0,XMM8
            mov RDI,R12
            movapd XMM1,XMM9
            movsd QWORD PTR [RBP+80],XMM9
            mulsd XMM0,XMM4
            movapd XMM7,XMM6
            mulsd XMM1,XMM4
            lea RCX,QWORD PTR [RSI+16]
            lea RDX,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RBP+32],XMM0
            movq XMM0,QWORD PTR [RIP+.L_447ae0]
            mulsd XMM7,XMM1
            xorpd XMM2,XMM0
            mulsd XMM1,XMM5
            xorpd XMM0,XMM4
            mulsd XMM2,XMM3
            mulsd XMM0,XMM6
            subsd XMM2,XMM7
            movapd XMM7,XMM6
            movsd QWORD PTR [RBP+40],XMM2
            movapd XMM2,XMM3
            mulsd XMM2,XMM6
            mulsd XMM6,XMM8
            subsd XMM2,XMM1
            movapd XMM1,XMM8
            movsd QWORD PTR [RBP+88],XMM6
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBP+48],XMM2
            movapd XMM2,XMM4
            movsd QWORD PTR [RBP+56],XMM1
            movapd XMM1,XMM9
            mulsd XMM2,XMM5
            mulsd XMM1,XMM3
            mulsd XMM7,XMM1
            mulsd XMM1,XMM5
            mulsd XMM5,XMM8
            subsd XMM2,XMM7
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+96],XMM5
            movsd QWORD PTR [RBP+64],XMM2
            movsd QWORD PTR [RBP+72],XMM0
            movsd XMM2,QWORD PTR [RBP+24]
            movsd XMM0,QWORD PTR [RBP]
            call .L_409070

            test RAX,RAX
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            jne .L_440d8c

            movsd XMM0,QWORD PTR [RBP+128]
            lea RAX,QWORD PTR [RIP+.L_440760]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+80]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM3,XMM1
            mulsd XMM4,XMM1
            movsd XMM1,QWORD PTR [RSP+88]
            subsd XMM1,XMM3
            subsd XMM2,XMM4
            movsd QWORD PTR [RBP+112],XMM1
            movsd XMM1,QWORD PTR [RSP+96]
            movsd QWORD PTR [RBP+104],XMM2
            subsd XMM1,XMM0
            movsd QWORD PTR [RBP+120],XMM1
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_4405d0]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            jmp .L_440d4d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d38:

            mov ESI,4294967259
            mov RDI,RBX
            call .L_413c90
.L_440d45:

            mov RDI,RBX
            call .L_440590
.L_440d4d:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_440e03

            add RSP,112
.L_440d65:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_440d70:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c625]
            call .L_403e60

            mov QWORD PTR [RBP+24],RAX
            jmp .L_4409f7
.L_440d8c:

            mov RDI,RBX
            mov ESI,4294967282
            call .L_413c90

            mov RDI,RBX
            call .L_440590

            jmp .L_440d4d
.L_440da3:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_440a29
.L_440dcd:

            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+176]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_440acf
.L_440e03:

            call __stack_chk_fail@PLT
.L_440e08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440e10:

            test RDI,RDI
            je .L_440e20

            jmp .L_440900
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440e20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_440e4e

            lea RDX,QWORD PTR [RIP+.L_4405c0]
            lea RCX,QWORD PTR [RIP+.L_44c640]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_440e4e:

            add RSP,8
            ret 
.L_440e53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440e60:

            xor EAX,EAX
            ret 
.L_440e63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440e70:

            test RDI,RDI
            je .L_440e90

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403770

            mov RDI,RBX
            pop RBX
            jmp .L_403770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440e90:

            xor EAX,EAX
            ret 
.L_440e93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440ea0:

            jmp .L_440e70
.L_440ea2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440eb0:

            push RBX
            sub RSP,48
.L_440eb5:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RBX]
            mulsd XMM1,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM2,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            test EAX,EAX
            jne .L_440f50

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,48
.L_440f34:

            divsd XMM5,XMM2
            pop RBX
            mulsd XMM1,XMM0
            movapd XMM2,XMM5
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440f50:

            mulsd XMM2,XMM2
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM1
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,48
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_440f89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440f90:

            push RBX
            movapd XMM2,XMM0
            sub RSP,32
.L_440f99:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM2
            divsd XMM1,QWORD PTR [RBX+8]
            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            movapd XMM0,XMM1
            je .L_441010

            call atan@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
.L_440ffd:

            add RSP,32
.L_441001:

            pop RBX
            mulsd XMM3,XMM3
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_441010:

            mov RDI,QWORD PTR [RDI]
            call .L_442670

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            jne .L_440ffd

            add RSP,32
.L_441068:

            pop RBX
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
.L_441072:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441080:

            push RBX
.L_441081:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4410f0

            lea RDX,QWORD PTR [RIP+.L_440f90]
            lea RCX,QWORD PTR [RIP+.L_440eb0]
            mov RSI,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4470e8]
            mov RCX,QWORD PTR [RIP+.L_4470f8]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],1
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4410e8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4410f0:

            mov RDI,RBX
            pop RBX
            jmp .L_440e70
.L_4410f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441100:

            test RDI,RDI
            je .L_441110

            jmp .L_441080
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441110:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44113e

            lea RDX,QWORD PTR [RIP+.L_440ea0]
            lea RCX,QWORD PTR [RIP+.L_44c6e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44113e:

            add RSP,8
            ret 
.L_441143:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441150:

            xor EAX,EAX
            ret 
.L_441153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441160:

            push RBX
.L_441161:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4411d0

            lea RDX,QWORD PTR [RIP+.L_440f90]
            lea RCX,QWORD PTR [RIP+.L_440eb0]
            mov RSI,QWORD PTR [RIP+.L_44c740]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_44c748]
            mov RCX,QWORD PTR [RIP+.L_44c750]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4411c8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4411d0:

            mov RDI,RBX
            pop RBX
            jmp .L_440e70
.L_4411d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4411e0:

            test RDI,RDI
            je .L_4411f0

            jmp .L_441160
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4411f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44121e

            lea RDX,QWORD PTR [RIP+.L_440ea0]
            lea RCX,QWORD PTR [RIP+.L_44c720]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44121e:

            add RSP,8
            ret 
.L_441223:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441230:

            xor EAX,EAX
            ret 
.L_441233:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441240:

            push RBX
.L_441241:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4412b0

            lea RDX,QWORD PTR [RIP+.L_440f90]
            lea RCX,QWORD PTR [RIP+.L_440eb0]
            mov RSI,QWORD PTR [RIP+.L_4470f0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4470e8]
            mov RCX,QWORD PTR [RIP+.L_4470f8]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4412a8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4412b0:

            mov RDI,RBX
            pop RBX
            jmp .L_440e70
.L_4412b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4412c0:

            test RDI,RDI
            je .L_4412d0

            jmp .L_441240
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4412d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4412fe

            lea RDX,QWORD PTR [RIP+.L_440ea0]
            lea RCX,QWORD PTR [RIP+.L_44c700]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4412fe:

            add RSP,8
            ret 
.L_441303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441310:

            xor EAX,EAX
            ret 
.L_441313:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441320:

            push RBX
.L_441321:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_441390

            lea RDX,QWORD PTR [RIP+.L_440f90]
            lea RCX,QWORD PTR [RIP+.L_440eb0]
            mov RSI,QWORD PTR [RIP+.L_44c758]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_44c760]
            mov RCX,QWORD PTR [RIP+.L_44c768]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_441388:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441390:

            mov RDI,RBX
            pop RBX
            jmp .L_440e70
.L_441399:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4413a0:

            test RDI,RDI
            je .L_4413b0

            jmp .L_441320
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4413b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4413de

            lea RDX,QWORD PTR [RIP+.L_440ea0]
            lea RCX,QWORD PTR [RIP+.L_44c6a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4413de:

            add RSP,8
            ret 
.L_4413e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4413f0:

            xor EAX,EAX
            ret 
.L_4413f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441400:

            test RDI,RDI
            je .L_441420

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_441417

            call .L_403770
.L_441417:

            mov RDI,RBX
            pop RBX
            jmp .L_403770
.L_441420:

            xor EAX,EAX
            ret 
.L_441423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441430:

            jmp .L_441400
.L_441432:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441440:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_441449:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBP]
            call .L_442670

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM3
            mulsd XMM2,QWORD PTR [RBX]
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RBX+8]
            add RSP,24
.L_4414a9:

            pop RBX
            pop RBP
            ret 
.L_4414ac:

            nop
            nop
            nop
            nop
.L_4414b0:

            push RBP
            push RBX
            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_4414c3:

            call .L_403740

            test RAX,RAX
            je .L_441630

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44bb22]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_403e60

            test EAX,EAX
            je .L_441610

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b156]
            call .L_403e60

            pxor XMM5,XMM5
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            jae .L_441610

            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            ucomisd XMM0,XMM2
            ja .L_441610

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44c770]
            movsd QWORD PTR [RSP+16],XMM2
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_44aa07]
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            divsd XMM0,QWORD PTR [RIP+.L_447a90]
            movsd QWORD PTR [RBP+16],XMM0
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            call sincos@PLT

            movsd XMM4,QWORD PTR [RBP+24]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            movapd XMM0,XMM2
            pxor XMM6,XMM6
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM3
            subsd XMM0,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM3,XMM0
            ja .L_44163e
.L_4415c9:

            divsd XMM1,XMM3
            lea RAX,QWORD PTR [RIP+.L_441440]
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM1
            mulsd XMM0,XMM4
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+8],XMM2
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],0
            add RSP,56
.L_441605:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441610:

            mov RDI,RBX
            mov ESI,4294967256
            call .L_413c90

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441630:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_441400
.L_44163e:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+24]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4415c9
.L_441671:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441680:

            test RDI,RDI
            je .L_441690

            jmp .L_4414b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441690:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4416be

            lea RDX,QWORD PTR [RIP+.L_441430]
            lea RCX,QWORD PTR [RIP+.L_44c780]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4416be:

            add RSP,8
            ret 
.L_4416c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4416d0:

            xor EAX,EAX
            ret 
.L_4416d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4416e0:

            test RDI,RDI
            je .L_441708

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4416fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_4416fe:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_441708:

            xor EAX,EAX
            ret 
.L_44170b:

            nop
            nop
            nop
            nop
            nop
.L_441710:

            jmp .L_4416e0
.L_441712:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441720:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBX]
            mulsd XMM0,QWORD PTR [RAX]
            call .L_442670

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_44c830]
            mulsd XMM1,QWORD PTR [RAX+8]
            add RSP,16

            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_441777:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441780:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_441789:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM0,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM3
            call .L_442670

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_44c830]
            add RSP,40
.L_4417e4:

            pop RBX
            pop RBP
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
.L_4417ef:

            nop
.L_4417f0:

            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_441802:

            call .L_403740

            test RAX,RAX
            je .L_44186e

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44bb22]
            mov QWORD PTR [RBX+32],RAX
            call .L_403e60

            test EAX,EAX
            je .L_441861

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44b156]
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RBX+32]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RDX],XMM0
            jae .L_441861

            ucomisd XMM0,QWORD PTR [RIP+.L_4470f0]
            jbe .L_441880
.L_441861:

            mov ESI,4294967256
            mov RDI,RBX
            call .L_413c90
.L_44186e:

            add RSP,16
.L_441872:

            mov RDI,RBX
            pop RBX
            jmp .L_4416e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441880:

            movsd XMM1,QWORD PTR [RIP+.L_44c838]
            lea RAX,QWORD PTR [RIP+.L_441780]
            divsd XMM1,XMM0
            movsd QWORD PTR [RDX+8],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_441720]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
            mov RAX,RBX
            pop RBX
            ret 
.L_4418bb:

            nop
            nop
            nop
            nop
            nop
.L_4418c0:

            test RDI,RDI
            je .L_4418d0

            jmp .L_4417f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4418d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4418fe

            lea RDX,QWORD PTR [RIP+.L_441710]
            lea RCX,QWORD PTR [RIP+.L_44c800]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4418fe:

            add RSP,8
            ret 
.L_441903:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441910:

            push RBX
.L_441911:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_441970

            mov RDX,QWORD PTR [RIP+.L_44a138]
            mov RCX,QWORD PTR [RIP+.L_44c840]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_441780]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_441720]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_441966:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441970:

            mov RDI,RBX
            pop RBX
            jmp .L_4416e0
.L_441979:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441980:

            test RDI,RDI
            je .L_441990

            jmp .L_441910
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441990:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4419be

            lea RDX,QWORD PTR [RIP+.L_441710]
            lea RCX,QWORD PTR [RIP+.L_44c7c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4419be:

            add RSP,8
            ret 
.L_4419c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4419d0:

            xor EAX,EAX
            ret 
.L_4419d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4419e0:

            xor EAX,EAX
            ret 
.L_4419e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4419f0:

            jmp .L_403770
.L_4419f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441a00:

            push RBX
            mov RBX,RDI
            sub RSP,16

            mulsd XMM1,QWORD PTR [RIP+.L_44c868]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_44c870]
            mov RDI,QWORD PTR [RBX]
            call .L_442670

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_44c878]
            mulsd XMM1,QWORD PTR [RIP+.L_44c880]
            add RSP,16

            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_441a5e:

            nop
            nop
.L_441a60:

            push RBX
            mov RBX,RDI
            sub RSP,32

            divsd XMM1,QWORD PTR [RIP+.L_44c880]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44c878]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,QWORD PTR [RIP+.L_44c870]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_442670

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,QWORD PTR [RIP+.L_44c868]
            add RSP,32

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_441ad9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441ae0:

            test RDI,RDI
            je .L_441b10

            lea RAX,QWORD PTR [RIP+.L_441a60]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_441a00]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441b10:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_441b3e

            lea RDX,QWORD PTR [RIP+.L_4419f0]
            lea RCX,QWORD PTR [RIP+.L_44c850]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_441b3e:

            add RSP,8
            ret 
.L_441b43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441b50:

            lea RDX,QWORD PTR [RIP+.L_441a60]
            lea RCX,QWORD PTR [RIP+.L_441a00]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_441b75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441b80:

            xor EAX,EAX
            ret 
.L_441b83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441b90:

            jmp .L_403790
.L_441b95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441ba0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_44b480]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RAX]
            add RSP,16
            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_441be1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441bf0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_44b480]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RAX]
            add RSP,16
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_441c35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441c40:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_441c52:

            call .L_403740

            test RAX,RAX
            je .L_441cf0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            mov QWORD PTR [RBX+32],RAX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            addsd XMM1,XMM1
            divsd XMM1,QWORD PTR [RIP+.L_447a90]
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RBX+32]
            divsd XMM2,XMM0
            movsd QWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [RIP+.L_441bf0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_441ba0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_441ce4:

            add RSP,16
.L_441ce8:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441cf0:

            mov RDI,RBX
            call .L_403790

            xor EAX,EAX
            jmp .L_441ce4
.L_441cfc:

            nop
            nop
            nop
            nop
.L_441d00:

            test RDI,RDI
            je .L_441d10

            jmp .L_441c40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441d10:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_441d3e

            lea RDX,QWORD PTR [RIP+.L_441b90]
            lea RCX,QWORD PTR [RIP+.L_44c8a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_441d3e:

            add RSP,8
            ret 
.L_441d43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441d50:

            xor EAX,EAX
            ret 
.L_441d53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441d60:

            test RDI,RDI
            je .L_441d88

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_441d7e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_441d7e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_441d88:

            xor EAX,EAX
            ret 
.L_441d8b:

            nop
            nop
            nop
            nop
            nop
.L_441d90:

            jmp .L_441d60
.L_441d92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441da0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RAX]
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            add RSP,16
            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_441de1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441df0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RAX]
            add RSP,16
            addsd XMM2,XMM2
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_441e31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441e40:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_441e52:

            call .L_403740

            test RAX,RAX
            je .L_441eb8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449cb0]
            mov QWORD PTR [RBX+32],RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_441df0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_441da0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_441eb0:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441eb8:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_441d60
.L_441ec5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441ed0:

            test RDI,RDI
            je .L_441ee0

            jmp .L_441e40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441ee0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_441f0e

            lea RDX,QWORD PTR [RIP+.L_441d90]
            lea RCX,QWORD PTR [RIP+.L_44c8d0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_441f0e:

            add RSP,8
            ret 
.L_441f13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f20:

            xor EAX,EAX
            ret 
.L_441f23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f30:

            test RDI,RDI
            je .L_441f58

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_441f4e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403770

            mov RDI,RBX
            pop RBX
.L_441f4e:

            jmp .L_403770

            nop
            nop
            nop
            nop
            nop
.L_441f58:

            xor EAX,EAX
            ret 
.L_441f5b:

            nop
            nop
            nop
            nop
            nop
.L_441f60:

            jmp .L_441f30
.L_441f62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f70:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_441f82:

            movsd XMM5,QWORD PTR [RIP+.L_44ad88]
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_447a78]
            mulsd XMM1,QWORD PTR [RIP+.L_44c928]
            movsd QWORD PTR [RSP+8],XMM0
            nop
            nop
            nop
.L_441fd0:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_449e30]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+8]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM4,XMM2
            ja .L_442050

            sub EBX,1
            jne .L_441fd0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_4420b0

            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RIP+.L_448438]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            jmp .L_442081
          .byte 0x66
          .byte 0x90
.L_442050:

            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP]
.L_442081:

            mov RAX,QWORD PTR [R13+32]
            addsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RAX]
            mulsd XMM1,QWORD PTR [RIP+.L_447a38]
            add RSP,56
.L_4420a1:

            pop RBX
            pop RBP
            mulsd XMM0,XMM2
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4420b0:

            movsd XMM1,QWORD PTR [RIP+.L_447a58]
            movsd XMM0,QWORD PTR [RIP+.L_448438]
            movsd XMM2,QWORD PTR [RIP+.L_4470f8]
            jmp .L_442081
.L_4420ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4420d0:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_4420e2:

            call .L_403740

            test RAX,RAX
            je .L_442148

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449d96]
            mov QWORD PTR [RBX+32],RAX
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_441f70]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_44213d:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442148:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_441f30
.L_442155:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442160:

            test RDI,RDI
            je .L_442170

            jmp .L_4420d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442170:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44219e

            lea RDX,QWORD PTR [RIP+.L_441f60]
            lea RCX,QWORD PTR [RIP+.L_44c900]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44219e:

            add RSP,8
            ret 
.L_4421a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4421b0:

            xor EAX,EAX
            ret 
.L_4421b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4421c0:

            movsd XMM2,QWORD PTR [RDI+128]
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            ret 
.L_4421d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4421e0:

            movsd XMM2,QWORD PTR [RDI+128]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_4421f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442200:

            test RDI,RDI
            je .L_442210

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442210:

            ret 
.L_442212:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442220:

            test RDI,RDI
            je .L_442260

            lea RAX,QWORD PTR [RIP+.L_4421e0]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4421c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_442260:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44228e

            lea RDX,QWORD PTR [RIP+.L_442200]
            lea RCX,QWORD PTR [RIP+.L_44c950]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44228e:

            add RSP,8
            ret 
.L_442293:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4422a0:

            lea RDX,QWORD PTR [RIP+.L_4421e0]
            lea RCX,QWORD PTR [RIP+.L_4421c0]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4422da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4422e0:

            test RDI,RDI
            je .L_442320

            lea RAX,QWORD PTR [RIP+.L_4421e0]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4421c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_442320:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44234e

            lea RDX,QWORD PTR [RIP+.L_442200]
            lea RCX,QWORD PTR [RIP+.L_44c930]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44234e:

            add RSP,8
            ret 
.L_442353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442360:

            lea RDX,QWORD PTR [RIP+.L_4421e0]
            lea RCX,QWORD PTR [RIP+.L_4421c0]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44239a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4423a0:

            test RDI,RDI
            je .L_4423e0

            lea RAX,QWORD PTR [RIP+.L_4421e0]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4421c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4423e0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44240e

            lea RDX,QWORD PTR [RIP+.L_442200]
            lea RCX,QWORD PTR [RIP+.L_44c970]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44240e:

            add RSP,8
            ret 
.L_442413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442420:

            lea RDX,QWORD PTR [RIP+.L_4421e0]
            lea RCX,QWORD PTR [RIP+.L_4421c0]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44245a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_442460:

            test RDI,RDI
            je .L_4424a0

            lea RAX,QWORD PTR [RIP+.L_4421e0]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4421c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4424a0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_4424ce

            lea RDX,QWORD PTR [RIP+.L_442200]
            lea RCX,QWORD PTR [RIP+.L_44c990]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4424ce:

            add RSP,8
            ret 
.L_4424d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4424e0:

            lea RDX,QWORD PTR [RIP+.L_4421e0]
            lea RCX,QWORD PTR [RIP+.L_4421c0]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44251a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_442520:

            xor EAX,EAX
            ret 
.L_442523:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442530:

            xor EAX,EAX
            ret 
.L_442533:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442540:

            xor EAX,EAX
            ret 
.L_442543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442550:

            xor EAX,EAX
            ret 
.L_442553:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442560:

            ret 
.L_442562:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442570:

            ret 
.L_442572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442580:

            test RDI,RDI
            je .L_442590

            jmp .L_403770
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442590:

            ret 
.L_442592:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4425a0:

            test RDI,RDI
            je .L_4425e0

            lea RAX,QWORD PTR [RIP+.L_442570]
            mov DWORD PTR [RDI+316],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_442560]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4425e0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403740

            test RAX,RAX
            je .L_44260e

            lea RDX,QWORD PTR [RIP+.L_442580]
            lea RCX,QWORD PTR [RIP+.L_44c9a8]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44260e:

            add RSP,8
            ret 
.L_442613:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442620:

            lea RDX,QWORD PTR [RIP+.L_442570]
            lea RCX,QWORD PTR [RIP+.L_442560]
            mov RAX,RDI
            mov DWORD PTR [RDI+316],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44265a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_442660:

            xor EAX,EAX
            ret 
.L_442663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442670:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_4470f0]
            jb .L_4426e0

            ucomisd XMM1,QWORD PTR [RIP+.L_44c9b8]
            ja .L_4426a8

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_4426e8

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4426a8:

            sub RSP,24
            mov ESI,4294967277
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404200

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_4426f8

            movsd XMM0,QWORD PTR [RIP+.L_447a20]
.L_4426d4:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4426e0:

            jmp asin@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4426e8:

            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4426f8:

            movsd XMM0,QWORD PTR [RIP+.L_447a18]
            jmp .L_4426d4
.L_442702:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442710:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM1,QWORD PTR [RIP+.L_4470f0]
            jb .L_442770

            ucomisd XMM1,QWORD PTR [RIP+.L_44c9b8]
            ja .L_442740

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_442778

            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_442740:

            sub RSP,24
            mov ESI,4294967277
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404200

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_442788

            pxor XMM0,XMM0
.L_442768:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442770:

            jmp acos@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442778:

            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442788:

            movsd XMM0,QWORD PTR [RIP+.L_447a78]
            jmp .L_442768
.L_442792:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4427a0:

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            jae .L_4427b0

            sqrtsd XMM1,XMM0
            ja .L_4427b5
.L_4427b0:

            movapd XMM0,XMM1
            ret 
.L_4427b5:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_4427d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4427e0:

            movq XMM2,QWORD PTR [RIP+.L_447130]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44c9c0]
            andpd XMM4,XMM2
            ucomisd XMM3,XMM4
            jbe .L_442808

            andpd XMM2,XMM1
            ucomisd XMM3,XMM2
            ja .L_442810
.L_442808:

            jmp atan2@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442810:

            pxor XMM0,XMM0
            ret 
.L_442815:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442820:

            movq XMM1,QWORD PTR [RIP+.L_447130]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44c9c8]
            andpd XMM2,XMM1
            ucomisd XMM3,XMM2
            jae .L_442880

            movsd XMM4,QWORD PTR [RIP+.L_447a78]
            movsd XMM5,QWORD PTR [RIP+.L_448430]
            addsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_447a80]
            movapd XMM6,XMM0
            divsd XMM6,XMM5
            movapd XMM3,XMM6
            movapd XMM2,XMM6
            andpd XMM3,XMM1
            ucomisd XMM7,XMM3
            ja .L_442888

            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            subsd XMM0,XMM4
.L_442880:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442888:

            cvttsd2si RAX,XMM6
            pxor XMM3,XMM3
            andnpd XMM1,XMM6
            cvtsi2sd XMM3,RAX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM6
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            andpd XMM2,XMM7
            subsd XMM3,XMM2
            movapd XMM2,XMM3
            orpd XMM2,XMM1
            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            subsd XMM0,XMM4
            jmp .L_442880
.L_4428cd:

            nop
            nop
            nop
.L_4428d0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_4428e4:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RBX
            xor EBX,EBX
            test RDX,RDX
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+32],RDX
            je .L_44290c

            mov RAX,RDX
            mov QWORD PTR [RAX],RSI
.L_44290c:

            call __ctype_b_loc@PLT

            mov R13,RAX
            mov RSI,QWORD PTR [RAX]
            jmp .L_442924
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442920:

            add R15,1
.L_442924:

            movsx RCX,BYTE PTR [R15]
            mov RDX,RCX
            movzx ECX,WORD PTR [RSI+RCX*2]
            test CH,32
            jne .L_442920

            lea RSI,QWORD PTR [RSP+64]
            test CX,CX
            mov QWORD PTR [RSP+16],RSI
            jns .L_442c65

            lea R9,QWORD PTR [R15+63]
            mov RCX,R15
            jmp .L_442955
.L_442950:

            cmp RCX,R9
            je .L_44297b
.L_442955:

            lea RDI,QWORD PTR [RSI+1]
            add RCX,1
            mov QWORD PTR [RSP+56],RDI
            mov BYTE PTR [RSI],DL
            movsx RDI,BYTE PTR [RCX]
            mov RSI,QWORD PTR [R13]
            cmp WORD PTR [RSI+RDI*2],0
            mov RDX,RDI
            mov RSI,QWORD PTR [RSP+56]
            js .L_442950
.L_44297b:

            mov BYTE PTR [RSI],0
            movzx R14D,BYTE PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+16]
            lea ECX,DWORD PTR [R14-43]
            mov QWORD PTR [RSP+56],RAX
            and ECX,253
            jne .L_442c48

            movsx EBX,R14B
            movzx R14D,BYTE PTR [RSP+65]
            lea R9,QWORD PTR [RAX+1]
            mov DWORD PTR [RSP+44],EBX
            mov QWORD PTR [RSP+56],R9
.L_4429b5:

            pxor XMM3,XMM3
            lea RBP,QWORD PTR [RSP+56]
            xor EBX,EBX
            movsd QWORD PTR [RSP+8],XMM3
.L_4429c6:

            mov RSI,QWORD PTR [R13]
            movsx RCX,R14B
            test BYTE PTR [RSI+RCX*2+1],8
            jne .L_4429df

            cmp R14B,46
            jne .L_442c5a
.L_4429df:

            test R14B,R14B
            je .L_442a1e

            mov ECX,R14D
            mov R12,R9
            and ECX,4294967263
            cmp CL,68
            jne .L_442a10

            jmp .L_442aa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442a00:

            mov ESI,R14D
            and ESI,4294967263
            cmp SIL,68
            je .L_442aa0
.L_442a10:

            add R12,1
            movzx R14D,BYTE PTR [R12]
            test R14B,R14B
            jne .L_442a00
.L_442a1e:

            mov RSI,RBP
            mov RDI,R9
            call .L_413770

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_442ac8
.L_442a37:

            mov RCX,QWORD PTR [RSP+56]
            movzx R14D,BYTE PTR [RCX]
            cmp R14B,68
            je .L_442bf8

            jg .L_442af8

            cmp R14B,34
            je .L_442bd0

            cmp R14B,39
            jne .L_442b0e

            cmp EBX,1
            jg .L_442c28

            mulsd XMM0,QWORD PTR [RIP+.L_44c9f8]
            lea R9,QWORD PTR [RCX+1]
            mov EBX,2
            mov QWORD PTR [RSP+56],R9
            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
.L_442a8f:

            movzx R14D,BYTE PTR [RCX+1]
            jmp .L_4429c6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442aa0:

            mov BYTE PTR [R12],0
            mov RSI,RBP
            mov RDI,R9
            call strtod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            mov BYTE PTR [R12],R14B
            jbe .L_442a37

            nop
            nop
            nop
            nop
            nop
            nop
.L_442ac8:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_442c6f

            add RSP,152
.L_442ae6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442af8:

            cmp R14B,100
            je .L_442bf8

            cmp R14B,114
            je .L_442b80

            cmp R14B,82
            je .L_442b80
.L_442b0e:

            lea RAX,QWORD PTR [RIP+.L_44c9e0]
            mov R9,RCX
            mulsd XMM0,QWORD PTR [RAX+RBX*8]
            addsd XMM0,QWORD PTR [RSP+8]
.L_442b23:

            test R14B,R14B
            mov QWORD PTR [RSP+8],R9
            je .L_442ba0
.L_442b2d:

            lea RDI,QWORD PTR [RIP+.L_44c9d0]
            movsx ESI,R14B
            movsd QWORD PTR [RSP+24],XMM0
            call strchr@PLT

            test RAX,RAX
            movsd XMM0,QWORD PTR [RSP+24]
            je .L_442ba0

            mov R9,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44c9d0]
            sub RAX,RDX
            add R9,1
            cmp RAX,3
            mov QWORD PTR [RSP+56],R9
            jle .L_442ba7
.L_442b6c:

            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            jmp .L_442ba7

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442b80:

            test EBX,EBX
            jne .L_442c28

            lea R9,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+56],R9
            movzx R14D,BYTE PTR [RCX+1]
            mov QWORD PTR [RSP+8],R9
            test R14B,R14B
            jne .L_442b2d
.L_442ba0:

            cmp DWORD PTR [RSP+44],45
            je .L_442b6c
.L_442ba7:

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_442ac8

            mov R8,QWORD PTR [RSP+56]
            add R8,R15
            sub R8,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],R8
            jmp .L_442ac8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442bd0:

            mulsd XMM0,QWORD PTR [RIP+.L_448270]
            lea R9,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+56],R9
            movzx R14D,BYTE PTR [RCX+1]
            addsd XMM0,QWORD PTR [RSP+8]
            jmp .L_442b23
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442bf8:

            test EBX,EBX
            jg .L_442c28

            mulsd XMM0,QWORD PTR [RIP+.L_448708]
            lea R9,QWORD PTR [RCX+1]
            mov EBX,1
            mov QWORD PTR [RSP+56],R9
            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_442a8f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442c28:

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,4294967280
            call .L_404200

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            jmp .L_442ac8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442c48:

            mov R9,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+44],43
            jmp .L_4429b5
.L_442c5a:

            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_442b23
.L_442c65:

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_44297b
.L_442c6f:

            call __stack_chk_fail@PLT
.L_442c74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442c80:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_404160

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            pop RBX
            pop RBP
            mov RDI,RAX
            jmp .L_4428d0
.L_442ca5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442cb0:

            sub RSP,24
.L_442cb4:

            mov EDI,24
            movsd QWORD PTR [RSP+8],XMM0
            call .L_403700

            test RAX,RAX
            je .L_442d35

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_44ca00]
            movapd XMM1,XMM0
            movapd XMM2,XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_448f68]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_44ca10]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44ca08]
            mulsd XMM3,XMM2
            addsd XMM0,XMM3
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44ca18]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_44ca20]
            addsd XMM1,XMM0
            movsd QWORD PTR [RAX+16],XMM2
            movsd QWORD PTR [RAX+8],XMM1
.L_442d35:

            add RSP,24
.L_442d39:

            ret 
.L_442d3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_442d40:

            movapd XMM3,XMM0
            push RBX
            mov RBX,RDI
            addsd XMM3,XMM0
            sub RSP,48

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RBX]
            mulsd XMM4,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RBX+16]
            add RSP,48

            pop RBX
            addsd XMM1,XMM5
            addsd XMM1,XMM4
            addsd XMM0,XMM1
            ret 
.L_442ddf:

            nop
.L_442de0:

            movapd XMM5,XMM2
            movapd XMM3,XMM0
            movq XMM4,QWORD PTR [RIP+.L_447130]
            addsd XMM5,XMM1
            addsd XMM3,XMM2
            movapd XMM0,XMM5
            andpd XMM0,XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_447a20]
            ja .L_442ff0

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM0,XMM3
            mov RBX,RSI
            sub RSP,56
.L_442e1e:

            movapd XMM1,XMM5
            movaps XMMWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call QWORD PTR [RDI+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_442fe0

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            addsd XMM6,XMM6
            movapd XMM4,XMMWORD PTR [RSP+16]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+24],XMM1
            subsd XMM5,XMM6
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            andpd XMM4,XMM5
            ucomisd XMM4,QWORD PTR [RIP+.L_447a20]
            ja .L_442fe0

            movsd XMM3,QWORD PTR [RSP+40]
            mov RDI,RBP
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_442fe0

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,RBP
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX],XMM2
            movsd XMM2,QWORD PTR [RBX+24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM1,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+24],XMM2
            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RBX+16],XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RBX+8],XMM2
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_442fe0

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,RBP
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX],XMM2
            movsd XMM2,QWORD PTR [RBX+24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RBX+24],XMM2
            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM3
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_447db8]
            ja .L_442fe0

            movsd XMM5,QWORD PTR [RBX+24]
            xor EAX,EAX
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RBX]
            addsd XMM5,XMM1
            movsd XMM4,QWORD PTR [RBX+8]
            subsd XMM2,XMM1
            subsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM4,XMM0
            addsd XMM1,XMM1
            movapd XMM0,XMM3
            divsd XMM5,XMM1
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+24],XMM5
            divsd XMM4,XMM1
            movsd QWORD PTR [RBX],XMM0
            divsd XMM2,XMM1
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX+16],XMM2
            add RSP,56
.L_442fdd:

            pop RBX
            pop RBP
            ret 
.L_442fe0:

            add RSP,56
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_442ff0:

            mov EAX,1
            ret 
.L_442ff6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443000:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            xor ESI,ESI
            mov R13,RDX
            mov RBX,RDI
            sub RSP,40
.L_44301c:

            call .L_404200

            lea RDX,QWORD PTR [RIP+.L_44ca28]
            mov QWORD PTR [R15],0
            mov RSI,R12
            mov QWORD PTR [R13],0
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_443090

            lea RDX,QWORD PTR [RIP+.L_44ca2b]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [R13],RAX
            ucomisd XMM1,QWORD PTR [R15]
            ja .L_4432b5
.L_44306b:

            xor EAX,EAX
            ucomisd XMM1,QWORD PTR [R13]
            jae .L_443340
.L_443079:

            add RSP,40
.L_44307d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443090:

            lea RDX,QWORD PTR [RIP+.L_44ca2e]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_443368

            test R12,R12
            je .L_443510

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            jne .L_4430d3

            jmp .L_443520
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4430d0:

            mov RBP,RAX
.L_4430d3:

            mov RAX,QWORD PTR [RBP]
            test RAX,RAX
            jne .L_4430d0
.L_4430dc:

            mov RSI,QWORD PTR [RIP+.L_65d700]
            xor R14D,R14D
            test RSI,RSI
            jne .L_44310f

            jmp .L_4432e0
.L_4430f0:

            add R14,1
            lea RCX,QWORD PTR [RIP+.L_65d700]
            mov RAX,R14
            shl RAX,5
            mov RSI,QWORD PTR [RCX+RAX*1]
            test RSI,RSI
            je .L_4432e0
.L_44310f:

            mov RDI,QWORD PTR [RSP]
            mov DWORD PTR [RSP+8],R14D
            call strcmp@PLT

            test EAX,EAX
            jne .L_4430f0

            movsxd RAX,DWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RIP+.L_65d700]
            shl RAX,5
            lea R14,QWORD PTR [RCX+RAX*1]
            mov RDI,QWORD PTR [R14+8]
            call .L_403e10

            mov RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RSP],RAX
            call .L_403e10

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RDX],RAX
.L_443156:

            lea RDX,QWORD PTR [RIP+.L_44989d]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            lea RDX,QWORD PTR [RIP+.L_44ca35]
            mov QWORD PTR [R13],RAX
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            jne .L_443308

            lea RDX,QWORD PTR [RIP+.L_44981e]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_4433e8

            lea RDX,QWORD PTR [RIP+.L_44a108]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM0,XMM0
            movsd QWORD PTR [R15],XMM0
.L_4431d5:

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [R13]
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            sqrtsd XMM2,XMM7
            movapd XMM0,XMM7
            ja .L_4437a0
.L_4431f6:

            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+16],XMM3
.L_443200:

            lea RDX,QWORD PTR [RIP+.L_44ca44]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_443370

            movsd XMM2,QWORD PTR [R15]
            movsd XMM0,QWORD PTR [RIP+.L_44ca88]
            movsd XMM5,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44ca90]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44a6d8]
            mulsd XMM0,XMM2
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [R13]
            mulsd XMM0,XMM5
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
.L_44326f:

            test RBP,RBP
            je .L_44329b

            mov RAX,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,QWORD PTR [RAX]
            call .L_403730

            mov RDI,QWORD PTR [RBP]
            call .L_403730

            movsd XMM1,QWORD PTR [RSP]
            mov QWORD PTR [RBP],0
.L_44329b:

            mov EDX,DWORD PTR [RBX]
            mov EAX,1
            test EDX,EDX
            jne .L_443079

            ucomisd XMM1,QWORD PTR [R15]
            jbe .L_44306b
.L_4432b5:

            mov RDI,RBX
            mov ESI,4294967284
            call .L_404200

            add RSP,40
.L_4432c6:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4432e0:

            mov RDI,RBX
            mov ESI,4294967287
            call .L_404200

            add RSP,40
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443308:

            lea RDX,QWORD PTR [RIP+.L_44ca39]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [R15],XMM0
            jmp .L_4431d5
          .byte 0x66
          .byte 0x90
.L_443340:

            mov RDI,RBX
            mov ESI,4294967283
            call .L_404200

            add RSP,40
.L_443351:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443368:

            xor EBP,EBP
            jmp .L_443156
          .byte 0x90
.L_443370:

            lea RDX,QWORD PTR [RIP+.L_44ca49]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_4434c0

            movsd XMM2,QWORD PTR [R15]
            movsd XMM0,QWORD PTR [RIP+.L_44ca98]
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44caa0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44a6d8]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            movsd XMM0,QWORD PTR [R13]
            mulsd XMM0,XMM4
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44326f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4433e8:

            lea RDX,QWORD PTR [RIP+.L_446fe8]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_443460

            lea RDX,QWORD PTR [RIP+.L_44ca3d]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            pxor XMM1,XMM1
            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM0,XMM1
            movsd QWORD PTR [R15],XMM0
            jp .L_44342e

            je .L_44355d
.L_44342e:

            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            movapd XMM2,XMM7
            movsd QWORD PTR [RSP],XMM7
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            subsd XMM0,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [R15],XMM0
            jmp .L_4431d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443460:

            lea RDX,QWORD PTR [RIP+.L_446fec]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            je .L_443528

            lea RDX,QWORD PTR [RIP+.L_4498a5]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RIP+.L_4470e8]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM6
            mulsd XMM0,XMM1
            pxor XMM1,XMM1
            movsd QWORD PTR [R15],XMM0
            jmp .L_4431d5
.L_4434c0:

            lea RDX,QWORD PTR [RIP+.L_44ca4e]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_443579

            movsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [R13]
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44326f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443510:

            xor EBP,EBP
            jmp .L_4430dc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443520:

            mov RBP,R12
            jmp .L_4430dc
.L_443528:

            lea RDX,QWORD PTR [RIP+.L_446fe5]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            jne .L_4435cb

            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd XMM0,QWORD PTR [R15]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM4
            jmp .L_4431d5
.L_44355d:

            mov ESI,4294967286
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44326f
.L_443579:

            lea RDX,QWORD PTR [RIP+.L_44ca53]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_443638

            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [R13]
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_443893
.L_4435b9:

            movsd QWORD PTR [R13],XMM2
            mov QWORD PTR [R15],0
            jmp .L_44326f
.L_4435cb:

            lea RDX,QWORD PTR [RIP+.L_44ca41]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [R13]
            movsd XMM6,QWORD PTR [RSP]
            mulsd XMM0,XMM0
            movapd XMM1,XMM6
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP],XMM4
            divsd XMM1,XMM0
            subsd XMM4,XMM1
            pxor XMM1,XMM1
            ucomisd XMM6,XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [R15],XMM4
            jp .L_443200

            jne .L_443200

            jmp .L_4431d5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443638:

            lea RDX,QWORD PTR [RIP+.L_44ca58]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_443696

            movsd XMM0,QWORD PTR [R13]
            movsd XMM2,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            ucomisd XMM2,XMM1
            jp .L_443676

            je .L_443784
.L_443676:

            addsd XMM0,XMM0
            mulsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44326f
.L_443696:

            lea RDX,QWORD PTR [RIP+.L_44ca5d]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_4437ce

            lea RDX,QWORD PTR [RIP+.L_44ca6f]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            ja .L_443877

            movsd XMM4,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM4
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM2,XMM0
            mulsd XMM0,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM4
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,XMM3
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_4470f8]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
.L_44376c:

            mulsd XMM0,QWORD PTR [R13]
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44326f
.L_443784:

            mov ESI,4294967276
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44326f
.L_4437a0:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4431f6
.L_4437ce:

            lea RDX,QWORD PTR [RIP+.L_44ca66]
            mov RSI,R12
            mov RDI,RBX
            call .L_403e60

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44326f

            lea RDX,QWORD PTR [RIP+.L_44ca78]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            call .L_403e60

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            andpd XMM2,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM2,QWORD PTR [RIP+.L_447a20]
            ja .L_443877

            movsd XMM2,QWORD PTR [R15]
            movsd QWORD PTR [RSP+16],XMM1
            movapd XMM3,XMM2
            mulsd XMM3,XMM0
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,QWORD PTR [RSP+8]
            divsd XMM0,XMM2
            jmp .L_44376c
.L_443877:

            mov ESI,4294967285
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44326f
.L_443893:

            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_4435b9
.L_4438ad:

            nop
            nop
            nop
.L_4438b0:

            lea RAX,QWORD PTR [RIP+.L_65d700]
            ret 
.L_4438b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4438c0:

            lea RAX,QWORD PTR [RIP+.L_65de9c]
            ret 
.L_4438c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4438d0:

            push R12
            push RBP
            push RBX
            movapd XMM4,XMM0
            movapd XMM0,XMM1
            sub RSP,96
.L_4438e0:

            mov R12,QWORD PTR [RDI]
            movq XMM3,QWORD PTR [RIP+.L_447130]
            mov QWORD PTR [RSP+48],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            andpd XMM0,XMM3
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            movapd XMM5,XMM0
            subsd XMM5,QWORD PTR [RIP+.L_447a20]
            ucomisd XMM5,QWORD PTR [RIP+.L_447e58]
            ja .L_443c08

            andpd XMM3,XMM4
            ucomisd XMM3,QWORD PTR [RIP+.L_44d1a8]
            ja .L_443c08

            movsd QWORD PTR [RSP+24],XMM2
            mov RBP,RDI
            mov RBX,RSI
            movsd QWORD PTR [RSP+16],XMM1
            mov DWORD PTR [RIP+.L_65de9c],0
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM0
            call __errno_location@PLT

            movsd XMM7,QWORD PTR [RIP+.L_447e58]
            movsd XMM2,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX],0
            movsd XMM0,QWORD PTR [RSP]
            mov DWORD PTR [R12],0
            ucomisd XMM7,XMM2
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            ja .L_443c40

            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            subsd XMM3,XMM2
            ucomisd XMM0,XMM3
            jbe .L_443c5a
.L_4439c8:

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            jbe .L_4439e0

            movapd XMM3,XMM2
            subsd XMM3,QWORD PTR [RIP+.L_447a20]
            nop
            nop
.L_4439e0:

            mov EAX,DWORD PTR [RBP+304]
            subsd XMM4,QWORD PTR [RBP+328]
            test EAX,EAX
            je .L_443cf0
.L_4439f6:

            mov RAX,QWORD PTR [RBP+104]
            test RAX,RAX
            je .L_443a31

            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            mov RSI,RBX
            mov RDI,RBP
            call RAX

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
.L_443a31:

            mov R12D,DWORD PTR [RBX+96]
            mov EAX,R12D
            and EAX,3
            cmp EAX,3
            je .L_443a72

            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movapd XMM1,XMM3
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM3
            call .L_442de0

            mov EDX,EAX
            mov EAX,1
            test EDX,EDX
            jne .L_443c1a

            mov R12D,DWORD PTR [RBX+96]
            movsd XMM3,QWORD PTR [RSP]
.L_443a72:

            test R12B,1
            jne .L_443a8d

            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBX+16],XMM0
.L_443a8d:

            test R12B,2
            je .L_443ca8

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
.L_443aa1:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            test R12B,4
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_443d88

            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RBP+176]
            ucomisd XMM0,XMM4
            jp .L_443af8

            je .L_443d20
.L_443af8:

            mulsd XMM0,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            subsd XMM0,XMM3
            mulsd XMM0,XMM0
            movapd XMM3,XMM0
            divsd XMM3,QWORD PTR [RBP+216]
.L_443b1c:

            and R12D,8
            je .L_443d30
.L_443b26:

            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM1,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+32]
            subsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM0,XMM3
            divsd XMM0,XMM5
            movsd QWORD PTR [RBX+72],XMM0
            divsd XMM0,XMM1
            call .L_442670

            movsd XMM1,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+56],XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM4,QWORD PTR [RSP]
            addsd XMM3,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            ja .L_443e58
.L_443b9f:

            subsd XMM1,XMM3
            pxor XMM2,XMM2
            movsd QWORD PTR [RBX+80],XMM5
            ucomisd XMM2,XMM1
            jb .L_443cc8
.L_443bb6:

            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_4470f8]
            mov RDI,QWORD PTR [RBP]
            subsd XMM1,XMM2
            addsd XMM2,XMM5
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
            movsd QWORD PTR [RBX+88],XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+80],XMM2
            addsd XMM2,XMM1
            subsd XMM0,XMM1
            divsd XMM0,XMM2
            call .L_442670

            addsd XMM0,XMM0
            xor EAX,EAX
            movsd QWORD PTR [RBX+48],XMM0
            jmp .L_443c1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443c08:

            mov ESI,4294967282
            mov RDI,R12
            call .L_404200

            mov EAX,1
.L_443c1a:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_443e87

            add RSP,96
.L_443c32:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443c40:

            movsd XMM3,QWORD PTR [RIP+.L_44d1a0]
            movsd XMM2,QWORD PTR [RIP+.L_449068]
            ucomisd XMM0,XMM3
            ja .L_4439c8
.L_443c5a:

            mov EDX,DWORD PTR [RBP+308]
            movapd XMM3,XMM1
            test EDX,EDX
            je .L_4439e0

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBP+224]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_4439e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443ca8:

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+24],XMM1
            jmp .L_443aa1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443cc8:

            sqrtsd XMM2,XMM1
            jbe .L_443bb6

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+80]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_443bb6
          .byte 0x90
.L_443cf0:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call .L_442820

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_4439f6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443d20:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            jmp .L_443b1c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443d30:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            mov EAX,DWORD PTR [RBX+96]
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            test AL,1
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+64],XMM0
            je .L_443d75

            or EAX,8
            mov DWORD PTR [RBX+96],EAX
.L_443d75:

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
            jmp .L_443b26
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443d88:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM5
            call hypot@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+32],XMM0
            movsd XMM0,QWORD PTR [RBX]
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP]
            pxor XMM4,XMM4
            divsd XMM0,XMM5
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM4
            movsd QWORD PTR [RBX+40],XMM0
            jp .L_443df8

            jne .L_443df8

            mov R12D,DWORD PTR [RBX+96]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            jmp .L_443b1c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443df8:

            mulsd XMM1,XMM3
            mulsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            subsd XMM3,XMM1
            ucomisd XMM4,XMM3
            sqrtsd XMM2,XMM3
            ja .L_443e8c
.L_443e16:

            movapd XMM1,XMM3
            movsd XMM6,QWORD PTR [RBP+216]
            mulsd XMM0,XMM2
            mov R12D,DWORD PTR [RBX+96]
            mulsd XMM1,XMM2
            mulsd XMM3,XMM3
            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+40],XMM0
            divsd XMM1,XMM6
            divsd XMM3,XMM6
            mulsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            movsd XMM1,QWORD PTR [RBX+24]
            jmp .L_443b1c
.L_443e58:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM3,XMM3
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_443b9f
.L_443e87:

            call __stack_chk_fail@PLT
.L_443e8c:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+40]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_443e16
.L_443ecd:

            nop
            nop
            nop
.L_443ed0:

            cmp QWORD PTR [RDI+40],0
            je .L_444010

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_443ee4:

            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4146c0

            test DWORD PTR [RBX+320],4294967293
            mov EBP,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            je .L_443fb0
.L_443f1f:

            mov RDI,RBX
            call QWORD PTR [RBX+40]

            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_413c40

            test EAX,EAX
            jne .L_443ff9

            mov EAX,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_443f67

            movsd XMM2,QWORD PTR [RBX+128]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
.L_443f67:

            addsd XMM0,QWORD PTR [RBX+344]
            movsd XMM2,QWORD PTR [RBX+376]
            addsd XMM1,QWORD PTR [RBX+352]
            mov ESI,EBP
            mov RDI,RBX
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4146b0

            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,40
.L_443fad:

            pop RBX
            pop RBP
            ret 
.L_443fb0:

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_447a20]
            movsd XMM4,QWORD PTR [RIP+.L_447e58]
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            ucomisd XMM0,XMM4
            ja .L_443fec

            movapd XMM6,XMM2
            andpd XMM6,XMM3
            ucomisd XMM6,QWORD PTR [RIP+.L_44d1a8]
            jbe .L_444020
.L_443fec:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404200
.L_443ff9:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,40
.L_444005:

            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444010:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444020:

            andpd XMM0,XMM3
            ucomisd XMM4,XMM0
            jb .L_444070

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_4440a2

            movapd XMM1,XMM5
.L_444038:

            subsd XMM2,QWORD PTR [RBX+328]
            mov EDX,DWORD PTR [RBX+304]
            test EDX,EDX
            movapd XMM0,XMM2
            jne .L_443f1f

            movsd QWORD PTR [RSP+8],XMM1
            call .L_442820

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_443f1f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444070:

            mov ECX,DWORD PTR [RBX+308]
            test ECX,ECX
            je .L_444038

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+224]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_444038
.L_4440a2:

            movsd XMM1,QWORD PTR [RIP+.L_447a18]
            jmp .L_444038
.L_4440ac:

            nop
            nop
            nop
            nop
.L_4440b0:

            cmp QWORD PTR [RDI+48],0
            je .L_444218

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            ucomisd XMM0,XMM2
            ja .L_4440d8

            ucomisd XMM1,XMM2
            jbe .L_444100
.L_4440d8:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967281
            call .L_404200
.L_4440e5:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,24
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444100:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_4146c0

            movsd XMM2,QWORD PTR [RBX+368]
            mov EBP,EAX
            movsd XMM0,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            test ESI,ESI
            subsd XMM0,QWORD PTR [RBX+344]
            subsd XMM1,QWORD PTR [RBX+352]
            jne .L_444157

            movsd XMM2,QWORD PTR [RBX+144]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
.L_444157:

            mov RDI,RBX
            call QWORD PTR [RBX+48]

            mov RAX,QWORD PTR [RBX]
            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_4440e5

            test DWORD PTR [RBX+320],4294967293
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP],XMM1
            jne .L_4441ec

            mov EDX,DWORD PTR [RBX+304]
            addsd XMM2,QWORD PTR [RBX+328]
            test EDX,EDX
            je .L_444228
.L_444195:

            mov EAX,DWORD PTR [RBX+308]
            test EAX,EAX
            je .L_4441ec

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            jbe .L_4441ec

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+216]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
.L_4441ec:

            mov ESI,EBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM2
            call .L_4146b0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
.L_44420b:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444218:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444228:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call .L_442820

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            jmp .L_444195
.L_444246:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444250:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_44425b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+56],0
            je .L_4443d0

            movsd XMM1,QWORD PTR [RSP+80]
            mov RBX,RSI
            mov RDI,RSI
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_4146c0

            test DWORD PTR [RBX+320],4294967293
            mov R12D,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_444380
.L_4442b6:

            movsd QWORD PTR [RSP+80],XMM1
            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
.L_4442c5:

            movsd QWORD PTR [RSP+96],XMM2
            mov RDX,QWORD PTR [RBX+56]
            mov RSI,RBX
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            call RDX

            mov RDX,QWORD PTR [RBX]
            add RSP,32
.L_4442e7:

            mov EDX,DWORD PTR [RDX]
            test EDX,EDX
            jne .L_4443d0

            mov EAX,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            test EAX,EAX
            jne .L_444317

            movsd XMM2,QWORD PTR [RBX+128]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
.L_444317:

            addsd XMM1,QWORD PTR [RBX+344]
            movsd XMM2,QWORD PTR [RBX+376]
            addsd XMM0,QWORD PTR [RBX+352]
            mov ESI,R12D
            mov RDI,RBX
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_4146b0

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            mov QWORD PTR [RBP+16],RAX
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBP],XMM0
            jmp .L_4443e7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444380:

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_447a20]
            movsd XMM4,QWORD PTR [RIP+.L_447e58]
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            ucomisd XMM0,XMM4
            ja .L_4443bc

            movapd XMM6,XMM1
            andpd XMM6,XMM3
            ucomisd XMM6,QWORD PTR [RIP+.L_44d1a8]
            jbe .L_444410
.L_4443bc:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404200

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4443d0:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP+16],XMM0
.L_4443e7:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_44449a

            add RSP,48
.L_444402:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444410:

            andpd XMM0,XMM3
            ucomisd XMM4,XMM0
            jb .L_444460

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_444490

            movapd XMM2,XMM5
.L_444428:

            mov ECX,DWORD PTR [RBX+304]
            subsd XMM1,QWORD PTR [RBX+328]
            test ECX,ECX
            jne .L_4442b6

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_442820

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_4442b6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444460:

            mov ESI,DWORD PTR [RBX+308]
            test ESI,ESI
            je .L_444428

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+224]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM2,XMM0
            jmp .L_444428
.L_444490:

            movsd XMM2,QWORD PTR [RIP+.L_447a18]
            jmp .L_444428
.L_44449a:

            call __stack_chk_fail@PLT
.L_44449f:

            nop
.L_4444a0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_4444ab:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+64],0
            je .L_4444ff

            movsd XMM1,QWORD PTR [RSP+80]
            mov RBP,RSI
            movsd XMM0,QWORD PTR [RIP+.L_447db8]
            ucomisd XMM1,XMM0
            ja .L_4444f1

            movsd XMM2,QWORD PTR [RSP+88]
            ucomisd XMM2,XMM0
            ja .L_4444f1

            movsd XMM3,QWORD PTR [RSP+96]
            ucomisd XMM3,XMM0
            jbe .L_444538
.L_4444f1:

            mov RDI,QWORD PTR [RBP]
            mov ESI,4294967281
            call .L_404200
.L_4444ff:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
.L_444515:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4446b8

            add RSP,48
.L_444530:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444538:

            mov RDI,RSI
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_4146c0

            movsd XMM0,QWORD PTR [RBP+368]
            mov R12D,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RBP+324]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
            test ESI,ESI
            subsd XMM1,QWORD PTR [RBP+344]
            subsd XMM2,QWORD PTR [RBP+352]
            jne .L_444593

            movsd XMM0,QWORD PTR [RBP+144]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
.L_444593:

            movsd QWORD PTR [RSP+80],XMM1
            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
.L_4445a2:

            movsd QWORD PTR [RSP+96],XMM2
            mov RAX,QWORD PTR [RBP+64]
            mov RSI,RBP
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            call RAX

            mov RAX,QWORD PTR [RBP]
            add RSP,32
            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_4444ff

            test DWORD PTR [RBP+320],4294967293
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jne .L_444658

            mov EDX,DWORD PTR [RBP+304]
            addsd XMM1,QWORD PTR [RBP+328]
            test EDX,EDX
            je .L_44469c
.L_4445fd:

            mov EAX,DWORD PTR [RBP+308]
            test EAX,EAX
            je .L_444658

            movq XMM3,QWORD PTR [RIP+.L_447130]
            movapd XMM0,XMM2
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_447a20]
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_447e58]
            jbe .L_444658

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBP+216]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM2,XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444658:

            mov ESI,R12D
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call .L_4146b0

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            mov QWORD PTR [RBX+16],RAX
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_444515
.L_44469c:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_442820

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_4445fd
.L_4446b8:

            call __stack_chk_fail@PLT
.L_4446bd:

            nop
            nop
            nop
.L_4446c0:

            sub RSP,24
.L_4446c4:

            mov EDI,40
            movsd QWORD PTR [RSP+8],XMM0
            call .L_403700

            test RAX,RAX
            je .L_4447ab

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_44d1b0]
            movsd XMM3,QWORD PTR [RIP+.L_448f60]
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            addsd XMM1,QWORD PTR [RIP+.L_44d1b8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44d1c0]
            mulsd XMM1,XMM0
            addsd XMM3,XMM1
            mulsd XMM3,XMM0
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44d1d0]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RAX],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44d1c8]
            addsd XMM3,QWORD PTR [RIP+.L_44d1d8]
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            mulsd XMM3,XMM0
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44d1e0]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44d1e8]
            movsd QWORD PTR [RAX+8],XMM1
            movapd XMM1,XMM0
            mulsd XMM3,XMM0
            mulsd XMM1,XMM0
            mulsd XMM2,XMM1
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX+16],XMM2
            mulsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_44d1f0]
            subsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_44d1f8]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RAX+32],XMM0
            movsd QWORD PTR [RAX+24],XMM2
.L_4447ab:

            add RSP,24
.L_4447af:

            ret 
.L_4447b0:

            movapd XMM4,XMM1
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RDI+32]
            mulsd XMM4,XMM1
            mulsd XMM0,QWORD PTR [RDI]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+24]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+16]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+8]
            mulsd XMM2,XMM3
            subsd XMM0,XMM2
            ret 
.L_4447e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4447f0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,10
            push RBX
            movapd XMM3,XMM0
            mov RBX,RSI
            sub RSP,80
.L_44480b:

            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            lea R13,QWORD PTR [RSP+72]
            lea R12,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM0
            subsd XMM6,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            divsd XMM6,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            nop
            nop
            nop
            nop
            nop
.L_444848:

            movapd XMM0,XMM3
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+32]
            movapd XMM1,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RBX]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+64]
            mulsd XMM4,XMM3
            pxor XMM7,XMM7
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM5
            addsd XMM0,QWORD PTR [RBX+24]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM0,XMM1
            sqrtsd XMM1,XMM5
            addsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            movapd XMM2,XMM4
            subsd XMM2,QWORD PTR [RSP+24]
            ja .L_444940
.L_4448d9:

            mulsd XMM1,XMM5
            movsd XMM7,QWORD PTR [RIP+.L_447b90]
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM7,XMM0
            ja .L_444927

            sub EBP,1
            jne .L_444848

            mov ESI,4294967279
            mov RDI,R14
            movsd QWORD PTR [RSP+8],XMM3
            call .L_404200

            movsd XMM3,QWORD PTR [RSP+8]
.L_444927:

            add RSP,80
.L_44492b:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444940:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_4448d9
.L_44497e:

            nop
            nop
.L_444980:

            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM3,XMM2
            movapd XMM2,XMM3
            sqrtsd XMM3,XMM3
            ucomisd XMM0,XMM2
            ja .L_4449af

            divsd XMM1,XMM3
            movapd XMM0,XMM1
            ret 
.L_4449af:

            movapd XMM0,XMM2
            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            add RSP,24
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            ret 
.L_4449df:

            nop
.L_4449e0:

            push RBP
            push RBX
            movapd XMM8,XMM0
            sub RSP,216
.L_4449ee:

            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            lea RBX,QWORD PTR [RSP+32]
            movsd XMM11,QWORD PTR [RIP+.L_447a88]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+32],XMM3
            mov EAX,1
            movapd XMM9,XMM3
            movapd XMM7,XMM11
            movapd XMM6,XMM3
            movapd XMM4,XMM3
            movapd XMM2,XMM3
            movapd XMM5,XMM3
            movsd XMM10,QWORD PTR [RIP+.L_4470e8]
            jmp .L_444a63
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444a50:

            add RAX,1
            movapd XMM9,XMM1
            cmp RAX,20
            je .L_444bb0
.L_444a63:

            movapd XMM1,XMM2
            movapd XMM13,XMM9
            addsd XMM6,XMM3
            mov EBP,EAX
            mulsd XMM1,XMM2
            mulsd XMM5,XMM1
            movapd XMM1,XMM4
            mulsd XMM1,XMM7
            mulsd XMM7,XMM11
            movapd XMM12,XMM5
            mulsd XMM1,XMM4
            mulsd XMM4,XMM6
            mulsd XMM1,XMM2
            addsd XMM2,XMM10
            divsd XMM12,XMM1
            movapd XMM1,XMM12
            mulsd XMM1,XMM8
            mulsd XMM8,XMM0
            subsd XMM13,XMM1
            movsd QWORD PTR [RBX+RAX*8],XMM1
            ucomisd XMM13,XMM9
            movapd XMM1,XMM13
            jp .L_444a50

            jne .L_444a50

            cdqe 
            movsd QWORD PTR [RSP+24],XMM10
            lea RDI,QWORD PTR [RAX*8+32]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM13
            call malloc@PLT

            test RAX,RAX
            je .L_444b92

            movsd XMM3,QWORD PTR [RSP+16]
            lea EDX,DWORD PTR [RBP-1]
            cmp EBP,1
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM6,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+16],XMM1
            mov DWORD PTR [RAX],EDX
            subsd XMM6,XMM1
            movsd QWORD PTR [RAX+8],XMM0
            movsd XMM10,QWORD PTR [RSP+24]
            movapd XMM1,XMM6
            movsd QWORD PTR [RAX+24],XMM6
            je .L_444b92
.L_444b37:

            lea EDX,DWORD PTR [RBP-2]
            movsd XMM5,QWORD PTR [RIP+.L_447a90]
            movapd XMM4,XMM10
            add RBX,8
            movapd XMM2,XMM3
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444b60:

            subsd XMM1,QWORD PTR [RBX+RDX*1]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM5
            addsd XMM4,XMM10
            addsd XMM5,XMM10
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            divsd XMM0,XMM3
            movsd QWORD PTR [RAX+RDX*1+32],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_444b60
.L_444b92:

            mov RSI,QWORD PTR [RSP+200]
            xor RSI,QWORD PTR FS:[40]
            jne .L_444c1a

            add RSP,216
.L_444bac:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_444bb0:

            mov EDI,192
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call malloc@PLT

            test RAX,RAX
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+24]
            je .L_444b92

            movapd XMM7,XMM3
            movsd QWORD PTR [RAX+16],XMM1
            mov DWORD PTR [RAX],19
            movsd QWORD PTR [RAX+8],XMM0
            mov EBP,20
            subsd XMM7,XMM1
            movapd XMM1,XMM7
            movsd QWORD PTR [RAX+24],XMM7
            jmp .L_444b37
.L_444c1a:

            call __stack_chk_fail@PLT
.L_444c1f:

            nop
.L_444c20:

            sub RSP,56
.L_444c24:

            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RDI+16]
            mulsd XMM1,XMM1
            pxor XMM6,XMM6
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RDI+8]
            movapd XMM4,XMM0
            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,XMM1
            mulsd XMM5,XMM2
            subsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_444cbf
.L_444c64:

            divsd XMM5,XMM4
            movsxd RDX,DWORD PTR [RDI]
            movapd XMM0,XMM3
            test EDX,EDX
            movsd XMM3,QWORD PTR [RDI+RDX*8+24]
            subsd XMM0,XMM5
            je .L_444cb2

            lea EDX,DWORD PTR [RDX-1]
            movsxd RAX,EDX
            mov EDX,EDX
            lea RCX,QWORD PTR [RAX*8+24]
            shl RDX,3
            lea RAX,QWORD PTR [RDI+RCX*1]
            lea RCX,QWORD PTR [RDI+RCX*1-8]
            sub RCX,RDX
            mov RDX,RCX
.L_444ca0:

            mulsd XMM3,XMM1
            sub RAX,8
            addsd XMM3,QWORD PTR [RAX+8]
            cmp RAX,RDX
            jne .L_444ca0
.L_444cb2:

            mulsd XMM2,XMM3
            add RSP,56
.L_444cba:

            addsd XMM0,XMM2
            ret 
.L_444cbf:

            mov QWORD PTR [RSP+40],RDI
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            mov RDI,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_444c64
.L_444d0d:

            nop
            nop
            nop
.L_444d10:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            movapd XMM3,XMM0
            mov EBX,20
            sub RSP,64
.L_444d2b:

            movsd XMM2,QWORD PTR [RSI+8]
            lea R13,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            movsd XMM7,QWORD PTR [RIP+.L_4470f0]
            subsd XMM6,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            divsd XMM7,XMM6
            movsd QWORD PTR [RSP+16],XMM7
            jmp .L_444d6e
.L_444d60:

            sub EBX,1
            je .L_444e30

            movsd XMM2,QWORD PTR [RBP+8]
.L_444d6e:

            movapd XMM0,XMM3
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM3
            mulsd XMM2,XMM1
            subsd XMM4,XMM2
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM4
            call .L_444c20

            pxor XMM6,XMM6
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            subsd XMM2,QWORD PTR [RSP+24]
            ja .L_444e49
.L_444de8:

            mulsd XMM1,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_449990]
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM5,XMM0
            jbe .L_444d60
.L_444e18:

            add RSP,64
.L_444e1c:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444e30:

            mov ESI,4294967279
            mov RDI,R14
            movsd QWORD PTR [RSP],XMM3
            call .L_404200

            movsd XMM3,QWORD PTR [RSP]
            jmp .L_444e18
.L_444e49:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_444de8
.L_444e85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444e90:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM6,XMM1
            mov EBX,15
            sub RSP,40
.L_444ea2:

            mulsd XMM6,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_447a20]
            subsd XMM2,XMM0
            jmp .L_444ee1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444ed8:

            sub EBX,1
            je .L_444f70
.L_444ee1:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_4470f0]
            subsd XMM1,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_447a20]
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            addsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM0,QWORD PTR [RIP+.L_447cd0]
            ja .L_444ed8

            add RSP,40
.L_444f62:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444f70:

            mov RDI,RBP
            mov ESI,4294967278
            movsd QWORD PTR [RSP],XMM2
            call .L_404200

            movsd XMM2,QWORD PTR [RSP]
            add RSP,40
            pop RBX
            movapd XMM0,XMM2
            pop RBP
            ret 
.L_444f92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444fa0:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,35
            sub RSP,8
.L_444fbc:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_445020

            mov EBP,1
            jmp .L_444fef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444fe0:

            test AL,AL
            je .L_445038

            mov R14D,R12D
.L_444fe7:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_44500a
.L_444fef:

            test R12D,R12D
            movzx EAX,BYTE PTR [RBX+8]
            jne .L_444fe0

            test AL,AL
            jne .L_445038

            mov RBX,QWORD PTR [RBX]
            mov R14D,1
            test RBX,RBX
            jne .L_444fef
.L_44500a:

            cmp EBP,1
            jle .L_445020

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,10
            call _IO_putc@PLT
.L_445020:

            add RSP,8
.L_445024:

            mov EAX,R14D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445038:

            lea R13,QWORD PTR [RBX+9]
            mov RDI,R13
            call strlen@PLT

            lea EBP,DWORD PTR [RBP+RAX*1+1]
            mov R15,RAX
            mov RSI,QWORD PTR [RIP+stdout]
            cmp EBP,72
            jg .L_445090
.L_445057:

            mov EDI,32
            call _IO_putc@PLT

            cmp BYTE PTR [RBX+9],43
            je .L_445078

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,43
            call _IO_putc@PLT
.L_445078:

            mov RSI,QWORD PTR [RIP+stdout]
            mov RDI,R13
            call fputs@PLT

            jmp .L_444fe7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445090:

            lea RDI,QWORD PTR [RIP+.L_44d200]
            mov RCX,RSI
            mov EDX,2
            mov ESI,1
            lea EBP,DWORD PTR [R15+3]
            call fwrite@PLT

            mov RSI,QWORD PTR [RIP+stdout]
            jmp .L_445057
.L_4450b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4450c0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,35
            sub RSP,8
.L_4450ce:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            mov RBX,QWORD PTR [RBP+8]
            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            jne .L_4450fc

            jmp .L_445130
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4450f0:

            add RBX,1
            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            je .L_445130
.L_4450fc:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            cmp BYTE PTR [RBX],10
            jne .L_4450f0

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,35
            add RBX,1
            call _IO_putc@PLT

            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            jne .L_4450fc

            nop
            nop
            nop
            nop
            nop
            nop
.L_445130:

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,10
            add RBP,16
            call _IO_putc@PLT

            xor ESI,ESI
            mov RDI,RBP
            call .L_444fa0

            test EAX,EAX
            jne .L_445160

            add RSP,8
.L_445157:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445160:

            mov RCX,QWORD PTR [RIP+stdout]
            lea RDI,QWORD PTR [RIP+.L_44d208]
            mov ESI,1
            mov EDX,38
            call fwrite@PLT

            add RSP,8
            mov RDI,RBP
            mov ESI,1
            pop RBX
            pop RBP
            jmp .L_444fa0
.L_445190:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_445198:

            mov RBX,RDI
            mov EDI,10
            call .L_403700

            mov BYTE PTR [RAX],0
            mov RBX,QWORD PTR [RBX+16]
            mov RBP,RAX
            test RBX,RBX
            je .L_445240

            mov R13D,10
            jmp .L_4451e2
.L_4451c0:

            add RAX,RBP
            mov EDX,11040
            mov RSI,R12
            mov WORD PTR [RAX],DX
            mov BYTE PTR [RAX+2],0
            mov RDI,RBP
            call strcat@PLT
.L_4451da:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_445240
.L_4451e2:

            cmp BYTE PTR [RBX+8],0
            je .L_4451da

            lea R12,QWORD PTR [RBX+9]
            mov RDI,R12
            call strlen@PLT

            mov RDI,RBP
            mov R14,RAX
            call strlen@PLT

            lea EDX,DWORD PTR [R14+1]
            movsxd RDX,EDX
            lea RCX,QWORD PTR [RAX+RDX*1+5]
            cmp RCX,R13
            jbe .L_4451c0

            lea R13,QWORD PTR [RDX+R13*2+5]
            mov RDI,R13
            call .L_403700

            mov RSI,RBP
            mov RDI,RAX
            mov R14,RAX
            call strcpy@PLT

            mov RDI,RBP
            mov RBP,R14
            call .L_403730

            mov RDI,R14
            call strlen@PLT

            jmp .L_4451c0
.L_445240:

            pop RBX
.L_445241:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_44524c:

            nop
            nop
            nop
            nop
.L_445250:

            ucomisd XMM1,QWORD PTR [RIP+.L_449e30]
            jb .L_4452c0

            movapd XMM4,XMM1
            sub RSP,40
.L_445262:

            mov EDX,0
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,XMM0
            movapd XMM6,XMM3
            movapd XMM5,XMM4
            movapd XMM7,XMM4
            mulsd XMM5,XMM4
            addsd XMM7,XMM3
            subsd XMM6,XMM5
            pxor XMM5,XMM5
            ucomisd XMM6,XMM5
            movsd QWORD PTR [RSP],XMM6
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_4452b0

            ucomisd XMM7,XMM5
            setnp DL
            cmove EAX,EDX
            test AL,AL
            je .L_4452c8
.L_4452b0:

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            add RSP,40
.L_4452bc:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4452c0:

            addsd XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4452c8:

            subsd XMM3,XMM4
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM3
            divsd XMM0,XMM7
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            divsd XMM0,XMM6
            divsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            subsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+16]
            add RSP,40

            ret 
.L_445323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445330:

            mulsd XMM1,XMM2
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            movapd XMM5,XMM1
            addsd XMM5,XMM3
            ucomisd XMM5,QWORD PTR [RIP+.L_448740]
            jp .L_445360

            movsd XMM4,QWORD PTR [RIP+.L_4470e0]
            jne .L_445360

            movapd XMM0,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445360:

            sub RSP,56
.L_445364:

            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_447a20]
            movsd QWORD PTR [RSP+40],XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM3,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM3,XMM5
            movapd XMM0,XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            add RSP,56
.L_4453da:

            divsd XMM4,XMM0
            movapd XMM0,XMM4
            ret 
.L_4453e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4453f0:

            movsxd RAX,ESI
            movapd XMM5,XMM0
            shl RAX,4
            add RDI,RAX
            test ESI,ESI
            movsd XMM4,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            jle .L_445480

            lea EAX,DWORD PTR [RSI-1]
            not RAX
            shl RAX,4
            add RAX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445420:

            movapd XMM3,XMM5
            movapd XMM0,XMM1
            sub RDI,16
            mulsd XMM3,XMM4
            cmp RDI,RAX
            mulsd XMM0,XMM2
            mulsd XMM2,XMM5
            mulsd XMM4,XMM1
            addsd XMM3,QWORD PTR [RDI]
            addsd XMM2,QWORD PTR [RDI+8]
            subsd XMM3,XMM0
            addsd XMM2,XMM4
            movapd XMM4,XMM3
            jne .L_445420
.L_445456:

            movapd XMM0,XMM5
            movapd XMM4,XMM1
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM4,XMM2
            mulsd XMM2,XMM5
            subsd XMM0,XMM4
            addsd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445480:

            movapd XMM3,XMM4
            jmp .L_445456
.L_445486:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445490:

            movsxd RAX,ESI
            shl RAX,4
            add RDI,RAX
            test ESI,ESI
            movsd XMM6,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            jle .L_445560

            lea EAX,DWORD PTR [RSI-1]
            movapd XMM3,XMM2
            movapd XMM7,XMM6
            not RAX
            shl RAX,4
            add RAX,RDI
.L_4454c0:

            movapd XMM4,XMM6
            movapd XMM5,XMM1
            sub RDI,16
            mulsd XMM6,XMM1
            mulsd XMM4,XMM0
            cmp RDI,RAX
            mulsd XMM5,XMM2
            mulsd XMM2,XMM0
            addsd XMM4,QWORD PTR [RDI]
            addsd XMM2,QWORD PTR [RDI+8]
            subsd XMM4,XMM5
            movapd XMM5,XMM7
            mulsd XMM7,XMM1
            mulsd XMM5,XMM0
            addsd XMM2,XMM6
            movapd XMM6,XMM3
            mulsd XMM3,XMM0
            mulsd XMM6,XMM1
            addsd XMM5,XMM4
            addsd XMM3,XMM2
            subsd XMM5,XMM6
            movapd XMM6,XMM4
            addsd XMM3,XMM7
            movapd XMM7,XMM5
            jne .L_4454c0

            movapd XMM7,XMM4
            movapd XMM8,XMM2
            mulsd XMM2,XMM0
            mulsd XMM7,XMM0
            mulsd XMM8,XMM1
            mulsd XMM1,XMM6
            movapd XMM4,XMM2
.L_445540:

            movapd XMM0,XMM7
            movsd QWORD PTR [RDX],XMM5
            addsd XMM1,XMM4
            movsd QWORD PTR [RDX+8],XMM3
            subsd XMM0,XMM8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445560:

            movapd XMM7,XMM0
            mulsd XMM0,XMM2
            movapd XMM8,XMM1
            mulsd XMM1,XMM6
            mulsd XMM7,XMM6
            mulsd XMM8,XMM2
            addsd XMM2,XMM0
            movapd XMM4,XMM0
            addsd XMM6,XMM7
            movapd XMM3,XMM2
            movapd XMM5,XMM6
            addsd XMM3,XMM1
            subsd XMM5,XMM8
            jmp .L_445540
.L_445599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4455a0:

            cmp EDI,8
            ja .L_445600

            movsd XMM0,QWORD PTR [RIP+.L_4470f0]
            test EDI,EDI
            push RBX
.L_4455b0:

            movsd QWORD PTR [RIP+.L_65dcc8],XMM0
            je .L_445608

            movsd XMM1,QWORD PTR [RIP+.L_44d1a8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_4455c8:

            add EAX,1
            mulsd XMM0,XMM1
            cmp EDI,EAX
            jne .L_4455c8

            movsd XMM1,QWORD PTR [RIP+.L_447c98]
            movsd QWORD PTR [RIP+.L_65dcc8],XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_44d278]
            divsd XMM0,QWORD PTR [RIP+.L_447a78]
            jmp .L_445618
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445600:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445608:

            movsd XMM0,QWORD PTR [RIP+.L_44d270]
            movsd XMM1,QWORD PTR [RIP+.L_447c98]
.L_445618:

            test ESI,ESI
            mov EBX,ESI
            movsd QWORD PTR [RIP+.L_65dcc0],XMM1
            movsd QWORD PTR [RIP+.L_65dcb8],XMM0
            jne .L_445660

            mov R8D,EDI
            lea RCX,QWORD PTR [RIP+.L_44d22f]
            lea RDI,QWORD PTR [RIP+.L_65dc80]
            mov EDX,50
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov DWORD PTR [RIP+.L_65dea0],EBX
            pop RBX
.L_445657:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445660:

            xor EAX,EAX
            test EDI,EDI
            mov R9D,EDI
            setne AL
            lea RCX,QWORD PTR [RIP+.L_44d242]
            mov EDX,50
            lea R8D,DWORD PTR [RDI+RAX*1+2]
            lea RDI,QWORD PTR [RIP+.L_65dc80]
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov DWORD PTR [RIP+.L_65dea0],EBX
            pop RBX
            ret 
.L_445696:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4456a0:

            pxor XMM5,XMM5
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_4456b6:

            ucomisd XMM5,XMM0
            ja .L_445930
.L_4456c0:

            mulsd XMM0,QWORD PTR [RIP+.L_65dcb8]
            movsd XMM3,QWORD PTR [RIP+.L_447130]
            movsd XMM6,QWORD PTR [RIP+.L_447a80]
            addsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movapd XMM1,XMM0
            movapd XMM2,XMM0
            andpd XMM1,XMM3
            ucomisd XMM6,XMM1
            jbe .L_445729

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM3,XMM0
            cvtsi2sd XMM1,RAX
            movapd XMM7,XMM1
            cmpnlesd XMM7,XMM0
            movapd XMM2,XMM7
            andpd XMM2,XMM4
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM3
.L_445729:

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_447c98]
            movsd QWORD PTR [RSP],XMM2
            divsd XMM0,QWORD PTR [RIP+.L_65dcc8]
            call fmod@PLT

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_447130]
            divsd XMM2,QWORD PTR [RIP+.L_65dcc0]
            movsd XMM6,QWORD PTR [RIP+.L_447a80]
            movapd XMM0,XMM2
            movapd XMM4,XMM2
            andpd XMM0,XMM1
            ucomisd XMM6,XMM0
            jbe .L_4457b1

            cvttsd2si RAX,XMM2
            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            andnpd XMM1,XMM4
            cvtsi2sd XMM0,RAX
            movapd XMM7,XMM0
            cmpnlesd XMM7,XMM2
            movapd XMM2,XMM7
            andpd XMM2,XMM5
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            orpd XMM2,XMM1
.L_4457b1:

            movsd XMM1,QWORD PTR [RIP+.L_447c98]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call fmod@PLT

            movsd XMM2,QWORD PTR [RSP]
            cvttsd2si R9D,XMM0
            divsd XMM2,QWORD PTR [RIP+.L_447c98]
            movsd XMM0,QWORD PTR [RIP+.L_447130]
            movsd XMM7,QWORD PTR [RIP+.L_447a80]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM2
            movapd XMM4,XMM2
            andpd XMM1,XMM0
            ucomisd XMM7,XMM1
            jbe .L_44583e

            cvttsd2si RAX,XMM2
            pxor XMM1,XMM1
            andnpd XMM0,XMM4
            cvtsi2sd XMM1,RAX
            movapd XMM5,XMM1
            cmpnlesd XMM5,XMM2
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_4470f0]
            andpd XMM2,XMM5
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM0
.L_44583e:

            mov R10D,DWORD PTR [RIP+.L_65dea0]
            cvttsd2si R8D,XMM2
            test R10D,R10D
            jne .L_445950

            pxor XMM6,XMM6
            ucomisd XMM3,XMM6
            jp .L_445863

            je .L_4458f0
.L_445863:

            xor R13D,R13D
            test EBP,EBP
            lea RCX,QWORD PTR [RIP+.L_65dc80]
            setne R13B
            sub RSP,8
.L_445877:

            mov ESI,1
            push RBP
            movapd XMM0,XMM3
            mov RDI,R12
            mov RDX,-1
            mov EAX,1
            call __sprintf_chk@PLT

            add R13,2
            mov RDI,R12
            call strlen@PLT

            sub RAX,R13
            add R12,RAX
            movzx EAX,BYTE PTR [R12]
            mov RDI,R12
            pop RCX
            pop RSI
            cmp AL,48
            jne .L_4458c3

            nop
            nop
            nop
.L_4458b8:

            sub RDI,1
            movzx EAX,BYTE PTR [RDI]
            cmp AL,48
            je .L_4458b8
.L_4458c3:

            cmp AL,46
            lea RSI,QWORD PTR [R12+1]
            setne AL
            movzx EAX,AL
            add RDI,RAX
            cmp RDI,RSI
            je .L_4458e0

            mov RDX,R13
            call memmove@PLT
.L_4458e0:

            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_4458f0:

            test R9D,R9D
            jne .L_4459a0

            lea RCX,QWORD PTR [RIP+.L_44d263]
            mov R9D,EBP
            mov RDI,R12
            mov RDX,-1
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445930:

            test ESI,ESI
            xorpd XMM0,XMMWORD PTR [RIP+.L_447ae0]
            jne .L_445990

            lea R12,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],45
            jmp .L_4456c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445950:

            sub RSP,8
            movapd XMM0,XMM3
            push RBP
            lea RCX,QWORD PTR [RIP+.L_65dc80]
            mov RDI,R12
            mov RDX,-1
            mov ESI,1
            mov EAX,1
            call __sprintf_chk@PLT

            pop RDI
            pop R8
            mov RAX,RBX
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445990:

            mov EBP,EDX
            jmp .L_4456c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4459a0:

            sub RSP,8
            lea RCX,QWORD PTR [RIP+.L_44d25a]
            mov RDX,-1
            push RBP
            mov RDI,R12
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            pop RAX
            pop RDX
            mov RAX,RBX
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4459d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4459e0:

            lea RAX,QWORD PTR [RIP+.L_44d280]
            ret 
.L_4459e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4459f0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EDI,32
            mov RBP,RSI
            sub RSP,96
.L_445a03:

            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_445b9b

            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+16]
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_4470f0]
            movapd XMM1,XMM7
            pxor XMM6,XMM6
            movapd XMM5,XMM4
            mulsd XMM1,XMM7
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RSP+88]
            mulsd XMM3,XMM3
            movsd QWORD PTR [RBX+16],XMM7
            subsd XMM5,XMM1
            ucomisd XMM6,XMM5
            sqrtsd XMM7,XMM5
            ja .L_445bbc
.L_445a7a:

            movapd XMM0,XMM1
            mulsd XMM1,XMM3
            movapd XMM8,XMM4
            mulsd XMM0,XMM2
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            divsd XMM1,XMM5
            subsd XMM8,XMM0
            divsd XMM7,XMM8
            addsd XMM1,XMM4
            ucomisd XMM6,XMM1
            sqrtsd XMM3,XMM1
            movsd QWORD PTR [RBP],XMM7
            ja .L_445c1e
.L_445ab8:

            ucomisd XMM3,XMM6
            movsd QWORD PTR [RBX],XMM3
            jp .L_445ac8

            je .L_445bb0
.L_445ac8:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            divsd XMM0,XMM3
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM5,QWORD PTR [RIP+.L_4470f8]
            movapd XMM3,XMM1
            movsd QWORD PTR [R12],XMM0
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM3,XMM5
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            mulsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RBX+24],XMM3
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM6,XMM4
            movsd XMM1,QWORD PTR [RBX+24]
            subsd XMM6,XMM2
            addsd XMM2,XMM4
            movapd XMM0,XMM6
            divsd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM3,XMM0
            movsd QWORD PTR [RBX+8],XMM3
.L_445b9b:

            add RSP,96
.L_445b9f:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445bb0:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_445b9b
.L_445bbc:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM5
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            jmp .L_445a7a
.L_445c1e:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_445ab8
.L_445c5c:

            nop
            nop
            nop
            nop
.L_445c60:

            push RBX
            movapd XMM3,XMM1
            mov RBX,RSI
            sub RSP,32

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RSI+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM4,XMM0
            movapd XMM5,XMM3
            movapd XMM1,XMM4
            subsd XMM5,XMM4
            addsd XMM1,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+24]
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RBX]
            addsd XMM1,XMM1
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            add RSP,32

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_445d24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445d30:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM3,XMM1
            mov RBP,RSI
            mov EBX,20
            sub RSP,32
.L_445d47:

            movsd XMM1,QWORD PTR [RSI]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4470f8]
            addsd XMM0,QWORD PTR [RIP+.L_447a38]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_4470f0]
            divsd XMM0,QWORD PTR [RBP+8]
            divsd XMM6,XMM1
            movapd XMM1,XMM6
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_445dbd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445db0:

            sub EBX,1
            movapd XMM3,XMM1
            je .L_445e60
.L_445dbd:

            movsd XMM1,QWORD PTR [RBP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_4470f0]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_449d30]
            subsd XMM2,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_4470f0]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RIP+.L_449990]
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_447a20]
            movapd XMM0,XMM1
            subsd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_447130]
            ucomisd XMM5,XMM0
            jbe .L_445db0

            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,32
.L_445e55:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445e60:

            mov RDI,R12
            mov ESI,4294967279
            movsd QWORD PTR [RSP],XMM1
            call .L_404200

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
.L_445e86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445e90:

            push R12
            push RBP
            mov RDI,RSI
            push RBX
            mov RBX,RSI
            call strlen@PLT

            cmp RAX,10
            jne .L_445eab

            cmp BYTE PTR [RBX+4],45
            je .L_445ec0
.L_445eab:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_413910
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445ec0:

            cmp BYTE PTR [RBX+7],45
            jne .L_445eab

            mov RDI,RBX
            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            lea RDI,QWORD PTR [RBX+5]
            mov EDX,10
            xor ESI,ESI
            mov R12,RAX
            call strtol@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            lea EDX,DWORD PTR [RBP-1]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            mov ECX,EDX
            shl ECX,5
            sub ECX,EDX
            cvtsi2sd XMM1,R12D
            lea EAX,DWORD PTR [RCX+RAX*1-1]
            pop RBX
.L_445f17:

            cvtsi2sd XMM0,EAX
            pop RBP
            pop R12
            divsd XMM0,QWORD PTR [RIP+.L_44d2b8]
            addsd XMM0,XMM1
            ret 
.L_445f2b:

            nop
            nop
            nop
            nop
            nop
.L_445f30:

            push R15
            push R14
            lea RDX,QWORD PTR [RIP+.L_44921f]
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,904
.L_445f4e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+888],RAX
            xor EAX,EAX
            call .L_403dc0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_446246

            lea RSI,QWORD PTR [RSP+272]
            mov RCX,RAX
            mov EDX,301
            mov RDI,R13
            call .L_406450

            mov ESI,64
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_4460b3

            mov RDI,RBX
            lea R14,QWORD PTR [RSP+576]
            call strdup@PLT

            mov EDI,720
            mov QWORD PTR [R12],RAX
            call malloc@PLT

            mov DWORD PTR [RSP+20],10
            mov QWORD PTR [R12+48],RAX
.L_445fd2:

            mov EDX,DWORD PTR [R12+40]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445fe0:

            movsxd RDX,EDX
            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RDX+RDX*8]
            lea RBP,QWORD PTR [RAX+RDX*8]
            movups XMMWORD PTR [RBP],XMM0
            mov QWORD PTR [RBP+64],0
            movups XMMWORD PTR [RBP+16],XMM0
            movups XMMWORD PTR [RBP+32],XMM0
            movups XMMWORD PTR [RBP+48],XMM0
.L_446007:

            mov EDX,301
            mov RSI,R14
            mov RDI,R13
            mov RCX,QWORD PTR [RSP+8]
            call .L_406450

            test RAX,RAX
            je .L_4460b3

            call __ctype_b_loc@PLT

            mov RDI,R14
            mov RCX,QWORD PTR [RAX]
            jmp .L_44603c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446038:

            add RDI,1
.L_44603c:

            movsx RDX,BYTE PTR [RDI]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_446038

            cmp DL,35
            je .L_446007

            test DL,DL
            je .L_446007

            xor R15D,R15D
            test AL,AL
            mov EBX,R15D
            je .L_4460a4

            nop
            nop
            nop
.L_446060:

            cmp AL,44
            mov RBX,RDI
            jne .L_446074

            jmp .L_4460f0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446070:

            cmp AL,44
            je .L_44607f
.L_446074:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_446070
.L_44607f:

            cmp AL,44
            je .L_4460f0
.L_446083:

            call strdup@PLT

            mov QWORD PTR [RSP+R15*8+32],RAX
            add R15,1
            cmp R15,30
            je .L_446100

            movzx EAX,BYTE PTR [RBX]
            mov RDI,RBX
            mov EBX,R15D
            test AL,AL
            jne .L_446060
.L_4460a4:

            cmp R15D,4
            jg .L_446105

            test R15D,R15D
            jne .L_446220
.L_4460b3:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_406440
.L_4460c0:

            mov RSI,QWORD PTR [RSP+888]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_44629d

            add RSP,904
.L_4460e1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4460f0:

            mov BYTE PTR [RBX],0
            add RBX,1
            jmp .L_446083
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446100:

            mov EBX,30
.L_446105:

            mov RCX,QWORD PTR [RSP+32]
            xor R15D,R15D
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            call strdup@PLT

            mov RSI,QWORD PTR [RSP+40]
            mov QWORD PTR [RBP+48],RAX
            xor EDX,EDX
            mov RDI,R13
            call .L_4428d0

            mov RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBP],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_4428d0

            mov RSI,QWORD PTR [RSP+56]
            movsd QWORD PTR [RBP+8],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_4428d0

            mov RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBP+16],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_4428d0

            cmp EBX,5
            movsd QWORD PTR [RBP+24],XMM0
            mov RCX,QWORD PTR [RSP+24]
            jne .L_4461e2
.L_446178:

            xor EBP,EBP
            jmp .L_446185
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446180:

            mov RCX,QWORD PTR [RSP+RBP*8+32]
.L_446185:

            mov RDI,RCX
            add RBP,1
            call free@PLT

            cmp EBX,EBP
            jg .L_446180

            test R15D,R15D
            jne .L_4460b3

            mov EAX,DWORD PTR [R12+40]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,DWORD PTR [RSP+20]
            mov RAX,QWORD PTR [R12+48]
            mov DWORD PTR [R12+40],EDX
            jne .L_445fe0

            shl DWORD PTR [RSP+20],1
            mov RDI,RAX
            movsxd RDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RDX+RDX*8]
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            je .L_44624e

            mov QWORD PTR [R12+48],RAX
            jmp .L_445fd2
.L_4461e2:

            mov RDI,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov EDX,10
            call strtol@PLT

            cmp EBX,6
            mov DWORD PTR [RBP+32],EAX
            mov RCX,QWORD PTR [RSP+24]
            je .L_446178

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,R13
            call .L_445e90

            mov RCX,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP+40],XMM0
            jmp .L_446178
.L_446220:

            lea RDX,QWORD PTR [RIP+.L_44d29b]
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            mov R15D,1
            call .L_404320

            mov RCX,QWORD PTR [RSP+32]
            jmp .L_446178
.L_446246:

            xor R12D,R12D
            jmp .L_4460c0
.L_44624e:

            mov EAX,DWORD PTR [R12+40]
            test EAX,EAX
            jle .L_446277

            xor EBX,EBX
.L_446259:

            mov RAX,QWORD PTR [R12+48]
            add R15D,1
            mov RDI,QWORD PTR [RAX+RBX*1+48]
            add RBX,72
            call free@PLT

            cmp DWORD PTR [R12+40],R15D
            jg .L_446259
.L_446277:

            mov RDI,QWORD PTR [R12]
            call free@PLT

            mov RDI,R12
            xor R12D,R12D
            call free@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_406440

            jmp .L_4460c0
.L_44629d:

            call __stack_chk_fail@PLT
.L_4462a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4462b0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            xor ECX,ECX
            mov EDX,128
            mov RSI,R13
            sub RSP,8
.L_4462ca:

            mov R12,RDI
            call .L_406410

            mov EBX,DWORD PTR [RBP+112]
            imul EBX,DWORD PTR [RBP+116]
            movsxd RBX,EBX
            lea RDI,QWORD PTR [RBX*8]
            call .L_403700

            test RAX,RAX
            mov QWORD PTR [RBP+120],RAX
            je .L_446316

            mov EDX,8
            mov R8,R13
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_4063f0

            cmp RAX,RBX
            mov EDX,1
            je .L_44634b

            mov RAX,QWORD PTR [RBP+120]
.L_446316:

            mov RDI,RAX
            call .L_403730

            lea RDX,QWORD PTR [RIP+.L_44d2c0]
            mov ESI,1
            mov RDI,R12
            xor EAX,EAX
            mov QWORD PTR [RBP+120],0
            call .L_404320

            mov ESI,4294967258
            mov RDI,R12
            call .L_404200

            xor EDX,EDX
.L_44634b:

            add RSP,8
.L_44634f:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_446358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446360:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_446367:

            mov EDI,128
            mov R12,RSI
            call .L_403700

            test RAX,RAX
            mov RBX,RAX
            je .L_446430

            mov R8,R12
            mov ECX,1
            mov EDX,128
            mov RSI,RAX
            mov RDI,RBP
            call .L_4063f0

            cmp RAX,1
            jne .L_446430

            mov EAX,DWORD PTR [RBX+112]
            sub EAX,1
            cmp EAX,99999
            ja .L_446430

            mov EAX,DWORD PTR [RBX+116]
            sub EAX,1
            cmp EAX,99999
            ja .L_446430

            mov RDI,RBX
            call strlen@PLT

            lea ECX,DWORD PTR [RAX-1]
            mov ESI,EAX
            test ECX,ECX
            jle .L_446416

            movsxd RCX,ECX
            movzx EDX,BYTE PTR [RBX+RCX*1]
            cmp DL,10
            je .L_4463e2

            cmp DL,32
            jne .L_446416
.L_4463e2:

            lea RDX,QWORD PTR [RBX+RCX*1]
            sub EAX,2
            sub ESI,2
            movsxd RSI,ESI
            mov RDI,RDX
            sub RDI,RAX
            nop
            nop
            nop
.L_4463f8:

            cmp RDX,RDI
            mov BYTE PTR [RDX],0
            je .L_446416

            mov RAX,RDX
            sub RDX,1
            sub RAX,RCX
            movzx EAX,BYTE PTR [RAX+RSI*1]
            cmp AL,10
            je .L_4463f8

            cmp AL,32
            je .L_4463f8
.L_446416:

            mov QWORD PTR [RBX+120],0
            mov RAX,RBX
            pop RBX
.L_446422:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446430:

            mov RDI,RBP
            mov ESI,4294967258
            call .L_404200

            mov RDI,RBX
            xor EBX,EBX
            call .L_403730

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_44644f:

            nop
.L_446450:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            xor ECX,ECX
            mov EDX,160
            mov RSI,R13
            sub RSP,8
.L_44646a:

            mov R12,RDI
            call .L_406410

            mov EBX,DWORD PTR [RBP+112]
            imul EBX,DWORD PTR [RBP+116]
            movsxd RBX,EBX
            lea RDI,QWORD PTR [RBX*8]
            call .L_403700

            test RAX,RAX
            mov QWORD PTR [RBP+120],RAX
            je .L_4464b6

            mov EDX,8
            mov R8,R13
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_4063f0

            cmp RAX,RBX
            mov EDX,1
            je .L_446503

            mov RAX,QWORD PTR [RBP+120]
.L_4464b6:

            mov RDI,RAX
            call .L_403730

            lea RDI,QWORD PTR [RIP+.L_44783c]
            mov QWORD PTR [RBP+120],0
            call getenv@PLT

            test RAX,RAX
            je .L_4464f4

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_44d300]
            mov EDX,57
            mov ESI,1
            call fwrite@PLT
.L_4464f4:

            mov ESI,4294967258
            mov RDI,R12
            call .L_404200

            xor EDX,EDX
.L_446503:

            add RSP,8
.L_446507:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_446510:

            push R12
            push RBP
            mov R8,RSI
            push RBX
            mov ECX,1
            mov EDX,160
            mov R12,RDI
            sub RSP,176
.L_44652b:

            mov RBP,RSP
            mov RSI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            call .L_4063f0

            cmp RAX,1
            jne .L_4466a6

            lea RDI,QWORD PTR [RIP+.L_4484d6]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_446690

            mov EDI,128
            call .L_403700

            test RAX,RAX
            mov RBX,RAX
            je .L_4466a6

            movdqa XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+48]
            movups XMMWORD PTR [RAX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+64]
            movups XMMWORD PTR [RAX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+80]
            movups XMMWORD PTR [RAX+64],XMM0
            mov RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RBX+80],RAX
            mov RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [RBX+88],RAX
            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RBX+96],RAX
            mov RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RBX+112],EAX
            mov EDX,DWORD PTR [RSP+132]
            sub EAX,1
            cmp EAX,99999
            mov DWORD PTR [RBX+116],EDX
            ja .L_4466a6

            sub EDX,1
            cmp EDX,99999
            ja .L_4466a6

            mov RDI,RBX
            call strlen@PLT

            lea ECX,DWORD PTR [RAX-1]
            mov ESI,EAX
            test ECX,ECX
            jle .L_44665e

            movsxd RCX,ECX
            movzx EDX,BYTE PTR [RBX+RCX*1]
            cmp DL,32
            je .L_44662a

            cmp DL,10
            jne .L_44665e
.L_44662a:

            lea RDX,QWORD PTR [RBX+RCX*1]
            sub EAX,2
            sub ESI,2
            movsxd RSI,ESI
            mov RDI,RDX
            sub RDI,RAX
            nop
            nop
            nop
.L_446640:

            cmp RDI,RDX
            mov BYTE PTR [RDX],0
            je .L_44665e

            mov RAX,RDX
            sub RDX,1
            sub RAX,RCX
            movzx EAX,BYTE PTR [RAX+RSI*1]
            cmp AL,10
            je .L_446640

            cmp AL,32
            je .L_446640
.L_44665e:

            mov QWORD PTR [RBX+120],0
.L_446666:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4466b7

            add RSP,176
.L_446683:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446690:

            lea RDX,QWORD PTR [RIP+.L_44d340]
            mov ESI,1
            mov RDI,R12
            xor EAX,EAX
            call .L_404320
.L_4466a6:

            mov ESI,4294967258
            mov RDI,R12
            xor EBX,EBX
            call .L_404200

            jmp .L_446666
.L_4466b7:

            call __stack_chk_fail@PLT
.L_4466bc:

            nop
            nop
            nop
            nop
.L_4466c0:

            test RDI,RDI
            je .L_4466e0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_4466d7

            call .L_403730
.L_4466d7:

            mov RDI,RBX
            pop RBX
            jmp .L_403730
.L_4466e0:

            ret 
.L_4466e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4466f0:

            push R12
            push RBP
            mov EDX,1025
            push RBX
            mov RBX,RDI
            sub RSP,1040
.L_446703:

            mov DWORD PTR [RDI],0
            mov RCX,RSP
            mov RDI,RCX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            call __strcpy_chk@PLT

            lea RDX,QWORD PTR [RIP+.L_446f8b]
            mov RSI,RAX
            mov RDI,RBX
            call .L_403dc0

            test RAX,RAX
            je .L_4467a8

            mov RSI,RAX
            mov RDI,RBX
            mov RBP,RAX
            call .L_446360

            test RAX,RAX
            mov R12,RAX
            je .L_446766

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_4462b0

            test EAX,EAX
            je .L_446798
.L_446766:

            mov RSI,RBP
            mov RDI,RBX
            call .L_406440
.L_446771:

            mov RDX,QWORD PTR [RSP+1032]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_4467ad

            add RSP,1040
.L_44678e:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446798:

            mov RDI,R12
            xor R12D,R12D
            call .L_4466c0

            jmp .L_446766
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4467a8:

            xor R12D,R12D
            jmp .L_446771
.L_4467ad:

            call __stack_chk_fail@PLT
.L_4467b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4467c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_4467ce:

            test RSI,RSI
            mov QWORD PTR [RSP+64],RDI
            mov DWORD PTR [RSP+84],EDX
            mov DWORD PTR [RSP+80],ECX
            mov QWORD PTR [RSP+72],R8
            je .L_446b11

            test EDX,EDX
            je .L_446b11

            cmp QWORD PTR [RSP+72],0
            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [RAX],0
            jle .L_446ab9

            movsxd R9,R9D
            mov RBP,QWORD PTR [RSP+184]
            mov RBX,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R9*8]
            movq XMM5,QWORD PTR [RIP+.L_447130]
            movsd XMM8,QWORD PTR [RIP+.L_44d358]
            mov R13,RSI
            mov QWORD PTR [RSP+88],RAX
            mov EAX,DWORD PTR [RSP+84]
            mov QWORD PTR [RSP+56],0
            sub EAX,1
            lea R12,QWORD PTR [RSI+RAX*8+8]
            mov QWORD PTR [RSP+96],RAX
            mov R14,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446860:

            mov EAX,DWORD PTR [RSP+84]
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM7,QWORD PTR [RBX]
            test EAX,EAX
            jle .L_446c7d

            movsd XMM0,QWORD PTR [RIP+.L_4470e0]
            mov R12,R13
            movapd XMM1,XMM0
            nop
            nop
            nop
            nop
.L_446888:

            mov RSI,QWORD PTR [R12]
            mov R15,QWORD PTR [RSI+32]
            movsd XMM10,QWORD PTR [R15+104]
            movsd XMM3,QWORD PTR [R15+96]
            movapd XMM4,XMM10
            movsd XMM9,QWORD PTR [R15+88]
            movapd XMM2,XMM3
            andpd XMM4,XMM5
            andpd XMM2,XMM5
            addsd XMM2,XMM4
            movapd XMM4,XMM9
            divsd XMM2,XMM8
            subsd XMM4,XMM2
            ucomisd XMM4,XMM6
            ja .L_446a70

            movsd XMM4,QWORD PTR [R15+80]
            movapd XMM11,XMM4
            subsd XMM11,XMM2
            ucomisd XMM11,XMM7
            ja .L_446a70

            mov EAX,DWORD PTR [R15+116]
            pxor XMM11,XMM11
            sub EAX,1
            cvtsi2sd XMM11,EAX
            mulsd XMM10,XMM11
            addsd XMM9,XMM10
            addsd XMM9,XMM2
            ucomisd XMM6,XMM9
            ja .L_446a70

            mov EAX,DWORD PTR [R15+112]
            pxor XMM9,XMM9
            sub EAX,1
            cvtsi2sd XMM9,EAX
            mulsd XMM3,XMM9
            addsd XMM4,XMM3
            addsd XMM2,XMM4
            ucomisd XMM7,XMM2
            ja .L_446a70

            mov RCX,QWORD PTR [RSI+48]
            test RCX,RCX
            jne .L_4469bc

            jmp .L_446a06
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446950:

            movsd XMM2,QWORD PTR [RAX+80]
            movapd XMM9,XMM2
            subsd XMM9,XMM0
            ucomisd XMM9,XMM7
            ja .L_4469fd

            mov EDI,DWORD PTR [RAX+116]
            pxor XMM9,XMM9
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM9,ECX
            mulsd XMM4,XMM9
            addsd XMM3,XMM4
            addsd XMM3,XMM0
            ucomisd XMM6,XMM3
            ja .L_4469fd

            mov EDI,DWORD PTR [RAX+112]
            pxor XMM3,XMM3
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM3,ECX
            mulsd XMM1,XMM3
            addsd XMM2,XMM1
            addsd XMM0,XMM2
            ucomisd XMM7,XMM0
            ja .L_4469fd

            mov RCX,QWORD PTR [RDX+48]
            mov RSI,RDX
            mov R15,RAX
            test RCX,RCX
            je .L_446a06
.L_4469bc:

            mov RDX,RCX
.L_4469bf:

            mov RAX,QWORD PTR [RDX+32]
            movsd XMM4,QWORD PTR [RAX+104]
            movsd XMM1,QWORD PTR [RAX+96]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RAX+88]
            movapd XMM0,XMM1
            andpd XMM2,XMM5
            andpd XMM0,XMM5
            addsd XMM0,XMM2
            movapd XMM2,XMM3
            divsd XMM0,XMM8
            subsd XMM2,XMM0
            ucomisd XMM2,XMM6
            jbe .L_446950
.L_4469fd:

            mov RDX,QWORD PTR [RDX+40]
            test RDX,RDX
            jne .L_4469bf
.L_446a06:

            cmp QWORD PTR [R15+120],0
            je .L_446ad0
.L_446a11:

            mov EDI,DWORD PTR [RSP+80]
            movapd XMM0,XMM7
            movapd XMM1,XMM6
            mov RSI,R15
            movsd QWORD PTR [RSP+32],XMM8
            movaps XMMWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call .L_406bb0

            movsd XMM2,QWORD PTR [RIP+.L_447db8]
            movsd XMM6,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            jbe .L_446c0a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446a70:

            add R12,8
            cmp R14,R12
            jne .L_446888

            movsd XMM2,QWORD PTR [RIP+.L_447db8]
.L_446a85:

            ucomisd XMM0,XMM2
            ja .L_446b38

            movsd QWORD PTR [RBP],XMM1
            movsd QWORD PTR [RBX],XMM0
.L_446a98:

            mov RDI,QWORD PTR [RSP+88]
            add QWORD PTR [RSP+56],1
            mov RAX,QWORD PTR [RSP+56]
            add RBP,RDI
            add RBX,RDI
            cmp QWORD PTR [RSP+72],RAX
            jne .L_446860
.L_446ab9:

            add RSP,120
.L_446abd:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446ad0:

            mov RDI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+32],XMM8
            movaps XMMWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call .L_4098e0

            test EAX,EAX
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            jne .L_446a11
.L_446b11:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,4294967258
            call .L_404200

            add RSP,120
.L_446b24:

            mov EAX,4294967258
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446b38:

            mov RAX,QWORD PTR [RSP+64]
            cmp DWORD PTR [RAX+4],1
            jle .L_446a98

            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_447d28]
            movsd XMM0,QWORD PTR [RBX]
            mov EAX,2
            mov ESI,2
            movsd QWORD PTR [RSP+48],XMM8
            xor R12D,R12D
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RBP]
            movaps XMMWORD PTR [RSP],XMM5
            call .L_404320

            mov RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+16],RBX
            mov RBX,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP]
            lea R15,QWORD PTR [RAX+1]
            mov RAX,R13
            mov R13,RBP
            mov RBP,RAX
            nop
            nop
            nop
.L_446bb0:

            mov RAX,QWORD PTR [RBP+R12*8]
            test R12,R12
            movsd QWORD PTR [RSP+48],XMM8
            movaps XMMWORD PTR [RSP],XMM5
            mov RCX,QWORD PTR [RAX]
            je .L_446cd7

            lea RDX,QWORD PTR [RIP+.L_448848]
            mov ESI,2
            mov RDI,RBX
            xor EAX,EAX
            call .L_404320

            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP]
.L_446bee:

            add R12,1
            cmp R15,R12
            jne .L_446bb0

            mov RAX,RBP
            mov RBX,QWORD PTR [RSP+16]
            mov RBP,R13
            mov R13,RAX
            jmp .L_446a98
.L_446c0a:

            mov EAX,DWORD PTR [RIP+.L_65dea4]
            lea EDX,DWORD PTR [RAX+1]
            cmp EAX,19
            mov DWORD PTR [RIP+.L_65dea4],EDX
            jg .L_446a85

            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_44881d]
            mov RCX,R15
            mov ESI,3
            xor EAX,EAX
            movsd QWORD PTR [RSP+104],XMM8
            movaps XMMWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_404320

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM5,XMMWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+104]
            jmp .L_446a85
.L_446c7d:

            mov RAX,QWORD PTR [RSP+64]
            cmp DWORD PTR [RAX+4],1
            jle .L_446a98

            movsd XMM1,QWORD PTR [RIP+.L_447ce0]
            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_447d28]
            mov ESI,2
            mov EAX,2
            movsd QWORD PTR [RSP+48],XMM8
            mulsd XMM7,XMM1
            mulsd XMM1,XMM6
            movaps XMMWORD PTR [RSP],XMM5
            movapd XMM0,XMM7
            call .L_404320

            movapd XMM5,XMMWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+48]
            jmp .L_446a98
.L_446cd7:

            lea RDX,QWORD PTR [RIP+.L_44883b]
            mov ESI,2
            mov RDI,RBX
            xor EAX,EAX
            call .L_404320

            movapd XMM5,XMMWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+48]
            jmp .L_446bee
.L_446cfe:

            nop
            nop
.L_446d00:

            push R15
            push R14
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov R12,RCX
            sub RSP,40
.L_446d19:

            lea RDX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP],R9
            mov R14,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov R15,QWORD PTR [RSP+104]
            call .L_40b610

            test RAX,RAX
            je .L_446d52

            mov EDX,DWORD PTR [RSP+20]
            mov R9,QWORD PTR [RSP]
            test EDX,EDX
            jne .L_446d78
.L_446d52:

            mov EAX,DWORD PTR [RBX]
.L_446d54:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_446db4

            add RSP,40
.L_446d68:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446d78:

            sub RSP,8
            mov R8,R12
            mov ECX,EBP
            push R15
            push R14
            mov RSI,RAX
            push R9
            mov RDI,RBX
            mov R9D,R13D
            mov QWORD PTR [RSP+40],RAX
            call .L_4467c0

            mov DWORD PTR [RSP+32],EAX
            add RSP,32
            mov R10,QWORD PTR [RSP+8]
            mov RDI,R10
            call .L_403730

            mov EAX,DWORD PTR [RSP]
            jmp .L_446d54
.L_446db4:

            call __stack_chk_fail@PLT
.L_446db9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446dc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_446dce:

            cmp QWORD PTR [RDI+520],0
            mov RBP,QWORD PTR [RSP+80]
            jne .L_446e50

            mov DWORD PTR [RSP+8],ESI
            mov RSI,QWORD PTR [RDI+464]
            mov R14,R9
            mov R13,R8
            mov R15D,ECX
            mov R12,RDX
            mov RBX,RDI
            test RSI,RSI
            je .L_446e68

            mov EDX,DWORD PTR [RDI+472]
.L_446e02:

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EDX
            mov QWORD PTR [RSP],RSI
            call .L_404140

            sub RSP,8
.L_446e16:

            mov R9D,R15D
            mov R8,R12
            push RBP
            push R14
            mov RDI,RAX
            push R13
            mov ECX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+32]
            call .L_4467c0

            add RSP,32
.L_446e3a:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446e50:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_406760
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446e68:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_44824e]
            call .L_403e60

            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_404140

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RBX+472]
            mov RDI,RAX
            call .L_40b610

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBX+464],RAX
            je .L_446eb7

            mov EDX,DWORD PTR [RBX+472]
            test EDX,EDX
            jne .L_446e02
.L_446eb7:

            mov RAX,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RAX]
            jmp .L_446e3a
.L_446ec1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446ed0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_65a938]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_65a940]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4199488

            test RBP,RBP
            je .L_446f26

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446f10:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_446f10
.L_446f26:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_446f35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446f40:

            ret 
.L_446f42:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_446f64:
          .string "PROJ_LIB"
.L_446f6d:
          .string "BINARY_2D:"
.L_446f78:
          .string "BINARY_3D:"
.L_446f83:
          .string "%lf %lf"
.L_446f8b:
          .string "rb"
.L_446f8e:
          .byte 0x6d
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x21
          .byte 0xa
.L_446f9c:
          .zero 1
.L_446f9d:
          .string "read error!\n"
          .zero 6
.L_446fb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
.L_446fb8:
          .string "init file too big"
.L_446fca:
          .string "sproj"
.L_446fd0:
          .string "ellps="
.L_446fd7:
          .string "tdatum"
.L_446fde:
          .string "tellps"
.L_446fe5:
          .string "tb"
.L_446fe8:
          .string "trf"
.L_446fec:
          .string "tf"
.L_446fef:
          .string "tinit"
.L_446ff5:
          .string "sinit"
.L_446ffb:
          .string "proj_def.dat"
.L_447008:
          .string "general"
.L_447010:
          .string "bgeoc"
.L_447016:
          .string "bover"
.L_44701c:
          .string "tgeoidgrids"
.L_447028:
          .string "sgeoidgrids"
.L_447034:
          .string "tlon_wrap"
.L_44703e:
          .string "rlon_wrap"
.L_447048:
          .string "saxis"
.L_44704e:
          .string "ewnsud"
.L_447055:
          .string "rlon_0"
.L_44705c:
          .string "rlat_0"
.L_447063:
          .string "dx_0"
.L_447068:
          .string "dy_0"
.L_44706d:
          .string "tk_0"
.L_447072:
          .string "dk_0"
.L_447077:
          .string "tk"
.L_44707a:
          .string "dk"
.L_44707d:
          .string "sunits"
.L_447084:
          .string "sto_meter"
.L_44708e:
          .string "svunits"
.L_447096:
          .string "svto_meter"
.L_4470a1:
          .string "spm"
.L_4470a5:
          .string "bno_defs"
          .zero 2
.L_4470b0:
          .string "pj_init_ctx: Must specify ellipsoid or sphere"
          .zero 2
.L_4470e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_4470e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_4470f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4470f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_447100:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa6
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_447108:
          .byte 0x81
          .byte 0x18
          .byte 0xfc
          .byte 0xf1
          .byte 0x90
          .byte 0x6b
          .byte 0x7b
          .byte 0x3f
.L_447110:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0xbd
.L_447118:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0x3d
.L_447120:
          .string "^8U)zjO@"
          .zero 7
.L_447130:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447140:
          .string "aeqd"
.L_447145:
          .string "aitoff"
.L_44714c:
          .string "alsk"
.L_447151:
          .string "apian"
.L_447157:
          .string "august"
.L_44715e:
          .string "bacon"
.L_447164:
          .string "bipc"
.L_447169:
          .string "boggs"
.L_44716f:
          .string "bonne"
.L_447175:
          .string "calcofi"
.L_44717d:
          .byte 0x63
          .byte 0x61
.L_44717f:
          .string "rt"
.L_447182:
          .string "cass"
.L_447187:
          .string "chamb"
.L_44718d:
          .string "collg"
.L_447193:
          .byte 0x63
          .byte 0x6f
.L_447195:
          .string "mill"
.L_44719a:
          .string "crast"
.L_4471a0:
          .string "denoy"
.L_4471a6:
          .string "eck1"
.L_4471ab:
          .string "eck2"
.L_4471b0:
          .string "eck3"
.L_4471b5:
          .string "eck4"
.L_4471ba:
          .string "eck5"
.L_4471bf:
          .string "eck6"
.L_4471c4:
          .string "eqc"
.L_4471c8:
          .string "eqdc"
.L_4471cd:
          .string "euler"
.L_4471d3:
          .byte 0x65
.L_4471d4:
          .string "tmerc"
.L_4471da:
          .string "fahey"
.L_4471e0:
          .string "fouc"
.L_4471e5:
          .string "fouc_s"
.L_4471ec:
          .string "gall"
.L_4471f1:
          .string "geocent"
.L_4471f9:
          .string "geos"
.L_4471fe:
          .string "gins8"
.L_447204:
          .byte 0x67
          .byte 0x6e
          .byte 0x5f
.L_447207:
          .string "sinu"
.L_44720c:
          .string "gnom"
.L_447211:
          .string "goode"
.L_447217:
          .string "gs48"
.L_44721c:
          .string "gs50"
.L_447221:
          .string "hammer"
.L_447228:
          .string "hatano"
.L_44722f:
          .byte 0x72
.L_447230:
          .string "healpix"
.L_447238:
          .string "helmert"
.L_447240:
          .string "hgridshift"
.L_44724b:
          .string "horner"
.L_447252:
          .string "igh"
.L_447256:
          .string "imw_p"
.L_44725c:
          .byte 0x69
          .byte 0x73
          .byte 0x65
          .byte 0x61
          .byte 0x0
.L_447261:
          .string "kav5"
.L_447266:
          .string "kav7"
.L_44726b:
          .string "krovak"
.L_447272:
          .string "labrd"
.L_447278:
          .byte 0x6c
.L_447279:
          .string "aea"
.L_44727d:
          .string "lagrng"
.L_447284:
          .string "larr"
.L_447289:
          .string "lask"
.L_44728e:
          .string "lonlat"
.L_447295:
          .string "latlon"
.L_44729c:
          .string "latlong"
.L_4472a4:
          .string "longlat"
.L_4472ac:
          .byte 0x6c
.L_4472ad:
          .string "cc"
.L_4472b0:
          .string "lcca"
.L_4472b5:
          .string "leac"
.L_4472ba:
          .string "lee_os"
.L_4472c1:
          .string "loxim"
.L_4472c7:
          .string "mbt_s"
.L_4472cd:
          .string "mbt_fps"
.L_4472d5:
          .string "mbtfpp"
.L_4472dc:
          .string "mbtfpq"
.L_4472e3:
          .string "mbtfps"
.L_4472ea:
          .string "mil_os"
.L_4472f1:
          .string "misrsom"
.L_4472f9:
          .string "moll"
.L_4472fe:
          .string "molodensky"
.L_447309:
          .string "murd1"
.L_44730f:
          .string "murd2"
.L_447315:
          .string "murd3"
.L_44731b:
          .string "natearth"
.L_447324:
          .string "natearth2"
.L_44732e:
          .string "nell"
.L_447333:
          .string "nell_h"
.L_44733a:
          .string "nicol"
.L_447340:
          .string "nsper"
.L_447346:
          .string "nzmg"
.L_44734b:
          .string "ob_tran"
.L_447353:
          .byte 0x6f
.L_447354:
          .string "cea"
.L_447358:
          .string "oea"
.L_44735c:
          .string "ortel"
.L_447362:
          .string "ortho"
.L_447368:
          .string "pconic"
.L_44736f:
          .string "patterson"
.L_447379:
          .string "putp1"
.L_44737f:
          .string "putp2"
.L_447385:
          .string "putp3"
.L_44738b:
          .string "putp3p"
.L_447392:
          .string "putp4p"
.L_447399:
          .string "putp5"
.L_44739f:
          .string "putp5p"
.L_4473a6:
          .string "putp6"
.L_4473ac:
          .string "putp6p"
.L_4473b3:
          .string "qua_aut"
.L_4473bb:
          .string "qsc"
.L_4473bf:
          .string "robin"
.L_4473c5:
          .string "rouss"
.L_4473cb:
          .byte 0x72
.L_4473cc:
          .string "poly"
.L_4473d1:
          .string "sch"
.L_4473d5:
          .byte 0x73
.L_4473d6:
          .byte 0x6f
.L_4473d7:
          .string "merc"
.L_4473dc:
          .string "stere"
.L_4473e2:
          .string "sterea"
.L_4473e9:
          .string "gstmerc"
.L_4473f1:
          .string "tcc"
.L_4473f5:
          .string "tcea"
.L_4473fa:
          .string "times"
.L_447400:
          .string "tissot"
.L_447407:
          .string "tpeqd"
.L_44740d:
          .string "tpers"
.L_447413:
          .string "unitconvert"
.L_44741f:
          .string "ups"
.L_447423:
          .string "urm5"
.L_447428:
          .string "urmfps"
.L_44742f:
          .byte 0x75
.L_447430:
          .string "tm"
.L_447433:
          .string "vandg"
.L_447439:
          .string "vandg2"
.L_447440:
          .string "vandg3"
.L_447447:
          .string "vandg4"
.L_44744e:
          .string "vitk1"
.L_447454:
          .string "vgridshift"
.L_44745f:
          .string "wag1"
.L_447464:
          .string "wag2"
.L_447469:
          .string "wag3"
.L_44746e:
          .string "wag4"
.L_447473:
          .string "wag5"
.L_447478:
          .string "wag6"
.L_44747d:
          .string "wag7"
.L_447482:
          .string "weren"
.L_447488:
          .string "wink1"
.L_44748e:
          .string "wink2"
.L_447494:
          .string "wintri"
.L_44749b:
          .string "/usr/local/share/proj"
.L_4474b1:
          .string "failed"
.L_4474b8:
          .string "succeeded"
.L_4474c2:
          .string "HOME"
.L_4474c7:
          .byte 0x2e
          .byte 0x2e
          .byte 0x0
.L_4474ca:
          .string "%s%c%s"
          .zero 7
.L_4474d8:
          .string "pj_open_lib(%s): call fopen(%s) - %s\n"
.L_4474fe:
          .string "/"
.L_447500:
          .string "invalid request to pj_param, fatal\n"
.L_447524:
          .long .L_403f18-.L_447524
          .long .L_40402e-.L_447524
          .long .L_403f18-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_403f18-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_40402e-.L_447524
          .long .L_403f18-.L_447524
          .long .L_403f18-.L_447524
.L_44756c:
          .long .L_403fd0-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_403fb8-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_403fa0-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_40402e-.L_44756c
          .long .L_403f80-.L_44756c
          .long .L_403f70-.L_44756c
.L_4475b4:
          .string "km"
.L_4475b7:
          .string "1000."
.L_4475bd:
          .string "Kilometer"
.L_4475c7:
          .string "Meter"
.L_4475cd:
          .string "dm"
.L_4475d0:
          .string "1/10"
.L_4475d5:
          .string "Decimeter"
.L_4475df:
          .string "cm"
.L_4475e2:
          .string "1/100"
.L_4475e8:
          .string "Centimeter"
.L_4475f3:
          .string "mm"
.L_4475f6:
          .string "1/1000"
.L_4475fd:
          .string "Millimeter"
.L_447608:
          .string "kmi"
.L_44760c:
          .string "1852.0"
.L_447613:
          .string "International Nautical Mile"
.L_44762f:
          .string "0.0254"
.L_447636:
          .string "International Inch"
.L_447649:
          .string "0.3048"
.L_447650:
          .string "International Foot"
.L_447663:
          .string "0.9144"
.L_44766a:
          .string "International Yard"
.L_44767d:
          .string "1609.344"
.L_447686:
          .string "International Statute Mile"
.L_4476a1:
          .string "fath"
.L_4476a6:
          .string "1.8288"
.L_4476ad:
          .string "International Fathom"
.L_4476c2:
          .string "20.1168"
.L_4476ca:
          .string "International Chain"
.L_4476de:
          .string "link"
.L_4476e3:
          .string "0.201168"
.L_4476ec:
          .string "International Link"
.L_4476ff:
          .byte 0x75
          .byte 0x73
          .byte 0x2d
.L_447702:
          .string "in"
.L_447705:
          .string "1./39.37"
.L_44770e:
          .string "U.S. Surveyor\'s Inch"
.L_447723:
          .string "us-ft"
.L_447729:
          .string "0.304800609601219"
.L_44773b:
          .string "U.S. Surveyor\'s Foot"
.L_447750:
          .string "us-yd"
.L_447756:
          .string "0.914401828803658"
.L_447768:
          .string "U.S. Surveyor\'s Yard"
.L_44777d:
          .string "us-ch"
.L_447783:
          .string "20.11684023368047"
.L_447795:
          .string "U.S. Surveyor\'s Chain"
.L_4477ab:
          .byte 0x75
          .byte 0x73
          .byte 0x2d
.L_4477ae:
          .string "mi"
.L_4477b1:
          .string "1609.347218694437"
.L_4477c3:
          .string "U.S. Surveyor\'s Statute Mile"
.L_4477e0:
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x2d
.L_4477e4:
          .string "yd"
.L_4477e7:
          .string "0.91439523"
.L_4477f2:
          .string "Indian Yard"
.L_4477fe:
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x2d
.L_447802:
          .string "ft"
.L_447805:
          .string "0.30479841"
.L_447810:
          .string "Indian Foot"
.L_44781c:
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x2d
.L_447820:
          .string "ch"
.L_447823:
          .string "20.11669506"
.L_44782f:
          .string "Indian Chain"
.L_44783c:
          .string "PROJ_DEBUG"
.L_447847:
          .string "%s\n"
          .zero 21
.L_447860:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_447980:
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4479a0:
          .string "rHEALPix\n\tSph., Ellps.\n\tnorth_square= south_square="
          .zero 12
.L_4479e0:
          .string "HEALPix\n\tSph., Ellps."
.L_4479f6:
          .string "inorth_square"
.L_447a04:
          .string "isouth_square"
          .zero 6
.L_447a18:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_447a20:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_447a28:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
.L_447a30:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_447a38:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_447a40:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
.L_447a48:
          .byte 0x16
          .byte 0x56
          .byte 0xe7
          .byte 0x9e
          .byte 0xaf
          .byte 0x3
          .byte 0xd2
          .byte 0x3c
.L_447a50:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0xf
          .byte 0x40
.L_447a58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_447a60:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_447a68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_447a70:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x22
          .byte 0x40
.L_447a78:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_447a80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_447a88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_447a90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_447a98:
          .byte 0xde
          .byte 0x68
          .byte 0x4f
          .byte 0xd0
          .byte 0xed
          .byte 0x59
          .byte 0xe7
          .byte 0x3f
.L_447aa0:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0xf2
          .byte 0x3f
.L_447aa8:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_447ab0:
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_447ab8:
          .byte 0xd4
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
.L_447ac0:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_447ac8:
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_447ad0:
          .byte 0xd4
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447ae0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447af0:
          .string "Natural Earth\n\tPCyl., Sph."
          .zero 5
.L_447b10:
          .byte 0xf4
          .byte 0xa5
          .byte 0xb7
          .byte 0x3f
          .byte 0x17
          .byte 0xd
          .byte 0x59
          .byte 0xbf
.L_447b18:
          .byte 0x3d
          .byte 0x60
          .byte 0x1e
          .byte 0x32
          .byte 0xe5
          .byte 0x43
          .byte 0x70
          .byte 0x3f
.L_447b20:
          .byte 0x41
          .byte 0x45
          .byte 0xd5
          .byte 0xaf
          .byte 0x74
          .byte 0x3e
          .byte 0x8c
          .byte 0x3f
.L_447b28:
          .byte 0xd6
          .byte 0x1f
          .byte 0x61
          .byte 0x18
          .byte 0xb0
          .byte 0xe4
          .byte 0xc0
          .byte 0x3f
.L_447b30:
          .byte 0x6
          .byte 0x12
          .byte 0x14
          .byte 0x3f
          .byte 0xc6
          .byte 0xdc
          .byte 0xeb
          .byte 0x3f
.L_447b38:
          .byte 0xed
          .byte 0x9d
          .byte 0xd1
          .byte 0x56
          .byte 0x25
          .byte 0x91
          .byte 0x9d
          .byte 0x3f
.L_447b40:
          .byte 0xda
          .byte 0xac
          .byte 0xfa
          .byte 0x5c
          .byte 0x6d
          .byte 0xc5
          .byte 0xa6
          .byte 0x3f
.L_447b48:
          .byte 0xdb
          .byte 0xc3
          .byte 0x5e
          .byte 0x28
          .byte 0x60
          .byte 0x3b
          .byte 0x78
          .byte 0xbf
.L_447b50:
          .byte 0xf7
          .byte 0x1
          .byte 0x48
          .byte 0x6d
          .byte 0xe2
          .byte 0xe4
          .byte 0x8e
          .byte 0x3f
.L_447b58:
          .byte 0xf3
          .byte 0xe4
          .byte 0x9a
          .byte 0x2
          .byte 0x99
          .byte 0x1d
          .byte 0xf0
          .byte 0x3f
.L_447b60:
          .byte 0xda
          .byte 0x0
          .byte 0xb4
          .byte 0x8f
          .byte 0x26
          .byte 0xc2
          .byte 0xf6
          .byte 0x3f
.L_447b68:
          .byte 0xda
          .byte 0x0
          .byte 0xb4
          .byte 0x8f
          .byte 0x26
          .byte 0xc2
          .byte 0xf6
          .byte 0xbf
.L_447b70:
          .byte 0xd5
          .byte 0xe8
          .byte 0xd5
          .byte 0x0
          .byte 0xa5
          .byte 0xa1
          .byte 0xd0
          .byte 0x3f
.L_447b78:
          .byte 0x3f
          .byte 0x57
          .byte 0x5b
          .byte 0xb1
          .byte 0xbf
          .byte 0xec
          .byte 0xd3
          .byte 0x3f
.L_447b80:
          .byte 0xa7
          .byte 0x26
          .byte 0xc1
          .byte 0x1b
          .byte 0xd2
          .byte 0xa8
          .byte 0xb0
          .byte 0xbf
.L_447b88:
          .byte 0x79
          .byte 0x1
          .byte 0xf6
          .byte 0xd1
          .byte 0xa9
          .byte 0x2b
          .byte 0xa7
          .byte 0x3f
.L_447b90:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447ba0:
          .string "Natural Earth 2\n\tPCyl., Sph."
          .zero 3
.L_447bc0:
          .byte 0xe2
          .byte 0x6
          .byte 0x7c
          .byte 0x7e
          .byte 0x18
          .byte 0x21
          .byte 0xac
          .byte 0x3f
.L_447bc8:
          .byte 0x3d
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x1d
          .byte 0xa7
          .byte 0x3f
.L_447bd0:
          .byte 0x6f
          .byte 0x47
          .byte 0x38
          .byte 0x2d
          .byte 0x78
          .byte 0xd1
          .byte 0x97
          .byte 0xbf
.L_447bd8:
          .byte 0xaf
          .byte 0x8
          .byte 0xfe
          .byte 0xb7
          .byte 0x92
          .byte 0x1d
          .byte 0x6b
          .byte 0x3f
.L_447be0:
          .byte 0x7f
          .byte 0x30
          .byte 0xf0
          .byte 0xdc
          .byte 0x7b
          .byte 0xb8
          .byte 0xc0
          .byte 0xbf
.L_447be8:
          .byte 0x95
          .byte 0xf1
          .byte 0xef
          .byte 0x33
          .byte 0x2e
          .byte 0x1c
          .byte 0xeb
          .byte 0x3f
.L_447bf0:
          .byte 0xf0
          .byte 0xdc
          .byte 0x7b
          .byte 0xb8
          .byte 0xe4
          .byte 0xb8
          .byte 0x93
          .byte 0x3f
.L_447bf8:
          .byte 0xe1
          .byte 0x7a
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x9a
          .byte 0x3f
.L_447c00:
          .byte 0x2a
          .byte 0xe3
          .byte 0xdf
          .byte 0x67
          .byte 0x5c
          .byte 0x38
          .byte 0x70
          .byte 0xbf
.L_447c08:
          .byte 0x71
          .byte 0xc9
          .byte 0x71
          .byte 0xa7
          .byte 0x74
          .byte 0x30
          .byte 0xf0
          .byte 0x3f
.L_447c10:
          .byte 0x30
          .byte 0xf
          .byte 0x5d
          .byte 0x86
          .byte 0xa4
          .byte 0xc9
          .byte 0xf6
          .byte 0x3f
.L_447c18:
          .byte 0x30
          .byte 0xf
          .byte 0x5d
          .byte 0x86
          .byte 0xa4
          .byte 0xc9
          .byte 0xf6
          .byte 0xbf
.L_447c20:
          .byte 0xca
          .byte 0x4f
          .byte 0xaa
          .byte 0x7d
          .byte 0x3a
          .byte 0x1e
          .byte 0xcb
          .byte 0x3f
.L_447c28:
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xce
          .byte 0x3f
.L_447c30:
          .byte 0x24
          .byte 0xd1
          .byte 0xcb
          .byte 0x28
          .byte 0x96
          .byte 0x5b
          .byte 0xaa
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447c40:
          .string "Cal Coop Ocean Fish Invest Lines/Stations\n\tCyl, Sph&Ell"
.L_447c78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
.L_447c80:
          .byte 0xf5
          .byte 0x61
          .byte 0xb7
          .byte 0x3
          .byte 0x71
          .byte 0x98
          .byte 0x6c
          .byte 0x3f
.L_447c88:
          .byte 0xab
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_447c90:
          .byte 0x96
          .byte 0x90
          .byte 0x3a
          .byte 0x61
          .byte 0xad
          .byte 0x12
          .byte 0xe3
          .byte 0x3f
.L_447c98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_447ca0:
          .byte 0xa3
          .byte 0x96
          .byte 0xcf
          .byte 0x57
          .byte 0x4b
          .byte 0x10
          .byte 0x53
          .byte 0x3f
.L_447ca8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdf
          .byte 0x3f
.L_447cb0:
          .byte 0x3a
          .byte 0xf5
          .byte 0xb6
          .byte 0x7c
          .byte 0x6f
          .byte 0x50
          .byte 0xe4
          .byte 0x3f
.L_447cb8:
          .byte 0x1c
          .byte 0x33
          .byte 0x90
          .byte 0x45
          .byte 0xa7
          .byte 0x79
          .byte 0xe2
          .byte 0x3f
.L_447cc0:
          .byte 0xaa
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xdb
          .byte 0x3f
.L_447cc8:
          .byte 0x2
          .byte 0xcb
          .byte 0xa2
          .byte 0x5a
          .byte 0x6d
          .byte 0xea
          .byte 0x0
          .byte 0xc0
.L_447cd0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_447cd8:
          .byte 0x2
          .byte 0xcb
          .byte 0xa2
          .byte 0x5a
          .byte 0x6d
          .byte 0xea
          .byte 0x0
          .byte 0x40
.L_447ce0:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_447ce8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_447cf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
.L_447cf8:
          .byte 0xad
          .byte 0xd6
          .byte 0xc1
          .byte 0x2e
          .byte 0xac
          .byte 0xf6
          .byte 0xe1
          .byte 0x3f
.L_447d00:
          .string "pj_gridcatalog.c"
.L_447d11:
          .string "gi->child == NULL"
          .zero 5
.L_447d28:
          .string "pj_apply_gridshift(): failed to find a grid shift table for\n                      location (%.7fdW,%.7fdN)"
          .zero 13
.L_447da0:
          .string "pj_gc_apply_gridshift"
          .zero 2
.L_447db8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_447dc0:
          .string "Inverse grid shift iteration failed, presumably at grid edge.\nUsing first approximation.\n"
          .zero 6
.L_447e20:
          .string "Inverse grid shift iterator failed to converge.\n"
          .zero 7
.L_447e58:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_447e60:
          .byte 0x28
          .byte 0xa0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x3f
.L_447e68:
          .string "greenwich"
.L_447e72:
          .string "0dE"
.L_447e76:
          .string "lisbon"
.L_447e7d:
          .string "9d07\'54.862\"W"
.L_447e8b:
          .string "paris"
.L_447e91:
          .string "2d20\'14.025\"E"
.L_447e9f:
          .string "bogota"
.L_447ea6:
          .string "74d04\'51.3\"W"
.L_447eb3:
          .string "madrid"
.L_447eba:
          .string "3d41\'16.58\"W"
.L_447ec7:
          .string "rome"
.L_447ecc:
          .string "12d27\'8.4\"E"
.L_447ed8:
          .string "bern"
.L_447edd:
          .string "7d26\'22.5\"E"
.L_447ee9:
          .string "jakarta"
.L_447ef1:
          .string "106d48\'27.79\"E"
.L_447f00:
          .string "ferro"
.L_447f06:
          .string "17d40\'W"
.L_447f0e:
          .string "brussels"
.L_447f17:
          .string "4d22\'4.71\"E"
.L_447f23:
          .string "stockholm"
.L_447f2d:
          .string "18d3\'29.8\"E"
.L_447f39:
          .string "athens"
.L_447f40:
          .string "23d42\'58.815\"E"
.L_447f4f:
          .string "oslo"
.L_447f54:
          .string "10d43\'22.5\"E"
.L_447f61:
          .string "WGS84"
.L_447f67:
          .string "towgs84=0,0,0"
.L_447f75:
          .string "GGRS87"
.L_447f7c:
          .string "towgs84=-199.87,74.79,246.62"
.L_447f99:
          .string "GRS80"
.L_447f9f:
          .string "NAD83"
.L_447fa5:
          .string "North_American_Datum_1983"
.L_447fbf:
          .string "NAD27"
.L_447fc5:
          .string "clrk66"
.L_447fcc:
          .string "North_American_Datum_1927"
.L_447fe6:
          .string "potsdam"
.L_447fee:
          .string "bessel"
.L_447ff5:
          .string "Potsdam Rauenberg 1950 DHDN"
.L_448011:
          .string "carthage"
.L_44801a:
          .string "towgs84=-263.0,6.0,431.0"
.L_448033:
          .string "clrk80ign"
.L_44803d:
          .string "Carthage 1934 Tunisia"
.L_448053:
          .string "hermannskogel"
.L_448061:
          .string "Hermannskogel"
.L_44806f:
          .string "ire65"
.L_448075:
          .byte 0x6d
          .byte 0x6f
          .byte 0x64
          .byte 0x5f
.L_448079:
          .string "airy"
.L_44807e:
          .string "Ireland 1965"
.L_44808b:
          .string "nzgd49"
.L_448092:
          .string "OSGB36"
.L_448099:
          .string "Airy 1830"
          .zero 5
.L_4480a8:
          .string "Greek_Geodetic_Reference_System_1987"
          .zero 3
.L_4480d0:
          .string "nadgrids=@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat"
          .zero 6
.L_448108:
          .string "towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7"
.L_448138:
          .string "towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232"
.L_448170:
          .string "towgs84=482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15"
          .zero 5
.L_4481b0:
          .string "towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993"
          .zero 5
.L_4481e8:
          .string "New Zealand Geodetic Datum 1949"
.L_448208:
          .string "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894"
.L_448247:
          .string "sdatum"
.L_44824e:
          .string "snadgrids"
.L_448258:
          .string "scatalog"
.L_448261:
          .string "sdate"
.L_448267:
          .string "stowgs84"
.L_448270:
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_448278:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x2e
          .byte 0x41
.L_448280:
          .byte 0x65
          .byte 0x6e
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448288:
          .string "pj_transform(): source projection not invertable"
          .zero 7
.L_4482c0:
          .long .L_408568-.L_4482c0
          .long .L_408544-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_4084f4-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_4084f0-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_408580-.L_4482c0
          .long .L_40851e-.L_4482c0
          .long .L_408540-.L_4482c0
.L_448310:
          .long .L_408c40-.L_448310
          .long .L_408c30-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408c20-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408c10-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408c00-.L_448310
          .long .L_408d38-.L_448310
          .long .L_408bd8-.L_448310
.L_448360:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448428:
          .byte 0xf0
          .byte 0x94
          .byte 0xfe
          .byte 0xf1
          .byte 0x90
          .byte 0x6b
          .byte 0x7b
          .byte 0x3f
.L_448430:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_448438:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
.L_448440:
          .byte 0xf4
          .byte 0xcf
          .byte 0xb1
          .byte 0x6d
          .byte 0x6a
          .byte 0x28
          .byte 0xf9
          .byte 0xbf
.L_448448:
          .byte 0xf4
          .byte 0xcf
          .byte 0xb1
          .byte 0x6d
          .byte 0x6a
          .byte 0x28
          .byte 0xf9
          .byte 0x3f
.L_448450:
          .byte 0xa7
          .byte 0x8e
          .byte 0xa8
          .byte 0x99
          .byte 0xc2
          .byte 0x57
          .byte 0xf3
          .byte 0x3a
.L_448458:
          .string "ctable"
.L_44845f:
          .string "ctable2"
.L_448467:
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x31
          .byte 0x0
.L_44846c:
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x32
          .byte 0x0
.L_448471:
          .string "NTv2 - loading grid %s"
.L_448488:
          .byte 0x67
.L_448489:
          .string "tx"
.L_44848c:
          .string "missing"
.L_448494:
          .string "HEADER"
.L_44849b:
          .string "W GRID"
.L_4484a2:
          .string "TO      NAD83   "
.L_4484b3:
          .string "NUM_OREC"
.L_4484bc:
          .string "GS_TYPE"
.L_4484c4:
          .string "SUB_NAME"
.L_4484cd:
          .byte 0x4e
          .byte 0x4f
          .byte 0x4e
          .byte 0x45
          .byte 0x0
.L_4484d2:
          .byte 0x47
          .byte 0x54
          .byte 0x58
          .byte 0x0
.L_4484d6:
          .string "CTABLE V2"
.L_4484e0:
          .string "CTABLE ct is NULL."
          .zero 5
.L_4484f8:
          .string "NTv1 grid shift file has wrong record count, corrupt?"
          .zero 2
.L_448530:
          .string "NTv1 %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)"
          .zero 6
.L_448560:
          .string "NTv2 %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
          .zero 2
.L_448590:
          .string "GS_COUNT(%d) does not match expected cells (%dx%d=%d)\n"
          .zero 1
.L_4485c8:
          .string "pj_gridinfo_init_ntv2(): failed to find parent %8.8s for %s.\n"
          .zero 2
.L_448608:
          .string "gtx file header has invalid extents, corrupt?"
          .zero 2
.L_448638:
          .string "This GTX spans the dateline!  This will cause problems."
.L_448670:
          .string "GTX %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)"
          .zero 7
.L_4486a0:
          .string "Ctable2 %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
          .zero 7
.L_4486d8:
          .string "Ctable %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
.L_448708:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_448710:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xac
          .byte 0x40
.L_448718:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0xc0
.L_448720:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_448728:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0xc0
.L_448730:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_448738:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_448740:
          .zero 16
.L_448750:
          .byte 0x4e
          .byte 0x54
          .byte 0x76
          .byte 0x31
          .byte 0x20
          .byte 0x47
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x53
          .byte 0x68
          .byte 0x69
          .byte 0x66
          .byte 0x74
          .byte 0x20
.L_448760:
          .byte 0x47
          .byte 0x54
          .byte 0x58
          .byte 0x20
          .byte 0x56
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x47
          .byte 0x72
          .byte 0x69
.L_448770:
          .string "pj_gridlist.c"
.L_44877e:
          .string "FALSE"
          .zero 12
.L_448790:
          .string "pj_gridlist_merge_gridfile"
          .zero 5
.L_4487b0:
          .string "pj_apply_vgridshift(): failed to find a grid shift table for\n                       location (%.7fdW,%.7fdN)"
.L_44881d:
          .string "pj_apply_gridshift(): used %s"
.L_44883b:
          .string "   tried: %s"
.L_448848:
          .string ",%s"
          .zero 4
.L_448850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_448858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0xc0
.L_448860:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe2
          .byte 0x38
          .byte 0x56
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448880:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448920:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xaf
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0xbc
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xa5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0xab
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x98
          .byte 0xe2
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4489c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448a60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xcd
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xb2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x98
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xc4
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xcb
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x8a
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xba
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xa7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xcd
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x81
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xaa
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xc7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xdd
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x98
          .byte 0xc1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xb6
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x90
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x94
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc6
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xc1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xa4
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xba
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xa7
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xf2
          .byte 0xc4
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8d
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb3
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x91
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x96
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xca
          .byte 0xee
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xa9
          .byte 0xf9
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x91
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3e
          .byte 0x13
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0xbe
          .byte 0x18
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x31
          .byte 0xf8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448ce0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448e60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_448ef0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
.L_448ef8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0xc0
.L_448f00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x40
.L_448f08:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3f
.L_448f10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x40
.L_448f18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x40
.L_448f20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
.L_448f28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3f
.L_448f30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xc0
.L_448f38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x40
.L_448f40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x40
.L_448f48:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
.L_448f50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_448f58:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0xbf
.L_448f60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_448f68:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_448f70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
.L_448f78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_448f80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
.L_448f88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x3f
.L_448f90:
          .byte 0x1b
          .byte 0xd
          .byte 0xe0
          .byte 0x2d
          .byte 0x90
          .byte 0xa0
          .byte 0xe6
          .byte 0xbf
.L_448f98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x3e
.L_448fa0:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
.L_448fa8:
          .byte 0xe1
          .byte 0x57
          .byte 0x66
          .byte 0xd1
          .byte 0xb7
          .byte 0xe5
          .byte 0x96
          .byte 0x3f
.L_448fb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_448fb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
.L_448fc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xcd
          .byte 0x40
.L_448fc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x40
.L_448fd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
.L_448fd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3c
.L_448fe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x3d
.L_448fe8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3b
.L_448ff0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xef
          .byte 0x3e
.L_448ff8:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
.L_449000:
          .string " +inv +step +init="
.L_449013:
          .string "%d.%d.%d"
.L_44901c:
          .string ";"
.L_44901e:
          .string "tproj"
.L_449024:
          .byte 0x3a
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x61
.L_44902b:
          .string "ta"
.L_44902e:
          .string "tversion"
.L_449037:
          .string "sversion"
.L_449040:
          .string "torigin"
.L_449048:
          .string "sorigin"
.L_449050:
          .string "tlastupdate"
.L_44905c:
          .string "slastupdate"
.L_449068:
          .byte 0xf1
          .byte 0x68
          .byte 0xe3
          .byte 0x88
          .byte 0xb5
          .byte 0xf8
          .byte 0xe4
          .byte 0x3e
.L_449070:
          .byte 0x2b
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x6a
          .byte 0x3d
          .byte 0x70
          .byte 0x69
          .byte 0x70
          .byte 0x65
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x20
          .byte 0x2b
.L_449080:
          .string "Geodetic/cartesian conversions"
          .zero 1
.L_4490a0:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0xb0
          .byte 0x3e
.L_4490a8:
          .string "In[%2.2d]: %20.15g %20.15g %20.15g - %.4f %.4f"
          .zero 1
.L_4490d8:
          .string "Out[ ]: %20.15g %20.15g %20.15g"
.L_4490f8:
          .string "In[%2.2d]: %20.15g %20.15g %20.15g - %20.20s"
          .zero 3
.L_449128:
          .string "Pipeline: +step before +proj=pipeline"
          .zero 2
.L_449150:
          .string "Pipeline: Building arg list for step no. %d"
          .zero 4
.L_449180:
          .string "Pipeline: Bad step definition: %s"
          .zero 6
.L_4491a8:
          .string "Pipeline: Units - left: [%s], right: [%s]\n"
          .zero 5
.L_4491d8:
          .string "Pipeline: %d steps built. Determining i/o characteristics"
.L_449212:
          .string "angular"
.L_44921a:
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x61
.L_44921f:
          .string "r"
.L_449221:
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x0
.L_449226:
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x6a
          .byte 0x3d
.L_44922b:
          .string "pipeline"
.L_449234:
          .string "Pipeline: Nesting invalid"
.L_44924e:
          .byte 0x6f
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x5f
.L_449253:
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x0
.L_449257:
          .string "omit_fwd"
.L_449260:
          .string "Pipeline: init - %s, %d"
.L_449278:
          .byte 0x20
          .byte 0x20
          .byte 0x20
          .byte 0x20
.L_44927c:
          .string "%s"
.L_44927f:
          .string "Pipeline: Step %d at %p"
.L_449297:
          .string "Pipeline:    step done"
.L_4492ae:
          .string "Pipeline: No forward steps"
.L_4492c9:
          .string "Pipeline: No reverse steps"
          .zero 28
.L_449300:
          .string "Transformation pipeline manager"
.L_449320:
          .string "Horner: Out of core"
.L_449334:
          .string "t%s"
.L_449338:
          .string "s%s"
.L_44933c:
          .string "tdeg"
.L_449341:
          .string "ideg"
.L_449346:
          .byte 0x74
.L_449347:
          .string "fwd_c"
.L_44934d:
          .byte 0x74
.L_44934e:
          .string "inv_c"
.L_449354:
          .string "fwd_v"
.L_44935a:
          .string "inv_u"
.L_449360:
          .string "inv_v"
.L_449366:
          .string "fwd_origin"
.L_449371:
          .string "inv_origin"
.L_44937c:
          .string "range"
.L_449382:
          .string "fwd_u"
.L_449388:
          .string "Horner: Malformed polynomium set %s. need %d coefs"
          .zero 5
.L_4493c0:
          .string "Horner: Must specify polynomial degree, (+deg=n)"
          .zero 15
.L_449400:
          .string "Horner polynomial evaluation"
          .zero 3
.L_449420:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x1e
          .byte 0x41
.L_449428:
          .string "Transformation parameters for observation epoch %g:"
          .zero 4
.L_449460:
          .string "x=  % 3.5f  y=  % 3.5f  z=  % 3.5f"
          .zero 5
.L_449488:
          .string "rx= % 3.5f  ry= % 3.5f  rz= % 3.5f"
          .zero 5
.L_4494b0:
          .string "s=% 3.5f  approximate=% d  transpose=% d"
          .zero 7
.L_4494e0:
          .string "dx= % 3.5f  dy= % 3.5f  dz= % 3.5f"
          .zero 5
.L_449508:
          .string "drx=% 3.5f  dry=% 3.5f  drz=% 3.5f"
          .zero 5
.L_449530:
          .string "ds=% 3.5f  epoch=% 5.5f  tobs=% 5.5f"
.L_449555:
          .string "s: %g"
.L_44955b:
          .byte 0x72
.L_44955c:
          .string "x: %g"
.L_449562:
          .byte 0x72
.L_449563:
          .string "y: %g"
.L_449569:
          .byte 0x72
.L_44956a:
          .string "z: %g"
.L_449570:
          .string "theta: %g"
.L_44957a:
          .string "Rotation Matrix:"
.L_44958b:
          .string "  | % 6.6g  % 6.6g  % 6.6g |"
.L_4495a8:
          .string "ty"
.L_4495ab:
          .string "tz"
.L_4495ae:
          .string "trx"
.L_4495b2:
          .string "try"
.L_4495b6:
          .string "trz"
.L_4495ba:
          .string "ttheta"
.L_4495c1:
          .string "tdx"
.L_4495c5:
          .byte 0x64
.L_4495c6:
          .string "dx"
.L_4495c9:
          .string "tdy"
.L_4495cd:
          .byte 0x64
.L_4495ce:
          .string "dy"
.L_4495d1:
          .string "tdz"
.L_4495d5:
          .byte 0x64
.L_4495d6:
          .string "dz"
.L_4495d9:
          .string "tdrx"
.L_4495de:
          .byte 0x64
.L_4495df:
          .string "drx"
.L_4495e3:
          .string "tdry"
.L_4495e8:
          .byte 0x64
.L_4495e9:
          .string "dry"
.L_4495ed:
          .string "tdrz"
.L_4495f2:
          .byte 0x64
.L_4495f3:
          .string "drz"
.L_4495f7:
          .string "tdtheta"
.L_4495ff:
          .byte 0x64
.L_449600:
          .string "dtheta"
.L_449607:
          .string "tds"
.L_44960b:
          .byte 0x64
.L_44960c:
          .string "ds"
.L_44960f:
          .string "tepoch"
.L_449616:
          .string "depoch"
.L_44961d:
          .string "ttobs"
.L_449623:
          .string "dtobs"
.L_449629:
          .string "bapprox"
.L_449631:
          .string "ttranspose"
.L_44963c:
          .string "Helmert parameters:"
          .zero 16
.L_449660:
          .string "3(6)-, 4(8)- and 7(14)-parameter Helmert shift"
.L_44968f:
          .string "sgrids"
.L_449696:
          .string "tgrids"
          .zero 3
.L_4496a0:
          .string "vgridshift: +grids parameter missing."
          .zero 2
.L_4496c8:
          .string "vgridshift: could not find required grid(s)."
          .zero 11
.L_449700:
          .string "Vertical grid shift"
          .zero 4
.L_449718:
          .string "hgridshift: +grids parameter missing."
          .zero 2
.L_449740:
          .string "hgridshift: could not find required grid(s)."
          .zero 3
.L_449770:
          .string "Horizontal grid shift"
.L_449786:
          .string "sxy_in"
.L_44978d:
          .string "sxy_out"
.L_449795:
          .string "sz_in"
.L_44979b:
          .string "sz_out"
.L_4497a2:
          .string "st_in"
.L_4497a8:
          .string "st_out"
.L_4497af:
          .string "xy_in unit: %s"
.L_4497be:
          .string "xy_out unit: %s"
.L_4497ce:
          .string "z_in unit: %s"
.L_4497dc:
          .string "z_out unit: %s"
.L_4497eb:
          .string "t_in unit: %s"
.L_4497f9:
          .string "t_out unit: %s"
.L_449808:
          .string "mjd"
.L_44980c:
          .byte 0x4d
          .byte 0x6f
          .byte 0x64
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x6a
          .byte 0x75
          .byte 0x6c
          .byte 0x69
          .byte 0x61
          .byte 0x6e
          .byte 0x20
          .byte 0x64
          .byte 0x61
.L_44981e:
          .string "te"
.L_449821:
          .string "decimalyear"
.L_44982d:
          .string "Decimal year"
.L_44983a:
          .string "gps_week"
.L_449843:
          .string "GPS Week"
          .zero 4
.L_449850:
          .string "Unit conversion"
.L_449860:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_449868:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x76
          .byte 0x40
.L_449870:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x76
          .byte 0x40
.L_449878:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x9d
          .byte 0x40
.L_449880:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x40
.L_449888:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
.L_449890:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x9a
          .byte 0xe5
          .byte 0x40
.L_449898:
          .string "tda"
.L_44989c:
          .byte 0x64
.L_44989d:
          .string "da"
.L_4498a0:
          .string "tdf"
.L_4498a4:
          .byte 0x64
.L_4498a5:
          .string "df"
.L_4498a8:
          .string "tabridged"
          .zero 14
.L_4498c0:
          .string "Molodensky transform"
          .zero 3
.L_4498d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4498f0:
          .zero 8
.L_4498f8:
          .zero 8
.L_449900:
          .zero 8
.L_449908:
          .zero 8
.L_449910:
          .zero 8
.L_449918:
          .zero 8
.L_449920:
          .zero 16
.L_449930:
          .zero 16
.L_449940:
          .string "bguam"
          .zero 26
.L_449960:
          .string "Azimuthal Equidistant\n\tAzi, Sph&Ell\n\tlat_0 guam"
.L_449990:
          .byte 0x9b
          .byte 0x2b
          .byte 0xa1
          .byte 0x86
          .byte 0x9b
          .byte 0x84
          .byte 0x6
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4499a0:
          .string "Gnomonic\n\tAzi, Sph."
          .zero 4
.L_4499b8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0xbd
.L_4499c0:
          .string "Lambert Azimuthal Equal Area\n\tAzi, Sph&Ell"
          .zero 21
.L_449a00:
          .string "Mod. Stereographic of 50 U.S.\n\tAzi(mod)"
          .zero 24
.L_449a40:
          .string "Mod. Stereographic of Alaska\n\tAzi(mod)"
          .zero 25
.L_449a80:
          .string "Mod. Stereographic of 48 U.S.\n\tAzi(mod)"
          .zero 24
.L_449ac0:
          .string "Lee Oblated Stereographic\n\tAzi(mod)"
          .zero 28
.L_449b00:
          .string "Miller Oblated Stereographic\n\tAzi(mod)"
          .zero 1
.L_449b28:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0x3f
.L_449b30:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xd4
          .byte 0x3f
.L_449b38:
          .byte 0xab
          .byte 0x7e
          .byte 0x3e
          .byte 0xd
          .byte 0xd1
          .byte 0x9
          .byte 0x7
          .byte 0xc0
.L_449b40:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xc6
          .byte 0xbf
.L_449b48:
          .byte 0xd6
          .byte 0xeb
          .byte 0x7b
          .byte 0xf3
          .byte 0xe9
          .byte 0xce
          .byte 0xfa
          .byte 0xbf
.L_449b50:
          .byte 0x9d
          .byte 0xaf
          .byte 0xd4
          .byte 0x15
          .byte 0x1e
          .byte 0xc8
          .byte 0xe5
          .byte 0x3f
.L_449b58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xad
          .byte 0x4d
          .byte 0x58
          .byte 0x41
.L_449b60:
          .byte 0xb4
          .byte 0x1a
          .byte 0xc2
          .byte 0xe0
          .byte 0x23
          .byte 0x39
          .byte 0x5
          .byte 0xc0
.L_449b68:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xf1
          .byte 0x3f
.L_449b70:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb7
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_449b78:
          .byte 0x95
          .byte 0x65
          .byte 0x67
          .byte 0x55
          .byte 0x74
          .byte 0xb9
          .byte 0x7b
          .byte 0x3f
.L_449b80:
          .byte 0x25
          .byte 0x5b
          .byte 0x8b
          .byte 0xdf
          .byte 0xc4
          .byte 0xf
          .byte 0xb5
          .byte 0x3f
.L_449b88:
          .byte 0x65
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x0
          .byte 0xc0
.L_449b90:
          .string "dh"
.L_449b93:
          .string "dtilt"
.L_449b99:
          .string "dazi"
          .zero 2
.L_449ba0:
          .string "Tilted perspective\n\tAzi, Sph\n\ttilt= azi= h="
          .zero 20
.L_449be0:
          .string "Near-sided perspective\n\tAzi, Sph\n\th="
          .zero 27
.L_449c20:
          .string "New Zealand Map Grid\n\tfixed Earth"
          .zero 6
.L_449c48:
          .byte 0xb2
          .byte 0xc3
          .byte 0x9b
          .byte 0xa0
          .byte 0x4d
          .byte 0x80
          .byte 0x0
          .byte 0x40
.L_449c50:
          .byte 0x83
          .byte 0x34
          .byte 0x41
          .byte 0xf6
          .byte 0x2f
          .byte 0x7
          .byte 0xdf
          .byte 0x3f
.L_449c58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_449c60:
          .byte 0x37
          .byte 0x5
          .byte 0xec
          .byte 0x66
          .byte 0xe6
          .byte 0xa
          .byte 0x85
          .byte 0x3e
.L_449c68:
          .byte 0x7f
          .byte 0xa8
          .byte 0x63
          .byte 0x77
          .byte 0xc5
          .byte 0x27
          .byte 0x8
          .byte 0x40
.L_449c70:
          .byte 0x71
          .byte 0xd9
          .byte 0xf9
          .byte 0x7f
          .byte 0x12
          .byte 0xe6
          .byte 0xe6
          .byte 0xbf
.L_449c78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x26
          .byte 0x43
          .byte 0x41
.L_449c80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xfb
          .byte 0xf9
          .byte 0x56
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449c90:
          .string "Orthographic\n\tAzi, Sph."
.L_449ca8:
          .string "tlat_ts"
.L_449cb0:
          .byte 0x72
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
.L_449cb5:
          .string "ts"
.L_449cb8:
          .string "bsouth"
          .zero 1
.L_449cc0:
          .string "Universal Polar Stereographic\n\tAzi, Sph&Ell\n\tsouth"
          .zero 13
.L_449d00:
          .string "Stereographic\n\tAzi, Sph&Ell\n\tlat_ts="
          .zero 3
.L_449d28:
          .byte 0x3a
          .byte 0x8c
          .byte 0x30
          .byte 0xe2
          .byte 0x8e
          .byte 0x79
          .byte 0x45
          .byte 0x3e
.L_449d30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xbf
.L_449d38:
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0x16
          .byte 0xd9
          .byte 0xce
          .byte 0xef
          .byte 0x3f
.L_449d40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x3e
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449d60:
          .string "Oblique Stereographic Alternative\n\tAzimuthal, Sph&Ell"
.L_449d96:
          .string "rlat_1"
.L_449d9d:
          .string "rlat_2"
          .zero 28
.L_449dc0:
          .string "Lambert Equal Area Conic\n\tConic, Sph&Ell\n\tlat_1= south"
          .zero 9
.L_449e00:
          .string "Albers Equal Area\n\tConic Sph&Ell\n\tlat_1= lat_2="
.L_449e30:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_449e38:
          .string "bns"
          .zero 4
.L_449e40:
          .string "Bipolar conic of western hemisphere\n\tConic Sph."
.L_449e70:
          .byte 0x90
          .byte 0x3e
          .byte 0xca
          .byte 0xe0
          .byte 0x3e
          .byte 0x50
          .byte 0xf3
          .byte 0x3f
.L_449e78:
          .byte 0x90
          .byte 0x3e
          .byte 0xca
          .byte 0xe0
          .byte 0x3e
          .byte 0x50
          .byte 0xf3
          .byte 0xbf
.L_449e80:
          .byte 0x7d
          .byte 0xeb
          .byte 0x1f
          .byte 0x86
          .byte 0xc5
          .byte 0x20
          .byte 0xea
          .byte 0x3f
.L_449e88:
          .byte 0x39
          .byte 0x5b
          .byte 0xab
          .byte 0xf3
          .byte 0x71
          .byte 0x29
          .byte 0xfd
          .byte 0x3f
.L_449e90:
          .byte 0xd1
          .byte 0x52
          .byte 0xd9
          .byte 0x74
          .byte 0xde
          .byte 0xbb
          .byte 0xf4
          .byte 0x3f
.L_449e98:
          .byte 0xa3
          .byte 0xa9
          .byte 0xa7
          .byte 0x92
          .byte 0xcd
          .byte 0x74
          .byte 0xef
          .byte 0x3f
.L_449ea0:
          .byte 0xbc
          .byte 0xb6
          .byte 0x95
          .byte 0x67
          .byte 0x31
          .byte 0x55
          .byte 0xd6
          .byte 0xbf
.L_449ea8:
          .byte 0xcd
          .byte 0x3b
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_449eb0:
          .byte 0x3a
          .byte 0xfe
          .byte 0xfd
          .byte 0x66
          .byte 0xc1
          .byte 0xb7
          .byte 0xfe
          .byte 0x3f
.L_449eb8:
          .byte 0x1c
          .byte 0x2d
          .byte 0x52
          .byte 0x42
          .byte 0xf6
          .byte 0x11
          .byte 0xee
          .byte 0x3f
.L_449ec0:
          .byte 0xf5
          .byte 0xb
          .byte 0x8a
          .byte 0x74
          .byte 0xa8
          .byte 0xe3
          .byte 0xd5
          .byte 0xbf
.L_449ec8:
          .byte 0x30
          .byte 0xb8
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_449ed0:
          .byte 0x6a
          .byte 0xc0
          .byte 0x7b
          .byte 0xe9
          .byte 0x88
          .byte 0x2d
          .byte 0xe4
          .byte 0x3f
.L_449ed8:
          .byte 0x7d
          .byte 0x3f
          .byte 0xc6
          .byte 0xc7
          .byte 0xd2
          .byte 0xa
          .byte 0xfd
          .byte 0x3f
.L_449ee0:
          .byte 0x10
          .byte 0x15
          .byte 0xdb
          .byte 0x1d
          .byte 0x20
          .byte 0x5b
          .byte 0xfe
          .byte 0x3f
.L_449ee8:
          .byte 0xb7
          .byte 0x9b
          .byte 0x9d
          .byte 0x14
          .byte 0x5
          .byte 0x5c
          .byte 0xf4
          .byte 0x3f
.L_449ef0:
          .byte 0xad
          .byte 0xe
          .byte 0x53
          .byte 0x2b
          .byte 0x21
          .byte 0x4d
          .byte 0xe6
          .byte 0x3f
.L_449ef8:
          .byte 0xb3
          .byte 0x4a
          .byte 0xbc
          .byte 0xec
          .byte 0xeb
          .byte 0xf2
          .byte 0xe6
          .byte 0x3f
.L_449f00:
          .byte 0xf5
          .byte 0xb
          .byte 0x8a
          .byte 0x74
          .byte 0xa8
          .byte 0xe3
          .byte 0xd5
          .byte 0x3f
.L_449f08:
          .byte 0xab
          .byte 0x6f
          .byte 0x1a
          .byte 0x48
          .byte 0xd4
          .byte 0x5f
          .byte 0xf9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449f20:
          .string "Bonne (Werner lat_1=90)\n\tConic Sph&Ell\n\tlat_1="
          .zero 17
.L_449f60:
          .string "Equidistant Conic\n\tConic, Sph&Ell\n\tlat_1= lat_2="
          .zero 7
.L_449f98:
          .string "impossible transform: %f %f is not on any triangle\n"
          .zero 20
.L_449fe0:
          .long .L_4246e0-.L_449fe0
          .long .L_424780-.L_449fe0
          .long .L_4247b8-.L_449fe0
          .long .L_4246e0-.L_449fe0
          .long .L_4246e0-.L_449fe0
          .long .L_424710-.L_449fe0
          .long .L_4246e0-.L_449fe0
          .long .L_424710-.L_449fe0
          .long .L_424740-.L_449fe0
          .zero 28
.L_44a020:
          .string "Icosahedral Snyder Equal Area\n\tSph"
          .zero 29
.L_44a060:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a0b4:
          .string "sorient"
.L_44a0bc:
          .byte 0x70
          .byte 0x6f
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_44a0c1:
          .string "tazi"
.L_44a0c6:
          .string "razi"
.L_44a0cb:
          .string "tlon_0"
.L_44a0d2:
          .string "tlat_0"
.L_44a0d9:
          .string "taperture"
.L_44a0e3:
          .string "iaperture"
.L_44a0ed:
          .string "tresolution"
.L_44a0f9:
          .string "iresolution"
.L_44a105:
          .byte 0x73
          .byte 0x6d
          .byte 0x6f
.L_44a108:
          .string "de"
.L_44a10b:
          .string "plane"
.L_44a111:
          .byte 0x64
          .byte 0x69
          .byte 0x0
.L_44a114:
          .byte 0x64
          .byte 0x64
          .byte 0x0
.L_44a117:
          .byte 0x68
          .byte 0x65
          .byte 0x78
          .byte 0x0
.L_44a11b:
          .string "trescale"
          .zero 4
.L_44a128:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0xc0
.L_44a130:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x40
.L_44a138:
          .byte 0xaa
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_44a140:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xc0
.L_44a148:
          .byte 0xba
          .byte 0x86
          .byte 0x3c
          .byte 0x58
          .byte 0x9f
          .byte 0xd1
          .byte 0xeb
          .byte 0x3f
.L_44a150:
          .byte 0x2e
          .byte 0xd2
          .byte 0x96
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xc6
          .byte 0x3f
.L_44a158:
          .byte 0x2e
          .byte 0xd2
          .byte 0x96
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xc6
          .byte 0xbf
.L_44a160:
          .byte 0xba
          .byte 0x86
          .byte 0x3c
          .byte 0x58
          .byte 0x9f
          .byte 0xd1
          .byte 0xeb
          .byte 0xbf
.L_44a168:
          .byte 0xf8
          .byte 0x1c
          .byte 0xce
          .byte 0xa9
          .byte 0x28
          .byte 0xe0
          .byte 0xe4
          .byte 0x3f
.L_44a170:
          .byte 0x66
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x0
          .byte 0x40
.L_44a178:
          .byte 0xab
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0x3f
.L_44a180:
          .byte 0x95
          .byte 0xb5
          .byte 0x9d
          .byte 0x91
          .byte 0x21
          .byte 0x72
          .byte 0xe8
          .byte 0x3f
.L_44a188:
          .byte 0xf1
          .byte 0x68
          .byte 0xe3
          .byte 0x88
          .byte 0xb5
          .byte 0xf8
          .byte 0xd4
          .byte 0x3e
.L_44a190:
          .byte 0x5e
          .byte 0x5a
          .byte 0x75
          .byte 0x4
          .byte 0x23
          .byte 0xcf
          .byte 0xe2
          .byte 0x3f
.L_44a198:
          .byte 0x22
          .byte 0x92
          .byte 0x44
          .byte 0x37
          .byte 0xcf
          .byte 0x6d
          .byte 0xe9
          .byte 0x3f
.L_44a1a0:
          .byte 0xa8
          .byte 0xf4
          .byte 0x97
          .byte 0x9b
          .byte 0x77
          .byte 0xe3
          .byte 0xe9
          .byte 0x3f
.L_44a1a8:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
.L_44a1b0:
          .byte 0x9d
          .byte 0x8c
          .byte 0x64
          .byte 0x3f
          .byte 0x9c
          .byte 0xf4
          .byte 0xde
          .byte 0x3f
.L_44a1b8:
          .byte 0xde
          .byte 0x1c
          .byte 0xa1
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xe6
          .byte 0x3f
.L_44a1c0:
          .byte 0x2f
          .byte 0x3
          .byte 0xa0
          .byte 0x1e
          .byte 0xdc
          .byte 0x21
          .byte 0xfd
          .byte 0x3f
.L_44a1c8:
          .byte 0x53
          .byte 0x35
          .byte 0x71
          .byte 0x56
          .byte 0xb3
          .byte 0x2b
          .byte 0xe5
          .byte 0x3f
.L_44a1d0:
          .byte 0x2f
          .byte 0x3
          .byte 0xa0
          .byte 0x1e
          .byte 0xdc
          .byte 0x21
          .byte 0xed
          .byte 0x3f
.L_44a1d8:
          .byte 0xa3
          .byte 0x46
          .byte 0x1f
          .byte 0x3
          .byte 0xa6
          .byte 0x90
          .byte 0xea
          .byte 0x3f
.L_44a1e0:
          .byte 0x1c
          .byte 0x33
          .byte 0x90
          .byte 0x45
          .byte 0xa7
          .byte 0x79
          .byte 0xd2
          .byte 0x3f
.L_44a1e8:
          .byte 0x8d
          .byte 0xe
          .byte 0xd0
          .byte 0x8a
          .byte 0x8a
          .byte 0x46
          .byte 0xf0
          .byte 0x3f
.L_44a1f0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xc9
          .byte 0x3f
.L_44a1f8:
          .string "tlat_1"
.L_44a1ff:
          .string "tlat_2"
.L_44a206:
          .string "tlon_1"
.L_44a20d:
          .string "rlon_1"
          .zero 12
.L_44a220:
          .string "International Map of the World Polyconic\n\tMod. Polyconic, Ell\n\tlat_1= and lat_2= [lon_1=]"
          .zero 6
.L_44a280:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xa1
          .byte 0x3f
.L_44a288:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xb1
          .byte 0x3f
.L_44a290:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xc1
          .byte 0x3f
.L_44a298:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x40
.L_44a2a0:
          .string "tczech"
          .zero 9
.L_44a2b0:
          .string "Krovak\n\tPCyl., Ellps."
          .zero 2
.L_44a2c8:
          .byte 0x15
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_44a2d0:
          .byte 0x6e
          .byte 0xe8
          .byte 0x5f
          .byte 0x2e
          .byte 0xad
          .byte 0xdc
          .byte 0x23
          .byte 0x40
.L_44a2d8:
          .byte 0x12
          .byte 0x72
          .byte 0xdc
          .byte 0xd
          .byte 0x8b
          .byte 0x5b
          .byte 0xef
          .byte 0x3f
.L_44a2e0:
          .byte 0x1f
          .byte 0x85
          .byte 0xeb
          .byte 0x49
          .byte 0xed
          .byte 0x53
          .byte 0x58
          .byte 0x41
.L_44a2e8:
          .byte 0x32
          .byte 0xa5
          .byte 0x3a
          .byte 0x27
          .byte 0x96
          .byte 0x56
          .byte 0x7b
          .byte 0x3f
.L_44a2f0:
          .byte 0x88
          .byte 0xa0
          .byte 0x41
          .byte 0x62
          .byte 0x15
          .byte 0xea
          .byte 0xb4
          .byte 0x3f
.L_44a2f8:
          .byte 0x33
          .byte 0xcb
          .byte 0x17
          .byte 0x43
          .byte 0x61
          .byte 0xa5
          .byte 0xeb
          .byte 0x3f
.L_44a300:
          .byte 0xaf
          .byte 0x8e
          .byte 0x45
          .byte 0xa1
          .byte 0x35
          .byte 0xbd
          .byte 0xdb
          .byte 0x3f
.L_44a308:
          .byte 0x1e
          .byte 0xa7
          .byte 0xe8
          .byte 0x48
          .byte 0x2e
          .byte 0xff
          .byte 0xef
          .byte 0x3f
.L_44a310:
          .byte 0x28
          .byte 0x9f
          .byte 0xbc
          .byte 0xec
          .byte 0x1e
          .byte 0xa9
          .byte 0x13
          .byte 0x40
.L_44a318:
          .byte 0x8a
          .byte 0x9c
          .byte 0x39
          .byte 0xc5
          .byte 0x84
          .byte 0xea
          .byte 0xe0
          .byte 0x3f
.L_44a320:
          .string "Lambert Conformal Conic\n\tConic, Sph&Ell\n\tlat_1= and lat_2= or lat_0"
          .zero 28
.L_44a380:
          .string "Polyconic (American)\n\tConic, Sph&Ell"
          .zero 27
.L_44a3c0:
          .string "Rectangular Polyconic\n\tConic, Sph., no inv.\n\tlat_ts="
          .zero 3
.L_44a3f8:
          .byte 0x95
          .byte 0xd6
          .byte 0x26
          .byte 0xe8
          .byte 0xb
          .byte 0x2e
          .byte 0x11
          .byte 0x3e
.L_44a400:
          .long .L_427ec0-.L_44a400
          .long .L_427f30-.L_44a400
          .long .L_427fa0-.L_44a400
          .long .L_428030-.L_44a400
          .long .L_4280e8-.L_44a400
          .long .L_427e20-.L_44a400
          .long .L_427d78-.L_44a400
          .zero 4
.L_44a420:
          .string "Vitkovsky I\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 21
.L_44a460:
          .string "Tissot\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 26
.L_44a4a0:
          .string "Perspective Conic\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 15
.L_44a4e0:
          .string "Murdoch III\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 21
.L_44a520:
          .string "Murdoch II\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 22
.L_44a560:
          .string "Murdoch I\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 23
.L_44a5a0:
          .string "Euler\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 27
.L_44a5e0:
          .string "Roussilhe Stereographic\n\tAzi., Ellps."
          .zero 2
.L_44a608:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x40
.L_44a610:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x40
.L_44a618:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x40
.L_44a620:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x40
.L_44a628:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x40
.L_44a630:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x40
.L_44a638:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x40
.L_44a640:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x40
.L_44a648:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x40
.L_44a650:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x40
.L_44a658:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x40
.L_44a660:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
.L_44a668:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x40
.L_44a670:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x40
.L_44a678:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x40
.L_44a680:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x40
.L_44a688:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x40
.L_44a690:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x40
.L_44a698:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x40
.L_44a6a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a6b0:
          .string "Cassini\n\tCyl, Sph&Ell"
          .zero 2
.L_44a6c8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xa5
          .byte 0x3f
.L_44a6d0:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x81
          .byte 0x3f
.L_44a6d8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xc5
          .byte 0x3f
.L_44a6e0:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xb1
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a6f0:
          .string "Central Cylindrical\n\tCyl, Sph"
          .zero 18
.L_44a720:
          .string "Equal Area Cylindrical\n\tCyl, Sph&Ell\n\tlat_ts="
          .zero 18
.L_44a760:
          .string "Equidistant Cylindrical (Plate Caree)\n\tCyl, Sph\n\tlat_ts=[, lat_0=0]"
          .zero 28
.L_44a7c0:
          .string "Gall (Gall Stereographic)\n\tCyl, Sph"
          .zero 4
.L_44a7e8:
          .byte 0xe6
          .byte 0x9d
          .byte 0x3f
          .byte 0x33
          .byte 0x4f
          .byte 0x50
          .byte 0xfb
          .byte 0x3f
.L_44a7f0:
          .byte 0x67
          .byte 0x88
          .byte 0x1
          .byte 0x33
          .byte 0xc3
          .byte 0xbe
          .byte 0xe2
          .byte 0x3f
.L_44a7f8:
          .byte 0xcd
          .byte 0x3b
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xf6
          .byte 0x3f
.L_44a800:
          .string "bno_rot"
          .zero 24
.L_44a820:
          .string "Laborde\n\tCyl, Sph\n\tSpecial for Madagascar"
          .zero 6
.L_44a850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x40
.L_44a858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0xc0
.L_44a860:
          .byte 0x69
.L_44a861:
          .string "lsat"
.L_44a866:
          .string "ipath"
          .zero 20
.L_44a880:
          .string "Space oblique for LANDSAT\n\tCyl, Sph&Ell\n\tlsat= path="
          .zero 3
.L_44a8b8:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x12
          .byte 0x40
.L_44a8c0:
          .byte 0xb5
          .byte 0xcd
          .byte 0x31
          .byte 0x7c
          .byte 0x96
          .byte 0x2
          .byte 0x4d
          .byte 0xc3
.L_44a8c8:
          .byte 0xb5
          .byte 0xcd
          .byte 0x31
          .byte 0x7c
          .byte 0x96
          .byte 0x2
          .byte 0x4d
          .byte 0x43
.L_44a8d0:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0x1f
          .byte 0x40
.L_44a8d8:
          .byte 0x49
          .byte 0x40
          .byte 0xdd
          .byte 0x36
          .byte 0xaa
          .byte 0x41
          .byte 0xc2
          .byte 0xbf
.L_44a8e0:
          .byte 0x59
          .byte 0x6d
          .byte 0xc3
          .byte 0x33
          .byte 0x3f
          .byte 0xac
          .byte 0xef
          .byte 0x3f
.L_44a8e8:
          .byte 0x7e
          .byte 0x43
          .byte 0xa2
          .byte 0x80
          .byte 0x53
          .byte 0x94
          .byte 0xb1
          .byte 0x3f
.L_44a8f0:
          .byte 0x44
          .byte 0xfe
          .byte 0x8b
          .byte 0x7c
          .byte 0x1
          .byte 0x3a
          .byte 0xc4
          .byte 0xbf
.L_44a8f8:
          .byte 0xb6
          .byte 0x99
          .byte 0x85
          .byte 0x21
          .byte 0x13
          .byte 0x99
          .byte 0xef
          .byte 0x3f
.L_44a900:
          .byte 0x77
          .byte 0x4f
          .byte 0xe8
          .byte 0xf6
          .byte 0xca
          .byte 0x5b
          .byte 0xb2
          .byte 0x3f
.L_44a908:
          .byte 0xbb
          .byte 0x53
          .byte 0xa1
          .byte 0x12
          .byte 0x26
          .byte 0xa2
          .byte 0x99
          .byte 0x3f
.L_44a910:
          .byte 0xd
          .byte 0xdb
          .byte 0x39
          .byte 0x9d
          .byte 0x5f
          .byte 0xfe
          .byte 0x1
          .byte 0x40
.L_44a918:
          .byte 0x13
          .byte 0x6f
          .byte 0x88
          .byte 0x88
          .byte 0x18
          .byte 0x9d
          .byte 0x9b
          .byte 0x3f
.L_44a920:
          .byte 0x39
          .byte 0xa7
          .byte 0xf8
          .byte 0x59
          .byte 0xbe
          .byte 0xd
          .byte 0x2
          .byte 0x40
.L_44a928:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_44a930:
          .byte 0x23
          .byte 0x16
          .byte 0xec
          .byte 0x9f
          .byte 0x6a
          .byte 0x25
          .byte 0xfa
          .byte 0x3f
.L_44a938:
          .byte 0xa1
          .byte 0x32
          .byte 0x3f
          .byte 0xfc
          .byte 0x55
          .byte 0xab
          .byte 0x1f
          .byte 0x40
.L_44a940:
          .string "Space oblique for MISR\n\tCyl, Sph&Ell\n\tpath="
          .zero 4
.L_44a970:
          .byte 0xb2
          .byte 0xd0
          .byte 0x33
          .byte 0x98
          .byte 0xf1
          .byte 0xd
          .byte 0x2
          .byte 0x40
.L_44a978:
          .byte 0x61
          .byte 0x9e
          .byte 0xa8
          .byte 0x7f
          .byte 0x23
          .byte 0x94
          .byte 0xb1
          .byte 0x3f
.L_44a980:
          .byte 0xe9
          .byte 0xd1
          .byte 0x8d
          .byte 0xcc
          .byte 0x1d
          .byte 0xaa
          .byte 0xef
          .byte 0x3f
.L_44a988:
          .byte 0xa4
          .byte 0xcd
          .byte 0xe9
          .byte 0x0
          .byte 0x6d
          .byte 0x7c
          .byte 0xc2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a9a0:
          .string "Mercator\n\tCyl, Sph&Ell\n\tlat_ts="
.L_44a9c0:
          .string "Miller Cylindrical\n\tCyl, Sph"
          .zero 3
.L_44a9e0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
.L_44a9e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x3f
.L_44a9f0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xe9
          .byte 0x3f
.L_44a9f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x40
.L_44aa00:
          .string "talpha"
.L_44aa07:
          .string "ralpha"
.L_44aa0e:
          .string "rlonc"
.L_44aa14:
          .string "rlon_2"
          .zero 5
.L_44aa20:
          .string "Oblique Cylindrical Equal Area\n\tCyl, Sphlonc= alpha= or\n\tlat_1= lat_2= lon_1= lon_2="
.L_44aa75:
          .string "tno_rot"
.L_44aa7d:
          .string "tgamma"
.L_44aa84:
          .string "rgamma"
.L_44aa8b:
          .string "tno_off"
.L_44aa93:
          .string "sno_uoff"
.L_44aa9c:
          .string "sno_off"
.L_44aaa4:
          .string "tno_uoff"
          .zero 19
.L_44aac0:
          .string "Oblique Mercator\n\tCyl, Sph&Ell no_rot\n\talpha= [gamma=] [no_off] lonc= or\n\t lon_1= lat_1= lon_2= lat_2="
          .zero 25
.L_44ab40:
          .string "Swiss. Obl. Mercator\n\tCyl, Ell\n\tFor CH1903"
          .zero 21
.L_44ab80:
          .string "Transverse Central Cylindrical\n\tCyl, Sph, no inv."
          .zero 14
.L_44abc0:
          .string "Transverse Cylindrical Equal Area\n\tCyl, Sph"
          .zero 4
.L_44abf0:
          .string "Times\n\tCyl, Sph"
.L_44ac00:
          .byte 0x6d
          .byte 0xca
          .byte 0x15
          .byte 0xde
          .byte 0xe5
          .byte 0x22
          .byte 0xd6
          .byte 0x3f
.L_44ac08:
          .byte 0xda
          .byte 0x3
          .byte 0xad
          .byte 0xc0
          .byte 0x90
          .byte 0xd5
          .byte 0xe7
          .byte 0x3f
.L_44ac10:
          .byte 0xff
          .byte 0xca
          .byte 0x4a
          .byte 0x93
          .byte 0x52
          .byte 0x50
          .byte 0xfb
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ac20:
          .string "Transverse Mercator\n\tCyl, Sph&Ell"
          .zero 6
.L_44ac48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x40
.L_44ac50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x40
.L_44ac58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x66
          .byte 0x40
.L_44ac60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7d
          .byte 0x40
.L_44ac68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x40
.L_44ac70:
          .byte 0x18
          .byte 0x86
          .byte 0x61
          .byte 0x18
          .byte 0x86
          .byte 0x61
          .byte 0x98
          .byte 0x3f
.L_44ac78:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xa9
          .byte 0x3f
.L_44ac80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x74
          .byte 0x40
.L_44ac88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x40
.L_44ac90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x80
          .byte 0x40
.L_44ac98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0xa8
          .byte 0x40
.L_44aca0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x95
          .byte 0x40
.L_44aca8:
          .byte 0x92
          .byte 0x24
          .byte 0x49
          .byte 0x92
          .byte 0x24
          .byte 0x49
          .byte 0x92
          .byte 0x3f
.L_44acb0:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xa1
          .byte 0x3f
.L_44acb8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xb5
          .byte 0x3f
.L_44acc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x40
.L_44acc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x40
.L_44acd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x98
          .byte 0x40
.L_44acd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xaf
          .byte 0x40
.L_44ace0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0xac
          .byte 0x40
.L_44ace8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x94
          .byte 0x40
.L_44acf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x84
          .byte 0x40
.L_44acf8:
          .string "bno_cut"
.L_44ad00:
          .string "rlat_b"
          .zero 25
.L_44ad20:
          .string "Airy\n\tMisc Sph, no inv.\n\tno_cut lat_b="
          .zero 9
.L_44ad50:
          .string "Winkel Tripel\n\tMisc Sph\n\tlat_1"
          .zero 1
.L_44ad70:
          .string "Aitoff\n\tMisc Sph"
          .zero 7
.L_44ad88:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xe4
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ada0:
          .string "August Epicycloidal\n\tMisc Sph, no inv."
          .zero 1
.L_44adc8:
          .byte 0x54
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xf5
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ade0:
          .string "Bacon Globular\n\tMisc Sph, no inv."
          .zero 30
.L_44ae20:
          .string "Ortelius Oval\n\tMisc Sph, no inv."
          .zero 31
.L_44ae60:
          .string "Apian Globular I\n\tMisc Sph, no inv."
          .zero 4
.L_44ae88:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x3
          .byte 0x40
.L_44ae90:
          .string "rlat_%d"
.L_44ae98:
          .string "rlon_%d"
.L_44aea0:
          .string "Chamberlin Trimetric\n\tMisc Sph, no inv.\n\tlat_1= lon_1= lat_2= lon_2= lat_3= lon_3="
.L_44aef3:
          .string "tW"
.L_44aef6:
          .string "dW"
.L_44aef9:
          .string "tM"
.L_44aefc:
          .string "dM"
          .zero 1
.L_44af00:
          .string "Hammer & Eckert-Greifendorff\n\tMisc Sph, \n\tW= M="
          .zero 16
.L_44af40:
          .string "Lagrange\n\tMisc Sph, no inv.\n\tW="
.L_44af60:
          .string "Larrivee\n\tMisc Sph, no inv."
          .zero 4
.L_44af80:
          .string "Laskowski\n\tMisc Sph, no inv."
          .zero 3
.L_44afa0:
          .byte 0xca
          .byte 0x67
          .byte 0x1e
          .byte 0x65
          .byte 0x69
          .byte 0x4c
          .byte 0x8d
          .byte 0xbf
.L_44afa8:
          .byte 0x7b
          .byte 0x6a
          .byte 0xf5
          .byte 0xd5
          .byte 0x55
          .byte 0x81
          .byte 0xbe
          .byte 0x3f
.L_44afb0:
          .byte 0xd8
          .byte 0x9f
          .byte 0x1f
          .byte 0xa1
          .byte 0xc1
          .byte 0x1
          .byte 0xac
          .byte 0xbf
.L_44afb8:
          .byte 0xa3
          .byte 0x5a
          .byte 0x44
          .byte 0x14
          .byte 0x93
          .byte 0x37
          .byte 0xef
          .byte 0x3f
.L_44afc0:
          .byte 0xea
          .byte 0x4
          .byte 0x34
          .byte 0x11
          .byte 0x36
          .byte 0x3c
          .byte 0x9d
          .byte 0xbf
.L_44afc8:
          .byte 0x8b
          .byte 0x28
          .byte 0x37
          .byte 0x9b
          .byte 0xd8
          .byte 0x8d
          .byte 0xb4
          .byte 0x3f
.L_44afd0:
          .byte 0x37
          .byte 0xad
          .byte 0x6f
          .byte 0xbb
          .byte 0x2b
          .byte 0x16
          .byte 0x2a
          .byte 0x3f
.L_44afd8:
          .byte 0x8f
          .byte 0xaa
          .byte 0x26
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0xf0
          .byte 0x3f
.L_44afe0:
          .byte 0x5e
          .byte 0x5
          .byte 0x42
          .byte 0xfc
          .byte 0xd
          .byte 0x24
          .byte 0xa9
          .byte 0xbf
.L_44afe8:
          .byte 0x78
          .byte 0x2
          .byte 0xab
          .byte 0x34
          .byte 0x73
          .byte 0x92
          .byte 0xb9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b000:
          .string "Nicolosi Globular\n\tMisc Sph, no inv."
.L_44b025:
          .string "so_proj"
.L_44b02d:
          .string "to_alpha"
.L_44b036:
          .string "ro_lon_c"
.L_44b03f:
          .string "ro_lat_c"
.L_44b048:
          .string "ro_alpha"
.L_44b051:
          .string "to_lat_p"
.L_44b05a:
          .string "ro_lon_p"
.L_44b063:
          .string "ro_lat_p"
.L_44b06c:
          .string "ro_lon_1"
.L_44b075:
          .string "ro_lat_1"
.L_44b07e:
          .string "ro_lon_2"
.L_44b087:
          .string "ro_lat_2"
          .zero 16
.L_44b0a0:
          .string "General Oblique Transformation\n\tMisc Sph\n\to_proj= plus parameters for projection\n\to_lat_p= o_lon_p= (new pole) or\n\to_alpha= o_lon_c= o_lat_c= or\n\to_lon_1= o_lat_1= o_lon_2= o_lat_2="
.L_44b156:
          .string "dn"
.L_44b159:
          .string "rtheta"
.L_44b160:
          .string "Oblated Equal Area\n\tMisc Sph\n\tn= m= theta="
          .zero 21
.L_44b1a0:
          .string "Two Point Equidistant\n\tMisc Sph\n\tlat_1= lon_1= lat_2= lon_2="
          .zero 3
.L_44b1e0:
          .string "van der Grinten (I)\n\tMisc Sph"
          .zero 2
.L_44b200:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_44b208:
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdf
          .byte 0xbf
.L_44b210:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x13
          .byte 0x40
.L_44b218:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x33
          .byte 0x40
.L_44b220:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x23
          .byte 0x40
.L_44b228:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0xbf
.L_44b230:
          .byte 0x68
          .byte 0x2f
          .byte 0xa1
          .byte 0xbd
          .byte 0x84
          .byte 0xf6
          .byte 0xb2
          .byte 0x3f
.L_44b238:
          .byte 0x66
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x10
          .byte 0x40
.L_44b240:
          .string "van der Grinten III\n\tMisc Sph, no inv."
          .zero 25
.L_44b280:
          .string "van der Grinten II\n\tMisc Sph, no inv."
          .zero 26
.L_44b2c0:
          .string "van der Grinten IV\n\tMisc Sph, no inv."
          .zero 10
.L_44b2f0:
          .string "Wagner VII\n\tMisc Sph, no inv."
          .zero 2
.L_44b310:
          .byte 0x67
          .byte 0xd7
          .byte 0x2d
          .byte 0x30
          .byte 0x79
          .byte 0x0
          .byte 0xed
          .byte 0x3f
.L_44b318:
          .byte 0xd8
          .byte 0x47
          .byte 0xa7
          .byte 0xae
          .byte 0x7c
          .byte 0x56
          .byte 0x5
          .byte 0x40
.L_44b320:
          .byte 0x8
          .byte 0x72
          .byte 0x50
          .byte 0xc2
          .byte 0x4c
          .byte 0xdb
          .byte 0xf3
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b340:
          .string "Lambert Conformal Conic Alternative\n\tConic, Sph&Ell\n\tlat_0="
.L_44b37c:
          .string "ssweep"
          .zero 29
.L_44b3a0:
          .string "Geostationary Satellite View\n\tAzi, Sph&Ell\n\th="
.L_44b3cf:
          .string "tzone"
.L_44b3d5:
          .string "izone"
          .zero 5
.L_44b3e0:
          .string "Universal Transverse Mercator (UTM)\n\tCyl, Sph\n\tzone= south"
          .zero 5
.L_44b420:
          .string "Extended Transverse Mercator\n\tCyl, Sph\n\tlat_ts=(0)\nlat_0=(0)"
          .zero 3
.L_44b460:
          .byte 0xc9
          .byte 0xed
          .byte 0x64
          .byte 0x9a
          .byte 0xb6
          .byte 0xfc
          .byte 0x4
          .byte 0x40
.L_44b468:
          .byte 0xcd
          .byte 0xc1
          .byte 0xb
          .byte 0xab
          .byte 0x9f
          .byte 0xe9
          .byte 0x10
          .byte 0xc0
.L_44b470:
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xe2
          .byte 0x3f
.L_44b478:
          .byte 0xf5
          .byte 0x49
          .byte 0x9f
          .byte 0xf4
          .byte 0x49
          .byte 0x9f
          .byte 0x4
          .byte 0x40
.L_44b480:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xe5
          .byte 0x3f
.L_44b488:
          .byte 0x68
          .byte 0x5d
          .byte 0xb4
          .byte 0x23
          .byte 0x19
          .byte 0x70
          .byte 0xef
          .byte 0x3f
.L_44b490:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0xe6
          .byte 0x3f
.L_44b498:
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0xfd
          .byte 0x3f
.L_44b4a0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xf5
          .byte 0x3f
.L_44b4a8:
          .byte 0xa6
          .byte 0xba
          .byte 0xff
          .byte 0x50
          .byte 0x65
          .byte 0xaa
          .byte 0x3
          .byte 0x40
.L_44b4b0:
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0x21
          .byte 0x40
.L_44b4b8:
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0x14
          .byte 0x40
.L_44b4c0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xf9
          .byte 0x3f
.L_44b4c8:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0x2
          .byte 0x40
.L_44b4d0:
          .byte 0x4f
          .byte 0x9c
          .byte 0x6f
          .byte 0xa4
          .byte 0xf1
          .byte 0xc4
          .byte 0xf9
          .byte 0xbf
.L_44b4d8:
          .byte 0x57
          .byte 0x6f
          .byte 0xf5
          .byte 0x56
          .byte 0x6f
          .byte 0xf5
          .byte 0x6
          .byte 0x40
.L_44b4e0:
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xf7
          .byte 0x3f
.L_44b4e8:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xf1
          .byte 0x3f
.L_44b4f0:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xfa
          .byte 0x3f
.L_44b4f8:
          .byte 0x41
          .byte 0x2b
          .byte 0x7b
          .byte 0x24
          .byte 0x64
          .byte 0x9
          .byte 0x3a
          .byte 0x40
.L_44b500:
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0x28
          .byte 0x40
.L_44b508:
          .byte 0x5f
          .byte 0xf1
          .byte 0x15
          .byte 0x5f
          .byte 0xf1
          .byte 0x15
          .byte 0xf
          .byte 0x40
.L_44b510:
          .byte 0xde
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xd
          .byte 0x40
.L_44b518:
          .byte 0xd
          .byte 0x49
          .byte 0xad
          .byte 0x9b
          .byte 0x2c
          .byte 0xe6
          .byte 0x11
          .byte 0xc0
.L_44b520:
          .byte 0x7a
          .byte 0x9e
          .byte 0xe7
          .byte 0x79
          .byte 0x9e
          .byte 0xe7
          .byte 0xf9
          .byte 0x3f
.L_44b528:
          .byte 0xbc
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xfb
          .byte 0x3f
.L_44b530:
          .byte 0xc0
          .byte 0xbe
          .byte 0x2
          .byte 0x98
          .byte 0x41
          .byte 0x30
          .byte 0x3c
          .byte 0xc0
.L_44b538:
          .byte 0x8b
          .byte 0xaf
          .byte 0xf8
          .byte 0x8a
          .byte 0xaf
          .byte 0xf8
          .byte 0x22
          .byte 0x40
.L_44b540:
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0x1b
          .byte 0x40
.L_44b548:
          .byte 0x88
          .byte 0xd1
          .byte 0x12
          .byte 0xd2
          .byte 0x70
          .byte 0x7
          .byte 0xfc
          .byte 0xbf
.L_44b550:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_44b558:
          .byte 0xa7
          .byte 0x76
          .byte 0x6a
          .byte 0xa7
          .byte 0x76
          .byte 0x6a
          .byte 0xff
          .byte 0x3f
.L_44b560:
          .string "*"
          .byte 0x2c
          .byte 0x10
          .byte 0xee
          .byte 0x38
          .byte 0x37
          .byte 0xc0
.L_44b568:
          .byte 0x7
          .byte 0x68
          .byte 0x80
          .byte 0x6
          .byte 0x68
          .byte 0x80
          .byte 0x2a
          .byte 0x40
.L_44b570:
          .byte 0xb3
          .byte 0x26
          .byte 0xb6
          .byte 0xe3
          .byte 0x95
          .byte 0x1d
          .byte 0xc
          .byte 0x40
.L_44b578:
          .byte 0x43
          .byte 0x2a
          .byte 0xa4
          .byte 0x42
          .byte 0x2a
          .byte 0xa4
          .byte 0x2
          .byte 0x40
.L_44b580:
          .byte 0xf9
          .byte 0x69
          .byte 0xa9
          .byte 0x79
          .byte 0xe2
          .byte 0x2
          .byte 0x3b
          .byte 0x40
.L_44b588:
          .byte 0xcf
          .byte 0x84
          .byte 0x31
          .byte 0x33
          .byte 0x27
          .byte 0xcc
          .byte 0x6
          .byte 0x40
.L_44b590:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3f
.L_44b598:
          .byte 0x27
          .byte 0xfc
          .byte 0x4a
          .byte 0x38
          .byte 0xd
          .byte 0x5c
          .byte 0xc4
          .byte 0xbf
.L_44b5a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc4
          .byte 0x3f
.L_44b5a8:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0x66
          .byte 0x3f
.L_44b5b0:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xd8
          .byte 0x3f
.L_44b5b8:
          .byte 0x22
          .byte 0x45
          .byte 0x74
          .byte 0x66
          .byte 0x89
          .byte 0xb8
          .byte 0xca
          .byte 0x3f
.L_44b5c0:
          .byte 0x8e
          .byte 0xe3
          .byte 0x38
          .byte 0x8e
          .byte 0xe3
          .byte 0x38
          .byte 0xdc
          .byte 0x3f
.L_44b5c8:
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0xcd
          .byte 0x3f
.L_44b5d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3f
.L_44b5d8:
          .byte 0x35
          .byte 0x9e
          .byte 0x38
          .byte 0xdf
          .byte 0x48
          .byte 0x7f
          .byte 0xd2
          .byte 0x3f
.L_44b5e0:
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0xdc
          .byte 0x3f
.L_44b5e8:
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xd3
          .byte 0x3f
.L_44b5f0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x95
          .byte 0x3f
.L_44b5f8:
          .byte 0x3c
          .byte 0x13
          .byte 0x89
          .byte 0xe6
          .byte 0xbd
          .byte 0x65
          .byte 0xf0
          .byte 0xbf
.L_44b600:
          .byte 0xbd
          .byte 0xc8
          .byte 0x8b
          .byte 0xbc
          .byte 0xc8
          .byte 0x8b
          .byte 0xdc
          .byte 0x3f
.L_44b608:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0xd8
          .byte 0x3f
.L_44b610:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xe3
          .byte 0x3f
.L_44b618:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd1
          .byte 0x3f
.L_44b620:
          .byte 0x37
          .byte 0x4c
          .byte 0xfc
          .byte 0x52
          .byte 0x13
          .byte 0x6e
          .byte 0xaf
          .byte 0xbf
.L_44b628:
          .byte 0x2c
          .byte 0xbe
          .byte 0xe2
          .byte 0x2b
          .byte 0xbe
          .byte 0xe2
          .byte 0xa7
          .byte 0x3f
.L_44b630:
          .byte 0xd7
          .byte 0x68
          .byte 0x8d
          .byte 0xd6
          .byte 0x68
          .byte 0x8d
          .byte 0xa6
          .byte 0x3f
.L_44b638:
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0xa2
          .byte 0x3f
.L_44b640:
          .byte 0x4a
          .byte 0x26
          .byte 0x48
          .byte 0xbb
          .byte 0x42
          .byte 0x8f
          .byte 0xed
          .byte 0x3f
.L_44b648:
          .byte 0xe0
          .byte 0x4
          .byte 0x4e
          .byte 0xe0
          .byte 0x4
          .byte 0xee
          .byte 0xe1
          .byte 0x3f
.L_44b650:
          .byte 0xb0
          .byte 0xf8
          .byte 0x8a
          .byte 0xaf
          .byte 0xf8
          .byte 0x8a
          .byte 0xe7
          .byte 0x3f
.L_44b658:
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0xd0
          .byte 0x3f
.L_44b660:
          .byte 0x81
          .byte 0x1b
          .byte 0x13
          .byte 0xe2
          .byte 0x26
          .byte 0x49
          .byte 0xbd
          .byte 0x3f
.L_44b668:
          .byte 0x96
          .byte 0x65
          .byte 0x59
          .byte 0x96
          .byte 0x65
          .byte 0x59
          .byte 0x96
          .byte 0x3f
.L_44b670:
          .byte 0xae
          .byte 0xde
          .byte 0xea
          .byte 0xad
          .byte 0xde
          .byte 0xea
          .byte 0x9b
          .byte 0x3f
.L_44b678:
          .byte 0x42
          .byte 0xf7
          .byte 0x9b
          .byte 0x3c
          .byte 0x9c
          .byte 0x1b
          .byte 0xed
          .byte 0x3f
.L_44b680:
          .byte 0xc3
          .byte 0x30
          .byte 0xc
          .byte 0xc3
          .byte 0x30
          .byte 0xc
          .byte 0xf1
          .byte 0x3f
.L_44b688:
          .byte 0xac
          .byte 0xc4
          .byte 0x4a
          .byte 0xac
          .byte 0xc4
          .byte 0xaa
          .byte 0xd3
          .byte 0x3f
.L_44b690:
          .byte 0x5f
          .byte 0xab
          .byte 0x34
          .byte 0xf0
          .byte 0x43
          .byte 0xec
          .byte 0x9b
          .byte 0x3f
.L_44b698:
          .byte 0x93
          .byte 0x31
          .byte 0x19
          .byte 0x93
          .byte 0x31
          .byte 0x19
          .byte 0x9d
          .byte 0x3f
.L_44b6a0:
          .byte 0x3a
          .byte 0x9c
          .byte 0x59
          .byte 0x9c
          .byte 0x7a
          .byte 0x68
          .byte 0xfb
          .byte 0xbf
.L_44b6a8:
          .byte 0x1
          .byte 0xd
          .byte 0xd0
          .byte 0x0
          .byte 0xd
          .byte 0x90
          .byte 0xdb
          .byte 0x3f
.L_44b6b0:
          .byte 0xc0
          .byte 0x43
          .byte 0x16
          .byte 0xab
          .byte 0xaa
          .byte 0x8d
          .byte 0xa0
          .byte 0xbf
.L_44b6b8:
          .byte 0xac
          .byte 0x2b
          .byte 0xf5
          .byte 0xb3
          .byte 0x3b
          .byte 0x48
          .byte 0xe5
          .byte 0x3f
.L_44b6c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x12
          .byte 0x63
          .byte 0x41
.L_44b6c8:
          .byte 0x78
          .byte 0x9c
          .byte 0xa2
          .byte 0x23
          .byte 0xb9
          .byte 0xfc
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b6e0:
          .string "Boggs Eumorphic\n\tPCyl., no inv., Sph."
          .zero 2
.L_44b708:
          .byte 0x4b
          .byte 0xe5
          .byte 0xed
          .byte 0x8
          .byte 0xa7
          .byte 0x5
          .byte 0x0
          .byte 0x40
.L_44b710:
          .byte 0xbd
          .byte 0x35
          .byte 0xb0
          .byte 0x55
          .byte 0x82
          .byte 0xc5
          .byte 0xf1
          .byte 0x3f
.L_44b718:
          .byte 0x69
          .byte 0x35
          .byte 0x24
          .byte 0xee
          .byte 0xb1
          .byte 0xf4
          .byte 0xdf
          .byte 0x3f
.L_44b720:
          .string "Collignon\n\tPCyl, Sph."
          .zero 2
.L_44b738:
          .byte 0x6b
          .byte 0xef
          .byte 0xb4
          .byte 0x91
          .byte 0xf8
          .byte 0x5b
          .byte 0xfc
          .byte 0x3f
.L_44b740:
          .byte 0x6d
          .byte 0x9b
          .byte 0x42
          .byte 0x50
          .byte 0xd7
          .byte 0xd
          .byte 0xf2
          .byte 0x3f
.L_44b748:
          .byte 0x51
          .byte 0x36
          .byte 0xd4
          .byte 0x33
          .byte 0x45
          .byte 0x88
          .byte 0xf9
          .byte 0x3f
.L_44b750:
          .byte 0x9b
          .byte 0xf2
          .byte 0xd7
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b760:
          .string "Compact Miller\n\tCyl., Sph."
          .zero 5
.L_44b780:
          .byte 0xbd
          .byte 0x1d
          .byte 0xe1
          .byte 0xb4
          .byte 0xe0
          .byte 0x45
          .byte 0x9f
          .byte 0xbf
.L_44b788:
          .byte 0x9c
          .byte 0xa2
          .byte 0x23
          .byte 0xb9
          .byte 0xfc
          .byte 0x87
          .byte 0xc4
          .byte 0x3f
.L_44b790:
          .byte 0x72
          .byte 0xf9
          .byte 0xf
          .byte 0xe9
          .byte 0xb7
          .byte 0xaf
          .byte 0xef
          .byte 0x3f
.L_44b798:
          .byte 0x6
          .byte 0x12
          .byte 0x7
          .byte 0x9b
          .byte 0xb
          .byte 0x29
          .byte 0xfe
          .byte 0x3f
.L_44b7a0:
          .byte 0x6
          .byte 0x12
          .byte 0x7
          .byte 0x9b
          .byte 0xb
          .byte 0x29
          .byte 0xfe
          .byte 0xbf
.L_44b7a8:
          .byte 0x96
          .byte 0xb2
          .byte 0xc
          .byte 0x71
          .byte 0xac
          .byte 0x8b
          .byte 0xc3
          .byte 0xbf
.L_44b7b0:
          .byte 0xea
          .byte 0x73
          .byte 0xb5
          .byte 0x15
          .byte 0xfb
          .byte 0xcb
          .byte 0xde
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b7c0:
          .string "Craster Parabolic (Putnins P4)\n\tPCyl., Sph."
          .zero 4
.L_44b7f0:
          .byte 0x9a
          .byte 0x74
          .byte 0x57
          .byte 0x78
          .byte 0x43
          .byte 0x45
          .byte 0xef
          .byte 0x3f
.L_44b7f8:
          .byte 0x93
          .byte 0x15
          .byte 0x3a
          .byte 0xbd
          .byte 0x51
          .byte 0x8f
          .byte 0x8
          .byte 0x40
.L_44b800:
          .byte 0x11
          .byte 0xa3
          .byte 0x8f
          .byte 0xa5
          .byte 0xd7
          .byte 0xd8
          .byte 0xd4
          .byte 0x3f
.L_44b808:
          .byte 0x62
          .byte 0xe
          .byte 0x7c
          .byte 0xd3
          .byte 0x8b
          .byte 0x5f
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b820:
          .string "Denoyer Semi-Elliptical\n\tPCyl., no inv., Sph."
          .zero 2
.L_44b850:
          .byte 0x4e
          .byte 0x1b
          .byte 0xe8
          .byte 0xb4
          .byte 0x81
          .byte 0x4e
          .byte 0x5b
          .byte 0x3f
.L_44b858:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0xee
          .byte 0x3f
.L_44b860:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x9e
          .byte 0x3f
.L_44b868:
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xec
          .byte 0x3f
.L_44b870:
          .string "Eckert I\n\tPCyl., Sph."
          .zero 2
.L_44b888:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xd4
          .byte 0x3f
.L_44b890:
          .byte 0x5a
          .byte 0xc5
          .byte 0xfa
          .byte 0x52
          .byte 0x6f
          .byte 0x7b
          .byte 0xed
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b8a0:
          .string "Eckert II\n\tPCyl. Sph."
          .zero 2
.L_44b8b8:
          .byte 0x5a
          .byte 0xc5
          .byte 0xfa
          .byte 0x52
          .byte 0x6f
          .byte 0x7b
          .byte 0xdd
          .byte 0x3f
.L_44b8c0:
          .byte 0xbb
          .byte 0x83
          .byte 0x75
          .byte 0xd1
          .byte 0xbd
          .byte 0x27
          .byte 0xf7
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b8d0:
          .string "Kavraisky VII\n\tPCyl, Sph."
          .zero 6
.L_44b8f0:
          .string "Wagner VI\n\tPCyl, Sph."
          .zero 10
.L_44b910:
          .string "Putnins P1\n\tPCyl, Sph."
          .zero 9
.L_44b930:
          .string "Eckert III\n\tPCyl, Sph."
          .zero 1
.L_44b948:
          .byte 0xc0
          .byte 0x99
          .byte 0x5e
          .byte 0x5f
          .byte 0xf3
          .byte 0x5
          .byte 0xdb
          .byte 0x3f
.L_44b950:
          .byte 0xc0
          .byte 0x99
          .byte 0x5e
          .byte 0x5f
          .byte 0xf3
          .byte 0x5
          .byte 0xeb
          .byte 0x3f
.L_44b958:
          .byte 0x20
          .byte 0xc7
          .byte 0x22
          .byte 0x62
          .byte 0x2f
          .byte 0xf0
          .byte 0xd9
          .byte 0x3f
.L_44b960:
          .byte 0x4e
          .byte 0x4b
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_44b968:
          .byte 0x58
          .byte 0x15
          .byte 0x9a
          .byte 0x89
          .byte 0x23
          .byte 0x74
          .byte 0xd3
          .byte 0x3f
.L_44b970:
          .byte 0xe1
          .byte 0xb
          .byte 0x93
          .byte 0xa9
          .byte 0x82
          .byte 0x51
          .byte 0xee
          .byte 0x3f
.L_44b978:
          .byte 0xe1
          .byte 0xb
          .byte 0x93
          .byte 0xa9
          .byte 0x82
          .byte 0x51
          .byte 0xfe
          .byte 0x3f
.L_44b980:
          .string "Eckert IV\n\tPCyl, Sph."
          .zero 2
.L_44b998:
          .byte 0x4f
          .byte 0x67
          .byte 0x52
          .byte 0x83
          .byte 0x58
          .byte 0x39
          .byte 0xf5
          .byte 0x3f
.L_44b9a0:
          .byte 0x4f
          .byte 0x67
          .byte 0x52
          .byte 0x83
          .byte 0x58
          .byte 0x39
          .byte 0xf5
          .byte 0xbf
.L_44b9a8:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0xc
          .byte 0x40
.L_44b9b0:
          .byte 0xdd
          .byte 0xfc
          .byte 0x33
          .byte 0x41
          .byte 0xdc
          .byte 0xee
          .byte 0x80
          .byte 0x3f
.L_44b9b8:
          .byte 0x24
          .byte 0xdc
          .byte 0x1a
          .byte 0xc7
          .byte 0xfe
          .byte 0x68
          .byte 0x96
          .byte 0x3f
.L_44b9c0:
          .byte 0x90
          .byte 0x9f
          .byte 0x8d
          .byte 0x5c
          .byte 0x37
          .byte 0xa5
          .byte 0xec
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b9d0:
          .string "Eckert V\n\tPCyl, Sph."
          .zero 3
.L_44b9e8:
          .byte 0x7f
          .byte 0x37
          .byte 0xeb
          .byte 0xa1
          .byte 0x8d
          .byte 0x39
          .byte 0xdc
          .byte 0x3f
.L_44b9f0:
          .byte 0x7f
          .byte 0x37
          .byte 0xeb
          .byte 0xa1
          .byte 0x8d
          .byte 0x39
          .byte 0xec
          .byte 0x3f
.L_44b9f8:
          .byte 0xca
          .byte 0x3e
          .byte 0xa3
          .byte 0x3f
          .byte 0xdb
          .byte 0x23
          .byte 0xf2
          .byte 0x3f
.L_44ba00:
          .byte 0xca
          .byte 0x3e
          .byte 0xa3
          .byte 0x3f
          .byte 0xdb
          .byte 0x23
          .byte 0x2
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ba10:
          .string "Fahey\n\tPcyl, Sph."
          .zero 6
.L_44ba28:
          .byte 0xe9
          .byte 0x7e
          .byte 0x4e
          .byte 0x41
          .byte 0x7e
          .byte 0x36
          .byte 0xea
          .byte 0x3f
.L_44ba30:
          .byte 0x75
          .byte 0x3f
          .byte 0xa7
          .byte 0x20
          .byte 0x3f
          .byte 0x1b
          .byte 0xfd
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ba40:
          .string "Foucaut Sinusoidal\n\tPCyl., Sph."
.L_44ba60:
          .string "Ginsburg VIII (TsNIIGAiK)\n\tPCyl, Sph., no inv."
          .zero 1
.L_44ba90:
          .byte 0x1
          .byte 0xa5
          .byte 0xa1
          .byte 0x46
          .byte 0x21
          .byte 0xc9
          .byte 0xc4
          .byte 0x3f
.L_44ba98:
          .byte 0xc7
          .byte 0x4f
          .byte 0xcc
          .byte 0x42
          .byte 0x87
          .byte 0x35
          .byte 0x4f
          .byte 0x3f
.L_44baa0:
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0xeb
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bac0:
          .string "Gauss-Schreiber Transverse Mercator (aka Gauss-Laborde Reunion)\n\tCyl, Sph&Ell\n\tlat_0= lon_0= k_0="
.L_44bb22:
          .string "tn"
          .zero 27
.L_44bb40:
          .string "McBryde-Thomas Flat-Polar Sinusoidal\n\tPCyl, Sph."
          .zero 15
.L_44bb80:
          .string "Eckert VI\n\tPCyl, Sph."
          .zero 10
.L_44bba0:
          .string "Sinusoidal (Sanson-Flamsteed)\n\tPCyl, Sph&Ell"
          .zero 19
.L_44bbe0:
          .string "General Sinusoidal Series\n\tPCyl, Sph.\n\tm= n="
          .zero 3
.L_44bc10:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0x4
          .byte 0x40
.L_44bc18:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0xfc
          .byte 0x3f
.L_44bc20:
          .string "Goode Homolosine\n\tPCyl, Sph."
          .zero 3
.L_44bc40:
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x8
          .byte 0xab
          .byte 0x3f
.L_44bc48:
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x8
          .byte 0xab
          .byte 0xbf
.L_44bc50:
          .byte 0x44
          .byte 0x3a
          .byte 0x4a
          .byte 0xe9
          .byte 0xf1
          .byte 0xbf
          .byte 0xe6
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bc60:
          .long .L_43b598-.L_44bc60
          .long .L_43b598-.L_44bc60
          .long .L_43b4c0-.L_44bc60
          .long .L_43b570-.L_44bc60
          .long .L_43b558-.L_44bc60
          .long .L_43b430-.L_44bc60
          .long .L_43b450-.L_44bc60
          .long .L_43b480-.L_44bc60
          .long .L_43b4a0-.L_44bc60
          .long .L_43b430-.L_44bc60
          .long .L_43b450-.L_44bc60
          .long .L_43b480-.L_44bc60
          .long .L_43b4a0-.L_44bc60
          .zero 12
.L_44bca0:
          .string "Interrupted Goode Homolosine\n\tPCyl, Sph."
          .zero 7
.L_44bcd0:
          .byte 0x5b
          .byte 0xda
          .byte 0x9b
          .byte 0xe2
          .byte 0x69
          .byte 0xc0
          .byte 0xe6
          .byte 0x3f
.L_44bcd8:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_44bce0:
          .byte 0x5b
          .byte 0xda
          .byte 0x9b
          .byte 0xe2
          .byte 0x69
          .byte 0xc0
          .byte 0xe6
          .byte 0xbf
.L_44bce8:
          .byte 0xa9
          .byte 0x15
          .byte 0xa1
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_44bcf0:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_44bcf8:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_44bd00:
          .byte 0xb4
          .byte 0x9c
          .byte 0x47
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_44bd08:
          .byte 0x17
          .byte 0x86
          .byte 0xd9
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_44bd10:
          .byte 0xf7
          .byte 0x2
          .byte 0xf5
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_44bd18:
          .byte 0xc7
          .byte 0x4a
          .byte 0xb0
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xc6
          .byte 0xbf
.L_44bd20:
          .byte 0x2d
          .byte 0x94
          .byte 0x26
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xf0
          .byte 0x3f
.L_44bd28:
          .byte 0x50
          .byte 0xc
          .byte 0x4b
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44bd30:
          .byte 0xb4
          .byte 0x9c
          .byte 0x47
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_44bd38:
          .byte 0xeb
          .byte 0xd4
          .byte 0xe3
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0x6
          .byte 0xc0
.L_44bd40:
          .byte 0x39
          .byte 0x57
          .byte 0x93
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xeb
          .byte 0x3f
.L_44bd48:
          .byte 0x19
          .byte 0xd4
          .byte 0xae
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xeb
          .byte 0xbf
.L_44bd50:
          .byte 0x71
          .byte 0x36
          .byte 0x9a
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_44bd58:
          .byte 0xe1
          .byte 0xf4
          .byte 0xa7
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_44bd60:
          .byte 0xa7
          .byte 0xc7
          .byte 0xcb
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_44bd68:
          .byte 0x67
          .byte 0xc1
          .byte 0x2
          .byte 0x4b
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_44bd70:
          .byte 0xbf
          .byte 0x23
          .byte 0xee
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_44bd78:
          .byte 0x4f
          .byte 0x65
          .byte 0xe0
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_44bd80:
          .byte 0x65
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xe0
          .byte 0x3f
.L_44bd88:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0x6
          .byte 0xc0
.L_44bd90:
          .byte 0x65
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xf0
          .byte 0xbf
.L_44bd98:
          .byte 0xf6
          .byte 0x5b
          .byte 0x8a
          .byte 0x41
          .byte 0x35
          .byte 0x8c
          .byte 0x3
          .byte 0x40
.L_44bda0:
          .string "Hatano Asymmetrical Equal Area\n\tPCyl, Sph."
          .zero 5
.L_44bdd0:
          .byte 0xe3
          .byte 0xfc
          .byte 0x4d
          .byte 0x28
          .byte 0x44
          .byte 0x80
          .byte 0x3
          .byte 0x40
.L_44bdd8:
          .byte 0x7f
          .byte 0xd9
          .byte 0x3d
          .byte 0x79
          .byte 0x58
          .byte 0x68
          .byte 0x5
          .byte 0x40
.L_44bde0:
          .byte 0xfa
          .byte 0x61
          .byte 0x84
          .byte 0xf0
          .byte 0x68
          .byte 0xe3
          .byte 0xfe
          .byte 0x3f
.L_44bde8:
          .byte 0x89
          .byte 0x29
          .byte 0x91
          .byte 0x44
          .byte 0x2f
          .byte 0x23
          .byte 0xfc
          .byte 0x3f
.L_44bdf0:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xeb
          .byte 0x3f
.L_44bdf8:
          .byte 0x58
          .byte 0xd0
          .byte 0xab
          .byte 0x55
          .byte 0x48
          .byte 0x41
          .byte 0xda
          .byte 0x3f
.L_44be00:
          .byte 0x20
          .byte 0x1c
          .byte 0x78
          .byte 0x76
          .byte 0xaf
          .byte 0xea
          .byte 0xd7
          .byte 0x3f
.L_44be08:
          .byte 0x65
          .byte 0x5e
          .byte 0xb7
          .byte 0x1
          .byte 0x47
          .byte 0x32
          .byte 0xe2
          .byte 0x3f
.L_44be10:
          .byte 0xb
          .byte 0x7a
          .byte 0x6f
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44be18:
          .byte 0xd3
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xf2
          .byte 0x3f
.L_44be20:
          .byte 0x4e
          .byte 0xb7
          .byte 0x6e
          .byte 0x91
          .byte 0x6a
          .byte 0x93
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44be30:
          .string "Loximuthal\n\tPCyl Sph"
          .zero 27
.L_44be60:
          .string "McBryde-Thomas Flat-Pole Sine (No. 2)\n\tCyl., Sph."
          .zero 6
.L_44be98:
          .byte 0x12
          .byte 0xbd
          .byte 0x8c
          .byte 0x62
          .byte 0xb9
          .byte 0xa5
          .byte 0xf6
          .byte 0x3f
.L_44bea0:
          .byte 0xd6
          .byte 0x8b
          .byte 0xa1
          .byte 0x9c
          .byte 0x68
          .byte 0xd7
          .byte 0xf5
          .byte 0x3f
.L_44bea8:
          .byte 0x73
          .byte 0xba
          .byte 0x2c
          .byte 0x26
          .byte 0x36
          .byte 0x1f
          .byte 0xdd
          .byte 0x3f
.L_44beb0:
          .byte 0x60
          .byte 0xcd
          .byte 0x1
          .byte 0x82
          .byte 0x39
          .byte 0x7a
          .byte 0xcc
          .byte 0x3f
.L_44beb8:
          .byte 0x91
          .byte 0x61
          .byte 0x15
          .byte 0x6f
          .byte 0x64
          .byte 0x1e
          .byte 0xf7
          .byte 0x3f
.L_44bec0:
          .string "McBride-Thomas Flat-Polar Parabolic\n\tCyl., Sph."
.L_44bef0:
          .byte 0xf3
          .byte 0x88
          .byte 0x63
          .byte 0xad
          .byte 0x87
          .byte 0x7b
          .byte 0xee
          .byte 0x3f
.L_44bef8:
          .byte 0x4
          .byte 0x15
          .byte 0x50
          .byte 0x79
          .byte 0x51
          .byte 0xa0
          .byte 0xed
          .byte 0x3f
.L_44bf00:
          .byte 0xe3
          .byte 0xf6
          .byte 0x7c
          .byte 0x23
          .byte 0xa4
          .byte 0x36
          .byte 0xb
          .byte 0x40
.L_44bf08:
          .byte 0x3
          .byte 0x41
          .byte 0xe3
          .byte 0x7e
          .byte 0xe7
          .byte 0xcb
          .byte 0xf0
          .byte 0x3f
.L_44bf10:
          .byte 0x3
          .byte 0x41
          .byte 0xe3
          .byte 0x7e
          .byte 0xe7
          .byte 0xcb
          .byte 0xf0
          .byte 0xbf
.L_44bf18:
          .byte 0xc3
          .byte 0xf
          .byte 0xfc
          .byte 0x1a
          .byte 0x3d
          .byte 0x38
          .byte 0x6
          .byte 0xc0
.L_44bf20:
          .string "McBryde-Thomas Flat-Polar Quartic\n\tCyl., Sph."
          .zero 2
.L_44bf50:
          .byte 0x1a
          .byte 0x2b
          .byte 0x59
          .byte 0x7
          .byte 0x57
          .byte 0xff
          .byte 0xd3
          .byte 0x3f
.L_44bf58:
          .byte 0xa7
          .byte 0xc0
          .byte 0x5
          .byte 0x8b
          .byte 0x2
          .byte 0xff
          .byte 0xfd
          .byte 0x3f
.L_44bf60:
          .byte 0x68
          .byte 0x88
          .byte 0x1
          .byte 0x33
          .byte 0xc3
          .byte 0xbe
          .byte 0xe2
          .byte 0xbf
.L_44bf68:
          .byte 0x68
          .byte 0x88
          .byte 0x1
          .byte 0x33
          .byte 0xc3
          .byte 0xbe
          .byte 0xe2
          .byte 0x3f
.L_44bf70:
          .byte 0x82
          .byte 0x29
          .byte 0x2b
          .byte 0x46
          .byte 0xa1
          .byte 0x11
          .byte 0xe1
          .byte 0x3f
.L_44bf78:
          .byte 0x43
          .byte 0xbe
          .byte 0x40
          .byte 0xe9
          .byte 0x71
          .byte 0x9a
          .byte 0x9
          .byte 0x40
.L_44bf80:
          .byte 0xb5
          .byte 0xcd
          .byte 0x31
          .byte 0x7c
          .byte 0x96
          .byte 0x2
          .byte 0x5d
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bf90:
          .string "Wagner V\n\tPCyl., Sph."
          .zero 10
.L_44bfb0:
          .string "Wagner IV\n\tPCyl., Sph."
          .zero 9
.L_44bfd0:
          .string "Mollweide\n\tPCyl., Sph."
          .zero 1
.L_44bfe8:
          .byte 0x22
          .byte 0x66
          .byte 0xbe
          .byte 0x29
          .byte 0x64
          .byte 0xcf
          .byte 0xec
          .byte 0x3f
.L_44bff0:
          .byte 0x99
          .byte 0xbc
          .byte 0xe4
          .byte 0xb2
          .byte 0x79
          .byte 0x9e
          .byte 0xeb
          .byte 0x3f
.L_44bff8:
          .byte 0x26
          .byte 0x68
          .byte 0xc3
          .byte 0x3d
          .byte 0x36
          .byte 0xc
          .byte 0xf9
          .byte 0x3f
.L_44c000:
          .byte 0x90
          .byte 0x86
          .byte 0x43
          .byte 0xf2
          .byte 0xf0
          .byte 0xae
          .byte 0x7
          .byte 0x40
.L_44c008:
          .byte 0xb0
          .byte 0x38
          .byte 0x9c
          .byte 0xf9
          .byte 0xd5
          .byte 0x1c
          .byte 0xed
          .byte 0x3f
.L_44c010:
          .byte 0x9e
          .byte 0x24
          .byte 0x5d
          .byte 0x33
          .byte 0xf9
          .byte 0x66
          .byte 0xfa
          .byte 0x3f
.L_44c018:
          .byte 0xfc
          .byte 0xc6
          .byte 0xd7
          .byte 0x9e
          .byte 0x59
          .byte 0x12
          .byte 0x8
          .byte 0x40
.L_44c020:
          .string "Nell\n\tPCyl., Sph."
          .zero 6
.L_44c038:
          .byte 0xd
          .byte 0x70
          .byte 0x41
          .byte 0xb6
          .byte 0x2c
          .byte 0x5f
          .byte 0x87
          .byte 0xbf
.L_44c040:
          .byte 0xaf
          .byte 0x3c
          .byte 0xed
          .byte 0x95
          .byte 0x1e
          .byte 0xf2
          .byte 0xb7
          .byte 0x3f
.L_44c048:
          .byte 0xc9
          .byte 0xb0
          .byte 0x8a
          .byte 0x37
          .byte 0x32
          .byte 0xf
          .byte 0xf0
          .byte 0x3f
.L_44c050:
          .string "Nell-Hammer\n\tPCyl., Sph."
          .zero 7
.L_44c070:
          .string "Patterson Cylindrical\n\tCyl."
          .zero 4
.L_44c090:
          .byte 0x89
          .byte 0x29
          .byte 0x91
          .byte 0x44
          .byte 0x2f
          .byte 0xa3
          .byte 0x98
          .byte 0x3f
.L_44c098:
          .byte 0x2
          .byte 0x9f
          .byte 0x1f
          .byte 0x46
          .byte 0x8
          .byte 0x8f
          .byte 0xc2
          .byte 0x3f
.L_44c0a0:
          .byte 0xcc
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xad
          .byte 0xcd
          .byte 0x3f
.L_44c0a8:
          .byte 0x5b
          .byte 0xb1
          .byte 0xbf
          .byte 0xec
          .byte 0x9e
          .byte 0x3c
          .byte 0xf0
          .byte 0x3f
.L_44c0b0:
          .byte 0xc0
          .byte 0xaa
          .byte 0x8c
          .byte 0xdc
          .byte 0x59
          .byte 0xa7
          .byte 0xfc
          .byte 0x3f
.L_44c0b8:
          .byte 0xc0
          .byte 0xaa
          .byte 0x8c
          .byte 0xdc
          .byte 0x59
          .byte 0xa7
          .byte 0xfc
          .byte 0xbf
.L_44c0c0:
          .byte 0xba
          .byte 0x4e
          .byte 0x23
          .byte 0x2d
          .byte 0x95
          .byte 0xb7
          .byte 0xcb
          .byte 0x3f
.L_44c0c8:
          .byte 0x22
          .byte 0xab
          .byte 0x5b
          .byte 0x3d
          .byte 0x27
          .byte 0x3d
          .byte 0xf0
          .byte 0x3f
.L_44c0d0:
          .byte 0x40
          .byte 0x35
          .byte 0x5e
          .byte 0xba
          .byte 0x49
          .byte 0x8c
          .byte 0xf2
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c0e0:
          .string "Putnins P2\n\tPCyl., Sph."
.L_44c0f8:
          .byte 0xca
          .byte 0x7b
          .byte 0x40
          .byte 0x70
          .byte 0xdc
          .byte 0xcf
          .byte 0xf7
          .byte 0x3f
.L_44c100:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x3c
.L_44c108:
          .byte 0xca
          .byte 0x7b
          .byte 0x40
          .byte 0x70
          .byte 0xdc
          .byte 0xcf
          .byte 0xf7
          .byte 0xbf
.L_44c110:
          .byte 0x76
          .byte 0xc0
          .byte 0x2e
          .byte 0xfc
          .byte 0x66
          .byte 0xa7
          .byte 0xe3
          .byte 0x3f
.L_44c118:
          .byte 0x80
          .byte 0xcf
          .byte 0xb4
          .byte 0x69
          .byte 0x11
          .byte 0xf6
          .byte 0x72
          .byte 0x3f
.L_44c120:
          .byte 0x53
          .byte 0x5f
          .byte 0x12
          .byte 0x3e
          .byte 0xc6
          .byte 0xa2
          .byte 0x82
          .byte 0x3f
.L_44c128:
          .byte 0xa9
          .byte 0x4a
          .byte 0x5b
          .byte 0x5c
          .byte 0xe3
          .byte 0xb3
          .byte 0xe3
          .byte 0x3f
.L_44c130:
          .byte 0x2
          .byte 0x48
          .byte 0x6d
          .byte 0xe2
          .byte 0xe4
          .byte 0x7e
          .byte 0xfb
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c140:
          .string "Putnins P3\'\n\tPCyl., Sph."
          .zero 7
.L_44c160:
          .string "Putnins P3\n\tPCyl., Sph."
.L_44c178:
          .byte 0x0
          .byte 0xde
          .byte 0x65
          .byte 0x33
          .byte 0x45
          .byte 0x88
          .byte 0xe9
          .byte 0x3f
.L_44c180:
          .byte 0x1a
          .byte 0x3a
          .byte 0xf4
          .byte 0x61
          .byte 0x2f
          .byte 0xf0
          .byte 0xd9
          .byte 0x3f
.L_44c188:
          .byte 0x1a
          .byte 0x3a
          .byte 0xf4
          .byte 0x61
          .byte 0x2f
          .byte 0xf0
          .byte 0xc9
          .byte 0x3f
.L_44c190:
          .string "Werenskiold I\n\tPCyl., Sph."
          .zero 5
.L_44c1b0:
          .string "Putnins P4\'\n\tPCyl., Sph."
          .zero 7
.L_44c1d0:
          .byte 0x35
          .byte 0xa2
          .byte 0xdc
          .byte 0xff
          .byte 0xc5
          .byte 0x48
          .byte 0xec
          .byte 0x3f
.L_44c1d8:
          .byte 0x4f
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_44c1e0:
          .byte 0x11
          .byte 0x5d
          .byte 0x6
          .byte 0x52
          .byte 0x18
          .byte 0x1a
          .byte 0xf2
          .byte 0x3f
.L_44c1e8:
          .byte 0x61
          .byte 0x57
          .byte 0x9d
          .byte 0x19
          .byte 0x20
          .byte 0xf8
          .byte 0xeb
          .byte 0x3f
.L_44c1f0:
          .byte 0xfb
          .byte 0xe
          .byte 0x34
          .byte 0x55
          .byte 0xe6
          .byte 0x10
          .byte 0xf
          .byte 0x40
.L_44c1f8:
          .byte 0x64
          .byte 0xaa
          .byte 0xda
          .byte 0x1a
          .byte 0x83
          .byte 0xc5
          .byte 0x11
          .byte 0x40
.L_44c200:
          .string "Putnins P5\'\n\tPCyl., Sph."
          .zero 7
.L_44c220:
          .string "Putnins P5\n\tPCyl., Sph."
.L_44c238:
          .byte 0xd7
          .byte 0xdd
          .byte 0x3c
          .byte 0xd5
          .byte 0x21
          .byte 0x37
          .byte 0xf0
          .byte 0x3f
.L_44c240:
          .byte 0x95
          .byte 0x44
          .byte 0x9b
          .byte 0x88
          .byte 0x23
          .byte 0x74
          .byte 0xf3
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c250:
          .string "Putnins P6\'\n\tPCyl., Sph."
          .zero 7
.L_44c270:
          .string "Putnins P6\n\tPCyl., Sph."
.L_44c288:
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_44c290:
          .byte 0xa9
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0xbf
.L_44c298:
          .byte 0xa9
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0x3f
.L_44c2a0:
          .byte 0x97
          .byte 0xac
          .byte 0xab
          .byte 0x7e
          .byte 0x7c
          .byte 0xa4
          .byte 0xf1
          .byte 0x3f
.L_44c2a8:
          .byte 0x7e
          .byte 0x1d
          .byte 0x38
          .byte 0x67
          .byte 0x44
          .byte 0x69
          .byte 0xed
          .byte 0x3f
.L_44c2b0:
          .byte 0x90
          .byte 0x4a
          .byte 0x8c
          .byte 0xaf
          .byte 0x59
          .byte 0x2d
          .byte 0x1
          .byte 0x40
.L_44c2b8:
          .byte 0xad
          .byte 0x34
          .byte 0x29
          .byte 0x5
          .byte 0xdd
          .byte 0x5e
          .byte 0xdc
          .byte 0x3f
.L_44c2c0:
          .byte 0x7b
          .byte 0xa0
          .byte 0x15
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xe9
          .byte 0x3f
.L_44c2c8:
          .byte 0x52
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x71
          .byte 0x16
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c2e0:
          .string "Quadrilateralized Spherical Cube\n\tAzi, Sph."
          .zero 4
.L_44c310:
          .byte 0x65
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xd0
          .byte 0x3f
.L_44c318:
          .byte 0xcc
          .byte 0x3b
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_44c320:
          .byte 0xc4
          .byte 0xac
          .byte 0xae
          .byte 0xa4
          .byte 0xc8
          .byte 0x8e
          .byte 0xe
          .byte 0x40
.L_44c328:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0xf2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c340:
          .byte 0xff
          .byte 0xff
          .byte 0xbf
          .byte 0xa2
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x56
          .byte 0x33
          .byte 0xb3
          .byte 0x21
          .byte 0x42
          .byte 0xe1
          .byte 0xb9
          .byte 0xae
          .byte 0xb6
          .byte 0xf3
          .byte 0x7d
          .byte 0x3d
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x52
          .byte 0x43
          .byte 0xae
          .byte 0xb0
          .byte 0x93
          .byte 0x59
          .byte 0xe8
          .byte 0x2f
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0x3d
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x3c
          .byte 0x43
          .byte 0xae
          .byte 0x31
          .byte 0x82
          .byte 0xbb
          .byte 0xdc
          .byte 0xb0
          .byte 0xc9
          .byte 0x76
          .byte 0x3e
          .byte 0x3e
          .byte 0xf3
          .byte 0x28
          .byte 0x4b
          .byte 0x3c
          .byte 0x1
          .byte 0x5f
          .byte 0xa3
          .byte 0xb2
          .byte 0xee
          .byte 0x35
          .byte 0xce
          .byte 0x31
          .byte 0xb6
          .byte 0xf3
          .byte 0x7d
          .byte 0x3e
          .byte 0x35
          .byte 0x2a
          .byte 0x4b
          .byte 0x3c
          .byte 0xcf
          .byte 0x7a
          .byte 0x98
          .byte 0x33
          .byte 0x1f
          .byte 0x6a
          .byte 0xc0
          .byte 0xb2
          .byte 0x52
          .byte 0xb8
          .byte 0x9e
          .byte 0x3e
          .byte 0x4
          .byte 0x26
          .byte 0x4b
          .byte 0x3c
          .byte 0xe9
          .byte 0x44
          .byte 0x8e
          .byte 0xb4
          .byte 0xd1
          .byte 0x86
          .byte 0xb3
          .byte 0x33
          .byte 0xc9
          .byte 0x76
          .byte 0xbe
          .byte 0x3e
          .byte 0x88
          .byte 0x35
          .byte 0x4b
          .byte 0x3c
          .byte 0x32
          .byte 0xbd
          .byte 0x84
          .byte 0x35
          .byte 0x21
          .byte 0x80
          .byte 0xa7
          .byte 0xb4
          .byte 0x3f
          .byte 0x35
          .byte 0xde
          .byte 0x3e
          .byte 0x7e
          .byte 0xfc
          .byte 0x4a
          .byte 0x3c
          .byte 0xb2
          .byte 0xb1
          .byte 0x77
          .byte 0xb6
          .byte 0x4b
          .byte 0xdf
          .byte 0xe9
          .byte 0xb4
          .byte 0x7f
          .byte 0xd9
          .byte 0xfd
          .byte 0x3e
          .byte 0xfd
          .byte 0xd8
          .byte 0x49
          .byte 0x3c
          .byte 0xe6
          .byte 0x8c
          .byte 0x2b
          .byte 0xb7
          .byte 0x52
          .byte 0x80
          .byte 0xb9
          .byte 0xb4
          .byte 0x1b
          .byte 0x9e
          .byte 0xe
          .byte 0x3f
          .byte 0x47
          .byte 0xbf
          .byte 0x47
          .byte 0x3c
          .byte 0xa5
          .byte 0x40
          .byte 0x81
          .byte 0xb7
          .byte 0x87
          .byte 0x4e
          .byte 0x1c
          .byte 0xb5
          .byte 0x9
          .byte 0x1b
          .byte 0x1e
          .byte 0x3f
          .byte 0xa5
          .byte 0x81
          .byte 0x44
          .byte 0x3c
          .byte 0x69
          .byte 0x85
          .byte 0xca
          .byte 0xb7
          .byte 0x32
          .byte 0x4
          .byte 0xd
          .byte 0xb5
          .byte 0x52
          .byte 0x49
          .byte 0x2d
          .byte 0x3f
          .byte 0xe2
          .byte 0xe7
          .byte 0x3f
          .byte 0x3c
          .byte 0xaf
          .byte 0x4f
          .byte 0x6
          .byte 0xb8
          .byte 0x15
          .byte 0x9f
          .byte 0xa
          .byte 0xb5
          .byte 0xbf
          .byte 0xe
          .byte 0x3c
          .byte 0x3f
          .byte 0x8c
          .byte 0x6
          .byte 0x3a
          .byte 0x3c
          .byte 0xff
          .byte 0xcc
          .byte 0x26
          .byte 0xb8
          .byte 0xbc
          .byte 0x7d
          .byte 0x23
          .byte 0xb5
          .byte 0x1a
          .byte 0x51
          .byte 0x4a
          .byte 0x3f
          .byte 0xcb
          .byte 0xc2
          .byte 0x32
          .byte 0x3c
          .byte 0x7c
          .byte 0x1e
          .byte 0x4d
          .byte 0xb8
          .byte 0xc
          .byte 0x94
          .byte 0x8c
          .byte 0xb5
          .byte 0x9e
          .byte 0xef
          .byte 0x57
          .byte 0x3f
          .byte 0x1b
          .byte 0x76
          .byte 0x29
          .byte 0x3c
          .byte 0xea
          .byte 0x81
          .byte 0x87
          .byte 0xb8
          .byte 0xb6
          .byte 0xed
          .byte 0xc0
          .byte 0xb0
          .byte 0xf8
          .byte 0xc2
          .byte 0x64
          .byte 0x3f
          .byte 0x94
          .byte 0xdf
          .byte 0x1e
          .byte 0x3c
          .byte 0x30
          .byte 0x8d
          .byte 0x87
          .byte 0xb8
          .byte 0x16
          .byte 0x65
          .byte 0xf
          .byte 0xb7
          .byte 0x85
          .byte 0x7c
          .byte 0x70
          .byte 0x3f
          .byte 0xe0
          .byte 0xc7
          .byte 0x9
          .byte 0x3c
          .byte 0x5d
          .byte 0x35
          .byte 0x4a
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0xb1
          .byte 0xe1
          .byte 0x79
          .byte 0x3f
          .byte 0x9
          .byte 0x6
          .byte 0xca
          .byte 0x3b
          .byte 0xbd
          .byte 0x37
          .byte 0x86
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x26
          .byte 0x94
          .byte 0x57
          .byte 0x3b
          .byte 0xcc
          .byte 0x54
          .byte 0xa7
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c480:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0xe8
          .byte 0xbf
          .byte 0xcc
          .byte 0x23
          .byte 0xeb
          .byte 0xd
          .byte 0x96
          .byte 0xb8
          .byte 0x8c
          .byte 0xba
          .byte 0x50
          .byte 0x36
          .byte 0x40
          .byte 0xa4
          .byte 0x7f
          .byte 0x3f
          .byte 0x8f
          .byte 0xd5
          .byte 0xfc
          .byte 0xb9
          .byte 0xe6
          .byte 0xd9
          .byte 0xd0
          .byte 0xb7
          .byte 0x60
          .byte 0xa1
          .byte 0xb2
          .byte 0xb5
          .byte 0x89
          .byte 0xd2
          .byte 0x7e
          .byte 0x3f
          .byte 0x7b
          .byte 0xd9
          .byte 0x59
          .byte 0xba
          .byte 0x98
          .byte 0x28
          .byte 0x3c
          .byte 0xb8
          .byte 0xca
          .byte 0x6e
          .byte 0x84
          .byte 0xb5
          .byte 0xa4
          .byte 0x70
          .byte 0x7d
          .byte 0x3f
          .byte 0x9f
          .byte 0x6c
          .byte 0xb1
          .byte 0xba
          .byte 0x83
          .byte 0x3c
          .byte 0x7a
          .byte 0xb8
          .byte 0x68
          .byte 0xce
          .byte 0x76
          .byte 0x36
          .byte 0x76
          .byte 0x71
          .byte 0x7b
          .byte 0x3f
          .byte 0x36
          .byte 0x78
          .byte 0xdb
          .byte 0xba
          .byte 0xcb
          .byte 0xd7
          .byte 0x96
          .byte 0xb6
          .byte 0xbb
          .byte 0x11
          .byte 0xc0
          .byte 0xb6
          .byte 0x87
          .byte 0x16
          .byte 0x79
          .byte 0x3f
          .byte 0xde
          .byte 0xd0
          .byte 0xc
          .byte 0xbb
          .byte 0x19
          .byte 0x7e
          .byte 0xbd
          .byte 0xb8
          .byte 0xe6
          .byte 0xf0
          .byte 0xa0
          .byte 0x32
          .byte 0x8f
          .byte 0xc2
          .byte 0x75
          .byte 0x3f
          .byte 0xc5
          .byte 0xf0
          .byte 0x47
          .byte 0xbb
          .byte 0x3d
          .byte 0xe7
          .byte 0xbc
          .byte 0xb8
          .byte 0xd
          .byte 0x59
          .byte 0xdd
          .byte 0x35
          .byte 0xca
          .byte 0x54
          .byte 0x71
          .byte 0x3f
          .byte 0xd7
          .byte 0xdd
          .byte 0x7a
          .byte 0xbb
          .byte 0x65
          .byte 0x6
          .byte 0x89
          .byte 0xb8
          .byte 0x3b
          .byte 0x84
          .byte 0x2f
          .byte 0xb6
          .byte 0xfa
          .byte 0xed
          .byte 0x6b
          .byte 0x3f
          .byte 0x61
          .byte 0x45
          .byte 0x99
          .byte 0xbb
          .byte 0x97
          .byte 0x4c
          .byte 0xdb
          .byte 0xb8
          .byte 0x75
          .byte 0x7a
          .byte 0xa1
          .byte 0x36
          .byte 0x5d
          .byte 0x6d
          .byte 0x65
          .byte 0x3f
          .byte 0xa5
          .byte 0xb5
          .byte 0xaf
          .byte 0xbb
          .byte 0x17
          .byte 0xd3
          .byte 0x7
          .byte 0xb8
          .byte 0x74
          .byte 0x58
          .byte 0xb6
          .byte 0xb6
          .byte 0xb2
          .byte 0x2e
          .byte 0x5e
          .byte 0x3f
          .byte 0x13
          .byte 0xad
          .byte 0xc7
          .byte 0xbb
          .byte 0x86
          .byte 0xdc
          .byte 0xee
          .byte 0xb8
          .byte 0x51
          .byte 0x20
          .byte 0x5f
          .byte 0x36
          .byte 0x8f
          .byte 0xc2
          .byte 0x55
          .byte 0x3f
          .byte 0xbf
          .byte 0xd3
          .byte 0xe4
          .byte 0xbb
          .byte 0x52
          .byte 0x45
          .byte 0x86
          .byte 0xb8
          .byte 0xe5
          .byte 0xf9
          .byte 0x7a
          .byte 0x35
          .byte 0xd
          .byte 0x71
          .byte 0x4c
          .byte 0x3f
          .byte 0x58
          .byte 0x82
          .byte 0xf7
          .byte 0xbb
          .byte 0xf
          .byte 0xb8
          .byte 0x51
          .byte 0xb8
          .byte 0xfa
          .byte 0x12
          .byte 0x7b
          .byte 0x35
          .byte 0xb3
          .byte 0x7b
          .byte 0x42
          .byte 0x3f
          .byte 0x23
          .byte 0xcc
          .byte 0x2
          .byte 0xbc
          .byte 0x91
          .byte 0xdf
          .byte 0x16
          .byte 0xb8
          .byte 0xd9
          .byte 0xc1
          .byte 0x18
          .byte 0xb6
          .byte 0x2b
          .byte 0xf6
          .byte 0x37
          .byte 0x3f
          .byte 0xec
          .byte 0x7c
          .byte 0xb
          .byte 0xbc
          .byte 0xa6
          .byte 0xa
          .byte 0x93
          .byte 0xb8
          .byte 0xdb
          .byte 0xca
          .byte 0x10
          .byte 0xb7
          .byte 0xd6
          .byte 0x56
          .byte 0x2c
          .byte 0x3f
          .byte 0x9b
          .byte 0x94
          .byte 0x21
          .byte 0xbc
          .byte 0x65
          .byte 0x43
          .byte 0x51
          .byte 0xb9
          .byte 0x1a
          .byte 0xa
          .byte 0xa1
          .byte 0x37
          .byte 0x84
          .byte 0xd
          .byte 0x1f
          .byte 0x3f
          .byte 0x42
          .byte 0xb0
          .byte 0x2a
          .byte 0xbc
          .byte 0x41
          .byte 0x5f
          .byte 0xb9
          .byte 0x38
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
          .byte 0xb3
          .byte 0x7b
          .byte 0x12
          .byte 0x3f
          .byte 0x9a
          .byte 0x89
          .byte 0x14
          .byte 0xbc
          .byte 0x41
          .byte 0xd7
          .byte 0x3e
          .byte 0x39
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
          .byte 0x42
          .byte 0x3e
          .byte 0x8
          .byte 0x3f
          .byte 0xbc
          .byte 0x19
          .byte 0xde
          .byte 0xbb
          .byte 0x7b
          .byte 0x7f
          .byte 0x90
          .byte 0x39
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
.L_44c5b0:
          .string "Robinson\n\tPCyl., Sph."
          .zero 2
.L_44c5c8:
          .byte 0x93
          .byte 0x1
          .byte 0x83
          .byte 0x7b
          .byte 0x16
          .byte 0xeb
          .byte 0x26
          .byte 0x40
.L_44c5d0:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xb6
          .byte 0x3f
.L_44c5d8:
          .byte 0xb8
          .byte 0xaf
          .byte 0x3
          .byte 0xe7
          .byte 0x8c
          .byte 0x28
          .byte 0xeb
          .byte 0x3f
.L_44c5e0:
          .byte 0xc2
          .byte 0x17
          .byte 0x26
          .byte 0x53
          .byte 0x5
          .byte 0xa3
          .byte 0xf5
          .byte 0x3f
.L_44c5e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc8
          .byte 0x7
          .byte 0xe1
          .byte 0x3f
.L_44c5f0:
          .string "tplat_0"
.L_44c5f8:
          .string "rplat_0"
.L_44c600:
          .string "tplon_0"
.L_44c608:
          .string "rplon_0"
.L_44c610:
          .string "tphdg_0"
.L_44c618:
          .string "rphdg_0"
.L_44c620:
          .string "th_0"
.L_44c625:
          .string "dh_0"
          .zero 22
.L_44c640:
          .string "Spherical Cross-track Height\n\tMisc\n\tplat_0= plon_0= phdg_0= [h_0=]"
          .zero 29
.L_44c6a0:
          .string "McBryde-Thomas Flat-Polar Sine (No. 1)\n\tPCyl., Sph."
          .zero 12
.L_44c6e0:
          .string "Foucaut\n\tPCyl., Sph."
          .zero 11
.L_44c700:
          .string "Quartic Authalic\n\tPCyl., Sph."
          .zero 2
.L_44c720:
          .string "Kavraisky V\n\tPCyl., Sph."
          .zero 7
.L_44c740:
          .byte 0xc0
          .byte 0x1b
          .byte 0x4b
          .byte 0x3
          .byte 0xca
          .byte 0xcc
          .byte 0xec
          .byte 0x3f
.L_44c748:
          .byte 0xc0
          .byte 0x78
          .byte 0x6
          .byte 0xd
          .byte 0xfd
          .byte 0x13
          .byte 0xf8
          .byte 0x3f
.L_44c750:
          .byte 0xcd
          .byte 0xea
          .byte 0x40
          .byte 0xb9
          .byte 0x7a
          .byte 0xa0
          .byte 0xe7
          .byte 0x3f
.L_44c758:
          .byte 0x31
          .byte 0xe3
          .byte 0x4f
          .byte 0x52
          .byte 0x8c
          .byte 0x57
          .byte 0xed
          .byte 0x3f
.L_44c760:
          .byte 0x52
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xd1
          .byte 0xf7
          .byte 0x3f
.L_44c768:
          .byte 0x4f
          .byte 0xf8
          .byte 0x7d
          .byte 0xcc
          .byte 0x11
          .byte 0x71
          .byte 0xe7
          .byte 0x3f
.L_44c770:
          .string "dq"
          .zero 13
.L_44c780:
          .string "Urmaev V\n\tPCyl., Sph., no inv.\n\tn= q= alpha="
          .zero 19
.L_44c7c0:
          .string "Wagner I (Kavraisky VI)\n\tPCyl, Sph."
          .zero 28
.L_44c800:
          .string "Urmaev Flat-Polar Sinusoidal\n\tPCyl, Sph.\n\tn="
          .zero 3
.L_44c830:
          .byte 0x12
          .byte 0xb2
          .byte 0xf
          .byte 0xd5
          .byte 0x84
          .byte 0x13
          .byte 0xec
          .byte 0x3f
.L_44c838:
          .byte 0xf9
          .byte 0xf2
          .byte 0x24
          .byte 0x32
          .byte 0x6e
          .byte 0x3c
          .byte 0xf2
          .byte 0x3f
.L_44c840:
          .byte 0x80
          .byte 0xe9
          .byte 0xcb
          .byte 0x9f
          .byte 0xa3
          .byte 0xe
          .byte 0xf5
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c850:
          .string "Wagner II\n\tPCyl., Sph."
          .zero 1
.L_44c868:
          .byte 0xbc
          .byte 0x74
          .byte 0x93
          .byte 0x18
          .byte 0x4
          .byte 0x56
          .byte 0xec
          .byte 0x3f
.L_44c870:
          .byte 0xb4
          .byte 0x1f
          .byte 0x29
          .byte 0x22
          .byte 0xc3
          .byte 0x2a
          .byte 0xec
          .byte 0x3f
.L_44c878:
          .byte 0x80
          .byte 0x82
          .byte 0x8b
          .byte 0x15
          .byte 0x35
          .byte 0x98
          .byte 0xed
          .byte 0x3f
.L_44c880:
          .byte 0x19
          .byte 0x4
          .byte 0x56
          .byte 0xe
          .byte 0x2d
          .byte 0x32
          .byte 0xf6
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c8a0:
          .string "Wagner III\n\tPCyl., Sph.\n\tlat_ts="
          .zero 15
.L_44c8d0:
          .string "Winkel I\n\tPCyl., Sph.\n\tlat_ts="
          .zero 17
.L_44c900:
          .string "Winkel II\n\tPCyl., Sph., no inv.\n\tlat_1="
.L_44c928:
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xfc
          .byte 0x3f
.L_44c930:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_44c950:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_44c970:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_44c990:
          .string "Lat/long (Geodetic)\n\t"
          .zero 2
.L_44c9a8:
          .string "Geocentric\n\t"
          .zero 3
.L_44c9b8:
          .string "-"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44c9c0:
          .byte 0x1f
          .byte 0xb8
          .byte 0xd4
          .byte 0x4a
          .byte 0x7a
          .byte 0xee
          .byte 0x8d
          .byte 0x35
.L_44c9c8:
          .byte 0xea
          .byte 0x2e
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_44c9d0:
          .string "NnEeSsWw"
          .zero 7
.L_44c9e0:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
          .byte 0xa3
          .byte 0x96
          .byte 0xcf
          .byte 0x57
          .byte 0x4b
          .byte 0x10
          .byte 0x33
          .byte 0x3f
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_44c9f8:
          .byte 0xa3
          .byte 0x96
          .byte 0xcf
          .byte 0x57
          .byte 0x4b
          .byte 0x10
          .byte 0x33
          .byte 0x3f
.L_44ca00:
          .byte 0xb6
          .byte 0x60
          .byte 0xb
          .byte 0xb6
          .byte 0x60
          .byte 0xb
          .byte 0xc6
          .byte 0x3f
.L_44ca08:
          .byte 0x2a
          .byte 0xa4
          .byte 0x42
          .byte 0x2a
          .byte 0xa4
          .byte 0x42
          .byte 0xba
          .byte 0x3f
.L_44ca10:
          .byte 0xb0
          .byte 0x5
          .byte 0x5b
          .byte 0xb0
          .byte 0x5
          .byte 0x5b
          .byte 0xb0
          .byte 0x3f
.L_44ca18:
          .byte 0xfc
          .byte 0xf
          .byte 0x55
          .byte 0xa6
          .byte 0xba
          .byte 0xff
          .byte 0xb0
          .byte 0x3f
.L_44ca20:
          .byte 0x8a
          .byte 0xbd
          .byte 0x9f
          .byte 0x6d
          .byte 0xf6
          .byte 0x2d
          .byte 0x91
          .byte 0x3f
.L_44ca28:
          .string "tR"
.L_44ca2b:
          .string "dR"
.L_44ca2e:
          .string "sellps"
.L_44ca35:
          .string "tes"
.L_44ca39:
          .string "des"
.L_44ca3d:
          .string "drf"
.L_44ca41:
          .string "db"
.L_44ca44:
          .string "bR_A"
.L_44ca49:
          .string "bR_V"
.L_44ca4e:
          .string "bR_a"
.L_44ca53:
          .string "bR_g"
.L_44ca58:
          .string "bR_h"
.L_44ca5d:
          .string "tR_lat_a"
.L_44ca66:
          .string "tR_lat_g"
.L_44ca6f:
          .string "rR_lat_a"
.L_44ca78:
          .string "rR_lat_g"
          .zero 7
.L_44ca88:
          .byte 0x1
          .byte 0x6b
          .byte 0x5
          .byte 0xac
          .byte 0x15
          .byte 0xb0
          .byte 0x96
          .byte 0x3f
.L_44ca90:
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xa8
          .byte 0x3f
.L_44ca98:
          .byte 0xfd
          .byte 0xb0
          .byte 0x48
          .byte 0x19
          .byte 0x78
          .byte 0xba
          .byte 0xa5
          .byte 0x3f
.L_44caa0:
          .byte 0x72
          .byte 0x1c
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xc7
          .byte 0xb1
          .byte 0x3f
.L_44caa8:
          .string "MERIT"
.L_44caae:
          .string "a=6378137.0"
.L_44caba:
          .string "rf=298.257"
.L_44cac5:
          .string "MERIT 1983"
.L_44cad0:
          .string "SGS85"
.L_44cad6:
          .string "a=6378136.0"
.L_44cae2:
          .string "Soviet Geodetic System 85"
.L_44cafc:
          .string "rf=298.257222101"
.L_44cb0d:
          .string "GRS 1980(IUGG, 1980)"
.L_44cb22:
          .string "IAU76"
.L_44cb28:
          .string "a=6378140.0"
.L_44cb34:
          .string "IAU 1976"
.L_44cb3d:
          .string "a=6377563.396"
.L_44cb4b:
          .string "b=6356256.910"
.L_44cb59:
          .string "APL4.9"
.L_44cb60:
          .string "a=6378137.0."
.L_44cb6d:
          .string "rf=298.25"
.L_44cb77:
          .string "Appl. Physics. 1965"
.L_44cb8b:
          .string "NWL9D"
.L_44cb91:
          .string "a=6378145.0."
.L_44cb9e:
          .string "Naval Weapons Lab., 1965"
.L_44cbb7:
          .string "a=6377340.189"
.L_44cbc5:
          .string "b=6356034.446"
.L_44cbd3:
          .string "Modified Airy"
.L_44cbe1:
          .string "andrae"
.L_44cbe8:
          .string "a=6377104.43"
.L_44cbf5:
          .string "rf=300.0"
.L_44cbfe:
          .string "Andrae 1876 (Den., Iclnd.)"
.L_44cc19:
          .string "aust_SA"
.L_44cc21:
          .string "a=6378160.0"
.L_44cc2d:
          .string "GRS67"
.L_44cc33:
          .string "rf=298.2471674270"
.L_44cc45:
          .string "GRS 67(IUGG 1967)"
.L_44cc57:
          .string "a=6377397.155"
.L_44cc65:
          .string "rf=299.1528128"
.L_44cc74:
          .string "Bessel 1841"
.L_44cc80:
          .string "bess_nam"
.L_44cc89:
          .string "a=6377483.865"
.L_44cc97:
          .string "Bessel 1841 (Namibia)"
.L_44ccad:
          .string "a=6378206.4"
.L_44ccb9:
          .string "b=6356583.8"
.L_44ccc5:
          .string "Clarke 1866"
.L_44ccd1:
          .string "clrk80"
.L_44ccd8:
          .string "a=6378249.145"
.L_44cce6:
          .string "rf=293.4663"
.L_44ccf2:
          .string "Clarke 1880 mod."
.L_44cd03:
          .string "a=6378249.2"
.L_44cd0f:
          .string "rf=293.4660212936269"
.L_44cd24:
          .byte 0x43
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x6b
          .byte 0x65
          .byte 0x20
          .byte 0x31
          .byte 0x38
          .byte 0x38
          .byte 0x30
          .byte 0x20
          .byte 0x28
          .byte 0x49
          .byte 0x47
          .byte 0x4e
          .byte 0x29
.L_44cd35:
          .string "."
.L_44cd37:
          .string "CPM"
.L_44cd3b:
          .string "a=6375738.7"
.L_44cd47:
          .string "rf=334.29"
.L_44cd51:
          .string "delmbr"
.L_44cd58:
          .string "a=6376428."
.L_44cd63:
          .string "rf=311.5"
.L_44cd6c:
          .string "Delambre 1810 (Belgium)"
.L_44cd84:
          .string "engelis"
.L_44cd8c:
          .string "a=6378136.05"
.L_44cd99:
          .string "rf=298.2566"
.L_44cda5:
          .string "Engelis 1985"
.L_44cdb2:
          .string "evrst30"
.L_44cdba:
          .string "a=6377276.345"
.L_44cdc8:
          .string "rf=300.8017"
.L_44cdd4:
          .string "Everest 1830"
.L_44cde1:
          .string "evrst48"
.L_44cde9:
          .string "a=6377304.063"
.L_44cdf7:
          .string "Everest 1948"
.L_44ce04:
          .string "evrst56"
.L_44ce0c:
          .string "a=6377301.243"
.L_44ce1a:
          .string "Everest 1956"
.L_44ce27:
          .string "evrst69"
.L_44ce2f:
          .string "a=6377295.664"
.L_44ce3d:
          .string "Everest 1969"
.L_44ce4a:
          .string "evrstSS"
.L_44ce52:
          .string "a=6377298.556"
.L_44ce60:
          .string "Everest (Sabah & Sarawak)"
.L_44ce7a:
          .string "fschr60"
.L_44ce82:
          .string "a=6378166."
.L_44ce8d:
          .string "rf=298.3"
.L_44ce96:
          .string "Fischer (Mercury Datum) 1960"
.L_44ceb3:
          .byte 0x66
          .byte 0x73
          .byte 0x63
          .byte 0x68
          .byte 0x72
          .byte 0x36
          .byte 0x30
.L_44ceba:
          .string "m"
.L_44cebc:
          .string "a=6378155."
.L_44cec7:
          .string "Modified Fischer 1960"
.L_44cedd:
          .string "fschr68"
.L_44cee5:
          .string "a=6378150."
.L_44cef0:
          .string "Fischer 1968"
.L_44cefd:
          .string "a=6378200."
.L_44cf08:
          .string "Helmert 1906"
.L_44cf15:
          .string "hough"
.L_44cf1b:
          .string "a=6378270.0"
.L_44cf27:
          .string "rf=297."
.L_44cf2f:
          .string "Hough"
.L_44cf35:
          .string "a=6378388.0"
.L_44cf41:
          .string "International 1909 (Hayford)"
.L_44cf5e:
          .string "krass"
.L_44cf64:
          .string "a=6378245.0"
.L_44cf70:
          .string "Krassovsky, 1942"
.L_44cf81:
          .string "kaula"
.L_44cf87:
          .string "a=6378163."
.L_44cf92:
          .string "rf=298.24"
.L_44cf9c:
          .string "Kaula 1961"
.L_44cfa7:
          .string "lerch"
.L_44cfad:
          .string "a=6378139."
.L_44cfb8:
          .string "Lerch 1979"
.L_44cfc3:
          .string "mprts"
.L_44cfc9:
          .string "a=6397300."
.L_44cfd4:
          .byte 0x72
          .byte 0x66
          .byte 0x3d
          .byte 0x31
          .byte 0x39
.L_44cfd9:
          .string "1."
.L_44cfdc:
          .string "Maupertius 1738"
.L_44cfec:
          .byte 0x6e
          .byte 0x65
          .byte 0x77
          .byte 0x5f
.L_44cff0:
          .string "intl"
.L_44cff5:
          .string "a=6378157.5"
.L_44d001:
          .string "b=6356772.2"
.L_44d00d:
          .string "New International 1967"
.L_44d024:
          .string "plessis"
.L_44d02c:
          .string "a=6376523."
.L_44d037:
          .string "b=6355863."
.L_44d042:
          .string "Plessis 1817 (France)"
.L_44d058:
          .string "SEasia"
.L_44d05f:
          .string "a=6378155.0"
.L_44d06b:
          .string "b=6356773.3205"
.L_44d07a:
          .string "Southeast Asia"
.L_44d089:
          .string "walbeck"
.L_44d091:
          .string "a=6376896.0"
.L_44d09d:
          .string "b=6355834.8467"
.L_44d0ac:
          .string "Walbeck"
.L_44d0b4:
          .string "WGS60"
.L_44d0ba:
          .string "a=6378165.0"
.L_44d0c6:
          .string "WGS 60"
.L_44d0cd:
          .string "WGS66"
.L_44d0d3:
          .string "a=6378145.0"
.L_44d0df:
          .string "WGS 66"
.L_44d0e6:
          .string "WGS72"
.L_44d0ec:
          .string "a=6378135.0"
.L_44d0f8:
          .string "rf=298.26"
.L_44d102:
          .string "WGS 72"
.L_44d109:
          .string "rf=298.257223563"
.L_44d11a:
          .string "WGS 84"
.L_44d121:
          .string "sphere"
.L_44d128:
          .string "a=6370997.0"
.L_44d134:
          .string "b=6370997.0"
.L_44d140:
          .string "Normal Sphere (r=6370997)"
          .zero 6
.L_44d160:
          .string "Australian Natl & S. Amer. 1969"
.L_44d180:
          .string "Comm. des Poids et Mesures 1799"
.L_44d1a0:
          .byte 0xa6
          .byte 0x68
          .byte 0xe9
          .byte 0xd7
          .byte 0xf0
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44d1a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_44d1b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x85
          .byte 0x3f
.L_44d1b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x3f
.L_44d1c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x3f
.L_44d1c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3f
.L_44d1d0:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0x2a
          .byte 0x7d
          .byte 0x3f
.L_44d1d8:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0x8a
          .byte 0x3f
.L_44d1e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x3f
.L_44d1e8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x77
          .byte 0x3f
.L_44d1f0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd7
          .byte 0x3f
.L_44d1f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xd3
          .byte 0x3f
.L_44d200:
          .string "\n#"
          .zero 5
.L_44d208:
          .string "#--- following specified but NOT used\n"
.L_44d22f:
          .string "%%dd%%d\'%%.%df\"%%c"
.L_44d242:
          .string "%%dd%%02d\'%%0%d.%df\"%%c"
.L_44d25a:
          .string "%dd%d\'%c"
.L_44d263:
          .string "%dd%c"
          .zero 7
.L_44d270:
          .byte 0x7b
          .byte 0xad
          .byte 0x31
          .byte 0x73
          .byte 0xc6
          .byte 0x2d
          .byte 0x9
          .byte 0x41
.L_44d278:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc6
          .byte 0x23
          .byte 0x41
.L_44d280:
          .string "Rel. 4.9.3, 15 August 2016"
.L_44d29b:
          .string "Short line in grid catalog."
          .zero 1
.L_44d2b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x77
          .byte 0x40
.L_44d2c0:
          .string "ctable loading failed on fread() - binary incompatible?\n"
          .zero 7
.L_44d300:
          .string "ctable2 loading failed on fread() - binary incompatible?\n"
          .zero 6
.L_44d340:
          .string "ctable2 - wrong header!"
.L_44d358:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xc3
          .byte 0x40
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_65a938:
          .quad .L_401a50
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_65a940:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 8
#===================================

          .quad .L_4479a0
          .quad .L_4479e0
          .quad .L_447af0
          .quad .L_447ba0
          .quad .L_447c40
          .quad .L_449080
          .quad .L_449300
          .quad .L_449400
          .quad .L_449660
          .quad .L_449700
          .quad .L_449770
          .quad .L_449850
          .quad .L_4498c0
          .quad .L_449960
          .quad .L_4499a0
          .quad .L_4499c0
          .quad .L_449a00
          .quad .L_449a40
          .quad .L_449a80
          .quad .L_449ac0
          .quad .L_449b00
          .quad .L_449ba0
          .quad .L_449be0
          .quad .L_449c20
          .quad .L_449c90
          .quad .L_449cc0
          .quad .L_449d00
          .quad .L_449d60
          .quad .L_449dc0
          .quad .L_449e00
          .quad .L_449e40
          .quad .L_449f20
          .quad .L_449f60
          .quad .L_44a020
          .quad .L_44a220
          .quad .L_44a2b0
          .quad .L_44a320
          .quad .L_44a380
          .quad .L_44a3c0
          .quad .L_44a420
          .quad .L_44a4a0
          .quad .L_44a4e0
          .quad .L_44a520
          .quad .L_44a560
          .quad .L_44a460
          .quad .L_44a5a0
          .quad .L_44a5e0
          .quad .L_44a6b0
          .quad .L_44a6f0
          .quad .L_44a720
          .quad .L_44a760
          .quad .L_44a7c0
          .quad .L_44a820
          .quad .L_44a880
          .quad .L_44a940
          .quad .L_44a9a0
          .quad .L_44a9c0
          .quad .L_44aa20
          .quad .L_44aac0
          .quad .L_44ab40
          .quad .L_44ab80
          .quad .L_44abc0
          .quad .L_44abf0
          .quad .L_44ac20
          .quad .L_44ad20
          .quad .L_44ad50
          .quad .L_44ad70
          .quad .L_44ada0
          .quad .L_44ae20
          .quad .L_44ae60
          .quad .L_44ade0
          .quad .L_44aea0
          .quad .L_44af00
          .quad .L_44af40
          .quad .L_44af60
          .quad .L_44af80
          .quad .L_44b000
          .quad .L_44b0a0
          .quad .L_44b160
          .quad .L_44b1a0
          .quad .L_44b1e0
          .quad .L_44b240
          .quad .L_44b280
          .quad .L_44b2c0
          .quad .L_44b2f0
          .quad .L_44b340
          .quad .L_44b3a0
          .quad .L_44b3e0
          .quad .L_44b420
          .quad .L_44b6e0
          .quad .L_44b720
          .quad .L_44b760
          .quad .L_44b7c0
          .quad .L_44b820
          .quad .L_44b870
          .quad .L_44b8a0
          .quad .L_44b910
          .quad .L_44b8f0
          .quad .L_44b8d0
          .quad .L_44b930
          .quad .L_44b980
          .quad .L_44b9d0
          .quad .L_44ba10
          .quad .L_44ba40
          .quad .L_44ba60
          .quad .L_44bac0
          .quad .L_44bbe0
          .quad .L_44bb40
          .quad .L_44bb80
          .quad .L_44bba0
          .quad .L_44bc20
          .quad .L_44bca0
          .quad .L_44bda0
          .quad .L_44be30
          .quad .L_44be60
          .quad .L_44bec0
          .quad .L_44bf20
          .quad .L_44bf90
          .quad .L_44bfb0
          .quad .L_44bfd0
          .quad .L_44c020
          .quad .L_44c050
          .quad .L_44c070
          .quad .L_44c0e0
          .quad .L_44c140
          .quad .L_44c160
          .quad .L_44c190
          .quad .L_44c1b0
          .quad .L_44c200
          .quad .L_44c220
          .quad .L_44c250
          .quad .L_44c270
          .quad .L_44c2e0
          .quad .L_44c5b0
          .quad .L_44c640
          .quad .L_44c6a0
          .quad .L_44c700
          .quad .L_44c720
          .quad .L_44c6e0
          .quad .L_44c780
          .quad .L_44c7c0
          .quad .L_44c800
          .quad .L_44c850
          .quad .L_44c8a0
          .quad .L_44c8d0
          .quad .L_44c900
          .quad .L_44c990
          .quad .L_44c970
          .quad .L_44c930
          .quad .L_44c950
          .quad .L_44c9a8
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 32
.L_65b260:
          .quad .L_447279
          .quad .L_421ca0
          .quad .L_447140
          .quad .L_41c5d0
          .quad .L_448079
          .quad .L_430e10
          .quad .L_447145
          .quad .L_431810
          .quad .L_44714c
          .quad .L_41e790
          .quad .L_447151
          .quad .L_431e00
          .quad .L_447157
          .quad .L_431a00
          .quad .L_44715e
          .quad .L_431df0
          .quad .L_447164
          .quad .L_4228f0
          .quad .L_447169
          .quad .L_4385d0
          .quad .L_44716f
          .quad .L_423030
          .quad .L_447175
          .quad .L_406330
          .quad .L_44717d
          .quad .L_4157e0
          .quad .L_447182
          .quad .L_429660
          .quad .L_4472ad
          .quad .L_4297d0
          .quad .L_447354
          .quad .L_429c30
          .quad .L_447187
          .quad .L_432750
          .quad .L_44718d
          .quad .L_438860
          .quad .L_447193
          .quad .L_438a70
          .quad .L_44719a
          .quad .L_438c30
          .quad .L_4471a0
          .quad .L_438d50
          .quad .L_4471a6
          .quad .L_438e90
          .quad .L_4471ab
          .quad .L_439130
          .quad .L_4471b0
          .quad .L_4395c0
          .quad .L_4471b5
          .quad .L_4398e0
          .quad .L_4471ba
          .quad .L_439a40
          .quad .L_4471bf
          .quad .L_43af80
          .quad .L_4471c4
          .quad .L_429dc0
          .quad .L_4471c8
          .quad .L_423750
          .quad .L_4471cd
          .quad .L_428480
          .quad .L_4471d3
          .quad .L_438170
          .quad .L_4471da
          .quad .L_439c30
          .quad .L_4471e0
          .quad .L_441150
          .quad .L_4471e5
          .quad .L_439f90
          .quad .L_4471ec
          .quad .L_429f10
          .quad .L_4471f1
          .quad .L_442660
          .quad .L_4471f9
          .quad .L_437420
          .quad .L_4471fe
          .quad .L_43a0d0
          .quad .L_447204
          .quad .L_43afa0
          .quad .L_44720c
          .quad .L_41ccc0
          .quad .L_447211
          .quad .L_43b220
          .quad .L_447217
          .quad .L_41e780
          .quad .L_44721c
          .quad .L_41e7a0
          .quad .L_447221
          .quad .L_432b80
          .quad .L_447228
          .quad .L_43c0e0
          .quad .L_447230
          .quad .L_4055e0
          .quad .L_44722f
          .quad .L_4055f0
          .quad .L_447238
          .quad .L_4189c0
          .quad .L_447240
          .quad .L_419190
          .quad .L_44724b
          .quad .L_4175f0
          .quad .L_447252
          .quad .L_43bc30
          .quad .L_447256
          .quad .L_425a60
          .quad .L_44725c
          .quad .L_424d90
          .quad .L_447261
          .quad .L_441230
          .quad .L_447266
          .quad .L_4395d0
          .quad .L_44726b
          .quad .L_426350
          .quad .L_447272
          .quad .L_42aa60
          .quad .L_447278
          .quad .L_41dca0
          .quad .L_44727d
          .quad .L_432ec0
          .quad .L_447284
          .quad .L_433030
          .quad .L_447289
          .quad .L_433190
          .quad .L_44728e
          .quad .L_442550
          .quad .L_447295
          .quad .L_442540
          .quad .L_44729c
          .quad .L_442520
          .quad .L_4472a4
          .quad .L_442530
          .quad .L_4472ac
          .quad .L_426e80
          .quad .L_4472b0
          .quad .L_436910
          .quad .L_4472b5
          .quad .L_421cb0
          .quad .L_4472ba
          .quad .L_41e770
          .quad .L_4472c1
          .quad .L_43c410
          .quad .L_44a861
          .quad .L_42bd90
          .quad .L_4472c7
          .quad .L_4413f0
          .quad .L_4472cd
          .quad .L_43c720
          .quad .L_4472d5
          .quad .L_43ca30
          .quad .L_4472dc
          .quad .L_43ce40
          .quad .L_4472e3
          .quad .L_43af90
          .quad .L_4473d7
          .quad .L_42d440
          .quad .L_4472ea
          .quad .L_41e760
          .quad .L_447195
          .quad .L_42d5b0
          .quad .L_4472f1
          .quad .L_42d020
          .quad .L_4472f9
          .quad .L_43d2e0
          .quad .L_4472fe
          .quad .L_41aa80
          .quad .L_447309
          .quad .L_428490
          .quad .L_44730f
          .quad .L_4284a0
          .quad .L_447315
          .quad .L_4284b0
          .quad .L_44731b
          .quad .L_405930
          .quad .L_447324
          .quad .L_405c70
          .quad .L_44732e
          .quad .L_43d560
          .quad .L_447333
          .quad .L_43d7f0
          .quad .L_44733a
          .quad .L_4335d0
          .quad .L_447340
          .quad .L_41f1d0
          .quad .L_447346
          .quad .L_41f530
          .quad .L_44734b
          .quad .L_4340e0
          .quad .L_447353
          .quad .L_42dc00
          .quad .L_447358
          .quad .L_4346e0
          .quad .L_4473d6
          .quad .L_42edf0
          .quad .L_44735c
          .quad .L_431e10
          .quad .L_447362
          .quad .L_41fb60
          .quad .L_447368
          .quad .L_4284c0
          .quad .L_44736f
          .quad .L_43da20
          .quad .L_44922b
          .quad .L_416b50
          .quad .L_4473cc
          .quad .L_427780
          .quad .L_447379
          .quad .L_4395f0
          .quad .L_44737f
          .quad .L_43dd10
          .quad .L_447385
          .quad .L_43df40
          .quad .L_44738b
          .quad .L_43df50
          .quad .L_447392
          .quad .L_43e250
          .quad .L_447399
          .quad .L_43e5b0
          .quad .L_44739f
          .quad .L_43e5c0
          .quad .L_4473a6
          .quad .L_43ea70
          .quad .L_4473ac
          .quad .L_43ea80
          .quad .L_4473b3
          .quad .L_441310
          .quad .L_4473bb
          .quad .L_440040
          .quad .L_4473bf
          .quad .L_440580
          .quad .L_4473c5
          .quad .L_428fb0
          .quad .L_4473cb
          .quad .L_427a10
          .quad .L_4473d1
          .quad .L_440e60
          .quad .L_447207
          .quad .L_43af70
          .quad .L_4473d5
          .quad .L_42f580
          .quad .L_4473dc
          .quad .L_420e00
          .quad .L_4473e2
          .quad .L_4211b0
          .quad .L_4473e9
          .quad .L_43a660
          .quad .L_4473f1
          .quad .L_42f730
          .quad .L_4473f5
          .quad .L_42f950
          .quad .L_4473fa
          .quad .L_42fb10
          .quad .L_447400
          .quad .L_4284d0
          .quad .L_4471d4
          .quad .L_4308a0
          .quad .L_447407
          .quad .L_434ed0
          .quad .L_44740d
          .quad .L_41f1e0
          .quad .L_447413
          .quad .L_419ba0
          .quad .L_44741f
          .quad .L_420e10
          .quad .L_447423
          .quad .L_4416d0
          .quad .L_447428
          .quad .L_4419d0
          .quad .L_44742f
          .quad .L_4383a0
          .quad .L_447433
          .quad .L_4358a0
          .quad .L_447439
          .quad .L_435dd0
          .quad .L_447440
          .quad .L_435de0
          .quad .L_447447
          .quad .L_4362b0
          .quad .L_44744e
          .quad .L_4284e0
          .quad .L_447454
          .quad .L_418dc0
          .quad .L_44745f
          .quad .L_4419e0
          .quad .L_447464
          .quad .L_441b80
          .quad .L_447469
          .quad .L_441d50
          .quad .L_44746e
          .quad .L_43d2f0
          .quad .L_447473
          .quad .L_43d300
          .quad .L_447478
          .quad .L_4395e0
          .quad .L_44747d
          .quad .L_436470
          .quad .L_447482
          .quad .L_43e260
          .quad .L_447488
          .quad .L_441f20
          .quad .L_44748e
          .quad .L_4421b0
          .quad .L_447494
          .quad .L_431820
          .zero 16
.L_65bbe0:
          .quad .L_447279
          .quad .L_421b70
          .byte 0x30
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65bbf8:
          .quad .L_447140
          .quad .L_41c580
          .byte 0xb0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448079
          .quad .L_430dc0
          .byte 0x48
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447145
          .quad .L_4316a0
          .byte 0x58
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44714c
          .quad .L_41e5f0
          .byte 0xd0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447151
          .quad .L_431cf0
          .byte 0x70
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447157
          .quad .L_431960
          .byte 0x60
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44715e
          .quad .L_431c50
          .byte 0x78
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447164
          .quad .L_4228a0
          .byte 0x38
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447169
          .quad .L_438550
          .byte 0x10
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44716f
          .quad .L_422fe0
          .byte 0x40
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447175
          .quad .L_406240
          .byte 0x68
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44717d
          .quad .L_415700
          .byte 0x70
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447182
          .quad .L_4295b0
          .byte 0xc0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472ad
          .quad .L_429730
          .byte 0xc8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447354
          .quad .L_429be0
          .byte 0xd0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447187
          .quad .L_432700
          .byte 0x80
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44718d
          .quad .L_4387c0
          .byte 0x18
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447193
          .quad .L_4389d0
          .byte 0x20
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44719a
          .quad .L_438b90
          .byte 0x28
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471a0
          .quad .L_438cd0
          .byte 0x30
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471a6
          .quad .L_438df0
          .byte 0x38
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471ab
          .quad .L_439090
          .byte 0x40
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471b0
          .quad .L_439300
          .byte 0x60
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471b5
          .quad .L_439840
          .byte 0x68
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471ba
          .quad .L_4399a0
          .byte 0x70
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471bf
          .quad .L_43ad60
          .byte 0xa8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471c4
          .quad .L_429d70
          .byte 0xd8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471c8
          .quad .L_423700
          .byte 0x48
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471cd
          .quad .L_4281e0
          .byte 0xb0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471d3
          .quad .L_438120
          .byte 0x8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471da
          .quad .L_439b90
          .byte 0x78
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471e0
          .quad .L_441100
          .byte 0x98
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471e5
          .quad .L_439f40
          .byte 0x80
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471ec
          .quad .L_429e70
          .byte 0xe0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471f1
          .quad .L_4425a0
          .byte 0xf8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471f9
          .quad .L_4373d0
          .byte 0xf8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471fe
          .quad .L_43a030
          .byte 0x88
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447204
          .quad .L_43af20
          .byte 0x98
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44720c
          .quad .L_41cc70
          .byte 0xb8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447211
          .quad .L_43b1d0
          .byte 0xb8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447217
          .quad .L_41e4d0
          .byte 0xd8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44721c
          .quad .L_41e710
          .byte 0xc8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447221
          .quad .L_432b30
          .byte 0x88
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447228
          .quad .L_43c040
          .byte 0xc8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447230
          .quad .L_4053d0
          .byte 0x50
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44722f
          .quad .L_405590
          .byte 0x48
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447238
          .quad .L_418970
          .byte 0x88
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447240
          .quad .L_419140
          .byte 0x98
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44724b
          .quad .L_4175a0
          .byte 0x80
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447252
          .quad .L_43bbe0
          .byte 0xc0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447256
          .quad .L_425a10
          .byte 0x58
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44725c
          .quad .L_424d40
          .byte 0x50
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447261
          .quad .L_4411e0
          .byte 0x90
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447266
          .quad .L_4393d0
          .byte 0x58
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44726b
          .quad .L_426300
          .byte 0x60
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447272
          .quad .L_42aa10
          .byte 0xe8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447278
          .quad .L_41dc50
          .byte 0xc0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44727d
          .quad .L_432e70
          .byte 0x90
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447284
          .quad .L_432fb0
          .byte 0x98
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447289
          .quad .L_433110
          .byte 0xa0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44728e
          .quad .L_442460
          .byte 0xd8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447295
          .quad .L_4423a0
          .byte 0xe0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44729c
          .quad .L_442220
          .byte 0xf0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472a4
          .quad .L_4422e0
          .byte 0xe8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472ac
          .quad .L_426e30
          .byte 0x68
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472b0
          .quad .L_4368c0
          .byte 0xf0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472b5
          .quad .L_421c50
          .byte 0x28
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472ba
          .quad .L_41e400
          .byte 0xe0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472c1
          .quad .L_43c3c0
          .byte 0xd0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44a861
          .quad .L_42bd40
          .byte 0xf0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472c7
          .quad .L_4413a0
          .byte 0x80
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472cd
          .quad .L_43c680
          .byte 0xd8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472d5
          .quad .L_43c990
          .byte 0xe0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472dc
          .quad .L_43cda0
          .byte 0xe8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472e3
          .quad .L_43ae00
          .byte 0xa0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473d7
          .quad .L_42d3f0
          .byte 0x0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472ea
          .quad .L_41e340
          .byte 0xe8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447195
          .quad .L_42d510
          .byte 0x8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472f1
          .quad .L_42cfd0
          .byte 0xf8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472f9
          .quad .L_43d0f0
          .byte 0x0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4472fe
          .quad .L_41aa30
          .byte 0xa8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447309
          .quad .L_4282a0
          .byte 0xa0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44730f
          .quad .L_428300
          .byte 0x98
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447315
          .quad .L_428360
          .byte 0x90
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44731b
          .quad .L_405890
          .byte 0x58
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447324
          .quad .L_405bd0
          .byte 0x60
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44732e
          .quad .L_43d4c0
          .byte 0x8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447333
          .quad .L_43d750
          .byte 0x10
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44733a
          .quad .L_433550
          .byte 0xa8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447340
          .quad .L_41f010
          .byte 0xf8
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447346
          .quad .L_41f410
          .byte 0x0
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44734b
          .quad .L_434090
          .byte 0xb0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447353
          .quad .L_42dbb0
          .byte 0x10
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447358
          .quad .L_434690
          .byte 0xb8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473d6
          .quad .L_42eda0
          .byte 0x18
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44735c
          .quad .L_431da0
          .byte 0x68
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447362
          .quad .L_41fb10
          .byte 0x8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447368
          .quad .L_4283c0
          .byte 0x88
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44736f
          .quad .L_43d980
          .byte 0x18
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44922b
          .quad .L_416b00
          .byte 0x78
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473cc
          .quad .L_427730
          .byte 0x70
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447379
          .quad .L_439570
          .byte 0x48
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44737f
          .quad .L_43dc70
          .byte 0x20
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447385
          .quad .L_43de40
          .byte 0x30
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44738b
          .quad .L_43def0
          .byte 0x28
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447392
          .quad .L_43e140
          .byte 0x40
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447399
          .quad .L_43e4a0
          .byte 0x50
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44739f
          .quad .L_43e560
          .byte 0x48
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473a6
          .quad .L_43e940
          .byte 0x60
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473ac
          .quad .L_43ea20
          .byte 0x58
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473b3
          .quad .L_4412c0
          .byte 0x88
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473bb
          .quad .L_43fff0
          .byte 0x68
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473bf
          .quad .L_4404e0
          .byte 0x70
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473c5
          .quad .L_428f60
          .byte 0xb8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473cb
          .quad .L_4279c0
          .byte 0x78
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473d1
          .quad .L_440e10
          .byte 0x78
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447207
          .quad .L_43acc0
          .byte 0xb0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473d5
          .quad .L_42f530
          .byte 0x20
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473dc
          .quad .L_420c80
          .byte 0x18
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473e2
          .quad .L_421160
          .byte 0x20
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473e9
          .quad .L_43a610
          .byte 0x90
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473f1
          .quad .L_42f690
          .byte 0x28
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473f5
          .quad .L_42f8b0
          .byte 0x30
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4473fa
          .quad .L_42fa70
          .byte 0x38
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447400
          .quad .L_428240
          .byte 0xa8
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4471d4
          .quad .L_430850
          .byte 0x40
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447407
          .quad .L_434e80
          .byte 0xc0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44740d
          .quad .L_41f180
          .byte 0xf0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447413
          .quad .L_419b50
          .byte 0xa0
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44741f
          .quad .L_420db0
          .byte 0x10
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447423
          .quad .L_441680
          .byte 0xa0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447428
          .quad .L_4418c0
          .byte 0xb0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44742f
          .quad .L_438350
          .byte 0x0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447433
          .quad .L_435800
          .byte 0xc8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447439
          .quad .L_435ce0
          .byte 0xd8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447440
          .quad .L_435d80
          .byte 0xd0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447447
          .quad .L_436230
          .byte 0xe0
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44744e
          .quad .L_428420
          .byte 0x80
          .byte 0xaa
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447454
          .quad .L_418d70
          .byte 0x90
          .byte 0xa9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44745f
          .quad .L_441980
          .byte 0xa8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447464
          .quad .L_441ae0
          .byte 0xb8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447469
          .quad .L_441d00
          .byte 0xc0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44746e
          .quad .L_43d1c0
          .byte 0xf8
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447473
          .quad .L_43d290
          .byte 0xf0
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447478
          .quad .L_4394a0
          .byte 0x50
          .byte 0xac
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44747d
          .quad .L_4363d0
          .byte 0xe8
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447482
          .quad .L_43e200
          .byte 0x38
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447488
          .quad .L_441ed0
          .byte 0xc8
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44748e
          .quad .L_442160
          .byte 0xd0
          .byte 0xad
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447494
          .quad .L_4317c0
          .byte 0x50
          .byte 0xab
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65ca20:
          .quad .L_4475b4
          .quad .L_4475b7
          .quad .L_4475bd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_65ca40:
          .quad .L_44ceba
          .quad .L_44cfd9
          .quad .L_4475c7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .quad .L_4475cd
          .quad .L_4475d0
          .quad .L_4475d5
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
          .quad .L_4475df
          .quad .L_4475e2
          .quad .L_4475e8
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
          .quad .L_4475f3
          .quad .L_4475f6
          .quad .L_4475fd
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
          .quad .L_447608
          .quad .L_44760c
          .quad .L_447613
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x9c
          .byte 0x40
          .quad .L_447702
          .quad .L_44762f
          .quad .L_447636
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x3f
          .quad .L_447802
          .quad .L_447649
          .quad .L_447650
          .byte 0xfd
          .byte 0x87
          .byte 0xf4
          .byte 0xdb
          .byte 0xd7
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_4477e4
          .quad .L_447663
          .quad .L_44766a
          .byte 0xfb
          .byte 0xcb
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .quad .L_4477ae
          .quad .L_44767d
          .quad .L_447686
          .byte 0x4c
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0x25
          .byte 0x99
          .byte 0x40
          .quad .L_4476a1
          .quad .L_4476a6
          .quad .L_4476ad
          .byte 0xfb
          .byte 0xcb
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xfd
          .byte 0x3f
          .quad .L_447820
          .quad .L_4476c2
          .quad .L_4476ca
          .byte 0x3d
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .quad .L_4476de
          .quad .L_4476e3
          .quad .L_4476ec
          .byte 0xa0
          .byte 0x38
          .byte 0x80
          .byte 0x7e
          .byte 0xdf
          .byte 0xbf
          .byte 0xc9
          .byte 0x3f
          .quad .L_4476ff
          .quad .L_447705
          .quad .L_44770e
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x3f
          .quad .L_447723
          .quad .L_447729
          .quad .L_44773b
          .byte 0x38
          .byte 0x70
          .byte 0x82
          .byte 0x6a
          .byte 0xda
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_447750
          .quad .L_447756
          .quad .L_447768
          .byte 0x5c
          .byte 0xa8
          .byte 0xc3
          .byte 0x9f
          .byte 0xc7
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .quad .L_44777d
          .quad .L_447783
          .quad .L_447795
          .byte 0xbe
          .byte 0x83
          .byte 0xd6
          .byte 0x3d
          .byte 0xe9
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .quad .L_4477ab
          .quad .L_4477b1
          .quad .L_4477c3
          .byte 0xab
          .byte 0x24
          .byte 0x4c
          .byte 0x8d
          .byte 0x63
          .byte 0x25
          .byte 0x99
          .byte 0x40
          .quad .L_4477e0
          .quad .L_4477e7
          .quad .L_4477f2
          .byte 0x1e
          .byte 0xfd
          .byte 0xe
          .byte 0xc9
          .byte 0xb9
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .quad .L_4477fe
          .quad .L_447805
          .quad .L_447810
          .byte 0xbf
          .byte 0xa8
          .byte 0xb4
          .byte 0x30
          .byte 0xd1
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_44781c
          .quad .L_447823
          .quad .L_44782f
          .byte 0x5
          .byte 0x4e
          .byte 0x3a
          .byte 0xba
          .byte 0xdf
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65cce0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65cdc0:
          .quad .L_406390
          .quad .L_406380
          .quad .L_406370
          .quad .L_406360
          .quad .L_406340
          .zero 24
.L_65ce00:
          .quad .L_447e68
          .quad .L_447e72
          .quad .L_447e76
          .quad .L_447e7d
          .quad .L_447e8b
          .quad .L_447e91
          .quad .L_447e9f
          .quad .L_447ea6
          .quad .L_447eb3
          .quad .L_447eba
          .quad .L_447ec7
          .quad .L_447ecc
          .quad .L_447ed8
          .quad .L_447edd
          .quad .L_447ee9
          .quad .L_447ef1
          .quad .L_447f00
          .quad .L_447f06
          .quad .L_447f0e
          .quad .L_447f17
          .quad .L_447f23
          .quad .L_447f2d
          .quad .L_447f39
          .quad .L_447f40
          .quad .L_447f4f
          .quad .L_447f54
          .zero 16
.L_65cee0:
          .quad .L_447f61
          .quad .L_447f67
          .quad .L_447f61
          .quad .L_446f9c
          .quad .L_447f75
          .quad .L_447f7c
          .quad .L_447f99
          .quad .L_4480a8
          .quad .L_447f9f
          .quad .L_447f67
          .quad .L_447f99
          .quad .L_447fa5
          .quad .L_447fbf
          .quad .L_4480d0
          .quad .L_447fc5
          .quad .L_447fcc
          .quad .L_447fe6
          .quad .L_448108
          .quad .L_447fee
          .quad .L_447ff5
          .quad .L_448011
          .quad .L_44801a
          .quad .L_448033
          .quad .L_44803d
          .quad .L_448053
          .quad .L_448138
          .quad .L_447fee
          .quad .L_448061
          .quad .L_44806f
          .quad .L_448170
          .quad .L_448075
          .quad .L_44807e
          .quad .L_44808b
          .quad .L_4481b0
          .quad .L_44cff0
          .quad .L_4481e8
          .quad .L_448092
          .quad .L_448208
          .quad .L_448079
          .quad .L_448099
          .zero 32
.L_65d040:
          .string "step"
          .zero 27
.L_65d060:
          .quad .L_449808
          .quad .L_4191a0
          .quad .L_4191a0
          .quad .L_44980c
          .quad .L_449821
          .quad .L_419600
          .quad .L_4191b0
          .quad .L_44982d
          .quad .L_44983a
          .quad .L_4192c0
          .quad .L_4192e0
          .quad .L_449843
          .zero 32
.L_65d0e0:
          .byte 0x40
          .byte 0x89
          .byte 0xcf
          .byte 0x9d
          .byte 0x60
          .byte 0x7f
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x4e
          .byte 0x62
          .byte 0x6b
          .byte 0x11
          .byte 0xac
          .byte 0x95
          .byte 0x3f
          .byte 0xec
          .byte 0xad
          .byte 0x37
          .byte 0x20
          .byte 0xf8
          .byte 0xce
          .byte 0x6e
          .byte 0x3f
          .byte 0xa
          .byte 0x86
          .byte 0xce
          .byte 0xc6
          .byte 0xa5
          .byte 0x85
          .byte 0xba
          .byte 0xbf
          .byte 0x56
          .byte 0x72
          .byte 0x5f
          .byte 0x18
          .byte 0xfa
          .byte 0x71
          .byte 0xad
          .byte 0xbf
          .byte 0xab
          .byte 0x96
          .byte 0x74
          .byte 0x94
          .byte 0x83
          .byte 0xd9
          .byte 0xa0
          .byte 0xbf
          .byte 0xb3
          .byte 0x67
          .byte 0x2a
          .byte 0x1f
          .byte 0xdd
          .byte 0x63
          .byte 0xa0
          .byte 0xbf
          .byte 0x9d
          .byte 0x61
          .byte 0xf
          .byte 0x92
          .byte 0xaa
          .byte 0x92
          .byte 0xa9
          .byte 0x3f
          .byte 0x9
          .byte 0x89
          .byte 0xb4
          .byte 0x8d
          .byte 0x3f
          .byte 0x51
          .byte 0xbf
          .byte 0x3f
          .byte 0xfc
          .byte 0x36
          .byte 0xc4
          .byte 0x78
          .byte 0xcd
          .byte 0xab
          .byte 0x9a
          .byte 0x3f
          .byte 0x2f
          .byte 0x19
          .byte 0xc7
          .byte 0x48
          .byte 0xf6
          .byte 0x8
          .byte 0xb7
          .byte 0x3f
          .byte 0x94
          .byte 0xea
          .byte 0x4c
          .byte 0xeb
          .byte 0x80
          .byte 0x35
          .byte 0x48
          .byte 0x3f
          .byte 0x4f
          .byte 0x63
          .byte 0x31
          .byte 0xa0
          .byte 0xcd
          .byte 0x60
          .byte 0xc2
          .byte 0xbf
          .byte 0xbd
          .byte 0xaf
          .byte 0x25
          .byte 0x3f
          .byte 0x3d
          .byte 0x11
          .byte 0x7f
          .byte 0x3f
          .byte 0xfe
          .byte 0x72
          .byte 0x77
          .byte 0xe7
          .byte 0x9a
          .byte 0x13
          .byte 0xc1
          .byte 0xbf
          .byte 0x56
          .byte 0xd2
          .byte 0x2f
          .byte 0xb6
          .byte 0xb5
          .byte 0x2a
          .byte 0x96
          .byte 0xbf
          .byte 0xbe
          .byte 0x68
          .byte 0x8f
          .byte 0x17
          .byte 0xd2
          .byte 0xe1
          .byte 0xb3
          .byte 0x3f
          .byte 0x35
          .byte 0xab
          .byte 0x88
          .byte 0xe4
          .byte 0x75
          .byte 0xe
          .byte 0x97
          .byte 0xbf
          .byte 0x95
          .byte 0xd7
          .byte 0xa5
          .byte 0xa1
          .byte 0xa1
          .byte 0xda
          .byte 0xb5
          .byte 0x3f
.L_65d180:
          .byte 0x5
          .byte 0xec
          .byte 0xb4
          .byte 0x7f
          .byte 0xaf
          .byte 0x72
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xc6
          .byte 0x1c
          .byte 0xba
          .byte 0x8f
          .byte 0x92
          .byte 0x95
          .byte 0x3f
          .byte 0x37
          .byte 0x60
          .byte 0xa1
          .byte 0x20
          .byte 0xc2
          .byte 0x9
          .byte 0x76
          .byte 0x3f
          .byte 0x20
          .byte 0x42
          .byte 0x5c
          .byte 0x39
          .byte 0x7b
          .byte 0x67
          .byte 0xba
          .byte 0xbf
          .byte 0x17
          .byte 0x30
          .byte 0xdc
          .byte 0x14
          .byte 0xea
          .byte 0x44
          .byte 0xad
          .byte 0xbf
          .byte 0xad
          .byte 0xa
          .byte 0x1e
          .byte 0xf0
          .byte 0xa
          .byte 0x8e
          .byte 0xa0
          .byte 0xbf
          .byte 0x8
          .byte 0x85
          .byte 0x52
          .byte 0xc5
          .byte 0x9e
          .byte 0x87
          .byte 0xa0
          .byte 0xbf
          .byte 0x87
          .byte 0x5a
          .byte 0x89
          .byte 0x2f
          .byte 0xc9
          .byte 0xb7
          .byte 0xa9
          .byte 0x3f
          .byte 0x19
          .byte 0xaf
          .byte 0xd4
          .byte 0xe
          .byte 0xda
          .byte 0x6
          .byte 0xbf
          .byte 0x3f
          .byte 0xb2
          .byte 0xda
          .byte 0xfc
          .byte 0xbf
          .byte 0xea
          .byte 0xc8
          .byte 0x99
          .byte 0x3f
          .byte 0xb2
          .byte 0x50
          .byte 0xc6
          .byte 0x53
          .byte 0xea
          .byte 0xed
          .byte 0xb6
          .byte 0x3f
          .byte 0x10
          .byte 0xcb
          .byte 0x66
          .byte 0xe
          .byte 0x49
          .byte 0x2d
          .byte 0x54
          .byte 0xbf
          .byte 0x8b
          .byte 0xe3
          .byte 0x1b
          .byte 0x65
          .byte 0x58
          .byte 0x20
          .byte 0xc2
          .byte 0xbf
          .byte 0x75
          .byte 0xe4
          .byte 0xed
          .byte 0xad
          .byte 0xed
          .byte 0x92
          .byte 0x7d
          .byte 0x3f
          .byte 0xbb
          .byte 0xf4
          .byte 0x8a
          .byte 0x2
          .byte 0xd8
          .byte 0xdb
          .byte 0xc0
          .byte 0xbf
          .byte 0xc0
          .byte 0x4c
          .byte 0xca
          .byte 0x93
          .byte 0x5a
          .byte 0xde
          .byte 0x93
          .byte 0xbf
          .byte 0x1a
          .byte 0x66
          .byte 0xd
          .byte 0x83
          .byte 0x9e
          .byte 0x72
          .byte 0xb3
          .byte 0x3f
          .byte 0x5f
          .byte 0x10
          .byte 0xec
          .byte 0x53
          .byte 0xe9
          .byte 0x82
          .byte 0x95
          .byte 0xbf
          .byte 0x8a
          .byte 0x8a
          .byte 0xdd
          .byte 0xe3
          .byte 0xf1
          .byte 0x59
          .byte 0xb5
          .byte 0x3f
.L_65d220:
          .byte 0x84
          .byte 0x8b
          .byte 0xcb
          .byte 0xa7
          .byte 0x7d
          .byte 0xe9
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xa
          .byte 0x2f
          .byte 0x1c
          .byte 0x63
          .byte 0x82
          .byte 0x75
          .byte 0x3f
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0x70
          .byte 0xbf
          .byte 0x53
          .byte 0xf8
          .byte 0x22
          .byte 0x90
          .byte 0x1
          .byte 0x8f
          .byte 0x7e
          .byte 0x3f
          .byte 0x83
          .byte 0xc0
          .byte 0xca
          .byte 0xa1
          .byte 0x45
          .byte 0xb6
          .byte 0x73
          .byte 0x3f
          .byte 0xd9
          .byte 0x6b
          .byte 0x8b
          .byte 0x7c
          .byte 0xa8
          .byte 0x7e
          .byte 0x8f
          .byte 0xbf
          .byte 0xf1
          .byte 0x3f
          .byte 0x43
          .byte 0x49
          .byte 0x92
          .byte 0x31
          .byte 0xc9
          .byte 0xbf
          .byte 0x38
          .byte 0x55
          .byte 0xad
          .byte 0x3b
          .byte 0xcc
          .byte 0x4d
          .byte 0xb0
          .byte 0x3f
          .byte 0xbe
          .byte 0x20
          .byte 0xd8
          .byte 0xa7
          .byte 0xd2
          .byte 0x5
          .byte 0xc2
          .byte 0xbf
          .byte 0xc4
          .byte 0x38
          .byte 0xc9
          .byte 0xa0
          .byte 0x24
          .byte 0x6e
          .byte 0xd7
          .byte 0x3f
          .byte 0x81
          .byte 0x7f
          .byte 0xa5
          .byte 0x4e
          .byte 0x9b
          .byte 0xcc
          .byte 0xd2
          .byte 0xbf
.L_65d280:
          .byte 0xb7
          .byte 0x31
          .byte 0x2c
          .byte 0x35
          .byte 0x31
          .byte 0xd3
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x21
          .byte 0xaf
          .byte 0x62
          .byte 0x4c
          .byte 0x55
          .byte 0x75
          .byte 0x3f
          .byte 0x37
          .byte 0x3c
          .byte 0x18
          .byte 0xc
          .byte 0x9
          .byte 0x73
          .byte 0x66
          .byte 0xbf
          .byte 0xfc
          .byte 0x98
          .byte 0xc5
          .byte 0x7a
          .byte 0x59
          .byte 0xc9
          .byte 0x7d
          .byte 0x3f
          .byte 0xc9
          .byte 0x99
          .byte 0xdc
          .byte 0xde
          .byte 0x24
          .byte 0xbc
          .byte 0x73
          .byte 0x3f
          .byte 0xb
          .byte 0x3d
          .byte 0x7
          .byte 0x3b
          .byte 0x6a
          .byte 0xf1
          .byte 0x8e
          .byte 0xbf
          .byte 0xdc
          .byte 0xf8
          .byte 0x6e
          .byte 0x4e
          .byte 0x80
          .byte 0xbc
          .byte 0xc8
          .byte 0xbf
          .byte 0x16
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xd5
          .byte 0x73
          .byte 0xb0
          .byte 0x3f
          .byte 0xa1
          .byte 0x53
          .byte 0xeb
          .byte 0x58
          .byte 0x0
          .byte 0xae
          .byte 0xc1
          .byte 0xbf
          .byte 0x4b
          .byte 0x7a
          .byte 0x73
          .byte 0x13
          .byte 0x10
          .byte 0xee
          .byte 0xd6
          .byte 0x3f
          .byte 0x1c
          .byte 0xff
          .byte 0x4f
          .byte 0xf
          .byte 0x1b
          .byte 0x76
          .byte 0xd2
          .byte 0xbf
.L_65d2e0:
          .byte 0x31
          .byte 0x94
          .byte 0x13
          .byte 0xed
          .byte 0x2a
          .byte 0xa4
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xe5
          .byte 0x24
          .byte 0x94
          .byte 0xbe
          .byte 0x10
          .byte 0xaa
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0xaa
          .byte 0xee
          .byte 0x91
          .byte 0xcd
          .byte 0x55
          .byte 0xb3
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65d340:
          .byte 0xf1
          .byte 0x9b
          .byte 0xc2
          .byte 0x4a
          .byte 0x5
          .byte 0x15
          .byte 0xe7
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x63
          .byte 0x66
          .byte 0x55
          .byte 0x3a
          .byte 0xe
          .byte 0x82
          .byte 0xbf
          .byte 0xea
          .byte 0xb0
          .byte 0xc2
          .byte 0x2d
          .byte 0x1f
          .byte 0x49
          .byte 0x79
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65d380:
          .byte 0x2f
          .byte 0xdd
          .byte 0x24
          .byte 0x6
          .byte 0x81
          .byte 0x95
          .byte 0xed
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xc0
          .byte 0x3e
          .byte 0x3a
          .byte 0x75
          .byte 0xe5
          .byte 0x93
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0xb9
          .byte 0xbf
          .byte 0x47
          .byte 0x34
          .byte 0x7a
          .byte 0xe4
          .byte 0x3f
          .byte 0x80
          .byte 0x63
          .byte 0x7c
          .byte 0xd
          .byte 0x82
          .byte 0x64
          .byte 0xc1
          .byte 0xbf
          .byte 0xbc
          .byte 0xb5
          .byte 0xac
          .byte 0xf8
          .byte 0xf
          .byte 0x34
          .byte 0xb0
          .byte 0x3f
          .byte 0xd
          .byte 0x3a
          .byte 0xdf
          .byte 0x57
          .byte 0xfe
          .byte 0xdf
          .byte 0x99
          .byte 0xbf
          .byte 0x56
          .byte 0x7c
          .byte 0xe8
          .byte 0x27
          .byte 0x41
          .byte 0x24
          .byte 0x88
          .byte 0x3f
          .byte 0x65
          .byte 0x9a
          .byte 0x9f
          .byte 0xd1
          .byte 0xc
          .byte 0x98
          .byte 0x76
          .byte 0xbf
          .byte 0x1d
          .byte 0x36
          .byte 0x36
          .byte 0xe0
          .byte 0x98
          .byte 0xa
          .byte 0x66
          .byte 0x3f
          .byte 0x7c
          .byte 0xd3
          .byte 0xf4
          .byte 0xd9
          .byte 0x1
          .byte 0xd7
          .byte 0x55
          .byte 0xbf
          .byte 0xdc
          .byte 0x11
          .byte 0x4e
          .byte 0xb
          .byte 0x5e
          .byte 0xf4
          .byte 0x45
          .byte 0x3f
.L_65d408:
          .byte 0x80
          .byte 0x9f
          .byte 0x71
          .byte 0xe1
          .byte 0x40
          .byte 0x48
          .byte 0x36
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x7f
          .byte 0x6c
          .byte 0x35
          .byte 0xd3
          .byte 0x0
          .byte 0xf9
          .byte 0x3f
          .byte 0x35
          .byte 0xd0
          .byte 0x32
          .byte 0x8a
          .byte 0xe2
          .byte 0x97
          .byte 0xe0
          .byte 0x3f
          .byte 0xaf
          .byte 0x56
          .byte 0x16
          .byte 0x1a
          .byte 0xc2
          .byte 0x10
          .byte 0xa1
          .byte 0xbf
          .byte 0xff
          .byte 0x82
          .byte 0x93
          .byte 0x23
          .byte 0x53
          .byte 0xf4
          .byte 0xba
          .byte 0xbf
          .byte 0x82
          .byte 0xb1
          .byte 0x19
          .byte 0x3b
          .byte 0x3c
          .byte 0xdf
          .byte 0xa2
          .byte 0xbf
          .byte 0xeb
          .byte 0xfd
          .byte 0x46
          .byte 0x3b
          .byte 0x6e
          .byte 0xf8
          .byte 0x7d
          .byte 0x3f
          .byte 0x7
          .byte 0xf0
          .byte 0x16
          .byte 0x48
          .byte 0x50
          .byte 0xfc
          .byte 0x88
          .byte 0x3f
          .byte 0xc1
          .byte 0xff
          .byte 0x56
          .byte 0xb2
          .byte 0x63
          .byte 0x23
          .byte 0x70
          .byte 0x3f
.L_65d460:
          .byte 0x94
          .byte 0xf6
          .byte 0x6
          .byte 0x5f
          .byte 0x98
          .byte 0x4c
          .byte 0x55
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65d480:
          .byte 0x34
          .byte 0x21
          .byte 0x87
          .byte 0xb3
          .byte 0x64
          .byte 0x2f
          .byte 0xe8
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x66
          .byte 0x4a
          .byte 0x16
          .byte 0xf0
          .byte 0xe5
          .byte 0xcf
          .byte 0x3f
          .byte 0xa
          .byte 0x1a
          .byte 0xb4
          .byte 0x9
          .byte 0x90
          .byte 0x9e
          .byte 0x6b
          .byte 0x3f
          .byte 0x3f
          .byte 0xba
          .byte 0x5f
          .byte 0xa5
          .byte 0x85
          .byte 0x42
          .byte 0x59
          .byte 0xbf
          .byte 0x25
          .byte 0x7a
          .byte 0xd7
          .byte 0xa8
          .byte 0xa0
          .byte 0x5
          .byte 0xa5
          .byte 0x3f
          .byte 0xa1
          .byte 0xf
          .byte 0xf9
          .byte 0xdb
          .byte 0x5c
          .byte 0x4
          .byte 0xba
          .byte 0xbf
          .byte 0xca
          .byte 0x4
          .byte 0x36
          .byte 0xc6
          .byte 0xd2
          .byte 0xb0
          .byte 0x91
          .byte 0x3f
          .byte 0x84
          .byte 0xaa
          .byte 0x66
          .byte 0x10
          .byte 0xfe
          .byte 0x9
          .byte 0xd1
          .byte 0xbf
          .byte 0xbb
          .byte 0xf7
          .byte 0x89
          .byte 0x66
          .byte 0x12
          .byte 0x33
          .byte 0xd7
          .byte 0xbf
          .byte 0xeb
          .byte 0x63
          .byte 0xf4
          .byte 0x92
          .byte 0xb5
          .byte 0xfc
          .byte 0xe5
          .byte 0xbf
          .byte 0x94
          .byte 0x83
          .byte 0x7e
          .byte 0x4b
          .byte 0xa5
          .byte 0xa4
          .byte 0xf2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65d4f0:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65d640:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_65d700:
          .quad .L_44caa8
          .quad .L_44caae
          .quad .L_44caba
          .quad .L_44cac5
          .quad .L_44cad0
          .quad .L_44cad6
          .quad .L_44caba
          .quad .L_44cae2
          .quad .L_447f99
          .quad .L_44caae
          .quad .L_44cafc
          .quad .L_44cb0d
          .quad .L_44cb22
          .quad .L_44cb28
          .quad .L_44caba
          .quad .L_44cb34
          .quad .L_448079
          .quad .L_44cb3d
          .quad .L_44cb4b
          .quad .L_448099
          .quad .L_44cb59
          .quad .L_44cb60
          .quad .L_44cb6d
          .quad .L_44cb77
          .quad .L_44cb8b
          .quad .L_44cb91
          .quad .L_44cb6d
          .quad .L_44cb9e
          .quad .L_448075
          .quad .L_44cbb7
          .quad .L_44cbc5
          .quad .L_44cbd3
          .quad .L_44cbe1
          .quad .L_44cbe8
          .quad .L_44cbf5
          .quad .L_44cbfe
          .quad .L_44cc19
          .quad .L_44cc21
          .quad .L_44cb6d
          .quad .L_44d160
          .quad .L_44cc2d
          .quad .L_44cc21
          .quad .L_44cc33
          .quad .L_44cc45
          .quad .L_447fee
          .quad .L_44cc57
          .quad .L_44cc65
          .quad .L_44cc74
          .quad .L_44cc80
          .quad .L_44cc89
          .quad .L_44cc65
          .quad .L_44cc97
          .quad .L_447fc5
          .quad .L_44ccad
          .quad .L_44ccb9
          .quad .L_44ccc5
          .quad .L_44ccd1
          .quad .L_44ccd8
          .quad .L_44cce6
          .quad .L_44ccf2
          .quad .L_448033
          .quad .L_44cd03
          .quad .L_44cd0f
          .quad .L_44cd24
          .quad .L_44cd37
          .quad .L_44cd3b
          .quad .L_44cd47
          .quad .L_44d180
          .quad .L_44cd51
          .quad .L_44cd58
          .quad .L_44cd63
          .quad .L_44cd6c
          .quad .L_44cd84
          .quad .L_44cd8c
          .quad .L_44cd99
          .quad .L_44cda5
          .quad .L_44cdb2
          .quad .L_44cdba
          .quad .L_44cdc8
          .quad .L_44cdd4
          .quad .L_44cde1
          .quad .L_44cde9
          .quad .L_44cdc8
          .quad .L_44cdf7
          .quad .L_44ce04
          .quad .L_44ce0c
          .quad .L_44cdc8
          .quad .L_44ce1a
          .quad .L_44ce27
          .quad .L_44ce2f
          .quad .L_44cdc8
          .quad .L_44ce3d
          .quad .L_44ce4a
          .quad .L_44ce52
          .quad .L_44cdc8
          .quad .L_44ce60
          .quad .L_44ce7a
          .quad .L_44ce82
          .quad .L_44ce8d
          .quad .L_44ce96
          .quad .L_44ceb3
          .quad .L_44cebc
          .quad .L_44ce8d
          .quad .L_44cec7
          .quad .L_44cedd
          .quad .L_44cee5
          .quad .L_44ce8d
          .quad .L_44cef0
          .quad .L_447238
          .quad .L_44cefd
          .quad .L_44ce8d
          .quad .L_44cf08
          .quad .L_44cf15
          .quad .L_44cf1b
          .quad .L_44cf27
          .quad .L_44cf2f
          .quad .L_44cff0
          .quad .L_44cf35
          .quad .L_44cf27
          .quad .L_44cf41
          .quad .L_44cf5e
          .quad .L_44cf64
          .quad .L_44ce8d
          .quad .L_44cf70
          .quad .L_44cf81
          .quad .L_44cf87
          .quad .L_44cf92
          .quad .L_44cf9c
          .quad .L_44cfa7
          .quad .L_44cfad
          .quad .L_44caba
          .quad .L_44cfb8
          .quad .L_44cfc3
          .quad .L_44cfc9
          .quad .L_44cfd4
          .quad .L_44cfdc
          .quad .L_44cfec
          .quad .L_44cff5
          .quad .L_44d001
          .quad .L_44d00d
          .quad .L_44d024
          .quad .L_44d02c
          .quad .L_44d037
          .quad .L_44d042
          .quad .L_44d058
          .quad .L_44d05f
          .quad .L_44d06b
          .quad .L_44d07a
          .quad .L_44d089
          .quad .L_44d091
          .quad .L_44d09d
          .quad .L_44d0ac
          .quad .L_44d0b4
          .quad .L_44d0ba
          .quad .L_44ce8d
          .quad .L_44d0c6
          .quad .L_44d0cd
          .quad .L_44d0d3
          .quad .L_44cb6d
          .quad .L_44d0df
          .quad .L_44d0e6
          .quad .L_44d0ec
          .quad .L_44d0f8
          .quad .L_44d102
          .quad .L_447f61
          .quad .L_44caae
          .quad .L_44d109
          .quad .L_44d11a
          .quad .L_44d121
          .quad .L_44d128
          .quad .L_44d134
          .quad .L_44d140
          .zero 32
.L_65dc80:
          .string "%dd%d\'%.3f\"%c"
          .zero 42
.L_65dcb8:
          .byte 0x6a
          .byte 0x83
          .byte 0x7e
          .byte 0xcc
          .byte 0xb3
          .byte 0x96
          .byte 0xa8
          .byte 0x41
.L_65dcc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xed
          .byte 0x40
.L_65dcc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_65dcd0:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

#-----------------------------------
.align 16
.globl stdout_copy
.type stdout_copy, @object
#-----------------------------------
stdout_copy:
          .zero 32
#-----------------------------------
.align 16
.globl stderr_copy
.type stderr_copy, @object
#-----------------------------------
stderr_copy:
          .zero 8
.L_65dd08:
          .zero 8
.L_65dd10:
          .zero 8
.L_65dd18:
          .zero 8
.L_65dd20:
          .zero 32
.L_65dd40:
          .zero 32
.L_65dd60:
          .zero 4
.L_65dd64:
          .zero 4
.L_65dd68:
          .zero 8
.L_65dd70:
          .zero 8
.L_65dd78:
          .zero 8
.L_65dd80:
          .zero 8
.L_65dd88:
          .zero 24
.L_65dda0:
          .zero 32
.L_65ddc0:
          .zero 64
.L_65de00:
          .zero 40
.L_65de28:
          .zero 8
.L_65de30:
          .zero 8
.L_65de38:
          .zero 4
.L_65de3c:
          .zero 4
.L_65de40:
          .zero 8
.L_65de48:
          .zero 8
.L_65de50:
          .zero 8
.L_65de58:
          .zero 8
.L_65de60:
          .zero 8
.L_65de68:
          .zero 8
.L_65de70:
          .zero 8
.L_65de78:
          .zero 8
.L_65de80:
          .zero 8
.L_65de88:
          .zero 8
.L_65de90:
          .zero 4
.L_65de94:
          .zero 4
.L_65de98:
          .zero 4
.L_65de9c:
          .zero 4
.L_65dea0:
          .zero 4
.L_65dea4:
          .zero 4
#===================================
# end section .bss
#===================================
# WARNING: integral symbol .L_456a60 may not have been correctly relocated
.set .L_456a60, 0x456a60
