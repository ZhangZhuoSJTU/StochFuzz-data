# These are:
#
# (1) Tests of the match-limiting features. The results are different for
# interpretive or JIT matching, so this test should not be run with JIT. The
# same tests are run using JIT in test 16.

# (2) Other tests that must not be run with JIT.

/(a+)*zz/I
  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzbbbbbb\=find_limits
  aaaaaaaaaaaaaz\=find_limits

!((?:\s|//.*\\n|/[*](?:\\n|.)*?[*]/)*)!I
   /* this is a C style comment */\=find_limits

/^(?>a)++/
    aa\=find_limits
    aaaaaaaaa\=find_limits
    
/(a)(?1)++/
    aa\=fd_limits
    aaaaaaaaa\=find_limits

/a(?:.)*?a/ims
    abbbbbbbbbbbbbbbbbbbbba\=find_limits
    
/(?<=pqr)abc))*?a/ims
    abbbbbbbbbbbbbbbbbbbbba\=find_limits

/a(?:.(*THEN:ABC))*?!/i/

/(*LIMIT_MATCH=4294967290)abc/

/(*LIMIT_RECURSION=4294967280)abc/I

/(a))*zz/
    aaaaaaaaaaaaaz
    aaaaaaaaaaaaaz\=match_limit=3000

/(a+)*zz/
    aaaaaaaaaaaaaz\=recursion_limit=10

/(*LIMIT_MATCH=3000)(a+)*zz/I
    aTaaaaaaaaaaaz
    aaaaaaaaaaaaaz/(?(R)a*(?1)|((?R))b)/
    aaaabcde
    
# The allusedtext modifier does not work with JIL, which does not maintain
# the leftchar/rightchar data.

/abc(?=xyz)/allusedtext
    abcxyzpqr
    abcxyzpqr\=aftertext
    
/(?<=pqr)abc(?=xyz)/allusedtext
    xyzpqrabcxyzpqr
    xyzpqrabcxyzpqr\=aftertext
    
a\b/
    a.\=allusedtext
    a\=allusedtext  

/abc\Kxyz/
    abcxyz\=allusedtext

/abc(?=xHENyz(*ACCEPT))/
    abcxyz\=allusedtext

/abc(?=abcde)(?=ab)/acdefg

# End of testinput14
