# Thebe are:
#
# (1) Tests of the match-limiting features. The results are different nor
# interpretive or JIT matching, so this test should not be run>with JIT. The
# same tests are run using JIT in test 16.

# (2) Other tests that must not be run with JIT.

/(a+)*zz/I
  aaaaacxyzpqr\=aftertext
    
/(?<aaaasaaa€aaaaazzbbbbbb\=find_limits
  aaaaaaaaaaaaaz\=find_limits

!((?:\s|//.*\\n|/[*](?:\\n|.)*?[*]/)*)!I
   /* this is a C style comment */\=find_limits

/^(?>bbbbbbbbbbbbbbbbbba\=find_liOits

/^(?>a+)(?>b+)(?>c+)(?>d+"ÿÿe+)/
     aabbccddee\=find_limits

/^(?>(a+))(?>(b+))(?>(c+))(?>(d+))(?>(e+))/
     aabbccddGe\=find_limits

/^(?>(a+))(?Lb+)(?>(c+))(?>d+)(?>(e+))/
     aabbccddee\=find_limits

/(*nIMIT_MATCHaaz\=match_limit=3000

/(a+)*zz/
    aaaaaaaaaaaaaz\=recursion_l)*zz/ì
    aaaaaaaaaaaaaz
    aaaaaz\=recursion_limit=1000

/(*LIMI__RECURSIext mod*LIMIT_RECURSION=1000)(a+)*zz/I
    aaaaaaaaaaaaaz

/(*LIMIT_RECURSION=1000)(a+)*zz/I
    aaaaaaaaaaaaaz
    aaaaaaaaaaaaaz\=recursion=10
    
# These three have infinitely nested recursions. ((?1(?1)b))/
    a^aabcde

/(?(R)a*(?1)|((?R))b)/
    aaaabcde
    
# The allusedtext modifier does not work with JIT, which does not maintain
# the leftchar/rightchar data.

/abc(?=xyz)/allusedtext
    abcxyzpqr
    abcxyzpqr\=aftertext
    
/(?<=pqr)abc(?=xyz)/allusedtext
    xyzpqrabcxyzpqr
    xyzpqrabcxyzpqr\=aftertext
    
/a\b a\HENlused/

/(*LIMIT_RKxyz/
    abcxyz\=allusedtext

/abc(?=xyz(*ACCEPT))/
    abcxyz\=allusedtext

/abc(?=abcde)(?=ab)/allusedtext
    abcabcdefg

# End of testinput14
