#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

.L_4010e0:

            push R15
            push R14
            mov EAX,EDX
            push R13
            push R12
            mov R15,RCX
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RSI
            xor R13D,R13D
            sub RSP,24
.L_4010fc:

            mov QWORD PTR [RSP+8],RAX
.L_401101:

            cmp QWORD PTR [RSP+8],R13
            je .L_4011c3

            test R15,R15
            je .L_4011bb

            mov RAX,QWORD PTR [R15+8]
            lea RBX,QWORD PTR [R13*8]
            mov RCX,QWORD PTR [RAX+R13*8]
            mov EAX,DWORD PTR [RCX+40]
            cmp EAX,2
            jne .L_40115e

            mov RAX,QWORD PTR [RCX+48]
            cmp WORD PTR [RAX],0
            jne .L_401165

            cmp WORD PTR [RAX+2],-1
            jne .L_401165

            xor R14D,R14D
.L_401141:

            mov ESI,R14D
            mov RDI,RBP
            call .L_405b00

            test EAX,EAX
            je .L_40117b

            inc R14D
            cmp R14D,256
            jne .L_401141

            jmp .L_4011bb
.L_40115e:

            cmp EAX,256
            je .L_40117f
.L_401165:

            lea RDX,QWORD PTR [RIP+.L_41d620]
            mov ESI,2
            mov RDI,R12
            xor EAX,EAX
            call .L_426320
.L_40117b:

            xor EAX,EAX
            jmp .L_4011c8
.L_40117f:

            xor R14D,R14D
.L_401182:

            mov RAX,QWORD PTR [R15+8]
            mov RDI,RBP
            mov RAX,QWORD PTR [RAX+RBX*1]
            mov RAX,QWORD PTR [RAX+48]
            movzx ESI,WORD PTR [RAX+R14*1]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405b00

            test EAX,EAX
            je .L_40117b

            add R14,2
            cmp R14,512
            jne .L_401182
.L_4011bb:

            inc R13
            jmp .L_401101
.L_4011c3:

            mov EAX,1
.L_4011c8:

            add RSP,24
.L_4011cc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4011d7:

            mov R8D,EDX
            mov ECX,1
.L_4011df:

            test R8D,R8D
            je .L_4011f7

            imul ECX,ESI
            mov EAX,ECX
            mul ESI
            jo .L_4011f2

            dec R8D
            jmp .L_4011df
.L_4011f2:

            or ESI,4294967295
            jmp .L_40120c
.L_4011f7:

            mov ESI,ECX
            xor EDX,EDX
            imul ESI,EDI
            mov EAX,ESI
            div EDI
            cmp ECX,EAX
            mov EAX,4294967295
            cmovne ESI,EAX
.L_40120c:

            mov EAX,ESI
            ret 
.L_40120f:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_40121b:

            mov RAX,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RAX]
            call .L_405e60

            test EAX,EAX
            jne .L_401232
.L_40122b:

            xor EAX,EAX
            jmp .L_401360
.L_401232:

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP+8]
            test RAX,RAX
            je .L_401327

            movsd XMM0,QWORD PTR [RAX]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            mov RAX,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [RAX+16]
            jmp .L_401350
.L_401327:

            xorps XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            xorps XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_40122b

            xorps XMM0,XMM0
.L_401350:

            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_401360:

            pop RDX
.L_401361:

            pop RBX
            pop RBP
            ret 
.L_401364:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_40136e:

            mov RBP,QWORD PTR [RCX+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov R12D,DWORD PTR [RBP+20]
            test R12D,R12D
            je .L_4013a8

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_41d6a0]
            mov ESI,13
            xor R12D,R12D
            call .L_426320

            jmp .L_401483
.L_4013a8:

            xorps XMM0,XMM0
            mov R13D,EDX
            mov RBX,RSI
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            mov RDX,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [RDX+12]
.L_4013be:

            cmp ECX,EAX
            jbe .L_4013cf

            mov ESI,DWORD PTR [RDX+RAX*4+20]
            mov BYTE PTR [RSP+RAX*1],SIL
            inc RAX
            jmp .L_4013be
.L_4013cf:

            mov RDX,RSP
            mov ESI,16
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_401483

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_401483

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_401483

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_401483

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_401483

            dec R13B
            jne .L_40145f

            xor R13D,R13D
.L_40142e:

            cmp DWORD PTR [RBP+16],R13D
            jbe .L_401472

            mov RDX,QWORD PTR [RBP]
            mov EAX,R13D
            mov RDI,RBX
            movzx ESI,WORD PTR [RDX+RAX*2]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405b00

            test EAX,EAX
            je .L_401483

            inc R13D
            jmp .L_40142e
.L_40145f:

            mov ESI,DWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RBP]
            mov RDI,RBX
            call .L_405be0

            test EAX,EAX
            je .L_401483
.L_401472:

            mov RDI,RBX
            xor R12D,R12D
            call .L_406760

            test EAX,EAX
            setne R12B
.L_401483:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            je .L_40149b

            call __stack_chk_fail@PLT
.L_40149b:

            add RSP,40
.L_40149f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4014a6:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4014b4:

            test RSI,RSI
            jne .L_4014d8

            lea RCX,QWORD PTR [RIP+.L_41d9d0]
            lea RSI,QWORD PTR [RIP+.L_41d8c0]
            lea RDI,QWORD PTR [RIP+.L_41d8df]
            mov EDX,2025
            call __assert_fail@PLT
.L_4014d8:

            mov RAX,QWORD PTR [RSI+8]
            mov R15,RDI
            mov RBP,RSI
            xor EBX,EBX
            mov RAX,QWORD PTR [RAX]
            mov R14D,DWORD PTR [RAX+40]
.L_4014eb:

            cmp EBX,DWORD PTR [RBP]
            jae .L_401525

            mov R13D,EBX
            xor R12D,R12D
            shl R13,3
.L_4014fa:

            cmp R14D,R12D
            jle .L_401521

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,R15
            mov RAX,QWORD PTR [RAX+R13*1]
            mov RAX,QWORD PTR [RAX+48]
            movzx ESI,WORD PTR [RAX+R12*2]
            inc R12
            call .L_405b50

            test EAX,EAX
            jne .L_4014fa

            jmp .L_40152a
.L_401521:

            inc EBX
            jmp .L_4014eb
.L_401525:

            mov EAX,1
.L_40152a:

            pop RDX
.L_40152b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_401536:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            movsxd R12,ECX
            mov ECX,32
            mov R14,R12
            xor EBP,EBP
            sub RSP,168
.L_40155a:

            lea RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RDI,RBX

            rep stosd DWORD PTR [RDI]
.L_401580:

            cmp RBP,R12
            je .L_4015b4

            xor EDX,EDX
            mov ESI,R15D
            mov RDI,R13
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [RBX+RBP*8],RAX
            je .L_4015d8

            mov RDX,QWORD PTR [RAX+48]
            mov RDI,QWORD PTR [RSP]
            mov ESI,R15D
            inc RBP
            call .L_405510

            test EAX,EAX
            jne .L_401580

            jmp .L_4015d8
.L_4015b4:

            mov RDX,RBX
            mov ESI,R14D
            mov RDI,R13
            call .L_430680

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            jne .L_4015dc
.L_4015d8:

            xor EBP,EBP
            jmp .L_40160a
.L_4015dc:

            xor R12D,R12D
.L_4015df:

            cmp R12,RBP
            je .L_4015f2

            mov RDI,QWORD PTR [RBX+R12*8]
            inc R12
            call .L_427870

            jmp .L_4015df
.L_4015f2:

            mov EAX,1
            jmp .L_401611
.L_4015f9:

            mov RDI,QWORD PTR [RBX+RBP*8]
            test RDI,RDI
            je .L_401607

            call .L_427870
.L_401607:

            inc RBP
.L_40160a:

            cmp RBP,R12
            jne .L_4015f9

            xor EAX,EAX
.L_401611:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            je .L_401629

            call __stack_chk_fail@PLT
.L_401629:

            add RSP,168
.L_401630:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40163b:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,256
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,184
.L_401657:

            lea RBX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+20],ECX
            mov ECX,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RDX

            rep stosd DWORD PTR [RDI]

            mov RDI,RBP
            call .L_425fb0

            test RAX,RAX
            je .L_401793

            mov R15,RAX
            movsxd RAX,DWORD PTR [RSP+20]
            xor R13D,R13D
            mov QWORD PTR [RSP+8],RAX
.L_4016a3:

            cmp R13,QWORD PTR [RSP+8]
            je .L_4016ca

            xor EDX,EDX
            mov ESI,256
            mov RDI,RBP
            call .L_4274b0

            mov QWORD PTR [RBX+R13*8],RAX
            inc R13
            test RAX,RAX
            jne .L_4016a3

            jmp .L_401766
.L_4016ca:

            xor R12D,R12D
.L_4016cd:

            cmp R12,R13
            je .L_401717

            mov ECX,1
            mov EDX,256
            mov RSI,R15
            mov RDI,R14
            call QWORD PTR [R14+280]

            dec EAX
            jne .L_401766

            mov RAX,QWORD PTR [RBX+R12*8]
            mov RSI,QWORD PTR [RAX+48]
            xor EAX,EAX
.L_4016f7:

            movzx EDX,BYTE PTR [R15+RAX*1]
            mov ECX,EDX
            shl ECX,8
            or EDX,ECX
            mov WORD PTR [RSI+RAX*2],DX
            inc RAX
            cmp RAX,256
            jne .L_4016f7

            inc R12
            jmp .L_4016cd
.L_401717:

            mov RSI,R15
            mov RDI,RBP
            call .L_426070

            mov ESI,DWORD PTR [RSP+20]
            mov RDX,RBX
            mov RDI,RBP
            call .L_430680

            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            je .L_401763

            xor EBP,EBP
.L_401749:

            cmp R12,RBP
            je .L_40175c

            mov RDI,QWORD PTR [RBX+RBP*8]
            inc RBP
            call .L_427870

            jmp .L_401749
.L_40175c:

            mov EAX,1
            jmp .L_401795
.L_401763:

            xor R15D,R15D
.L_401766:

            xor R13D,R13D
.L_401769:

            cmp R13,QWORD PTR [RSP+8]
            je .L_401783

            mov RDI,QWORD PTR [RBX+R13*8]
            test RDI,RDI
            je .L_40177e

            call .L_427870
.L_40177e:

            inc R13
            jmp .L_401769
.L_401783:

            test R15,R15
            je .L_401793

            mov RSI,R15
            mov RDI,RBP
            call .L_426070
.L_401793:

            xor EAX,EAX
.L_401795:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            je .L_4017ad

            call __stack_chk_fail@PLT
.L_4017ad:

            add RSP,184
.L_4017b4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4017bf:

            push R15
            push R14
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_4017d3:

            mov DWORD PTR [RSP+4],ESI
            mov ESI,24
            mov QWORD PTR [RSP+8],RCX
            call .L_425fe0

            test RAX,RAX
            je .L_40182f

            mov R15,RAX
            mov EAX,DWORD PTR [RSP+4]
            mov EDX,8
            mov DWORD PTR [R15+12],R13D
            mov RDI,RBX
            mov DWORD PTR [R15+8],EAX
            mov ESI,EAX
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15+16],RAX
            je .L_40182f

            mov RBP,QWORD PTR [RSP+8]
            xor R12D,R12D
            jmp .L_401890
.L_40181c:

            mov RDI,RBX
            call .L_426070

            mov RSI,R15
            mov RDI,RBX
            call .L_426070
.L_40182f:

            xor R15D,R15D
            jmp .L_401932
.L_401837:

            xor EDX,EDX
            cmp R13D,256
            jne .L_4018f6
.L_401846:

            mov RAX,QWORD PTR [R15+16]
            lea R8,QWORD PTR [RDX+RDX*1]
            mov ESI,EDX
            shl ESI,8
            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RSP+16],RDX
            or ESI,EDX
            add R8,QWORD PTR [RAX+R14*1]
            movzx ESI,SI
            mov QWORD PTR [RSP+24],R8
            call .L_4286b0

            mov RDX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            inc RDX
            mov WORD PTR [R8],AX
            cmp RDX,256
            jne .L_401846
.L_401889:

            inc R12D
            add RBP,8
.L_401890:

            cmp R12D,DWORD PTR [RSP+4]
            jge .L_401932

            mov R14,RBP
            sub R14,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [R15+16]
            mov EDX,2
            mov ESI,R13D
            mov RDI,RBX
            add R8,R14
            mov QWORD PTR [RSP+16],R8
            call .L_426010

            mov R8,QWORD PTR [RSP+16]
            mov QWORD PTR [R8],RAX
            mov RAX,QWORD PTR [R15+16]
            cmp QWORD PTR [RAX+R14*1],0
            jne .L_401837

            xor EBP,EBP
.L_4018d8:

            cmp R12D,EBP
            mov RSI,QWORD PTR [R15+16]
            jle .L_40181c

            mov RSI,QWORD PTR [RSI+RBP*8]
            mov RDI,RBX
            inc RBP
            call .L_426070

            jmp .L_4018d8
.L_4018f6:

            mov RAX,QWORD PTR [R15+16]
            lea R8,QWORD PTR [RDX+RDX*1]
            mov RDI,QWORD PTR [RBP]
            mov ESI,EDX
            mov QWORD PTR [RSP+16],RDX
            add R8,QWORD PTR [RAX+R14*1]
            mov QWORD PTR [RSP+24],R8
            call .L_4286b0

            mov RDX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            inc RDX
            mov WORD PTR [R8],AX
            cmp R13D,EDX
            jg .L_4018f6

            jmp .L_401889
.L_401932:

            add RSP,40
.L_401936:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_401944:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,ESI
            mov EBP,EDX
            xor EDX,EDX
            sub RSP,216
.L_40195a:

            lea RCX,QWORD PTR [RSP+52]
            lea RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+72],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+88],0
            call .L_40d300

            test EAX,EAX
            jne .L_4019a2
.L_40199b:

            xor EAX,EAX
            jmp .L_401f2f
.L_4019a2:

            lea RCX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            xor EDX,EDX
            mov EDI,EBP
            call .L_40d300

            test EAX,EAX
            je .L_40199b

            mov EAX,DWORD PTR [RSP+52]
            cmp DWORD PTR [RBX+8],EAX
            jne .L_40199b

            mov EAX,DWORD PTR [RSP+48]
            cmp DWORD PTR [RBX+12],EAX
            jne .L_40199b

            lea RBP,QWORD PTR [RSP+160]
            mov RDI,QWORD PTR [RSP+56]
            mov RDX,RBX
            mov RSI,RBP
            call .L_4310f0

            mov R9,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+48]
            xor EDX,EDX
.L_4019ef:

            cmp R8D,EDX
            jle .L_401a5a

            movzx EDI,WORD PTR [RBP+RDX*2]
            movzx EAX,WORD PTR [R9+RDX*2]
            mov ESI,EAX
            sub EAX,EDI
            mov ECX,EDI
            mov EDI,EAX
            sar EDI,31
            xor EAX,EDI
            sub EAX,EDI
            cmp EAX,61440
            jg .L_401a5a

            inc RDX
            cmp SI,CX
            je .L_4019ef

            jmp .L_401a64
.L_401a1e:

            call .L_42f990

            xor EBP,EBP
            mov R13,RAX
.L_401a28:

            cmp DWORD PTR [RSP+48],EBP
            ja .L_401b76
.L_401a32:

            mov RAX,QWORD PTR [RSP+80]
            cmp DWORD PTR [RAX+8],1668052340
            je .L_401bdd

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_420830]
            mov ESI,3
            xor EAX,EAX
            call .L_426320
.L_401a5a:

            mov EAX,1
            jmp .L_401f2f
.L_401a64:

            lea R13,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+72]
            mov ECX,1668052340
            mov EDX,1668707188
            xor EAX,EAX
            mov R8D,1668707188
            push R13
.L_401a82:

            mov R9,R12
            mov ESI,3
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+88]
            push RBP
            call .L_42f820

            test EAX,EAX
            pop RDX
            pop RCX
.L_401a9c:

            jne .L_401ac1

            xor EAX,EAX
            mov R9,RBP
            mov R8,R12
            mov ECX,1668052340
            mov EDX,1668707188
            mov ESI,2
            mov RDI,RBX
            call .L_42f820

            test EAX,EAX
            je .L_401adb
.L_401ac1:

            mov RDI,QWORD PTR [RSP+72]
            test RDI,RDI
            jne .L_401b1c

            mov ECX,DWORD PTR [RSP+52]
            mov RDX,QWORD PTR [RSP+56]
            xor EAX,EAX
            jmp .L_401b64
.L_401adb:

            xor EAX,EAX
            mov R9,R13
            mov R8,RBP
            mov ECX,1668707188
            mov EDX,1668052340
            mov ESI,2
            mov RDI,RBX
            call .L_42f820

            test EAX,EAX
            jne .L_401ac1

            mov RCX,RBP
            mov EDX,1668052340
            mov ESI,1
            mov RDI,RBX
            call .L_42f820

            test EAX,EAX
            jne .L_401ac1

            jmp .L_40199b
.L_401b1c:

            call .L_42f990

            xor EBX,EBX
            mov RBP,RAX
.L_401b26:

            cmp DWORD PTR [RSP+52],EBX
            jbe .L_401b49

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBP+RBX*8]
            movzx ESI,WORD PTR [RAX+RBX*2]
            call .L_4286b0

            mov WORD PTR [RSP+RBX*2+96],AX
            inc RBX
            jmp .L_401b26
.L_401b49:

            mov RDI,QWORD PTR [RSP+88]
            test RDI,RDI
            jne .L_401a1e

            mov ECX,DWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+64]
            xor EAX,EAX
            jmp .L_401bc4
.L_401b64:

            cmp ECX,EAX
            jbe .L_401b49

            mov SI,WORD PTR [RDX+RAX*2]
            mov WORD PTR [RSP+RAX*2+96],SI
            inc RAX
            jmp .L_401b64
.L_401b76:

            mov EBX,EBP
            mov RDI,QWORD PTR [R13+RBX*8]
            call .L_427ca0

            mov R12,RAX
            mov RDX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [RBX+RBX*1]
            test R12,R12
            jne .L_401ba1

            mov AX,WORD PTR [RDX+RAX*1]
            mov WORD PTR [RSP+RBX*2+128],AX
            jmp .L_401bbd
.L_401ba1:

            movzx ESI,WORD PTR [RDX+RAX*1]
            mov RDI,R12
            call .L_4286b0

            mov RDI,R12
            mov WORD PTR [RSP+RBX*2+128],AX
            call .L_427870
.L_401bbd:

            inc EBP
            jmp .L_401a28
.L_401bc4:

            cmp ECX,EAX
            jbe .L_401a32

            mov SI,WORD PTR [RDX+RAX*2]
            mov WORD PTR [RSP+RAX*2+128],SI
            inc RAX
            jmp .L_401bc4
.L_401bdd:

            mov ECX,DWORD PTR [RSP+52]
            mov RBP,QWORD PTR [RAX+48]
            cmp ECX,4
            mov R12,QWORD PTR [RBP+8]
            jne .L_401d6c

            movzx EAX,WORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RIP+.L_4208f0]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            movzx EAX,WORD PTR [RSP+98]
            mulsd XMM1,XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+56]
            divsd XMM1,XMM2
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+100]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+60]
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+102]
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+64]
            cvtsi2sd XMM3,RAX
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            call trunc@PLT

            cvttsd2si EBX,XMM0
            movsd XMM0,QWORD PTR [RSP]
            call trunc@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call trunc@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            call trunc@PLT

            cvtsi2sd XMM4,EBX
            movsd XMM1,QWORD PTR [RSP+40]
            subsd XMM1,XMM4
            xorps XMM4,XMM4
            ucomisd XMM1,XMM4
            jp .L_401a5a

            jne .L_401a5a

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP]
            cvttsd2si EDX,XMM3
            cvtsi2sd XMM1,EDX
            subsd XMM5,XMM1
            ucomisd XMM5,XMM4
            jp .L_401a5a

            jne .L_401a5a

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+8]
            cvttsd2si EAX,XMM2
            cvtsi2sd XMM1,EAX
            subsd XMM6,XMM1
            ucomisd XMM6,XMM4
            jp .L_401a5a

            jne .L_401a5a

            cvttsd2si ECX,XMM0
            movsd XMM7,QWORD PTR [RSP+16]
            cvtsi2sd XMM0,ECX
            subsd XMM7,XMM0
            ucomisd XMM7,XMM4
            jp .L_401a5a

            jne .L_401a5a

            imul EBX,DWORD PTR [R12+96]
            imul EDX,DWORD PTR [R12+92]
            imul ECX,DWORD PTR [R12+84]
            imul EAX,DWORD PTR [R12+88]
            add EDX,EBX
            lea EBX,DWORD PTR [RDX+RCX*1]
            add EAX,EBX
            jmp .L_401f04
.L_401d6c:

            cmp ECX,3
            jne .L_401e89

            movzx EAX,WORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RIP+.L_4208f0]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            movzx EAX,WORD PTR [RSP+98]
            mulsd XMM1,XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+56]
            divsd XMM1,XMM2
            cvtsi2sd XMM3,RAX
            movzx EAX,WORD PTR [RSP+100]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM0
            cvtsi2sd XMM0,EAX
            mov EAX,DWORD PTR [R12+60]
            cvtsi2sd XMM3,RAX
            mulsd XMM0,XMM3
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call trunc@PLT

            cvttsd2si EBX,XMM0
            movsd XMM0,QWORD PTR [RSP]
            call trunc@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call trunc@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            cvtsi2sd XMM3,EBX
            subsd XMM1,XMM3
            xorps XMM3,XMM3
            ucomisd XMM1,XMM3
            jp .L_401a5a

            jne .L_401a5a

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP]
            cvttsd2si EDX,XMM2
            cvtsi2sd XMM1,EDX
            subsd XMM5,XMM1
            ucomisd XMM5,XMM3
            jp .L_401a5a

            jne .L_401a5a

            cvttsd2si EAX,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            cvtsi2sd XMM0,EAX
            subsd XMM6,XMM0
            ucomisd XMM6,XMM3
            jp .L_401a5a

            jne .L_401a5a

            imul EBX,DWORD PTR [R12+92]
            imul EDX,DWORD PTR [R12+88]
            imul EAX,DWORD PTR [R12+84]
            add EBX,EDX
            add EAX,EBX
            jmp .L_401f04
.L_401e89:

            cmp ECX,1
            jne .L_401ee7

            movzx EAX,WORD PTR [RSP+96]
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [R12+52]
            cvtsi2sd XMM0,RAX
            mulsd XMM1,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_4208f0]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call trunc@PLT

            cvttsd2si EAX,XMM0
            movsd XMM1,QWORD PTR [RSP]
            cvtsi2sd XMM0,EAX
            subsd XMM1,XMM0
            xorps XMM0,XMM0
            ucomisd XMM1,XMM0
            jp .L_401a5a

            jne .L_401a5a

            imul EAX,DWORD PTR [R12+84]
            jmp .L_401f04
.L_401ee7:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_420860]
            xor EAX,EAX
            mov ESI,3
            call .L_426320

            mov EAX,1
            jmp .L_401f2f
.L_401f04:

            mov ECX,DWORD PTR [RSP+48]
            xor EDX,EDX
            cdqe 
.L_401f0c:

            cmp ECX,EDX
            jle .L_401a5a

            mov R8W,WORD PTR [RSP+RDX*2+128]
            mov RSI,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RAX+RDX*1]
            inc RDX
            mov WORD PTR [RSI+RDI*2],R8W
            jmp .L_401f0c
.L_401f2f:

            mov RSI,QWORD PTR [RSP+200]
            xor RSI,QWORD PTR FS:[40]
            je .L_401f47

            call __stack_chk_fail@PLT
.L_401f47:

            add RSP,216
.L_401f4e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_401f55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_401f64:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_433254]
            call fopen@PLT

            test RAX,RAX
            je .L_401fe8

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_402008

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401ff2

            mov RSI,RBP
            mov RDI,R12
            call .L_402110

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401fe2:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401fe8:

            mov EDI,1
            call exit@PLT
.L_401ff2:

            lea RDI,QWORD PTR [RIP+.L_433265]
            call puts@PLT

            mov EDI,3
            call exit@PLT
.L_402008:

            lea RDI,QWORD PTR [RIP+.L_433257]
            call puts@PLT

            mov EDI,2
            call exit@PLT
.L_40201e:

            nop
            nop
.L_402050:

            ret 
.L_402052:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402060:

            push RBP
            mov EAX,OFFSET .L_641c18
            cmp RAX,OFFSET .L_641c18
            mov RBP,RSP
            je .L_402088

            mov EAX,0
            test RAX,RAX
            je .L_402088

            pop RBP
            mov EDI,OFFSET .L_641c18
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402088:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402090:

            mov ESI,OFFSET .L_641c18
            push RBP
            sub RSI,OFFSET .L_641c18
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_4020c8

            mov EAX,0
            test RAX,RAX
            je .L_4020c8

            pop RBP
            mov EDI,OFFSET .L_641c18
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4020c8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402100:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402090
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402110:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
            sub RSP,24
.L_402121:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            call .L_404230

            test RAX,RAX
            je .L_402229

            mov RBX,RAX
            call .L_413d20

            test RAX,RAX
            mov R15,RAX
            mov RDI,RBX
            je .L_402290

            call .L_403540

            mov EDI,EAX
            mov R13D,EAX
            call .L_40d760

            mov R14D,EAX
            lea EAX,DWORD PTR [RAX*8]
            mov ECX,263193
            mov RDX,R15
            mov RDI,RBX
            mov R12D,EAX
            or EAX,1
            or R12D,655360
            cmp R13D,1281450528
            cmovne R12D,EAX
            xor R9D,R9D
            xor R8D,R8D
            mov ESI,R12D
            call .L_410e60

            mov RDI,RBX
            mov R13,RAX
            call .L_403eb0

            mov RDI,R15
            call .L_403eb0

            test R13,R13
            je .L_402229

            and R12D,1
            mov EAX,R14D
            mov RBX,RSP
            jne .L_402250

            lea RAX,QWORD PTR [RAX*8+22]
            shr RAX,4
            shl RAX,4
            sub RSP,RAX
            test R14D,R14D
            mov RSI,RSP
            je .L_40220d

            lea EDX,DWORD PTR [R14-1]
            movsd XMM0,QWORD PTR [RIP+.L_433278]
            mov RAX,RSI
            lea RDX,QWORD PTR [RSI+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402200:

            movsd QWORD PTR [RAX],XMM0
            add RAX,8
            cmp RDX,RAX
            jne .L_402200
.L_40220d:

            lea RDX,QWORD PTR [RBP-60]
            mov RDI,R13
            mov ECX,1
            call .L_410260

            mov RDI,R13
            mov RSP,RBX
            call .L_40fdf0
.L_402229:

            xor EAX,EAX
            mov RCX,QWORD PTR [RBP-56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_402297

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_402248:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402250:

            add RAX,15
            shr RAX,4
            shl RAX,4
            sub RSP,RAX
            test R14D,R14D
            mov RSI,RSP
            je .L_40220d

            lea EDX,DWORD PTR [R14-1]
            mov RAX,RSP
            lea RDX,QWORD PTR [RSP+RDX*1+1]
            nop
            nop
            nop
            nop
            nop
.L_402278:

            mov BYTE PTR [RAX],128
            add RAX,1
            cmp RAX,RDX
            jne .L_402278

            jmp .L_40220d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402290:

            call .L_403eb0

            jmp .L_402229
.L_402297:

            call __stack_chk_fail@PLT
.L_40229c:

            nop
            nop
            nop
            nop
.L_4022a0:

            mov EAX,ECX
            mov RCX,QWORD PTR [RDI]
            imul EDX,EAX
            add DWORD PTR [RCX],EDX
            ret 
.L_4022ab:

            nop
            nop
            nop
            nop
            nop
.L_4022b0:

            mov RAX,QWORD PTR [RDI]
            mov DWORD PTR [RAX],ESI
            mov EAX,1
            ret 
.L_4022bb:

            nop
            nop
            nop
            nop
            nop
.L_4022c0:

            mov RAX,QWORD PTR [RDI]
            mov EAX,DWORD PTR [RAX]
            ret 
.L_4022c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4022d0:

            mov RAX,QWORD PTR [RDI]
            add ESI,DWORD PTR [RAX]
            cmp ESI,DWORD PTR [RDI+16]
            mov DWORD PTR [RAX],ESI
            jbe .L_4022df

            mov DWORD PTR [RDI+16],ESI
.L_4022df:

            mov EAX,1
            ret 
.L_4022e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4022f0:

            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            test RDX,RDX
            je .L_4022fd

            mov EAX,DWORD PTR [RDX+12]
.L_4022fd:

            ret 
.L_4022ff:

            nop
.L_402300:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov RSI,QWORD PTR [RBX]
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_426070

            mov EAX,1
            pop RBX
            ret 
.L_402323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402330:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RBP,QWORD PTR [RDI]
            mov RDI,QWORD PTR [RDI+8]
            mov EAX,DWORD PTR [RBP+16]
            test EAX,EAX
            je .L_402359

            mov RSI,QWORD PTR [RBP]
            test RSI,RSI
            je .L_402359

            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
.L_402359:

            mov RSI,RBP
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_426070

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_402379:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402380:

            push RBX
            sub RSP,64
.L_402385:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40245a

            test ESI,ESI
            js .L_40243b

            movsxd RAX,ESI
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov RSI,QWORD PTR [RBX+2136]
            test RSI,RSI
            je .L_402417

            mov EAX,DWORD PTR [RDI+RAX*4+1736]
            test EAX,EAX
            jne .L_402430

            mov RAX,QWORD PTR [RBX+2936]
            test RAX,RAX
            je .L_402417

            movdqu XMM0,XMMWORD PTR [RAX]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [RSP+48],RAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+40],RAX
            mov EAX,DWORD PTR [RDI+72]
            mov RDI,RSP
            mov DWORD PTR [RSP+48],EAX
            call QWORD PTR [RSP+32]

            mov QWORD PTR [RBX+2136],0
.L_402417:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_402479

            add RSP,64
.L_40242b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402430:

            mov RDI,QWORD PTR [RDI+8]
            call .L_426070

            jmp .L_402417
.L_40243b:

            lea RCX,QWORD PTR [RIP+.L_405260]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404eba]
            mov EDX,593
            call __assert_fail@PLT
.L_40245a:

            lea RCX,QWORD PTR [RIP+.L_405260]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404ea5]
            mov EDX,592
            call __assert_fail@PLT
.L_402479:

            call __stack_chk_fail@PLT
.L_40247e:

            nop
            nop
.L_402480:

            push R12
            push RBP
            xor EAX,EAX
            push RBX
            mov RBP,QWORD PTR [RDI]
            test RBP,RBP
            je .L_4024b1

            mov R12,RDI
            mov EDI,DWORD PTR [RBP+12]
            mov EAX,DWORD PTR [RBP+8]
            mov EBX,ESI
            mov RSI,RDX
            mov EDX,EAX
            lea ECX,DWORD PTR [RDI+RBX*1]
            sub EDX,EDI
            cmp ECX,EAX
            cmova EBX,EDX
            test EBX,EBX
            jne .L_4024c0
.L_4024ac:

            mov EAX,1
.L_4024b1:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4024c0:

            add RDI,QWORD PTR [RBP]
            mov EDX,EBX
            call memmove@PLT

            add EBX,DWORD PTR [RBP+12]
            cmp EBX,DWORD PTR [R12+16]
            mov DWORD PTR [RBP+12],EBX
            jbe .L_4024ac

            mov DWORD PTR [R12+16],EBX
            jmp .L_4024ac
.L_4024df:

            nop
.L_4024e0:

            push R12
            push RBP
            mov R8,RSI
            push RBX
            mov RBP,QWORD PTR [RDI]
            mov EBX,EDX
            imul EBX,ECX
            mov ESI,DWORD PTR [RBP+12]
            mov EAX,DWORD PTR [RBP+8]
            lea EDX,DWORD PTR [RSI+RBX*1]
            cmp EDX,EAX
            ja .L_402520

            add RSI,QWORD PTR [RBP]
            mov EDX,EBX
            mov RDI,R8
            mov R12D,ECX
            call memmove@PLT

            add DWORD PTR [RBP+12],EBX
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402520:

            mov RDI,QWORD PTR [RDI+8]
            sub EAX,ESI
            lea RDX,QWORD PTR [RIP+.L_405028]
            mov ECX,EAX
            mov R8D,EBX
            xor EAX,EAX
            mov ESI,5
            call .L_426320

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_402545:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402550:

            push R12
            mov R12,RDI
            mov RDI,RSI
            mov ESI,EDX
            mov EDX,ECX
            mov RCX,QWORD PTR [R12]
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            call fread@PLT

            cmp EBX,EAX
            je .L_402597

            mov RCX,RAX
            mov RDI,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RIP+.L_405070]
            imul EBX,EBP
            xor EAX,EAX
            mov ESI,1
            imul ECX,EBP
            mov R8D,EBX
            call .L_426320

            xor EAX,EAX
.L_402597:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40259c:

            nop
            nop
            nop
            nop
.L_4025a0:

            mov RAX,QWORD PTR [RDI]
            cmp DWORD PTR [RAX+8],ESI
            jb .L_4025b8

            mov DWORD PTR [RAX+12],ESI
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4025b8:

            sub RSP,8
            mov RDI,QWORD PTR [RDI+8]
            lea RDX,QWORD PTR [RIP+.L_4050a8]
            xor EAX,EAX
            mov ESI,6
            call .L_426320

            xor EAX,EAX
            add RSP,8
            ret 
.L_4025da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4025e0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call fclose@PLT

            xor EDX,EDX
            test EAX,EAX
            jne .L_402603

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_426070

            mov EDX,1
.L_402603:

            mov EAX,EDX
            pop RBX
            ret 
.L_402607:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402610:

            test ESI,ESI
            jne .L_402620

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402620:

            sub RSP,8
            add DWORD PTR [RDI+16],ESI
            mov RCX,QWORD PTR [RDI]
            mov R8,RDX
            mov ESI,ESI
            mov EDX,1
            mov RDI,R8
            call fwrite@PLT

            cmp RAX,1
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_40264b:

            nop
            nop
            nop
            nop
            nop
.L_402650:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call ftell@PLT

            cmp RAX,-1
            je .L_402668

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402668:

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_4050d8]
            xor EAX,EAX
            mov ESI,1
            call .L_426320

            xor EAX,EAX
            pop RBX
            ret 
.L_402683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402690:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            xor EDX,EDX
            mov ESI,ESI
            call fseek@PLT

            test EAX,EAX
            mov EDX,1
            je .L_4026c2

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_405100]
            mov ESI,1
            xor EAX,EAX
            call .L_426320

            xor EDX,EDX
.L_4026c2:

            mov EAX,EDX
            pop RBX
            ret 
.L_4026c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4026d0:

            mov R10D,DWORD PTR [RDI+132]
            test R10D,R10D
            je .L_402790

            push RBP
            push RBX
            mov RBP,RDX
            mov R9,RDI
            sub RSP,8
.L_4026ec:

            cmp ESI,DWORD PTR [RDI+136]
            je .L_4027a8

            lea R8D,DWORD PTR [R10-1]
            mov EAX,1
            add R8,1
            jmp .L_402721
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402710:

            lea RCX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [R9+RCX*4+132]
            je .L_402748

            mov RAX,RCX
.L_402721:

            cmp RAX,R8
            jne .L_402710

            cmp R10D,99
            ja .L_402768

            mov DWORD PTR [RDX],R10D
            add DWORD PTR [RDI+132],1
            add RSP,8
.L_40273a:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402748:

            mov EBX,EAX
.L_40274a:

            mov ESI,EBX
            mov RDI,R9
            call .L_402380

            mov DWORD PTR [RBP],EBX
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402768:

            mov RDI,QWORD PTR [R9+8]
            lea RDX,QWORD PTR [RIP+.L_404ec3]
            xor EAX,EAX
            mov ECX,100
            mov ESI,2
            call .L_426320

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402790:

            xor R10D,R10D
            mov EAX,1
            mov DWORD PTR [RDX],R10D
            add DWORD PTR [RDI+132],1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4027a8:

            xor EBX,EBX
            jmp .L_40274a
.L_4027ac:

            nop
            nop
            nop
            nop
.L_4027b0:

            push RBP
            push RBX
            mov ESI,320
            mov RBP,RDI
            sub RSP,8
.L_4027be:

            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_40283c

            mov ESI,4
            mov RDI,RBP
            call .L_425fe0

            test RAX,RAX
            je .L_402850

            mov DWORD PTR [RAX],0
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_4022a0]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_4022b0]
            mov BYTE PTR [RBX+24],0
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_402300]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_4022c0]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_4022d0]
            mov QWORD PTR [RBX+312],RAX
.L_40283c:

            add RSP,8
.L_402840:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402850:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_426070

            jmp .L_40283c
.L_40285f:

            nop
.L_402860:

            test RCX,RCX
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40286b:

            je .L_402a36

            mov R14,RSI
            mov ESI,320
            mov RBP,RDI
            mov R13D,EDX
            mov R12,RCX
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_402931

            movsx ECX,BYTE PTR [R12]
            cmp CL,114
            je .L_402968

            cmp CL,119
            jne .L_402940

            mov ESI,24
            mov RDI,RBP
            call .L_425fe0

            test RAX,RAX
            mov R12,RAX
            je .L_4029e9

            mov QWORD PTR [RAX],R14
            mov DWORD PTR [RAX+8],R13D
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RBX+20],0
.L_4028d9:

            lea RAX,QWORD PTR [RIP+.L_4024e0]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX],R12
            mov DWORD PTR [RBX+16],0
            mov BYTE PTR [RBX+24],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_4025a0]
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_402330]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_4022f0]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_402480]
            mov QWORD PTR [RBX+312],RAX
.L_402931:

            mov RAX,RBX
            pop RBX
.L_402935:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402940:

            lea RDX,QWORD PTR [RIP+.L_404ef2]
            mov RDI,RBP
            xor EAX,EAX
            xor EBX,EBX
            mov ESI,8
            call .L_426320

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402968:

            mov ESI,24
            mov RDI,RBP
            call .L_425fe0

            test RAX,RAX
            mov R12,RAX
            je .L_4029e9

            test R14,R14
            je .L_4029c8

            mov ESI,R13D
            mov RDI,RBP
            call .L_425fb0

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_402a00

            mov EDX,R13D
            mov RSI,R14
            mov RDI,RAX
            call memmove@PLT

            movabs RAX,4294967296
            mov DWORD PTR [R12+8],R13D
            mov QWORD PTR [R12+12],RAX
            mov DWORD PTR [RBX+20],R13D
            jmp .L_4028d9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4029c8:

            lea RDX,QWORD PTR [RIP+.L_405128]
            mov ESI,5
            mov RDI,RBP
            xor EAX,EAX
            call .L_426320

            mov RSI,R12
            mov RDI,RBP
            call .L_426070
.L_4029e9:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_426070

            jmp .L_402931
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402a00:

            mov RSI,R12
            mov RDI,RBP
            call .L_426070

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_426070

            lea RDX,QWORD PTR [RIP+.L_405150]
            mov ECX,R13D
            mov ESI,5
            mov RDI,RBP
            xor EAX,EAX
            call .L_426320

            jmp .L_402931
.L_402a36:

            lea RCX,QWORD PTR [RIP+.L_4052e0]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404ed6]
            mov EDX,243
            call __assert_fail@PLT
.L_402a55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402a60:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_402a6a:

            test RSI,RSI
            je .L_402c21

            test RDX,RDX
            mov R13,RDX
            je .L_402c40

            mov R12,RSI
            mov ESI,320
            mov RBP,RDI
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_402b3e

            movzx EAX,BYTE PTR [R13]
            cmp AL,114
            je .L_402b90

            cmp AL,119
            jne .L_402b50

            lea RSI,QWORD PTR [RIP+.L_404f59]
            mov RDI,R12
            call fopen@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_402c0a

            mov DWORD PTR [RBX+20],0
.L_402ad2:

            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+8],RBP
            mov QWORD PTR [RBX],R13
            mov DWORD PTR [RBX+16],0
            mov EDX,255
            mov RSI,R12
            call strncpy@PLT

            lea RAX,QWORD PTR [RIP+.L_402550]
            mov BYTE PTR [RBX+279],0
            mov QWORD PTR [RBX+280],RAX
            lea RAX,QWORD PTR [RIP+.L_402690]
            mov QWORD PTR [RBX+288],RAX
            lea RAX,QWORD PTR [RIP+.L_4025e0]
            mov QWORD PTR [RBX+296],RAX
            lea RAX,QWORD PTR [RIP+.L_402650]
            mov QWORD PTR [RBX+304],RAX
            lea RAX,QWORD PTR [RIP+.L_402610]
            mov QWORD PTR [RBX+312],RAX
.L_402b3e:

            add RSP,8
.L_402b42:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402b50:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_426070

            movsx ECX,BYTE PTR [R13]
            lea RDX,QWORD PTR [RIP+.L_404ef2]
            mov RDI,RBP
            xor EAX,EAX
            mov ESI,1
            call .L_426320

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402b90:

            lea RSI,QWORD PTR [RIP+.L_404f25]
            mov RDI,R12
            call fopen@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_402bc0

            mov RDI,RAX
            call .L_425e40

            test EAX,EAX
            js .L_402beb

            mov DWORD PTR [RBX+20],EAX
            jmp .L_402ad2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402bc0:

            mov RSI,RBX
            mov RDI,RBP
            call .L_426070

            lea RDX,QWORD PTR [RIP+.L_404f28]
            mov RCX,R12
.L_402bd5:

            mov ESI,1
            mov RDI,RBP
            xor EAX,EAX
            call .L_426320

            xor EBX,EBX
            jmp .L_402b3e
.L_402beb:

            mov RDI,R13
            call fclose@PLT

            mov RSI,RBX
            mov RDI,RBP
            call .L_426070

            mov RCX,R12
            lea RDX,QWORD PTR [RIP+.L_404f3c]
            jmp .L_402bd5
.L_402c0a:

            mov RSI,RBX
            mov RDI,RBP
            call .L_426070

            mov RCX,R12
            lea RDX,QWORD PTR [RIP+.L_404f5c]
            jmp .L_402bd5
.L_402c21:

            lea RCX,QWORD PTR [RIP+.L_4052c0]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404f0b]
            mov EDX,379
            call __assert_fail@PLT
.L_402c40:

            lea RCX,QWORD PTR [RIP+.L_4052c0]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404ed6]
            mov EDX,380
            call __assert_fail@PLT
.L_402c5f:

            nop
.L_402c60:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_402c67:

            mov RDI,RSI
            mov RBP,RSI
            call .L_425e40

            test EAX,EAX
            js .L_402cf0

            mov ESI,320
            mov RDI,R12
            mov RBX,RAX
            call .L_425fe0

            test RAX,RAX
            je .L_402ce6

            lea RCX,QWORD PTR [RIP+.L_402550]
            lea RDX,QWORD PTR [RIP+.L_402690]
            lea RSI,QWORD PTR [RIP+.L_402610]
            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX],RBP
            mov QWORD PTR [RAX+280],RCX
            mov QWORD PTR [RAX+288],RDX
            lea RCX,QWORD PTR [RIP+.L_4025e0]
            lea RDX,QWORD PTR [RIP+.L_402650]
            mov DWORD PTR [RAX+16],0
            mov DWORD PTR [RAX+20],EBX
            mov BYTE PTR [RAX+24],0
            mov QWORD PTR [RAX+296],RCX
            mov QWORD PTR [RAX+304],RDX
            mov QWORD PTR [RAX+312],RSI
.L_402ce6:

            pop RBX
.L_402ce7:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402cf0:

            lea RDX,QWORD PTR [RIP+.L_404f71]
            xor EAX,EAX
            mov ESI,1
            mov RDI,R12
            call .L_426320

            xor EAX,EAX
            jmp .L_402ce6
.L_402d0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402d10:

            jmp QWORD PTR [RDI+296]
.L_402d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d20:

            test RDI,RDI
            je .L_402d30

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d30:

            xor EAX,EAX
            ret 
.L_402d33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402d40:

            push RBP
            push RBX
            mov RBP,RDI
            xor EDI,EDI
            sub RSP,24
.L_402d4b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call time@PLT

            mov ESI,3752
            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_402db6

            mov RDI,RSP
            mov QWORD PTR [RAX+8],RBP
            mov DWORD PTR [RAX+132],0
            mov DWORD PTR [RAX+72],34603008
            call gmtime@PLT

            lea RDI,QWORD PTR [RBX+16]
            mov EDX,56
            mov RSI,RAX
            call memmove@PLT

            mov RDI,RBP
            call .L_426520

            mov QWORD PTR [RBX+3744],RAX
.L_402db6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_402dd0

            add RSP,24
.L_402dcd:

            pop RBX
            pop RBP
            ret 
.L_402dd0:

            call __stack_chk_fail@PLT
.L_402dd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402de0:

            test RDI,RDI
            je .L_402df0

            mov RAX,QWORD PTR [RDI+8]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402df0:

            xor EAX,EAX
            ret 
.L_402df3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e00:

            test RDI,RDI
            je .L_402e0c

            mov EAX,DWORD PTR [RDI+132]
            ret 
.L_402e0c:

            mov EAX,4294967295
            ret 
.L_402e12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e20:

            cmp DWORD PTR [RDI+132],ESI
            jb .L_402e2d

            cmp ESI,99
            jbe .L_402e30
.L_402e2d:

            xor EAX,EAX
            ret 
.L_402e30:

            mov ESI,ESI
            mov EAX,DWORD PTR [RDI+RSI*4+136]
            ret 
.L_402e3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_402e40:

            mov R9D,DWORD PTR [RDI+132]
            lea R8D,DWORD PTR [R9-1]
            add R8,1
.L_402e4f:

            test R9D,R9D
            je .L_402e7d

            cmp ESI,DWORD PTR [RDI+136]
            mov EAX,1
            jne .L_402e78

            jmp .L_402e88
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402e68:

            lea RCX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RDI+RCX*4+132]
            je .L_402e90

            mov RAX,RCX
.L_402e78:

            cmp R8,RAX
            jne .L_402e68
.L_402e7d:

            mov EAX,4294967295
.L_402e82:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402e88:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_402e90:

            test EDX,EDX
            je .L_402e82

            movsxd RCX,EAX
            mov ESI,DWORD PTR [RDI+RCX*4+536]
            test ESI,ESI
            jne .L_402e4f

            ret 
.L_402ea4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402eb0:

            mov EAX,DWORD PTR [RDI+132]
            test EAX,EAX
            je .L_402ee2

            cmp ESI,DWORD PTR [RDI+136]
            je .L_402ee8

            lea EDX,DWORD PTR [RAX-1]
            mov EAX,1
            add RDX,1
            jmp .L_402edd
.L_402ed0:

            add RAX,1
            cmp ESI,DWORD PTR [RDI+RAX*4+132]
            je .L_402ee8
.L_402edd:

            cmp RDX,RAX
            jne .L_402ed0
.L_402ee2:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402ee8:

            mov EAX,1
            ret 
.L_402eee:

            nop
            nop
.L_402ef0:

            push R15
            push R14
            mov ECX,1
            push R13
            push R12
            mov EDX,128
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,184
.L_402f0e:

            mov RBX,QWORD PTR [RDI]
            lea R12,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_402f68
.L_402f3a:

            xor EAX,EAX
.L_402f3c:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4031c6

            add RSP,184
.L_402f5a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402f68:

            mov EDI,DWORD PTR [RSP+68]
            call .L_405350

            cmp EAX,1633907568
            je .L_402f98

            mov RDI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_405178]
            xor EAX,EAX
            mov ESI,11
            call .L_426320

            xor EAX,EAX
            jmp .L_402f3c
            nop
            nop
            nop
            nop
            nop
.L_402f98:

            mov EDI,DWORD PTR [RSP+44]
            call .L_405350

            mov EDI,DWORD PTR [RSP+48]
            mov DWORD PTR [RBP+76],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+52]
            mov DWORD PTR [RBP+80],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+96]
            mov DWORD PTR [RBP+84],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+76]
            mov DWORD PTR [RBP+88],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+80]
            mov DWORD PTR [RBP+92],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+84]
            mov DWORD PTR [RBP+96],EAX
            call .L_405350

            mov EDI,DWORD PTR [RSP+112]
            mov DWORD PTR [RBP+100],EAX
            call .L_405350

            lea RSI,QWORD PTR [R12+56]
            lea RDI,QWORD PTR [RBP+104]
            mov DWORD PTR [RBP+112],EAX
            call .L_405380

            mov EAX,DWORD PTR [RSP+40]
            cmp AL,9
            mov DWORD PTR [RSP+16],EAX
            jbe .L_403017

            mov BYTE PTR [RSP+16],9
.L_403017:

            movzx EAX,AH
            mov ECX,9
            mov EDX,EAX
            and EAX,15
            and EDX,4294967280
            cmp AL,9
            cmova EAX,ECX
            cmp DL,144
            mov ECX,4294967184
            cmova EDX,ECX
            or EAX,EDX
            mov BYTE PTR [RSP+17],AL
            xor EAX,EAX
            mov WORD PTR [RSP+18],AX
            mov EDI,DWORD PTR [RSP+16]
            call .L_405350

            mov EDI,DWORD PTR [RSP+32]
            mov DWORD PTR [RBP+72],EAX
            call .L_405350

            mov R13D,EAX
            mov RAX,QWORD PTR [RBP]
            lea RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [R12+24]
            mov R14D,DWORD PTR [RAX+20]
            call .L_406350

            movdqu XMM0,XMMWORD PTR [RSP+116]
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            movups XMMWORD PTR [RBP+116],XMM0
            call .L_4055b0

            test EAX,EAX
            je .L_402f3a

            mov ECX,DWORD PTR [RSP+12]
            cmp ECX,100
            ja .L_4031a8

            test ECX,ECX
            mov DWORD PTR [RBP+132],0
            je .L_403198

            cmp R14D,R13D
            cmova R14D,R13D
            lea R13,QWORD PTR [RSP+20]
            xor R12D,R12D
            lea R15,QWORD PTR [R13+4]
            nop
            nop
            nop
            nop
            nop
.L_4030c8:

            mov RSI,R13
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_402f3a

            mov RSI,R15
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_402f3a

            lea RSI,QWORD PTR [R13+8]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_402f3a

            mov EDX,DWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP+28]
            mov EAX,EDX
            add EAX,ECX
            jb .L_403189

            cmp EAX,R14D
            ja .L_403189

            mov EAX,DWORD PTR [RBP+132]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov RSI,RAX
            mov EAX,DWORD PTR [RSP+20]
            test ESI,ESI
            mov DWORD PTR [R8+1336],EDX
            mov DWORD PTR [R8+936],ECX
            mov DWORD PTR [R8+136],EAX
            je .L_403180

            lea EDI,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RBP+136]
            lea RDI,QWORD PTR [RBP+RDI*4+140]
            jmp .L_403161
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403158:

            add RAX,4
            cmp RAX,RDI
            je .L_403180
.L_403161:

            cmp EDX,DWORD PTR [RAX+1200]
            jne .L_403158

            cmp ECX,DWORD PTR [RAX+800]
            jne .L_403158

            mov R9D,DWORD PTR [RAX]
            mov DWORD PTR [R8+536],R9D
            jmp .L_403158
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403180:

            add ESI,1
            mov DWORD PTR [RBP+132],ESI
.L_403189:

            add R12D,1
            cmp DWORD PTR [RSP+12],R12D
            ja .L_4030c8
.L_403198:

            mov EAX,1
            jmp .L_402f3c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4031a8:

            mov RDI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_404ec3]
            xor EAX,EAX
            mov ESI,2
            call .L_426320

            xor EAX,EAX
            jmp .L_402f3c
.L_4031c6:

            call __stack_chk_fail@PLT
.L_4031cb:

            nop
            nop
            nop
            nop
            nop
.L_4031d0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,ESI
            sub RSP,160
.L_4031e0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call .L_405350

            mov EDI,1818455411
            mov DWORD PTR [RSP+16],EAX
            lea RBP,QWORD PTR [RSP+16]
            call .L_405350

            mov EDI,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+20],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+76]
            mov DWORD PTR [RSP+24],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+80]
            mov DWORD PTR [RSP+28],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+84]
            mov DWORD PTR [RSP+32],EAX
            call .L_405350

            lea RSI,QWORD PTR [RBX+16]
            lea RDI,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+36],EAX
            call .L_406470

            mov EDI,1633907568
            call .L_405350

            mov EDI,1095782476
            mov DWORD PTR [RSP+52],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+92]
            mov DWORD PTR [RSP+56],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+96]
            mov DWORD PTR [RSP+60],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+100]
            mov DWORD PTR [RSP+64],EAX
            call .L_405350

            lea RSI,QWORD PTR [RBX+104]
            lea RDI,QWORD PTR [RBP+56]
            mov DWORD PTR [RSP+68],EAX
            call .L_405380

            mov EDI,DWORD PTR [RBX+88]
            call .L_405350

            mov DWORD PTR [RSP+80],EAX
            call .L_40de30

            movsd XMM0,QWORD PTR [RAX]
            call .L_4062e0

            mov EDI,EAX
            call .L_405350

            mov DWORD PTR [RSP+84],EAX
            call .L_40de30

            movsd XMM0,QWORD PTR [RAX+8]
            call .L_4062e0

            mov EDI,EAX
            call .L_405350

            mov DWORD PTR [RSP+88],EAX
            call .L_40de30

            movsd XMM0,QWORD PTR [RAX+16]
            call .L_4062e0

            mov EDI,EAX
            call .L_405350

            mov EDI,1818455411
            mov DWORD PTR [RSP+92],EAX
            call .L_405350

            pxor XMM0,XMM0
            mov DWORD PTR [RSP+96],EAX
            mov RAX,QWORD PTR [RBX]
            mov RDX,RBP
            mov ESI,128
            movups XMMWORD PTR [RSP+116],XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP+116],0
            mov DWORD PTR [RBP+124],0
            movdqu XMM0,XMMWORD PTR [RBX+116]
            movups XMMWORD PTR [RSP+100],XMM0
            call QWORD PTR [RAX+312]

            test EAX,EAX
            je .L_4033f8

            mov ESI,DWORD PTR [RBX+132]
            test ESI,ESI
            je .L_40336f

            lea EDX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [RBX+136]
            xor ESI,ESI
            lea RDX,QWORD PTR [RBX+RDX*4+140]
            nop
            nop
            nop
.L_403360:

            cmp DWORD PTR [RAX],1
            sbb ESI,-1
            add RAX,4
            cmp RAX,RDX
            jne .L_403360
.L_40336f:

            mov RDI,QWORD PTR [RBX]
            call .L_405c70

            test EAX,EAX
            je .L_4033f8

            mov EAX,DWORD PTR [RBX+132]
            mov EBP,1
            lea R12,QWORD PTR [RSP+4]
            test EAX,EAX
            je .L_4033ea

            nop
.L_403390:

            mov EDI,DWORD PTR [RBX+RBP*4+132]
            test EDI,EDI
            je .L_4033dc

            call .L_405350

            mov EDI,DWORD PTR [RBX+RBP*4+1332]
            mov DWORD PTR [RSP+4],EAX
            call .L_405350

            mov EDI,DWORD PTR [RBX+RBP*4+932]
            mov DWORD PTR [RSP+8],EAX
            call .L_405350

            mov DWORD PTR [RSP+12],EAX
            mov RAX,QWORD PTR [RBX]
            mov RDX,R12
            mov ESI,12
            mov RDI,RAX
            call QWORD PTR [RAX+312]

            test EAX,EAX
            je .L_4033f8
.L_4033dc:

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+132],EAX
            ja .L_403390
.L_4033ea:

            mov EAX,1
            jmp .L_4033fa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033f8:

            xor EAX,EAX
.L_4033fa:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_403419

            add RSP,160
.L_403414:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_403419:

            call __stack_chk_fail@PLT
.L_40341e:

            nop
            nop
.L_403420:

            mov EAX,DWORD PTR [RDI+88]
            ret 
.L_403424:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403430:

            mov DWORD PTR [RDI+88],ESI
            ret 
.L_403434:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403440:

            mov EAX,DWORD PTR [RDI+92]
            ret 
.L_403444:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403450:

            mov DWORD PTR [RDI+92],ESI
            ret 
.L_403454:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403460:

            mov EAX,DWORD PTR [RDI+96]
            ret 
.L_403464:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403470:

            mov DWORD PTR [RDI+96],ESI
            ret 
.L_403474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403480:

            mov EAX,DWORD PTR [RDI+112]
            ret 
.L_403484:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403490:

            mov EAX,DWORD PTR [RDI+100]
            ret 
.L_403494:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034a0:

            mov DWORD PTR [RDI+100],ESI
            ret 
.L_4034a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034b0:

            mov RAX,QWORD PTR [RDI+104]
            mov QWORD PTR [RSI],RAX
            ret 
.L_4034b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034c0:

            mov QWORD PTR [RDI+104],RSI
            ret 
.L_4034c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034d0:

            movdqu XMM0,XMMWORD PTR [RDI+116]
            movups XMMWORD PTR [RSI],XMM0
            ret 
.L_4034d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034e0:

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RDI+116],XMM0
            ret 
.L_4034e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034f0:

            mov RAX,RSI
            lea RSI,QWORD PTR [RDI+16]
            sub RSP,8
            mov EDX,56
            mov RDI,RAX
            call memmove@PLT

            mov EAX,1
            add RSP,8
            ret 
.L_403512:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403520:

            mov EAX,DWORD PTR [RDI+84]
            ret 
.L_403524:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403530:

            mov DWORD PTR [RDI+84],ESI
            ret 
.L_403534:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403540:

            mov EAX,DWORD PTR [RDI+80]
            ret 
.L_403544:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403550:

            mov DWORD PTR [RDI+80],ESI
            ret 
.L_403554:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403560:

            mov EAX,DWORD PTR [RDI+76]
            ret 
.L_403564:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403570:

            mov DWORD PTR [RDI+76],ESI
            ret 
.L_403574:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403580:

            mov EAX,DWORD PTR [RDI+72]
            ret 
.L_403584:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403590:

            mov DWORD PTR [RDI+72],ESI
            ret 
.L_403594:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4035a0:

            push RBX
            sub RSP,112
.L_4035a5:

            mulsd XMM0,QWORD PTR [RIP+.L_4052f8]
            movsd XMM3,QWORD PTR [RIP+.L_405320]
            movsd XMM4,QWORD PTR [RIP+.L_405308]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            addsd XMM0,QWORD PTR [RIP+.L_405300]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_40361e

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_405310]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_40361e:

            cvttsd2si RAX,XMM1
            test EAX,EAX
            mov ECX,EAX
            je .L_4036a4

            mov R8,RSP
            xor R10D,R10D
            mov R11D,3435973837
            mov R9,R8
            jmp .L_403643
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403640:

            mov R10D,EAX
.L_403643:

            mov EAX,ECX
            mul R11D
            shr EDX,3
            lea EAX,DWORD PTR [RDX+RDX*4]
            add EAX,EAX
            sub ECX,EAX
            lea EAX,DWORD PTR [R10+1]
            test EDX,EDX
            setne BL
            mov BYTE PTR [R9],CL
            movsx ESI,CL
            cmp EAX,99
            mov ECX,EDX
            setle DL
            add R9,1
            test BL,DL
            jne .L_403640

            lea EAX,DWORD PTR [R10-1]
            movsxd RDX,R10D
            xor ECX,ECX
            cdqe 
            add RAX,R8
            mov RBX,RAX
            sub RBX,RDX
            mov RDX,RBX
            jmp .L_403697
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403690:

            movsx ESI,BYTE PTR [RAX]
            sub RAX,1
.L_403697:

            shl ECX,4
            add ECX,ESI
            cmp RDX,RAX
            jne .L_403690

            shl ECX,16
.L_4036a4:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            mov DWORD PTR [RDI+72],ECX
            jne .L_4036bd

            add RSP,112
.L_4036bb:

            pop RBX
            ret 
.L_4036bd:

            call __stack_chk_fail@PLT
.L_4036c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036d0:

            sub RSP,120

            movzx EDX,WORD PTR [RDI+74]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test EDX,EDX
            je .L_403780

            mov RCX,RSP
            xor R8D,R8D
            mov RSI,RCX
            jmp .L_403703
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403700:

            movsxd R8,EDI
.L_403703:

            mov EDI,EDX
            shr EDX,4
            and EDI,15
            test EDX,EDX
            mov BYTE PTR [RSI],DIL
            movsx EAX,DIL
            lea EDI,DWORD PTR [R8+1]
            setne R10B
            cmp EDI,99
            setle R9B
            add RSI,1
            test R10B,R9B
            jne .L_403700

            lea EDX,DWORD PTR [R8-1]
            movsxd RDX,EDX
            add RDX,RCX
            xor ECX,ECX
            mov RSI,RDX
            sub RSI,R8
            jmp .L_403747
.L_403740:

            movsx EAX,BYTE PTR [RDX]
            sub RDX,1
.L_403747:

            lea ECX,DWORD PTR [RCX+RCX*4]
            cmp RSI,RDX
            lea ECX,DWORD PTR [RAX+RCX*2]
            jne .L_403740

            pxor XMM0,XMM0
            cvtsi2sd XMM0,RCX
            divsd XMM0,QWORD PTR [RIP+.L_4052f8]
.L_403763:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_403786

            add RSP,120

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403780:

            pxor XMM0,XMM0
            jmp .L_403763
.L_403786:

            call __stack_chk_fail@PLT
.L_40378b:

            nop
            nop
            nop
            nop
            nop
.L_403790:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,136
.L_4037a7:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_4036d0

            mov ECX,DWORD PTR [R13+132]
            movsd QWORD PTR [RSP+16],XMM0
            test ECX,ECX
            je .L_403a58

            lea RAX,QWORD PTR [RSP+48]
            mov R15D,1
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40384b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4037f0:

            mov EAX,DWORD PTR [R13+R15*4+1732]
            test EAX,EAX
            je .L_403948

            mov ESI,DWORD PTR [R13+R15*4+932]
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            cmp EAX,1
            jne .L_403918
.L_40381a:

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,RBX
            sub EAX,EBP
            mov DWORD PTR [R13+R15*4+932],EAX
            call .L_406760

            test EAX,EAX
            je .L_403918
.L_403837:

            mov EAX,R15D
            add R15,1
            cmp DWORD PTR [R13+132],EAX
            jbe .L_403a58
.L_40384b:

            mov ESI,DWORD PTR [R13+R15*4+132]
            test ESI,ESI
            je .L_403837

            mov EDX,DWORD PTR [R13+R15*4+532]
            test EDX,EDX
            jne .L_403837

            mov RDX,QWORD PTR [R13+R15*8+2128]
            mov EBP,DWORD PTR [RBX+16]
            test RDX,RDX
            mov DWORD PTR [R13+R15*4+1332],EBP
            jne .L_4037f0

            test EBP,EBP
            je .L_403837

            mov EAX,DWORD PTR [R12+R15*4+932]
            mov ESI,DWORD PTR [R12+R15*4+1332]
            mov DWORD PTR [RSP+8],EAX
            mov RAX,QWORD PTR [R12]
            mov RDI,RAX
            call QWORD PTR [RAX+288]

            test EAX,EAX
            je .L_403918

            mov RDI,QWORD PTR [R13+8]
            mov ESI,DWORD PTR [RSP+8]
            call .L_425fb0

            test RAX,RAX
            mov R14,RAX
            je .L_403918

            mov RAX,QWORD PTR [R12]
            mov ECX,1
            mov EDX,DWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            cmp EAX,1
            jne .L_403918

            mov RDX,R14
            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_403918

            mov RDI,QWORD PTR [R13+8]
            mov RSI,R14
            call .L_426070

            mov EAX,DWORD PTR [RBX+16]
            mov RDI,RBX
            sub EAX,EBP
            mov DWORD PTR [R13+R15*4+932],EAX
            call .L_406760

            test EAX,EAX
            jne .L_403837
.L_403918:

            xor R14D,R14D
.L_40391b:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_403a90

            add RSP,136
.L_403939:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403948:

            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+8],RDX
            call .L_41d510

            test RAX,RAX
            mov R14,RAX
            je .L_403837

            mov RAX,QWORD PTR [RAX+88]
            mov RDX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_403a87

            mov RDI,RDX
            movsd XMM0,QWORD PTR [RSP+16]
            call RAX

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,EAX
.L_403986:

            mov RDI,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+8],RDX
            call .L_41d340

            test RAX,RAX
            mov RCX,RAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_403a63

            mov EAX,DWORD PTR [RAX]
            mov RDI,RBX
            mov QWORD PTR [RSP+32],RDX
            mov QWORD PTR [RSP+8],RCX
            mov ESI,EAX
            mov DWORD PTR [RSP+44],EAX
            call .L_406620

            test EAX,EAX
            je .L_403918

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+24]
            movdqu XMM0,XMMWORD PTR [RCX]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+16]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+32]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov RAX,QWORD PTR [RCX+48]
            mov ECX,DWORD PTR [R14]
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+88],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+96],EAX
            call QWORD PTR [RSP+64]

            test EAX,EAX
            mov R14D,EAX
            jne .L_40381a

            lea RBX,QWORD PTR [RSP+115]
            mov ESI,DWORD PTR [RSP+44]
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_404f8b]
            mov RCX,RBX
            mov ESI,7
            xor EAX,EAX
            call .L_426320

            jmp .L_40391b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a58:

            mov R14D,1
            jmp .L_40391b
.L_403a63:

            mov ECX,DWORD PTR [R13+R15*4+132]
            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_4051a0]
            mov ESI,3
            xor EAX,EAX
            call .L_426320

            jmp .L_403837
.L_403a87:

            mov ESI,DWORD PTR [R14+8]
            jmp .L_403986
.L_403a90:

            call __stack_chk_fail@PLT
.L_403a95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403aa0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ECX,469
            push RBX
            mov RBX,RDI
            mov RSI,RBX
            sub RSP,3760
.L_403abd:

            mov RBP,RSP
            mov RDI,RBP

            rep movsq 

            mov RDI,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3752],RAX
            xor EAX,EAX
            call .L_4027b0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_403b3f

            xor ESI,ESI
            mov RDI,RBX
            mov R12,RAX
            call .L_4031d0

            test EAX,EAX
            jne .L_403b80
.L_403aff:

            mov RDI,R12
            call QWORD PTR [R12+296]

            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+8]
            mov RCX,RBX
            mov RSI,RBP
            and RDI,-8
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP+3744]
            sub RCX,RDI
            sub RSI,RCX
            add ECX,3752
            shr ECX,3
            mov QWORD PTR [RBX+3744],RAX

            rep movsq 
.L_403b3f:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            xor R13D,R13D
            call .L_4265c0
.L_403b52:

            mov RDX,QWORD PTR [RSP+3752]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_403cbe

            add RSP,3760
.L_403b73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403b80:

            mov RSI,RBP
            mov RDI,RBX
            call .L_403790

            test EAX,EAX
            je .L_403aff

            test R14,R14
            mov R13D,DWORD PTR [R12+16]
            je .L_403c56

            mov EAX,DWORD PTR [RBX+132]
            mov QWORD PTR [RBX],R14
            test EAX,EAX
            je .L_403c30

            lea EDI,DWORD PTR [RAX-1]
            lea RCX,QWORD PTR [RBX+536]
            lea R8,QWORD PTR [RBX+RDI*4+540]
            add RDI,1
            jmp .L_403bd9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403bd0:

            add RCX,4
            cmp RCX,R8
            je .L_403c30
.L_403bd9:

            mov ESI,DWORD PTR [RCX]
            test ESI,ESI
            je .L_403bd0

            cmp ESI,DWORD PTR [RBX+136]
            mov EAX,1
            jne .L_403bfb

            jmp .L_403cb7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403bf8:

            mov RAX,RDX
.L_403bfb:

            cmp RAX,RDI
            je .L_403bd0

            lea RDX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RBX+RDX*4+132]
            jne .L_403bf8
.L_403c0d:

            cdqe 
            lea RAX,QWORD PTR [RBX+RAX*4]
            mov EDX,DWORD PTR [RAX+1336]
            mov DWORD PTR [RCX+800],EDX
            mov EAX,DWORD PTR [RAX+936]
            mov DWORD PTR [RCX+400],EAX
            jmp .L_403bd0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c30:

            mov ESI,R13D
            mov RDI,RBX
            call .L_4031d0

            test EAX,EAX
            je .L_403aff

            mov RSI,RBP
            mov RDI,RBX
            call .L_403790

            test EAX,EAX
            je .L_403aff
.L_403c56:

            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBP
            and RDI,-8
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP+3744]
            mov QWORD PTR [RBX+3744],RAX
            mov RAX,RBX
            sub RAX,RDI
            sub RSI,RAX
            add EAX,3752
            shr EAX,3
            mov ECX,EAX

            rep movsq 

            mov RDI,R12
            call QWORD PTR [R12+296]

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            test EAX,EAX
            mov EAX,0
            cmove R13D,EAX
            call .L_4265c0

            jmp .L_403b52
.L_403cb7:

            xor EAX,EAX
            jmp .L_403c0d
.L_403cbe:

            call __stack_chk_fail@PLT
.L_403cc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cd0:

            push RBP
            push RBX
            sub RSP,8
            test RDI,RDI
            je .L_403d11

            mov RBX,RDI
            mov RBP,RSI
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            call .L_426580

            test EAX,EAX
            jne .L_403d00

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_403d00:

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_403aa0
.L_403d11:

            lea RCX,QWORD PTR [RIP+.L_4052a0]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404fa4]
            mov EDX,1325
            call __assert_fail@PLT
.L_403d30:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor EDI,EDI
            mov R13,RSI
            sub RSP,8
.L_403d42:

            test R12,R12
            je .L_403d4c

            mov RDI,QWORD PTR [R12+8]
.L_403d4c:

            lea RDX,QWORD PTR [RIP+.L_404fbe]
            mov RSI,R13
            xor EBX,EBX
            call .L_402a60

            test RAX,RAX
            mov RBP,RAX
            je .L_403d84

            mov RSI,RAX
            mov RDI,R12
            xor EBX,EBX
            call .L_403cd0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EBX,EAX
            je .L_403d98
.L_403d84:

            add RSP,8
.L_403d88:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403d98:

            mov RDI,R13
            call remove@PLT

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_403dad:

            nop
            nop
            nop
.L_403db0:

            push RBP
            push RBX
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,8
            test RBX,RBX
            je .L_403dc4

            mov RDI,QWORD PTR [RBX+8]
.L_403dc4:

            call .L_402c60

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_403df0

            mov RDI,RBX
            mov RSI,RBP
            xor EBX,EBX
            call .L_403cd0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EAX,EBX
.L_403df0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403df7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e00:

            push RBP
            push RBX
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,24
.L_403e0b:

            test RBX,RBX
            je .L_403e14

            mov RDI,QWORD PTR [RBX+8]
.L_403e14:

            test RDX,RDX
            je .L_403e83

            test RSI,RSI
            je .L_403e60

            mov EDX,DWORD PTR [RDX]
            lea RCX,QWORD PTR [RIP+.L_404fbe]
            call .L_402860

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_403e53

            mov RDI,RBX
            mov RSI,RBP
            xor EBX,EBX
            call .L_403cd0

            test EAX,EAX
            mov RDI,RBP
            setne BL
            call QWORD PTR [RBP+296]

            and EAX,EBX
.L_403e53:

            add RSP,24
.L_403e57:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403e60:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call .L_403cd0

            mov RDX,QWORD PTR [RSP+8]
            test EAX,EAX
            mov DWORD PTR [RDX],EAX
            setne AL
            add RSP,24
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_403e83:

            lea RCX,QWORD PTR [RIP+.L_405280]
            lea RSI,QWORD PTR [RIP+.L_404e9c]
            lea RDI,QWORD PTR [RIP+.L_404fc0]
            mov EDX,1413
            call __assert_fail@PLT
.L_403ea2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403eb0:

            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,72
.L_403ebd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_403f98

            mov EDX,DWORD PTR [RDI+3736]
            mov RBX,RDI
            mov R12D,1
            test EDX,EDX
            jne .L_403fc0
.L_403eed:

            mov EAX,DWORD PTR [RBX+132]
            test EAX,EAX
            je .L_403f68

            mov EBP,1
            mov R13,RSP
            nop
.L_403f00:

            mov RSI,QWORD PTR [RBX+RBP*8+2128]
            test RSI,RSI
            je .L_403f5a

            mov RDX,QWORD PTR [RBX+RBP*8+2928]
            mov RDI,QWORD PTR [RBX+8]
            test RDX,RDX
            je .L_403fe8

            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [RDX+48]
            mov QWORD PTR [RSP+40],RDI
            mov RDI,R13
            mov QWORD PTR [RSP+48],RAX
            mov EAX,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+48],EAX
            call QWORD PTR [RSP+32]
.L_403f5a:

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+132],EAX
            ja .L_403f00
.L_403f68:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_403f7c

            mov RDI,RAX
            call QWORD PTR [RAX+296]

            and R12D,EAX
.L_403f7c:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_426540

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            call .L_426070
.L_403f98:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_403ff2

            add RSP,72
.L_403faf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fc0:

            mov RAX,QWORD PTR [RDI]
            mov DWORD PTR [RDI+3736],0
            lea RSI,QWORD PTR [RAX+24]
            call .L_403d30

            and EAX,1
            mov R12D,EAX
            jmp .L_403eed
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fe8:

            call .L_426070

            jmp .L_403f5a
.L_403ff2:

            call __stack_chk_fail@PLT
.L_403ff7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404000:

            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_404025

            mov QWORD PTR [RAX],RBP
            mov RDI,RAX
            call .L_402ef0

            test EAX,EAX
            je .L_404030
.L_404025:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_404030:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_404025
.L_40403c:

            nop
            nop
            nop
            nop
.L_404040:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBP,EDX
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_404067

            test EBP,EBP
            mov QWORD PTR [RAX],R12
            je .L_404070

            mov DWORD PTR [RAX+3736],1
.L_404067:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_404070:

            mov RDI,RAX
            call .L_402ef0

            test EAX,EAX
            jne .L_404067

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_404067
.L_404088:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404090:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,8
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_4040dc

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call .L_402a60

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4040fc

            movzx EAX,BYTE PTR [R12]
            and EAX,4294967263
            cmp AL,87
            jne .L_4040f0

            mov DWORD PTR [RBX+3736],1
.L_4040dc:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4040f0:

            mov RDI,RBX
            call .L_402ef0

            test EAX,EAX
            jne .L_4040dc
.L_4040fc:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_4040dc
.L_404108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404110:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_404090
.L_40411d:

            nop
            nop
            nop
.L_404120:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,8
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_404166

            mov RSI,R12
            mov RDI,RBP
            call .L_402c60

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_404190

            cmp BYTE PTR [R13],119
            je .L_404178

            mov RDI,RBX
            call .L_402ef0

            test EAX,EAX
            je .L_404190
.L_404166:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404178:

            mov DWORD PTR [RBX+3736],1
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_404190:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_404166
.L_40419c:

            nop
            nop
            nop
            nop
.L_4041a0:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_404120
.L_4041ad:

            nop
            nop
            nop
.L_4041b0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,8
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_4041f9

            lea RCX,QWORD PTR [RIP+.L_404fdd]
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBP
            call .L_402860

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_404210

            mov RDI,RBX
            call .L_402ef0

            test EAX,EAX
            je .L_404210
.L_4041f9:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404210:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_404228:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404230:

            mov EDX,ESI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_4041b0
.L_40423c:

            nop
            nop
            nop
            nop
.L_404240:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            sub RSP,104
.L_404253:

            mov R12,QWORD PTR [RDI]
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_426580

            test EAX,EAX
            je .L_404511

            mov EDI,DWORD PTR [R13+132]
            mov ECX,EBP
            lea ESI,DWORD PTR [RDI-1]
            add RSI,1
.L_40428e:

            test EDI,EDI
            je .L_4042be

            cmp ECX,DWORD PTR [R13+136]
            mov EAX,1
            jne .L_4042b9

            jmp .L_4042f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042a8:

            lea RDX,QWORD PTR [RAX+1]
            cmp ECX,DWORD PTR [R13+RDX*4+132]
            je .L_404300

            mov RAX,RDX
.L_4042b9:

            cmp RSI,RAX
            jne .L_4042a8
.L_4042be:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
.L_4042c9:

            call .L_4265c0

            xor EAX,EAX
.L_4042d0:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40458a

            add RSP,104
.L_4042e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4042f8:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_404300:

            movsxd RBX,EAX
            mov ECX,DWORD PTR [R13+RBX*4+536]
            test ECX,ECX
            jne .L_40428e

            lea R14,QWORD PTR [R13+RBX*8]
            cmp QWORD PTR [R14+2136],0
            je .L_4043bc

            mov RAX,QWORD PTR [R14+2936]
            mov RDI,QWORD PTR [R13+8]
            test RAX,RAX
            je .L_404447

            mov R12D,DWORD PTR [RAX]
            test R12D,R12D
            je .L_404447

            mov ESI,EBP
            call .L_41d510

            test RAX,RAX
            je .L_4042be

            mov EDX,DWORD PTR [RAX+4]
            mov ECX,20
            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_4042c9

            cmp R12D,DWORD PTR [RAX+8]
            je .L_40439b

            mov EDX,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_404388:

            cmp ECX,EDX
            jbe .L_4042c9

            add RDX,1
            cmp R12D,DWORD PTR [RAX+RDX*4+4]
            jne .L_404388
.L_40439b:

            mov EAX,DWORD PTR [R13+RBX*4+1736]
            test EAX,EAX
            jne .L_4042c9
.L_4043ab:

            call .L_4265c0

            mov RAX,QWORD PTR [R14+2136]
            jmp .L_4042d0
.L_4043bc:

            lea RAX,QWORD PTR [R13+RBX*4]
            mov EBX,DWORD PTR [RAX+936]
            mov ESI,DWORD PTR [RAX+1336]
            cmp EBX,7
            jbe .L_4042be

            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_4042be

            mov RDI,QWORD PTR [R13+8]
            mov ESI,EBP
            call .L_41d510

            test RAX,RAX
            mov R15,RAX
            je .L_404518

            mov RDI,R12
            call .L_406580

            test EAX,EAX
            je .L_4042be

            mov EDX,DWORD PTR [R15+4]
            mov ECX,20
            mov RDI,QWORD PTR [R13+8]
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_404447

            cmp EAX,DWORD PTR [R15+8]
            je .L_404453

            mov EDX,1
            jmp .L_404443
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404438:

            add RDX,1
            cmp EAX,DWORD PTR [R15+RDX*4+4]
            je .L_404453
.L_404443:

            cmp ECX,EDX
            ja .L_404438
.L_404447:

            mov RSI,QWORD PTR [R13+3744]
            jmp .L_4042c9
.L_404453:

            mov ESI,EAX
            sub EBX,8
            call .L_41d340

            test RAX,RAX
            je .L_4042be

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+16]
            mov ECX,EBX
            mov RSI,R12
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov RDX,QWORD PTR [RAX+48]
            mov QWORD PTR [R14+2936],RAX
            mov RAX,QWORD PTR [R13+8]
            mov QWORD PTR [RSP+64],RDX
            lea RDX,QWORD PTR [RSP+12]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+64],EAX
            call QWORD PTR [RSP+24]

            test RAX,RAX
            mov QWORD PTR [R14+2136],RAX
            je .L_404551

            mov EAX,DWORD PTR [RSP+12]
            cmp DWORD PTR [R15],EAX
            jbe .L_404501

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R13+8]
            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_4051c8]
            mov R8D,DWORD PTR [R15]
            mov RCX,RBX
            mov ESI,12
            xor EAX,EAX
            call .L_426320
.L_404501:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_4043ab
.L_404511:

            xor EAX,EAX
            jmp .L_4042d0
.L_404518:

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_404fdf]
            mov ESI,8
            mov RCX,RBX
            xor EAX,EAX
            call .L_426320

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_4042c9
.L_404551:

            lea RBX,QWORD PTR [RSP+83]
            mov ESI,EBP
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R13+8]
            lea RDX,QWORD PTR [RIP+.L_404ffc]
            mov ESI,12
            mov RCX,RBX
            xor EAX,EAX
            call .L_426320

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            jmp .L_4042c9
.L_40458a:

            call __stack_chk_fail@PLT
.L_40458f:

            nop
.L_404590:

            mov R8D,DWORD PTR [RDI+132]
            lea ECX,DWORD PTR [R8-1]
            add RCX,1
.L_40459f:

            test R8D,R8D
            je .L_4045cd

            cmp ESI,DWORD PTR [RDI+136]
            mov EAX,1
            jne .L_4045c8

            jmp .L_4045d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4045b8:

            lea RDX,QWORD PTR [RAX+1]
            cmp DWORD PTR [RDI+RDX*4+132],ESI
            je .L_4045d8

            mov RAX,RDX
.L_4045c8:

            cmp RAX,RCX
            jne .L_4045b8
.L_4045cd:

            xor EAX,EAX
            ret 
.L_4045d0:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045d8:

            cdqe 
            mov ESI,DWORD PTR [RDI+RAX*4+536]
            test ESI,ESI
            jne .L_40459f

            mov RAX,QWORD PTR [RDI+RAX*8+2936]
            mov EAX,DWORD PTR [RAX]
            ret 
.L_4045f0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,104
.L_404606:

            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_426580

            test EAX,EAX
            je .L_404658

            test R12,R12
            je .L_404680

            lea RDX,QWORD PTR [RSP+12]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026d0

            test EAX,EAX
            jne .L_4046d0
.L_404646:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4265c0

            xor EAX,EAX
.L_404658:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404924

            add RSP,104
.L_404670:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404680:

            mov EAX,DWORD PTR [RBX+132]
            test EAX,EAX
            je .L_4046c1

            cmp EBP,DWORD PTR [RBX+136]
            je .L_4047a0

            lea EDX,DWORD PTR [RAX-1]
            mov ESI,1
            add RDX,1
            jmp .L_4046bc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4046a8:

            lea RAX,QWORD PTR [RSI+1]
            cmp EBP,DWORD PTR [RBX+RAX*4+132]
            je .L_4047a8

            mov RSI,RAX
.L_4046bc:

            cmp RSI,RDX
            jne .L_4046a8
.L_4046c1:

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_404646
          .byte 0x66
          .byte 0x90
.L_4046d0:

            movsxd RAX,DWORD PTR [RSP+12]
            mov ESI,EBP
            lea RAX,QWORD PTR [RBX+RAX*4]
            mov DWORD PTR [RAX+1736],0
            mov DWORD PTR [RAX+536],0
            mov RDI,QWORD PTR [RBX+8]
            call .L_41d510

            test RAX,RAX
            mov R14,RAX
            je .L_4048a0

            mov RDI,RBX
            call .L_4036d0

            mov RAX,QWORD PTR [R14+88]
            test RAX,RAX
            je .L_4048ff

            mov RDI,R12
            call RAX

            mov EDX,DWORD PTR [R14+4]
            mov ECX,20
            cmp EDX,20
            cmovbe ECX,EDX
            test EDX,EDX
            je .L_40475e

            mov R13D,DWORD PTR [R14+8]
            cmp EAX,R13D
            je .L_4047e0

            mov EDX,1
            jmp .L_40475a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404748:

            add RDX,1
            mov R13D,DWORD PTR [R14+RDX*4+4]
            cmp EAX,R13D
            je .L_4047e0
.L_40475a:

            cmp ECX,EDX
            ja .L_404748
.L_40475e:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,EAX
.L_404765:

            lea R13,QWORD PTR [RSP+83]
            mov RDI,R12
            call .L_426440

            mov ESI,EBP
            mov RDI,R13
            call .L_426440

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_405200]
            mov R8,R13
            mov RCX,R12
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_404646
          .byte 0x66
          .byte 0x90
.L_4047a0:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_4047a8:

            mov RDI,RBX
            mov DWORD PTR [RSP+12],ESI
            call .L_402380

            movsxd RAX,DWORD PTR [RSP+12]
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            mov DWORD PTR [RBX+RAX*4+136],0
            call .L_4265c0

            mov EAX,1
            jmp .L_404658
          .byte 0x66
          .byte 0x90
.L_4047e0:

            mov RDI,QWORD PTR [RBX+8]
            mov ESI,R13D
            call .L_41d340

            test RAX,RAX
            je .L_404917

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+16]
            mov RSI,R12
            movsxd RDX,DWORD PTR [RSP+12]
            movaps XMMWORD PTR [RSP+16],XMM0
            lea R15,QWORD PTR [RBX+RDX*8]
            lea RDX,QWORD PTR [RBX+RDX*4]
            movdqu XMM0,XMMWORD PTR [RAX+16]
            mov QWORD PTR [R15+2936],RAX
            mov DWORD PTR [RDX+136],EBP
            movaps XMMWORD PTR [RSP+32],XMM0
            mov DWORD PTR [RDX+936],0
            mov DWORD PTR [RDX+1336],0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            mov EDX,DWORD PTR [R14]
            movaps XMMWORD PTR [RSP+48],XMM0
            mov RAX,QWORD PTR [RAX+48]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+56],RAX
            mov EAX,DWORD PTR [RBX+72]
            mov DWORD PTR [RSP+64],EAX
            call QWORD PTR [RSP+40]

            mov QWORD PTR [R15+2136],RAX
            movsxd RAX,DWORD PTR [RSP+12]
            cmp QWORD PTR [RBX+RAX*8+2136],0
            je .L_4048be

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4265c0

            mov EAX,1
            jmp .L_404658
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4048a0:

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40500f]
            mov ECX,EBP
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_404646
.L_4048be:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,R13D
            lea R13,QWORD PTR [RSP+83]
            mov RDI,R12
            call .L_426440

            mov ESI,EBP
            mov RDI,R13
            call .L_426440

            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_405228]
            mov R8,R13
            mov RCX,R12
            mov ESI,12
            xor EAX,EAX
            call .L_426320

            jmp .L_404646
.L_4048ff:

            mov EAX,DWORD PTR [R14+4]
            mov R13D,DWORD PTR [R14+8]
            test EAX,EAX
            jne .L_4047e0

            mov EAX,R13D
            jmp .L_40475e
.L_404917:

            lea R12,QWORD PTR [RSP+78]
            mov ESI,R13D
            jmp .L_404765
.L_404924:

            call __stack_chk_fail@PLT
.L_404929:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404930:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,ESI
            mov RBP,RDX
            mov R12D,ECX
            sub RSP,72
.L_404949:

            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_426580

            test EAX,EAX
            je .L_4049be

            mov EDI,DWORD PTR [R13+132]
            mov ECX,EBX
            lea ESI,DWORD PTR [RDI-1]
            add RSI,1
.L_40497d:

            test EDI,EDI
            je .L_4049ae

            cmp ECX,DWORD PTR [R13+136]
            mov EAX,1
            jne .L_4049a9

            jmp .L_4049e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404998:

            lea RDX,QWORD PTR [RAX+1]
            cmp DWORD PTR [R13+RDX*4+132],ECX
            je .L_4049f0

            mov RAX,RDX
.L_4049a9:

            cmp RSI,RAX
            jne .L_404998
.L_4049ae:

            mov RDI,QWORD PTR [R13+8]
.L_4049b2:

            mov RSI,QWORD PTR [R13+3744]
            call .L_4265c0
.L_4049be:

            xor EAX,EAX
.L_4049c0:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_404c0e

            add RSP,72
.L_4049d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4049e8:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4049f0:

            cdqe 
            mov ECX,DWORD PTR [R13+RAX*4+536]
            test ECX,ECX
            jne .L_40497d

            lea R15,QWORD PTR [R13+RAX*8]
            mov RSI,QWORD PTR [R15+2136]
            test RSI,RSI
            je .L_404a61

            lea R14,QWORD PTR [R13+RAX*4]
            mov EAX,DWORD PTR [R14+1736]
            test EAX,EAX
            je .L_404ab9

            test RBP,RBP
            je .L_404b4e

            mov EAX,DWORD PTR [R14+936]
            mov RDI,RBP
            cmp R12D,EAX
            cmova R12D,EAX
            mov EDX,R12D
            call memmove@PLT
.L_404a49:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4265c0

            mov EAX,R12D
            jmp .L_4049c0
.L_404a61:

            lea RBX,QWORD PTR [R13+RAX*4]
            test RBP,RBP
            mov ESI,DWORD PTR [RBX+1336]
            mov EAX,DWORD PTR [RBX+936]
            je .L_404b6a

            cmp R12D,EAX
            cmova R12D,EAX
            mov RAX,QWORD PTR [R13]
            mov RDI,RAX
            call QWORD PTR [RAX+288]

            test EAX,EAX
            je .L_4049ae

            mov RAX,QWORD PTR [R13]
            mov ECX,R12D
            mov EDX,1
            mov RSI,RBP
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            test EAX,EAX
            je .L_4049ae

            jmp .L_404a49
.L_404ab9:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4265c0

            mov ESI,EBX
            mov RDI,R13
            call .L_404240

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            mov R14,RAX
            call .L_426580

            test EAX,EAX
            je .L_4049be

            test R14,R14
            mov RDI,QWORD PTR [R13+8]
            je .L_4049b2

            test RBP,RBP
            je .L_404b85

            lea RCX,QWORD PTR [RIP+.L_404fbe]
            mov RSI,RBP
            mov EDX,R12D
            call .L_402860

            mov RBP,RAX
.L_404b19:

            test RBP,RBP
            mov RDI,QWORD PTR [R13+8]
            je .L_4049b2

            mov ESI,EBX
            mov R12,QWORD PTR [R15+2936]
            call .L_41d510

            test RAX,RAX
            mov RBX,RAX
            jne .L_404b8f
.L_404b3c:

            mov RDI,RBP
            call QWORD PTR [RBP+296]

            mov RDI,QWORD PTR [R13+8]
            jmp .L_4049b2
.L_404b4e:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4265c0

            mov EAX,DWORD PTR [R14+936]
            jmp .L_4049c0
.L_404b6a:

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4265c0

            mov EAX,DWORD PTR [RBX+936]
            jmp .L_4049c0
.L_404b85:

            call .L_4027b0

            mov RBP,RAX
            jmp .L_404b19
.L_404b8f:

            test R12,R12
            mov RDI,QWORD PTR [R13+8]
            je .L_4049b2

            movdqu XMM0,XMMWORD PTR [R12]
            movaps XMMWORD PTR [RSP],XMM0
            mov ESI,DWORD PTR [R12]
            movdqu XMM0,XMMWORD PTR [R12+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RAX,QWORD PTR [R12+48]
            mov QWORD PTR [RSP+40],RDI
            mov RDI,RBP
            mov QWORD PTR [RSP+48],RAX
            mov EAX,DWORD PTR [R13+72]
            mov DWORD PTR [RSP+48],EAX
            call .L_406620

            test EAX,EAX
            je .L_404b3c

            mov RDI,RSP
            mov ECX,DWORD PTR [RBX]
            mov RDX,R14
            mov RSI,RBP
            call QWORD PTR [RSP+16]

            test EAX,EAX
            mov RDI,RBP
            jne .L_404c13

            call QWORD PTR [RBP+296]

            mov RDI,QWORD PTR [R13+8]
            jmp .L_4049b2
.L_404c0e:

            call __stack_chk_fail@PLT
.L_404c13:

            call QWORD PTR [RBP+304]

            mov RDI,RBP
            mov EBX,EAX
            call QWORD PTR [RBP+296]

            mov RSI,QWORD PTR [R13+3744]
            mov RDI,QWORD PTR [R13+8]
            call .L_4265c0

            mov EAX,EBX
            jmp .L_4049c0
.L_404c3b:

            nop
            nop
            nop
            nop
            nop
.L_404c40:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            mov R12D,ECX
            sub RSP,32
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_426580

            test EAX,EAX
            jne .L_404ca0
.L_404c7b:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404d59

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404ca0:

            lea RDX,QWORD PTR [RSP+20]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026d0

            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            je .L_404d40

            movsxd R14,DWORD PTR [RSP+20]
            mov EDX,R12D
            mov RSI,R13
            lea RAX,QWORD PTR [RBX+R14*4]
            mov DWORD PTR [RAX+1736],1
            mov DWORD PTR [RAX+136],EBP
            mov DWORD PTR [RAX+536],0
            mov RDI,QWORD PTR [RBX+8]
            call .L_426090

            mov QWORD PTR [RBX+R14*8+2136],RAX
            movsxd RAX,DWORD PTR [RSP+20]
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            mov DWORD PTR [RBX+RAX*4+936],R12D
            call .L_4265c0

            movsxd RDX,DWORD PTR [RSP+20]
            mov EAX,1
            cmp QWORD PTR [RBX+RDX*8+2136],0
            jne .L_404c7b

            mov DWORD PTR [RBX+RDX*4+136],0
            xor EAX,EAX
            jmp .L_404c7b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404d40:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4265c0

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_404c7b
.L_404d59:

            call __stack_chk_fail@PLT
.L_404d5e:

            nop
            nop
.L_404d60:

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            mov R12D,EDX
            sub RSP,32
            mov RSI,QWORD PTR [RDI+3744]
            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_426580

            test EAX,EAX
            jne .L_404db8
.L_404d94:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_404e49

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404db8:

            lea RDX,QWORD PTR [RSP+20]
            mov ESI,EBP
            mov RDI,RBX
            call .L_4026d0

            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            je .L_404e30

            movsxd RDX,DWORD PTR [RSP+20]
            lea RAX,QWORD PTR [RBX+RDX*4]
            mov DWORD PTR [RAX+1736],0
            mov DWORD PTR [RAX+136],EBP
            mov DWORD PTR [RAX+536],R12D
            mov QWORD PTR [RBX+RDX*8+2136],0
            mov DWORD PTR [RAX+936],0
            mov DWORD PTR [RAX+1336],0
            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4265c0

            mov EAX,1
            jmp .L_404d94
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e30:

            mov RSI,QWORD PTR [RBX+3744]
            mov RDI,QWORD PTR [RBX+8]
            call .L_4265c0

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_404d94
.L_404e49:

            call __stack_chk_fail@PLT
.L_404e4e:

            nop
            nop
.L_404e50:

            mov EAX,DWORD PTR [RDI+132]
            test EAX,EAX
            je .L_404e85

            cmp ESI,DWORD PTR [RDI+136]
            je .L_404e90

            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            add RCX,1
            jmp .L_404e80
.L_404e70:

            lea RDX,QWORD PTR [RAX+1]
            cmp ESI,DWORD PTR [RDI+RDX*4+132]
            je .L_404e92

            mov RAX,RDX
.L_404e80:

            cmp RAX,RCX
            jne .L_404e70
.L_404e85:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e90:

            xor EAX,EAX
.L_404e92:

            cdqe 
            mov EAX,DWORD PTR [RDI+RAX*4+536]
            ret 
.L_404e9c:
          .string "cmsio0.c"
.L_404ea5:
          .string "(Icc != ((void *)0))"
.L_404eba:
          .string "(i >= 0)"
.L_404ec3:
          .string "Too many tags (%d)"
.L_404ed6:
          .string "(AccessMode != ((void *)0))"
.L_404ef2:
          .string "Unknown access mode \'%c\'"
.L_404f0b:
          .string "(FileName != ((void *)0))"
.L_404f25:
          .string "rb"
.L_404f28:
          .string "File \'%s\' not found"
.L_404f3c:
          .string "Cannot get size of file \'%s\'"
.L_404f59:
          .string "wb"
.L_404f5c:
          .string "Couldn\'t create \'%s\'"
.L_404f71:
          .string "Cannot get size of stream"
.L_404f8b:
          .string "Couldn\'t write type \'%s\'"
.L_404fa4:
          .string "(hProfile != ((void *)0))"
.L_404fbe:
          .string "w"
.L_404fc0:
          .string "(BytesNeeded != ((void *)0))"
.L_404fdd:
          .string "r"
.L_404fdf:
          .string "Unknown tag type \'%s\' found."
.L_404ffc:
          .string "Corrupted tag \'%s\'"
.L_40500f:
          .string "Unsupported tag \'%x\'"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405028:
          .string "Read from memory error. Got %d bytes, block should be of %d bytes"
          .zero 6
.L_405070:
          .string "Read error. Got %d bytes, block should be of %d bytes"
          .zero 2
.L_4050a8:
          .string "Too few data; probably corrupted profile"
          .zero 7
.L_4050d8:
          .string "Tell error; probably corrupted file"
          .zero 4
.L_405100:
          .string "Seek error; probably corrupted file"
          .zero 4
.L_405128:
          .string "Couldn\'t read profile from NULL pointer"
.L_405150:
          .string "Couldn\'t allocate %ld bytes for profile"
.L_405178:
          .string "not an ICC profile, invalid signature"
          .zero 2
.L_4051a0:
          .string "(Internal) no handler for tag %x"
          .zero 7
.L_4051c8:
          .string "\'%s\' Inconsistent number of items: expected %d, got %d"
          .zero 1
.L_405200:
          .string "Unsupported type \'%s\' for tag \'%s\'"
          .zero 5
.L_405228:
          .string "Malformed struct in type \'%s\' for tag \'%s\'"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405260:
          .string "_cmsDeleteTagByPos"
          .zero 13
.L_405280:
          .string "cmsSaveProfileToMem"
          .zero 12
.L_4052a0:
          .string "cmsSaveProfileToIOhandler"
          .zero 6
.L_4052c0:
          .string "cmsOpenIOhandlerFromFile"
          .zero 7
.L_4052e0:
          .string "cmsOpenIOhandlerFromMem"
.L_4052f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_405300:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_405308:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_405310:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405320:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405330:

            mov EAX,EDI
            mov BYTE PTR [RSP-3],DIL
            mov BYTE PTR [RSP-4],AH
            movzx EAX,WORD PTR [RSP-4]
            ret 
.L_405341:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405350:

            mov EAX,EDI
            mov EDX,EDI
            mov ECX,EDI
            shr EDX,16
            movzx EAX,AH
            shr EDI,24
            mov BYTE PTR [RSP-3],DL
            mov BYTE PTR [RSP-2],AL
            mov BYTE PTR [RSP-4],DIL
            mov BYTE PTR [RSP-1],CL
            mov EAX,DWORD PTR [RSP-4]
            ret 
.L_405375:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405380:

            test RDI,RDI
            je .L_4053bc

            movzx EAX,BYTE PTR [RSI]
            mov BYTE PTR [RDI+7],AL
            movzx EAX,BYTE PTR [RSI+1]
            mov BYTE PTR [RDI+6],AL
            movzx EAX,BYTE PTR [RSI+2]
            mov BYTE PTR [RDI+5],AL
            movzx EAX,BYTE PTR [RSI+3]
            mov BYTE PTR [RDI+4],AL
            movzx EAX,BYTE PTR [RSI+4]
            mov BYTE PTR [RDI+3],AL
            movzx EAX,BYTE PTR [RSI+5]
            mov BYTE PTR [RDI+2],AL
            movzx EAX,BYTE PTR [RSI+6]
            mov BYTE PTR [RDI+1],AL
            movzx EAX,BYTE PTR [RSI+7]
            mov BYTE PTR [RDI],AL
            ret 
.L_4053bc:

            lea RCX,QWORD PTR [RIP+.L_407800]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073b3]
            sub RSP,8

            mov EDX,87
            call __assert_fail@PLT
.L_4053df:

            nop
.L_4053e0:

            push RBX
            sub RSP,16
.L_4053e5:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_40544b

            mov EDX,1
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+7]
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405438
.L_405419:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40546a

            add RSP,16
.L_40542f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405438:

            test RBX,RBX
            mov EDX,1
            je .L_405419

            movzx EAX,BYTE PTR [RSP+7]
            mov BYTE PTR [RBX],AL
            jmp .L_405419
.L_40544b:

            lea RCX,QWORD PTR [RIP+.L_4077e0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,115
            call __assert_fail@PLT
.L_40546a:

            call __stack_chk_fail@PLT
.L_40546f:

            nop
.L_405470:

            push RBX
            sub RSP,16
.L_405475:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_4054ec

            mov EDX,2
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+4]
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_4054c8
.L_4054a9:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40550b

            add RSP,16
.L_4054bf:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4054c8:

            test RBX,RBX
            mov EDX,1
            je .L_4054a9

            movzx EAX,WORD PTR [RSP+4]
            movzx ECX,AH
            mov BYTE PTR [RSP+7],AL
            mov BYTE PTR [RSP+6],CL
            movzx EAX,WORD PTR [RSP+6]
            mov WORD PTR [RBX],AX
            jmp .L_4054a9
.L_4054ec:

            lea RCX,QWORD PTR [RIP+.L_4077c0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,128
            call __assert_fail@PLT
.L_40550b:

            call __stack_chk_fail@PLT
.L_405510:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40551a:

            test RDI,RDI
            je .L_405590

            test ESI,ESI
            je .L_405580

            lea EAX,DWORD PTR [RSI-1]
            mov R12,RDI
            mov RBP,RDX
            mov RBX,RDX
            lea R13,QWORD PTR [RDX+RAX*2+2]
            jmp .L_405558
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405540:

            mov RSI,RBX
            mov RDI,R12
            call .L_405470

            test EAX,EAX
            je .L_40556b
.L_40554f:

            add RBX,2
            cmp RBX,R13
            je .L_405580
.L_405558:

            test RBP,RBP
            jne .L_405540

            xor ESI,ESI
            mov RDI,R12
            call .L_405470

            test EAX,EAX
            jne .L_40554f
.L_40556b:

            add RSP,8
.L_40556f:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405580:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_405590:

            lea RCX,QWORD PTR [RIP+.L_4077a0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,141
            call __assert_fail@PLT
.L_4055af:

            nop
.L_4055b0:

            push RBX
            mov RAX,RDI
            sub RSP,16
.L_4055b8:

            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405637

            mov EDX,4
            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405608
.L_4055ed:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_405656

            add RSP,16
.L_405603:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405608:

            test RBX,RBX
            mov EDX,1
            je .L_4055ed

            mov EAX,DWORD PTR [RSP]
            mov ECX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr ECX,16
            mov BYTE PTR [RSP+5],CL
            mov ECX,EAX
            shr ECX,24
            mov BYTE PTR [RSP+4],CL
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RBX],EAX
            jmp .L_4055ed
.L_405637:

            lea RCX,QWORD PTR [RIP+.L_407780]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,160
            call __assert_fail@PLT
.L_405656:

            call __stack_chk_fail@PLT
.L_40565b:

            nop
            nop
            nop
            nop
            nop
.L_405660:

            push RBX
            sub RSP,16
.L_405665:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_40572a

            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            mov EDX,4
            call QWORD PTR [RDI+280]

            cmp EAX,1
            je .L_4056b8
.L_405699:

            xor EAX,EAX
.L_40569b:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_405749

            add RSP,16
.L_4056b3:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4056b8:

            test RBX,RBX
            je .L_405720

            mov EAX,DWORD PTR [RSP]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            movss XMM1,DWORD PTR [RSP+4]
            movaps XMM0,XMM1
            movss DWORD PTR [RBX],XMM1
            andps XMM0,XMMWORD PTR [RIP+.L_407820]
            ucomiss XMM0,XMM0
            jp .L_405699

            ucomiss XMM0,DWORD PTR [RIP+.L_407840]
            ja .L_405699

            ucomiss XMM0,DWORD PTR [RIP+.L_407844]
            jae .L_405720

            ucomiss XMM1,DWORD PTR [RIP+.L_407848]
            jp .L_405710

            je .L_405720
.L_405710:

            ucomiss XMM0,DWORD PTR [RIP+.L_407844]
            jb .L_405699

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405720:

            mov EAX,1
            jmp .L_40569b
.L_40572a:

            lea RCX,QWORD PTR [RIP+.L_407760]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,173
            call __assert_fail@PLT
.L_405749:

            call __stack_chk_fail@PLT
.L_40574e:

            nop
            nop
.L_405750:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_405758:

            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            test RDI,RDI
            je .L_4057c7

            mov RBP,RSP
            mov R12,RSI
            mov ECX,1
            mov EDX,8
            mov RSI,RBP
            xor EBX,EBX
            call QWORD PTR [RDI+280]

            cmp EAX,1
            je .L_4057b0
.L_40578d:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4057e6

            add RSP,16
.L_4057a3:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4057b0:

            test R12,R12
            mov EBX,1
            je .L_40578d

            mov RSI,RBP
            mov RDI,R12
            call .L_405380

            jmp .L_40578d
.L_4057c7:

            lea RCX,QWORD PTR [RIP+.L_407740]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,199
            call __assert_fail@PLT
.L_4057e6:

            call __stack_chk_fail@PLT
.L_4057eb:

            nop
            nop
            nop
            nop
            nop
.L_4057f0:

            push RBX
            sub RSP,16
.L_4057f5:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_4058d7

            mov EDX,4
            mov RBX,RSI
            mov ECX,1
            mov RSI,RSP
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405850
.L_40582b:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_4058d2

            add RSP,16
.L_405845:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405850:

            test RBX,RBX
            mov EDX,1
            je .L_40582b

            mov EAX,DWORD PTR [RSP]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            js .L_4058c8

            movsd XMM2,QWORD PTR [RIP+.L_407858]
.L_405887:

            cdq 
            pxor XMM0,XMM0
            xor EAX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_407860]
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM0,EDX
            mov EDX,1
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM0,XMM1
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX],XMM0
            jmp .L_40582b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4058c8:

            movsd XMM2,QWORD PTR [RIP+.L_407850]
            jmp .L_405887
.L_4058d2:

            call __stack_chk_fail@PLT
.L_4058d7:

            lea RCX,QWORD PTR [RIP+.L_407720]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,217
            call __assert_fail@PLT
.L_4058f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405900:

            push RBX
            mov RAX,RDI
            sub RSP,32
.L_405908:

            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405ad2

            mov EDX,12
            mov RBX,RSI
            mov ECX,1
            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RAX
            call QWORD PTR [RAX+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_405960
.L_405943:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_405acd

            add RSP,32
.L_40595d:

            pop RBX
            ret 
          .byte 0x90
.L_405960:

            test RBX,RBX
            mov EDX,1
            je .L_405943

            mov EAX,DWORD PTR [RSP+12]
            mov EDX,EAX
            mov BYTE PTR [RSP+10],AH
            mov BYTE PTR [RSP+11],AL
            shr EDX,16
            mov BYTE PTR [RSP+9],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+8],DL
            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            js .L_405aa0

            movsd XMM0,QWORD PTR [RIP+.L_407858]
.L_40599c:

            cdq 
            pxor XMM1,XMM1
            xor EAX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_407860]
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM1,EDX
            movapd XMM2,XMM1
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [RSP+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX],XMM1
            js .L_405ac0

            movsd XMM0,QWORD PTR [RIP+.L_407858]
.L_405a05:

            cdq 
            pxor XMM1,XMM1
            xor EAX,EDX
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM1,EDX
            movapd XMM2,XMM1
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            cvtsi2sd XMM1,EAX
            mov EAX,DWORD PTR [RSP+20]
            mov EDX,EAX
            mov BYTE PTR [RSP+2],AH
            mov BYTE PTR [RSP+3],AL
            shr EDX,16
            mov BYTE PTR [RSP+1],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP],DL
            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+8],XMM1
            js .L_405ab0

            movsd XMM2,QWORD PTR [RIP+.L_407858]
.L_405a61:

            cdq 
            pxor XMM0,XMM0
            xor EAX,EDX
            sub EAX,EDX
            movzx EDX,AX
            shr EAX,16
            cvtsi2sd XMM0,EDX
            mov EDX,1
            mulsd XMM0,XMM3
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM0,XMM1
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX+16],XMM0
            jmp .L_405943
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405aa0:

            movsd XMM0,QWORD PTR [RIP+.L_407850]
            jmp .L_40599c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405ab0:

            movsd XMM2,QWORD PTR [RIP+.L_407850]
            jmp .L_405a61
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405ac0:

            movsd XMM0,QWORD PTR [RIP+.L_407850]
            jmp .L_405a05
.L_405acd:

            call __stack_chk_fail@PLT
.L_405ad2:

            lea RCX,QWORD PTR [RIP+.L_407700]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,234
            call __assert_fail@PLT
.L_405af1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405b00:

            sub RSP,24
            test RDI,RDI
            mov BYTE PTR [RSP+12],SIL
            je .L_405b2c

            lea RDX,QWORD PTR [RSP+12]
            mov ESI,1
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            add RSP,24
            movzx EAX,AL
            ret 
.L_405b2c:

            lea RCX,QWORD PTR [RIP+.L_4076e0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,249
            call __assert_fail@PLT
.L_405b4b:

            nop
            nop
            nop
            nop
            nop
.L_405b50:

            sub RSP,24
.L_405b54:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405bb2

            mov ECX,ESI
            mov BYTE PTR [RSP+7],SIL
            mov RDI,RAX
            mov BYTE PTR [RSP+6],CH
            movzx EDX,WORD PTR [RSP+6]
            mov ESI,2
            mov WORD PTR [RSP+4],DX
            lea RDX,QWORD PTR [RSP+4]
            call QWORD PTR [RAX+312]

            cmp EAX,1
            sete AL
            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405bd1

            add RSP,24
.L_405bb1:

            ret 
.L_405bb2:

            lea RCX,QWORD PTR [RIP+.L_4076c0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,261
            call __assert_fail@PLT
.L_405bd1:

            call __stack_chk_fail@PLT
.L_405bd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405be0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
            je .L_405c32

            test RDX,RDX
            je .L_405c51

            test ESI,ESI
            je .L_405c28

            lea EAX,DWORD PTR [RSI-1]
            mov RBP,RDI
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*2+2]
            jmp .L_405c11
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c08:

            add RBX,2
            cmp RBX,R12
            je .L_405c28
.L_405c11:

            movzx ESI,WORD PTR [RBX]
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            jne .L_405c08

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405c28:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_405c32:

            lea RCX,QWORD PTR [RIP+.L_4076a0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,274
            call __assert_fail@PLT
.L_405c51:

            lea RCX,QWORD PTR [RIP+.L_4076a0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073df]
            mov EDX,275
            call __assert_fail@PLT
.L_405c70:

            sub RSP,24
.L_405c74:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_405cdf

            mov EDX,ESI
            mov ECX,ESI
            mov BYTE PTR [RSP+7],SIL
            shr EDX,16
            mov BYTE PTR [RSP+6],CH
            mov RDI,RAX
            mov BYTE PTR [RSP+5],DL
            mov EDX,ESI
            mov ESI,4
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EDX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP],EDX
            mov RDX,RSP
            call QWORD PTR [RAX+312]

            cmp EAX,1
            sete AL
            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405cfe

            add RSP,24
.L_405cde:

            ret 
.L_405cdf:

            lea RCX,QWORD PTR [RIP+.L_407680]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,288
            call __assert_fail@PLT
.L_405cfe:

            call __stack_chk_fail@PLT
.L_405d03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405d10:

            sub RSP,24
.L_405d14:

            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RSI
            xor ESI,ESI
            test RDI,RDI
            je .L_405d7e

            movd EDX,XMM0
            movd EAX,XMM0
            mov ESI,4
            shr EDX,16
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            mov BYTE PTR [RSP+5],DL
            movd EDX,XMM0
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405d9d

            add RSP,24
.L_405d7d:

            ret 
.L_405d7e:

            lea RCX,QWORD PTR [RIP+.L_407660]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,302
            call __assert_fail@PLT
.L_405d9d:

            call __stack_chk_fail@PLT
.L_405da2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405db0:

            sub RSP,24
.L_405db4:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_405e33

            movzx EDX,BYTE PTR [RSI]
            mov BYTE PTR [RSP+7],DL
            movzx EDX,BYTE PTR [RSI+1]
            mov BYTE PTR [RSP+6],DL
            movzx EDX,BYTE PTR [RSI+2]
            mov BYTE PTR [RSP+5],DL
            movzx EDX,BYTE PTR [RSI+3]
            mov BYTE PTR [RSP+4],DL
            movzx EDX,BYTE PTR [RSI+4]
            mov BYTE PTR [RSP+3],DL
            movzx EDX,BYTE PTR [RSI+5]
            mov BYTE PTR [RSP+2],DL
            movzx EDX,BYTE PTR [RSI+6]
            mov BYTE PTR [RSP+1],DL
            movzx EDX,BYTE PTR [RSI+7]
            mov ESI,8
            mov BYTE PTR [RSP],DL
            mov RDX,RSP
            call QWORD PTR [RDI+312]

            cmp EAX,1
            sete AL
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405e52

            add RSP,24
.L_405e32:

            ret 
.L_405e33:

            lea RCX,QWORD PTR [RIP+.L_407640]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,316
            call __assert_fail@PLT
.L_405e52:

            call __stack_chk_fail@PLT
.L_405e57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405e60:

            sub RSP,24
.L_405e64:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_405f4c

            mulsd XMM0,QWORD PTR [RIP+.L_407868]
            mov RCX,RDI
            movsd XMM3,QWORD PTR [RIP+.L_407830]
            movsd XMM4,QWORD PTR [RIP+.L_407878]
            addsd XMM0,QWORD PTR [RIP+.L_407870]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            ja .L_405f10
.L_405eb2:

            cvttsd2si EAX,XMM1
            mov ESI,4
            mov RDI,RCX
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov RDX,RSP
            mov DWORD PTR [RSP],EAX
            call QWORD PTR [RCX+312]

            cmp EAX,1
            sete AL
            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_405f6b

            add RSP,24
.L_405f05:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405f10:

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_407858]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
            jmp .L_405eb2
.L_405f4c:

            lea RCX,QWORD PTR [RIP+.L_407620]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,329
            call __assert_fail@PLT
.L_405f6b:

            call __stack_chk_fail@PLT
.L_405f70:

            sub RSP,40
.L_405f74:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_4061a8

            test RSI,RSI
            je .L_406189

            movsd XMM0,QWORD PTR [RIP+.L_407868]
            mov RCX,RDI
            movsd XMM3,QWORD PTR [RSI]
            movsd XMM6,QWORD PTR [RIP+.L_407870]
            mulsd XMM3,XMM0
            movq XMM2,QWORD PTR [RIP+.L_407830]
            movsd XMM5,QWORD PTR [RIP+.L_407878]
            movapd XMM7,XMM2
            addsd XMM3,XMM6
            movapd XMM4,XMM3
            movapd XMM1,XMM3
            andpd XMM4,XMM2
            ucomisd XMM5,XMM4
            ja .L_406148
.L_405fdf:

            cvttsd2si EAX,XMM1
            movapd XMM4,XMM2
            movsd XMM1,QWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            addsd XMM1,XMM6
            movapd XMM3,XMM1
            mov EDX,EAX
            shr EDX,16
            mov BYTE PTR [RSP+10],AH
            mov BYTE PTR [RSP+11],AL
            andpd XMM3,XMM2
            mov BYTE PTR [RSP+9],DL
            mov EDX,EAX
            movapd XMM7,XMM1
            shr EDX,24
            ucomisd XMM5,XMM3
            mov BYTE PTR [RSP+8],DL
            mov EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+12],EAX
            ja .L_406100
.L_40602c:

            mulsd XMM0,QWORD PTR [RSI+16]
            cvttsd2si EAX,XMM1
            addsd XMM0,XMM6
            movapd XMM1,XMM0
            mov EDX,EAX
            mov BYTE PTR [RSP+6],AH
            mov BYTE PTR [RSP+7],AL
            andpd XMM1,XMM2
            shr EDX,16
            mov BYTE PTR [RSP+5],DL
            mov EDX,EAX
            shr EDX,24
            movapd XMM3,XMM0
            ucomisd XMM5,XMM1
            mov BYTE PTR [RSP+4],DL
            mov EAX,DWORD PTR [RSP+4]
            mov DWORD PTR [RSP+16],EAX
            ja .L_4060c0
.L_40606d:

            cvttsd2si EAX,XMM0
            mov RDI,RCX
            mov ESI,12
            mov EDX,EAX
            mov BYTE PTR [RSP+2],AH
            mov BYTE PTR [RSP+3],AL
            shr EDX,16
            mov BYTE PTR [RSP+1],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP],DL
            mov EAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RSP+12]
            mov DWORD PTR [RSP+20],EAX
            call QWORD PTR [RCX+312]

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4061c7

            add RSP,40
.L_4060bc:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4060c0:

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_407858]
            andnpd XMM2,XMM3
            cvtsi2sd XMM1,RAX
            movapd XMM5,XMM1
            cmpnlesd XMM5,XMM0
            movapd XMM0,XMM5
            andpd XMM0,XMM4
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            orpd XMM0,XMM2
            jmp .L_40606d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406100:

            cvttsd2si RAX,XMM1
            pxor XMM3,XMM3
            movsd XMM8,QWORD PTR [RIP+.L_407858]
            andnpd XMM4,XMM7
            cvtsi2sd XMM3,RAX
            movapd XMM10,XMM3
            cmpnlesd XMM10,XMM1
            movapd XMM1,XMM10
            andpd XMM1,XMM8
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM4
            jmp .L_40602c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406148:

            cvttsd2si RAX,XMM3
            pxor XMM4,XMM4
            movsd XMM8,QWORD PTR [RIP+.L_407858]
            andnpd XMM7,XMM3
            cvtsi2sd XMM4,RAX
            movapd XMM9,XMM4
            cmpnlesd XMM9,XMM3
            movapd XMM1,XMM9
            andpd XMM1,XMM8
            subsd XMM4,XMM1
            movapd XMM1,XMM4
            orpd XMM1,XMM7
            jmp .L_405fdf
.L_406189:

            lea RCX,QWORD PTR [RIP+.L_407600]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073f6]
            mov EDX,343
            call __assert_fail@PLT
.L_4061a8:

            lea RCX,QWORD PTR [RIP+.L_407600]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,342
            call __assert_fail@PLT
.L_4061c7:

            call __stack_chk_fail@PLT
.L_4061cc:

            nop
            nop
            nop
            nop
.L_4061d0:

            pxor XMM0,XMM0
            mov EAX,EDI
            movzx EDI,DIL
            pxor XMM1,XMM1
            movzx EAX,AH
            cvtsi2sd XMM0,EDI
            cvtsi2sd XMM1,EAX
            mulsd XMM0,QWORD PTR [RIP+.L_433250-178640]
            addsd XMM0,XMM1
            ret 
.L_4061f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406200:

            mulsd XMM0,QWORD PTR [RIP+.L_407868]
            movsd XMM3,QWORD PTR [RIP+.L_407830]
            movsd XMM4,QWORD PTR [RIP+.L_407878]
            addsd XMM0,QWORD PTR [RIP+.L_407870]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_406269

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_407858]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_406269:

            cvttsd2si EAX,XMM1
            sar EAX,8
            ret 
.L_406271:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406280:

            test EDI,EDI
            js .L_4062c8

            movsd XMM2,QWORD PTR [RIP+.L_407858]
.L_40628c:

            mov EAX,EDI
            pxor XMM1,XMM1
            sar EAX,31
            movsd XMM0,QWORD PTR [RIP+.L_407860]
            xor EDI,EAX
            sub EDI,EAX
            movzx EAX,DI
            shr EDI,16
            cvtsi2sd XMM1,EAX
            mulsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDI
            addsd XMM1,XMM0
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4062c8:

            movsd XMM2,QWORD PTR [RIP+.L_407850]
            jmp .L_40628c
.L_4062d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4062e0:

            mulsd XMM0,QWORD PTR [RIP+.L_407868]
            movsd XMM3,QWORD PTR [RIP+.L_407830]
            movsd XMM4,QWORD PTR [RIP+.L_407878]
            addsd XMM0,QWORD PTR [RIP+.L_407870]
            movapd XMM2,XMM0
            movapd XMM1,XMM0
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_406349

            cvttsd2si RAX,XMM0
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_407858]
            andnpd XMM3,XMM0
            cvtsi2sd XMM2,RAX
            movapd XMM5,XMM2
            cmpnlesd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMM4
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            orpd XMM1,XMM3
.L_406349:

            cvttsd2si EAX,XMM1
            ret 
.L_40634e:

            nop
            nop
.L_406350:

            sub RSP,40
.L_406354:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_40642a

            test RDI,RDI
            je .L_40644e

            movzx EAX,WORD PTR [RDI+10]
            movzx EDX,AH
            mov BYTE PTR [RSP+23],AL
            mov BYTE PTR [RSP+22],DL
            movzx EAX,WORD PTR [RSP+22]
            mov DWORD PTR [RSI],EAX
            movzx EAX,WORD PTR [RDI+8]
            movzx EDX,AH
            mov BYTE PTR [RSP+21],AL
            mov BYTE PTR [RSP+20],DL
            movzx EAX,WORD PTR [RSP+20]
            mov DWORD PTR [RSI+4],EAX
            movzx EAX,WORD PTR [RDI+6]
            movzx EDX,AH
            mov BYTE PTR [RSP+19],AL
            mov BYTE PTR [RSP+18],DL
            movzx EAX,WORD PTR [RSP+18]
            mov DWORD PTR [RSI+8],EAX
            movzx EAX,WORD PTR [RDI+4]
            movzx EDX,AH
            mov BYTE PTR [RSP+17],AL
            mov BYTE PTR [RSP+16],DL
            movzx EAX,WORD PTR [RSP+16]
            mov DWORD PTR [RSI+12],EAX
            movzx EAX,WORD PTR [RDI+2]
            movzx EDX,AH
            mov BYTE PTR [RSP+15],AL
            mov BYTE PTR [RSP+14],DL
            movzx EAX,WORD PTR [RSP+14]
            sub EAX,1
            mov DWORD PTR [RSI+16],EAX
            movzx EAX,WORD PTR [RDI]
            mov QWORD PTR [RSI+24],-1
            mov DWORD PTR [RSI+32],0
            movzx EDX,AH
            mov BYTE PTR [RSP+13],AL
            mov BYTE PTR [RSP+12],DL
            movzx EAX,WORD PTR [RSP+12]
            sub EAX,1900
            mov DWORD PTR [RSI+20],EAX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406449

            add RSP,40
.L_406429:

            ret 
.L_40642a:

            lea RCX,QWORD PTR [RIP+.L_4075e0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_40740b]
            mov EDX,398
            call __assert_fail@PLT
.L_406449:

            call __stack_chk_fail@PLT
.L_40644e:

            lea RCX,QWORD PTR [RIP+.L_4075e0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_407421]
            mov EDX,399
            call __assert_fail@PLT
.L_40646d:

            nop
            nop
            nop
.L_406470:

            sub RSP,40
.L_406474:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40652f

            test RSI,RSI
            je .L_406553

            mov EAX,DWORD PTR [RSI]
            mov BYTE PTR [RSP+22],AH
            mov BYTE PTR [RSP+23],AL
            movzx EAX,WORD PTR [RSP+22]
            mov WORD PTR [RDI+10],AX
            mov EAX,DWORD PTR [RSI+4]
            mov BYTE PTR [RSP+20],AH
            mov BYTE PTR [RSP+21],AL
            movzx EAX,WORD PTR [RSP+20]
            mov WORD PTR [RDI+8],AX
            mov EAX,DWORD PTR [RSI+8]
            mov BYTE PTR [RSP+18],AH
            mov BYTE PTR [RSP+19],AL
            movzx EAX,WORD PTR [RSP+18]
            mov WORD PTR [RDI+6],AX
            mov EAX,DWORD PTR [RSI+12]
            mov BYTE PTR [RSP+16],AH
            mov BYTE PTR [RSP+17],AL
            movzx EAX,WORD PTR [RSP+16]
            mov WORD PTR [RDI+4],AX
            movzx EAX,WORD PTR [RSI+16]
            add EAX,1
            movzx EDX,AH
            mov BYTE PTR [RSP+15],AL
            mov BYTE PTR [RSP+14],DL
            movzx EAX,WORD PTR [RSP+14]
            mov WORD PTR [RDI+2],AX
            mov EAX,DWORD PTR [RSI+20]
            add AX,1900
            movzx EDX,AH
            mov BYTE PTR [RSP+13],AL
            mov BYTE PTR [RSP+12],DL
            movzx EAX,WORD PTR [RSP+12]
            mov WORD PTR [RDI],AX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40654e

            add RSP,40
.L_40652e:

            ret 
.L_40652f:

            lea RCX,QWORD PTR [RIP+.L_4075c0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_40740b]
            mov EDX,414
            call __assert_fail@PLT
.L_40654e:

            call __stack_chk_fail@PLT
.L_406553:

            lea RCX,QWORD PTR [RIP+.L_4075c0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_407421]
            mov EDX,415
            call __assert_fail@PLT
.L_406572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406580:

            sub RSP,40
.L_406584:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RDI,RDI
            je .L_4065ee

            mov EDX,8
            lea RSI,QWORD PTR [RSP+16]
            mov ECX,1
            call QWORD PTR [RDI+280]

            xor EDX,EDX
            cmp EAX,1
            jne .L_4065d7

            mov EAX,DWORD PTR [RSP+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+14],AH
            mov BYTE PTR [RSP+15],AL
            shr EDX,16
            mov BYTE PTR [RSP+13],DL
            mov EDX,EAX
            shr EDX,24
            mov BYTE PTR [RSP+12],DL
            mov EDX,DWORD PTR [RSP+12]
.L_4065d7:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_40660d

            add RSP,40
.L_4065ed:

            ret 
.L_4065ee:

            lea RCX,QWORD PTR [RIP+.L_4075a0]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,430
            call __assert_fail@PLT
.L_40660d:

            call __stack_chk_fail@PLT
.L_406612:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406620:

            sub RSP,40
.L_406624:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_406691

            mov EDX,ESI
            mov ECX,ESI
            mov BYTE PTR [RSP+15],SIL
            shr EDX,16
            mov BYTE PTR [RSP+14],CH
            mov RDI,RAX
            mov BYTE PTR [RSP+13],DL
            mov EDX,ESI
            mov DWORD PTR [RSP+20],0
            shr EDX,24
            mov ESI,8
            mov BYTE PTR [RSP+12],DL
            mov EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+16],EDX
            lea RDX,QWORD PTR [RSP+16]
            call QWORD PTR [RAX+312]

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4066b0

            add RSP,40
.L_406690:

            ret 
.L_406691:

            lea RCX,QWORD PTR [RIP+.L_407580]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,443
            call __assert_fail@PLT
.L_4066b0:

            call __stack_chk_fail@PLT
.L_4066b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4066c0:

            push RBX
            sub RSP,16
.L_4066c5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_406739

            mov RBX,RDI
            call QWORD PTR [RDI+304]

            lea EDX,DWORD PTR [RAX+3]
            mov ECX,EAX
            mov EAX,1
            and EDX,4294967292
            sub EDX,ECX
            je .L_406715

            cmp EDX,4
            ja .L_406730

            lea RSI,QWORD PTR [RSP+4]
            mov ECX,1
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            sete AL
            movzx EAX,AL
.L_406715:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_406734

            add RSP,16
.L_406729:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406730:

            xor EAX,EAX
            jmp .L_406715
.L_406734:

            call __stack_chk_fail@PLT
.L_406739:

            lea RCX,QWORD PTR [RIP+.L_407560]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,456
            call __assert_fail@PLT
.L_406758:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406760:

            push RBP
            push RBX
            sub RSP,24
.L_406766:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_4067e3

            mov RBP,RDI
            call QWORD PTR [RDI+304]

            lea ESI,DWORD PTR [RAX+3]
            mov EDX,EAX
            mov EAX,1
            and ESI,4294967292
            mov EBX,ESI
            sub EBX,EDX
            je .L_40679e

            xor EAX,EAX
            cmp EBX,4
            jbe .L_4067b8
.L_40679e:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4067de

            add RSP,24
.L_4067b2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4067b8:

            lea R8,QWORD PTR [RSP+4]
            mov EDX,EBX
            xor ESI,ESI
            mov ECX,4
            mov RDI,R8
            call __memset_chk@PLT

            mov ESI,EBX
            mov RDX,RAX
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            jmp .L_40679e
.L_4067de:

            call __stack_chk_fail@PLT
.L_4067e3:

            lea RCX,QWORD PTR [RIP+.L_407540]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,473
            call __assert_fail@PLT
.L_406802:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406810:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,2280
.L_40681c:

            test AL,AL
            mov QWORD PTR [RSP+2112],RDX
            mov QWORD PTR [RSP+2120],RCX
            mov QWORD PTR [RSP+2128],R8
            mov QWORD PTR [RSP+2136],R9
            je .L_406880

            movaps XMMWORD PTR [RSP+2144],XMM0
            movaps XMMWORD PTR [RSP+2160],XMM1
            movaps XMMWORD PTR [RSP+2176],XMM2
            movaps XMMWORD PTR [RSP+2192],XMM3
            movaps XMMWORD PTR [RSP+2208],XMM4
            movaps XMMWORD PTR [RSP+2224],XMM5
            movaps XMMWORD PTR [RSP+2240],XMM6
            movaps XMMWORD PTR [RSP+2256],XMM7
.L_406880:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2088],RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_406950

            test RSI,RSI
            je .L_406931

            lea RAX,QWORD PTR [RSP+2304]
            lea RBP,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+8]
            mov R8,RSI
            mov ECX,2048
            mov EDX,1
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+2096]
            mov ESI,2047
            mov RDI,RBP
            mov DWORD PTR [RSP+8],16
            mov DWORD PTR [RSP+12],48
            mov QWORD PTR [RSP+24],RAX
            call __vsnprintf_chk@PLT

            test EAX,EAX
            js .L_406928

            mov RDX,RBP
            mov ESI,EAX
            mov RDI,RBX
            call QWORD PTR [RBX+312]
.L_406905:

            mov RCX,QWORD PTR [RSP+2088]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40692c

            add RSP,2280
.L_40691f:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406928:

            xor EAX,EAX
            jmp .L_406905
.L_40692c:

            call __stack_chk_fail@PLT
.L_406931:

            lea RCX,QWORD PTR [RIP+.L_407530]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_407439]
            mov EDX,495
            call __assert_fail@PLT
.L_406950:

            lea RCX,QWORD PTR [RIP+.L_407530]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_4073cb]
            mov EDX,494
            call __assert_fail@PLT
.L_40696f:

            nop
.L_406970:

            test RDI,RDI
            push RBX
.L_406974:

            mov EBX,ESI
            je .L_4069c0

            mov RAX,QWORD PTR [RIP+.L_641c40]
            mov RCX,RDI
            test RAX,RAX
            jne .L_406998

            jmp .L_4069f0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406990:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_4069f0
.L_406998:

            cmp RCX,RAX
            jne .L_406990

            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            jne .L_4069e7
.L_4069a6:

            lea RDX,QWORD PTR [RIP+.L_40744e]
            mov ESI,12
            mov RDI,RCX
            xor EAX,EAX
            call .L_426320
.L_4069bc:

            xor EAX,EAX
            pop RBX
.L_4069bf:

            ret 
.L_4069c0:

            mov RDI,QWORD PTR [RIP+.L_63e1a8]
            test RDI,RDI
            jne .L_4069e7

            xor EDI,EDI
            mov ESI,2048
            call .L_4260c0

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RIP+.L_63e1a8],RAX
            je .L_4069bc
.L_4069e7:

            mov ESI,EBX
            pop RBX
            jmp .L_426170
          .byte 0x90
.L_4069f0:

            mov RDI,QWORD PTR [RIP+.L_63e1a8]
            test RDI,RDI
            je .L_4069a6

            mov ESI,EBX
            pop RBX
            jmp .L_426170
.L_406a04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406a10:

            test RSI,RSI
            je .L_406cd5

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_406a25:

            nop
            nop
            nop
.L_406a28:

            cmp DWORD PTR [RBX],1633906800
            jne .L_406c90

            mov ECX,DWORD PTR [RBX+4]
            cmp ECX,2080
            ja .L_406cb0

            mov ECX,DWORD PTR [RBX+8]
            cmp ECX,1836350024
            je .L_406b78

            ja .L_406ac0

            cmp ECX,1768846408
            je .L_406bf0

            ja .L_406b00

            cmp ECX,1718775112
            je .L_406bc8

            cmp ECX,1768845384
            jne .L_406aa0

            mov RSI,RBX
            mov RDI,RBP
            call .L_42cf70

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28
.L_406a92:

            add RSP,8
.L_406a96:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_406aa0:

            lea RDX,QWORD PTR [RIP+.L_40747e]
            mov ESI,8
            mov RDI,RBP
            xor EAX,EAX
            call .L_426320
.L_406ab6:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 

            nop
.L_406ac0:

            cmp ECX,1952540488
            je .L_406c40

            ja .L_406b38

            cmp ECX,1869640776
            je .L_406c18

            cmp ECX,1885434440
            jne .L_406aa0

            mov RSI,RBX
            mov RDI,RBP
            call .L_427380

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
.L_406b00:

            cmp ECX,1835363656
            je .L_406c68

            cmp ECX,1836082504
            jne .L_406aa0

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d330

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406b38:

            cmp ECX,1954115656
            je .L_406ba0

            cmp ECX,2053533000
            jne .L_406aa0

            mov RSI,RBX
            mov RDI,RBP
            call .L_410450

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406b78:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4264a0

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ba0:

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d320

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406bc8:

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b1e0

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406bf0:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4259b0

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406c18:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4205f0

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406c40:

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d470

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406c68:

            mov RSI,RBX
            mov RDI,RBP
            call .L_425f40

            test EAX,EAX
            je .L_406ab6

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_406a28

            jmp .L_406a92
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406c90:

            lea RDX,QWORD PTR [RIP+.L_40746a]
            mov RDI,RBP
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            add RSP,8
.L_406caa:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_406cb0:

            lea RDX,QWORD PTR [RIP+.L_4074a0]
            mov RDI,RBP
            xor EAX,EAX
            mov R8D,2080
            mov ESI,8
            call .L_426320

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_406cd5:

            mov EAX,1
            ret 
.L_406cdb:

            nop
            nop
            nop
            nop
            nop
.L_406ce0:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_406a10
.L_406cea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_406cf0:

            test RDI,RDI
            lea RAX,QWORD PTR [RIP+.L_63e1a0]
            je .L_406d24

            mov RAX,QWORD PTR [RIP+.L_641c40]
            test RAX,RAX
            je .L_406d1d

            cmp RDI,RAX
            jne .L_406d15

            jmp .L_406d30
          .byte 0x90
.L_406d10:

            cmp RDI,RAX
            je .L_406d24
.L_406d15:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_406d10
.L_406d1d:

            lea RAX,QWORD PTR [RIP+.L_63e1a0]
.L_406d24:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406d30:

            ret 
.L_406d32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406d40:

            cmp ESI,14
            ja .L_406da2

            test RDI,RDI
            je .L_406d80

            mov RAX,QWORD PTR [RIP+.L_641c40]
            test RAX,RAX
            jne .L_406d68

            jmp .L_406d80
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406d60:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_406d80
.L_406d68:

            cmp RDI,RAX
            jne .L_406d60

            mov ESI,ESI
            add RSI,2
            mov RAX,QWORD PTR [RDI+RSI*8]
            test RAX,RAX
            je .L_406d96
.L_406d7c:

            ret 
          .byte 0x66
          .byte 0x90
.L_406d80:

            lea RDI,QWORD PTR [RIP+.L_63e1a0]
            mov ESI,ESI
            add RSI,2
            mov RAX,QWORD PTR [RDI+RSI*8]
            test RAX,RAX
            jne .L_406d7c
.L_406d96:

            lea RAX,QWORD PTR [RIP+.L_63e1a0]
            mov RAX,QWORD PTR [RAX+RSI*8]
            ret 
.L_406da2:

            lea RDX,QWORD PTR [RIP+.L_4074d8]
            mov ESI,3
            sub RSP,8

            xor EAX,EAX
            call .L_426320

            lea RCX,QWORD PTR [RIP+.L_407510]
            lea RSI,QWORD PTR [RIP+.L_4073a7]
            lea RDI,QWORD PTR [RIP+.L_40749c]
            mov EDX,695
            call __assert_fail@PLT
.L_406dd8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406de0:

            push RBX

            xor ESI,ESI
            mov RBX,RDI
            call .L_425f40

            mov RDI,RBX
            xor ESI,ESI
            call .L_42cf70

            mov RDI,RBX
            xor ESI,ESI
            call .L_41d320

            mov RDI,RBX
            xor ESI,ESI
            call .L_41d470

            mov RDI,RBX
            xor ESI,ESI
            call .L_40b1e0

            mov RDI,RBX
            xor ESI,ESI
            call .L_4259b0

            mov RDI,RBX
            xor ESI,ESI
            call .L_427380

            mov RDI,RBX
            xor ESI,ESI
            call .L_41d330

            mov RDI,RBX
            xor ESI,ESI
            call .L_4205f0

            mov RDI,RBX
            xor ESI,ESI
            call .L_410450

            mov RDI,RBX
            xor ESI,ESI
            pop RBX

            jmp .L_4264a0
.L_406e50:

            xor EDI,EDI
            jmp .L_406de0
.L_406e54:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406e60:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,200
.L_406e6c:

            mov RDX,QWORD PTR [RDI+16]
            movdqu XMM0,XMMWORD PTR [RDI+136]
            mov RBP,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RSP+136],XMM0
            lea RAX,QWORD PTR [RBP+136]
            mov QWORD PTR [RSP+16],RDX
            movdqu XMM0,XMMWORD PTR [RDI+152]
            movups XMMWORD PTR [RBP+152],XMM0
            mov QWORD PTR [RSP+48],RAX
            movdqu XMM0,XMMWORD PTR [RDI+168]
            movups XMMWORD PTR [RBP+168],XMM0
            call .L_406de0

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_406ed8

            call .L_426120
.L_406ed8:

            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RBX+8],0
            call pthread_mutex_lock@PLT

            mov RDX,QWORD PTR [RIP+.L_641c40]
            cmp RBX,RDX
            je .L_406f70

            test RDX,RDX
            je .L_406f20

            mov RAX,QWORD PTR [RDX]
            cmp RBX,RAX
            jne .L_406f1b

            jmp .L_406f58
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406f10:

            mov RDX,QWORD PTR [RAX]
            cmp RBX,RDX
            je .L_406f60

            mov RAX,RDX
.L_406f1b:

            test RAX,RAX
            jne .L_406f10
.L_406f20:

            lea RDI,QWORD PTR [RIP+.L_641c60]
            call pthread_mutex_unlock@PLT

            mov RSI,RBX
            mov RDI,RBP
            call .L_426070

            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_406f7c

            add RSP,200
.L_406f51:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406f58:

            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
.L_406f60:

            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX],RDX
            jmp .L_406f20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406f70:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RIP+.L_641c40],RAX
            jmp .L_406f20
.L_406f7c:

            call __stack_chk_fail@PLT
.L_406f81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f90:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            sub RSP,192
.L_406fa5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            test RDI,RDI
            jne .L_406fd1

            jmp .L_40719c
            nop
            nop
            nop
            nop
            nop
            nop
.L_406fc8:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_406ff0
.L_406fd1:

            cmp DWORD PTR [RDI],1633906800
            jne .L_406fc8

            cmp DWORD PTR [RDI+4],2080
            ja .L_406fc8

            cmp DWORD PTR [RDI+8],1835363656
            jne .L_406fc8

            nop
            nop
            nop
            nop
            nop
.L_406ff0:

            mov RBX,RSP
            lea R13,QWORD PTR [RBX+136]
            mov RSI,R13
            call .L_425ea0

            mov RDI,RBX
            mov ESI,184
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+48],R13
            call .L_425fb0

            test RAX,RAX
            mov RBX,RAX
            je .L_40716a

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+176],0
            xor EAX,EAX
            lea R14,QWORD PTR [RBX+136]
            and RDI,-8
            sub RCX,RDI
            add ECX,184
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [RIP+.L_641c60]
            movdqu XMM0,XMMWORD PTR [RSP+136]
            movups XMMWORD PTR [RBX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R13+16]
            movups XMMWORD PTR [RBX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R13+32]
            movups XMMWORD PTR [RBX+168],XMM0
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RIP+.L_641c40]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RIP+.L_641c40],RBX
            mov QWORD PTR [RBX],RAX
            call pthread_mutex_unlock@PLT

            mov QWORD PTR [RBX+16],R12
            mov QWORD PTR [RBX+48],R14
            mov ESI,176
            mov RDI,RBX
            call .L_4260c0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_407190

            xor ESI,ESI
            mov RDI,RBX
            call .L_426290

            xor ESI,ESI
            mov RDI,RBX
            call .L_40fdc0

            xor ESI,ESI
            mov RDI,RBX
            call .L_40fbf0

            xor ESI,ESI
            mov RDI,RBX
            call .L_426230

            xor ESI,ESI
            mov RDI,RBX
            call .L_42cef0

            xor ESI,ESI
            mov RDI,RBX
            call .L_427240

            xor ESI,ESI
            mov RDI,RBX
            call .L_40b0b0

            xor ESI,ESI
            mov RDI,RBX
            call .L_41d2c0

            xor ESI,ESI
            mov RDI,RBX
            call .L_41d2f0

            xor ESI,ESI
            mov RDI,RBX
            call .L_41d390

            xor ESI,ESI
            mov RDI,RBX
            call .L_425690

            xor ESI,ESI
            mov RDI,RBX
            call .L_4204c0

            xor ESI,ESI
            mov RDI,RBX
            call .L_410370

            xor ESI,ESI
            mov RDI,RBX
            call .L_426460

            mov RSI,RBP
            mov RDI,RBX
            call .L_406a10

            test EAX,EAX
            je .L_407190
.L_40716a:

            mov RDX,QWORD PTR [RSP+184]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4071a3

            add RSP,192
.L_407187:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_407190:

            mov RDI,RBX
            xor EBX,EBX
            call .L_406e60

            jmp .L_40716a
.L_40719c:

            xor EDI,EDI
            jmp .L_406ff0
.L_4071a3:

            call __stack_chk_fail@PLT
.L_4071a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071b0:

            test RDI,RDI
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
.L_4071be:

            lea RBX,QWORD PTR [RIP+.L_63e1a0]
            je .L_4071f8

            mov RBX,QWORD PTR [RIP+.L_641c40]
            test RBX,RBX
            je .L_4071f1

            cmp RDI,RBX
            jne .L_4071e9

            jmp .L_4071f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4071e0:

            cmp RDI,RBX
            je .L_407378
.L_4071e9:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_4071e0
.L_4071f1:

            lea RBX,QWORD PTR [RIP+.L_63e1a0]
.L_4071f8:

            test R14,R14
            je .L_407368
.L_407201:

            mov ESI,184
            call .L_425fb0

            test RAX,RAX
            mov RBP,RAX
            je .L_407359

            movdqu XMM0,XMMWORD PTR [RBX+136]
            lea R12,QWORD PTR [RBX+136]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            lea R13,QWORD PTR [RAX+136]
            movups XMMWORD PTR [RAX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R12+16]
            movups XMMWORD PTR [RAX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movups XMMWORD PTR [RAX+168],XMM0
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RIP+.L_641c40]
            lea RDI,QWORD PTR [RIP+.L_641c60]
            mov QWORD PTR [RIP+.L_641c40],RBP
            mov QWORD PTR [RBP],RAX
            call pthread_mutex_unlock@PLT

            mov QWORD PTR [RBP+16],R14
            mov QWORD PTR [RBP+48],R13
            mov ESI,176
            mov RDI,RBP
            call .L_4260c0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_40734f

            mov RSI,RBX
            mov RDI,RBP
            call .L_426290

            mov RSI,RBX
            mov RDI,RBP
            call .L_40fdc0

            mov RSI,RBX
            mov RDI,RBP
            call .L_40fbf0

            mov RSI,RBX
            mov RDI,RBP
            call .L_426230

            mov RSI,RBX
            mov RDI,RBP
            call .L_42cef0

            mov RSI,RBX
            mov RDI,RBP
            call .L_427240

            mov RSI,RBX
            mov RDI,RBP
            call .L_40b0b0

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d2c0

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d2f0

            mov RSI,RBX
            mov RDI,RBP
            call .L_41d390

            mov RSI,RBX
            mov RDI,RBP
            call .L_425690

            mov RSI,RBX
            mov RDI,RBP
            call .L_4204c0

            mov RSI,RBX
            mov RDI,RBP
            call .L_410370

            mov RSI,RBX
            mov RDI,RBP
            add RBX,24
            call .L_426460

            jmp .L_407349
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407340:

            add RBX,8
            cmp RBX,R12
            je .L_407359
.L_407349:

            cmp QWORD PTR [RBX],0
            jne .L_407340
.L_40734f:

            mov RDI,RBP
            xor EBP,EBP
            call .L_406e60
.L_407359:

            pop RBX
.L_40735a:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407368:

            mov R14,QWORD PTR [RBX+16]
            jmp .L_407201
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407378:

            mov RBX,RDI
            jmp .L_4071f8
.L_407380:

            test RDI,RDI
            je .L_407390

            jmp .L_406e60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407390:

            ret 
.L_407392:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073a0:

            xor ESI,ESI
            jmp .L_406d40
.L_4073a7:
          .string "cmsplugin.c"
.L_4073b3:
          .string "(Result != ((void *)0))"
.L_4073cb:
          .string "(io != ((void *)0))"
.L_4073df:
          .string "(Array != ((void *)0))"
.L_4073f6:
          .string "(XYZ != ((void *)0))"
.L_40740b:
          .string "(Dest != ((void *)0))"
.L_407421:
          .string "(Source != ((void *)0))"
.L_407439:
          .string "(frm != ((void *)0))"
.L_40744e:
          .string "NULL memory pool on context"
.L_40746a:
          .string "Unrecognized plugin"
.L_40747e:
          .string "Unrecognized plugin type \'%X\'"
.L_40749c:
          .string "(0)"
.L_4074a0:
          .string "plugin needs Little CMS %d, current version is %d"
          .zero 6
.L_4074d8:
          .string "Bad context client -- possible corruption"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407510:
          .string "_cmsContextGetClientChunk"
          .zero 6
.L_407530:
          .string "_cmsIOPrintf"
          .zero 3
.L_407540:
          .string "_cmsWriteAlignment"
          .zero 13
.L_407560:
          .string "_cmsReadAlignment"
          .zero 14
.L_407580:
          .string "_cmsWriteTypeBase"
          .zero 14
.L_4075a0:
          .string "_cmsReadTypeBase"
          .zero 15
.L_4075c0:
          .string "_cmsEncodeDateTimeNumber"
          .zero 7
.L_4075e0:
          .string "_cmsDecodeDateTimeNumber"
          .zero 7
.L_407600:
          .string "_cmsWriteXYZNumber"
          .zero 13
.L_407620:
          .string "_cmsWrite15Fixed16Number"
          .zero 7
.L_407640:
          .string "_cmsWriteUInt64Number"
          .zero 10
.L_407660:
          .string "_cmsWriteFloat32Number"
          .zero 9
.L_407680:
          .string "_cmsWriteUInt32Number"
          .zero 10
.L_4076a0:
          .string "_cmsWriteUInt16Array"
          .zero 11
.L_4076c0:
          .string "_cmsWriteUInt16Number"
          .zero 10
.L_4076e0:
          .string "_cmsWriteUInt8Number"
          .zero 11
.L_407700:
          .string "_cmsReadXYZNumber"
          .zero 14
.L_407720:
          .string "_cmsRead15Fixed16Number"
          .zero 8
.L_407740:
          .string "_cmsReadUInt64Number"
          .zero 11
.L_407760:
          .string "_cmsReadFloat32Number"
          .zero 10
.L_407780:
          .string "_cmsReadUInt32Number"
          .zero 11
.L_4077a0:
          .string "_cmsReadUInt16Array"
          .zero 12
.L_4077c0:
          .string "_cmsReadUInt16Number"
          .zero 11
.L_4077e0:
          .string "_cmsReadUInt8Number"
          .zero 12
.L_407800:
          .string "_cmsAdjustEndianess64"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407820:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407830:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407840:
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x7f
.L_407844:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
.L_407848:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_407858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_407860:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            lock add BYTE PTR DS:[RAX],AL
# WARNING: found overlapping blocks at address 7628
.set .L_407868, . - 2

          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x40
.L_407870:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 30327
.L_407878:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            xor BYTE PTR [RBX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+63],DH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407890:

            push R12
            push RBP
            mov R11,RDX
            push RBX
.L_407897:

            mov EAX,DWORD PTR [RDI]
            mov EBX,EAX
            mov EDI,EAX
            mov EBP,EAX
            shr EBX,10
            shr EDI,14
            mov R12D,EAX
            shr EBP,3
            shr R12D,13
            and EBX,1
            and EDI,1
            and EBP,15
            and R12D,1
            cmp EBX,EDI
            je .L_4078d1

            shr EAX,7
            mov R11D,EAX
            and R11D,7
            imul R11D,ECX
            add R11,RDX
.L_4078d1:

            test EBP,EBP
            je .L_40791a

            lea EAX,DWORD PTR [RBP-1]
            mov ECX,ECX
            xor R9D,R9D
            nop
            nop
            nop
.L_4078e0:

            movzx R10D,BYTE PTR [R11]
            mov EDI,EAX
            sub EDI,R9D
            test EBX,EBX
            cmove EDI,R9D
            movsxd RDI,EDI
            mov R8D,R10D
            shl R8D,8
            or R8D,R10D
            test R12D,R12D
            mov R10D,R8D
            not R10D
            cmovne R8D,R10D
            add R9D,1
            add R11,RCX
            cmp EBP,R9D
            mov WORD PTR [RSI+RDI*2],R8W
            jne .L_4078e0
.L_40791a:

            pop RBX
.L_40791b:

            lea RAX,QWORD PTR [RDX+1]
            pop RBP
            pop R12
            ret 
.L_407923:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407930:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_40796f:

            nop
.L_407970:

            movzx EAX,BYTE PTR [RDX]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+3]
            not EAX
            mov ECX,EAX
            movzx EAX,AL
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4079c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4079d0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407a0f:

            nop
.L_407a10:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407a4f:

            nop
.L_407a50:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407a8f:

            nop
.L_407a90:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407ac0:

            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407af1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407b00:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407b30:

            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+3]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407b61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407b70:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+4],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            movzx EAX,BYTE PTR [RDX+2]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407ba0:

            movzx ECX,BYTE PTR [RDX]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,BYTE PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_407bf7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c00:

            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,BYTE PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,BYTE PTR [RDX+3]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            movzx EAX,AX
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407c58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c60:

            movzx ECX,WORD PTR [RDX]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI],AX
            movzx ECX,WORD PTR [RDX+2]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+2],AX
            movzx ECX,WORD PTR [RDX+4]
            mov EAX,ECX
            shl EAX,8
            or EAX,ECX
            sar EAX,8
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407c99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ca0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI],AX
            movzx EAX,BYTE PTR [RDX+1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+2],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_407cc1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407cd0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+1]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407cea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407cf0:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+2]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407d0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407d10:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+3]
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407d2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407d30:

            movzx EAX,BYTE PTR [RDX]
            mov ECX,EAX
            shl ECX,8
            or ECX,EAX
            lea RAX,QWORD PTR [RDX+1]
            not ECX
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407d4c:

            nop
            nop
            nop
            nop
.L_407d50:

            push R13
            push R12
            mov R9,RDX
            push RBP
            push RBX
.L_407d59:

            mov EAX,DWORD PTR [RDI]
            mov EBP,EAX
            mov R10D,EAX
            mov R12D,EAX
            mov R13D,EAX
            shr EBP,3
            shr R12D,13
            shr R13D,11
            shr R10D,10
            and EBP,15
            and R12D,1
            and R13D,1
            and R10D,1
            je .L_407d93

            shr EAX,7
            and EAX,7
            imul EAX,ECX
            lea R9,QWORD PTR [RDX+RAX*2]
.L_407d93:

            test EBP,EBP
            je .L_407de7

            mov ECX,ECX
            lea EAX,DWORD PTR [RBP-1]
            xor R8D,R8D
            lea RBX,QWORD PTR [RCX+RCX*1]
            nop
            nop
            nop
            nop
            nop
.L_407da8:

            movzx ECX,WORD PTR [R9]
            mov EDI,EAX
            sub EDI,R8D
            test R10D,R10D
            cmove EDI,R8D
            movsxd RDI,EDI
            mov R11D,ECX
            rol R11W,8
            test R13D,R13D
            cmovne ECX,R11D
            test R12D,R12D
            mov R11D,ECX
            not R11D
            cmovne ECX,R11D
            add R8D,1
            add R9,RBX
            cmp EBP,R8D
            mov WORD PTR [RSI+RDI*2],CX
            jne .L_407da8
.L_407de7:

            pop RBX
.L_407de8:

            lea RAX,QWORD PTR [RDX+2]
            pop RBP
            pop R12
            pop R13
            ret 
.L_407df2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e00:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407e23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e30:

            movzx EAX,WORD PTR [RDX]
            not EAX
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            not EAX
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            not EAX
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+6]
            not EAX
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407e5b:

            nop
            nop
            nop
            nop
            nop
.L_407e60:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+6],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407e83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407e90:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+6],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407eb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ec0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407ee3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ef0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407f0b:

            nop
            nop
            nop
            nop
            nop
.L_407f10:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_407f2b:

            nop
            nop
            nop
            nop
            nop
.L_407f30:

            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407f4c:

            nop
            nop
            nop
            nop
.L_407f50:

            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+4]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+6]
            mov WORD PTR [RSI+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407f6c:

            nop
            nop
            nop
            nop
.L_407f70:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_407f83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f90:

            movzx ECX,WORD PTR [RDX]
            lea RAX,QWORD PTR [RDX+2]
            not ECX
            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            mov WORD PTR [RSI],CX
            ret 
.L_407fa5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407fb0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_407fc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407fd0:

            movzx EAX,WORD PTR [RDX]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+2]
            mov WORD PTR [RSI+2],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_407fe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ff0:

            movsd XMM1,QWORD PTR [RIP+.L_40b4d0]
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RDX]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_433250-163192]
            ucomisd XMM2,XMM0
            jae .L_40803b

            ucomisd XMM0,XMM1
            mov ECX,4294967295
            jae .L_40803b

            subsd XMM0,QWORD PTR [RIP+.L_40b4e0]
            addsd XMM0,QWORD PTR [RIP+.L_433250-163176]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
.L_40803b:

            mov WORD PTR [RSI+4],CX
            mov WORD PTR [RSI+2],CX
            lea RAX,QWORD PTR [RDX+8]
            mov WORD PTR [RSI],CX
            ret 
.L_40804b:

            nop
            nop
            nop
            nop
            nop
.L_408050:

            push RBP
            push RBX
.L_408052:

            mov R9,RDX
            mov EAX,DWORD PTR [RDI+4]
            mov R10D,EAX
            mov EDI,EAX
            mov R11D,EAX
            shr R10D,10
            shr EDI,14
            mov EBX,EAX
            shr R11D,3
            shr EBX,13
            and R10D,1
            and EDI,1
            and R11D,15
            and EBX,1
            cmp R10D,EDI
            je .L_408094

            shr EAX,7
            mov R9D,EAX
            and R9D,7
            imul R9D,ECX
            add R9,RDX
.L_408094:

            test R11D,R11D
            je .L_4080e2

            lea EAX,DWORD PTR [R11-1]
            mov ECX,ECX
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080a8:

            mov EDI,EAX
            sub EDI,R8D
            test R10D,R10D
            cmove EDI,R8D
            movsxd RDI,EDI
            movzx EDI,WORD PTR [RSI+RDI*2]
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            test EBX,EBX
            mov EBP,EDI
            not EBP
            cmovne EDI,EBP
            add R8D,1
            mov BYTE PTR [R9],DIL
            add R9,RCX
            cmp R11D,R8D
            jne .L_4080a8
.L_4080e2:

            lea RAX,QWORD PTR [RDX+1]
            pop RBX
.L_4080e7:

            pop RBP
            ret 
.L_4080e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080f0:

            push R12
            push RBP
            mov R8,RDX
            push RBX
.L_4080f7:

            mov EAX,DWORD PTR [RDI+4]
            mov EBX,EAX
            mov R9D,EAX
            mov EBP,EAX
            mov R12D,EAX
            shr EBX,3
            shr EBP,13
            shr R12D,11
            shr R9D,10
            and EBX,15
            and EBP,1
            and R12D,1
            and R9D,1
            je .L_40812f

            shr EAX,7
            and EAX,7
            imul EAX,ECX
            lea R8,QWORD PTR [RDX+RAX*2]
.L_40812f:

            test EBX,EBX
            je .L_40817a

            mov ECX,ECX
            lea EAX,DWORD PTR [RBX-1]
            xor EDI,EDI
            lea R11,QWORD PTR [RCX+RCX*1]
            nop
            nop
.L_408140:

            mov ECX,EAX
            sub ECX,EDI
            test R9D,R9D
            cmove ECX,EDI
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSI+RCX*2]
            mov R10D,ECX
            rol R10W,8
            test R12D,R12D
            cmovne ECX,R10D
            test EBP,EBP
            mov R10D,ECX
            not R10D
            cmovne ECX,R10D
            add EDI,1
            mov WORD PTR [R8],CX
            add R8,R11
            cmp EBX,EDI
            jne .L_408140
.L_40817a:

            pop RBX
.L_40817b:

            lea RAX,QWORD PTR [RDX+2]
            pop RBP
            pop R12
            ret 
.L_408183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408190:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            movzx EAX,WORD PTR [RSI+8]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+4],AL
            movzx EAX,WORD PTR [RSI+10]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+5],AL
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_408211:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408220:

            movzx EAX,WORD PTR [RSI+10]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+8]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+4],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+5],AL
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_4082a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4082b0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+6],AX
            movzx EAX,WORD PTR [RSI+8]
            mov WORD PTR [RDX+8],AX
            movzx EAX,WORD PTR [RSI+10]
            mov WORD PTR [RDX+10],AX
            lea RAX,QWORD PTR [RDX+12]
            ret 
.L_4082e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4082f0:

            movzx EAX,WORD PTR [RSI+10]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+8]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+6],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+8],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+10],AX
            lea RAX,QWORD PTR [RDX+12]
            ret 
.L_408323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408330:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408387:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408390:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            not EAX
            mov BYTE PTR [RDX],AL
            movzx ECX,WORD PTR [RSI+2]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI+6]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            not ECX
            mov BYTE PTR [RDX+3],CL
            ret 
.L_4083f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408400:

            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408460:

            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4084b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084c0:

            movzx EAX,WORD PTR [RSI+4]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+6]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408517:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408520:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_408543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408550:

            movzx EAX,WORD PTR [RSI]
            not EAX
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            not EAX
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            not EAX
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            not EAX
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_40857b:

            nop
            nop
            nop
            nop
            nop
.L_408580:

            movzx EAX,WORD PTR [RSI+6]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4085a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4085b0:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            rol AX,8
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            rol AX,8
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+6]
            rol AX,8
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_4085e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4085f0:

            movzx ECX,WORD PTR [RSI]
            mov EAX,4278255361
            shl ECX,8
            sub ECX,-128
            imul RCX,RAX
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            mov BYTE PTR [RDX+1],DIL
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+3]
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_408668:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408670:

            movzx ECX,WORD PTR [RSI]
            mov EAX,4278255361
            shl ECX,8
            sub ECX,-128
            imul RCX,RAX
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            imul EDI,EDI,65281
            add EDI,8388608
            shr EDI,24
            mov BYTE PTR [RDX+2],DIL
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+4]
            shr RCX,40
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_4086e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4086f0:

            movzx EDI,WORD PTR [RSI]
            mov EAX,4278255361
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            mov WORD PTR [RDX],DI
            movzx EDI,WORD PTR [RSI+2]
            shl EDI,8
            sub EDI,-128
            imul RDI,RAX
            shr RDI,40
            mov WORD PTR [RDX+2],DI
            movzx ESI,WORD PTR [RSI+4]
            shl ESI,8
            lea ECX,DWORD PTR [RSI+128]
            imul RCX,RAX
            lea RAX,QWORD PTR [RDX+6]
            shr RCX,40
            mov WORD PTR [RDX+4],CX
            ret 
.L_40873d:

            nop
            nop
            nop
.L_408740:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+3]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_408785:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408790:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_4087a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4087b0:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+3]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_4087f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408800:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+3]
            ret 
.L_408818:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408820:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_40883b:

            nop
            nop
            nop
            nop
            nop
.L_408840:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_40885b:

            nop
            nop
            nop
            nop
            nop
.L_408860:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            rol AX,8
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            rol AX,8
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+6]
            ret 
.L_408887:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408890:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_4088d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4088e0:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4088f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408900:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_408946:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408950:

            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408969:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408970:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+3],CL
            ret 
.L_4089b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4089c0:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+2],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+3],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_4089d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4089e0:

            movzx ECX,WORD PTR [RSI+4]
            lea RAX,QWORD PTR [RDX+4]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            movzx ECX,WORD PTR [RSI+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            movzx ECX,WORD PTR [RSI]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+2],CL
            ret 
.L_408a25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408a30:

            movzx EAX,WORD PTR [RSI+4]
            mov BYTE PTR [RDX],AL
            movzx EAX,WORD PTR [RSI+2]
            mov BYTE PTR [RDX+1],AL
            movzx EAX,WORD PTR [RSI]
            mov BYTE PTR [RDX+2],AL
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408a48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408a50:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_408a6b:

            nop
            nop
            nop
            nop
            nop
.L_408a70:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_408a8c:

            nop
            nop
            nop
            nop
.L_408a90:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+4],AX
            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX+6],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_408aac:

            nop
            nop
            nop
            nop
.L_408ab0:

            movzx EAX,WORD PTR [RSI+4]
            mov WORD PTR [RDX],AX
            movzx EAX,WORD PTR [RSI+2]
            mov WORD PTR [RDX+2],AX
            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+4],AX
            lea RAX,QWORD PTR [RDX+8]
            ret 
.L_408acb:

            nop
            nop
            nop
            nop
            nop
.L_408ad0:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_408ae9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408af0:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            not ECX
            movzx ECX,CX
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_408b0e:

            nop
            nop
.L_408b10:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX],CL
            ret 
.L_408b29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408b30:

            movzx ECX,WORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+2]
            imul ECX,ECX,65281
            add ECX,8388608
            shr ECX,24
            mov BYTE PTR [RDX+1],CL
            ret 
.L_408b4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408b50:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_408b5b:

            nop
            nop
            nop
            nop
            nop
.L_408b60:

            movzx EAX,WORD PTR [RSI]
            not EAX
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_408b6d:

            nop
            nop
            nop
.L_408b70:

            movzx EAX,WORD PTR [RSI]
            rol AX,8
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+2]
            ret 
.L_408b7f:

            nop
.L_408b80:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408b8b:

            nop
            nop
            nop
            nop
            nop
.L_408b90:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDX+2],AX
            lea RAX,QWORD PTR [RDX+4]
            ret 
.L_408b9c:

            nop
            nop
            nop
            nop
.L_408ba0:

            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            sub RSP,8
.L_408bad:

            mov R10D,DWORD PTR [RDI]
            mov EBP,R10D
            mov R13D,R10D
            mov R8D,R10D
            shr EBP,10
            mov EBX,R10D
            shr R13D,14
            shr R8D,3
            mov R9D,EBP
            shr EBX,13
            shr R10D,7
            xor EBP,R13D
            and R8D,15
            and R9D,1
            and EBX,1
            and R10D,7
            and EBP,1
            je .L_408c80

            movsxd RAX,R10D
            add RDX,RAX
            test R8D,R8D
            mov R12,RDX
            je .L_408c40
.L_408bfa:

            lea R12D,DWORD PTR [R8-1]
            xor ESI,ESI
.L_408c00:

            movzx EDI,BYTE PTR [RDX]
            mov ECX,R12D
            mov EAX,ESI
            sub ECX,ESI
            test R9D,R9D
            cmovne EAX,ECX
            cdqe 
            mov ECX,EDI
            shl ECX,8
            or ECX,EDI
            test EBX,EBX
            mov EDI,ECX
            not EDI
            cmovne ECX,EDI
            add ESI,1
            add RDX,1
            cmp R8D,ESI
            mov WORD PTR [R11+RAX*2],CX
            jg .L_408c00

            test EBP,EBP
            mov R12,RDX
            jne .L_408c40
.L_408c3a:

            movsxd R12,R10D
            add R12,RDX
.L_408c40:

            test R10D,R10D
            jne .L_408c6a

            and R13D,1
            je .L_408c6a

            movzx EBP,WORD PTR [R11]
            sub R8D,1
            lea RSI,QWORD PTR [R11+2]
            movsxd RBX,R8D
            mov RDI,R11
            lea RDX,QWORD PTR [RBX+RBX*1]
            call memmove@PLT

            mov WORD PTR [RAX+RBX*2],BP
.L_408c6a:

            add RSP,8
.L_408c6e:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c80:

            test R8D,R8D
            jne .L_408bfa

            jmp .L_408c3a
.L_408c8b:

            nop
            nop
            nop
            nop
            nop
.L_408c90:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_408c98:

            mov R11D,DWORD PTR [RDI]
            mov R12D,R11D
            mov R13D,R11D
            mov R9D,R11D
            shr R12D,10
            mov EDI,R11D
            mov EBP,R11D
            shr R13D,14
            shr R9D,3
            shr EDI,11
            mov R10D,R12D
            shr EBP,13
            shr R11D,7
            xor R12D,R13D
            and R9D,15
            and EDI,1
            and R10D,1
            and EBP,1
            and R11D,7
            and R12D,1
            je .L_408d78

            movsxd RAX,R11D
            test R9D,R9D
            lea RBX,QWORD PTR [RDX+RAX*2]
            je .L_408d3a
.L_408cee:

            lea EDX,DWORD PTR [R9-1]
            xor R8D,R8D
            nop
            nop
            nop
.L_408cf8:

            movzx EAX,WORD PTR [RBX]
            mov ECX,EDX
            sub ECX,R8D
            test R10D,R10D
            cmove ECX,R8D
            movsxd RCX,ECX
            mov R14D,EAX
            rol R14W,8
            test EDI,EDI
            cmovne EAX,R14D
            test EBP,EBP
            mov R14D,EAX
            not R14D
            cmovne EAX,R14D
            add R8D,1
            add RBX,2
            cmp R9D,R8D
            mov WORD PTR [RSI+RCX*2],AX
            jg .L_408cf8

            test R12D,R12D
            je .L_408d84
.L_408d3a:

            test R11D,R11D
            jne .L_408d69

            and R13D,1
            je .L_408d69

            movzx R12D,WORD PTR [RSI]
            sub R9D,1
            mov RCX,RSI
            movsxd RBP,R9D
            lea RSI,QWORD PTR [RSI+2]
            mov RDI,RCX
            lea RDX,QWORD PTR [RBP+RBP*1]
            call memmove@PLT

            mov WORD PTR [RAX+RBP*2],R12W
.L_408d69:

            mov RAX,RBX
            pop RBX
.L_408d6d:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408d78:

            test R9D,R9D
            mov RBX,RDX
            jne .L_408cee
.L_408d84:

            movsxd RAX,R11D
            lea RBX,QWORD PTR [RBX+RAX*2]
            jmp .L_408d3a
.L_408d8d:

            nop
            nop
            nop
.L_408d90:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
.L_408da7:

            mov R9D,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            movsd XMM1,QWORD PTR [RIP+.L_40b4d0]
            mov EAX,R9D
            mov EDX,R9D
            mov EDI,R9D
            shr EAX,3
            mov ECX,R9D
            shr EDX,10
            and EAX,15
            shr EDI,14
            shr ECX,16
            mov DWORD PTR [RSP+16],EAX
            mov R10D,R9D
            mov EAX,R9D
            mov R11D,R9D
            mov R14D,EDX
            shr R10D,13
            shr EAX,7
            xor EDX,EDI
            shr R11D,12
            and ECX,31
            and EAX,7
            and R14D,1
            and R10D,1
            and EDX,1
            and R11D,1
            cmp ECX,29
            mov DWORD PTR [RSP+20],EDI
            mov DWORD PTR [RSP+12],EAX
            ja .L_408e24

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_408f70
.L_408e24:

            mov EAX,DWORD PTR [RSP+16]
            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_408f00

            mov EDI,EDX
            sub EAX,1
            movsxd RDX,EDX
            mov R13,RAX
            lea R15,QWORD PTR [RBP+RDX*8]
            add RAX,1
            imul EDI,R12D
            xor ESI,ESI
            movsd XMM3,QWORD PTR [RIP+.L_433250-163192]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_40b4d0]
            movsd XMM6,QWORD PTR [RIP+.L_40b4e0]
            movsd XMM5,QWORD PTR [RIP+.L_433250-163176]
            jmp .L_408ee0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e80:

            pxor XMM0,XMM0
            mov EDX,EDI
            cvtsd2ss XMM0,QWORD PTR [RBP+RDX*8]
            cvtss2sd XMM0,XMM0
.L_408e90:

            mulsd XMM0,XMM1
            xor EDX,EDX
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_408ec0

            ucomisd XMM0,XMM4
            mov EDX,4294967295
            jae .L_408ec0

            subsd XMM0,XMM6
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_408ec0:

            mov R8D,EDX
            test R10D,R10D
            movsxd RCX,ECX
            not R8D
            cmovne EDX,R8D
            add RSI,1
            add EDI,R12D
            cmp RSI,RAX
            mov WORD PTR [RBX+RCX*2],DX
            je .L_408f00
.L_408ee0:

            mov ECX,R13D
            sub ECX,ESI
            test R14D,R14D
            cmove ECX,ESI
            test R11D,R11D
            jne .L_408e80

            pxor XMM0,XMM0
            cvtsd2ss XMM0,QWORD PTR [R15+RSI*8]
            cvtss2sd XMM0,XMM0
            jmp .L_408e90
.L_408f00:

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jne .L_408f0f

            test BYTE PTR [RSP+20],1
            jne .L_408f40
.L_408f0f:

            and R9D,4096
            lea RAX,QWORD PTR [RBP+8]
            jne .L_408f2b

            mov EAX,DWORD PTR [RSP+16]
            add EAX,DWORD PTR [RSP+12]
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*8]
.L_408f2b:

            add RSP,40
.L_408f2f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408f40:

            mov EAX,DWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+2]
            movzx R13D,WORD PTR [RBX]
            mov RDI,RBX
            lea R12D,DWORD PTR [RAX-1]
            movsxd R12,R12D
            lea RDX,QWORD PTR [R12+R12*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RBX+R12*2],R13W
            mov R9D,DWORD PTR [RAX]
            jmp .L_408f0f
          .byte 0x66
          .byte 0x90
.L_408f70:

            movsd XMM1,QWORD PTR [RIP+.L_433250-163168]
            jmp .L_408e24
.L_408f7d:

            nop
            nop
            nop
.L_408f80:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
.L_408f97:

            mov R9D,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            movsd XMM1,QWORD PTR [RIP+.L_40b4d0]
            mov EAX,R9D
            mov EDX,R9D
            mov EDI,R9D
            shr EAX,3
            mov ECX,R9D
            shr EDX,10
            and EAX,15
            shr EDI,14
            shr ECX,16
            mov DWORD PTR [RSP+16],EAX
            mov R10D,R9D
            mov EAX,R9D
            mov R11D,R9D
            mov R14D,EDX
            shr R10D,13
            shr EAX,7
            xor EDX,EDI
            shr R11D,12
            and ECX,31
            and EAX,7
            and R14D,1
            and R10D,1
            and EDX,1
            and R11D,1
            cmp ECX,29
            mov DWORD PTR [RSP+20],EDI
            mov DWORD PTR [RSP+12],EAX
            ja .L_409014

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409160
.L_409014:

            mov EAX,DWORD PTR [RSP+16]
            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP+12]
            test EAX,EAX
            je .L_4090e8

            mov EDI,EDX
            sub EAX,1
            movsxd RDX,EDX
            mov R13,RAX
            lea R15,QWORD PTR [RBP+RDX*4]
            add RAX,1
            imul EDI,R12D
            xor ESI,ESI
            movsd XMM3,QWORD PTR [RIP+.L_433250-163192]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_40b4d0]
            movsd XMM6,QWORD PTR [RIP+.L_40b4e0]
            movsd XMM5,QWORD PTR [RIP+.L_433250-163176]
            jmp .L_4090cc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409070:

            mov EDX,EDI
            movss XMM0,DWORD PTR [RBP+RDX*4]
.L_409078:

            cvtss2sd XMM0,XMM0
            xor EDX,EDX
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_4090ac

            ucomisd XMM0,XMM4
            mov EDX,4294967295
            jae .L_4090ac

            subsd XMM0,XMM6
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_4090ac:

            mov R8D,EDX
            test R10D,R10D
            movsxd RCX,ECX
            not R8D
            cmovne EDX,R8D
            add RSI,1
            add EDI,R12D
            cmp RAX,RSI
            mov WORD PTR [RBX+RCX*2],DX
            je .L_4090e8
.L_4090cc:

            mov ECX,R13D
            sub ECX,ESI
            test R14D,R14D
            cmove ECX,ESI
            test R11D,R11D
            jne .L_409070

            movss XMM0,DWORD PTR [R15+RSI*4]
            jmp .L_409078
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4090e8:

            mov EAX,DWORD PTR [RSP+12]
            test EAX,EAX
            jne .L_4090f7

            test BYTE PTR [RSP+20],1
            jne .L_409128
.L_4090f7:

            and R9D,4096
            lea RAX,QWORD PTR [RBP+4]
            jne .L_409113

            mov EAX,DWORD PTR [RSP+16]
            add EAX,DWORD PTR [RSP+12]
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*4]
.L_409113:

            add RSP,40
.L_409117:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409128:

            mov EAX,DWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RBX+2]
            movzx R13D,WORD PTR [RBX]
            mov RDI,RBX
            lea R12D,DWORD PTR [RAX-1]
            movsxd R12,R12D
            lea RDX,QWORD PTR [R12+R12*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RBX+R12*2],R13W
            mov R9D,DWORD PTR [RAX]
            jmp .L_4090f7
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409160:

            movsd XMM1,QWORD PTR [RIP+.L_433250-163168]
            jmp .L_409014
.L_40916d:

            nop
            nop
            nop
.L_409170:

            push R15
            push R14
            mov EAX,ECX
            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,24
.L_409186:

            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDI]
            movss XMM1,DWORD PTR [RIP+.L_40b524]
            mov ECX,EDI
            mov EDX,EDI
            mov ESI,EDI
            shr ECX,7
            shr EDX,10
            shr ESI,14
            and ECX,7
            mov EBX,EDI
            mov R8D,EDI
            mov DWORD PTR [RSP],ECX
            mov ECX,EDI
            mov R9D,EDI
            shr ECX,16
            shr EBX,3
            mov R13D,EDX
            shr R8D,13
            xor EDX,ESI
            shr R9D,12
            and ECX,31
            and EBX,15
            and R13D,1
            and R8D,1
            and EDX,1
            and R9D,1
            cmp ECX,29
            mov DWORD PTR [RSP+4],ESI
            ja .L_4091f9

            mov ESI,1
            shl RSI,CL
            test ESI,1073217632
            jne .L_4092f8
.L_4091f9:

            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP]
            test EBX,EBX
            je .L_409280

            lea R10D,DWORD PTR [RBX-1]
            mov ESI,EDX
            movsxd RDX,EDX
            imul ESI,EAX
            lea R15,QWORD PTR [RBP+RDX*4]
            xor ECX,ECX
            mov R12,R10
            movss XMM2,DWORD PTR [RIP+.L_40b524]
            add R10,1
            jmp .L_409261
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409230:

            mov R14D,ESI
            movss XMM0,DWORD PTR [RBP+R14*4]
.L_40923a:

            test R8D,R8D
            divss XMM0,XMM1
            je .L_40924d

            movaps XMM3,XMM2
            subss XMM3,XMM0
            movaps XMM0,XMM3
.L_40924d:

            add RCX,1
            movsxd RDX,EDX
            add ESI,EAX
            cmp R10,RCX
            movss DWORD PTR [R11+RDX*4],XMM0
            je .L_409280
.L_409261:

            mov EDX,R12D
            sub EDX,ECX
            test R13D,R13D
            cmove EDX,ECX
            test R9D,R9D
            jne .L_409230

            movss XMM0,DWORD PTR [R15+RCX*4]
            jmp .L_40923a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409280:

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_40928e

            test BYTE PTR [RSP+4],1
            jne .L_4092b8
.L_40928e:

            and EDI,4096
            lea RAX,QWORD PTR [RBP+4]
            jne .L_4092a5

            add EBX,DWORD PTR [RSP]
            movsxd RBX,EBX
            lea RAX,QWORD PTR [RBP+RBX*4]
.L_4092a5:

            add RSP,24
.L_4092a9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4092b8:

            lea R12D,DWORD PTR [RBX-1]
            lea RSI,QWORD PTR [R11+4]
            mov RDI,R11
            movss XMM0,DWORD PTR [R11]
            movsxd R12,R12D
            movss DWORD PTR [RSP+4],XMM0
            lea RDX,QWORD PTR [R12*4]
            call memmove@PLT

            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [RAX+R12*4],XMM0
            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RAX]
            jmp .L_40928e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4092f8:

            movss XMM1,DWORD PTR [RIP+.L_40b520]
            jmp .L_4091f9
.L_409305:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409310:

            push R15
            push R14
            mov EAX,ECX
            push R13
            push R12
            mov R11,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,24
.L_409326:

            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_40b500]
            mov ECX,EDI
            mov EDX,EDI
            mov ESI,EDI
            shr ECX,7
            shr EDX,10
            shr ESI,14
            and ECX,7
            mov EBX,EDI
            mov R8D,EDI
            mov DWORD PTR [RSP],ECX
            mov ECX,EDI
            mov R9D,EDI
            shr ECX,16
            shr EBX,3
            mov R13D,EDX
            shr R8D,13
            xor EDX,ESI
            shr R9D,12
            and ECX,31
            and EBX,15
            and R13D,1
            and R8D,1
            and EDX,1
            and R9D,1
            cmp ECX,29
            mov DWORD PTR [RSP+4],ESI
            ja .L_409399

            mov ESI,1
            shl RSI,CL
            test ESI,1073217632
            jne .L_4094a8
.L_409399:

            test EDX,EDX
            cmovne EDX,DWORD PTR [RSP]
            test EBX,EBX
            je .L_409430

            lea R10D,DWORD PTR [RBX-1]
            mov ESI,EDX
            movsxd RDX,EDX
            imul ESI,EAX
            lea R15,QWORD PTR [RBP+RDX*8]
            xor ECX,ECX
            mov R12,R10
            movsd XMM2,QWORD PTR [RIP+.L_40b500]
            add R10,1
            jmp .L_409407
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4093d0:

            mov R14D,ESI
            test R8D,R8D
            movsd XMM0,QWORD PTR [RBP+R14*8]
            divsd XMM0,XMM1
            je .L_409426
.L_4093e3:

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            cvtsd2ss XMM0,XMM3
.L_4093f3:

            add RCX,1
            movsxd RDX,EDX
            add ESI,EAX
            cmp R10,RCX
            movss DWORD PTR [R11+RDX*4],XMM0
            je .L_409430
.L_409407:

            mov EDX,R12D
            sub EDX,ECX
            test R13D,R13D
            cmove EDX,ECX
            test R9D,R9D
            jne .L_4093d0

            movsd XMM0,QWORD PTR [R15+RCX*8]
            test R8D,R8D
            divsd XMM0,XMM1
            jne .L_4093e3
.L_409426:

            cvtsd2ss XMM0,XMM0
            jmp .L_4093f3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409430:

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_40943e

            test BYTE PTR [RSP+4],1
            jne .L_409468
.L_40943e:

            and EDI,4096
            lea RAX,QWORD PTR [RBP+8]
            jne .L_409455

            add EBX,DWORD PTR [RSP]
            movsxd RBX,EBX
            lea RAX,QWORD PTR [RBP+RBX*8]
.L_409455:

            add RSP,24
.L_409459:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409468:

            lea R12D,DWORD PTR [RBX-1]
            lea RSI,QWORD PTR [R11+4]
            mov RDI,R11
            movss XMM0,DWORD PTR [R11]
            movsxd R12,R12D
            movss DWORD PTR [RSP+4],XMM0
            lea RDX,QWORD PTR [R12*4]
            call memmove@PLT

            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [RAX+R12*4],XMM0
            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RAX]
            jmp .L_40943e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4094a8:

            movsd XMM1,QWORD PTR [RIP+.L_40b4f8]
            jmp .L_409399
.L_4094b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4094c0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4094ca:

            mov R9D,DWORD PTR [RDI+4]
            mov R11D,R9D
            mov EDI,R9D
            mov R10D,R9D
            shr R11D,10
            mov R13D,R9D
            shr R9D,14
            shr EDI,3
            mov R8D,R11D
            shr R10D,13
            shr R13D,7
            xor R11D,R9D
            and EDI,15
            and R8D,1
            and R10D,1
            and R13D,7
            and R11D,1
            je .L_409598

            movsxd RBP,R13D
            xor EBX,EBX
            add RBP,RDX
            test EDI,EDI
            je .L_409562
.L_409518:

            lea R12D,DWORD PTR [RDI-1]
            xor ECX,ECX
            nop
            nop
.L_409520:

            mov EAX,R12D
            sub EAX,ECX
            test R8D,R8D
            cmove EAX,ECX
            cdqe 
            movzx EAX,WORD PTR [RSI+RAX*2]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            test R10D,R10D
            mov EBX,EAX
            not EBX
            cmove EBX,EAX
            add ECX,1
            add RBP,1
            cmp EDI,ECX
            mov BYTE PTR [RBP-1],BL
            jg .L_409520

            test R11D,R11D
            jne .L_409562
.L_40955c:

            movsxd RAX,R13D
            add RBP,RAX
.L_409562:

            test R13D,R13D
            jne .L_409587

            and R9D,1
            je .L_409587

            mov R12,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea RDI,QWORD PTR [R12+1]
            mov RSI,R12
            movsxd RDX,EDX
            call memmove@PLT

            mov BYTE PTR [R12],BL
.L_409587:

            add RSP,8
.L_40958b:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409598:

            test EDI,EDI
            mov RBP,RDX
            jne .L_409518

            xor EBX,EBX
            jmp .L_40955c
.L_4095a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4095b0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_4095b8:

            mov R9D,DWORD PTR [RDI+4]
            mov R12D,R9D
            mov EDI,R9D
            mov R10D,R9D
            shr R12D,10
            mov R11D,R9D
            mov R14D,R9D
            shr R9D,14
            shr EDI,3
            shr R10D,11
            mov R8D,R12D
            shr R11D,13
            shr R14D,7
            xor R12D,R9D
            and EDI,15
            and R10D,1
            and R8D,1
            and R11D,1
            and R14D,7
            and R12D,1
            je .L_409690

            movsxd RAX,R14D
            test EDI,EDI
            lea RBP,QWORD PTR [RDX+RAX*2]
            je .L_4096a7
.L_409614:

            lea R13D,DWORD PTR [RDI-1]
            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_409620:

            mov EAX,R13D
            sub EAX,ECX
            test R8D,R8D
            cmove EAX,ECX
            cdqe 
            movzx EBX,WORD PTR [RSI+RAX*2]
            mov EAX,EBX
            rol AX,8
            test R10D,R10D
            cmovne EBX,EAX
            test R11D,R11D
            mov EAX,EBX
            not EAX
            cmovne EBX,EAX
            add ECX,1
            add RBP,2
            mov WORD PTR [RBP-2],BX
            cmp EDI,ECX
            jg .L_409620

            test R12D,R12D
            je .L_40969d
.L_40965b:

            test R14D,R14D
            jne .L_409684

            and R9D,1
            je .L_409684

            mov R12,RDX
            lea EDX,DWORD PTR [RDI-1]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            mov WORD PTR [R12],BX
.L_409684:

            pop RBX
.L_409685:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_409690:

            xor EBX,EBX
            test EDI,EDI
            mov RBP,RDX
            jne .L_409614
.L_40969d:

            movsxd RAX,R14D
            lea RBP,QWORD PTR [RBP+RAX*2]
            jmp .L_40965b
.L_4096a7:

            xor EBX,EBX
            jmp .L_40965b
.L_4096ab:

            nop
            nop
            nop
            nop
            nop
.L_4096b0:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_4096c4:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM1,QWORD PTR [RIP+.L_40b4d0]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_40973c

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409830
.L_40973c:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_409846
.L_40974a:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*8]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_40977b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409768:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movsd QWORD PTR [RBX+RDX*8],XMM0
            je .L_4097c1
.L_40977b:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            movzx EDX,WORD PTR [RSI+RDX*2]
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM1
            je .L_4097aa

            movapd XMM2,XMM1
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_4097aa:

            test R10D,R10D
            jne .L_409768

            movsd QWORD PTR [R15+RCX*8],XMM0
            add RCX,1
            add EDI,R11D
            cmp RAX,RCX
            jne .L_40977b
.L_4097c1:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_4097d3

            test BYTE PTR [RSP+12],1
            jne .L_409800
.L_4097d3:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+8]
            jne .L_4097ea

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*8]
.L_4097ea:

            add RSP,40
.L_4097ee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409800:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,3
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX],XMM0
            mov R8D,DWORD PTR [RAX+4]
            jmp .L_4097d3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409830:

            test EDX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_433250-163168]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_40974a
.L_409846:

            pxor XMM0,XMM0
            jmp .L_4097c1
.L_40984f:

            nop
.L_409850:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_409864:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM2,QWORD PTR [RIP+.L_40b4d0]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_4098dc

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_4099e0
.L_4098dc:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_4099f6
.L_4098ea:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*4]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_40991b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409908:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movss DWORD PTR [RBX+RDX*4],XMM1
            je .L_409969
.L_40991b:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            movzx EDX,WORD PTR [RSI+RDX*2]
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            je .L_40994a

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
.L_40994a:

            test R10D,R10D
            pxor XMM1,XMM1
            cvtsd2ss XMM1,XMM0
            jne .L_409908

            add EDI,R11D
            movss DWORD PTR [R15+RCX*4],XMM1
            add RCX,1
            cmp RAX,RCX
            jne .L_40991b
.L_409969:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_40997b

            test BYTE PTR [RSP+12],1
            jne .L_4099a8
.L_40997b:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+4]
            jne .L_409992

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*4]
.L_409992:

            add RSP,40
.L_409996:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4099a8:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,2
            call memmove@PLT

            pxor XMM4,XMM4
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            cvtsd2ss XMM4,XMM0
            mov R8D,DWORD PTR [RAX+4]
            movss DWORD PTR [RBX],XMM4
            jmp .L_40997b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4099e0:

            test EDX,EDX
            movsd XMM2,QWORD PTR [RIP+.L_433250-163168]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_4098ea
.L_4099f6:

            pxor XMM0,XMM0
            jmp .L_409969
.L_4099ff:

            nop
.L_409a00:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_409a14:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM2,QWORD PTR [RIP+.L_40b500]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_409a8c

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409b88
.L_409a8c:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_409b9e
.L_409a9a:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*4]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_409acb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409ab8:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movss DWORD PTR [RBX+RDX*4],XMM1
            je .L_409b16
.L_409acb:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            cvtss2sd XMM0,DWORD PTR [RSI+RDX*4]
            mulsd XMM0,XMM2
            je .L_409af7

            movapd XMM3,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
.L_409af7:

            pxor XMM1,XMM1
            test R10D,R10D
            cvtsd2ss XMM1,XMM0
            jne .L_409ab8

            add EDI,R11D
            movss DWORD PTR [R15+RCX*4],XMM1
            add RCX,1
            cmp RAX,RCX
            jne .L_409acb
.L_409b16:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_409b28

            test BYTE PTR [RSP+12],1
            jne .L_409b50
.L_409b28:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+4]
            jne .L_409b3f

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*4]
.L_409b3f:

            add RSP,40
.L_409b43:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_409b50:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+4]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,2
            call memmove@PLT

            pxor XMM4,XMM4
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            cvtsd2ss XMM4,XMM0
            mov R8D,DWORD PTR [RAX+4]
            movss DWORD PTR [RBX],XMM4
            jmp .L_409b28
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409b88:

            test EDX,EDX
            movsd XMM2,QWORD PTR [RIP+.L_40b4f8]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_409a9a
.L_409b9e:

            pxor XMM0,XMM0
            jmp .L_409b16
.L_409ba7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409bb0:

            push R15
            push R14
            mov R11D,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,40
.L_409bc4:

            mov R8D,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+16],RDI
            movsd XMM1,QWORD PTR [RIP+.L_40b500]
            mov EDX,R8D
            mov EAX,R8D
            mov ECX,R8D
            shr EDX,10
            shr EAX,14
            shr ECX,16
            mov EBP,R8D
            mov R9D,R8D
            mov R12D,R8D
            mov R10D,R8D
            shr EBP,3
            mov R14D,EDX
            shr R9D,13
            shr R12D,7
            shr R10D,12
            xor EDX,EAX
            and ECX,31
            and EBP,15
            and R14D,1
            and R9D,1
            and R12D,7
            and R10D,1
            and EDX,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EAX
            ja .L_409c3c

            mov EAX,1
            shl RAX,CL
            test EAX,1073217632
            jne .L_409d30
.L_409c3c:

            test EDX,EDX
            cmovne EDX,R12D
            test EBP,EBP
            je .L_409d46
.L_409c4a:

            lea EAX,DWORD PTR [RBP-1]
            mov EDI,EDX
            movsxd RDX,EDX
            imul EDI,R11D
            lea R15,QWORD PTR [RBX+RDX*8]
            xor ECX,ECX
            mov R13,RAX
            add RAX,1
            jmp .L_409c7b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409c68:

            add RCX,1
            mov EDX,EDI
            add EDI,R11D
            cmp RAX,RCX
            movsd QWORD PTR [RBX+RDX*8],XMM0
            je .L_409cbe
.L_409c7b:

            mov EDX,R13D
            pxor XMM0,XMM0
            sub EDX,ECX
            test R14D,R14D
            cmove EDX,ECX
            test R9D,R9D
            movsxd RDX,EDX
            cvtss2sd XMM0,DWORD PTR [RSI+RDX*4]
            mulsd XMM0,XMM1
            je .L_409ca7

            movapd XMM2,XMM1
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_409ca7:

            test R10D,R10D
            jne .L_409c68

            movsd QWORD PTR [R15+RCX*8],XMM0
            add RCX,1
            add EDI,R11D
            cmp RAX,RCX
            jne .L_409c7b
.L_409cbe:

            test R12D,R12D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_409cd0

            test BYTE PTR [RSP+12],1
            jne .L_409d00
.L_409cd0:

            and R8D,4096
            lea RAX,QWORD PTR [RBX+8]
            jne .L_409ce7

            add EBP,R12D
            movsxd RBP,EBP
            lea RAX,QWORD PTR [RBX+RBP*8]
.L_409ce7:

            add RSP,40
.L_409ceb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409d00:

            lea EDX,DWORD PTR [RBP-1]
            lea RDI,QWORD PTR [RBX+8]
            mov RSI,RBX
            movsxd RDX,EDX
            shl RDX,3
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX],XMM0
            mov R8D,DWORD PTR [RAX+4]
            jmp .L_409cd0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409d30:

            test EDX,EDX
            movsd XMM1,QWORD PTR [RIP+.L_40b4f8]
            cmovne EDX,R12D
            test EBP,EBP
            jne .L_409c4a
.L_409d46:

            pxor XMM0,XMM0
            jmp .L_409cbe
.L_409d4f:

            nop
.L_409d50:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,72
.L_409d61:

            mov DWORD PTR [RSP+4],ECX
            mov ECX,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            movss XMM3,DWORD PTR [RIP+.L_40b524]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+8],XMM3
            mov EAX,ECX
            mov ESI,ECX
            mov EBP,ECX
            shr EAX,3
            shr ESI,14
            mov R12D,ECX
            and EAX,15
            shr EBP,13
            shr R12D,12
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            and EBP,1
            shr EAX,10
            and R12D,1
            mov DWORD PTR [RSP+60],ESI
            mov EDX,EAX
            xor EAX,ESI
            and EDX,1
            and EAX,1
            mov DWORD PTR [RSP+12],EDX
            mov EDX,ECX
            shr ECX,16
            shr EDX,7
            and ECX,31
            and EDX,7
            cmp ECX,29
            mov DWORD PTR [RSP+44],EDX
            ja .L_409de5

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_409f48
.L_409de5:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_409ea8

            mov R15D,DWORD PTR [RSP+4]
            lea ECX,DWORD PTR [RSI-1]
            mov RSI,QWORD PTR [RSP+24]
            xor R14D,R14D
            lea RDI,QWORD PTR [RCX+1]
            mov DWORD PTR [RSP+40],ECX
            imul R15D,EAX
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*2]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP+32],RAX
            mov EAX,R15D
            mov R15,R14
            mov R14D,R12D
            mov R12D,EBP
            mov EBP,EAX
            jmp .L_409e7b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409e38:

            mov RAX,QWORD PTR [RSP+24]
            mov ECX,EBP
            movzx EDI,WORD PTR [RAX+RCX*2]
            call .L_420970
.L_409e48:

            test R12D,R12D
            divss XMM0,DWORD PTR [RSP+8]
            je .L_409e62

            movss XMM2,DWORD PTR [RIP+.L_40b524]
            subss XMM2,XMM0
            movaps XMM0,XMM2
.L_409e62:

            add R15,1
            add EBP,DWORD PTR [RSP+4]
            cmp QWORD PTR [RSP+16],R15
            movsxd RBX,EBX
            movss DWORD PTR [R13+RBX*4],XMM0
            je .L_409ea8
.L_409e7b:

            mov EBX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+12]
            sub EBX,R15D
            test EDX,EDX
            cmove EBX,R15D
            test R14D,R14D
            jne .L_409e38

            mov RAX,QWORD PTR [RSP+32]
            movzx EDI,WORD PTR [RAX+R15*2]
            call .L_420970

            jmp .L_409e48
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409ea8:

            mov EAX,DWORD PTR [RSP+44]
            test EAX,EAX
            jne .L_409eb7

            test BYTE PTR [RSP+60],1
            jne .L_409ee8
.L_409eb7:

            mov RAX,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RAX]
            test AH,16
            jne .L_409f2b
.L_409ec3:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+24]
            add RSP,72
.L_409ed4:

            pop RBX
            pop RBP
            cdqe 
            pop R12
            lea RAX,QWORD PTR [RSI+RAX*2]
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409ee8:

            mov EAX,DWORD PTR [RSP+56]
            lea RSI,QWORD PTR [R13+4]
            mov RDI,R13
            movss XMM0,DWORD PTR [R13]
            movss DWORD PTR [RSP+4],XMM0
            lea EBX,DWORD PTR [RAX-1]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RBX*4]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [RSP+4]
            movss DWORD PTR [R13+RBX*4],XMM0
            mov EAX,DWORD PTR [RAX]
            test AH,16
            je .L_409ec3
.L_409f2b:

            mov RAX,QWORD PTR [RSP+24]
            add RSP,72
.L_409f34:

            pop RBX
            pop RBP
            add RAX,2
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409f48:

            movss XMM4,DWORD PTR [RIP+.L_40b520]
            movss DWORD PTR [RSP+8],XMM4
            jmp .L_409de5
.L_409f5b:

            nop
            nop
            nop
            nop
            nop
.L_409f60:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,72
.L_409f71:

            mov DWORD PTR [RSP+8],ECX
            mov ECX,DWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+48],RDI
            movss XMM4,DWORD PTR [RIP+.L_40b52c]
            mov EAX,ECX
            mov ESI,ECX
            mov EBP,ECX
            shr EAX,3
            shr ESI,14
            mov EDX,ECX
            and EAX,15
            mov R12D,ECX
            shr EBP,13
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            shr ECX,16
            shr EAX,10
            shr EDX,7
            shr R12D,12
            mov EDI,EAX
            and ECX,31
            xor EAX,ESI
            and EDI,1
            and EDX,7
            and EBP,1
            and EAX,1
            and R12D,1
            cmp ECX,29
            mov DWORD PTR [RSP+12],EDI
            mov DWORD PTR [RSP+60],ESI
            movss DWORD PTR [RSP+4],XMM4
            mov DWORD PTR [RSP+44],EDX
            ja .L_409ff5

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_40a198
.L_409ff5:

            mov ECX,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ECX,ECX
            je .L_40a108

            lea EDX,DWORD PTR [RCX-1]
            mov R15D,DWORD PTR [RSP+8]
            xor R14D,R14D
            lea RDI,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+40],EDX
            imul R15D,EAX
            cdqe 
            mov QWORD PTR [RSP+16],RDI
            mov RDI,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RDI+RAX*2]
            mov QWORD PTR [RSP+32],RAX
            mov EAX,R15D
            mov R15,R14
            mov R14D,R12D
            mov R12D,EBP
            mov EBP,EAX
            jmp .L_40a0d6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a050:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,EBP
            movzx EDI,WORD PTR [RAX+RDX*2]
            call .L_420970
.L_40a060:

            test R12D,R12D
            je .L_40a072

            movss XMM3,DWORD PTR [RSP+4]
            subss XMM3,XMM0
            movaps XMM0,XMM3
.L_40a072:

            mulss XMM0,DWORD PTR [RSP+4]
            xor EDX,EDX
            movsxd RBX,EBX
            pxor XMM2,XMM2
            lea RSI,QWORD PTR [R13+RBX*2]
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_433250-163192]
            ucomisd XMM2,XMM0
            jae .L_40a0c4

            ucomisd XMM0,QWORD PTR [RIP+.L_40b4d0]
            mov EDX,4294967295
            jae .L_40a0c4

            subsd XMM0,QWORD PTR [RIP+.L_40b4e0]
            addsd XMM0,QWORD PTR [RIP+.L_433250-163176]
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_40a0c4:

            add R15,1
            add EBP,DWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+16],R15
            mov WORD PTR [RSI],DX
            je .L_40a108
.L_40a0d6:

            mov EBX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+12]
            sub EBX,R15D
            test EDX,EDX
            cmove EBX,R15D
            test R14D,R14D
            jne .L_40a050

            mov RAX,QWORD PTR [RSP+32]
            movzx EDI,WORD PTR [RAX+R15*2]
            call .L_420970

            jmp .L_40a060
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a108:

            mov EAX,DWORD PTR [RSP+44]
            test EAX,EAX
            jne .L_40a117

            test BYTE PTR [RSP+60],1
            jne .L_40a148
.L_40a117:

            mov RAX,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RAX]
            test AH,16
            jne .L_40a179
.L_40a123:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+24]
            add RSP,72
.L_40a134:

            pop RBX
            pop RBP
            cdqe 
            pop R12
            lea RAX,QWORD PTR [RSI+RAX*2]
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a148:

            mov EAX,DWORD PTR [RSP+56]
            lea RSI,QWORD PTR [R13+2]
            mov RDI,R13
            movzx EBP,WORD PTR [R13]
            lea EBX,DWORD PTR [RAX-1]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RBX+RBX*1]
            call memmove@PLT

            mov RAX,QWORD PTR [RSP+48]
            mov WORD PTR [R13+RBX*2],BP
            mov EAX,DWORD PTR [RAX]
            test AH,16
            je .L_40a123
.L_40a179:

            mov RAX,QWORD PTR [RSP+24]
            add RSP,72
            pop RBX
            pop RBP
            add RAX,2
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a198:

            movss XMM5,DWORD PTR [RIP+.L_40b528]
            movss DWORD PTR [RSP+4],XMM5
            jmp .L_409ff5
.L_40a1ab:

            nop
            nop
            nop
            nop
            nop
.L_40a1b0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            sub RSP,72
.L_40a1c4:

            mov DWORD PTR [RSP],ECX
            mov ECX,DWORD PTR [RDI+4]
            movss XMM3,DWORD PTR [RIP+.L_40b524]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+4],XMM3
            mov EAX,ECX
            mov EDX,ECX
            mov EBP,ECX
            shr EAX,3
            shr EDX,7
            shr EBP,12
            and EAX,15
            and EDX,7
            and EBP,1
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+44],EDX
            shr EAX,10
            mov EDX,ECX
            mov EBX,EAX
            shr EDX,14
            and EBX,1
            xor EAX,EDX
            mov DWORD PTR [RSP+60],EDX
            mov DWORD PTR [RSP+16],EBX
            mov EBX,ECX
            shr ECX,16
            shr EBX,13
            and ECX,31
            and EAX,1
            and EBX,1
            cmp ECX,29
            ja .L_40a240

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_40a3b8
.L_40a240:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_40a3d9
.L_40a253:

            mov R14D,DWORD PTR [RSP]
            lea EDX,DWORD PTR [RSI-1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],R12
            lea RCX,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+20],EDX
            imul R14D,EAX
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP+8],RCX
            mov R12,R13
            mov R13D,EBP
            mov EBP,EBX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_40a2c2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a290:

            mov RDI,QWORD PTR [RSP+24]
            movaps XMM0,XMM1
            mov EAX,R14D
            movss DWORD PTR [RSP+40],XMM1
            add R12,1
            lea RBX,QWORD PTR [RDI+RAX*2]
            call .L_4209b0

            add R14D,DWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],R12
            mov WORD PTR [RBX],AX
            movss XMM1,DWORD PTR [RSP+40]
            je .L_40a322
.L_40a2c2:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RSP+16]
            movss XMM2,DWORD PTR [RSP+4]
            sub EAX,R12D
            test EDX,EDX
            cmove EAX,R12D
            test EBP,EBP
            cdqe 
            movss XMM1,DWORD PTR [R15+RAX*4]
            mulss XMM1,XMM2
            je .L_40a2f0

            subss XMM2,XMM1
            movaps XMM1,XMM2
.L_40a2f0:

            test R13D,R13D
            jne .L_40a290

            movaps XMM0,XMM1
            movss DWORD PTR [RSP+40],XMM1
            call .L_4209b0

            mov RDI,QWORD PTR [RSP+32]
            add R14D,DWORD PTR [RSP]
            movss XMM1,DWORD PTR [RSP+40]
            mov WORD PTR [RDI+R12*2],AX
            add R12,1
            cmp QWORD PTR [RSP+8],R12
            jne .L_40a2c2
.L_40a322:

            mov R12,QWORD PTR [RSP+24]
.L_40a327:

            mov EAX,DWORD PTR [RSP+44]
            movss DWORD PTR [RSP],XMM1
            test EAX,EAX
            jne .L_40a33b

            test BYTE PTR [RSP+60],1
            jne .L_40a368
.L_40a33b:

            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            jne .L_40a39f
.L_40a346:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            add RSP,72
.L_40a352:

            pop RBX
            pop RBP
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a368:

            mov EAX,DWORD PTR [RSP+56]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            lea EDX,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            movss XMM1,DWORD PTR [RSP]
            movaps XMM0,XMM1
            call .L_4209b0

            mov WORD PTR [R12],AX
            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            je .L_40a346
.L_40a39f:

            add RSP,72
            lea RAX,QWORD PTR [R12+2]
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a3b8:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            movss XMM4,DWORD PTR [RIP+.L_40b520]
            movss DWORD PTR [RSP+4],XMM4
            test ESI,ESI
            jne .L_40a253
.L_40a3d9:

            pxor XMM1,XMM1
            jmp .L_40a327
.L_40a3e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a3f0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            sub RSP,72
.L_40a404:

            mov DWORD PTR [RSP],ECX
            mov ECX,DWORD PTR [RDI+4]
            movss XMM3,DWORD PTR [RIP+.L_40b52c]
            mov QWORD PTR [RSP+48],RDI
            movss DWORD PTR [RSP+4],XMM3
            mov EAX,ECX
            mov EDX,ECX
            mov EBP,ECX
            shr EAX,3
            shr EDX,7
            shr EBP,12
            and EAX,15
            and EDX,7
            and EBP,1
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+44],EDX
            shr EAX,10
            mov EDX,ECX
            mov EBX,EAX
            shr EDX,14
            and EBX,1
            xor EAX,EDX
            mov DWORD PTR [RSP+60],EDX
            mov DWORD PTR [RSP+16],EBX
            mov EBX,ECX
            shr ECX,16
            shr EBX,13
            and ECX,31
            and EAX,1
            and EBX,1
            cmp ECX,29
            ja .L_40a480

            mov EDX,1
            shl RDX,CL
            test EDX,1073217632
            jne .L_40a600
.L_40a480:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            test ESI,ESI
            je .L_40a621
.L_40a493:

            mov R14D,DWORD PTR [RSP]
            lea EDX,DWORD PTR [RSI-1]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],R12
            lea RCX,QWORD PTR [RDX+1]
            mov DWORD PTR [RSP+20],EDX
            imul R14D,EAX
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            mov QWORD PTR [RSP+8],RCX
            mov R12,R13
            mov R13D,EBP
            mov EBP,EBX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_40a502
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a4d0:

            mov RDI,QWORD PTR [RSP+24]
            movaps XMM0,XMM1
            mov EAX,R14D
            movss DWORD PTR [RSP+40],XMM1
            add R12,1
            lea RBX,QWORD PTR [RDI+RAX*2]
            call .L_4209b0

            add R14D,DWORD PTR [RSP]
            cmp QWORD PTR [RSP+8],R12
            mov WORD PTR [RBX],AX
            movss XMM1,DWORD PTR [RSP+40]
            je .L_40a569
.L_40a502:

            mov EAX,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RSP+16]
            pxor XMM1,XMM1
            movss XMM2,DWORD PTR [RSP+4]
            sub EAX,R12D
            test EDX,EDX
            cmove EAX,R12D
            test EBP,EBP
            cdqe 
            movzx EAX,WORD PTR [R15+RAX*2]
            cvtsi2ss XMM1,EAX
            divss XMM1,XMM2
            je .L_40a537

            subss XMM2,XMM1
            movaps XMM1,XMM2
.L_40a537:

            test R13D,R13D
            jne .L_40a4d0

            movaps XMM0,XMM1
            movss DWORD PTR [RSP+40],XMM1
            call .L_4209b0

            mov RDI,QWORD PTR [RSP+32]
            add R14D,DWORD PTR [RSP]
            movss XMM1,DWORD PTR [RSP+40]
            mov WORD PTR [RDI+R12*2],AX
            add R12,1
            cmp QWORD PTR [RSP+8],R12
            jne .L_40a502
.L_40a569:

            mov R12,QWORD PTR [RSP+24]
.L_40a56e:

            mov EAX,DWORD PTR [RSP+44]
            movss DWORD PTR [RSP],XMM1
            test EAX,EAX
            jne .L_40a582

            test BYTE PTR [RSP+60],1
            jne .L_40a5b0
.L_40a582:

            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            jne .L_40a5e7
.L_40a58d:

            mov EAX,DWORD PTR [RSP+56]
            add EAX,DWORD PTR [RSP+44]
            add RSP,72
.L_40a599:

            pop RBX
            pop RBP
            cdqe 
            lea RAX,QWORD PTR [R12+RAX*2]
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a5b0:

            mov EAX,DWORD PTR [RSP+56]
            lea RDI,QWORD PTR [R12+2]
            mov RSI,R12
            lea EDX,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            add RDX,RDX
            call memmove@PLT

            movss XMM1,DWORD PTR [RSP]
            movaps XMM0,XMM1
            call .L_4209b0

            mov WORD PTR [R12],AX
            mov RAX,QWORD PTR [RSP+48]
            test BYTE PTR [RAX+5],16
            je .L_40a58d
.L_40a5e7:

            add RSP,72
            lea RAX,QWORD PTR [R12+2]
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a600:

            mov ESI,DWORD PTR [RSP+56]
            test EAX,EAX
            cmovne EAX,DWORD PTR [RSP+44]
            movss XMM4,DWORD PTR [RIP+.L_40b528]
            movss DWORD PTR [RSP+4],XMM4
            test ESI,ESI
            jne .L_40a493
.L_40a621:

            pxor XMM1,XMM1
            jmp .L_40a56e
.L_40a62a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40a630:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ECX
            mov RBX,RDX
            sub RSP,32
.L_40a640:

            mov RDI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_40b9f0

            mov EAX,DWORD PTR [R12+4]
            test AH,16
            jne .L_40a6b8

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM1,XMM1
            and EAX,7
            pxor XMM2,XMM2
            lea RAX,QWORD PTR [RBX+RAX*4+12]
            cvtsd2ss XMM0,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM0
            cvtsd2ss XMM1,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+4],XMM1
            cvtsd2ss XMM2,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+8],XMM2
.L_40a698:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40a6ed

            add RSP,32
.L_40a6ac:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6b8:

            pxor XMM3,XMM3
            mov EAX,EBP
            pxor XMM4,XMM4
            add EBP,EBP
            pxor XMM5,XMM5
            cvtsd2ss XMM3,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM3
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+RAX*4],XMM4
            lea RAX,QWORD PTR [RBX+4]
            cvtsd2ss XMM5,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+RBP*4],XMM5
            jmp .L_40a698
.L_40a6ed:

            call __stack_chk_fail@PLT
.L_40a6f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a700:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            divsd XMM0,QWORD PTR [RIP+.L_40b4f8]
            test AH,16
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_40a770

            movsd XMM1,QWORD PTR [RDX+8]
            shr EAX,7
            movsd XMM0,QWORD PTR [RIP+.L_40b508]
            and EAX,7
            movsd XMM2,QWORD PTR [RIP+.L_40b510]
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            addsd XMM1,XMM0
            pxor XMM3,XMM3
            addsd XMM0,QWORD PTR [RDX+16]
            pxor XMM4,XMM4
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            cvtsd2ss XMM3,XMM1
            cvtsd2ss XMM4,XMM0
            movss DWORD PTR [RSI+4],XMM3
            movss DWORD PTR [RSI+8],XMM4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a770:

            mov EAX,ECX
            movsd XMM0,QWORD PTR [RIP+.L_40b508]
            movsd XMM1,QWORD PTR [RDX+RAX*8]
            add ECX,ECX
            movsd XMM2,QWORD PTR [RIP+.L_40b510]
            lea RAX,QWORD PTR [RDX+8]
            addsd XMM1,XMM0
            pxor XMM5,XMM5
            addsd XMM0,QWORD PTR [RDX+RCX*8]
            pxor XMM6,XMM6
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            cvtsd2ss XMM5,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RSI+4],XMM5
            movss DWORD PTR [RSI+8],XMM6
            ret 
.L_40a7b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a7c0:

            movss XMM0,DWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            divss XMM0,DWORD PTR [RIP+.L_40b520]
            test AH,16
            movss DWORD PTR [RSI],XMM0
            jne .L_40a818

            movss XMM1,DWORD PTR [RDX+4]
            shr EAX,7
            movss XMM0,DWORD PTR [RIP+.L_40b530]
            and EAX,7
            addss XMM1,XMM0
            movss XMM2,DWORD PTR [RIP+.L_433250-163100]
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            divss XMM1,XMM2
            movss DWORD PTR [RSI+4],XMM1
            addss XMM0,DWORD PTR [RDX+8]
            divss XMM0,XMM2
            movss DWORD PTR [RSI+8],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a818:

            mov EAX,ECX
            movss XMM0,DWORD PTR [RIP+.L_40b530]
            movss XMM1,DWORD PTR [RDX+RAX*4]
            add ECX,ECX
            addss XMM1,XMM0
            movss XMM2,DWORD PTR [RIP+.L_433250-163100]
            lea RAX,QWORD PTR [RDX+4]
            divss XMM1,XMM2
            movss DWORD PTR [RSI+4],XMM1
            addss XMM0,DWORD PTR [RDX+RCX*4]
            divss XMM0,XMM2
            movss DWORD PTR [RSI+8],XMM0
            ret 
.L_40a851:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a860:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_40b518]
            divsd XMM0,XMM1
            test AH,16
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_40a8c0

            movsd XMM0,QWORD PTR [RDX+8]
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            divsd XMM0,XMM1
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            pxor XMM3,XMM3
            cvtsd2ss XMM2,XMM0
            movsd XMM0,QWORD PTR [RDX+16]
            divsd XMM0,XMM1
            movss DWORD PTR [RSI+4],XMM2
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+8],XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a8c0:

            mov EAX,ECX
            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            add ECX,ECX
            pxor XMM5,XMM5
            lea RAX,QWORD PTR [RDX+8]
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            divsd XMM0,XMM1
            movss DWORD PTR [RSI+4],XMM4
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
.L_40a8f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a900:

            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RIP+.L_40b518]
            cvtss2sd XMM0,DWORD PTR [RDX]
            test AH,16
            divsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RSI],XMM0
            jne .L_40a968

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            divsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RSI+4],XMM2
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+8],XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a968:

            pxor XMM0,XMM0
            mov EAX,ECX
            pxor XMM4,XMM4
            add ECX,ECX
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            lea RAX,QWORD PTR [RDX+4]
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RSI+4],XMM4
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            divsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
.L_40a9a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a9b0:

            movss XMM0,DWORD PTR [RIP+.L_40b520]
            mov EAX,DWORD PTR [RDI+4]
            mulss XMM0,DWORD PTR [RSI]
            test AH,16
            movss DWORD PTR [RDX],XMM0
            jne .L_40aa20

            pxor XMM1,XMM1
            shr EAX,7
            movsd XMM3,QWORD PTR [RIP+.L_40b510]
            and EAX,7
            movsd XMM2,QWORD PTR [RIP+.L_40b508]
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            pxor XMM4,XMM4
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            pxor XMM5,XMM5
            subsd XMM1,XMM2
            cvtsd2ss XMM4,XMM1
            movss DWORD PTR [RDX+4],XMM4
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RDX+8],XMM5
            ret 
.L_40aa20:

            pxor XMM1,XMM1
            mov EAX,ECX
            movsd XMM3,QWORD PTR [RIP+.L_40b510]
            add ECX,ECX
            movsd XMM2,QWORD PTR [RIP+.L_40b508]
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            pxor XMM6,XMM6
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            pxor XMM7,XMM7
            subsd XMM1,XMM2
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RDX+RAX*4],XMM6
            lea RAX,QWORD PTR [RDX+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RDX+RCX*4],XMM7
            ret 
.L_40aa75:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40aa80:

            pxor XMM2,XMM2
            mov EAX,DWORD PTR [RDI+4]
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            cvtss2sd XMM2,DWORD PTR [RSI]
            test AH,16
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            movsd XMM4,QWORD PTR [RIP+.L_40b510]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM2,QWORD PTR [RIP+.L_40b4f8]
            mulsd XMM1,XMM4
            mulsd XMM0,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_40b508]
            subsd XMM1,XMM3
            subsd XMM0,XMM3
            movsd QWORD PTR [RDX],XMM2
            jne .L_40aae8

            shr EAX,7
            movsd QWORD PTR [RDX+8],XMM1
            and EAX,7
            movsd QWORD PTR [RDX+16],XMM0
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40aae8:

            mov EAX,ECX
            add ECX,ECX
            movsd QWORD PTR [RDX+RAX*8],XMM1
            lea RAX,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDX+RCX*8],XMM0
            ret 
.L_40aafb:

            nop
            nop
            nop
            nop
            nop
.L_40ab00:

            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDI+4]
            movsd XMM1,QWORD PTR [RIP+.L_40b518]
            cvtss2sd XMM0,DWORD PTR [RSI]
            test AH,16
            mulsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            jne .L_40ab68

            pxor XMM0,XMM0
            shr EAX,7
            pxor XMM2,XMM2
            and EAX,7
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RDX+RAX*4+12]
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RDX+4],XMM2
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RDX+8],XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ab68:

            pxor XMM0,XMM0
            mov EAX,ECX
            pxor XMM4,XMM4
            add ECX,ECX
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RDX+RAX*4],XMM4
            lea RAX,QWORD PTR [RDX+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RDX+RCX*4],XMM5
            ret 
.L_40aba5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40abb0:

            pxor XMM2,XMM2
            mov EAX,DWORD PTR [RDI+4]
            movsd XMM3,QWORD PTR [RIP+.L_40b518]
            pxor XMM1,XMM1
            cvtss2sd XMM2,DWORD PTR [RSI]
            pxor XMM0,XMM0
            test AH,16
            mulsd XMM2,XMM3
            cvtss2sd XMM1,DWORD PTR [RSI+4]
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            movsd QWORD PTR [RDX],XMM2
            jne .L_40ac00

            shr EAX,7
            movsd QWORD PTR [RDX+8],XMM1
            and EAX,7
            movsd QWORD PTR [RDX+16],XMM0
            lea RAX,QWORD PTR [RDX+RAX*8+24]
            ret 
.L_40ac00:

            mov EAX,ECX
            add ECX,ECX
            movsd QWORD PTR [RDX+RAX*8],XMM1
            lea RAX,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDX+RCX*8],XMM0
            ret 
.L_40ac13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac20:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RDI,RSI
            sub RSP,40
.L_40ac30:

            mov RBX,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            cvtss2sd XMM0,DWORD PTR [RDX]
            movsd QWORD PTR [RSP],XMM0
            jne .L_40aca0

            pxor XMM0,XMM0
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40be30

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*4+12]
.L_40ac89:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40acd0

            add RSP,40
.L_40ac9d:

            pop RBX
            pop RBP
            ret 
.L_40aca0:

            pxor XMM0,XMM0
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40be30

            lea RAX,QWORD PTR [RBX+4]
            jmp .L_40ac89
.L_40acd0:

            call __stack_chk_fail@PLT
.L_40acd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ace0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RSI
            sub RSP,40
.L_40acef:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            jne .L_40ad38

            mov RSI,RDX
            call .L_40be30

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40ad1e:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40ad69

            add RSP,40
.L_40ad32:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ad38:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40be30

            lea RAX,QWORD PTR [RBX+8]
            jmp .L_40ad1e
.L_40ad69:

            call __stack_chk_fail@PLT
.L_40ad6e:

            nop
            nop
.L_40ad70:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov RDI,RSI
            sub RSP,40
.L_40ad80:

            mov RBX,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            cvtss2sd XMM0,DWORD PTR [RDX]
            movsd QWORD PTR [RSP],XMM0
            jne .L_40adf0

            pxor XMM0,XMM0
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40bbe0

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*4+12]
.L_40add9:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40ae20

            add RSP,40
.L_40aded:

            pop RBX
            pop RBP
            ret 
.L_40adf0:

            pxor XMM0,XMM0
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            movsd QWORD PTR [RSP+8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDX+RCX*4]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40bbe0

            lea RAX,QWORD PTR [RBX+4]
            jmp .L_40add9
.L_40ae20:

            call __stack_chk_fail@PLT
.L_40ae25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae30:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RSI
            sub RSP,40
.L_40ae3f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test DWORD PTR [RBP],4096
            jne .L_40ae88

            mov RSI,RDX
            call .L_40bbe0

            mov EAX,DWORD PTR [RBP]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40ae6e:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40aeb9

            add RSP,40
.L_40ae82:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ae88:

            movsd XMM0,QWORD PTR [RDX]
            mov EAX,ECX
            add ECX,ECX
            mov RSI,RSP
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RDX+RCX*8]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40bbe0

            lea RAX,QWORD PTR [RBX+8]
            jmp .L_40ae6e
.L_40aeb9:

            call __stack_chk_fail@PLT
.L_40aebe:

            nop
            nop
.L_40aec0:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40aecb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40af40

            mov R12,RDI
            mov RDI,RSP
            call .L_40bfe0

            mov EAX,DWORD PTR [R12+4]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            shr EAX,7
            cvtsd2ss XMM0,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM0
            and EAX,7
            cvtsd2ss XMM1,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+4],XMM1
            cvtsd2ss XMM2,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RBX+RAX*4+12]
            movss DWORD PTR [RBX+8],XMM2
.L_40af27:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40af7f

            add RSP,32
.L_40af3b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40af40:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40bfe0

            pxor XMM3,XMM3
            mov EAX,EBP
            pxor XMM4,XMM4
            add EBP,EBP
            pxor XMM5,XMM5
            cvtsd2ss XMM3,QWORD PTR [RSP]
            movss DWORD PTR [RBX],XMM3
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movss DWORD PTR [RBX+RAX*4],XMM4
            lea RAX,QWORD PTR [RBX+4]
            cvtsd2ss XMM5,QWORD PTR [RSP+16]
            movss DWORD PTR [RBX+RBP*4],XMM5
            jmp .L_40af27
.L_40af7f:

            call __stack_chk_fail@PLT
.L_40af84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40af90:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40af9b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40afe8

            mov R12,RDI
            mov RDI,RDX
            call .L_40bfe0

            mov EAX,DWORD PTR [R12+4]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40afcc:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40b01b

            add RSP,32
.L_40afe0:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40afe8:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40bfe0

            movsd XMM0,QWORD PTR [RSP]
            mov EAX,EBP
            add EBP,EBP
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+RAX*8],XMM0
            lea RAX,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+RBP*8],XMM0
            jmp .L_40afcc
.L_40b01b:

            call __stack_chk_fail@PLT
.L_40b020:

            push R12
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,32
.L_40b02b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+5],16
            jne .L_40b078

            mov R12,RDI
            mov RDI,RDX
            call .L_40b9f0

            mov EAX,DWORD PTR [R12+4]
            shr EAX,7
            and EAX,7
            lea RAX,QWORD PTR [RBX+RAX*8+24]
.L_40b05c:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40b0ab

            add RSP,32
.L_40b070:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b078:

            mov RDI,RSP
            mov EBP,ECX
            call .L_40b9f0

            movsd XMM0,QWORD PTR [RSP]
            mov EAX,EBP
            add EBP,EBP
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+RAX*8],XMM0
            lea RAX,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+RBP*8],XMM0
            jmp .L_40b05c
.L_40b0ab:

            call __stack_chk_fail@PLT
.L_40b0b0:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_40b0b8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40b1bb

            test RSI,RSI
            mov R12,RDI
            je .L_40b180

            mov RAX,QWORD PTR [RSI+72]
            mov QWORD PTR [RSP],0
            test RAX,RAX
            je .L_40b19c

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_40b14b

            xor EBP,EBP
            jmp .L_40b10c
          .byte 0x66
          .byte 0x90
.L_40b100:

            mov RBX,QWORD PTR [RBX+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_40b14b
.L_40b10c:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,16
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_40b162

            test RBP,RBP
            mov QWORD PTR [RAX+8],0
            je .L_40b134

            mov QWORD PTR [RBP+8],RAX
.L_40b134:

            cmp QWORD PTR [RSP],0
            jne .L_40b100

            mov RBX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_40b10c
.L_40b14b:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+72],RAX
.L_40b162:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40b1da

            add RSP,16
.L_40b176:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b180:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641c90]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+72],RAX
            jmp .L_40b162
.L_40b19c:

            lea RCX,QWORD PTR [RIP+.L_40b490]
            lea RSI,QWORD PTR [RIP+.L_40b44c]
            lea RDI,QWORD PTR [RIP+.L_40b46b]
            mov EDX,3223
            call __assert_fail@PLT
.L_40b1bb:

            lea RCX,QWORD PTR [RIP+.L_40b4b0]
            lea RSI,QWORD PTR [RIP+.L_40b44c]
            lea RDI,QWORD PTR [RIP+.L_40b456]
            mov EDX,3253
            call __assert_fail@PLT
.L_40b1da:

            call __stack_chk_fail@PLT
.L_40b1df:

            nop
.L_40b1e0:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_40b1e7:

            mov ESI,7
            mov RBX,RDI
            call .L_406d40

            test RBP,RBP
            mov R12,RAX
            je .L_40b230

            mov ESI,16
            mov RDI,RBX
            call .L_406970

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_40b22b

            mov RAX,QWORD PTR [RBP+24]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RDX+8],RAX
            mov QWORD PTR [R12],RDX
            mov EAX,1
.L_40b22b:

            pop RBX
.L_40b22c:

            pop RBP
            pop R12
            ret 
.L_40b230:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40b241:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b250:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,7
            mov R12D,ECX
            sub RSP,8
            call .L_406d40

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            jne .L_40b289

            jmp .L_40b2a8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b280:

            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            je .L_40b2a8
.L_40b289:

            mov EDX,R12D
            mov ESI,R13D
            mov EDI,EBP
            call QWORD PTR [RBX]

            test RAX,RAX
            je .L_40b280

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b2a8:

            test R13D,R13D
            je .L_40b2f0

            and EBP,4292870143
            test R12D,R12D
            je .L_40b320

            cmp R12D,1
            jne .L_40b2dd

            lea RDX,QWORD PTR [RIP+.L_63e260]
            lea RCX,QWORD PTR [RDX+112]
.L_40b2c9:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            je .L_40b344

            add RDX,16
            cmp RCX,RDX
            jne .L_40b2c9
.L_40b2dd:

            xor EAX,EAX
.L_40b2df:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b2f0:

            test R12D,R12D
            je .L_40b358

            cmp R12D,1
            jne .L_40b2dd

            lea RDX,QWORD PTR [RIP+.L_63e660]
            lea RCX,QWORD PTR [RDX+112]
.L_40b306:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            je .L_40b344

            add RDX,16
            cmp RCX,RDX
            jne .L_40b306

            xor EAX,EAX
            jmp .L_40b2df
          .byte 0x66
          .byte 0x90
.L_40b320:

            lea RDX,QWORD PTR [RIP+.L_63e2e0]
            lea RCX,QWORD PTR [RDX+880]
            jmp .L_40b339
.L_40b330:

            add RDX,16
            cmp RDX,RCX
            je .L_40b2dd
.L_40b339:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            jne .L_40b330
.L_40b344:

            mov RAX,QWORD PTR [RDX+8]
            add RSP,8
.L_40b34c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b358:

            lea RDX,QWORD PTR [RIP+.L_63e6e0]
            lea RCX,QWORD PTR [RDX+688]
            jmp .L_40b37d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b370:

            add RDX,16
            cmp RCX,RDX
            je .L_40b2dd
.L_40b37d:

            mov EAX,DWORD PTR [RDX+4]
            not EAX
            and EAX,EBP
            cmp EAX,DWORD PTR [RDX]
            jne .L_40b370

            jmp .L_40b344
.L_40b38a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40b390:

            mov EAX,EDI
            shr EAX,22
            and EAX,1
            ret 
.L_40b399:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b3a0:

            and EDI,7
            xor EAX,EAX
            cmp EDI,1
            sete AL
            ret 
.L_40b3ac:

            nop
            nop
            nop
            nop
.L_40b3b0:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ESI
            sub RSP,8
            call .L_403540

            mov EBP,EAX
            mov EDI,EAX
            call .L_40d450

            mov EDI,EBP
            mov EBX,EAX
            call .L_40d760

            xor EDX,EDX
            test R13D,R13D
            setne DL
            shl EAX,3
            add RSP,8
            shl EDX,22
            shl EBX,16
            mov ESI,EDX
            or ESI,R12D
            or EAX,ESI
            or EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40b3fc:

            nop
            nop
            nop
            nop
.L_40b400:

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ESI
            sub RSP,8
            call .L_403520

            mov EBP,EAX
            mov EDI,EAX
            call .L_40d450

            mov EDI,EBP
            mov EBX,EAX
            call .L_40d760

            xor EDX,EDX
            test R13D,R13D
            setne DL
            shl EAX,3
            add RSP,8
            shl EDX,22
            shl EBX,16
            mov ESI,EDX
            or ESI,R12D
            or EAX,ESI
            or EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40b44c:
          .string "cmspack.c"
.L_40b456:
          .string "(ctx != ((void *)0))"
.L_40b46b:
          .string "(head != ((void *)0))"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b490:
          .string "DupFormatterFactoryList"
          .zero 8
.L_40b4b0:
          .string "_cmsAllocFormattersPluginChunk"
          .byte 0x90
.L_40b4d0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 45717
            out DX,EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne OFFSET .L_40b51f
.L_40b4e0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sar BH,223
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            cmp BYTE PTR [RDX-51],AL
            int3 

            int3 

            int3 

            int3 
          .byte 0x7a
          .byte 0x84
          .byte 0x40
.L_40b4f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_40b500:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40b508:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_40b510:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_40b518:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
.L_40b51f:
          .byte 0x3f
.L_40b520:
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x42
.L_40b524:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_40b528:
          .byte 0x66
          .byte 0xd6
          .byte 0x23
          .byte 0x44
.L_40b52c:

            add BH,BH
          .byte 0x7f
          .byte 0x47
.L_40b530:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RBX],AL
            add BYTE PTR [RDI+67],BH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b540:

            pxor XMM3,XMM3
            mov EDX,0
            ucomisd XMM0,XMM3
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40b570

            ucomisd XMM1,XMM3
            pxor XMM2,XMM2
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_40b570

            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_40b570:

            sub RSP,24
.L_40b574:

            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RIP+.L_40dad8]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40dae0]
            ucomisd XMM2,XMM0
            jbe .L_40b5b4

            nop
.L_40b5a0:

            subsd XMM2,XMM0
            ucomisd XMM2,XMM0
            ja .L_40b5a0

            ucomisd XMM3,XMM2
            jbe .L_40b5ba
.L_40b5b0:

            addsd XMM2,XMM0
.L_40b5b4:

            ucomisd XMM3,XMM2
            ja .L_40b5b0
.L_40b5ba:

            movapd XMM0,XMM2
            add RSP,24
.L_40b5c2:

            ret 
.L_40b5c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b5d0:

            sub RSP,8
.L_40b5d4:

            ucomisd XMM0,QWORD PTR [RIP+.L_40dae8]
            ja .L_40b620

            divsd XMM0,QWORD PTR [RIP+.L_40db08]
            mulsd XMM0,QWORD PTR [RIP+.L_40db00]
.L_40b5ee:

            addsd XMM0,QWORD PTR [RIP+.L_40db10]
            call log@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_40db18]
            mulsd XMM0,QWORD PTR [RIP+.L_40db20]
            subsd XMM0,QWORD PTR [RIP+.L_40db28]
            add RSP,8
.L_40b617:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b620:

            addsd XMM0,QWORD PTR [RIP+.L_40daf0]
            divsd XMM0,QWORD PTR [RIP+.L_40daf8]
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_40db00]
            jmp .L_40b5ee
.L_40b646:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b650:

            movsd XMM1,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RSI+8]
            movapd XMM3,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_40db30]
            addsd XMM3,XMM2
            addsd XMM3,QWORD PTR [RSI+16]
            movsd QWORD PTR [RDI+16],XMM2
            divsd XMM0,XMM3
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            movsd QWORD PTR [RDI],XMM1
            movsd QWORD PTR [RDI+8],XMM0
            ret 
.L_40b689:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b690:

            movsd XMM3,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RSI+8]
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RSI+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,XMM1
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40db30]
            subsd XMM0,XMM3
            subsd XMM0,XMM2
            divsd XMM0,XMM2
            mulsd XMM0,XMM1
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40b6d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b6e0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,16
.L_40b6f1:

            test RDI,RDI
            je .L_40b840
.L_40b6fa:

            movsd XMM0,QWORD PTR [R12]
            movsd XMM4,QWORD PTR [RIP+.L_40db38]
            divsd XMM0,QWORD PTR [RBX]
            ucomisd XMM4,XMM0
            jb .L_40b818

            mulsd XMM0,QWORD PTR [RIP+.L_40db40]
            movsd XMM3,QWORD PTR [RIP+.L_40db48]
            addsd XMM3,XMM0
.L_40b72a:

            movsd XMM0,QWORD PTR [R12+8]
            divsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM4,XMM0
            jb .L_40b7e8

            mulsd XMM0,QWORD PTR [RIP+.L_40db40]
            movsd XMM2,QWORD PTR [RIP+.L_40db48]
            addsd XMM2,XMM0
.L_40b754:

            movsd XMM0,QWORD PTR [R12+16]
            divsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM4,XMM0
            jb .L_40b7c0

            mulsd XMM0,QWORD PTR [RIP+.L_40db40]
            addsd XMM0,QWORD PTR [RIP+.L_40db48]
.L_40b776:

            movsd XMM1,QWORD PTR [RIP+.L_40daf8]
            subsd XMM3,XMM2
            mulsd XMM1,XMM2
            subsd XMM2,XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_40db58]
            subsd XMM1,QWORD PTR [RIP+.L_40daf0]
            mulsd XMM2,QWORD PTR [RIP+.L_40db60]
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RBP],XMM1
            movsd QWORD PTR [RBP+16],XMM2
            add RSP,16
.L_40b7b5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b7c0:

            movsd XMM1,QWORD PTR [RIP+.L_40db50]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_40b776
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b7e8:

            movsd XMM1,QWORD PTR [RIP+.L_40db50]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_40b754
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b818:

            movsd XMM1,QWORD PTR [RIP+.L_40db50]
            movsd QWORD PTR [RSP],XMM4
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM3,XMM0
            jmp .L_40b72a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b840:

            call .L_40de30

            mov RBX,RAX
            jmp .L_40b6fa
.L_40b84d:

            nop
            nop
            nop
.L_40b850:

            sub RSP,24
.L_40b854:

            test RDI,RDI
            je .L_40b968
.L_40b85d:

            movsd XMM0,QWORD PTR [RIP+.L_40daf0]
            movsd XMM1,QWORD PTR [RIP+.L_40db68]
            addsd XMM0,QWORD PTR [RDX]
            movsd XMM2,QWORD PTR [RIP+.L_40db70]
            mulsd XMM1,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RDX+16]
            movsd XMM4,QWORD PTR [RIP+.L_40db78]
            divsd XMM0,QWORD PTR [RIP+.L_40daf8]
            addsd XMM1,XMM0
            movapd XMM5,XMM0
            subsd XMM5,XMM2
            ucomisd XMM4,XMM1
            movapd XMM2,XMM5
            jb .L_40b908

            subsd XMM1,QWORD PTR [RIP+.L_40db48]
            ucomisd XMM4,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_40db80]
            mulsd XMM1,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM1
            jb .L_40b922
.L_40b8c7:

            subsd XMM0,QWORD PTR [RIP+.L_40db48]
            ucomisd XMM4,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_40db80]
            mulsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+8],XMM0
            jae .L_40b93e
.L_40b8e7:

            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSI+16],XMM0
            add RSP,24
.L_40b901:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b908:

            movapd XMM3,XMM1
            ucomisd XMM4,XMM0
            mulsd XMM3,XMM1
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM1
            jae .L_40b8c7
.L_40b922:

            movapd XMM1,XMM0
            ucomisd XMM4,XMM2
            mulsd XMM1,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+8],XMM0
            jb .L_40b8e7
.L_40b93e:

            subsd XMM2,QWORD PTR [RIP+.L_40db48]
            movsd XMM0,QWORD PTR [RIP+.L_40db80]
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSI+16],XMM0
            add RSP,24
.L_40b960:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b968:

            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP],RSI
            call .L_40de30

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RAX
            mov RSI,QWORD PTR [RSP]
            jmp .L_40b85d
.L_40b987:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b990:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_40db90]
            movsd XMM2,QWORD PTR [RIP+.L_40db98]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+2]
            cvtsi2sd XMM1,EAX
            movzx EAX,WORD PTR [RSI+4]
            divsd XMM0,QWORD PTR [RIP+.L_40db88]
            mulsd XMM1,XMM3
            subsd XMM1,XMM2
            movsd QWORD PTR [RDI],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40b9ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9f0:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_40dba8]
            movsd XMM1,QWORD PTR [RIP+.L_40db98]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+2]
            divsd XMM0,QWORD PTR [RIP+.L_40dba0]
            movsd QWORD PTR [RDI],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RSI+4]
            divsd XMM0,XMM2
            subsd XMM0,XMM1
            movsd QWORD PTR [RDI+8],XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM2
            subsd XMM0,XMM1
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_40ba4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba50:

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSI]
            ucomisd XMM3,XMM0
            ja .L_40bb80

            ucomisd XMM0,QWORD PTR [RIP+.L_40dbc8]
            movsd XMM2,QWORD PTR [RIP+.L_40dbb0]
            jbe .L_40bb90
.L_40ba78:

            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM4,QWORD PTR [RIP+.L_40dbd0]
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            ucomisd XMM4,XMM0
            ja .L_40baa9

            ucomisd XMM0,QWORD PTR [RIP+.L_40dbd8]
            jbe .L_40bba9

            movsd XMM1,QWORD PTR [RIP+.L_40dbc0]
.L_40baa9:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RIP+.L_40dbb8]
            ucomisd XMM4,XMM5
            ja .L_40bad2

            ucomisd XMM5,QWORD PTR [RIP+.L_40dbd8]
            jbe .L_40bbc2

            movsd XMM0,QWORD PTR [RIP+.L_40dbc0]
.L_40bad2:

            xor EAX,EAX
            ucomisd XMM3,XMM2
            jae .L_40bae9

            ucomisd XMM2,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bb60
.L_40bae9:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM3,XMM1
            jae .L_40bb03

            ucomisd XMM1,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bb40
.L_40bb03:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jae .L_40bb39

            ucomisd XMM0,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jae .L_40bb39

            subsd XMM0,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM0,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_40bb39:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0x66
          .byte 0x90
.L_40bb40:

            subsd XMM1,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM1,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_40bb03
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bb60:

            subsd XMM2,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM2,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40bae9
.L_40bb80:

            movsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            jmp .L_40ba78
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bb90:

            movsd XMM2,QWORD PTR [RIP+.L_40db88]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            jmp .L_40ba78
.L_40bba9:

            addsd XMM0,QWORD PTR [RIP+.L_40db98]
            mulsd XMM0,QWORD PTR [RIP+.L_40dbe0]
            addsd XMM1,XMM0
            jmp .L_40baa9
.L_40bbc2:

            addsd XMM5,QWORD PTR [RIP+.L_40db98]
            movsd XMM4,QWORD PTR [RIP+.L_40dbe0]
            mulsd XMM4,XMM5
            addsd XMM0,XMM4
            jmp .L_40bad2
.L_40bbdf:

            nop
.L_40bbe0:

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSI]
            ucomisd XMM3,XMM0
            ja .L_40bd10

            ucomisd XMM0,QWORD PTR [RIP+.L_40db00]
            movsd XMM2,QWORD PTR [RIP+.L_40dbc0]
            jbe .L_40bd20
.L_40bc08:

            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM4,QWORD PTR [RIP+.L_40dbd0]
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            ucomisd XMM4,XMM0
            ja .L_40bc39

            ucomisd XMM0,QWORD PTR [RIP+.L_40dc00]
            jbe .L_40bd39

            movsd XMM1,QWORD PTR [RIP+.L_40dbc0]
.L_40bc39:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RIP+.L_40dbb8]
            ucomisd XMM4,XMM5
            ja .L_40bc62

            ucomisd XMM5,QWORD PTR [RIP+.L_40dc00]
            jbe .L_40bd52

            movsd XMM0,QWORD PTR [RIP+.L_40dbc0]
.L_40bc62:

            xor EAX,EAX
            ucomisd XMM3,XMM2
            jae .L_40bc79

            ucomisd XMM2,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bcf0
.L_40bc79:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM3,XMM1
            jae .L_40bc93

            ucomisd XMM1,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bcd0
.L_40bc93:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jae .L_40bcc9

            ucomisd XMM0,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jae .L_40bcc9

            subsd XMM0,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM0,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_40bcc9:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0x66
          .byte 0x90
.L_40bcd0:

            subsd XMM1,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM1,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_40bc93
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bcf0:

            subsd XMM2,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM2,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40bc79
.L_40bd10:

            movsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            jmp .L_40bc08
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bd20:

            movsd XMM2,QWORD PTR [RIP+.L_40dba0]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            jmp .L_40bc08
.L_40bd39:

            addsd XMM0,QWORD PTR [RIP+.L_40db98]
            mulsd XMM0,QWORD PTR [RIP+.L_40dba8]
            addsd XMM1,XMM0
            jmp .L_40bc39
.L_40bd52:

            addsd XMM5,QWORD PTR [RIP+.L_40db98]
            movsd XMM4,QWORD PTR [RIP+.L_40dba8]
            mulsd XMM4,XMM5
            addsd XMM0,XMM4
            jmp .L_40bc62
.L_40bd6f:

            nop
.L_40bd70:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
.L_40bd7c:

            movsd XMM0,QWORD PTR [RSI]
            movsd XMM1,QWORD PTR [RSI+16]
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            call pow@PLT

            movsd XMM1,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            call .L_40b540

            movsd QWORD PTR [RBP+16],XMM0
            add RSP,8
.L_40bdc4:

            pop RBX
            pop RBP
            ret 
.L_40bdc7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bdd0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,24
.L_40bddc:

            movsd XMM0,QWORD PTR [RIP+.L_40dc08]
            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            mulsd XMM0,QWORD PTR [RBP+16]
            divsd XMM0,QWORD PTR [RIP+.L_40dc10]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+8],XMM1
            movsd QWORD PTR [RBX+16],XMM0
            add RSP,24
.L_40be29:

            pop RBX
            pop RBP
            ret 
.L_40be2c:

            nop
            nop
            nop
            nop
.L_40be30:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RSI]
            ucomisd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSI+16]
            jae .L_40bf50

            movsd XMM5,QWORD PTR [RIP+.L_40dc18]
            movsd XMM3,QWORD PTR [RIP+.L_40dbc0]
            ucomisd XMM2,XMM5
            jbe .L_40bfb0
.L_40be66:

            ucomisd XMM1,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_40dbc0]
            jbe .L_40bf80
.L_40be78:

            ucomisd XMM4,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_40dbc0]
            ja .L_40be98

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            jbe .L_40bf98
.L_40be98:

            xor EAX,EAX
            ucomisd XMM0,XMM3
            jae .L_40beaf

            ucomisd XMM3,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bf28
.L_40beaf:

            mov WORD PTR [RDI],AX
            xor EAX,EAX
            ucomisd XMM0,XMM2
            jae .L_40bec9

            ucomisd XMM2,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jb .L_40bf08
.L_40bec9:

            mov WORD PTR [RDI+2],AX
            xor EAX,EAX
            ucomisd XMM0,XMM1
            jae .L_40beff

            ucomisd XMM1,QWORD PTR [RIP+.L_40dbe8]
            mov EAX,4294967295
            jae .L_40beff

            subsd XMM1,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM1,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
.L_40beff:

            mov WORD PTR [RDI+4],AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bf08:

            subsd XMM2,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM2,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM2
            sar EAX,16
            add AX,32767
            jmp .L_40bec9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bf28:

            subsd XMM3,QWORD PTR [RIP+.L_40dbf0]
            addsd XMM3,QWORD PTR [RIP+.L_40dbf8]
            movd EAX,XMM3
            sar EAX,16
            add AX,32767
            jmp .L_40beaf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bf50:

            movsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            movapd XMM3,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_40dc18]
.L_40bf6c:

            mulsd XMM1,QWORD PTR [RIP+.L_40dc20]
            addsd XMM2,XMM1
            jmp .L_40be78
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40bf80:

            ucomisd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            ja .L_40be78

            jmp .L_40bf6c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bf98:

            mulsd XMM4,QWORD PTR [RIP+.L_40dc20]
            addsd XMM1,XMM4
            jmp .L_40be98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfb0:

            ucomisd XMM0,XMM2
            jbe .L_40bfc3

            movsd XMM3,QWORD PTR [RIP+.L_40dbb8]
            jmp .L_40be66
.L_40bfc3:

            movsd XMM3,QWORD PTR [RIP+.L_40dc20]
            mulsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            addsd XMM3,XMM2
            jmp .L_40be66
.L_40bfe0:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
            movzx EDI,WORD PTR [RSI]
            add EDI,EDI
            call .L_406280

            movzx EDI,WORD PTR [RBP+2]
            movsd QWORD PTR [RBX],XMM0
            add EDI,EDI
            call .L_406280

            movzx EDI,WORD PTR [RBP+4]
            movsd QWORD PTR [RBX+8],XMM0
            add EDI,EDI
            call .L_406280

            movsd QWORD PTR [RBX+16],XMM0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_40c021:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c030:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RDI+8]
            subsd XMM1,QWORD PTR [RSI]
            movsd XMM2,QWORD PTR [RDI+16]
            subsd XMM0,QWORD PTR [RSI+8]
            subsd XMM2,QWORD PTR [RSI+16]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            mulsd XMM2,XMM2
            addsd XMM1,XMM0
            addsd XMM1,XMM2
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            jmp pow@PLT
.L_40c071:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c080:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,120
.L_40c08c:

            movsd XMM3,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            subsd XMM3,QWORD PTR [RSI]
            mov RSI,RBX
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40bd70

            lea RDI,QWORD PTR [RSP+80]
            mov RSI,RBP
            call .L_40bd70

            movsd XMM2,QWORD PTR [RSP+56]
            mov RSI,RBP
            mov RDI,RBX
            subsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_40c030

            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM0
            mulsd XMM3,XMM3
            movsd XMM2,QWORD PTR [RSP+8]
            pxor XMM5,XMM5
            mulsd XMM2,XMM2
            subsd XMM0,XMM3
            pxor XMM4,XMM4
            subsd XMM0,XMM2
            ucomisd XMM5,XMM0
            ja .L_40c144

            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
.L_40c144:

            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+88]
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40c1c3
.L_40c15a:

            movsd XMM0,QWORD PTR [RIP+.L_40dc28]
            movsd XMM6,QWORD PTR [RIP+.L_40db30]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_40dc30]
            mulsd XMM4,XMM4
            addsd XMM0,XMM6
            addsd XMM1,XMM6
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            divsd XMM2,XMM0
            divsd XMM4,XMM1
            movapd XMM0,XMM2
            addsd XMM0,XMM3
            addsd XMM0,XMM4
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40c209
.L_40c1a8:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM1
            jne .L_40c21c

            add RSP,120
.L_40c1c0:

            pop RBX
            pop RBP
            ret 
.L_40c1c3:

            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_40c15a
.L_40c209:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40c1a8
.L_40c21c:

            call __stack_chk_fail@PLT
.L_40c221:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c230:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,216
.L_40c23f:

            movsd XMM0,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_40b5d0

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBP]
            call .L_40b5d0

            movapd XMM6,XMM0
            lea RDI,QWORD PTR [RSP+144]
            mov RSI,RBX
            subsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM6
            call .L_40bd70

            lea RDI,QWORD PTR [RSP+176]
            mov RSI,RBP
            call .L_40bd70

            movsd XMM3,QWORD PTR [RSP+184]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP+152]
            mov RDI,RBX
            movapd XMM2,XMM3
            addsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            addsd XMM0,QWORD PTR [RSP+192]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40c030

            movsd XMM1,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX]
            mulsd XMM0,XMM0
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM1
            movapd XMM4,XMM1
            addsd XMM4,XMM2
            ucomisd XMM0,XMM4
            ja .L_40c700

            pxor XMM8,XMM8
            movsd QWORD PTR [RSP+136],XMM8
.L_40c33e:

            movsd XMM1,QWORD PTR [RIP+.L_40dc40]
            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_40dc38]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_40db30]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dc50]
            addsd XMM0,QWORD PTR [RIP+.L_40dc48]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM9,XMM0
            ja .L_40c78a
.L_40c3a0:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+128],XMM8
            subsd XMM0,QWORD PTR [RIP+.L_40dc58]
            movsd QWORD PTR [RSP+112],XMM2
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+120],XMM9
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM7,XMM0
            addsd XMM7,XMM0
            movapd XMM6,XMM7
            movsd QWORD PTR [RSP+96],XMM7
            subsd XMM6,QWORD PTR [RIP+.L_40dc60]
            movapd XMM0,XMM6
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM0
            mulsd XMM6,QWORD PTR [RIP+.L_40dc68]
            movapd XMM7,XMM6
            movsd QWORD PTR [RSP+88],XMM6
            subsd XMM7,QWORD PTR [RIP+.L_40dc70]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+48],XMM0
            mulsd XMM5,QWORD PTR [RIP+.L_40dc78]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+80],XMM5
            addsd XMM0,QWORD PTR [RIP+.L_40dc80]
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM4,QWORD PTR [RIP+.L_40dc88]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+72],XMM4
            subsd XMM7,QWORD PTR [RIP+.L_40dc90]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM12,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RIP+.L_40dc98]
            mulsd XMM12,QWORD PTR [RIP+.L_40dca0]
            movsd XMM11,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+40]
            mulsd XMM11,QWORD PTR [RIP+.L_40dca8]
            mulsd XMM10,QWORD PTR [RIP+.L_40dcb0]
            mulsd XMM0,QWORD PTR [RIP+.L_40dcb8]
            subsd XMM1,XMM12
            addsd XMM1,XMM11
            addsd XMM1,XMM10
            subsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_40dcc0]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM9,QWORD PTR [RSP+120]
            subsd XMM0,QWORD PTR [RIP+.L_40dcc8]
            mulsd XMM1,XMM9
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            addsd XMM1,QWORD PTR [RIP+.L_40db30]
            subsd XMM1,XMM9
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+40],XMM1
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+64],XMM0
            subsd XMM7,QWORD PTR [RIP+.L_40dcd0]
            movapd XMM0,XMM7
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40dc58]
            addsd XMM0,XMM6
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+48],XMM0
            addsd XMM5,QWORD PTR [RIP+.L_40dcd8]
            movapd XMM0,XMM5
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM4,QWORD PTR [RIP+.L_40dce0]
            movapd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RIP+.L_40dce8]
            mulsd XMM7,QWORD PTR [RIP+.L_40dcf0]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM6,QWORD PTR [RIP+.L_40dcf8]
            mulsd XMM5,QWORD PTR [RIP+.L_40dd00]
            mulsd XMM0,QWORD PTR [RIP+.L_40dd08]
            subsd XMM1,XMM7
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+112]
            movsd XMM8,QWORD PTR [RSP+128]
            mulsd XMM2,XMM3
            subsd XMM1,XMM6
            addsd XMM1,XMM5
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40dd10]
            addsd XMM0,XMM3
            divsd XMM3,XMM0
            ucomisd XMM8,XMM3
            sqrtsd XMM4,XMM3
            ja .L_40c756
.L_40c67e:

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+136]
            divsd XMM2,QWORD PTR [RSP+24]
            divsd XMM3,QWORD PTR [RSP+40]
            movapd XMM5,XMM2
            movsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM5,XMM2
            mulsd XMM0,XMM0
            mulsd XMM1,XMM4
            addsd XMM0,XMM5
            movapd XMM5,XMM3
            mulsd XMM1,XMM2
            mulsd XMM5,XMM3
            mulsd XMM1,XMM3
            addsd XMM0,XMM5
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40c743
.L_40c6d6:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_40c7c8

            add RSP,216
.L_40c6f8:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c700:

            subsd XMM0,XMM1
            pxor XMM8,XMM8
            subsd XMM0,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+136],XMM4
            jbe .L_40c33e

            movsd QWORD PTR [RSP+40],XMM8
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+40]
            jmp .L_40c33e
.L_40c743:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_40c6d6
.L_40c756:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40c67e
.L_40c78a:

            movsd QWORD PTR [RSP+64],XMM8
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            jmp .L_40c3a0
.L_40c7c8:

            call __stack_chk_fail@PLT
.L_40c7cd:

            nop
            nop
            nop
.L_40c7d0:

            push RBP
            pxor XMM4,XMM4
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,168
.L_40c7e3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            ucomisd XMM4,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+32],XMM1
            jp .L_40c81a

            jne .L_40c81a

            ucomisd XMM4,QWORD PTR [RSI]
            jp .L_40c81a

            pxor XMM1,XMM1
            je .L_40ca07
.L_40c81a:

            lea RDI,QWORD PTR [RSP+96]
            mov RSI,RBX
            movsd QWORD PTR [RSP+40],XMM4
            call .L_40bd70

            lea RDI,QWORD PTR [RSP+128]
            mov RSI,RBP
            call .L_40bd70

            movsd XMM0,QWORD PTR [RBP]
            mov RSI,RBP
            mov RDI,RBX
            subsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+136]
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+16],XMM1
            call .L_40c030

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            movapd XMM2,XMM6
            mulsd XMM0,XMM0
            movapd XMM1,XMM7
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM2,XMM6
            mulsd XMM1,XMM7
            movapd XMM3,XMM2
            addsd XMM3,XMM1
            ucomisd XMM0,XMM3
            ja .L_40ca30

            movsd QWORD PTR [RSP+40],XMM4
.L_40c8ae:

            movsd XMM0,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+48],XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_40dd20]
            jbe .L_40c8d6

            movsd XMM1,QWORD PTR [RIP+.L_40dd28]
            ucomisd XMM1,XMM0
            ja .L_40ca68
.L_40c8d6:

            addsd XMM0,QWORD PTR [RIP+.L_40dd48]
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_40dd50]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_40de10]
            addsd XMM2,QWORD PTR [RIP+.L_40dd58]
.L_40c90d:

            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RIP+.L_40dd68]
            movsd XMM5,QWORD PTR [RIP+.L_40dd60]
            mulsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_40db30]
            mulsd XMM5,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_40daf0]
            addsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_40dd18]
            divsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM7,XMM0
            addsd XMM5,QWORD PTR [RIP+.L_40dd70]
            ja .L_40c979

            movsd XMM3,QWORD PTR [RIP+.L_40dd78]
            mulsd XMM3,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_40dd80]
            addsd XMM0,XMM6
            divsd XMM3,XMM0
.L_40c979:

            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dd88]
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM7,XMM0
            ja .L_40caba
.L_40c9a7:

            mulsd XMM2,XMM7
            mulsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM2,XMM6
            mulsd XMM0,XMM5
            divsd XMM1,XMM3
            subsd XMM2,XMM7
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM5
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM1,XMM1
            divsd XMM0,XMM2
            mulsd XMM3,XMM3
            mulsd XMM0,XMM0
            addsd XMM1,XMM3
            addsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40caa4
.L_40ca07:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM1
            jne .L_40cb0c

            add RSP,168
.L_40ca29:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ca30:

            subsd XMM0,XMM2
            subsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+40],XMM6
            jbe .L_40c8ae

            movsd QWORD PTR [RSP+48],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            jmp .L_40c8ae
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ca68:

            addsd XMM0,QWORD PTR [RIP+.L_40dd30]
            divsd XMM0,QWORD PTR [RIP+.L_40dad8]
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_40dd38]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_40de10]
            addsd XMM2,QWORD PTR [RIP+.L_40dd40]
            jmp .L_40c90d
.L_40caa4:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40ca07
.L_40caba:

            movsd QWORD PTR [RSP+88],XMM6
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            jmp .L_40c9a7
.L_40cb0c:

            call __stack_chk_fail@PLT
.L_40cb11:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cb20:

            sub RSP,136
.L_40cb27:

            pxor XMM7,XMM7
            movsd XMM6,QWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            movsd XMM5,QWORD PTR [RDI+16]
            movsd QWORD PTR [RSP+80],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM6
            movapd XMM6,XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+96],XMM2
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+88],XMM1
            addsd XMM0,XMM6
            ucomisd XMM7,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40d211
.L_40cb73:

            movsd XMM1,QWORD PTR [RSI+8]
            movsd XMM7,QWORD PTR [RSI]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+40],XMM7
            movsd XMM7,QWORD PTR [RSI+16]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM7,XMM7
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM7
            pxor XMM7,XMM7
            ucomisd XMM7,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40d1cb
.L_40cbbb:

            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dd90]
            movsd QWORD PTR [RSP+104],XMM6
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+56],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_40dd90]
            movapd XMM0,XMM2
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_40dd98]
            movsd XMM4,QWORD PTR [RSP+48]
            pxor XMM6,XMM6
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            divsd XMM4,XMM0
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            movsd XMM6,QWORD PTR [RSP+104]
            ja .L_40d18d
.L_40cc43:

            movsd XMM7,QWORD PTR [RIP+.L_40db30]
            movsd XMM2,QWORD PTR [RIP+.L_40db30]
            subsd XMM7,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dbb8]
            mulsd XMM1,XMM7
            addsd XMM2,XMM1
            mulsd XMM3,XMM2
            movapd XMM0,XMM3
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            addsd XMM0,XMM6
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            ja .L_40d15f
.L_40cc93:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM2
            call .L_40b540

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+56]
            movapd XMM5,XMM0
            pxor XMM7,XMM7
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_40d131
.L_40ccd6:

            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            call .L_40b540

            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM4,XMM5
            subsd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+48]
            addsd XMM4,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_40dbb8]
            addsd XMM2,XMM3
            movsd XMM5,QWORD PTR [RIP+.L_40dda0]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_40de10]
            mulsd XMM7,XMM2
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM7
            jae .L_40d0ec

            movsd XMM0,QWORD PTR [RIP+.L_40dae0]
            ucomisd XMM0,XMM4
            jbe .L_40d0e8

            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40dda8]
            ucomisd XMM0,XMM1
            mulsd XMM4,QWORD PTR [RIP+.L_40dbb8]
            movsd QWORD PTR [RSP+8],XMM4
            jb .L_40d10c
.L_40cd79:

            addsd XMM1,QWORD PTR [RIP+.L_40dae0]
            movsd XMM6,QWORD PTR [RIP+.L_40dc10]
            movsd QWORD PTR [RSP+16],XMM6
.L_40cd8f:

            movsd XMM6,QWORD PTR [RSP+48]
            movapd XMM5,XMM3
            movsd XMM7,QWORD PTR [RSP+40]
            subsd XMM5,XMM6
            mulsd XMM6,XMM3
            subsd XMM7,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+48],XMM5
            pxor XMM5,XMM5
            sqrtsd XMM3,XMM6
            movapd XMM0,XMM6
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+56],XMM7
            ja .L_40d2cb
.L_40cdcf:

            movsd XMM0,QWORD PTR [RIP+.L_40dc08]
            movsd QWORD PTR [RSP+120],XMM2
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+64],XMM3
            divsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RIP+.L_40dbb8]
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+64]
            addsd XMM3,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RIP+.L_40ddb0]
            movsd QWORD PTR [RSP+64],XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_40dc08]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+112],XMM0
            movapd XMM0,XMM7
            addsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RIP+.L_40dc08]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_40dc68]
            addsd XMM0,QWORD PTR [RIP+.L_40ddb8]
            mulsd XMM0,QWORD PTR [RIP+.L_40dc08]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_40dc78]
            subsd XMM0,QWORD PTR [RIP+.L_40ddc0]
            mulsd XMM0,QWORD PTR [RIP+.L_40dc08]
            divsd XMM0,QWORD PTR [RSP+16]
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RSP+104]
            mulsd XMM4,QWORD PTR [RIP+.L_40ddc8]
            mulsd XMM5,QWORD PTR [RIP+.L_40ddd0]
            movsd XMM1,QWORD PTR [RIP+.L_40db30]
            movsd XMM3,QWORD PTR [RSP+72]
            pxor XMM6,XMM6
            mulsd XMM3,QWORD PTR [RIP+.L_40ddd8]
            subsd XMM1,XMM4
            mulsd XMM0,QWORD PTR [RIP+.L_40dd38]
            movsd XMM2,QWORD PTR [RSP+120]
            addsd XMM1,XMM5
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_40dcb8]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RIP+.L_40dbb8]
            subsd XMM0,QWORD PTR [RIP+.L_40dde0]
            mulsd XMM0,XMM0
            movapd XMM4,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_40dde8]
            mulsd XMM4,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            ja .L_40d285
.L_40cf4e:

            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM4,XMM5
            subsd XMM0,QWORD PTR [RIP+.L_40ddf8]
            divsd XMM0,QWORD PTR [RIP+.L_40de00]
            addsd XMM4,QWORD PTR [RIP+.L_40db30]
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM2,QWORD PTR [RIP+.L_40ddf0]
            mulsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_40dbb8]
            mulsd XMM1,XMM3
            xorpd XMM0,XMMWORD PTR [RIP+.L_40de20]
            addsd XMM1,QWORD PTR [RIP+.L_40db30]
            addsd XMM2,QWORD PTR [RIP+.L_40db30]
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            call exp@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_40ddb0]
            movsd XMM1,QWORD PTR [RIP+.L_40dd90]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_40dd90]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_40dd98]
            movsd XMM2,QWORD PTR [RSP+104]
            pxor XMM7,XMM7
            divsd XMM2,XMM0
            ucomisd XMM7,XMM2
            sqrtsd XMM5,XMM2
            ja .L_40d26b
.L_40d01b:

            movsd XMM0,QWORD PTR [RIP+.L_40dc08]
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,XMM0
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+64]
            xorpd XMM2,XMMWORD PTR [RIP+.L_40de20]
            movsd XMM5,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            addsd XMM5,XMM5
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RSP+88]
            mulsd XMM1,XMM1
            divsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            mulsd XMM0,QWORD PTR [RSP+96]
            divsd XMM3,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM5
            pxor XMM5,XMM5
            mulsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40d255
.L_40d0d8:

            movapd XMM0,XMM1
            add RSP,136
.L_40d0e3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d0e8:

            subsd XMM4,XMM0
.L_40d0ec:

            mulsd XMM4,QWORD PTR [RIP+.L_40dbb8]
            movsd XMM0,QWORD PTR [RIP+.L_40dda8]
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            jae .L_40cd79
.L_40d10c:

            movsd XMM7,QWORD PTR [RIP+.L_40dc10]
            ucomisd XMM1,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            jbe .L_40cd8f

            subsd XMM1,QWORD PTR [RIP+.L_40dae0]
            jmp .L_40cd8f
.L_40d131:

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_40ccd6
.L_40d15f:

            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+72],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            jmp .L_40cc93
.L_40d18d:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            jmp .L_40cc43
.L_40d1cb:

            movsd QWORD PTR [RSP+104],XMM6
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            jmp .L_40cbbb
.L_40d211:

            mov QWORD PTR [RSP+48],RSI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            mov RSI,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_40cb73
.L_40d255:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40d0d8
.L_40d26b:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            jmp .L_40d01b
.L_40d285:

            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_40cf4e
.L_40d2cb:

            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM3
            movsd QWORD PTR [RSP+64],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            jmp .L_40cdcf
.L_40d2f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d300:

            cmp EDI,1196573017
            je .L_40d3f0

            ja .L_40d358

            cmp EDI,1129142560
            je .L_40d3d0

            cmp EDI,1129142603
            jne .L_40d398

            test RSI,RSI
            je .L_40d331

            lea RAX,QWORD PTR [RIP+.L_641ca0]
            mov QWORD PTR [RSI],RAX
.L_40d331:

            test RDX,RDX
            je .L_40d340

            lea RAX,QWORD PTR [RIP+.L_63e998]
            mov QWORD PTR [RDX],RAX
.L_40d340:

            test RCX,RCX
            je .L_40d38b

            mov DWORD PTR [RCX],4
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d358:

            cmp EDI,1281450528
            je .L_40d3b0

            cmp EDI,1380401696
            jne .L_40d398

            test RSI,RSI
            je .L_40d377

            lea RAX,QWORD PTR [RIP+.L_63e9b0]
            mov QWORD PTR [RSI],RAX
.L_40d377:

            test RDX,RDX
            je .L_40d386

            lea RAX,QWORD PTR [RIP+.L_641ca8]
            mov QWORD PTR [RDX],RAX
.L_40d386:

            test RCX,RCX
            jne .L_40d39b
.L_40d38b:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d398:

            xor EAX,EAX
            ret 
.L_40d39b:

            mov DWORD PTR [RCX],3
            mov EAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d3b0:

            test RSI,RSI
            je .L_40d3bf

            lea RAX,QWORD PTR [RIP+.L_63e9a8]
            mov QWORD PTR [RSI],RAX
.L_40d3bf:

            test RDX,RDX
            je .L_40d386

            lea RAX,QWORD PTR [RIP+.L_63e9a0]
            mov QWORD PTR [RDX],RAX
            jmp .L_40d386
.L_40d3d0:

            test RSI,RSI
            je .L_40d3df

            lea RAX,QWORD PTR [RIP+.L_641c98]
            mov QWORD PTR [RSI],RAX
.L_40d3df:

            test RDX,RDX
            je .L_40d386

            lea RAX,QWORD PTR [RIP+.L_63e990]
            mov QWORD PTR [RDX],RAX
            jmp .L_40d386
.L_40d3f0:

            test RSI,RSI
            je .L_40d3ff

            lea RAX,QWORD PTR [RIP+.L_63e9b8]
            mov QWORD PTR [RSI],RAX
.L_40d3ff:

            test RDX,RDX
            je .L_40d40e

            lea RAX,QWORD PTR [RIP+.L_641cb0]
            mov QWORD PTR [RDX],RAX
.L_40d40e:

            test RCX,RCX
            je .L_40d38b

            mov DWORD PTR [RCX],1
            mov EAX,1
            ret 
.L_40d423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d430:

            sub EDI,1
            mov EAX,4294967295
            cmp EDI,29
            ja .L_40d447

            lea RAX,QWORD PTR [RIP+.L_40da60]
            mov EAX,DWORD PTR [RAX+RDI*4]
.L_40d447:

            ret 
.L_40d449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d450:

            cmp EDI,1281450528
            je .L_40d730

            jbe .L_40d4b8

            cmp EDI,1296255033
            je .L_40d646

            jbe .L_40d510

            cmp EDI,1296255045
            je .L_40d700

            jbe .L_40d5b0

            cmp EDI,1482250784
            mov EAX,9
            je .L_40d4b3

            jbe .L_40d650

            cmp EDI,1497588338
            mov EAX,7
            je .L_40d4b3

            cmp EDI,1501067552
            mov EAX,14
            jne .L_40d66d
.L_40d4b3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d4b8:

            cmp EDI,1094929490
            je .L_40d6b8

            jbe .L_40d5e0

            cmp EDI,1145261138
            je .L_40d5da

            jbe .L_40d548

            cmp EDI,1196573017
            mov EAX,3
            je .L_40d4b3

            jbe .L_40d6e0

            cmp EDI,1212961568
            mov EAX,13
            je .L_40d4b3

            cmp EDI,1213421088
            mov EAX,12
            jne .L_40d66d

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d510:

            cmp EDI,1296255027
            je .L_40d728

            ja .L_40d580

            cmp EDI,1282766411
            mov EAX,11
            je .L_40d4b3

            ja .L_40d690

            cmp EDI,1282766368
            mov EAX,8
            jne .L_40d66d

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d548:

            cmp EDI,1128483922
            je .L_40d740

            jbe .L_40d710

            cmp EDI,1129142560
            mov EAX,5
            je .L_40d4b3

            cmp EDI,1129142603
            mov EAX,6
            jne .L_40d66d

            ret 
          .byte 0x66
          .byte 0x90
.L_40d580:

            cmp EDI,1296255030
            je .L_40d6c8

            jbe .L_40d678

            cmp EDI,1296255031
            je .L_40d750

            cmp EDI,1296255032
            jne .L_40d66d
.L_40d5aa:

            mov EAX,22
            ret 
.L_40d5b0:

            cmp EDI,1296255042
            je .L_40d71c

            jbe .L_40d6b0

            cmp EDI,1296255043
            je .L_40d740

            cmp EDI,1296255044
            jne .L_40d66d
.L_40d5da:

            mov EAX,27
            ret 
.L_40d5e0:

            cmp EDI,893602898
            je .L_40d688

            ja .L_40d620

            cmp EDI,843271250
            je .L_40d6a0

            jbe .L_40d6d0

            cmp EDI,860048466
            je .L_40d728

            cmp EDI,876825682
            jne .L_40d66d
.L_40d614:

            mov EAX,18
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d620:

            cmp EDI,927157330
            je .L_40d750

            jbe .L_40d6c0

            cmp EDI,943934546
            je .L_40d5aa

            cmp EDI,960711762
            jne .L_40d66d
.L_40d646:

            mov EAX,23
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d650:

            cmp EDI,1296255046
            je .L_40d6f4

            cmp EDI,1380401696
            mov EAX,4
            je .L_40d4b3
.L_40d66d:

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d678:

            cmp EDI,1296255028
            je .L_40d614

            cmp EDI,1296255029
            jne .L_40d66d
.L_40d688:

            mov EAX,19
            ret 
          .byte 0x66
          .byte 0x90
.L_40d690:

            cmp EDI,1296255025
            je .L_40d6d8

            cmp EDI,1296255026
            jne .L_40d66d
.L_40d6a0:

            mov EAX,16
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d6b0:

            cmp EDI,1296255041
            jne .L_40d66d
.L_40d6b8:

            mov EAX,24
            ret 
          .byte 0x66
          .byte 0x90
.L_40d6c0:

            cmp EDI,910380114
            jne .L_40d66d
.L_40d6c8:

            mov EAX,20
            ret 
          .byte 0x66
          .byte 0x90
.L_40d6d0:

            cmp EDI,826494034
            jne .L_40d66d
.L_40d6d8:

            mov EAX,15
            ret 
          .byte 0x66
          .byte 0x90
.L_40d6e0:

            cmp EDI,1162038354
            je .L_40d700

            cmp EDI,1178815570
            jne .L_40d66d
.L_40d6f4:

            mov EAX,29
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d700:

            mov EAX,28
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d710:

            cmp EDI,1111706706
            jne .L_40d66d
.L_40d71c:

            mov EAX,25
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d728:

            mov EAX,17
            ret 
          .byte 0x66
          .byte 0x90
.L_40d730:

            mov EAX,10
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d740:

            mov EAX,26
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d750:

            mov EAX,21
            ret 
.L_40d756:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d760:

            cmp EDI,1281450528
            je .L_40d87c

            ja .L_40d7c0

            cmp EDI,1094929490
            je .L_40d8d8

            ja .L_40d850

            cmp EDI,893602898
            je .L_40d944

            jbe .L_40d8b0

            cmp EDI,927157330
            je .L_40d8f0

            jbe .L_40d970

            cmp EDI,943934546
            je .L_40d802

            cmp EDI,960711762
            jne .L_40d87c
.L_40d7b8:

            mov EAX,9
            ret 
          .byte 0x66
          .byte 0x90
.L_40d7c0:

            cmp EDI,1296255033
            je .L_40d7b8

            ja .L_40d810

            cmp EDI,1296255027
            je .L_40d87c

            jbe .L_40d888

            cmp EDI,1296255030
            je .L_40d97c

            jbe .L_40d930

            cmp EDI,1296255031
            je .L_40d8f0

            cmp EDI,1296255032
            jne .L_40d87c
.L_40d802:

            mov EAX,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d810:

            cmp EDI,1296255045
            je .L_40d8e0

            ja .L_40d988

            cmp EDI,1296255042
            je .L_40d92a

            jbe .L_40d8d0

            cmp EDI,1296255043
            je .L_40d900

            cmp EDI,1296255044
            jne .L_40d87c
.L_40d848:

            mov EAX,13
            ret 
          .byte 0x66
          .byte 0x90
.L_40d850:

            cmp EDI,1145261138
            je .L_40d848

            jbe .L_40d910

            cmp EDI,1196573017
            je .L_40d8c6

            ja .L_40d87c

            cmp EDI,1162038354
            je .L_40d8e0

            cmp EDI,1178815570
            je .L_40d9a6
.L_40d87c:

            mov EAX,3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d888:

            cmp EDI,1282766411
            je .L_40d968

            jbe .L_40d87c

            cmp EDI,1296255025
            je .L_40d8c6

            cmp EDI,1296255026
            jne .L_40d87c
.L_40d8a6:

            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d8b0:

            cmp EDI,843271250
            je .L_40d8a6

            ja .L_40d950

            cmp EDI,826494034
            jne .L_40d87c
.L_40d8c6:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d8d0:

            cmp EDI,1296255041
            jne .L_40d87c
.L_40d8d8:

            mov EAX,10
            ret 
          .byte 0x66
          .byte 0x90
.L_40d8e0:

            mov EAX,14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d8f0:

            mov EAX,7
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d900:

            mov EAX,12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d910:

            cmp EDI,1128483922
            je .L_40d900

            ja .L_40d9b0

            cmp EDI,1111706706
            jne .L_40d87c
.L_40d92a:

            mov EAX,11
            ret 
.L_40d930:

            cmp EDI,1296255028
            je .L_40d968

            cmp EDI,1296255029
            jne .L_40d87c
.L_40d944:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d950:

            cmp EDI,860048466
            je .L_40d87c

            cmp EDI,876825682
            jne .L_40d87c
.L_40d968:

            mov EAX,4
            ret 
          .byte 0x66
          .byte 0x90
.L_40d970:

            cmp EDI,910380114
            jne .L_40d87c
.L_40d97c:

            mov EAX,6
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d988:

            cmp EDI,1482250784
            je .L_40d87c

            ja .L_40d87c

            cmp EDI,1296255046
            jne .L_40d87c
.L_40d9a6:

            mov EAX,15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d9b0:

            cmp EDI,1129142560
            je .L_40d87c

            cmp EDI,1129142603
            je .L_40d968

            jmp .L_40d87c
.L_40d9c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d9d0:

            test ESI,16711680
            jne .L_40da48

            call .L_40d760

            test ESI,1024
            mov EDX,EAX
            je .L_40da00

            cmp EDX,4
            mov EAX,7
            jg .L_40da3f

            mov ESI,49
            mov EAX,23
            cmovne EAX,ESI
            ret 
          .byte 0x90
.L_40da00:

            and ESI,2048
            je .L_40da28

            cmp EDX,4
            mov EAX,6
            jg .L_40da3f

            cmp EDX,1
            mov ESI,33
            mov EAX,17
            cmove EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da28:

            cmp EDX,4
            mov EAX,7
            jg .L_40da3f

            mov EAX,33
            mov ESI,17
            cmove EAX,ESI
.L_40da3f:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40da48:

            shr ESI,16
            movzx EAX,SIL
            ret 
.L_40da50:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da60:
          .byte 0x59
          .byte 0x41
          .byte 0x52
          .byte 0x47
          .byte 0x20
          .byte 0x42
          .byte 0x47
          .byte 0x52
          .byte 0x59
          .byte 0x41
          .byte 0x52
          .byte 0x47
          .byte 0x20
          .byte 0x42
          .byte 0x47
          .byte 0x52
          .byte 0x20
          .byte 0x59
          .byte 0x4d
          .byte 0x43
          .byte 0x4b
          .byte 0x59
          .byte 0x4d
          .byte 0x43
          .byte 0x72
          .byte 0x62
          .byte 0x43
          .byte 0x59
          .byte 0x20
          .byte 0x76
          .byte 0x75
          .byte 0x4c
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0x20
          .byte 0x62
          .byte 0x61
          .byte 0x4c
          .byte 0x4b
          .byte 0x76
          .byte 0x75
          .byte 0x4c
          .byte 0x20
          .byte 0x56
          .byte 0x53
          .byte 0x48
          .byte 0x20
          .byte 0x53
          .byte 0x4c
          .byte 0x48
          .byte 0x20
          .byte 0x79
          .byte 0x78
          .byte 0x59
          .byte 0x31
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x32
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x33
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x34
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x35
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x36
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x37
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x38
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x39
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x41
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x42
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x43
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x44
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x45
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x46
          .byte 0x48
          .byte 0x43
          .byte 0x4d
          .byte 0x20
          .byte 0x62
          .byte 0x61
          .byte 0x4c
.L_40dad8:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_40dae0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_40dae8:
          .byte 0xd8
          .byte 0x80
          .byte 0x8
          .byte 0x71
          .byte 0xe5
          .byte 0xfc
          .byte 0x1f
          .byte 0x40
.L_40daf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
.L_40daf8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x40
.L_40db00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_40db08:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x3a
          .byte 0x8c
          .byte 0x40
.L_40db10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_40db18:
          .byte 0xe
          .byte 0xe5
          .byte 0x26
          .byte 0x15
          .byte 0x7b
          .byte 0xcb
          .byte 0xdb
          .byte 0x3f
.L_40db20:

            int 204

            int3 

            int3 

            int3 
          .byte 0x4c
          .byte 0x4b
          .byte 0x40
.L_40db28:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x23
          .byte 0x40
.L_40db30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40db38:
          .byte 0xd6
          .byte 0x7c
          .byte 0x8f
          .byte 0xd2
          .byte 0x54
          .byte 0x23
          .byte 0x82
          .byte 0x3f
.L_40db40:
          .byte 0x5f
          .byte 0x42
          .byte 0x7b
          .byte 0x9
          .byte 0xed
          .byte 0x25
          .byte 0x1f
          .byte 0x40
.L_40db48:
          .byte 0x96
          .byte 0x7b
          .byte 0x1a
          .byte 0x61
          .byte 0xb9
          .byte 0xa7
          .byte 0xc1
          .byte 0x3f
.L_40db50:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_40db58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x40
.L_40db60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x40
.L_40db68:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x60
          .byte 0x3f
.L_40db70:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x74
          .byte 0x3f
.L_40db78:
          .byte 0x61
          .byte 0xb9
          .byte 0xa7
          .byte 0x11
          .byte 0x96
          .byte 0x7b
          .byte 0xca
          .byte 0x3f
.L_40db80:
          .byte 0x22
          .byte 0x9
          .byte 0xd2
          .byte 0xde
          .byte 0x4
          .byte 0x70
          .byte 0xc0
          .byte 0x3f
.L_40db88:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x84
          .byte 0x40
.L_40db90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3f
.L_40db98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_40dba0:

            int 204

            int3 

            int3 

            int3 
          .byte 0x7a
          .byte 0x84
          .byte 0x40
.L_40dba8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x70
          .byte 0x40
.L_40dbb0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_40dbb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_40dbc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_40dbc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x59
          .byte 0x40
.L_40dbd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
.L_40dbd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0x5f
          .byte 0x40
.L_40dbe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x40
.L_40dbe8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_40dbf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_40dbf8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_40dc00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x40
.L_40dc08:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_40dc10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_40dc18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_40dc20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x40
.L_40dc28:
          .byte 0xfa
          .byte 0x7e
          .byte 0x6a
          .byte 0xbc
          .byte 0x74
          .byte 0x93
          .byte 0xa8
          .byte 0x3f
.L_40dc30:
          .byte 0x79
          .byte 0xe9
          .byte 0x26
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x8c
          .byte 0x3f
.L_40dc38:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xa1
          .byte 0x3f
.L_40dc40:
          .byte 0x9f
          .byte 0x3c
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x6d
          .byte 0x3f
.L_40dc48:
          .byte 0x79
          .byte 0xe9
          .byte 0x26
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0xe0
          .byte 0x3f
.L_40dc50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xcb
          .byte 0x40
.L_40dc58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x40
.L_40dc60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x40
.L_40dc68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_40dc70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x40
.L_40dc78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_40dc80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x40
.L_40dc88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_40dc90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x40
.L_40dc98:
          .byte 0x29
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x28
          .byte 0xac
          .byte 0x3f
.L_40dca0:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xa4
          .byte 0x3f
.L_40dca8:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xb1
          .byte 0x3f
.L_40dcb0:
          .byte 0x4a
          .byte 0xc
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0x16
          .byte 0xa9
          .byte 0x3f
.L_40dcb8:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x8e
          .byte 0x3f
.L_40dcc0:

            stosb BYTE PTR [RDI]
            int1 
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x10
          .byte 0xe4
          .byte 0x3f
.L_40dcc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x40
.L_40dcd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x40
.L_40dcd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x40
.L_40dce0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x40
.L_40dce8:
          .byte 0xa4
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0xd0
          .byte 0xbf
.L_40dcf0:
          .byte 0xa8
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0xd8
          .byte 0x3f
.L_40dcf8:
          .byte 0x27
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x1c
          .byte 0x5a
          .byte 0xe4
          .byte 0x3f
.L_40dd00:

            and DWORD PTR [RAX-309237646],ESI
            int3 
          .byte 0x3f
.L_40dd08:
          .byte 0xa2
          .byte 0x45
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0xd4
          .byte 0xc8
          .byte 0x3f
.L_40dd10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xb0
          .byte 0x90
          .byte 0x41
.L_40dd18:
          .byte 0x27
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x1c
          .byte 0x5a
          .byte 0xe0
          .byte 0x3f
.L_40dd20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x40
.L_40dd28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x75
          .byte 0x40
.L_40dd30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x40
.L_40dd38:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xc9
          .byte 0x3f
.L_40dd40:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xe1
          .byte 0x3f
.L_40dd48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
.L_40dd50:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
.L_40dd58:
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0x3f
.L_40dd60:
          .byte 0xda
          .byte 0x1b
          .byte 0x7c
          .byte 0x61
          .byte 0x32
          .byte 0x55
          .byte 0xb0
          .byte 0x3f
.L_40dd68:
          .byte 0xc0
          .byte 0xec
          .byte 0x9e
          .byte 0x3c
          .byte 0x2c
          .byte 0xd4
          .byte 0x8a
          .byte 0x3f
.L_40dd70:
          .byte 0xd1
          .byte 0x22
          .byte 0xdb
          .byte 0xf9
          .byte 0x7e
          .byte 0x6a
          .byte 0xe4
          .byte 0x3f
.L_40dd78:
          .byte 0x42
          .byte 0x3e
          .byte 0xe8
          .byte 0xd9
          .byte 0xac
          .byte 0xfa
          .byte 0xa4
          .byte 0x3f
.L_40dd80:
          .byte 0x50
          .byte 0xfc
          .byte 0x18
          .byte 0x73
          .byte 0xd7
          .byte 0x12
          .byte 0x92
          .byte 0x3f
.L_40dd88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x9d
          .byte 0x40
.L_40dd90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
.L_40dd98:
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0xc4
          .byte 0xbc
          .byte 0xf6
          .byte 0x41
.L_40dda0:

            hlt 
          .byte 0xde
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_40dda8:

            hlt 
          .byte 0xde
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0xc0
.L_40ddb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_40ddb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_40ddc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x40
.L_40ddc8:

            ret 
          .byte 0xf5
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xc5
          .byte 0x3f
.L_40ddd0:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0xce
          .byte 0x3f
.L_40ddd8:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xd4
          .byte 0x3f
.L_40dde0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x40
.L_40dde8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x40
.L_40ddf0:
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xa7
          .byte 0x3f
.L_40ddf8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],DH
            jno .L_40de40
.L_40de00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de10:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40de20:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_40de30:

            lea RAX,QWORD PTR [RIP+.L_63e9c0]
            ret 
.L_40de38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40de40:

            lea RSI,QWORD PTR [RIP+.L_63e9c0]
            lea RDI,QWORD PTR [RIP+.L_641cc0]
            sub RSP,8
            call .L_40b650

            lea RAX,QWORD PTR [RIP+.L_641cc0]
            add RSP,8
            ret 
.L_40de63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40de70:

            sub RSP,8
.L_40de74:

            test RDI,RDI
            je .L_40dfd4

            movapd XMM2,XMM0
            movapd XMM3,XMM0
            ucomisd XMM0,QWORD PTR [RIP+.L_40edc0]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_40edc8]
            mulsd XMM3,XMM2
            jb .L_40df48

            ucomisd XMM1,XMM0
            jb .L_40df48

            movsd XMM1,QWORD PTR [RIP+.L_40edd0]
            divsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_40ede0]
            divsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_40edd8]
            movsd XMM2,QWORD PTR [RIP+.L_40ede8]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_40edf0]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40edf8]
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_40ee00]
.L_40df01:

            movapd XMM1,XMM0
            movsd QWORD PTR [RDI],XMM0
            mov RAX,QWORD PTR [RIP+.L_40ee48]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_40ee38]
            mov QWORD PTR [RDI+16],RAX
            mov EAX,1
            mulsd XMM1,QWORD PTR [RIP+.L_40ee30]
            addsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_40ee40]
            movsd QWORD PTR [RDI+8],XMM0
            add RSP,8
.L_40df42:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40df48:

            ucomisd XMM0,XMM1
            jbe .L_40dfb8

            movsd XMM1,QWORD PTR [RIP+.L_40ee08]
            ucomisd XMM1,XMM0
            jb .L_40dfb8

            movsd XMM1,QWORD PTR [RIP+.L_40edd0]
            divsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_40ede0]
            divsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_40ee10]
            movsd XMM2,QWORD PTR [RIP+.L_40ee18]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_40edf0]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40ee20]
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_40ee28]
            jmp .L_40df01
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40dfb8:

            lea RDX,QWORD PTR [RIP+.L_40e938]
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_426320

            xor EAX,EAX
            add RSP,8
.L_40dfd3:

            ret 
.L_40dfd4:

            lea RCX,QWORD PTR [RIP+.L_40e9c0]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e8b3]
            mov EDX,54
            call __assert_fail@PLT
.L_40dff3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e000:

            push RBP
            push RBX
            sub RSP,88
.L_40e006:

            test RSI,RSI
            je .L_40e1e2

            test RDI,RDI
            je .L_40e201

            movsd XMM8,QWORD PTR [RSI+8]
            mov EBX,1
            lea RBP,QWORD PTR [RIP+.L_40e9e0]
            movsd XMM0,QWORD PTR [RIP+.L_40ee68]
            movsd XMM7,QWORD PTR [RSI]
            mulsd XMM0,XMM8
            mulsd XMM8,QWORD PTR [RIP+.L_40ee78]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            subsd XMM0,XMM7
            movsd XMM10,QWORD PTR [RIP+.L_40ee58]
            addsd XMM7,XMM7
            movsd XMM2,QWORD PTR [RIP+.L_40ee60]
            pxor XMM6,XMM6
            pxor XMM3,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_40ee70]
            movsd XMM9,QWORD PTR [RIP+.L_40ee48]
            divsd XMM7,XMM0
            divsd XMM8,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40ee50]
            jmp .L_40e0c9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e098:

            cmp EBX,31
            je .L_40e150
.L_40e0a1:

            mov EAX,EBX
            movapd XMM6,XMM5
            shl RAX,5
            movapd XMM3,XMM1
            add RAX,RBP
            add EBX,1
            movsd XMM2,QWORD PTR [RAX+8]
            movsd XMM10,QWORD PTR [RAX+16]
            movsd XMM0,QWORD PTR [RAX+24]
            movsd XMM5,QWORD PTR [RAX]
.L_40e0c9:

            movapd XMM11,XMM7
            movapd XMM1,XMM8
            subsd XMM11,XMM2
            subsd XMM1,XMM10
            movapd XMM2,XMM11
            mulsd XMM2,XMM0
            mulsd XMM0,XMM0
            subsd XMM1,XMM2
            addsd XMM0,XMM9
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40e160
.L_40e0fd:

            cmp EBX,1
            divsd XMM1,XMM2
            je .L_40e0a1

            movapd XMM0,XMM3
            divsd XMM0,XMM1
            ucomisd XMM4,XMM0
            jbe .L_40e098

            movapd XMM0,XMM3
            mov EAX,1
            subsd XMM5,XMM6
            subsd XMM0,XMM1
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_40ede0]
            mulsd XMM3,XMM5
            addsd XMM3,XMM6
            divsd XMM0,XMM3
            movsd QWORD PTR [RDI],XMM0
            add RSP,88
.L_40e145:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e150:

            add RSP,88
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e160:

            movsd QWORD PTR [RSP+72],XMM4
            mov QWORD PTR [RSP+56],RDI
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM9,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_40e0fd
.L_40e1e2:

            lea RCX,QWORD PTR [RIP+.L_40e9a0]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e8b3]
            mov EDX,151
            call __assert_fail@PLT
.L_40e201:

            lea RCX,QWORD PTR [RIP+.L_40e9a0]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e8cf]
            mov EDX,152
            call __assert_fail@PLT
.L_40e220:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RCX
            sub RSP,472
.L_40e23d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+456],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_40ee80]
            test RSI,RSI
            lea R12,QWORD PTR [RSP+224]
            lea RBP,QWORD PTR [RSP+384]
            mov RSI,R12
            mov QWORD PTR [RSP+144],RAX
            mov RAX,QWORD PTR [RIP+.L_40ee88]
            mov RDI,RBP
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RIP+.L_40ee90]
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RIP+.L_40ee98]
            mov QWORD PTR [RSP+168],RAX
            mov RAX,QWORD PTR [RIP+.L_433250-148400]
            mov QWORD PTR [RSP+176],RAX
            mov RAX,QWORD PTR [RIP+.L_40eea8]
            mov QWORD PTR [RSP+184],RAX
            mov RAX,QWORD PTR [RIP+.L_40eeb0]
            mov QWORD PTR [RSP+192],RAX
            mov RAX,QWORD PTR [RIP+.L_40eeb8]
            mov QWORD PTR [RSP+200],RAX
            mov RAX,QWORD PTR [RIP+.L_40eec0]
            mov QWORD PTR [RSP+208],RAX
            lea RAX,QWORD PTR [RSP+144]
            cmove RBX,RAX
            movdqu XMM0,XMMWORD PTR [RBX]
            movaps XMMWORD PTR [RSP+384],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+16]
            movaps XMMWORD PTR [RSP+400],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+416],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov QWORD PTR [RSP+448],RAX
            call .L_432250

            test EAX,EAX
            je .L_40e42e

            lea RDX,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [R15+16]
            movsd XMM1,QWORD PTR [R15+8]
            movsd XMM0,QWORD PTR [R15]
            mov RDI,RDX
            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RDX
            call .L_431e00

            movsd XMM2,QWORD PTR [R13+16]
            mov RDI,R15
            movsd XMM1,QWORD PTR [R13+8]
            movsd XMM0,QWORD PTR [R13]
            lea R13,QWORD PTR [RSP+304]
            call .L_431e00

            mov RDX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+48]
            mov RSI,RBX
            call .L_4323e0

            lea RDI,QWORD PTR [RSP+112]
            mov RDX,R15
            mov RSI,RBX
            call .L_4323e0

            movsd XMM0,QWORD PTR [RSP+112]
            mov RDI,R13
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+48]
            pxor XMM1,XMM1
            call .L_431e00

            movsd XMM1,QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [R13+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+56]
            pxor XMM0,XMM0
            call .L_431e00

            movsd XMM2,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [R13+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+64]
            pxor XMM0,XMM0
            call .L_431e00

            mov RDX,RBX
            mov RSI,R13
            mov RDI,RBP
            call .L_4320e0

            mov RDX,RBP
            mov RSI,R12
            mov RDI,R14
            call .L_4320e0

            mov EAX,1
.L_40e42e:

            mov RCX,QWORD PTR [RSP+456]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40e453

            add RSP,472
.L_40e448:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40e453:

            call __stack_chk_fail@PLT
.L_40e458:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e460:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,520
.L_40e473:

            movsd XMM1,QWORD PTR [RDX+48]
            lea RBX,QWORD PTR [RSP+272]
            lea R13,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSI]
            movsd XMM7,QWORD PTR [RSI+8]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RDX]
            movsd XMM6,QWORD PTR [RDX+24]
            movsd XMM2,QWORD PTR [RDX+56]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+88],XMM7
            movsd XMM5,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+32]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movapd XMM1,XMM6
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+504],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM4
            call .L_431e00

            lea RDI,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            call .L_431e00

            movsd XMM3,QWORD PTR [RIP+.L_40ee48]
            lea RDI,QWORD PTR [RBX+48]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+48],XMM3
            subsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+56],XMM0
            movapd XMM0,XMM3
            subsd XMM0,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            subsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+64],XMM1
            subsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+72],XMM0
            call .L_431e00

            mov RSI,R13
            mov RDI,RBX
            call .L_432250

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+48]
            jne .L_40e5b8
.L_40e58e:

            mov RCX,QWORD PTR [RSP+504]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40e73e

            add RSP,520
.L_40e5ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e5b8:

            movapd XMM2,XMM3
            lea RBX,QWORD PTR [RSP+128]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+88]
            movapd XMM1,XMM3
            subsd XMM2,XMM5
            mov RDI,RBX
            divsd XMM5,XMM7
            subsd XMM2,XMM7
            divsd XMM2,XMM7
            movapd XMM0,XMM5
            call .L_431e00

            lea RDI,QWORD PTR [RSP+160]
            mov RDX,RBX
            mov RSI,R13
            lea RBX,QWORD PTR [RSP+96]
            call .L_4323e0

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_431e00

            movsd XMM0,QWORD PTR [RSP]
            lea RDI,QWORD PTR [R12+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_431e00

            movsd XMM0,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [R12+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+160]
            mulsd XMM2,QWORD PTR [RSP+176]
            mulsd XMM1,QWORD PTR [RSP+168]
            call .L_431e00

            mov RSI,RBP
            mov RDI,RBX
            lea RBP,QWORD PTR [RSP+352]
            call .L_40b690

            lea RCX,QWORD PTR [RIP+.L_63e9c0]
            xor ESI,ESI
            mov RDX,RBX
            mov RDI,RBP
            call .L_40e220

            test EAX,EAX
            je .L_40e58e

            movdqu XMM0,XMMWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov RAX,QWORD PTR [R12+64]
            mov RDI,R12
            movaps XMMWORD PTR [RSP+432],XMM0
            movdqu XMM0,XMMWORD PTR [R12+16]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqu XMM0,XMMWORD PTR [R12+48]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_4320e0

            mov EAX,1
            jmp .L_40e58e
.L_40e73e:

            call __stack_chk_fail@PLT
.L_40e743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e750:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_40e75d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_40e865

            test RSI,RSI
            je .L_40e846

            test RDX,RDX
            je .L_40e884

            test RCX,RCX
            mov RBP,RCX
            je .L_40e827

            lea R12,QWORD PTR [RSP+64]
            mov RCX,RDX
            mov RBX,RDI
            mov RDX,RSI
            xor ESI,ESI
            mov RDI,R12
            call .L_40e220

            test EAX,EAX
            je .L_40e802

            movsd XMM0,QWORD PTR [RBP]
            mov R13,RSP
            movsd XMM2,QWORD PTR [RBP+16]
            mov RDI,R13
            movsd XMM1,QWORD PTR [RBP+8]
            call .L_431e00

            lea RDI,QWORD PTR [RSP+32]
            mov RDX,R13
            mov RSI,R12
            call .L_4323e0

            movsd XMM0,QWORD PTR [RSP+32]
            mov EAX,1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBX+16],XMM0
.L_40e802:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40e8a3

            add RSP,152
.L_40e820:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40e827:

            lea RCX,QWORD PTR [RIP+.L_40e980]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e91a]
            mov EDX,337
            call __assert_fail@PLT
.L_40e846:

            lea RCX,QWORD PTR [RIP+.L_40e980]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e960]
            mov EDX,335
            call __assert_fail@PLT
.L_40e865:

            lea RCX,QWORD PTR [RIP+.L_40e980]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e8e6]
            mov EDX,334
            call __assert_fail@PLT
.L_40e884:

            lea RCX,QWORD PTR [RIP+.L_40e980]
            lea RSI,QWORD PTR [RIP+.L_40e8a8]
            lea RDI,QWORD PTR [RIP+.L_40e8fe]
            mov EDX,336
            call __assert_fail@PLT
.L_40e8a3:

            call __stack_chk_fail@PLT
.L_40e8a8:
          .string "cmswtpnt.c"
.L_40e8b3:
          .string "(WhitePoint != ((void *)0))"
.L_40e8cf:
          .string "(TempK != ((void *)0))"
.L_40e8e6:
          .string "(Result != ((void *)0))"
.L_40e8fe:
          .string "(Illuminant != ((void *)0))"
.L_40e91a:
          .string "(Value != ((void *)0))"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e938:
          .string "cmsWhitePointFromTemp: invalid temp"
          .zero 4
.L_40e960:
          .string "(SourceWhitePt != ((void *)0))"
          .byte 0x90
.L_40e980:
          .string "cmsAdaptToIlluminant"
          .zero 11
.L_40e9a0:
          .string "cmsTempFromWhitePoint"
          .zero 10
.L_40e9c0:
          .string "cmsWhitePointFromTemp"
          .zero 10
.L_40e9e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0xac
          .byte 0xa8
          .byte 0xc1
          .byte 0x34
          .byte 0xc
          .byte 0xc7
          .byte 0x3f
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0xd0
          .byte 0x3f
          .byte 0x63
          .byte 0x7a
          .byte 0xc2
          .byte 0x12
          .byte 0xf
          .byte 0x28
          .byte 0xcf
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
          .byte 0x8e
          .byte 0x1
          .byte 0xd9
          .byte 0xeb
          .byte 0xdd
          .byte 0x1f
          .byte 0xc7
          .byte 0x3f
          .byte 0x15
          .byte 0x57
          .byte 0x95
          .byte 0x7d
          .byte 0x57
          .byte 0x4
          .byte 0xd1
          .byte 0x3f
          .byte 0x3
          .byte 0x43
          .byte 0x56
          .byte 0xb7
          .byte 0x7a
          .byte 0x4e
          .byte 0xd0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x40
          .byte 0xa0
          .byte 0x4f
          .byte 0xe4
          .byte 0x49
          .byte 0xd2
          .byte 0x35
          .byte 0xc7
          .byte 0x3f
          .byte 0xad
          .byte 0x2f
          .byte 0x12
          .byte 0xda
          .byte 0x72
          .byte 0x2e
          .byte 0xd1
          .byte 0x3f
          .byte 0xfa
          .byte 0x44
          .byte 0x9e
          .byte 0x24
          .byte 0x5d
          .byte 0x33
          .byte 0xd1
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
          .byte 0x1f
          .byte 0xba
          .byte 0xa0
          .byte 0xbe
          .byte 0x65
          .byte 0x4e
          .byte 0xc7
          .byte 0x3f
          .byte 0xb3
          .byte 0x24
          .byte 0x40
          .byte 0x4d
          .byte 0x2d
          .byte 0x5b
          .byte 0xd1
          .byte 0x3f
          .byte 0x87
          .byte 0xbf
          .byte 0x26
          .byte 0x6b
          .byte 0xd4
          .byte 0x43
          .byte 0xd2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x40
          .byte 0x27
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0x40
          .byte 0x6a
          .byte 0xc7
          .byte 0x3f
          .byte 0x5f
          .byte 0x24
          .byte 0xb4
          .byte 0xe5
          .byte 0x5c
          .byte 0x8a
          .byte 0xd1
          .byte 0x3f
          .byte 0x39
          .byte 0xd6
          .byte 0xc5
          .byte 0x6d
          .byte 0x34
          .byte 0x80
          .byte 0xd3
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x40
          .byte 0xb6
          .byte 0xb9
          .byte 0x31
          .byte 0x3d
          .byte 0x61
          .byte 0x89
          .byte 0xc7
          .byte 0x3f
          .byte 0xeb
          .byte 0x1c
          .byte 0x3
          .byte 0xb2
          .byte 0xd7
          .byte 0xbb
          .byte 0xd1
          .byte 0x3f
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0xd4
          .byte 0x78
          .byte 0xe9
          .byte 0xd4
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
          .byte 0x5c
          .byte 0x72
          .byte 0xdc
          .byte 0x29
          .byte 0x1d
          .byte 0xac
          .byte 0xc7
          .byte 0x3f
          .byte 0x3b
          .byte 0xc7
          .byte 0x80
          .byte 0xec
          .byte 0xf5
          .byte 0xee
          .byte 0xd1
          .byte 0x3f
          .byte 0x8e
          .byte 0x3b
          .byte 0xa5
          .byte 0x83
          .byte 0xf5
          .byte 0x7f
          .byte 0xd6
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x40
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xd5
          .byte 0x73
          .byte 0xd2
          .byte 0xc7
          .byte 0x3f
          .byte 0x88
          .byte 0x11
          .byte 0xc2
          .byte 0xa3
          .byte 0x8d
          .byte 0x23
          .byte 0xd2
          .byte 0x3f
          .byte 0x4e
          .byte 0xd1
          .byte 0x91
          .byte 0x5c
          .byte 0xfe
          .byte 0x43
          .byte 0xd8
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
          .byte 0x78
          .byte 0x9c
          .byte 0xa2
          .byte 0x23
          .byte 0xb9
          .byte 0xfc
          .byte 0xc7
          .byte 0x3f
          .byte 0xb7
          .byte 0xb4
          .byte 0x1a
          .byte 0x12
          .byte 0xf7
          .byte 0x58
          .byte 0xd2
          .byte 0x3f
          .byte 0x4b
          .byte 0xea
          .byte 0x4
          .byte 0x34
          .byte 0x11
          .byte 0x36
          .byte 0xda
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
          .byte 0xed
          .byte 0xd
          .byte 0xbe
          .byte 0x30
          .byte 0x99
          .byte 0x2a
          .byte 0xc8
          .byte 0x3f
          .byte 0x3b
          .byte 0x8d
          .byte 0xb4
          .byte 0x54
          .byte 0xde
          .byte 0x8e
          .byte 0xd2
          .byte 0x3f
          .byte 0x11
          .byte 0xaa
          .byte 0xd4
          .byte 0xec
          .byte 0x81
          .byte 0x56
          .byte 0xdc
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
          .byte 0x6
          .byte 0x2a
          .byte 0xe3
          .byte 0xdf
          .byte 0x67
          .byte 0x5c
          .byte 0xc8
          .byte 0x3f
          .byte 0xbf
          .byte 0x65
          .byte 0x4e
          .byte 0x97
          .byte 0xc5
          .byte 0xc4
          .byte 0xd2
          .byte 0x3f
          .byte 0xbc
          .byte 0x57
          .byte 0xad
          .byte 0x4c
          .byte 0xf8
          .byte 0xa5
          .byte 0xde
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x40
          .byte 0xef
          .byte 0xe1
          .byte 0x92
          .byte 0xe3
          .byte 0x4e
          .byte 0xe9
          .byte 0xc8
          .byte 0x3f
          .byte 0xb5
          .byte 0xfd
          .byte 0x2b
          .byte 0x2b
          .byte 0x4d
          .byte 0x4a
          .byte 0xd3
          .byte 0x3f
          .byte 0xc7
          .byte 0xd7
          .byte 0x9e
          .byte 0x59
          .byte 0x12
          .byte 0xa0
          .byte 0xe2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x40
          .byte 0x93
          .byte 0x52
          .byte 0xd0
          .byte 0xed
          .byte 0x25
          .byte 0x8d
          .byte 0xc9
          .byte 0x3f
          .byte 0x7c
          .byte 0x27
          .byte 0x66
          .byte 0xbd
          .byte 0x18
          .byte 0xca
          .byte 0xd3
          .byte 0x3f
          .byte 0xcc
          .byte 0x40
          .byte 0x65
          .byte 0xfc
          .byte 0xfb
          .byte 0x8c
          .byte 0xe6
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x65
          .byte 0x40
          .byte 0x12
          .byte 0x83
          .byte 0xc0
          .byte 0xca
          .byte 0xa1
          .byte 0x45
          .byte 0xca
          .byte 0x3f
          .byte 0x53
          .byte 0x91
          .byte 0xa
          .byte 0x63
          .byte 0xb
          .byte 0x41
          .byte 0xd4
          .byte 0x3f
          .byte 0x42
          .byte 0x43
          .byte 0xff
          .byte 0x4
          .byte 0x17
          .byte 0x2b
          .byte 0xeb
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x40
          .byte 0x72
          .byte 0x33
          .byte 0xdc
          .byte 0x80
          .byte 0xcf
          .byte 0xf
          .byte 0xcb
          .byte 0x3f
          .byte 0xcb
          .byte 0xbe
          .byte 0x2b
          .byte 0x82
          .byte 0xff
          .byte 0xad
          .byte 0xd4
          .byte 0x3f
          .byte 0x5f
          .byte 0x98
          .byte 0x4c
          .byte 0x15
          .byte 0x8c
          .byte 0x4a
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0x40
          .byte 0x61
          .byte 0x8e
          .byte 0x1e
          .byte 0xbf
          .byte 0xb7
          .byte 0xe9
          .byte 0xcb
          .byte 0x3f
          .byte 0x72
          .byte 0x33
          .byte 0xdc
          .byte 0x80
          .byte 0xcf
          .byte 0xf
          .byte 0xd5
          .byte 0x3f
          .byte 0x64
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0x78
          .byte 0xf3
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x40
          .byte 0xe3
          .byte 0x53
          .byte 0x0
          .byte 0x8c
          .byte 0x67
          .byte 0xd0
          .byte 0xcc
          .byte 0x3f
          .byte 0x11
          .byte 0x1
          .byte 0x87
          .byte 0x50
          .byte 0xa5
          .byte 0x66
          .byte 0xd5
          .byte 0x3f
          .byte 0x80
          .byte 0x48
          .byte 0xbf
          .byte 0x7d
          .byte 0x1d
          .byte 0x38
          .byte 0xf7
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x71
          .byte 0x40
          .byte 0x1a
          .byte 0x8b
          .byte 0xa6
          .byte 0xb3
          .byte 0x93
          .byte 0xc1
          .byte 0xcd
          .byte 0x3f
          .byte 0x34
          .byte 0x4b
          .byte 0x2
          .byte 0xd4
          .byte 0xd4
          .byte 0xb2
          .byte 0xd5
          .byte 0x3f
          .byte 0xcc
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xad
          .byte 0xfb
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x40
          .byte 0x41
          .byte 0x82
          .byte 0xe2
          .byte 0xc7
          .byte 0x98
          .byte 0xbb
          .byte 0xce
          .byte 0x3f
          .byte 0xf7
          .byte 0x58
          .byte 0xfa
          .byte 0xd0
          .byte 0x5
          .byte 0xf5
          .byte 0xd5
          .byte 0x3f
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x82
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x74
          .byte 0x40
          .byte 0x1f
          .byte 0x9d
          .byte 0xba
          .byte 0xf2
          .byte 0x59
          .byte 0x9e
          .byte 0xcf
          .byte 0x3f
          .byte 0x76
          .byte 0x71
          .byte 0x1b
          .byte 0xd
          .byte 0xe0
          .byte 0x2d
          .byte 0xd6
          .byte 0x3f
          .byte 0x91
          .byte 0xf
          .byte 0x7a
          .byte 0x36
          .byte 0xab
          .byte 0xbe
          .byte 0x3
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x75
          .byte 0x40
          .byte 0xff
          .byte 0x9
          .byte 0x2e
          .byte 0x56
          .byte 0xd4
          .byte 0x60
          .byte 0xd0
          .byte 0x3f
          .byte 0x58
          .byte 0xff
          .byte 0xe7
          .byte 0x30
          .byte 0x5f
          .byte 0x5e
          .byte 0xd6
          .byte 0x3f
          .byte 0xbc
          .byte 0x96
          .byte 0x90
          .byte 0xf
          .byte 0x7a
          .byte 0xb6
          .byte 0x7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x77
          .byte 0x40
          .byte 0x4c
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0xe5
          .byte 0xd0
          .byte 0x3f
          .byte 0xba
          .byte 0x49
          .byte 0xc
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0xd6
          .byte 0x3f
          .byte 0xbb
          .byte 0x27
          .byte 0xf
          .byte 0xb
          .byte 0xb5
          .byte 0xa6
          .byte 0xc
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x40
          .byte 0x96
          .byte 0x4
          .byte 0xa8
          .byte 0xa9
          .byte 0x65
          .byte 0x6b
          .byte 0xd1
          .byte 0x3f
          .byte 0x7e
          .byte 0xa9
          .byte 0x9f
          .byte 0x37
          .byte 0x15
          .byte 0xa9
          .byte 0xd6
          .byte 0x3f
          .byte 0x15
          .byte 0x8c
          .byte 0x4a
          .byte 0xea
          .byte 0x4
          .byte 0x74
          .byte 0x11
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x7a
          .byte 0x40
          .byte 0x35
          .byte 0x7
          .byte 0x8
          .byte 0xe6
          .byte 0xe8
          .byte 0xf1
          .byte 0xd1
          .byte 0x3f
          .byte 0x85
          .byte 0x77
          .byte 0xb9
          .byte 0x88
          .byte 0xef
          .byte 0xc4
          .byte 0xd6
          .byte 0x3f
          .byte 0x53
          .byte 0x5
          .byte 0xa3
          .byte 0x92
          .byte 0x3a
          .byte 0x81
          .byte 0x15
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x7c
          .byte 0x40
          .byte 0x29
          .byte 0x3f
          .byte 0xa9
          .byte 0xf6
          .byte 0xe9
          .byte 0x78
          .byte 0xd2
          .byte 0x3f
          .byte 0xec
          .byte 0xfa
          .byte 0x5
          .byte 0xbb
          .byte 0x61
          .byte 0xdb
          .byte 0xd6
          .byte 0x3f
          .byte 0xba
          .byte 0x6b
          .byte 0x9
          .byte 0xf9
          .byte 0xa0
          .byte 0xe7
          .byte 0x1a
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x7d
          .byte 0x40
          .byte 0x8f
          .byte 0x53
          .byte 0x74
          .byte 0x24
          .byte 0x97
          .byte 0xff
          .byte 0xd2
          .byte 0x3f
          .byte 0x93
          .byte 0x8c
          .byte 0x9c
          .byte 0x85
          .byte 0x3d
          .byte 0xed
          .byte 0xd6
          .byte 0x3f
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0xe5
          .byte 0x30
          .byte 0x21
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x40
          .byte 0x67
          .byte 0x44
          .byte 0x69
          .byte 0x6f
          .byte 0xf0
          .byte 0x85
          .byte 0xd3
          .byte 0x3f
          .byte 0xd0
          .byte 0x61
          .byte 0xbe
          .byte 0xbc
          .byte 0x0
          .byte 0xfb
          .byte 0xd6
          .byte 0x3f
          .byte 0xd9
          .byte 0xce
          .byte 0xf7
          .byte 0x53
          .byte 0xe3
          .byte 0xa5
          .byte 0x26
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x80
          .byte 0x40
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0x78
          .byte 0xb
          .byte 0xd4
          .byte 0x3f
          .byte 0x30
          .byte 0x9e
          .byte 0x41
          .byte 0x43
          .byte 0xff
          .byte 0x4
          .byte 0xd7
          .byte 0x3f
          .byte 0xa8
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x2f
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x81
          .byte 0x40
          .byte 0xab
          .byte 0x9
          .byte 0xa2
          .byte 0xee
          .byte 0x3
          .byte 0x90
          .byte 0xd4
          .byte 0x3f
          .byte 0x95
          .byte 0x9a
          .byte 0x3d
          .byte 0xd0
          .byte 0xa
          .byte 0xc
          .byte 0xd7
          .byte 0x3f
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x53
          .byte 0x37
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x81
          .byte 0x40
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0x40
          .byte 0x6a
          .byte 0x13
          .byte 0xd5
          .byte 0x3f
          .byte 0x8d
          .byte 0x7a
          .byte 0x88
          .byte 0x46
          .byte 0x77
          .byte 0x10
          .byte 0xd7
          .byte 0x3f
          .byte 0xc3
          .byte 0xf5
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0x62
          .byte 0x44
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x82
          .byte 0x40
          .byte 0x68
          .byte 0xcb
          .byte 0xb9
          .byte 0x14
          .byte 0x57
          .byte 0x95
          .byte 0xd5
          .byte 0x3f
          .byte 0xa6
          .byte 0x61
          .byte 0xf8
          .byte 0x88
          .byte 0x98
          .byte 0x12
          .byte 0xd7
          .byte 0x3f
          .byte 0xcd
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0xcc
          .byte 0x1c
          .byte 0x5d
          .byte 0xc0
.L_40edc0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-81],AL
            add BYTE PTR [RAX],AL
# WARNING: found overlapping blocks at address eb88
.set .L_40edc8, . - 2

          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0xbb
          .byte 0x40
.L_40edd0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            int 205
          .byte 0x41
.L_40edd8:
          .byte 0x21
          .byte 0xb0
          .byte 0x72
          .byte 0x68
          .byte 0x91
          .byte 0x6d
          .byte 0x12
          .byte 0xc0
.L_40ede0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x2e
          .byte 0x41
.L_40ede8:
          .byte 0xe7
          .byte 0x8c
          .byte 0x28
          .byte 0xed
          .byte 0xd
          .byte 0xbe
          .byte 0x7
          .byte 0x40
.L_40edf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_40edf8:
          .byte 0x1e
          .byte 0xe1
          .byte 0xb4
          .byte 0xe0
          .byte 0x45
          .byte 0x5f
          .byte 0xb9
          .byte 0x3f
.L_40ee00:
          .byte 0x6b
          .byte 0xf2
          .byte 0x94
          .byte 0xd5
          .byte 0x74
          .byte 0x3d
          .byte 0xcf
          .byte 0x3f
.L_40ee08:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0xd8
          .byte 0x40
.L_40ee10:
          .byte 0x22
          .byte 0x8e
          .byte 0x75
          .byte 0x71
          .byte 0x1b
          .byte 0xd
          .byte 0x0
          .byte 0xc0
.L_40ee18:
          .byte 0x59
          .byte 0x86
          .byte 0x38
          .byte 0xd6
          .byte 0xc5
          .byte 0x6d
          .byte 0xfe
          .byte 0x3f
.L_40ee20:
          .byte 0x93
          .byte 0x0
          .byte 0x35
          .byte 0xb5
          .byte 0x6c
          .byte 0xad
          .byte 0xcf
          .byte 0x3f
.L_40ee28:
          .byte 0xf3
          .byte 0x2
          .byte 0xec
          .byte 0xa3
          .byte 0x53
          .byte 0x57
          .byte 0xce
          .byte 0x3f
.L_40ee30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
.L_40ee38:
          .byte 0xf6
          .byte 0x28
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x6
          .byte 0x40
.L_40ee40:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd1
          .byte 0x3f
.L_40ee48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40ee50:
          .byte 0x63
          .byte 0x7a
          .byte 0xc2
          .byte 0x12
          .byte 0xf
          .byte 0x28
          .byte 0xcf
          .byte 0xbf
.L_40ee58:
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0xd0
          .byte 0x3f
.L_40ee60:
          .byte 0x5c
          .byte 0xac
          .byte 0xa8
          .byte 0xc1
          .byte 0x34
          .byte 0xc
          .byte 0xc7
          .byte 0x3f
.L_40ee68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_40ee70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_40ee78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_40ee80:
          .byte 0x86
          .byte 0xc9
          .byte 0x54
          .byte 0xc1
          .byte 0xa8
          .byte 0xa4
          .byte 0xec
          .byte 0x3f
.L_40ee88:
          .byte 0xb1
          .byte 0xe1
          .byte 0xe9
          .byte 0x95
          .byte 0xb2
          .byte 0xc
          .byte 0xd1
          .byte 0x3f
.L_40ee90:
          .byte 0xf0
          .byte 0x85
          .byte 0xc9
          .byte 0x54
          .byte 0xc1
          .byte 0xa8
          .byte 0xc4
          .byte 0xbf
.L_40ee98:
          .byte 0xc4
          .byte 0xb1
          .byte 0x2e
          .byte 0x6e
          .byte 0xa3
.L_40ee9d:

            add EAX,EBP
            mov EDI,4191888081
            jle .L_40ef10
          .byte 0xfb
          .byte 0x3f
.L_40eea8:
          .byte 0x27
          .byte 0xc2
          .byte 0x86
          .byte 0xa7
          .byte 0x57
          .byte 0xca
          .byte 0xa2
          .byte 0x3f
.L_40eeb0:
          .byte 0x9
          .byte 0xf9
          .byte 0xa0
          .byte 0x67
          .byte 0xb3
          .byte 0xea
          .byte 0xa3
          .byte 0x3f
.L_40eeb8:
          .byte 0xf0
          .byte 0xa7
          .byte 0xc6
          .byte 0x4b
          .byte 0x37
          .byte 0x89
          .byte 0xb1
          .byte 0xbf
.L_40eec0:

            mov BH,98
            jg .L_40ee9d
          .byte 0x3d
          .byte 0x79
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eed0:

            shr ESI,16
            push RBX
            mov EBX,ESI
            and EBX,31
            call .L_40d450

            test EBX,EBX
            je .L_40ef10

            cmp EBX,EAX
            je .L_40ef10

            cmp EBX,30
            jne .L_40eef5

            cmp EAX,10
            mov EDX,1
            je .L_40ef15
.L_40eef5:

            cmp EBX,10
            sete CL
            xor EDX,EDX
            cmp EAX,30
            sete DL
            and EDX,ECX
            mov EAX,EDX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef10:

            mov EDX,1
.L_40ef15:

            mov EAX,EDX
            pop RBX
            ret 
.L_40ef19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef20:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,R8D
            mov RBX,RDI
            sub RSP,40
.L_40ef37:

            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+28],ECX
            call .L_423870

            test EBP,EBP
            je .L_40ef91

            xor R14D,R14D
            xor R13D,R13D
            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef60:

            mov EDX,R14D
            mov ESI,R13D
            add RDX,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RSP+8]
            add R12D,1
            mov R8D,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [RSP+28]
            mov RDI,RBX
            call QWORD PTR [RBX+256]

            add R13D,DWORD PTR [R15]
            add R14D,DWORD PTR [R15+4]
            cmp EBP,R12D
            jne .L_40ef60
.L_40ef91:

            add RSP,40
.L_40ef95:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40efa0:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RIP+.L_4114d8]
            ucomisd XMM1,XMM0
            jbe .L_40f004

            movsd XMM2,QWORD PTR [RDI+8]
            ucomisd XMM2,XMM0
            jbe .L_40f004

            movsd XMM3,QWORD PTR [RDI+16]
            movsd XMM4,QWORD PTR [RIP+.L_4114e0]
            ucomisd XMM3,XMM0
            ja .L_40efe4

            jmp .L_40f004
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40efd8:

            ucomisd XMM2,XMM0
            jbe .L_40eff6

            ucomisd XMM3,XMM0
            jbe .L_40eff6
.L_40efe4:

            divsd XMM1,XMM4
            divsd XMM2,XMM4
            ucomisd XMM1,XMM0
            divsd XMM3,XMM4
            ja .L_40efd8
.L_40eff6:

            movsd QWORD PTR [RDI],XMM1
            movsd QWORD PTR [RDI+8],XMM2
            movsd QWORD PTR [RDI+16],XMM3
.L_40f004:

            ret 
.L_40f006:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f010:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,16
.L_40f021:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+120]
            lea RSI,QWORD PTR [RSP+6]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            cmp WORD PTR [RSP+6],0
            jne .L_40f080

            mov RAX,QWORD PTR [RBX+112]
            mov RSI,R12
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]
.L_40f05d:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f0b8

            add RSP,16
.L_40f071:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f080:

            mov RDI,QWORD PTR [RBX+232]
            mov ESI,2
            call .L_406d40

            mov RDX,QWORD PTR [RBX+112]
            xor ECX,ECX
            mov EDI,DWORD PTR [RDX+12]
            xor EDX,EDX
            test EDI,EDI
            je .L_40f05d
.L_40f0a0:

            movzx ESI,WORD PTR [RAX+RDX*2]
            movzx EDX,CX
            add ECX,1
            mov WORD PTR [R12+RDX*2],SI
            movzx EDX,CX
            cmp EDX,EDI
            jb .L_40f0a0

            jmp .L_40f05d
.L_40f0b8:

            call __stack_chk_fail@PLT
.L_40f0bd:

            nop
            nop
            nop
.L_40f0c0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40f0da:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40f1e9

            lea RAX,QWORD PTR [RSP+80]
            lea R14,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f150:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40f1c7

            xor R13D,R13D
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f180:

            mov ECX,DWORD PTR [R13+8]
            mov RDX,RBP
            mov RSI,R14
            mov RDI,RBX
            add R15D,1
            call QWORD PTR [RBX+16]

            mov RBP,RAX
            mov RAX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP]
            mov RDI,R14
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            mov RDX,R12
            mov ECX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R15D
            mov R12,RAX
            jne .L_40f180

            mov R15,R13
.L_40f1c7:

            add DWORD PTR [RSP+16],1
            mov ESI,DWORD PTR [R15]
            mov EDI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],ESI
            add DWORD PTR [RSP+40],EDI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40f150
.L_40f1e9:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f20b

            add RSP,136
.L_40f200:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f20b:

            call __stack_chk_fail@PLT
.L_40f210:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40f22a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40f336

            lea RAX,QWORD PTR [RSP+80]
            lea R14,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f2a0:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40f314

            xor R13D,R13D
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f2d0:

            mov ECX,DWORD PTR [R13+8]
            mov RDX,RBP
            mov RSI,R14
            mov RDI,RBX
            add R15D,1
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [RSP]
            mov RSI,R14
            mov RDI,RBX
            mov RBP,RAX
            call .L_40f010

            mov RDX,R12
            mov ECX,DWORD PTR [R13+12]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R15D
            mov R12,RAX
            jne .L_40f2d0

            mov R15,R13
.L_40f314:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40f2a0
.L_40f336:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f358

            add RSP,136
.L_40f34d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f358:

            call __stack_chk_fail@PLT
.L_40f35d:

            nop
            nop
            nop
.L_40f360:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_40f377:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            je .L_40f44f

            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
            nop
            nop
            nop
            nop
            nop
.L_40f3d8:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40f431

            xor R14D,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f400:

            mov RDX,RBP
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            add R14D,1
            call QWORD PTR [RBX+16]

            mov RDX,R12
            mov RBP,RAX
            mov ECX,DWORD PTR [R15+12]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+12],R14D
            mov R12,RAX
            jne .L_40f400
.L_40f431:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40f3d8
.L_40f44f:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f46e

            add RSP,104
.L_40f463:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f46e:

            call __stack_chk_fail@PLT
.L_40f473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f480:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_40f49a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+44],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            je .L_40f56f

            lea R13,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+16],0
.L_40f500:

            mov EAX,DWORD PTR [RSP+12]
            mov EBP,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+40]
            add RBP,QWORD PTR [RSP+24]
            add R12,QWORD PTR [RSP+32]
            test EAX,EAX
            je .L_40f551

            xor R14D,R14D
            nop
            nop
.L_40f520:

            mov RDX,RBP
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            add R14D,1
            call QWORD PTR [RBX+32]

            mov RDX,R12
            mov RBP,RAX
            mov ECX,DWORD PTR [R15+12]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            cmp DWORD PTR [RSP+12],R14D
            mov R12,RAX
            jne .L_40f520
.L_40f551:

            add DWORD PTR [RSP+16],1
            mov EDX,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+20],EDX
            add DWORD PTR [RSP+40],ESI
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+44],EAX
            jne .L_40f500
.L_40f56f:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f591

            add RSP,136
.L_40f586:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f591:

            call __stack_chk_fail@PLT
.L_40f596:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f5a0:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R14,R9
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,232
.L_40f5ba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+20],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R15D,R15D
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            movaps XMMWORD PTR [RSP+144],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+192],XMM0
            je .L_40f75d

            lea RAX,QWORD PTR [RSP+144]
            lea R15,QWORD PTR [RSP+208]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f660:

            mov EAX,DWORD PTR [RSP+20]
            mov R12D,DWORD PTR [RSP+36]
            mov R13D,DWORD PTR [RSP+56]
            add R12,QWORD PTR [RSP+40]
            add R13,QWORD PTR [RSP+48]
            test EAX,EAX
            je .L_40f73b

            lea RAX,QWORD PTR [RSP+80]
            xor EBP,EBP
            movss XMM0,DWORD PTR [RIP+.L_411508]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
.L_40f6a0:

            mov RDX,R12
            movss DWORD PTR [RSP+16],XMM0
            mov ECX,DWORD PTR [R14+8]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call QWORD PTR [RBX+32]

            mov RDX,QWORD PTR [RBX+120]
            mov R12,RAX
            movss XMM0,DWORD PTR [RSP+16]
            test RDX,RDX
            je .L_40f788

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP]
            call .L_431130

            pxor XMM2,XMM2
            mov RAX,QWORD PTR [RSP+8]
            movss XMM1,DWORD PTR [RSP+76]
            movss XMM0,DWORD PTR [RSP+16]
            ucomiss XMM1,XMM2
            jbe .L_40f788

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f700:

            movss DWORD PTR [RAX],XMM0
            add RAX,4
            cmp R15,RAX
            jne .L_40f700
.L_40f70d:

            movss DWORD PTR [RSP+16],XMM0
            mov RDX,R13
            mov ECX,DWORD PTR [R14+12]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            call QWORD PTR [RBX+40]

            cmp DWORD PTR [RSP+20],EBP
            mov R13,RAX
            movss XMM0,DWORD PTR [RSP+16]
            jne .L_40f6a0
.L_40f73b:

            add DWORD PTR [RSP+32],1
            mov ESI,DWORD PTR [R14]
            mov EDI,DWORD PTR [R14+4]
            add DWORD PTR [RSP+36],ESI
            add DWORD PTR [RSP+56],EDI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40f660
.L_40f75d:

            mov RAX,QWORD PTR [RSP+216]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f7ab

            add RSP,232
.L_40f777:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f788:

            mov RDX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP+8]
            movss DWORD PTR [RSP+16],XMM0
            mov RDI,QWORD PTR [RSP]
            call .L_431130

            movss XMM0,DWORD PTR [RSP+16]
            jmp .L_40f70d
.L_40f7ab:

            call __stack_chk_fail@PLT
.L_40f7b0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,216
.L_40f7ca:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+176],XMM0
            je .L_40f9a2

            lea RAX,QWORD PTR [RSP+96]
            lea R13,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f880:

            mov EAX,DWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+36]
            add RAX,QWORD PTR [RSP+48]
            add R14,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_40f980

            xor EBP,EBP
            jmp .L_40f905
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f8b0:

            mov RAX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            xor RAX,QWORD PTR [R12+16]
            xor RDX,QWORD PTR [R12+24]
            or RDX,RAX
            jne .L_40f92e

            movdqa XMM0,XMMWORD PTR [RSP+160]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+176]
            movaps XMMWORD PTR [RSP+112],XMM0
.L_40f8e3:

            mov ECX,DWORD PTR [R15+12]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            mov RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+28],EBP
            mov QWORD PTR [RSP+8],RAX
            je .L_40f980
.L_40f905:

            mov RDX,R14
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [R13+8]
            mov R14,RAX
            xor RDX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R13]
            xor RAX,QWORD PTR [R12]
            or RDX,RAX
            je .L_40f8b0
.L_40f92e:

            mov RAX,QWORD PTR [RBX+112]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,R13
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+176],XMM0
            jmp .L_40f8e3
          .byte 0x66
          .byte 0x90
.L_40f980:

            add DWORD PTR [RSP+32],1
            mov EDI,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+36],EDI
            add DWORD PTR [RSP+56],ESI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40f880
.L_40f9a2:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f9c7

            add RSP,216
.L_40f9bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40f9c7:

            call __stack_chk_fail@PLT
.L_40f9cc:

            nop
            nop
            nop
            nop
.L_40f9d0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14D,R8D
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,216
.L_40f9ea:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+60],R8D
            call .L_423870

            pxor XMM0,XMM0
            test R14D,R14D
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+176],XMM0
            je .L_40fbc2

            lea RAX,QWORD PTR [RSP+96]
            lea R13,QWORD PTR [RSP+64]
            lea R12,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+56],0
            mov DWORD PTR [RSP+36],0
            mov DWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40faa0:

            mov EAX,DWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+36]
            add RAX,QWORD PTR [RSP+48]
            add R14,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_40fba0

            xor EBP,EBP
            jmp .L_40fb25
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fad0:

            mov RAX,QWORD PTR [R13+16]
            mov RDX,QWORD PTR [R13+24]
            xor RAX,QWORD PTR [R12+16]
            xor RDX,QWORD PTR [R12+24]
            or RDX,RAX
            jne .L_40fb4e

            movdqa XMM0,XMMWORD PTR [RSP+160]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+176]
            movaps XMMWORD PTR [RSP+112],XMM0
.L_40fb03:

            mov ECX,DWORD PTR [R15+12]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,RBX
            add EBP,1
            mov RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+24]

            cmp DWORD PTR [RSP+28],EBP
            mov QWORD PTR [RSP+8],RAX
            je .L_40fba0
.L_40fb25:

            mov RDX,R14
            mov ECX,DWORD PTR [R15+8]
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+16]

            mov RDX,QWORD PTR [R13+8]
            mov R14,RAX
            xor RDX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [R13]
            xor RAX,QWORD PTR [R12]
            or RDX,RAX
            je .L_40fad0
.L_40fb4e:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,R13
            mov RDI,RBX
            call .L_40f010

            movdqa XMM0,XMMWORD PTR [RSP+64]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+176],XMM0
            jmp .L_40fb03
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fba0:

            add DWORD PTR [RSP+32],1
            mov EDI,DWORD PTR [R15]
            mov ESI,DWORD PTR [R15+4]
            add DWORD PTR [RSP+36],EDI
            add DWORD PTR [RSP+56],ESI
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+60],EAX
            jne .L_40faa0
.L_40fbc2:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40fbe7

            add RSP,216
.L_40fbdc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40fbe7:

            call __stack_chk_fail@PLT
.L_40fbec:

            nop
            nop
            nop
            nop
.L_40fbf0:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_63ea00]
            mov RBX,RDI
            je .L_40fc04

            mov RAX,QWORD PTR [RSI+40]
.L_40fc04:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            mov RSI,RAX
            call .L_4261e0

            mov QWORD PTR [RBX+40],RAX
            pop RBX
            ret 
.L_40fc1b:

            nop
            nop
            nop
            nop
            nop
.L_40fc20:

            sub RSP,24
            mov ESI,3
            movsd QWORD PTR [RSP+8],XMM0
            call .L_406d40

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM1,QWORD PTR [RIP+.L_4114e8]
            jb .L_40fc4c

            movsd QWORD PTR [RAX],XMM1
.L_40fc4c:

            add RSP,24
            ret 
.L_40fc51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fc60:

            sub RSP,24
            xor EDI,EDI
            mov ESI,3
            movsd QWORD PTR [RSP+8],XMM0
            call .L_406d40

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM1,QWORD PTR [RIP+.L_4114e8]
            jb .L_40fc8e

            movsd QWORD PTR [RAX],XMM1
.L_40fc8e:

            add RSP,24
            ret 
.L_40fc93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fca0:

            push RBX
            mov RBX,RSI
            mov ESI,2
            call .L_406d40

            test RAX,RAX
            je .L_40fcc5

            movdqu XMM0,XMMWORD PTR [RBX]
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+16]
            movups XMMWORD PTR [RAX+16],XMM0
            pop RBX
            ret 
.L_40fcc5:

            lea RCX,QWORD PTR [RIP+.L_4114c0]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411248]
            mov EDX,97
            call __assert_fail@PLT
.L_40fce4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fcf0:

            push RBX
            mov RBX,RSI
            mov ESI,2
            call .L_406d40

            test RAX,RAX
            je .L_40fd15

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            pop RBX
            ret 
.L_40fd15:

            lea RCX,QWORD PTR [RIP+.L_4114a0]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411248]
            mov EDX,108
            call __assert_fail@PLT
.L_40fd34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fd40:

            test RDI,RDI
            je .L_40fd4f

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_40fca0
.L_40fd4f:

            lea RCX,QWORD PTR [RIP+.L_411480]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_4111b2]
            sub RSP,8
            mov EDX,115
            call __assert_fail@PLT
.L_40fd72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fd80:

            test RDI,RDI
            je .L_40fd8f

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_40fcf0
.L_40fd8f:

            lea RCX,QWORD PTR [RIP+.L_411460]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_4111cc]
            sub RSP,8
            mov EDX,122
            call __assert_fail@PLT
.L_40fdb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fdc0:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_63e9e0]
            mov RBX,RDI
            je .L_40fdd4

            mov RAX,QWORD PTR [RSI+32]
.L_40fdd4:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,32
            mov RSI,RAX
            call .L_4261e0

            mov QWORD PTR [RBX+32],RAX
            pop RBX
            ret 
.L_40fdeb:

            nop
            nop
            nop
            nop
            nop
.L_40fdf0:

            test RDI,RDI
            push RBX
.L_40fdf4:

            je .L_40fe71

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_40fe07

            call .L_431080
.L_40fe07:

            mov RDI,QWORD PTR [RBX+112]
            test RDI,RDI
            je .L_40fe15

            call .L_431080
.L_40fe15:

            mov RDI,QWORD PTR [RBX+128]
            test RDI,RDI
            je .L_40fe26

            call .L_4121b0
.L_40fe26:

            mov RDI,QWORD PTR [RBX+136]
            test RDI,RDI
            je .L_40fe37

            call .L_4121b0
.L_40fe37:

            mov RDI,QWORD PTR [RBX+200]
            test RDI,RDI
            je .L_40fe48

            call .L_412690
.L_40fe48:

            mov RSI,QWORD PTR [RBX+240]
            mov RDI,QWORD PTR [RBX+232]
            test RSI,RSI
            je .L_40fe68

            call QWORD PTR [RBX+248]

            mov RDI,QWORD PTR [RBX+232]
.L_40fe68:

            mov RSI,RBX
            pop RBX
.L_40fe6c:

            jmp .L_426070
.L_40fe71:

            lea RCX,QWORD PTR [RIP+.L_411440]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_4111e6]
            mov EDX,151
            call __assert_fail@PLT
.L_40fe90:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov ESI,13
            mov RBP,RCX
            mov R12,R8
            mov R13,R9
            sub RSP,56
.L_40feb2:

            mov DWORD PTR [RSP+44],EDX
            call .L_406d40

            mov ESI,264
            mov RDI,R14
            mov QWORD PTR [RSP+8],RAX
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_410245

            test R15,R15
            mov QWORD PTR [RAX+112],R15
            je .L_41003c

            mov RAX,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RBX+112]
            mov QWORD PTR [RSP+8],RAX
            test R15,R15
            je .L_410022

            lea RAX,QWORD PTR [RBX+248]
            lea RCX,QWORD PTR [RBX+240]
            lea RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R14
            mov RBX,R15
            mov QWORD PTR [RSP+16],RDX
            mov R15,RAX
            mov R14,RCX
            jmp .L_40ff3d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ff30:

            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            je .L_410018
.L_40ff3d:

            sub RSP,8
.L_40ff41:

            mov RSI,R14
            mov R9,R12
            push R13
            mov R8,RBP
            mov RCX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+32]
            mov RDX,R15
            call QWORD PTR [RBX]

            test EAX,EAX
            pop RCX
            pop RSI
.L_40ff5f:

            je .L_40ff30

            mov EAX,DWORD PTR [RBP]
            mov R15,RBX
            mov RBX,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+32]
            xor ECX,ECX
            xor EDX,EDX
            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [R12]
            mov RDI,R14
            mov QWORD PTR [RBX+232],R14
            mov DWORD PTR [RBX+4],EAX
            mov EAX,DWORD PTR [R13]
            mov DWORD PTR [RBX+208],EAX
            mov ESI,DWORD PTR [RBP]
            call .L_40b250

            mov ESI,DWORD PTR [R12]
            xor ECX,ECX
            mov EDX,1
            mov RDI,R14
            mov QWORD PTR [RBX+16],RAX
            call .L_40b250

            mov ESI,DWORD PTR [RBP]
            xor EDX,EDX
            mov ECX,1
            mov RDI,R14
            mov QWORD PTR [RBX+24],RAX
            call .L_40b250

            mov ESI,DWORD PTR [R12]
            mov EDX,1
            mov QWORD PTR [RBX+32],RAX
            mov ECX,1
            mov RDI,R14
            call .L_40b250

            mov EDX,DWORD PTR [R15+8]
            mov QWORD PTR [RBX+40],RAX
            test EDX,EDX
            je .L_410003

            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX+256],RAX
            lea RAX,QWORD PTR [RIP+.L_40ef20]
            mov QWORD PTR [RBX+8],RAX
.L_410003:

            add RSP,56
.L_410007:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410018:

            mov RBX,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+32]
.L_410022:

            mov EDX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+8]
            mov R9,R13
            mov R8,R12
            mov RCX,RBP
            mov RDI,R14
            call .L_420670
.L_41003c:

            mov EDI,DWORD PTR [RBP]
            call .L_40b390

            test EAX,EAX
            jne .L_410118
.L_41004c:

            mov ESI,DWORD PTR [RBP]
            test ESI,ESI
            jne .L_41005f

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_4101a0
.L_41005f:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R14
            call .L_40b250

            mov ESI,DWORD PTR [R12]
            xor ECX,ECX
            mov QWORD PTR [RBX+16],RAX
            mov EDX,1
            mov RDI,R14
            call .L_40b250

            cmp QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],RAX
            je .L_410220

            test RAX,RAX
            je .L_410220

            mov EDX,DWORD PTR [RBX]
            mov EAX,DWORD PTR [R13]
            and EDX,7
            je .L_4101e0

            cmp EDX,1
            jg .L_4101e0
.L_4100b2:

            test AH,2
            je .L_4100f0

            lea RAX,QWORD PTR [RIP+.L_40f360]
            mov QWORD PTR [RBX+8],RAX
.L_4100c2:

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [R12]
            mov DWORD PTR [RBX+4],EAX
            mov EAX,DWORD PTR [R13]
            mov QWORD PTR [RBX+232],R14
            mov QWORD PTR [RBX+240],0
            mov DWORD PTR [RBX+208],EAX
            jmp .L_410003
          .byte 0x90
.L_4100f0:

            mov EDX,EAX
            and EDX,4096
            test AL,64
            je .L_4101c8

            test EDX,EDX
            je .L_410200

            lea RAX,QWORD PTR [RIP+.L_40f210]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410118:

            mov EDI,DWORD PTR [R12]
            call .L_40b390

            test EAX,EAX
            je .L_41004c

            mov ESI,DWORD PTR [RBP]
            xor EDX,EDX
            mov ECX,1
            mov RDI,R14
            call .L_40b250

            mov ESI,DWORD PTR [R12]
            mov ECX,1
            mov EDX,1
            mov QWORD PTR [RBX+32],RAX
            mov RDI,R14
            call .L_40b250

            mov EDX,DWORD PTR [R13]
            mov QWORD PTR [RBX+40],RAX
            mov ECX,EDX
            or ECX,33554432
            cmp QWORD PTR [RBX+32],0
            mov DWORD PTR [R13],ECX
            je .L_410220

            test RAX,RAX
            je .L_410220

            and DH,2
            je .L_410210

            lea RAX,QWORD PTR [RIP+.L_40f480]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4101a0:

            mov EAX,DWORD PTR [R13]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+16],0
            or EAX,33554432
            mov DWORD PTR [R13],EAX
            jmp .L_4100b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4101c8:

            test EDX,EDX
            je .L_4101f0

            lea RAX,QWORD PTR [RIP+.L_40f9d0]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4101e0:

            or EAX,33554432
            mov DWORD PTR [R13],EAX
            jmp .L_4100b2
          .byte 0x66
          .byte 0x90
.L_4101f0:

            lea RAX,QWORD PTR [RIP+.L_40f7b0]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
.L_410200:

            lea RAX,QWORD PTR [RIP+.L_40f0c0]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
.L_410210:

            lea RAX,QWORD PTR [RIP+.L_40f5a0]
            mov QWORD PTR [RBX+8],RAX
            jmp .L_4100c2
.L_410220:

            lea RDX,QWORD PTR [RIP+.L_4111f9]
            mov ESI,8
            mov RDI,R14
            xor EAX,EAX
            call .L_426320

            mov RDI,RBX
            xor EBX,EBX
            call .L_40fdf0

            jmp .L_410003
.L_410245:

            mov RDI,R15
            call .L_431080

            jmp .L_410003
.L_410252:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410260:

            sub RSP,40
.L_410264:

            mov RAX,RDI
            mov R8D,1
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP],0
            mov RDI,RAX
            mov DWORD PTR [RSP+8],ECX
            mov DWORD PTR [RSP+12],ECX
            mov R9,RSP
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4102ab

            add RSP,40
.L_4102aa:

            ret 
.L_4102ab:

            call __stack_chk_fail@PLT
.L_4102b0:

            sub RSP,40
.L_4102b4:

            mov RAX,RDI
            mov DWORD PTR [RSP+8],R8D
            mov DWORD PTR [RSP+12],R8D
            mov R9,RSP
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov QWORD PTR [RSP],0
            mov RDI,RAX
            mov R8D,1
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4102fd

            add RSP,40
.L_4102fc:

            ret 
.L_4102fd:

            call __stack_chk_fail@PLT
.L_410302:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410310:

            sub RSP,40
.L_410314:

            mov RAX,RDI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDI
            xor EDI,EDI
            mov EDI,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP],R9D
            mov R9,RSP
            mov DWORD PTR [RSP+4],EDI
            mov EDI,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+8],EDI
            mov EDI,DWORD PTR [RSP+64]
            mov DWORD PTR [RSP+12],EDI
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_410361

            add RSP,40
.L_410360:

            ret 
.L_410361:

            call __stack_chk_fail@PLT
.L_410366:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410370:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_41037b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_4103f8

            mov RAX,QWORD PTR [RSI+120]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_410430

            xor EBP,EBP
            jmp .L_4103c1
.L_4103b0:

            mov RBX,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_410430
.L_4103c1:

            mov EDX,24
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_41040e

            test RBP,RBP
            mov QWORD PTR [RAX+16],0
            je .L_4103e4

            mov QWORD PTR [RBP+16],RAX
.L_4103e4:

            cmp QWORD PTR [RSP],0
            jne .L_4103b0

            mov QWORD PTR [RSP],RAX
            jmp .L_4103b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4103f8:

            lea RSI,QWORD PTR [RIP+.L_641ce0]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+120],RAX
.L_41040e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_410444

            add RSP,16
.L_410422:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410430:

            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+120],RAX
            jmp .L_41040e
.L_410444:

            call __stack_chk_fail@PLT
.L_410449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410450:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_410457:

            mov RBX,RSI
            mov ESI,13
            call .L_406d40

            test RBX,RBX
            mov R12,RAX
            je .L_4104c0

            cmp QWORD PTR [RBX+24],0
            je .L_4104b8

            mov ESI,24
            mov RDI,RBP
            call .L_406970

            test RAX,RAX
            je .L_4104b8

            xor EDX,EDX
            cmp DWORD PTR [RBX+4],2080
            setb DL
            mov DWORD PTR [RAX+8],EDX
            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [R12]
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [R12],RAX
            mov EAX,1
            pop RBX
.L_4104ad:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4104b8:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4104c0:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4104d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4104e0:

            test RDI,RDI
            je .L_4104f4

            mov QWORD PTR [RDI+240],RSI
            mov QWORD PTR [RDI+248],RDX
            ret 
.L_4104f4:

            lea RCX,QWORD PTR [RIP+.L_411420]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411213]
            sub RSP,8
            mov EDX,733
            call __assert_fail@PLT
.L_410517:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410520:

            test RDI,RDI
            je .L_41052d

            mov RAX,QWORD PTR [RDI+240]
            ret 
.L_41052d:

            lea RCX,QWORD PTR [RIP+.L_411400]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411213]
            sub RSP,8
            mov EDX,741
            call __assert_fail@PLT
.L_410550:

            test RDI,RDI
            je .L_41056f

            test RSI,RSI
            je .L_410561

            mov RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSI],RAX
.L_410561:

            test RDX,RDX
            je .L_41056d

            mov RAX,QWORD PTR [RDI+24]
            mov QWORD PTR [RDX],RAX
.L_41056d:

            ret 
.L_41056f:

            lea RCX,QWORD PTR [RIP+.L_4113e0]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411213]
            sub RSP,8
            mov EDX,748
            call __assert_fail@PLT
.L_410592:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4105a0:

            test RDI,RDI
            je .L_4105bf

            test RSI,RSI
            je .L_4105b1

            mov RAX,QWORD PTR [RDI+32]
            mov QWORD PTR [RSI],RAX
.L_4105b1:

            test RDX,RDX
            je .L_4105bd

            mov RAX,QWORD PTR [RDI+40]
            mov QWORD PTR [RDX],RAX
.L_4105bd:

            ret 
.L_4105bf:

            lea RCX,QWORD PTR [RIP+.L_4113c0]
            lea RSI,QWORD PTR [RIP+.L_4111a7]
            lea RDI,QWORD PTR [RIP+.L_411213]
            sub RSP,8
            mov EDX,755
            call __assert_fail@PLT
.L_4105e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4105f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_4105fe:

            mov EAX,DWORD PTR [RSP+160]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP+32],R9
            test AH,2
            jne .L_4107b0

            lea ECX,DWORD PTR [RSI-1]
            mov R13D,ESI
            mov RSI,QWORD PTR [RSP+8]
            mov RBP,RDX
            test AH,16
            mov QWORD PTR [RSP+40],RCX
            lea RDX,QWORD PTR [RSI+RCX*4]
            mov EBX,DWORD PTR [RDX]
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+56],EBX
            je .L_410657

            cmp QWORD PTR [RSP+128],0
            je .L_4107e0
.L_410657:

            mov EDI,DWORD PTR [RSP+144]
            call .L_40b390

            test EAX,EAX
            je .L_410770
.L_41066b:

            or DWORD PTR [RSP+160],64
.L_410673:

            test R13D,R13D
            jle .L_410740

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_410740

            call .L_403540

            mov EBX,EAX
            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+60],R13D
            mov R12D,EBX
            xor R15D,R15D
            mov R13D,EBX
            add RAX,1
            mov QWORD PTR [RSP+16],RAX
            jmp .L_410702
          .byte 0x66
          .byte 0x90
.L_4106b0:

            cmp R13D,1482250784
            mov RDI,R14
            setne CL
            cmp R13D,1281450528
            setne DL
            test CL,DL
            jne .L_410790

            cmp EAX,1818848875
            je .L_410790

            call .L_403520

            mov RDI,R14
            mov EBX,EAX
            call .L_403540

            mov R13D,EAX
.L_4106ec:

            test R15,R15
            cmove R12D,EBX
.L_4106f3:

            add R15,1
            cmp QWORD PTR [RSP+16],R15
            je .L_410830
.L_410702:

            mov R14,QWORD PTR [RBP+R15*8]
            test R14,R14
            je .L_410740

            mov RDI,R14
            call .L_403560

            cmp EAX,1852662636
            jne .L_4106b0

            cmp DWORD PTR [RSP+60],1
            mov RDI,R14
            je .L_410808

            call .L_403520

            mov EBX,826494034
            mov R13D,EAX
            jmp .L_4106ec
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410740:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_411270]
            mov ESI,4
            xor EAX,EAX
            xor R14D,R14D
            call .L_426320
.L_41075a:

            add RSP,72
.L_41075e:

            mov RAX,R14
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410770:

            mov EDI,DWORD PTR [RSP+152]
            call .L_40b390

            test EAX,EAX
            jne .L_41066b

            jmp .L_410673
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410790:

            call .L_403540

            mov RDI,R14
            mov EBX,EAX
            call .L_403520

            mov R13D,EAX
            jmp .L_4106ec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4107b0:

            lea RCX,QWORD PTR [RSP+144]
            lea R9,QWORD PTR [RSP+160]
            lea R8,QWORD PTR [RSP+152]
            xor EDX,EDX
            xor ESI,ESI
            call .L_40fe90

            mov R14,RAX
            jmp .L_41075a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4107e0:

            mov EDI,DWORD PTR [RSP+144]
            and AH,239
            mov DWORD PTR [RSP+160],EAX
            call .L_40b390

            test EAX,EAX
            jne .L_41066b

            jmp .L_410770
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410808:

            call .L_403540

            test R15,R15
            mov R13D,EAX
            jne .L_4106f3

            mov EBX,EAX
            mov R13D,DWORD PTR [RSP+60]
            mov R12D,826494034
            jmp .L_410838
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410830:

            mov EBX,R13D
            mov R13D,DWORD PTR [RSP+60]
.L_410838:

            mov ESI,DWORD PTR [RSP+144]
            mov EDI,R12D
            call .L_40eed0

            test EAX,EAX
            je .L_410be0

            mov ESI,DWORD PTR [RSP+152]
            mov EDI,EBX
            call .L_40eed0

            test EAX,EAX
            je .L_410c00

            sub RSP,8
.L_410869:

            mov RCX,RBP
            mov ESI,R13D
            mov EAX,DWORD PTR [RSP+168]
            push RAX
            mov R9,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+16]
            call .L_425780

            test RAX,RAX
            mov R14,RAX
            pop RCX
            pop RSI
.L_410898:

            je .L_410c20

            mov EDI,R12D
            call .L_40d760

            mov RDI,R14
            mov R15D,EAX
            call .L_431020

            cmp R15D,EAX
            jne .L_410a70

            mov EDI,EBX
            call .L_40d760

            mov RDI,R14
            mov R15D,EAX
            call .L_431050

            cmp R15D,EAX
            jne .L_410a70

            mov EDX,DWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RSP+144]
            lea R9,QWORD PTR [RSP+160]
            lea R8,QWORD PTR [RSP+152]
            mov RSI,R14
            call .L_40fe90

            test RAX,RAX
            mov R14,RAX
            je .L_41075a

            mov DWORD PTR [RAX+144],R12D
            mov DWORD PTR [RAX+148],EBX
            mov ESI,2004119668
            mov RAX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RBP]
            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [R14+224],EAX
            call .L_404240

            test RAX,RAX
            je .L_410ad0

            movsd XMM0,QWORD PTR [RAX]
            lea RDI,QWORD PTR [R14+152]
            movsd QWORD PTR [R14+152],XMM0
            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [R14+160],XMM0
            movsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [R14+168],XMM0
            call .L_40efa0
.L_410970:

            mov RAX,QWORD PTR [RSP+40]
            mov ESI,2004119668
            lea RBX,QWORD PTR [RBP+RAX*8]
            mov RDI,QWORD PTR [RBX]
            call .L_404240

            test RAX,RAX
            je .L_410aa0

            movsd XMM0,QWORD PTR [RAX]
            lea RDI,QWORD PTR [R14+176]
            movsd QWORD PTR [R14+176],XMM0
            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [R14+184],XMM0
            movsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [R14+192],XMM0
            call .L_40efa0
.L_4109c5:

            cmp QWORD PTR [RSP+128],0
            je .L_4109de

            test BYTE PTR [RSP+161],16
            jne .L_410b90
.L_4109de:

            mov RDI,QWORD PTR [RBP]
            mov ESI,1668051572
            call .L_402eb0

            test EAX,EAX
            jne .L_410b40
.L_4109f4:

            mov RDI,QWORD PTR [RBX]
            call .L_403560

            cmp EAX,1818848875
            je .L_410b00

            mov RDI,QWORD PTR [RBX]
            mov ESI,1668051572
            call .L_402eb0

            test EAX,EAX
            jne .L_410bd0
.L_410a1c:

            mov EAX,DWORD PTR [RSP+160]
            test AL,128
            jne .L_410b68

            mov QWORD PTR [R14+200],0
.L_410a36:

            test AL,64
            jne .L_41075a

            pxor XMM0,XMM0
            lea RDI,QWORD PTR [R14+48]
            lea RSI,QWORD PTR [R14+80]
            movups XMMWORD PTR [R14+48],XMM0
            movups XMMWORD PTR [RDI+16],XMM0
            cmp QWORD PTR [R14+120],0
            jne .L_410c3c

            mov RAX,QWORD PTR [R14+112]
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]

            jmp .L_41075a
          .byte 0x66
          .byte 0x90
.L_410a70:

            mov RDI,R14
            xor R14D,R14D
            call .L_431080

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4112e8]
            mov ESI,13
            xor EAX,EAX
            call .L_426320

            jmp .L_41075a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410aa0:

            mov RAX,QWORD PTR [RIP+.L_4114f0]
            mov QWORD PTR [R14+176],RAX
            mov RAX,QWORD PTR [RIP+.L_4114f8]
            mov QWORD PTR [R14+184],RAX
            mov RAX,QWORD PTR [RIP+.L_411500]
            mov QWORD PTR [R14+192],RAX
            jmp .L_4109c5

            nop
.L_410ad0:

            mov RAX,QWORD PTR [RIP+.L_4114f0]
            mov QWORD PTR [R14+152],RAX
            mov RAX,QWORD PTR [RIP+.L_4114f8]
            mov QWORD PTR [R14+160],RAX
            mov RAX,QWORD PTR [RIP+.L_411500]
            mov QWORD PTR [R14+168],RAX
            jmp .L_410970
          .byte 0x90
.L_410b00:

            mov RDI,QWORD PTR [RBX]
            mov ESI,1668050804
            call .L_402eb0

            test EAX,EAX
            mov ESI,1668050804
            je .L_410a1c
.L_410b1a:

            mov RDI,QWORD PTR [RBX]
            call .L_404240

            mov RDI,RAX
            call .L_412200

            mov QWORD PTR [R14+136],RAX
            jmp .L_410a1c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410b40:

            mov RDI,QWORD PTR [RBP]
            mov ESI,1668051572
            call .L_404240

            mov RDI,RAX
            call .L_412200

            mov QWORD PTR [R14+128],RAX
            jmp .L_4109f4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410b68:

            mov RDI,QWORD PTR [RSP]
            mov RDX,RBP
            mov ESI,R13D
            call .L_42e920

            mov QWORD PTR [R14+200],RAX
            mov EAX,DWORD PTR [RSP+160]
            jmp .L_410a36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410b90:

            sub RSP,8
.L_410b94:

            mov RSI,RBP
            push QWORD PTR [RSP+136]
            mov R9D,DWORD PTR [RSP+152]
            mov R8,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            call .L_429730

            mov QWORD PTR [R14+120],RAX
            pop RAX
            pop RDX
            jmp .L_4109de
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410bd0:

            mov ESI,1668051572
            jmp .L_410b1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410be0:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_411298]
            mov ESI,9
            xor EAX,EAX
            xor R14D,R14D
            call .L_426320

            jmp .L_41075a
          .byte 0x90
.L_410c00:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4112c0]
            mov ESI,9
            xor R14D,R14D
            call .L_426320

            jmp .L_41075a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410c20:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_41122d]
            mov ESI,13
            xor EAX,EAX
            call .L_426320

            jmp .L_41075a
.L_410c3c:

            mov RDX,RSI
            mov RSI,RDI
            mov RDI,R14
            call .L_40f010

            jmp .L_41075a
.L_410c4f:

            nop
.L_410c50:

            push R15
            push R14
            mov EAX,EDX
            push R13
            push R12
            sub EAX,1
            push RBP
            push RBX
            sub RSP,4168
.L_410c66:

            mov DWORD PTR [RSP+28],EDX
            mov QWORD PTR [RSP+8],RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+4152],RDX
            xor EDX,EDX
            cmp EAX,254
            mov QWORD PTR [RSP+32],RSI
            mov DWORD PTR [RSP+40],ECX
            mov DWORD PTR [RSP+44],R8D
            ja .L_410d5c

            mov EBX,DWORD PTR [RSP+4224]
            lea RAX,QWORD PTR [RAX*4+4]
            lea R12,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+1072]
            lea R14,QWORD PTR [RSP+2096]
            mov R15D,R9D
            mov QWORD PTR [RSP+16],RAX
            xor EBP,EBP
            shr EBX,13
            and EBX,1
            nop
.L_410cd0:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,3
            mov DWORD PTR [R12+RBP*1],EBX
            mov DWORD PTR [R13+RBP*1],R15D
            call .L_406d40

            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [R14+RBP*2],XMM0
            add RBP,4
            cmp RBP,QWORD PTR [RSP+16]
            jne .L_410cd0

            sub RSP,8
.L_410d01:

            mov R9,R14
            mov R8,R13
            mov EAX,DWORD PTR [RSP+4232]
            mov RCX,R12
            push RAX
            mov EAX,DWORD PTR [RSP+60]
            push RAX
            mov EAX,DWORD PTR [RSP+64]
            push RAX
            push 0
            push 0
            mov RDX,QWORD PTR [RSP+80]
            mov ESI,DWORD PTR [RSP+76]
            mov RDI,QWORD PTR [RSP+56]
            call .L_4105f0

            add RSP,48
.L_410d37:

            mov RCX,QWORD PTR [RSP+4152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_410d77

            add RSP,4168
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_410d5c:

            mov ECX,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RIP+.L_411320]
            xor EAX,EAX
            mov ESI,2
            call .L_426320

            xor EAX,EAX
            jmp .L_410d37
.L_410d77:

            call __stack_chk_fail@PLT
.L_410d7c:

            nop
            nop
            nop
            nop
.L_410d80:

            push R15
            lea EAX,DWORD PTR [RSI-1]
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,8
            cmp EAX,254
            ja .L_410de0

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI]
            mov R12D,EDX
            mov R13D,ECX
            mov R14D,R8D
            mov R15D,R9D
            call .L_402de0

            sub RSP,8
            mov ECX,R12D
            mov EDX,EBX
            push R15
            mov R9D,R14D
            mov R8D,R13D
            mov RSI,RBP
            mov RDI,RAX
            call .L_410c50

            pop RDX
            pop RCX
.L_410dcf:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_410de0:

            lea RDX,QWORD PTR [RIP+.L_411320]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_426320

            xor EAX,EAX
            jmp .L_410dcf
.L_410dfb:

            nop
            nop
            nop
            nop
            nop
.L_410e00:

            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RCX
            setne AL
            mov RSI,RSP
            sub RSP,8
            add EAX,1
            mov ECX,DWORD PTR [RSP+56]
            push RCX
            mov ECX,EDX
            mov EDX,EAX
            call .L_410c50

            pop RDX
            pop RCX
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_410e54

            add RSP,40
            ret 
.L_410e54:

            call __stack_chk_fail@PLT
.L_410e59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410e60:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RDI
            mov R12D,ESI
            mov R14D,R8D
            sub RSP,40
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_402de0

            xor EDX,EDX
            test RBX,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+8],RBX
            setne DL
            mov RSI,RSP
            sub RSP,8
            add EDX,1
            mov ECX,R12D
            push R15
            mov R9D,R14D
            mov R8D,R13D
            mov RDI,RAX
            call .L_410c50

            pop RDX
            pop RCX
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_410ee4

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_410ee4:

            call __stack_chk_fail@PLT
.L_410ee9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410ef0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RDI
            mov R14D,R8D
            sub RSP,152
.L_410f0d:

            mov EBX,DWORD PTR [RSP+224]
            mov EBP,DWORD PTR [RSP+208]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EDX,DWORD PTR [RSP+216]
            mov QWORD PTR [RSP+64],RSI
            mov ESI,3
            mov EAX,EBX
            mov QWORD PTR [RSP+72],R9
            mov QWORD PTR [RSP+80],R9
            shr EAX,13
            mov QWORD PTR [RSP],R9
            mov QWORD PTR [RSP+88],RCX
            and EAX,1
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP+16],EBP
            mov DWORD PTR [RSP+20],EBP
            mov DWORD PTR [RSP+24],1
            mov DWORD PTR [RSP+28],EDX
            mov DWORD PTR [RSP+32],EAX
            mov DWORD PTR [RSP+36],EAX
            mov QWORD PTR [RSP+40],0
            call .L_406d40

            movsd XMM0,QWORD PTR [RAX]
            test BH,80
            mov R9,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+120],XMM0
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+104],XMM0
            movsd QWORD PTR [RSP+96],XMM0
            jne .L_411010

            mov RCX,QWORD PTR [RSP+8]
            xor EDX,EDX
            lea RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],R15
            mov R9D,EBP
            mov R8D,R14D
            mov RDI,R12
            test RCX,RCX
            mov QWORD PTR [RSP+56],RCX
            mov ECX,R13D
            setne DL
            sub RSP,8
.L_410fda:

            push RBX
            add EDX,1
            call .L_410c50

            pop RDX
            pop RCX
.L_410fe5:

            mov RDI,QWORD PTR [RSP+136]
            xor RDI,QWORD PTR FS:[40]
            jne .L_411047

            add RSP,152
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411010:

            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+64]
            sub RSP,8
            push RBX
            push R14
            mov ESI,4
            push R13
            push 1
            mov RDI,R12
            push R9
            lea R9,QWORD PTR [RSP+144]
            lea R8,QWORD PTR [RSP+64]
            call .L_4105f0

            add RSP,48
            jmp .L_410fe5
.L_411047:

            call __stack_chk_fail@PLT
.L_41104c:

            nop
            nop
            nop
            nop
.L_411050:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov R12,RDX
            mov R14,R8
            sub RSP,8
            call .L_402de0

            sub RSP,8
            mov R9,R14
            mov R8D,R13D
            mov EDX,DWORD PTR [RSP+80]
            mov RCX,R12
            mov RSI,RBX
            mov RDI,RAX
            push RDX
            mov EDX,DWORD PTR [RSP+80]
            push RDX
            push R15
            mov EDX,EBP
            call .L_410ef0

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4110a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4110b0:

            test RDI,RDI
            je .L_4110c0

            mov RAX,QWORD PTR [RDI+232]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4110c0:

            xor EAX,EAX
            ret 
.L_4110c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4110d0:

            xor EAX,EAX
            test RDI,RDI
            je .L_4110d9

            mov EAX,DWORD PTR [RDI]
.L_4110d9:

            ret 
.L_4110db:

            nop
            nop
            nop
            nop
            nop
.L_4110e0:

            xor EAX,EAX
            test RDI,RDI
            je .L_4110ea

            mov EAX,DWORD PTR [RDI+4]
.L_4110ea:

            ret 
.L_4110ec:

            nop
            nop
            nop
            nop
.L_4110f0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4110fd:

            test BYTE PTR [RBX+211],2
            mov RDI,QWORD PTR [RDI+232]
            je .L_411160

            xor ECX,ECX
            mov EBP,EDX
            xor EDX,EDX
            mov R12D,ESI
            call .L_40b250

            mov RDI,QWORD PTR [RBX+232]
            mov R13,RAX
            xor ECX,ECX
            mov EDX,1
            mov ESI,EBP
            call .L_40b250

            test R13,R13
            je .L_411180

            test RAX,RAX
            je .L_411180

            mov DWORD PTR [RBX],R12D
            mov DWORD PTR [RBX+4],EBP
            mov QWORD PTR [RBX+16],R13
            mov QWORD PTR [RBX+24],RAX
            add RSP,8
.L_41114f:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411160:

            lea RDX,QWORD PTR [RIP+.L_411358]
            xor EAX,EAX
            mov ESI,13
            call .L_426320

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_411180:

            mov RDI,QWORD PTR [RBX+232]
            lea RDX,QWORD PTR [RIP+.L_4111f9]
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4111a7:
          .string "cmsxform.c"
.L_4111b2:
          .string "(NewAlarm != ((void *)0))"
.L_4111cc:
          .string "(OldAlarm != ((void *)0))"
.L_4111e6:
          .string "(p != ((void *)0))"
.L_4111f9:
          .string "Unsupported raster format"
.L_411213:
          .string "(CMMcargo != ((void *)0))"
.L_41122d:
          .string "Couldn\'t link the profiles"
.L_411248:
          .string "(ContextAlarmCodes != ((void *)0))"
          .zero 5
.L_411270:
          .string "NULL input profiles on transform"
          .zero 7
.L_411298:
          .string "Wrong input color space on transform"
          .zero 3
.L_4112c0:
          .string "Wrong output color space on transform"
          .zero 2
.L_4112e8:
          .string "Channel count doesn\'t match. Profile is corrupted"
          .zero 6
.L_411320:
          .string "Wrong number of profiles. 1..255 expected, %d found."
          .zero 3
.L_411358:
          .string "cmsChangeBuffersFormat works only on transforms created originally with at least 16 bits of precision"
          .byte 0x66
          .byte 0x90
.L_4113c0:
          .string "_cmsGetTransformFormattersFloat"
.L_4113e0:
          .string "_cmsGetTransformFormatters16"
          .zero 3
.L_411400:
          .string "_cmsGetTransformUserData"
          .zero 7
.L_411420:
          .string "_cmsSetTransformUserData"
          .zero 7
.L_411440:
          .string "cmsDeleteTransform"
          .zero 13
.L_411460:
          .string "cmsGetAlarmCodes"
          .zero 15
.L_411480:
          .string "cmsSetAlarmCodes"
          .zero 15
.L_4114a0:
          .string "cmsGetAlarmCodesTHR"
          .zero 12
.L_4114c0:
          .string "cmsSetAlarmCodesTHR"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4114d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_4114e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_4114e8:
          .zero 8
.L_4114f0:
          .byte 0xd0
          .byte 0xb3
          .byte 0x59
          .byte 0xf5
          .byte 0xb9
          .byte 0xda
          .byte 0xee
          .byte 0x3f
.L_4114f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_411500:
          .byte 0x84
          .byte 0xd
          .byte 0x4f
          .byte 0xaf
          .byte 0x94
          .byte 0x65
          .byte 0xea
          .byte 0x3f
.L_411508:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xbf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411510:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDX+48]
            movsd XMM1,QWORD PTR [RIP+.L_412b90]
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_412b98]
            ucomisd XMM2,XMM0
            jae .L_4115e8

            ucomisd XMM0,XMM1
            mov EDX,65535
            mov ECX,4294967295
            jb .L_4115a8
.L_41154e:

            cmp DWORD PTR [RAX],EDX
            jbe .L_4115cb
.L_411552:

            mov EDX,DWORD PTR [RAX+8]
            test EDX,EDX
            je .L_4115f8

            movzx ECX,CX
            imul RCX,RCX,294
            add RCX,QWORD PTR [RAX+80]
            lea EAX,DWORD PTR [RDX-1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
.L_411578:

            movzx EAX,WORD PTR [RCX+RDX*1+262]
            pxor XMM0,XMM0
            pxor XMM3,XMM3
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSI+RDX*2],XMM3
            add RDX,2
            cmp RDI,RDX
            jne .L_411578

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4115a8:

            subsd XMM0,QWORD PTR [RIP+.L_412ba0]
            addsd XMM0,QWORD PTR [RIP+.L_433250-132776]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
            movzx EDX,CX
            cmp DWORD PTR [RAX],EDX
            ja .L_411552
.L_4115cb:

            mov RDI,QWORD PTR [RAX+88]
            lea RDX,QWORD PTR [RIP+.L_412ae8]
            movzx ECX,CX
            mov ESI,2
            xor EAX,EAX
            jmp .L_426320
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4115e8:

            xor EDX,EDX
            xor ECX,ECX
            jmp .L_41154e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4115f8:

            ret 
.L_4115fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411600:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDX+48]
            movsd XMM1,QWORD PTR [RIP+.L_412b90]
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_412b98]
            ucomisd XMM2,XMM0
            jae .L_411700

            ucomisd XMM0,XMM1
            mov EDX,65535
            mov ECX,4294967295
            jb .L_4116b8
.L_41163e:

            cmp DWORD PTR [RAX],EDX
            jbe .L_4116df
.L_411646:

            movzx ECX,CX
            pxor XMM0,XMM0
            imul RCX,RCX,294
            pxor XMM3,XMM3
            add RCX,QWORD PTR [RAX+80]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            movzx EAX,WORD PTR [RCX+256]
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RCX+258]
            divsd XMM0,XMM1
            cvtsd2ss XMM3,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movzx EAX,WORD PTR [RCX+260]
            movss DWORD PTR [RSI],XMM3
            divsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movss DWORD PTR [RSI+4],XMM4
            divsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RSI+8],XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4116b8:

            subsd XMM0,QWORD PTR [RIP+.L_412ba0]
            addsd XMM0,QWORD PTR [RIP+.L_433250-132776]
            movd ECX,XMM0
            sar ECX,16
            add CX,32767
            movzx EDX,CX
            cmp DWORD PTR [RAX],EDX
            ja .L_411646
.L_4116df:

            mov RDI,QWORD PTR [RAX+88]
            lea RDX,QWORD PTR [RIP+.L_412ae8]
            movzx ECX,CX
            mov ESI,2
            xor EAX,EAX
            jmp .L_426320
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411700:

            xor EDX,EDX
            xor ECX,ECX
            jmp .L_41163e
.L_411709:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411710:

            push RBP
            push RBX
.L_411712:

            mov EBX,DWORD PTR [RDI+12]
            mov RBP,QWORD PTR [RDI+16]
            test EBX,EBX
            je .L_411792

            mov RAX,RBP
            mov R11D,4294967295
            xor R10D,R10D
            jmp .L_41173d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411730:

            add R10D,1
            add RAX,12
            cmp EBX,R10D
            je .L_411780
.L_41173d:

            cmp WORD PTR [RAX],DX
            jne .L_411730

            cmp R11D,-1
            cmove R11D,R10D
            cmp WORD PTR [RAX+2],CX
            jne .L_411730

            test R8,R8
            je .L_411759

            mov WORD PTR [R8],DX
.L_411759:

            test R9,R9
            je .L_411766

            movzx EDX,WORD PTR [RAX+2]
            mov WORD PTR [R9],DX
.L_411766:

            test RSI,RSI
            je .L_411770

            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [RSI],EDX
.L_411770:

            mov EAX,DWORD PTR [RAX+4]
            add RAX,QWORD PTR [RDI+32]
            pop RBX
.L_411778:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411780:

            cmp R11D,-1
            je .L_411792

            movsxd R11,R11D
            lea RAX,QWORD PTR [R11+R11*2]
            lea RBP,QWORD PTR [RBP+RAX*4]
.L_411792:

            test R8,R8
            je .L_41179f

            movzx EAX,WORD PTR [RBP]
            mov WORD PTR [R8],AX
.L_41179f:

            test R9,R9
            je .L_4117ac

            movzx EAX,WORD PTR [RBP+2]
            mov WORD PTR [R9],AX
.L_4117ac:

            test RSI,RSI
            je .L_4117b6

            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSI],EAX
.L_4117b6:

            mov EAX,DWORD PTR [RBP+4]
            add RAX,QWORD PTR [RDI+32]
            pop RBX
            pop RBP
            ret 
.L_4117c0:

            test RDI,RDI
            je .L_4118f0

            push R15
            push R14
            mov R10D,ECX
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R14D,R8D
            mov R12D,R8D
            mov EBP,ECX
            mov R15D,ESI
            sub RSP,24
.L_4117e8:

            mov EDX,DWORD PTR [RDI+12]
            mov EAX,DWORD PTR [RDI+8]
            mov RBX,RDI
            cmp EDX,EAX
            jae .L_4118f8
.L_4117f9:

            test EDX,EDX
            je .L_411848

            mov RAX,QWORD PTR [RBX+16]
            xor R9D,R9D
            jmp .L_41181d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411810:

            add R9D,1
            add RAX,12
            cmp R9D,EDX
            je .L_411848
.L_41181d:

            cmp R14W,WORD PTR [RAX+2]
            jne .L_411810

            cmp R10W,WORD PTR [RAX]
            jne .L_411810

            test R9D,R9D
            js .L_411848

            nop
.L_411830:

            xor EAX,EAX
.L_411832:

            add RSP,24
.L_411836:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411848:

            mov R14D,DWORD PTR [RBX+24]
            mov ECX,DWORD PTR [RBX+28]
            mov EAX,R14D
            sub EAX,ECX
            cmp R15D,EAX
            jbe .L_41193f
.L_41185d:

            test R14D,R14D
            je .L_411870

            lea EAX,DWORD PTR [R14+R14*1]
            cmp R14D,EAX
            ja .L_411830

            mov R14D,EAX
            jmp .L_411876
.L_411870:

            mov R14D,256
.L_411876:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBX]
            mov EDX,R14D
            call .L_426040

            test RAX,RAX
            je .L_411830

            mov ECX,DWORD PTR [RBX+28]
            mov EDX,R14D
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RBX+24],R14D
            sub EDX,ECX
            cmp R15D,EDX
            ja .L_41185d
.L_41189f:

            mov EDI,ECX
            mov EDX,R15D
            mov RSI,R13
            add RDI,RAX
            mov DWORD PTR [RSP+8],ECX
            call memmove@PLT

            mov EDX,DWORD PTR [RBX+12]
            mov ECX,DWORD PTR [RSP+8]
            add DWORD PTR [RBX+28],R15D
            mov RAX,RDX
            lea RSI,QWORD PTR [RDX+RDX*2]
            mov RDX,QWORD PTR [RBX+16]
            add EAX,1
            lea RDX,QWORD PTR [RDX+RSI*4]
            mov DWORD PTR [RDX+4],ECX
            mov DWORD PTR [RDX+8],R15D
            mov WORD PTR [RDX+2],R12W
            mov WORD PTR [RDX],BP
            mov DWORD PTR [RBX+12],EAX
            mov EAX,1
            jmp .L_411832
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4118f0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4118f8:

            test EAX,EAX
            js .L_411830

            lea ECX,DWORD PTR [RAX+RAX*1]
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            mov DWORD PTR [RSP+12],R10D
            lea EDX,DWORD PTR [RCX+RAX*4]
            mov DWORD PTR [RSP+8],ECX
            shl EDX,2
            call .L_426040

            test RAX,RAX
            je .L_411830

            mov ECX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+16],RAX
            mov EDX,DWORD PTR [RBX+12]
            mov R10D,DWORD PTR [RSP+12]
            mov DWORD PTR [RBX+8],ECX
            jmp .L_4117f9
.L_41193f:

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_411830

            jmp .L_41189f
.L_411951:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411960:

            test RDI,RDI
            je .L_4119e8

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EBP,DWORD PTR [RDI+4]
            mov RSI,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RDI+88]
            test EBP,EBP
            je .L_4119b0

            add EBP,EBP
            cmp EBP,102400
            ja .L_4119d0

            imul EDX,EBP,294
            call .L_426040

            test RAX,RAX
            je .L_4119c4
.L_41199b:

            mov QWORD PTR [RBX+80],RAX
            mov DWORD PTR [RBX+4],EBP
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_4119b0:

            mov EDX,18816
            mov EBP,64
            call .L_426040

            test RAX,RAX
            jne .L_41199b
.L_4119c4:

            xor EAX,EAX
.L_4119c6:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4119d0:

            call .L_426070

            mov QWORD PTR [RBX+80],0
            xor EAX,EAX
            jmp .L_4119c6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4119e8:

            xor EAX,EAX
            ret 
.L_4119eb:

            nop
            nop
            nop
            nop
            nop
.L_4119f0:

            mov ECX,DWORD PTR [RSI]
            test ECX,ECX
            je .L_411a20

            mov RAX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411a00:

            add RAX,4
            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jne .L_411a00

            sub RAX,RSI
            sar RAX,2
            lea EDX,DWORD PTR [RAX*4+4]
            jmp .L_426090
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411a20:

            mov EDX,4
            jmp .L_426090
.L_411a2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_411a30:

            push R12
            push RBP
            test ESI,ESI
            push RBX
.L_411a36:

            mov EBP,ESI
            mov EAX,2
            mov ESI,40
            cmove EBP,EAX
            mov R12,RDI
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_411a7a

            mov QWORD PTR [RAX],R12
            mov EDX,12
            mov ESI,EBP
            mov RDI,R12
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_411a88

            mov DWORD PTR [RBX+8],EBP
            mov DWORD PTR [RBX+12],0
.L_411a7a:

            mov RAX,RBX
            pop RBX
.L_411a7e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411a88:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_426070

            jmp .L_411a7a
.L_411a97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411aa0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RCX
            mov R13,RCX
            sub RSP,24
.L_411abd:

            call strlen@PLT

            movzx EDI,BYTE PTR [R12+1]
            mov RBX,RAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R12]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            test RBP,RBP
            je .L_411b80

            mov RDI,QWORD PTR [RBP]
            mov EDX,4
            mov ESI,EBX
            mov R15D,EAX
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_411b80

            test EBX,EBX
            je .L_411b43

            lea ECX,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
.L_411b30:

            movsx EDX,BYTE PTR [R13+RAX*1]
            mov DWORD PTR [R14+RAX*4],EDX
            add RAX,1
            cmp RCX,RAX
            jne .L_411b30
.L_411b43:

            lea ESI,DWORD PTR [RBX*4]
            movzx ECX,R12W
            movzx R8D,R15W
            mov RDX,R14
            mov RDI,RBP
            call .L_4117c0

            mov RDI,QWORD PTR [RBP]
            mov RSI,R14
            mov DWORD PTR [RSP+12],EAX
            call .L_426070

            mov EAX,DWORD PTR [RSP+12]
            add RSP,24
.L_411b75:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_411b80:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_411b91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ba0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RCX
            sub RSP,8
.L_411bb3:

            movzx EDI,BYTE PTR [RSI+1]
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            movzx EDI,BYTE PTR [R13+1]
            mov EBX,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R13]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            test R12,R12
            je .L_411c30

            test RBP,RBP
            je .L_411c30

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            je .L_411c40

            mov RSI,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c00:

            add RSI,4
            mov EDX,DWORD PTR [RSI]
            test EDX,EDX
            jne .L_411c00

            sub ESI,R12D
.L_411c0d:

            add RSP,8
.L_411c11:

            movzx ECX,BX
            mov RDX,R12
            pop RBX
            mov RDI,RBP
            movzx R8D,AX
            pop RBP
            pop R12
            pop R13
            jmp .L_4117c0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411c30:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411c40:

            xor ESI,ESI
            jmp .L_411c0d
.L_411c44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c50:

            test RDI,RDI
            je .L_411c90

            push RBX
            mov RSI,QWORD PTR [RDI+16]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RSI,RSI
            je .L_411c6d

            call .L_426070

            mov RDI,QWORD PTR [RBX]
.L_411c6d:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_411c7e

            call .L_426070

            mov RDI,QWORD PTR [RBX]
.L_411c7e:

            mov RSI,RBX
            pop RBX
            jmp .L_426070
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411c90:

            ret 
.L_411c92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ca0:

            push RBP
            push RBX
            sub RSP,8
.L_411ca6:

            test RDI,RDI
            je .L_411d0c

            mov ESI,DWORD PTR [RDI+12]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call .L_411a30

            test RAX,RAX
            mov RBP,RAX
            je .L_411d0c

            mov EAX,DWORD PTR [RBX+12]
            cmp DWORD PTR [RBP+8],EAX
            jb .L_411d04

            mov RDI,QWORD PTR [RBP+16]
            test RDI,RDI
            je .L_411d04

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_411d04

            lea RDX,QWORD PTR [RAX+RAX*2]
            shl RDX,2
            call memmove@PLT

            mov ESI,DWORD PTR [RBX+28]
            mov EAX,DWORD PTR [RBX+12]
            test ESI,ESI
            mov DWORD PTR [RBP+12],EAX
            jne .L_411d20

            mov QWORD PTR [RBP+32],0
            mov DWORD PTR [RBP+24],0
.L_411d04:

            mov RDI,RBP
            call .L_411c50
.L_411d0c:

            xor EBP,EBP
            add RSP,8
.L_411d12:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411d20:

            mov RDI,QWORD PTR [RBX]
            call .L_425fb0

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+32],RAX
            je .L_411d04

            mov EDX,DWORD PTR [RBX+28]
            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            mov DWORD PTR [RBP+24],EDX
            je .L_411d04

            call memmove@PLT

            mov EAX,DWORD PTR [RBX+28]
            mov DWORD PTR [RBP+28],EAX
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_411d58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411d60:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov EBP,R8D
            mov RBX,RCX
            sub RSP,16
.L_411d78:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            test R13,R13
            je .L_411dce

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_411df8
.L_411dce:

            xor EAX,EAX
.L_411dd0:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_411e77

            add RSP,16
.L_411de8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411df8:

            lea RSI,QWORD PTR [RSP+4]
            xor R9D,R9D
            xor R8D,R8D
            mov RDI,R13
            movzx ECX,AX
            movzx EDX,R12W
            call .L_411710

            test RAX,RAX
            mov RDI,RAX
            je .L_411dce

            mov ESI,DWORD PTR [RSP+4]
            shr ESI,2
            test RBX,RBX
            lea EAX,DWORD PTR [RSI+1]
            je .L_411dd0

            test EBP,EBP
            je .L_411dce

            lea EAX,DWORD PTR [RSI+1]
            cmp EAX,EBP
            ja .L_411e70
.L_411e34:

            test ESI,ESI
            je .L_411e5d

            lea R8D,DWORD PTR [RSI-1]
            xor EDX,EDX
            xor R9D,R9D
            add R8,1
            nop
            nop
            nop
.L_411e48:

            mov ECX,DWORD PTR [RDI+RDX*4]
            test ECX,ECX
            cmove ECX,R9D
            mov BYTE PTR [RBX+RDX*1],CL
            add RDX,1
            cmp R8,RDX
            jne .L_411e48
.L_411e5d:

            mov BYTE PTR [RBX+RSI*1],0
            jmp .L_411dd0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411e70:

            lea ESI,DWORD PTR [RBP-1]
            mov EAX,EBP
            jmp .L_411e34
.L_411e77:

            call __stack_chk_fail@PLT
.L_411e7c:

            nop
            nop
            nop
            nop
.L_411e80:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov EBP,R8D
            mov RBX,RCX
            sub RSP,16
.L_411e98:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            test R13,R13
            je .L_411eee

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_411f18
.L_411eee:

            xor EAX,EAX
.L_411ef0:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_411f8c

            add RSP,16
.L_411f08:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411f18:

            lea RSI,QWORD PTR [RSP+4]
            xor R9D,R9D
            xor R8D,R8D
            movzx ECX,AX
            movzx EDX,R12W
            mov RDI,R13
            call .L_411710

            test RAX,RAX
            je .L_411eee

            test RBX,RBX
            je .L_411f80

            test EBP,EBP
            je .L_411eee

            mov EDX,DWORD PTR [RSP+4]
            mov ECX,EBP
            lea RSI,QWORD PTR [RDX+4]
            mov R12,RDX
            cmp RCX,RSI
            jae .L_411f5c

            lea EDX,DWORD PTR [RBP-4]
            mov R12,RDX
            mov DWORD PTR [RSP+4],EDX
.L_411f5c:

            mov RSI,RAX
            mov RDI,RBX
            call memmove@PLT

            mov EAX,R12D
            shr EAX,2
            mov DWORD PTR [RBX+RAX*4],0
            lea EAX,DWORD PTR [R12+4]
            jmp .L_411ef0
          .byte 0x66
          .byte 0x90
.L_411f80:

            mov EAX,DWORD PTR [RSP+4]
            add EAX,4
            jmp .L_411ef0
.L_411f8c:

            call __stack_chk_fail@PLT
.L_411f91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411fa0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov RBP,RCX
            mov RBX,R8
            sub RSP,16
.L_411fb8:

            movzx EDI,BYTE PTR [RSI+1]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [RSI]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            movzx EDI,BYTE PTR [R14+1]
            mov R12D,EAX
            mov EAX,EDI
            movzx EDI,BYTE PTR [R14]
            shl EAX,8
            or EDI,EAX
            movzx EDI,DI
            call .L_405330

            test R13,R13
            je .L_412006

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            jne .L_412028
.L_412006:

            xor EAX,EAX
.L_412008:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41207c

            add RSP,16
.L_41201c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412028:

            lea R9,QWORD PTR [RSP+6]
            lea R8,QWORD PTR [RSP+4]
            xor ESI,ESI
            movzx ECX,AX
            movzx EDX,R12W
            mov RDI,R13
            call .L_411710

            test RAX,RAX
            je .L_412006

            movzx EDI,WORD PTR [RSP+4]
            call .L_405330

            movzx EDI,WORD PTR [RSP+6]
            mov BYTE PTR [RBP],AL
            movzx EAX,AH
            mov BYTE PTR [RBP+1],AL
            mov BYTE PTR [RBP+2],0
            call .L_405330

            mov BYTE PTR [RBX],AL
            movzx EAX,AH
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+1],AL
            mov EAX,1
            jmp .L_412008
.L_41207c:

            call __stack_chk_fail@PLT
.L_412081:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412090:

            xor EAX,EAX
            test RDI,RDI
            je .L_41209a

            mov EAX,DWORD PTR [RDI+12]
.L_41209a:

            ret 
.L_41209c:

            nop
            nop
            nop
            nop
.L_4120a0:

            xor EAX,EAX
            test RDI,RDI
            je .L_4120ac

            cmp DWORD PTR [RDI+12],ESI
            ja .L_4120b0
.L_4120ac:

            ret 
          .byte 0x66
          .byte 0x90
.L_4120b0:

            push R12
            mov ESI,ESI
            push RBP
            push RBX
.L_4120b6:

            mov RAX,QWORD PTR [RDI+16]
            mov RBX,RDX
            lea RDX,QWORD PTR [RSI+RSI*2]
            mov RBP,RCX
            lea R12,QWORD PTR [RAX+RDX*4]
            movzx EDI,WORD PTR [R12]
            call .L_405330

            mov BYTE PTR [RBX],AL
            movzx EAX,AH
            mov BYTE PTR [RBX+2],0
            mov BYTE PTR [RBX+1],AL
            movzx EDI,WORD PTR [R12+2]
            call .L_405330

            mov BYTE PTR [RBP],AL
            movzx EAX,AH
            mov BYTE PTR [RBP+2],0
            mov BYTE PTR [RBP+1],AL
            mov EAX,1
            pop RBX
.L_4120fc:

            pop RBP
            pop R12
            ret 
.L_412100:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,96
            mov R12,RDI
            mov R14,R8
            sub RSP,8
.L_412121:

            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_412187

            mov QWORD PTR [RAX+80],0
            mov DWORD PTR [RAX],0
            mov QWORD PTR [RAX+88],R12
            jmp .L_412154
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412148:

            mov RDI,RBX
            call .L_411960

            test EAX,EAX
            je .L_4121a0
.L_412154:

            cmp DWORD PTR [RBX+4],EBP
            jb .L_412148

            lea RDI,QWORD PTR [RBX+12]
            mov EDX,32
            mov RSI,R15
            call strncpy@PLT

            lea RDI,QWORD PTR [RBX+45]
            mov EDX,32
            mov RSI,R14
            call strncpy@PLT

            mov BYTE PTR [RBX+77],0
            mov BYTE PTR [RBX+44],0
            mov DWORD PTR [RBX+8],R13D
.L_412187:

            add RSP,8
.L_41218b:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4121a0:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_426070

            jmp .L_412187
.L_4121af:

            nop
.L_4121b0:

            test RDI,RDI
            je .L_4121e0

            push RBX
            mov RSI,QWORD PTR [RDI+80]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+88]
            test RSI,RSI
            je .L_4121cf

            call .L_426070

            mov RDI,QWORD PTR [RBX+88]
.L_4121cf:

            mov RSI,RBX
            pop RBX
            jmp .L_426070
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4121e0:

            ret 
.L_4121e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4121f0:

            mov RDI,QWORD PTR [RDI+48]
            jmp .L_4121b0
.L_4121f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412200:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41220a:

            test RDI,RDI
            je .L_4122b0

            mov RBP,RDI
            lea R12,QWORD PTR [RDI+45]
            lea R13,QWORD PTR [RDI+12]
            mov EDX,DWORD PTR [RDI+8]
            mov ESI,DWORD PTR [RBP]
            mov RDI,QWORD PTR [RDI+88]
            mov R8,R12
            mov RCX,R13
            call .L_412100

            test RAX,RAX
            mov RBX,RAX
            jne .L_41224c

            jmp .L_4122b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412240:

            mov RDI,RBX
            call .L_411960

            test EAX,EAX
            je .L_4122b0
.L_41224c:

            mov EAX,DWORD PTR [RBP+4]
            cmp DWORD PTR [RBX+4],EAX
            jb .L_412240

            lea RDI,QWORD PTR [RBX+12]
            mov RSI,R13
            mov EDX,33
            call memmove@PLT

            lea RDI,QWORD PTR [RBX+45]
            mov RSI,R12
            mov EDX,33
            call memmove@PLT

            mov EDX,DWORD PTR [RBP]
            mov EAX,DWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP+80]
            mov RDI,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+8],EAX
            imul RDX,RDX,294
            call memmove@PLT

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EAX
            add RSP,8
.L_41229c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4122b0:

            add RSP,8
            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4122c0:

            mov RDI,QWORD PTR [RDI+48]
            jmp .L_412200
.L_4122c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4122d0:

            test RDI,RDI
            je .L_412400

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBX,RCX
            mov RBP,RDI
            sub RSP,16
.L_4122ea:

            mov ECX,DWORD PTR [RDI]
            lea EAX,DWORD PTR [RCX+1]
            cmp EAX,DWORD PTR [RDI+4]
            ja .L_4123b0
.L_4122f8:

            mov EAX,DWORD PTR [RBP+8]
            mov EDI,ECX
            imul RDI,RDI,294
            add RDI,QWORD PTR [RBP+80]
            test EAX,EAX
            je .L_41233f

            sub EAX,1
            lea R9,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412320:

            xor R8D,R8D
            test RBX,RBX
            je .L_41232d

            movzx R8D,WORD PTR [RBX+RAX*1]
.L_41232d:

            mov WORD PTR [RDI+RAX*1+262],R8W
            add RAX,2
            cmp R9,RAX
            jne .L_412320
.L_41233f:

            test R12,R12
            je .L_4123e8

            movzx EAX,WORD PTR [R12]
            mov WORD PTR [RDI+256],AX
            movzx EAX,WORD PTR [R12+2]
            mov WORD PTR [RDI+258],AX
            movzx EAX,WORD PTR [R12+4]
.L_412367:

            test RSI,RSI
            mov WORD PTR [RDI+260],AX
            je .L_4123e0

            mov EDX,255
            call strncpy@PLT

            mov EAX,DWORD PTR [RBP]
            mov RCX,RAX
            imul RAX,RAX,294
            add RAX,QWORD PTR [RBP+80]
            mov BYTE PTR [RAX+255],0
.L_412395:

            add ECX,1
            mov EAX,1
            mov DWORD PTR [RBP],ECX
            add RSP,16
.L_4123a4:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4123b0:

            mov QWORD PTR [RSP+8],RSI
            call .L_411960

            test EAX,EAX
            je .L_4123d0

            mov ECX,DWORD PTR [RBP]
            mov RSI,QWORD PTR [RSP+8]
            jmp .L_4122f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4123d0:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4123e0:

            mov BYTE PTR [RDI],0
            jmp .L_412395
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4123e8:

            mov DWORD PTR [RDI+256],0
            xor EAX,EAX
            jmp .L_412367
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412400:

            xor EAX,EAX
            ret 
.L_412403:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412410:

            xor EAX,EAX
            test RDI,RDI
            je .L_412419

            mov EAX,DWORD PTR [RDI]
.L_412419:

            ret 
.L_41241b:

            nop
            nop
            nop
            nop
            nop
.L_412420:

            push R14
            push R13
            xor R13D,R13D
            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_41242e:

            je .L_4124e1

            cmp ESI,DWORD PTR [RDI]
            jae .L_4124e1

            test RDX,RDX
            mov RBP,R9
            mov R14,R8
            mov R13,RCX
            mov R12D,ESI
            mov RBX,RDI
            je .L_412465

            mov ESI,ESI
            imul RSI,RSI,294
            add RSI,QWORD PTR [RDI+80]
            mov RDI,RDX
            call strcpy@PLT
.L_412465:

            test R13,R13
            je .L_412476

            lea RSI,QWORD PTR [RBX+12]
            mov RDI,R13
            call strcpy@PLT
.L_412476:

            test R14,R14
            je .L_412487

            lea RSI,QWORD PTR [RBX+45]
            mov RDI,R14
            call strcpy@PLT
.L_412487:

            test RBP,RBP
            je .L_4124ae

            mov ESI,R12D
            mov EDX,6
            mov RDI,RBP
            imul RSI,RSI,294
            add RSI,QWORD PTR [RBX+80]
            add RSI,256
            call memmove@PLT
.L_4124ae:

            cmp QWORD PTR [RSP+48],0
            mov R13D,1
            je .L_4124e1

            mov ESI,R12D
            mov EDX,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RSP+48]
            imul RSI,RSI,294
            add RSI,QWORD PTR [RBX+80]
            add RDX,RDX
            add RSI,262
            call memmove@PLT
.L_4124e1:

            pop RBX
.L_4124e2:

            mov EAX,R13D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4124ed:

            nop
            nop
            nop
.L_4124f0:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_4124fb:

            je .L_412550

            mov R14D,DWORD PTR [RDI]
            test R14D,R14D
            jle .L_412550

            mov R13,RSI
            mov R12,RDI
            xor EBP,EBP
            xor EBX,EBX
            jmp .L_412527
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412518:

            add EBX,1
            add RBP,294
            cmp R14D,EBX
            je .L_412550
.L_412527:

            mov RSI,QWORD PTR [R12+80]
            mov RDI,R13
            add RSI,RBP
            call .L_425de0

            test EAX,EAX
            jne .L_412518

            mov EAX,EBX
            pop RBX
.L_41253e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412550:

            mov EBX,4294967295
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_412560:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
            call .L_412200

            test EBP,EBP
            lea R8,QWORD PTR [RIP+.L_411600]
            mov ECX,3
            jne .L_41258a

            mov ECX,DWORD PTR [RBX+8]
            lea R8,QWORD PTR [RIP+.L_411510]
.L_41258a:

            push RAX
            lea RAX,QWORD PTR [RIP+.L_4121f0]
            mov RDI,QWORD PTR [RBX+88]
            lea R9,QWORD PTR [RIP+.L_4122c0]
            mov EDX,1
            mov ESI,1852009504
            push RAX
            call .L_42f750

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_4125b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4125c0:

            mov RAX,QWORD PTR [RDI+112]
            mov RAX,QWORD PTR [RAX]
            cmp DWORD PTR [RAX+8],1852009504
            jne .L_4125d8

            mov RAX,QWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4125d8:

            xor EAX,EAX
            ret 
.L_4125db:

            nop
            nop
            nop
            nop
            nop
.L_4125e0:

            push R13
            push R12
            push RBP
            push RBX
            lea EBX,DWORD PTR [RSI-1]
            sub RSP,8
.L_4125ed:

            cmp EBX,254
            ja .L_412670

            mov R12D,ESI
            mov ESI,24
            mov R13,RDI
            call .L_425fe0

            test RAX,RAX
            mov RBP,RAX
            je .L_412670

            mov QWORD PTR [RAX+8],R13
            mov EDX,64
            mov ESI,R12D
            mov RDI,R13
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            mov DWORD PTR [RBP],R12D
            je .L_412680

            shl RBX,6
            lea RDX,QWORD PTR [RAX+40]
            lea RAX,QWORD PTR [RAX+RBX*1+104]
            nop
            nop
            nop
            nop
            nop
.L_412640:

            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+8],0
            add RDX,64
            mov QWORD PTR [RDX-48],0
            cmp RDX,RAX
            jne .L_412640
.L_412660:

            add RSP,8
.L_412664:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_412670:

            add RSP,8
            xor EBP,EBP
            pop RBX
            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            ret 
.L_412680:

            mov RSI,RBP
            mov RDI,R13
            xor EBP,EBP
            call .L_426070

            jmp .L_412660
.L_41268f:

            nop
.L_412690:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_412697:

            mov EAX,DWORD PTR [RDI]
            mov RSI,QWORD PTR [RDI+16]
            test EAX,EAX
            je .L_4126fc

            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_4126a8:

            mov EBX,EBP
            shl RBX,6
            lea RAX,QWORD PTR [RSI+RBX*1]
            mov RDI,QWORD PTR [RAX+40]
            test RDI,RDI
            je .L_4126c9

            call .L_411c50

            mov RSI,QWORD PTR [R12+16]
            lea RAX,QWORD PTR [RSI+RBX*1]
.L_4126c9:

            mov RDI,QWORD PTR [RAX+48]
            test RDI,RDI
            je .L_4126e0

            call .L_411c50

            mov RSI,QWORD PTR [R12+16]
            lea RAX,QWORD PTR [RSI+RBX*1]
.L_4126e0:

            mov RDI,QWORD PTR [RAX+56]
            test RDI,RDI
            je .L_4126f3

            call .L_411c50

            mov RSI,QWORD PTR [R12+16]
.L_4126f3:

            add EBP,1
            cmp DWORD PTR [R12],EBP
            ja .L_4126a8
.L_4126fc:

            test RSI,RSI
            mov RDI,QWORD PTR [R12+8]
            je .L_412710

            call .L_426070

            mov RDI,QWORD PTR [R12+8]
.L_412710:

            pop RBX
.L_412711:

            mov RSI,R12
            pop RBP
            pop R12
            jmp .L_426070
.L_41271c:

            nop
            nop
            nop
            nop
.L_412720:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41272b:

            je .L_412845

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov ESI,24
            call .L_425fb0

            test RAX,RAX
            mov R12,RAX
            je .L_412845

            mov RDI,QWORD PTR [RBP+8]
            mov ESI,DWORD PTR [RBP]
            mov EDX,64
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            je .L_41283d

            mov RDX,QWORD PTR [RBP+8]
            mov QWORD PTR [R12+8],RDX
            mov EDX,DWORD PTR [RBP]
            mov DWORD PTR [R12],EDX
            mov EDX,DWORD PTR [RBP]
            test EDX,EDX
            je .L_412831

            xor R13D,R13D
            jmp .L_412795
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412790:

            mov RAX,QWORD PTR [R12+16]
.L_412795:

            mov RDX,QWORD PTR [RBP+16]
            mov EBX,R13D
            add R13D,1
            shl RBX,6
            mov RDX,QWORD PTR [RDX+RBX*1+8]
            mov QWORD PTR [RAX+RBX*1+8],RDX
            mov RDX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [R12+16]
            add RDX,RBX
            mov ECX,DWORD PTR [RDX]
            add RAX,RBX
            mov DWORD PTR [RAX],ECX
            mov ECX,DWORD PTR [RDX+4]
            mov DWORD PTR [RAX+4],ECX
            movdqu XMM0,XMMWORD PTR [RDX+20]
            movups XMMWORD PTR [RAX+20],XMM0
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            add RAX,RBX
            add R14,RBX
            mov EDX,DWORD PTR [RAX+16]
            mov RDI,QWORD PTR [RAX+40]
            mov DWORD PTR [R14+16],EDX
            call .L_411ca0

            mov QWORD PTR [R14+40],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RAX+RBX*1+48]
            add R14,RBX
            call .L_411ca0

            mov QWORD PTR [R14+48],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [RAX+RBX*1+56]
            add R14,RBX
            call .L_411ca0

            cmp DWORD PTR [RBP],R13D
            mov QWORD PTR [R14+56],RAX
            ja .L_412790
.L_412831:

            pop RBX
.L_412832:

            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41283d:

            mov RDI,R12
            call .L_412690
.L_412845:

            xor R12D,R12D
            pop RBX
            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_412854:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412860:

            push RBX
            mov ESI,16
            mov RBX,RDI
            call .L_425fe0

            test RAX,RAX
            je .L_412877

            mov QWORD PTR [RAX+8],RBX
.L_412877:

            pop RBX
            ret 
.L_412879:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412880:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_412887:

            je .L_4128ff

            mov RBX,QWORD PTR [RDI]
            mov RBP,RDI
            test RBX,RBX
            je .L_4128ef

            nop
            nop
            nop
            nop
.L_412898:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_4128a6

            call .L_411c50
.L_4128a6:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_4128b4

            call .L_411c50
.L_4128b4:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_4128ca

            call .L_426070

            mov RDI,QWORD PTR [RBP+8]
.L_4128ca:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_4128dc

            call .L_426070

            mov RDI,QWORD PTR [RBP+8]
.L_4128dc:

            mov R12,QWORD PTR [RBX]
            mov RSI,RBX
            call .L_426070

            test R12,R12
            mov RBX,R12
            jne .L_412898
.L_4128ef:

            pop RBX
.L_4128f0:

            mov RDI,QWORD PTR [RBP+8]
            mov RSI,RBP
            pop RBP
            pop R12
            jmp .L_426070
.L_4128ff:

            lea RCX,QWORD PTR [RIP+.L_412b80]
            lea RSI,QWORD PTR [RIP+.L_412b07]
            lea RDI,QWORD PTR [RIP+.L_412b12]
            mov EDX,868
            call __assert_fail@PLT
.L_41291e:

            nop
            nop
.L_412920:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41292e:

            test RDI,RDI
            je .L_4129e4

            test RSI,RSI
            mov R12,RSI
            je .L_4129c5

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov ESI,40
            mov R13,RDX
            mov R15,RCX
            mov R14,R8
            call .L_425fe0

            mov RBX,RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_4129b6

            mov RDI,R15
            call .L_411ca0

            mov RDI,R14
            mov QWORD PTR [RBX+8],RAX
            call .L_411ca0

            mov RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+16],RAX
            mov RSI,R12
            call .L_4119f0

            mov QWORD PTR [RBX+24],RAX
            xor EAX,EAX
            test R13,R13
            je .L_4129a2

            mov RDI,QWORD PTR [RBP+8]
            mov RSI,R13
            call .L_4119f0
.L_4129a2:

            mov QWORD PTR [RBX+32],RAX
            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBP],RBX
            mov EAX,1
.L_4129b6:

            add RSP,8
.L_4129ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4129c5:

            lea RCX,QWORD PTR [RIP+.L_412b70]
            lea RSI,QWORD PTR [RIP+.L_412b07]
            lea RDI,QWORD PTR [RIP+.L_412b28]
            mov EDX,905
            call __assert_fail@PLT
.L_4129e4:

            lea RCX,QWORD PTR [RIP+.L_412b70]
            lea RSI,QWORD PTR [RIP+.L_412b07]
            lea RDI,QWORD PTR [RIP+.L_412b12]
            mov EDX,904
            call __assert_fail@PLT
.L_412a03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412a10:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_412a17:

            je .L_412a82

            mov R12,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov ESI,16
            mov RDI,R12
            call .L_425fe0

            test RAX,RAX
            mov RBP,RAX
            je .L_412a64

            mov QWORD PTR [RAX+8],R12
            jmp .L_412a5c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412a40:

            mov RCX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX+32]
            mov RDI,RBP
            mov RSI,QWORD PTR [RBX+24]
            mov R8,QWORD PTR [RBX+16]
            call .L_412920

            test EAX,EAX
            je .L_412a70
.L_412a5c:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_412a40
.L_412a64:

            mov RAX,RBP
            pop RBX
.L_412a68:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412a70:

            mov RDI,RBP
            xor EBP,EBP
            call .L_412880

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_412a82:

            lea RCX,QWORD PTR [RIP+.L_412b60]
            lea RSI,QWORD PTR [RIP+.L_412b07]
            lea RDI,QWORD PTR [RIP+.L_412b3e]
            mov EDX,929
            call __assert_fail@PLT
.L_412aa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ab0:

            test RDI,RDI
            je .L_412ac0

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ac0:

            xor EAX,EAX
            ret 
.L_412ac3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ad0:

            test RDI,RDI
            je .L_412ae0

            mov RAX,QWORD PTR [RDI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ae0:

            xor EAX,EAX
            ret 
.L_412ae3:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412ae8:
          .string "Color %d out of range; ignored"
.L_412b07:
          .string "cmsnamed.c"
.L_412b12:

            sub BYTE PTR [RCX+RBP*2+99],AH
            je .L_412b38
          .byte 0x21
          .byte 0x3d
          .byte 0x20
          .byte 0x28
          .byte 0x28
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x2a
          .byte 0x29
          .byte 0x30
          .byte 0x29
          .byte 0x29
          .byte 0x0
.L_412b28:
          .byte 0x28
          .byte 0x4e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x20
          .byte 0x21
          .byte 0x3d
          .byte 0x20
          .byte 0x28
          .byte 0x28
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
.L_412b38:

            sub CH,BYTE PTR [RCX]
            xor BYTE PTR [RCX],CH
            sub DWORD PTR [RAX],EAX
.L_412b3e:

            sub BYTE PTR [RDI+108],CH
          .byte 0x64
          .byte 0x5f
          .byte 0x64
          .byte 0x69
          .byte 0x63
          .byte 0x74
          .byte 0x20
          .byte 0x21
          .byte 0x3d
          .byte 0x20
          .byte 0x28
          .byte 0x28
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x2a
          .byte 0x29
          .byte 0x30
          .byte 0x29
          .byte 0x29
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412b60:
          .string "cmsDictDup"
          .zero 5
.L_412b70:
          .string "cmsDictAddEntry"
.L_412b80:
          .string "cmsDictFree"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412b90:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 76117
            out DX,EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne OFFSET .L_412bdf
# WARNING: found overlapping blocks at address 12958
.set .L_412b98, . - 8

.L_412ba0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sar BH,223
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_412bb0:

            movsd XMM2,QWORD PTR [RIP+.L_414e38]
            movzx EAX,WORD PTR [RDI]
            movzx ECX,WORD PTR [RDI+4]
            pxor XMM1,XMM1
            mulsd XMM2,QWORD PTR [RDX]
            movzx EDX,WORD PTR [RDI+2]
            pxor XMM0,XMM0
            add EDX,EAX
            add EDX,ECX
            cvtsi2sd XMM1,EDX
            movzx EDX,WORD PTR [RDI+6]
            cvtsi2sd XMM0,EDX
.L_412bdf:

            addsd XMM0,XMM1
            ucomisd XMM0,XMM2
            jbe .L_412ce0

            subsd XMM0,XMM2
            pxor XMM3,XMM3
            movapd XMM5,XMM3
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_414e30]
            movapd XMM2,XMM0
            subsd XMM2,XMM1
            maxsd XMM5,XMM2
            movapd XMM2,XMM5
.L_412c19:

            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_414e40]
            cvtsi2sd XMM0,EAX
            xor EAX,EAX
            mulsd XMM0,XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_412c4c

            ucomisd XMM0,QWORD PTR [RIP+.L_414e48]
            mov EAX,4294967295
            jb .L_412d20
.L_412c4c:

            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDI+2]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EAX
            xor EAX,EAX
            mulsd XMM1,XMM2
            addsd XMM1,XMM4
            ucomisd XMM3,XMM1
            jae .L_412c7a

            ucomisd XMM1,QWORD PTR [RIP+.L_414e48]
            mov EAX,4294967295
            jb .L_412cf8
.L_412c7a:

            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDI+4]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            xor EAX,EAX
            mulsd XMM0,XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_412cc4

            ucomisd XMM0,QWORD PTR [RIP+.L_414e48]
            mov EAX,4294967295
            jae .L_412cc4

            subsd XMM0,QWORD PTR [RIP+.L_414e50]
            addsd XMM0,QWORD PTR [RIP+.L_414e58]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_412cc4:

            mov WORD PTR [RSI+4],AX
            movzx EAX,WORD PTR [RDI+6]
            mov WORD PTR [RSI+6],AX
            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ce0:

            movsd XMM2,QWORD PTR [RIP+.L_414e30]
            pxor XMM3,XMM3
            jmp .L_412c19
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412cf8:

            subsd XMM1,QWORD PTR [RIP+.L_414e50]
            addsd XMM1,QWORD PTR [RIP+.L_414e58]
            movd EAX,XMM1
            sar EAX,16
            add AX,32767
            jmp .L_412c7a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412d20:

            subsd XMM0,QWORD PTR [RIP+.L_414e50]
            addsd XMM0,QWORD PTR [RIP+.L_414e58]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            jmp .L_412c4c
.L_412d40:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,8
.L_412d50:

            call .L_402de0

            mov ESI,1
            mov RBP,RAX
            mov RDI,RAX
            call .L_411a30

            mov RDI,RBP
            mov RBX,RAX
            mov ESI,1
            call .L_411a30

            test RBX,RBX
            mov RBP,RAX
            je .L_412d82

            test RAX,RAX
            jne .L_412da8
.L_412d82:

            xor R12D,R12D
            test RBX,RBX
            jne .L_412dc5
.L_412d8a:

            test RBP,RBP
            je .L_412d97

            mov RDI,RBP
            call .L_411c50
.L_412d97:

            add RSP,8
.L_412d9b:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412da8:

            lea RDX,QWORD PTR [RIP+.L_4147fb]
            lea RSI,QWORD PTR [RIP+.L_4147fe]
            mov RCX,R13
            mov RDI,RBX
            call .L_411ba0

            test EAX,EAX
            jne .L_412dd8
.L_412dc5:

            xor R12D,R12D
.L_412dc8:

            mov RDI,RBX
            call .L_411c50

            jmp .L_412d8a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412dd8:

            lea RCX,QWORD PTR [RIP+.L_414860]
            lea RDX,QWORD PTR [RIP+.L_4147fb]
            lea RSI,QWORD PTR [RIP+.L_4147fe]
            mov RDI,RBP
            call .L_411ba0

            test EAX,EAX
            je .L_412dc5

            mov RDX,RBX
            mov ESI,1684370275
            mov RDI,R12
            call .L_4045f0

            test EAX,EAX
            je .L_412dc5

            mov RDI,R12
            mov RDX,RBP
            mov ESI,1668313716
            xor R12D,R12D
            call .L_4045f0

            test EAX,EAX
            setne R12B
            jmp .L_412dc8
.L_412e28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e30:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            xor EBP,EBP
            sub RSP,8
.L_412e42:

            call .L_402de0

            mov ESI,1
            mov RDI,RAX
            call .L_4125e0

            test RAX,RAX
            je .L_412ec5

            mov RBX,RAX
            mov RAX,QWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RIP+.L_414c00]
            lea RCX,QWORD PTR [RIP+.L_414801]
            xor EBP,EBP
            mov RSI,RDX
            mov RDI,QWORD PTR [RAX+40]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov DWORD PTR [RAX+16],0
            call .L_411aa0

            mov RAX,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_414c00]
            mov RCX,R13
            mov RSI,RDX
            mov RDI,QWORD PTR [RAX+48]
            call .L_411aa0

            mov RDI,R12
            mov RSI,RBX
            call .L_42e8c0

            mov RDI,RBX
            test EAX,EAX
            setne BPL
            call .L_412690
.L_412ec5:

            add RSP,8
.L_412ec9:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_412ed2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ee0:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RSI,RDI
            mov RBX,RDX
            sub RSP,168
.L_412ef6:

            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call .L_40b9f0

            lea RDI,QWORD PTR [RSP+64]
            mov RSI,RBP
            lea RBP,QWORD PTR [RSP+32]
            call .L_40bd70

            movsd XMM0,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+96]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RBX+8]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+112],XMM0
            call .L_40bdd0

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_412f97

            lea R13,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RBX+40]
            mov RDX,RBP
            mov RSI,R13
            call .L_40b850

            lea RDI,QWORD PTR [RBX+64]
            mov RDX,R13
            mov RSI,RBP
            call .L_40b6e0
.L_412f97:

            mov RSI,RBP
            mov RDI,R12
            call .L_40bbe0

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_412fc8

            add RSP,168
.L_412fc1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_412fc8:

            call __stack_chk_fail@PLT
.L_412fcd:

            nop
            nop
            nop
.L_412fd0:

            push R15
            push R14
            xor EAX,EAX
            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RIP+.L_414c40]
            mov EBP,ESI
            sub RSP,24
.L_412fe9:

            lea R12,QWORD PTR [RBX+396]
            mov QWORD PTR [RSP],RDI
            mov DWORD PTR [RSP+12],EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413000:

            cmp EBP,EAX
            jne .L_413060

            mov EAX,DWORD PTR [RBX+4]
            mov R13,RBX
            test EAX,EAX
            je .L_413014

            cmp EAX,DWORD PTR [RSP+12]
            jne .L_413060
.L_413014:

            mov RAX,QWORD PTR [RSP]
            mov R14,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBX+12]
            test R14,R14
            je .L_41306d

            test EAX,EAX
            js .L_413060

            mov R15D,1
            jmp .L_413047
          .byte 0x90
.L_413030:

            mov R14,QWORD PTR [R14+56]
            mov ESI,R15D
            mov EAX,DWORD PTR [RBX+12]
            test R14,R14
            je .L_413070

            add R15,1
            cmp ESI,EAX
            jg .L_413060
.L_413047:

            mov RDI,R14
            call .L_430e30

            cmp EAX,DWORD PTR [RBX+R15*4+12]
            je .L_413030

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413060:

            add RBX,36
            cmp R12,RBX
            je .L_413090

            mov EAX,DWORD PTR [RBX]
            jmp .L_413000
.L_41306d:

            xor ESI,ESI
            nop
.L_413070:

            cmp ESI,EAX
            jne .L_413060
.L_413074:

            add RSP,24
.L_413078:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413090:

            xor R13D,R13D
            jmp .L_413074
.L_413095:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4130a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RCX
            sub RSP,312
.L_4130ba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_413312

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1835955314
            mov RDI,RBX
            call .L_403570

            mov ESI,1380401696
            mov RDI,RBX
            call .L_403550

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403530

            xor ESI,ESI
            mov RDI,RBX
            call .L_403430

            lea RSI,QWORD PTR [RIP+.L_4148c8]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413308

            test R12,R12
            je .L_4132c8

            call .L_40de30

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            lea R15,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RSP+224]
            mov RSI,R12
            mov RDI,R15
            call .L_40b690

            call .L_40de30

            xor ESI,ESI
            mov RCX,RAX
            mov RDX,R15
            mov RDI,R14
            call .L_40e220

            mov RDX,R14
            mov ESI,1667785060
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            test R13,R13
            je .L_4133b0

            movsd XMM0,QWORD PTR [R12]
            mov RAX,QWORD PTR [RIP+.L_414e30]
            lea RDI,QWORD PTR [RSP+144]
            mov RSI,RSP
            mov RDX,R13
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+16],RAX
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40e460

            test EAX,EAX
            je .L_413308

            movsd XMM0,QWORD PTR [RSP+144]
            lea R12,QWORD PTR [RSP+64]
            mov ESI,1918392666
            mov RDI,RBX
            movsd QWORD PTR [RSP+64],XMM0
            mov RDX,R12
            movsd XMM0,QWORD PTR [RSP+168]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+80],XMM0
            movsd XMM0,QWORD PTR [RSP+152]
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+176]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            movsd QWORD PTR [RSP+112],XMM0
            movsd XMM0,QWORD PTR [RSP+184]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM0,QWORD PTR [RSP+208]
            movsd QWORD PTR [RSP+128],XMM0
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            lea RDX,QWORD PTR [R12+48]
            mov ESI,1649957210
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            lea RDX,QWORD PTR [R12+24]
            mov ESI,1733843290
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            test RBP,RBP
            jne .L_4132d1

            jmp .L_413376
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4132c8:

            test RBP,RBP
            je .L_413371
.L_4132d1:

            mov RDX,QWORD PTR [RBP]
            mov ESI,1918128707
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308

            mov RDX,QWORD PTR [RBP+8]
            cmp RDX,QWORD PTR [RBP]
            je .L_413340

            mov ESI,1733579331
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            jne .L_413356

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413308:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0
.L_413312:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4133be

            add RSP,312
.L_413333:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_413340:

            mov EDX,1918128707
            mov ESI,1733579331
            mov RDI,RBX
            call .L_404d60

            test EAX,EAX
            je .L_413308
.L_413356:

            mov RDX,QWORD PTR [RBP+16]
            cmp RDX,QWORD PTR [RBP]
            je .L_413390

            mov ESI,1649693251
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413308
.L_413371:

            test R13,R13
            je .L_413312
.L_413376:

            mov RDX,R13
            mov ESI,1667789421
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            jne .L_413312

            jmp .L_413308
          .byte 0x90
.L_413390:

            mov EDX,1918128707
            mov ESI,1649693251
            mov RDI,RBX
            call .L_404d60

            test EAX,EAX
            jne .L_413371

            jmp .L_413308
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4133b0:

            test RBP,RBP
            jne .L_4132d1

            jmp .L_413312
.L_4133be:

            call __stack_chk_fail@PLT
.L_4133c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4133d0:

            mov RCX,RDX
            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_4130a0
.L_4133e0:

            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,40
.L_4133f0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_4134a5

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1835955314
            mov RDI,RBX
            call .L_403570

            mov ESI,1196573017
            mov RDI,RBX
            call .L_403550

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403530

            xor ESI,ESI
            mov RDI,RBX
            call .L_403430

            lea RSI,QWORD PTR [RIP+.L_414900]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_4134c8

            test RBP,RBP
            je .L_41348c

            mov R13,RSP
            mov RSI,RBP
            mov RDI,R13
            call .L_40b690

            mov RDX,R13
            mov ESI,2004119668
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_4134c8
.L_41348c:

            test R12,R12
            je .L_4134a5

            mov RDX,R12
            mov ESI,1800688195
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_4134c8
.L_4134a5:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4134d4

            add RSP,40
.L_4134bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4134c8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_4134a5
.L_4134d4:

            call __stack_chk_fail@PLT
.L_4134d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4134e0:

            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_4133e0
.L_4134ed:

            nop
            nop
            nop
.L_4134f0:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4134fe:

            mov EBP,ESI
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_4135cb

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1818848875
            mov RDI,RBX
            call .L_403570

            mov ESI,EBP
            mov RDI,RBX
            call .L_403550

            mov ESI,EBP
            mov RDI,RBX
            call .L_403530

            xor ESI,ESI
            mov RDI,RBX
            call .L_403430

            mov EDI,EBP
            call .L_40d760

            mov RDI,R12
            mov EDX,EAX
            mov ESI,EAX
            mov R13D,EAX
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_4135e0

            mov RDX,R14
            mov ESI,R13D
            mov RDI,R12
            call .L_430680

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_4135e0

            lea RSI,QWORD PTR [RIP+.L_414938]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_4135e0

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_4135e0

            lea RSI,QWORD PTR [RIP+.L_41480c]
            mov RDI,RBX
            call .L_412e30

            test EAX,EAX
            je .L_4135e0

            mov RDI,RBP
            call .L_431080
.L_4135cb:

            mov RAX,RBX
            pop RBX
.L_4135cf:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4135e0:

            mov RDI,RBP
            call .L_431080

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4135fe:

            nop
            nop
.L_413600:

            mov RDX,RSI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_4134f0
.L_41360c:

            nop
            nop
            nop
            nop
.L_413610:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,16
.L_41361f:

            cmp ESI,1129142603
            movsd QWORD PTR [RSP+8],XMM0
            jne .L_413850

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM0
            ja .L_4137c8

            ucomisd XMM0,QWORD PTR [RIP+.L_433250-123880]
            ja .L_4137c8
.L_413653:

            mov RDI,RBP
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_413822

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1818848875
            mov RDI,RBX
            call .L_403570

            mov ESI,1129142603
            mov RDI,RBX
            call .L_403550

            mov ESI,1129142603
            mov RDI,RBX
            call .L_403530

            xor ESI,ESI
            mov RDI,RBX
            call .L_403430

            mov EDX,4
            mov ESI,4
            mov RDI,RBP
            call .L_430f40

            test RAX,RAX
            mov R12,RAX
            je .L_413818

            mov EDI,1129142603
            call .L_40d760

            xor R8D,R8D
            mov ECX,EAX
            mov EDX,EAX
            mov ESI,17
            mov RDI,RBP
            mov R13D,EAX
            call .L_430b00

            test RAX,RAX
            mov R14,RAX
            je .L_413810

            lea RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_412bb0]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42fba0

            test EAX,EAX
            je .L_413810

            mov ESI,R13D
            mov RDI,RBP
            call .L_4307b0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_413810

            mov RDX,R14
            mov ESI,1
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_413810

            mov ESI,R13D
            mov RDI,RBP
            call .L_4307b0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_413810

            lea RSI,QWORD PTR [RIP+.L_414998]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413810

            mov RDX,R12
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413810

            lea RSI,QWORD PTR [RIP+.L_414823]
            mov RDI,RBX
            call .L_412e30

            test EAX,EAX
            je .L_413810

            mov RDI,R12
            call .L_431080

            add RSP,16
.L_4137b6:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4137c8:

            lea RDX,QWORD PTR [RIP+.L_414e00]
            xor EAX,EAX
            mov ESI,2
            mov RDI,RBP
            call .L_426320

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM0
            ja .L_413838

            movsd XMM1,QWORD PTR [RIP+.L_433250-123880]
            ucomisd XMM0,XMM1
            jbe .L_413653

            movsd QWORD PTR [RSP+8],XMM1
            jmp .L_413653
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413810:

            mov RDI,R12
            call .L_431080
.L_413818:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0
.L_413822:

            add RSP,16
.L_413826:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413838:

            mov QWORD PTR [RSP+8],0
            jmp .L_413653
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413850:

            lea RDX,QWORD PTR [RIP+.L_414dd0]
            mov ESI,9
            xor EAX,EAX
            xor EBX,EBX
            call .L_426320

            jmp .L_413822
.L_413867:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413870:

            mov ESI,EDI
            xor EDI,EDI
            jmp .L_413610
.L_413879:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413880:

            test RSI,RSI
            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_41388a:

            je .L_413970
.L_413890:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R12
            call .L_4130a0

            test RAX,RAX
            mov RBX,RAX
            je .L_413960

            movsd XMM0,QWORD PTR [RIP+.L_414e70]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403570

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403550

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403530

            lea RSI,QWORD PTR [RIP+.L_4149f0]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413960

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_413958

            mov ESI,3
            mov RDI,R12
            call .L_430d60

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_413950

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413950

            mov RDI,RBP
            call .L_431080

            mov RAX,RBX
            pop RBX
.L_41394a:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_413950:

            mov RDI,RBP
            call .L_431080
.L_413958:

            mov RDI,RBX
            call .L_403eb0
.L_413960:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413970:

            call .L_40de40

            mov RSI,RAX
            jmp .L_413890
.L_41397d:

            nop
            nop
            nop
.L_413980:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_413880
.L_41398a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_413990:

            test RSI,RSI
            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_41399a:

            je .L_413a80
.L_4139a0:

            xor ECX,ECX
            xor EDX,EDX
            mov RDI,R12
            call .L_4130a0

            test RAX,RAX
            mov RBX,RAX
            je .L_413a56

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403570

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403550

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403530

            lea RSI,QWORD PTR [RIP+.L_4149f0]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413a68

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_413a68

            mov ESI,3
            mov RDI,R12
            call .L_4307b0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_413a60

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413a60

            mov RDI,RBP
            call .L_431080
.L_413a56:

            mov RAX,RBX
            pop RBX
.L_413a5a:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_413a60:

            mov RDI,RBP
            call .L_431080
.L_413a68:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413a80:

            call .L_40de40

            mov RSI,RAX
            jmp .L_4139a0
.L_413a8d:

            nop
            nop
            nop
.L_413a90:

            mov RSI,RDI
            xor EDI,EDI
            jmp .L_413990
.L_413a9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_413aa0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_413aa7:

            call .L_40de40

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R12
            call .L_4130a0

            test RAX,RAX
            mov RBX,RAX
            je .L_413b65

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            mov ESI,1633842036
            mov RDI,RBX
            call .L_403570

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403550

            mov ESI,1482250784
            mov RDI,RBX
            call .L_403530

            lea RSI,QWORD PTR [RIP+.L_414a48]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413b78

            mov EDX,3
            mov ESI,3
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_413b78

            mov ESI,3
            mov RDI,R12
            call .L_4307b0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_413b70

            mov RDX,RBP
            mov ESI,1093812784
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_413b70

            mov RDI,RBP
            call .L_431080
.L_413b65:

            mov RAX,RBX
            pop RBX
.L_413b69:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413b70:

            mov RDI,RBP
            call .L_431080
.L_413b78:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_413b8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_413b90:

            xor EDI,EDI
            jmp .L_413aa0
.L_413b97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413ba0:

            push RBP
            push RBX
            mov ESI,4
            mov RBX,RDI
            sub RSP,168
.L_413bb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_414e78]
            movsd XMM0,QWORD PTR [RIP+.L_414e30]
            lea RBP,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RIP+.L_414e80]
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+72],XMM0
            mov RDX,RBP
            movsd QWORD PTR [RSP+96],XMM0
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_414e88]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RIP+.L_414e90]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,QWORD PTR [RIP+.L_414e98]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,QWORD PTR [RIP+.L_414ea0]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RIP+.L_414ea8]
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RIP+.L_414eb0]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_414eb8]
            mov QWORD PTR [RSP+112],RAX
            mov RAX,QWORD PTR [RIP+.L_414ec0]
            mov QWORD PTR [RSP+120],RAX
            mov RAX,QWORD PTR [RIP+.L_414ec8]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RIP+.L_414ed0]
            mov QWORD PTR [RSP+136],RAX
            mov RAX,QWORD PTR [RIP+.L_414ed8]
            mov QWORD PTR [RSP+144],RAX
            call .L_427720

            test RAX,RAX
            mov QWORD PTR [RSP+128],RAX
            mov QWORD PTR [RSP+120],RAX
            mov QWORD PTR [RSP+112],RAX
            je .L_413d10

            lea RDX,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,RSP
            mov RCX,RBP
            call .L_4130a0

            mov RDI,QWORD PTR [RSP+112]
            mov RBX,RAX
            call .L_427870

            test RBX,RBX
            je .L_413d10

            lea RSI,QWORD PTR [RIP+.L_414aa0]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413d08
.L_413ce4:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_413d14

            add RSP,168
.L_413d01:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413d08:

            mov RDI,RBX
            call .L_403eb0
.L_413d10:

            xor EBX,EBX
            jmp .L_413ce4
.L_413d14:

            call __stack_chk_fail@PLT
.L_413d19:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413d20:

            xor EDI,EDI
            jmp .L_413ba0
.L_413d27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413d30:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov EBP,ESI
            push RBX
            sub RSP,176
.L_413d44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            cmp EDX,ECX
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+56],XMM3
            jne .L_413ef0

            mov DWORD PTR [RSP+64],0
.L_413d7f:

            mov RDI,R13
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_413f58

            mov RDI,RAX
            mov ESI,1633842036
            call .L_403570

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403550

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403530

            xor ESI,ESI
            mov RDI,RBX
            call .L_403430

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_430f40

            test RAX,RAX
            mov R12,RAX
            je .L_413f50

            lea RSI,QWORD PTR [RSP+128]
            xor R8D,R8D
            mov ECX,3
            mov EDX,3
            mov RDI,R13
            mov DWORD PTR [RSP+128],EBP
            mov DWORD PTR [RSP+132],EBP
            mov DWORD PTR [RSP+136],EBP
            mov DWORD PTR [RSP+140],EBP
            mov DWORD PTR [RSP+144],EBP
            mov DWORD PTR [RSP+148],EBP
            mov DWORD PTR [RSP+152],EBP
            mov DWORD PTR [RSP+156],EBP
            call .L_430960

            test RAX,RAX
            mov RBP,RAX
            je .L_413f58

            lea RDX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RIP+.L_412ee0]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42fba0

            test EAX,EAX
            je .L_413f48

            mov RDX,RBP
            mov ESI,1
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_413f48

            lea RSI,QWORD PTR [RIP+.L_414ad8]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_413f58

            call .L_40de30

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045f0

            mov RDI,RBX
            mov RDX,R12
            mov ESI,1093812784
            call .L_4045f0

            mov RDI,R12
            call .L_431080
.L_413ebd:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_413f5f

            add RSP,176
.L_413ede:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413ef0:

            pxor XMM0,XMM0
            mov R14,RSP
            mov RDI,R14
            mov EBX,ECX
            mov DWORD PTR [RSP+64],1
            lea R12,QWORD PTR [RSP+32]
            cvtsi2sd XMM0,EDX
            call .L_40de70

            lea RDI,QWORD PTR [RSP+72]
            mov RSI,R14
            call .L_40b690

            pxor XMM0,XMM0
            mov RDI,R14
            cvtsi2sd XMM0,EBX
            call .L_40de70

            lea RDI,QWORD PTR [R12+64]
            mov RSI,R14
            call .L_40b690

            jmp .L_413d7f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413f48:

            mov RDI,R12
            call .L_431080
.L_413f50:

            mov RDI,RBX
            call .L_403eb0
.L_413f58:

            xor EBX,EBX
            jmp .L_413ebd
.L_413f5f:

            call __stack_chk_fail@PLT
.L_413f64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413f70:

            mov ECX,EDX
            mov EDX,ESI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_413d30
.L_413f7d:

            nop
            nop
            nop
.L_413f80:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,80
.L_413f8f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_414e30]
            mov DWORD PTR [RSP+12],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+48],RAX
            call .L_402d40

            test RAX,RAX
            mov RBX,RAX
            je .L_414127

            movsd XMM0,QWORD PTR [RIP+.L_414e60]
            mov RDI,RAX
            call .L_4035a0

            lea RSI,QWORD PTR [RIP+.L_414b10]
            mov RDI,RBX
            call .L_412d40

            test EAX,EAX
            je .L_414158

            mov ESI,1886549106
            mov RDI,RBX
            call .L_403570

            mov ESI,1196573017
            mov RDI,RBX
            call .L_403550

            mov ESI,1281450528
            mov RDI,RBX
            call .L_403530

            mov EDX,1
            mov ESI,3
            mov RDI,RBP
            call .L_430f40

            test RAX,RAX
            mov R12,RAX
            je .L_414158

            lea R13,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSP+12]
            mov ESI,2
            mov RDI,RBP
            call .L_4274b0

            mov RDX,R13
            mov ESI,3
            mov RDI,RBP
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_430680

            mov RDX,R13
            mov ESI,1
            mov RDI,RBP
            mov R14,RAX
            call .L_430680

            mov RDI,QWORD PTR [RSP+16]
            mov R13,RAX
            call .L_427870

            mov RDX,R14
            mov ESI,1
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_414150

            lea RCX,QWORD PTR [RSP+48]
            xor R8D,R8D
            mov EDX,3
            mov ESI,1
            mov RDI,RBP
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_414150

            mov RDX,R13
            mov ESI,1
            mov RDI,R12
            call .L_431280

            test EAX,EAX
            je .L_414150

            mov RDX,R12
            mov ESI,1110589744
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_414150

            call .L_40de30

            mov ESI,2004119668
            mov RDX,RAX
            mov RDI,RBX
            call .L_4045f0

            test EAX,EAX
            je .L_414150

            mov RDI,R12
            call .L_431080
.L_414127:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_414164

            add RSP,80
.L_41413e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414150:

            mov RDI,R12
            call .L_431080
.L_414158:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403eb0

            jmp .L_414127
.L_414164:

            call __stack_chk_fail@PLT
.L_414169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414170:

            xor EDI,EDI
            jmp .L_413f80
.L_414177:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414180:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_414191:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            mov DWORD PTR [RSP+44],ESI
            mov QWORD PTR [RSP+64],0
            call .L_4110b0

            test RBX,RBX
            je .L_4147d7

            mov RDI,QWORD PTR [RBX+112]
            mov R13,RAX
            call .L_431470

            test RAX,RAX
            je .L_4141e5

            mov RDI,RAX
            call .L_430e30

            cmp EAX,1852009504
            je .L_414690
.L_4141e5:

            mov RDI,QWORD PTR [RBX+112]
            call .L_431160

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_4147d0

            cmp DWORD PTR [RBX+144],1281450528
            je .L_414538
.L_41420c:

            cmp DWORD PTR [RBX+148],1281450528
            jne .L_41422b

            movsd XMM0,QWORD PTR [RIP+.L_414ee0]
            ucomisd XMM0,QWORD PTR [RSP]
            ja .L_414576
.L_41422b:

            mov RDI,R13
            call .L_402d40

            test RAX,RAX
            mov RBP,RAX
            je .L_4145a0

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,RAX
            call .L_4035a0

            test BYTE PTR [RSP+44],32
            mov R12D,DWORD PTR [RBX+148]
            mov R14D,DWORD PTR [RBX+144]
            je .L_414299

            cmp R12D,1281450528
            sete AL
            cmp R12D,1482250784
            sete DL
            or EAX,EDX
            cmp R14D,1482250784
            je .L_414500

            cmp R14D,1281450528
            je .L_414500

            test AL,AL
            jne .L_4145c0
.L_414299:

            mov ESI,1818848875
.L_41429e:

            mov RDI,RBP
            call .L_403570

            mov ESI,R14D
            mov RDI,RBP
            call .L_403550

            mov ESI,R12D
            mov RDI,RBP
            call .L_403530
.L_4142bc:

            mov EDI,DWORD PTR [RBX+144]
            call .L_40d760

            mov EDI,DWORD PTR [RBX+148]
            mov R15D,EAX
            call .L_40d760

            mov EDI,DWORD PTR [RBX+144]
            mov R14D,EAX
            mov DWORD PTR [RSP+40],EAX
            call .L_40d450

            mov EDI,DWORD PTR [RBX+148]
            mov R12D,EAX
            shl R12D,16
            call .L_40d450

            lea EDX,DWORD PTR [R15*8+2]
            shl EAX,16
            mov RDI,RBP
            or R12D,EDX
            lea EDX,DWORD PTR [R14*8+2]
            mov DWORD PTR [RSP+56],R12D
            mov R12D,1093812784
            or EAX,EDX
            mov DWORD PTR [RSP+60],EAX
            call .L_403560

            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1886549106
            mov R14D,EAX
            mov EAX,1110589744
            cmove R12D,EAX
            xor EAX,EAX
            ucomisd XMM1,QWORD PTR [RIP+.L_414ee0]
            setae AL
            test BYTE PTR [RSP+44],2
            mov DWORD PTR [RSP],EAX
            je .L_414448
.L_414359:

            lea RAX,QWORD PTR [RSP+64]
            mov EDX,DWORD PTR [RBX+224]
            lea R9,QWORD PTR [RSP+44]
            lea R8,QWORD PTR [RSP+60]
            lea RCX,QWORD PTR [RSP+56]
            mov RDI,R13
            mov RSI,RAX
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+24],RCX
            call .L_420670

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_412fd0

            test RAX,RAX
            je .L_4145d0
.L_4143ab:

            test BYTE PTR [RSP+44],8
            jne .L_41446c
.L_4143b6:

            lea RSI,QWORD PTR [RIP+.L_414bc8]
            mov RDI,RBP
            call .L_412d40

            test EAX,EAX
            je .L_4145a2

            mov RDX,QWORD PTR [RSP+64]
            mov ESI,R12D
            mov RDI,RBP
            call .L_4045f0

            test EAX,EAX
            je .L_4145a2

            mov RDX,QWORD PTR [RBX+128]
            test RDX,RDX
            je .L_414406

            mov ESI,1668051572
            mov RDI,RBP
            call .L_4045f0

            test EAX,EAX
            je .L_4145a2
.L_414406:

            mov RDX,QWORD PTR [RBX+136]
            test RDX,RDX
            je .L_414427

            mov ESI,1668050804
            mov RDI,RBP
            call .L_4045f0

            test EAX,EAX
            je .L_4145a2
.L_414427:

            cmp R14D,1818848875
            je .L_414480

            cmp R14D,1935896178
            jne .L_41449c

            lea RDX,QWORD PTR [RBX+152]
            jmp .L_4144a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414448:

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_412fd0

            test RAX,RAX
            je .L_414359

            test BYTE PTR [RSP+44],8
            je .L_4143b6
.L_41446c:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,1
            call .L_431460

            jmp .L_4143b6
.L_414480:

            mov RSI,QWORD PTR [RBX+200]
            test RSI,RSI
            je .L_41449c

            mov RDI,RBP
            call .L_42e8c0

            test EAX,EAX
            je .L_4145a2
.L_41449c:

            lea RDX,QWORD PTR [RBX+176]
.L_4144a3:

            mov ESI,2004119668
            mov RDI,RBP
            call .L_4045f0

            test EAX,EAX
            je .L_4145a2

            mov ESI,DWORD PTR [RBX+224]
            mov RDI,RBP
            call .L_403430

            mov RDI,QWORD PTR [RSP+64]
            call .L_431080
.L_4144d0:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4147f6

            add RSP,88
.L_4144eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414500:

            test AL,AL
            mov ESI,1633842036
            jne .L_41429e

            mov RDI,RBP
            mov ESI,1886549106
            call .L_403570

            mov ESI,R14D
            mov RDI,RBP
            call .L_403530

            mov ESI,R12D
            mov RDI,RBP
            call .L_403550

            jmp .L_4142bc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414538:

            movsd XMM0,QWORD PTR [RIP+.L_414ee0]
            ucomisd XMM0,QWORD PTR [RSP]
            jbe .L_41420c

            mov RDI,R13
            call .L_4307d0

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            mov RDX,RAX
            call .L_431280

            test EAX,EAX
            je .L_4145a0

            cmp DWORD PTR [RBX+148],1281450528
            jne .L_41422b
.L_414576:

            mov RDI,R13
            call .L_430490

            mov RDI,QWORD PTR [RSP+64]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            jne .L_41422b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4145a0:

            xor EBP,EBP
.L_4145a2:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_4145b1

            call .L_431080
.L_4145b1:

            mov RDI,RBP
            xor EBP,EBP
            call .L_403eb0

            jmp .L_4144d0
.L_4145c0:

            mov ESI,1935896178
            jmp .L_41429e

            nop
            nop
            nop
            nop
            nop
            nop
.L_4145d0:

            mov EDX,DWORD PTR [RBX+224]
            mov R9,QWORD PTR [RSP+8]
            mov RDI,R13
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+32]
            or DWORD PTR [RSP+44],2
            call .L_420670

            mov RDI,QWORD PTR [RSP+64]
            call .L_431470

            test RAX,RAX
            je .L_414631

            cmp DWORD PTR [RAX+8],1668707188
            je .L_414631

            mov ESI,R15D
            mov RDI,R13
            call .L_4307b0

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            mov RDX,RAX
            call .L_431280

            test EAX,EAX
            je .L_4145a2
.L_414631:

            mov RDI,QWORD PTR [RSP+64]
            call .L_431480

            test RAX,RAX
            je .L_41466f

            cmp DWORD PTR [RAX+8],1668707188
            je .L_41466f

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R13
            call .L_4307b0

            mov RDI,QWORD PTR [RSP+64]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            je .L_4145a2
.L_41466f:

            mov ESI,DWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,R12D
            call .L_412fd0

            test RAX,RAX
            jne .L_4143ab

            jmp .L_4145a2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414690:

            mov RDI,QWORD PTR [RBX+232]
            call .L_402d40

            test RAX,RAX
            mov RBP,RAX
            je .L_4144d0

            mov RDI,RAX
            mov ESI,1852662636
            call .L_403570

            mov ESI,DWORD PTR [RBX+148]
            mov RDI,RBP
            call .L_403550

            mov ESI,1281450528
            mov RDI,RBP
            call .L_403530

            lea RSI,QWORD PTR [RIP+.L_414b68]
            mov RDI,RBP
            call .L_412d40

            test EAX,EAX
            je .L_4145b1

            mov RDI,RBX
            call .L_4125c0

            test RAX,RAX
            mov R12,RAX
            je .L_4145b1

            mov RDI,RAX
            call .L_412410

            mov RDI,R12
            mov R13D,EAX
            call .L_412200

            test RAX,RAX
            mov R12,RAX
            je .L_4145b1

            mov RDI,QWORD PTR [RBX+112]
            call .L_431050

            mov EDI,DWORD PTR [RBX+148]
            mov DWORD PTR [R12+8],EAX
            call .L_40d450

            mov EDI,DWORD PTR [RBX+148]
            mov R14D,EAX
            shl R14D,16
            call .L_40d760

            lea EDX,DWORD PTR [RAX*8+2]
            mov ESI,10
            mov RDI,RBX
            or EDX,R14D
            call .L_4110f0

            test R13D,R13D
            mov DWORD PTR [RSP+60],0
            jle .L_4147a6

            lea R14,QWORD PTR [RSP+60]
            xor EAX,EAX
.L_414770:

            movsxd RDX,EAX
            mov ECX,1
            mov RSI,R14
            imul RDX,RDX,294
            mov RDI,RBX
            add RDX,QWORD PTR [R12+80]
            add RDX,262
            call .L_410260

            mov EAX,DWORD PTR [RSP+60]
            add EAX,1
            cmp R13D,EAX
            mov DWORD PTR [RSP+60],EAX
            jg .L_414770
.L_4147a6:

            mov RDX,R12
            mov ESI,1852009522
            mov RDI,RBP
            call .L_4045f0

            test EAX,EAX
            je .L_4145b1

            mov RDI,R12
            call .L_4121b0

            jmp .L_4144d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4147d0:

            xor EBP,EBP
            jmp .L_4144d0
.L_4147d7:

            lea RCX,QWORD PTR [RIP+.L_414c10]
            lea RSI,QWORD PTR [RIP+.L_414839]
            lea RDI,QWORD PTR [RIP+.L_414843]
            mov EDX,1075
            call __assert_fail@PLT
.L_4147f6:

            call __stack_chk_fail@PLT
.L_4147fb:
          .string "US"
.L_4147fe:
          .string "en"
.L_414801:
          .string "Little CMS"
.L_41480c:
          .string "Linearization built-in"
.L_414823:
          .string "ink-limiting built-in"
.L_414839:
          .string "cmsvirt.c"
.L_414843:
          .string "(hTransform != ((void *)0))"
          .byte 0x90
.L_414860:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4148c8:
          .string "R"
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414900:
          .string "g"
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414938:
          .string "L"
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414998:
          .string "i"
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4149f0:
          .string "L"
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414a48:
          .string "X"
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414aa0:
          .string "s"
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414ad8:
          .string "B"
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b10:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b68:
          .string "N"
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414bc8:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_414c00:
          .zero 16
.L_414c10:
          .string "cmsTransform2DeviceLink"
          .zero 24
.L_414c40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x66
          .byte 0x74
          .byte 0x61
          .byte 0x6d
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x6c
          .byte 0x63
          .byte 0x74
          .byte 0x73
          .byte 0x76
          .byte 0x63
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414dd0:
          .string "InkLimiting: Only CMYK currently supported"
          .zero 5
.L_414e00:

            outsb DX,BYTE PTR [RSI]
            imul ECX,DWORD PTR [RCX+RBP*2+109],105
            je .L_414e72
          .byte 0x6e
          .byte 0x67
          .byte 0x3a
          .byte 0x20
          .byte 0x4c
          .byte 0x69
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x20
          .byte 0x73
          .byte 0x68
          .byte 0x6f
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x74
          .byte 0x77
          .byte 0x65
          .byte 0x65
          .byte 0x6e
          .byte 0x20
          .byte 0x30
          .byte 0x2e
          .byte 0x2e
          .byte 0x34
          .byte 0x30
          .byte 0x30
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414e30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_414e38:

            int 204

            int3 

            int3 

            int3 
          .byte 0x7a
          .byte 0x84
          .byte 0x40
.L_414e40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_414e48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_414e50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_414e58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_414e60:

            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            adc DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX+64],BH
.L_414e70:

            int 204
.L_414e72:

            int3 

            int3 

            int3 

            int3 
          .byte 0x0
          .byte 0x40
.L_414e78:
          .byte 0x88
          .byte 0x63
          .byte 0x5d
          .byte 0xdc
          .byte 0x46
          .byte 0x3
          .byte 0xd4
          .byte 0x3f
.L_414e80:
          .byte 0x75
          .byte 0x93
          .byte 0x18
          .byte 0x4
          .byte 0x56
          .byte 0xe
          .byte 0xd5
          .byte 0x3f
.L_414e88:

            jnp .L_414e9e
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xe4
          .byte 0x3f
.L_414e90:
          .byte 0x1f
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0xd5
          .byte 0x3f
.L_414e98:

            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
.L_414e9e:

            sar DWORD PTR [RDI],CL
.L_414ea0:

            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            jrcxz .L_414ee7
.L_414ea8:

            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            xor ESI,DWORD PTR [RBX]
            ret 
          .byte 0x3f
.L_414eb0:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0xae
          .byte 0x3f
.L_414eb8:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_414ec0:
          .byte 0x60
          .byte 0xeb
          .byte 0xa
          .byte 0xcd
          .byte 0xed
          .byte 0x54
          .byte 0xee
          .byte 0x3f
.L_414ec8:
          .byte 0x3
          .byte 0x4a
          .byte 0x51
          .byte 0x2f
          .byte 0x23
          .byte 0xb1
          .byte 0xaa
          .byte 0x3f
.L_414ed0:
          .byte 0x80
          .byte 0xb5
          .byte 0x49
          .byte 0x21
          .byte 0x72
          .byte 0xd0
          .byte 0xb3
          .byte 0x3f
.L_414ed8:
          .byte 0x12
          .byte 0x14
          .byte 0x3f
          .byte 0xc6
          .byte 0xdc
          .byte 0xb5
          .byte 0xa4
          .byte 0x3f
.L_414ee0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
.L_414ee7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ef0:

            mov EAX,1482250784
            ret 
.L_414ef6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f00:

            ucomisd XMM0,QWORD PTR [RIP+.L_41da28]
            sbb EAX,EAX
            and EAX,116982545
            add EAX,1835824483
            ret 
.L_414f15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f20:

            ucomisd XMM0,QWORD PTR [RIP+.L_41da28]
            sbb EAX,EAX
            and EAX,4143513088
            add EAX,1835824483
            ret 
.L_414f35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f40:

            movsd XMM1,QWORD PTR [RIP+.L_41da28]
            ucomisd XMM1,XMM0
            jbe .L_414f60

            mov EDX,DWORD PTR [RDI+64]
            xor EAX,EAX
            test EDX,EDX
            sete AL
            add EAX,1835430961
            ret 
          .byte 0x66
          .byte 0x90
.L_414f60:

            mov EAX,1832993312
            ret 
.L_414f66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f70:

            movsd XMM1,QWORD PTR [RIP+.L_41da28]
            ucomisd XMM1,XMM0
            jbe .L_414f90

            mov EDX,DWORD PTR [RDI+64]
            xor EAX,EAX
            test EDX,EDX
            sete AL
            add EAX,1835430961
            ret 
          .byte 0x66
          .byte 0x90
.L_414f90:

            mov EAX,1833058592
            ret 
.L_414f96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414fa0:

            push R13
            push R12
            movsxd R13,EDX
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,24
.L_414fb0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+R13*8+16]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41502b

            xor EBP,EBP
            jmp .L_414fec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414fe0:

            mov RBX,QWORD PTR [RBX+56]
            mov RBP,RAX
            test RBX,RBX
            je .L_41502b
.L_414fec:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,64
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_415042

            test RBP,RBP
            mov QWORD PTR [RAX+56],0
            je .L_415014

            mov QWORD PTR [RBP+56],RAX
.L_415014:

            cmp QWORD PTR [RSP],0
            jne .L_414fe0

            mov RBX,QWORD PTR [RBX+56]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_414fec
.L_41502b:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+R13*8+16],RAX
.L_415042:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41505d

            add RSP,24
.L_415056:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41505d:

            call __stack_chk_fail@PLT
.L_415062:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415070:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_415077:

            mov RBX,RSI
            mov ESI,EDX
            call .L_406d40

            test RBX,RBX
            mov R12,RAX
            je .L_4150e0

            mov ESI,64
            mov RDI,RBP
            call .L_406970

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4150d3

            movdqu XMM0,XMMWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX+72]
            movups XMMWORD PTR [RDX],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+40]
            movups XMMWORD PTR [RDX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+56]
            mov QWORD PTR [RDX+48],RAX
            mov RAX,QWORD PTR [R12]
            movups XMMWORD PTR [RDX+32],XMM0
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [R12],RDX
            mov EAX,1
.L_4150d3:

            pop RBX
.L_4150d4:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4150e0:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4150f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415100:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,8
            call .L_427890

            mov RDI,QWORD PTR [RBP+40]
            add RSP,8
            mov RSI,RBX
            pop RBX
            pop RBP
            jmp .L_426070
.L_415126:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415130:

            push RBX
            mov RSI,QWORD PTR [RDI+8]
            mov RBX,RDI
            test RSI,RSI
            je .L_415145

            mov RDI,QWORD PTR [RDI]
            call .L_426070
.L_415145:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_415156

            mov RDI,QWORD PTR [RBX]
            call .L_426070
.L_415156:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            pop RBX
            ret 
.L_415168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415170:

            push RBX
            cmp QWORD PTR [RDI+8],0
            mov RBX,RDI
            je .L_415180

            call .L_415130
.L_415180:

            cmp QWORD PTR [RBX+32],0
            je .L_415190

            lea RDI,QWORD PTR [RBX+24]
            call .L_415130
.L_415190:

            cmp QWORD PTR [RBX+56],0
            je .L_4151a0

            lea RDI,QWORD PTR [RBX+48]
            call .L_415130
.L_4151a0:

            cmp QWORD PTR [RBX+80],0
            je .L_4151b0

            lea RDI,QWORD PTR [RBX+72]
            pop RBX
            jmp .L_415130
          .byte 0x66
          .byte 0x90
.L_4151b0:

            pop RBX
            ret 
.L_4151b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151c0:

            mov RDI,QWORD PTR [RDI+40]
            jmp .L_426070
.L_4151c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151d0:

            jmp .L_4151c0
.L_4151d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151e0:

            jmp .L_4151c0
.L_4151e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4151f0:

            jmp .L_4151c0
.L_4151f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415200:

            jmp .L_4151c0
.L_415202:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415210:

            jmp .L_4151c0
.L_415212:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415220:

            jmp .L_4151c0
.L_415222:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415230:

            jmp .L_4151c0
.L_415232:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415240:

            jmp .L_4151c0
.L_415245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415250:

            jmp .L_4151c0
.L_415255:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415260:

            jmp .L_4151c0
.L_415265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415270:

            push RBP
            push RBX
            mov RBP,RSI
            mov EDX,8
            mov ESI,3
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            call .L_426010

            test RAX,RAX
            mov RBX,RAX
            je .L_4152ba

            mov RDI,QWORD PTR [RBP]
            call .L_427900

            mov QWORD PTR [RBX],RAX
            mov RDI,QWORD PTR [RBP+8]
            call .L_427900

            mov QWORD PTR [RBX+8],RAX
            mov RDI,QWORD PTR [RBP+16]
            call .L_427900

            mov QWORD PTR [RBX+16],RAX
.L_4152ba:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_4152c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4152d0:

            mov RDI,RSI
            jmp .L_427900
.L_4152d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4152e0:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RBP,RDX
            sub RSP,8
            mov ESI,DWORD PTR [RDX+4]
            call .L_405c70

            test EAX,EAX
            je .L_415318

            mov RAX,QWORD PTR [RBX+312]
            mov ESI,DWORD PTR [RBP]
            add RSP,8
            lea RDX,QWORD PTR [RBP+8]
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415318:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_415321:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415330:

            mov RDI,RSI
            mov ESI,DWORD PTR [RDX]
            jmp .L_405c70
.L_41533a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_415340:

            push R12
            mov R12,RSI
            lea RSI,QWORD PTR [RDX+16]
            push RBP
            mov RAX,RDX
            push RBX
.L_41534e:

            mov RBP,RDX
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
.L_415358:

            xor ECX,ECX
            cmp BYTE PTR [RAX],255
            setne CL
            add RAX,1
            add EBX,ECX
            cmp RAX,RSI
            jne .L_415358

            mov ESI,EBX
            mov RDI,R12
            call .L_405c70

            test EAX,EAX
            je .L_415391

            mov RDX,RBP
            mov ESI,EBX
            mov RDI,R12
            call QWORD PTR [R12+312]

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_415391:

            pop RBX
.L_415392:

            pop RBP
            pop R12
            ret 
.L_415396:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4153a0:

            test ECX,ECX
            je .L_4153f0

            lea EAX,DWORD PTR [RCX-1]
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*8+8]
            jmp .L_4153c9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4153c0:

            add RBX,8
            cmp RBX,R12
            je .L_4153e0
.L_4153c9:

            movsd XMM0,QWORD PTR [RBX]
            mov RDI,RBP
            call .L_405e60

            test EAX,EAX
            jne .L_4153c0

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4153e0:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4153f0:

            mov EAX,1
            ret 
.L_4153f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415400:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,40
            mov RDI,QWORD PTR [RDX]
            call .L_428670

            cmp EAX,5
            je .L_415518
.L_415421:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            jne .L_415440
.L_41542f:

            xor EAX,EAX
.L_415431:

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
.L_415440:

            mov ESI,3
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_41542f

            mov ESI,256
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_41542f

            mov ESI,2
            mov RDI,RBX
            lea R13,QWORD PTR [RBP+24]
            call .L_405b50

            test EAX,EAX
            je .L_41542f
.L_415477:

            xor R12D,R12D
            jmp .L_415491
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415480:

            add R12D,1
            cmp R12D,256
            je .L_4155ea
.L_415491:

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBP]
            cvtsi2sd XMM0,R12D
            divsd XMM0,QWORD PTR [RIP+.L_41da30]
            cvtsd2ss XMM0,XMM0
            call .L_428730

            cvtss2sd XMM0,XMM0
            pxor XMM3,XMM3
            xor ESI,ESI
            mulsd XMM0,QWORD PTR [RIP+.L_41da38]
            addsd XMM0,QWORD PTR [RIP+.L_41da40]
            ucomisd XMM3,XMM0
            jae .L_4154fd

            ucomisd XMM0,QWORD PTR [RIP+.L_41da38]
            mov ESI,65535
            jae .L_4154fd

            subsd XMM0,QWORD PTR [RIP+.L_41da48]
            addsd XMM0,QWORD PTR [RIP+.L_41da50]
            movd ESI,XMM0
            sar ESI,16
            add SI,32767
            movzx ESI,SI
.L_4154fd:

            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            jne .L_415480

            jmp .L_41542f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415518:

            mov RDI,QWORD PTR [RBP+8]
            call .L_428670

            cmp EAX,5
            jne .L_415421

            mov RDI,QWORD PTR [RBP+16]
            call .L_428670

            cmp EAX,5
            jne .L_415421

            mov ESI,1
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41542f

            lea R12,QWORD PTR [RBP+24]
.L_415555:

            mov RAX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RAX+16]
            movsd XMM2,QWORD PTR [RAX+16]
            movsd XMM4,QWORD PTR [RAX+56]
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RAX+24]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call pow@PLT

            addsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            call .L_405e60

            test EAX,EAX
            je .L_41542f

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_41542f

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_41542f

            add RBP,8
            cmp R12,RBP
            jne .L_415555
.L_4155e0:

            mov EAX,1
            jmp .L_415431
.L_4155ea:

            add RBP,8
            cmp RBP,R13
            je .L_4155e0

            jmp .L_415477
.L_4155f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415600:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            xor EBP,EBP
            sub RSP,56
.L_41561e:

            mov QWORD PTR [RSP+16],RDI
            mov RDI,QWORD PTR [RSI+8]
            mov ESI,R13D
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+32],R9
            call .L_426010

            test RAX,RAX
            je .L_4156d2

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,4
            mov ESI,R13D
            mov R12,RAX
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_4156e8

            test R13D,R13D
            je .L_415758

            mov RBP,RAX
            lea EAX,DWORD PTR [R13-1]
            mov R15,R12
            mov QWORD PTR [RSP+40],RAX
            lea R13,QWORD PTR [R12+RAX*4+4]
            jmp .L_4156a7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415688:

            mov RSI,RBP
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_4156b6

            add DWORD PTR [R15],R14D
            add R15,4
            add RBP,4
            cmp R15,R13
            je .L_415700
.L_4156a7:

            mov RSI,R15
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            jne .L_415688
.L_4156b6:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            xor EBP,EBP
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RSP+8]
            call .L_426070
.L_4156d2:

            add RSP,56
.L_4156d6:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4156e8:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_426070

            jmp .L_4156d2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415700:

            mov RBP,QWORD PTR [RSP+40]
            xor R13D,R13D
            add RBP,1
            jmp .L_41573d
          .byte 0x66
          .byte 0x90
.L_415710:

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,R13D
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RAX+R13*4]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            je .L_4156b6

            add R13,1
            cmp R13,RBP
            je .L_415758
.L_41573d:

            mov ESI,DWORD PTR [R12+R13*4]
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            jne .L_415710

            jmp .L_4156b6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415758:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            mov EBP,1
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RSP+8]
            call .L_426070

            jmp .L_4156d2
.L_41577c:

            nop
            nop
            nop
            nop
.L_415780:

            push R15
            push R14
            shr ECX,2
            push R13
            push R12
            mov RAX,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,ECX
            mov R13D,ECX
            sub RSP,40
.L_41579c:

            mov DWORD PTR [RAX],0
            mov QWORD PTR [RSP+8],RDI
            mov RDI,QWORD PTR [RDI+40]
            mov QWORD PTR [RSP],RDX
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDX
            xor EDX,EDX
            mov EDX,8
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_415837

            test R13D,R13D
            je .L_415860

            mov R15,RAX
            lea EAX,DWORD PTR [R13-1]
            lea RBP,QWORD PTR [RSP+20]
            lea R12,QWORD PTR [R14+RAX*8+8]
            jmp .L_415814
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4157f0:

            mov EAX,DWORD PTR [RSP+20]
            pxor XMM0,XMM0
            add R15,8
            cvtsi2sd XMM0,RAX
            mulsd XMM0,QWORD PTR [RIP+.L_41da58]
            movsd QWORD PTR [R15-8],XMM0
            cmp R15,R12
            je .L_415860
.L_415814:

            mov RSI,RBP
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            jne .L_4157f0

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,R14
            xor R14D,R14D
            mov RDI,QWORD PTR [RAX+40]
            call .L_426070
.L_415837:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_415869

            add RSP,40
.L_41584e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415860:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RAX],R13D
            jmp .L_415837
.L_415869:

            call __stack_chk_fail@PLT
.L_41586e:

            nop
            nop
.L_415870:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_41587d:

            cmp DWORD PTR [RDX+8],1
            mov RAX,QWORD PTR [RDX+16]
            mov ESI,DWORD PTR [RAX+8]
            ja .L_4158d0

            test ESI,ESI
            jle .L_4158d0

            cmp ESI,5
            jg .L_415940

            lea RAX,QWORD PTR [RIP+.L_41d9b0]
            mov RBX,RDX
            movsxd RDX,ESI
            sub ESI,1
            mov RDI,RBP
            movzx ESI,SI
            mov R12D,DWORD PTR [RAX+RDX*4]
            call .L_405b50

            test EAX,EAX
            jne .L_4158f8
.L_4158ba:

            xor EAX,EAX
.L_4158bc:

            add RSP,8
.L_4158c0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4158d0:

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_41d560]
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            xor EAX,EAX
.L_4158e9:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4158f8:

            xor ESI,ESI
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_4158ba

            xor R13D,R13D
            test R12D,R12D
            jg .L_415919

            jmp .L_415968
.L_415910:

            add R13D,1
            cmp R12D,R13D
            je .L_415968
.L_415919:

            mov RAX,QWORD PTR [RBX+16]
            movsxd RDX,R13D
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RAX+RDX*8+16]
            call .L_405e60

            test EAX,EAX
            jne .L_415910

            xor EAX,EAX
            jmp .L_4158bc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415940:

            mov RDI,QWORD PTR [RDI+40]
            lea RDX,QWORD PTR [RIP+.L_41d853]
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            add RSP,8
.L_41595b:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415968:

            mov EAX,1
            jmp .L_4158e9
.L_415972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415980:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            shr ECX,2
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,ECX
            mov R12D,ECX
            sub RSP,24
.L_41599c:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov QWORD PTR [RSP+8],RDX
            mov EDX,8
            call .L_426010

            test RAX,RAX
            mov R13,RAX
            je .L_4159ff

            test R12D,R12D
            je .L_415a18

            mov R14,RAX
            lea EAX,DWORD PTR [R12-1]
            lea RBP,QWORD PTR [R13+RAX*8+8]
            jmp .L_4159e1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4159d8:

            add R14,8
            cmp R14,RBP
            je .L_415a18
.L_4159e1:

            mov RSI,R14
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            jne .L_4159d8

            mov RDI,QWORD PTR [R15+40]
            mov RSI,R13
            xor R13D,R13D
            call .L_426070
.L_4159ff:

            add RSP,24
.L_415a03:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415a18:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],R12D
            jmp .L_4159ff
.L_415a22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a30:

            push R15
            push R14
            mov R14D,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov R13,RDX
            sub RSP,216
.L_415a50:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+28]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_415bdd

            mov RDI,QWORD PTR [R12+40]
            mov EDX,8
            mov ESI,3
            call .L_426010

            test RAX,RAX
            mov RBX,RAX
            je .L_415bdd

            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            je .L_415c10

            cmp ECX,1
            jne .L_415bb0

            mov R14,RAX
            lea RAX,QWORD PTR [RSP+104]
            lea R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP],RAX
.L_415acb:

            mov RSI,R15
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_415bc8

            lea RSI,QWORD PTR [R15+8]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_415bc8

            lea RSI,QWORD PTR [R15+16]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_415bc8

            movsd XMM1,QWORD PTR [R15]
            movsd XMM2,QWORD PTR [RIP+.L_41da60]
            movsd XMM0,QWORD PTR [R15+16]
            divsd XMM2,XMM1
            movsd QWORD PTR [RSP+112],XMM1
            subsd XMM0,QWORD PTR [R15+8]
            movapd XMM1,XMM2
            call pow@PLT

            mov RDI,QWORD PTR [R12+40]
            mov RDX,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM0,QWORD PTR [R15+8]
            mov ESI,5
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            movsd QWORD PTR [RSP+152],XMM0
            mov QWORD PTR [RSP+160],0
            call .L_427720

            test RAX,RAX
            mov QWORD PTR [R14],RAX
            je .L_415bc8

            add R15,24
            add R14,8
            cmp R15,QWORD PTR [RSP+8]
            jne .L_415acb
.L_415ba5:

            mov DWORD PTR [R13],1
            jmp .L_415bdf
          .byte 0x90
.L_415bb0:

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_41d5f8]
            mov ESI,8
            xor EAX,EAX
            call .L_426320
.L_415bc8:

            mov RDI,RBX
            call .L_427890

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            call .L_426070
.L_415bdd:

            xor EBX,EBX
.L_415bdf:

            mov RDX,QWORD PTR [RSP+200]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415d9d

            add RSP,216
.L_415c00:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415c10:

            lea RSI,QWORD PTR [RSP+22]
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_415bc8

            movzx ECX,WORD PTR [RSP+22]
            cmp CX,3
            jne .L_415d80

            lea RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_415bc8

            lea RSI,QWORD PTR [RSP+26]
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_415bc8

            movzx ESI,WORD PTR [RSP+24]
            cmp SI,256
            je .L_415d50
.L_415c66:

            lea RAX,QWORD PTR [RBX+24]
            mov R14,RBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+21]
            mov QWORD PTR [RSP],RAX
.L_415c7b:

            mov RDI,QWORD PTR [R12+40]
            xor EDX,EDX
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [R14],RAX
            je .L_415bc8

            movzx EDX,WORD PTR [RSP+26]
            cmp DX,1
            je .L_415d00

            cmp DX,2
            jne .L_415cd8

            movzx ESI,WORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+48]
            mov RDI,RBP
            call .L_405510

            test EAX,EAX
            je .L_415bc8
.L_415cbd:

            add R14,8
            cmp QWORD PTR [RSP+8],R14
            je .L_415ba5

            movzx ESI,WORD PTR [RSP+24]
            jmp .L_415c7b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415cd8:

            mov RDI,QWORD PTR [R12+40]
            lea ECX,DWORD PTR [RDX*8]
            lea RDX,QWORD PTR [RIP+.L_41d5d0]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_415bc8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415d00:

            xor R15D,R15D
            cmp WORD PTR [RSP+24],0
            jne .L_415d39

            jmp .L_415cbd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415d10:

            movzx EAX,BYTE PTR [RSP+21]
            mov RCX,QWORD PTR [R14]
            mov RSI,QWORD PTR [RCX+48]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [RSI+R15*2],AX
            movzx ECX,WORD PTR [RSP+24]
            lea EAX,DWORD PTR [R15+1]
            add R15,1
            cmp ECX,EAX
            jbe .L_415cbd
.L_415d39:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_4053e0

            test EAX,EAX
            jne .L_415d10

            jmp .L_415bc8
          .byte 0x66
          .byte 0x90
.L_415d50:

            cmp WORD PTR [RSP+26],1
            jne .L_415c66

            cmp R14D,1576
            jne .L_415c66

            mov EAX,2
            mov WORD PTR [RSP+26],AX
            jmp .L_415c66

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d80:

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_41d5a0]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_415bc8
.L_415d9d:

            call __stack_chk_fail@PLT
.L_415da2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415db0:

            mov RDI,RSI
            jmp .L_412880
.L_415db8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415dc0:

            mov RDI,RSI
            jmp .L_412a10
.L_415dc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415dd0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov R12,RDX
            sub RSP,24
.L_415de6:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_415e88

            cmp DWORD PTR [RSP+4],16
            ja .L_415e88

            mov RDI,QWORD PTR [R13+40]
            mov EDX,1
            mov ESI,16
            call .L_426010

            test RAX,RAX
            mov RBX,RAX
            je .L_415e88

            pcmpeqd XMM0,XMM0
            mov EDX,1
            mov RSI,RAX
            mov RDI,RBP
            movups XMMWORD PTR [RAX],XMM0
            mov ECX,DWORD PTR [RSP+4]
            call QWORD PTR [RBP+280]

            cmp EAX,DWORD PTR [RSP+4]
            jne .L_415e78

            mov DWORD PTR [R12],1
.L_415e56:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415e8c

            add RSP,24
.L_415e6d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415e78:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            call .L_426070

            nop
            nop
            nop
            nop
.L_415e88:

            xor EBX,EBX
            jmp .L_415e56
.L_415e8c:

            call __stack_chk_fail@PLT
.L_415e91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415ea0:

            mov RDI,RSI
            jmp .L_411c50
.L_415ea8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415eb0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov ESI,392
            mov R15,RDX
            sub RSP,8
.L_415ecc:

            mov RDI,QWORD PTR [RDI+40]
            call .L_425fe0

            test RAX,RAX
            mov RBP,RAX
            je .L_415f76

            mov DWORD PTR [R15],0
            mov RSI,RAX
            mov RDI,R13
            call .L_4055b0

            test EAX,EAX
            je .L_415f68

            lea RSI,QWORD PTR [RBP+4]
            mov RDI,R13
            call .L_4055b0

            test EAX,EAX
            je .L_415f68

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,15
            ja .L_415f90

            test EAX,EAX
            je .L_415fa0
.L_415f1b:

            xor R12D,R12D
            jmp .L_415f4c
.L_415f20:

            lea RSI,QWORD PTR [RBP+RBX*1+16]
            mov RDI,R13
            call .L_4057f0

            test EAX,EAX
            je .L_415f68

            lea RSI,QWORD PTR [RBP+RBX*1+24]
            mov RDI,R13
            call .L_4055b0

            test EAX,EAX
            je .L_415f68

            add R12D,1
            cmp DWORD PTR [RBP+4],R12D
            jbe .L_415fa0
.L_415f4c:

            mov EAX,R12D
            mov RDI,R13
            lea RBX,QWORD PTR [RAX+RAX*2]
            shl RBX,3
            lea RSI,QWORD PTR [RBP+RBX*1+8]
            call .L_4057f0

            test EAX,EAX
            jne .L_415f20
.L_415f68:

            mov RDI,QWORD PTR [R14+40]
            mov RSI,RBP
            xor EBP,EBP
            call .L_426070
.L_415f76:

            add RSP,8
.L_415f7a:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f90:

            mov DWORD PTR [RBP+4],15
            jmp .L_415f1b

            nop
            nop
            nop
            nop
.L_415fa0:

            mov DWORD PTR [R15],1
            jmp .L_415f76
.L_415fa9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415fb0:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,72
            mov R13,RDX
            sub RSP,24
.L_415fcf:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_4160df

            lea R14,QWORD PTR [RSP+4]
            mov RDI,RBP
            mov RSI,R14
            call .L_405470

            test EAX,EAX
            je .L_4160d0

            cmp R15D,32
            movzx EAX,WORD PTR [RSP+4]
            jne .L_416026

            test AX,AX
            je .L_416108
.L_416026:

            cmp AX,3
            jne .L_4160d0

            lea RSI,QWORD PTR [RSP+6]
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_4160d0

            mov RSI,RBX
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            mov RAX,QWORD PTR [RIP+.L_41da60]
            lea RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            mov QWORD PTR [RBX+16],RAX
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            lea RSI,QWORD PTR [RBX+32]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            mov RAX,QWORD PTR [RIP+.L_41da60]
            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            mov QWORD PTR [RBX+40],RAX
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            lea RSI,QWORD PTR [RBX+56]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_4160d0

            mov RAX,QWORD PTR [RIP+.L_41da60]
            mov QWORD PTR [RBX+64],RAX
            mov DWORD PTR [R13],1
            jmp .L_4160df
          .byte 0x90
.L_4160d0:

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_426070
.L_4160df:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41612f

            add RSP,24
.L_4160f6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416108:

            xor ESI,ESI
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_4160d0

            mov RSI,R14
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_4160d0

            movzx EAX,WORD PTR [RSP+4]
            jmp .L_416026
.L_41612f:

            call __stack_chk_fail@PLT
.L_416134:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416140:

            mov RDI,RSI
            jmp .L_412690
.L_416148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416150:

            mov RDI,RSI
            jmp .L_412720
.L_416158:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416160:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RDI,RSI
            push RBX
            mov R13,RDX
            mov RBX,RSI
            sub RSP,16
.L_416178:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            lea EBP,DWORD PTR [RAX-8]
            call .L_4055b0

            test EAX,EAX
            je .L_416210

            mov RDI,QWORD PTR [R14+40]
            mov ESI,DWORD PTR [RSP+4]
            call .L_4125e0

            test RAX,RAX
            mov R12,RAX
            je .L_416210

            mov EDX,DWORD PTR [RSP+4]
            lea R9,QWORD PTR [RIP+.L_419650]
            mov R8,RAX
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,R14
            call .L_415600

            test EAX,EAX
            je .L_416208

            mov DWORD PTR [R13],1
.L_4161e4:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_416215

            add RSP,16
.L_4161fb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416208:

            mov RDI,R12
            call .L_412690
.L_416210:

            xor R12D,R12D
            jmp .L_4161e4
.L_416215:

            call __stack_chk_fail@PLT
.L_41621a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416220:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,24
            jmp .L_426090
.L_41622e:

            nop
            nop
.L_416230:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,392
            jmp .L_426090
.L_41623e:

            nop
            nop
.L_416240:

            mov EAX,DWORD PTR [RSI]
            mov RDI,QWORD PTR [RDI+40]
            lea EDX,DWORD PTR [RAX+11]
            jmp .L_426090
.L_41624e:

            nop
            nop
.L_416250:

            mov RDI,QWORD PTR [RDI+40]
            shl EDX,2
            jmp .L_426090
.L_41625c:

            nop
            nop
            nop
            nop
.L_416260:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,56
            jmp .L_426090
.L_41626e:

            nop
            nop
.L_416270:

            jmp .L_416260
.L_416272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416280:

            jmp .L_416260
.L_416282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416290:

            mov RDI,QWORD PTR [RDI+40]
            shl EDX,3
            jmp .L_426090
.L_41629c:

            nop
            nop
            nop
            nop
.L_4162a0:

            jmp .L_416290
.L_4162a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4162b0:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,16
            jmp .L_426090
.L_4162be:

            nop
            nop
.L_4162c0:

            mov RDI,QWORD PTR [RDI+40]
            mov EDX,72
            jmp .L_426090
.L_4162ce:

            nop
            nop
.L_4162d0:

            mov RDI,RSI
            mov RSI,RDX
            jmp .L_405f70
.L_4162db:

            nop
            nop
            nop
            nop
            nop
.L_4162e0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov R13,RSI
            mov ESI,24
            mov RBP,RDX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_416325

            mov RSI,RAX
            mov RDI,R13
            call .L_405900

            test EAX,EAX
            je .L_416338

            mov DWORD PTR [RBP],1
.L_416325:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416338:

            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_426070

            jmp .L_416325
.L_416349:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416350:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,56
            mov R12,RDX
            sub RSP,8
.L_416368:

            mov RDI,QWORD PTR [RDI+40]
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_4163b8

            mov DWORD PTR [R12],0
            mov RSI,RAX
            mov RDI,RBP
            call .L_405900

            test EAX,EAX
            je .L_4163d0

            lea RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            call .L_405900

            test EAX,EAX
            je .L_4163d0

            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_4163d0

            mov DWORD PTR [R12],1
.L_4163b8:

            add RSP,8
.L_4163bc:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4163d0:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            xor EBX,EBX
            call .L_426070

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4163ec:

            nop
            nop
            nop
            nop
.L_4163f0:

            mov RDI,RSI
            jmp .L_431080
.L_4163f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416400:

            mov RDI,RSI
            jmp .L_431160
.L_416408:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416410:

            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            movzx ESI,WORD PTR [RDX+16]
            mov RDI,R12
            mov RBP,RDX
            mov R13,QWORD PTR [RDX+48]
            call .L_405b50

            test EAX,EAX
            jne .L_416440
.L_416432:

            xor EAX,EAX
.L_416434:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416440:

            movzx ESI,WORD PTR [RBP+20]
            mov RDI,R12
            call .L_405b50

            test EAX,EAX
            je .L_416432

            mov EAX,DWORD PTR [RBP+20]
            mov EDX,DWORD PTR [RBP+16]
            imul EDX,EAX
            test EDX,EDX
            je .L_41649b

            lea EAX,DWORD PTR [RDX-1]
            xor EBX,EBX
            lea R14,QWORD PTR [RAX*8+8]
            jmp .L_416479
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416470:

            add RBX,8
            cmp R14,RBX
            je .L_416498
.L_416479:

            mov RAX,QWORD PTR [R13]
            pxor XMM0,XMM0
            mov RDI,R12
            cvtsd2ss XMM0,QWORD PTR [RAX+RBX*1]
            call .L_405d10

            test EAX,EAX
            jne .L_416470

            jmp .L_416432
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416498:

            mov EAX,DWORD PTR [RBP+20]
.L_41649b:

            xor EBX,EBX
            test EAX,EAX
            jne .L_4164cb

            jmp .L_4164f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4164a8:

            pxor XMM0,XMM0
            mov EDX,EBX
            mov RDI,R12
            cvtsd2ss XMM0,QWORD PTR [RAX+RDX*8]
            call .L_405d10

            test EAX,EAX
            je .L_416432
.L_4164c3:

            add EBX,1
            cmp DWORD PTR [RBP+20],EBX
            jbe .L_4164f0
.L_4164cb:

            mov RAX,QWORD PTR [R13+8]
            test RAX,RAX
            jne .L_4164a8

            pxor XMM0,XMM0
            mov RDI,R12
            call .L_405d10

            test EAX,EAX
            jne .L_4164c3

            jmp .L_416432
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4164f0:

            mov EAX,1
            jmp .L_416434
.L_4164fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416500:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            mov RDI,RBX
            sub RSP,80
.L_416518:

            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_405470

            test EAX,EAX
            je .L_41663f

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41663f

            cmp WORD PTR [RSP+12],0
            je .L_416648

            cmp WORD PTR [RSP+14],0
            je .L_416648

            lea R13,QWORD PTR [RSP+48]
            mov ECX,16
            mov EDX,1
            mov RDI,RBX
            mov RSI,R13
            call QWORD PTR [RBX+280]

            cmp EAX,16
            jne .L_416648

            movzx EDX,WORD PTR [RSP+12]
            mov EAX,8
            cmp DX,8
            cmovbe EAX,EDX
            test DX,DX
            movzx ECX,AX
            je .L_416688

            movzx EAX,BYTE PTR [RSP+48]
            cmp AL,1
            je .L_416648

            lea EDI,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RSP+16]
            xor ECX,ECX
            jmp .L_4165d6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4165c8:

            add RCX,1
            movzx EAX,BYTE PTR [R13+RCX*1]
            cmp AL,1
            je .L_416648
.L_4165d6:

            cmp RDI,RCX
            mov DWORD PTR [RSI+RCX*4],EAX
            jne .L_4165c8
.L_4165de:

            movzx ECX,WORD PTR [RSP+14]
            mov RDI,QWORD PTR [R12+40]
            xor R8D,R8D
            call .L_430b60

            test RAX,RAX
            mov R13,RAX
            je .L_416648

            mov R14,QWORD PTR [RAX+48]
            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_416678

            xor R12D,R12D
            jmp .L_41661a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416610:

            add R12D,1
            cmp DWORD PTR [R14+16],R12D
            jbe .L_416678
.L_41661a:

            mov RDX,QWORD PTR [R14]
            mov EAX,R12D
            mov RDI,RBX
            lea RSI,QWORD PTR [RDX+RAX*4]
            call .L_405660

            test EAX,EAX
            jne .L_416610

            mov DWORD PTR [RBP],0
            mov RDI,R13
            call .L_430660
.L_41663f:

            xor R13D,R13D
            jmp .L_416652
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416648:

            mov DWORD PTR [RBP],0
            xor R13D,R13D
.L_416652:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_416692

            add RSP,80
.L_416669:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416678:

            mov DWORD PTR [RBP],1
            jmp .L_416652
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416688:

            lea RSI,QWORD PTR [RSP+16]
            jmp .L_4165de
.L_416692:

            call __stack_chk_fail@PLT
.L_416697:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4166a0:

            mov RDI,RSI
            jmp .L_430660
.L_4166a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4166b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,40
.L_4166c7:

            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_405470

            test EAX,EAX
            je .L_4167c1

            lea RSI,QWORD PTR [RSP+18]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_4167c1

            movzx EBP,WORD PTR [RSP+16]
            cmp BP,15
            ja .L_4167c1

            movzx EAX,WORD PTR [RSP+18]
            cmp AX,15
            ja .L_4167c1

            imul EBP,EAX
            mov RDI,QWORD PTR [R13+40]
            mov EDX,8
            mov ESI,EBP
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_4167c1

            movzx ESI,WORD PTR [RSP+18]
            mov RDI,QWORD PTR [R13+40]
            mov EDX,8
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_416898

            test EBP,EBP
            je .L_4167f0

            lea EAX,DWORD PTR [RBP-1]
            mov R15,R14
            lea RBP,QWORD PTR [RSP+20]
            lea R12,QWORD PTR [R14+RAX*8+8]
            jmp .L_416799
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416780:

            pxor XMM0,XMM0
            add R15,8
            cvtss2sd XMM0,DWORD PTR [RSP+20]
            movsd QWORD PTR [R15-8],XMM0
            cmp R15,R12
            je .L_4167f0
.L_416799:

            mov RSI,RBP
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            jne .L_416780
.L_4167a8:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070

            mov RDI,QWORD PTR [R13+40]
            mov RSI,QWORD PTR [RSP]
            call .L_426070
.L_4167c1:

            xor EAX,EAX
.L_4167c3:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4168ab

            add RSP,40
.L_4167db:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4167f0:

            cmp WORD PTR [RSP+18],0
            je .L_416846

            mov R15,QWORD PTR [RSP]
            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+20]
            jmp .L_416832
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416810:

            pxor XMM0,XMM0
            movzx ESI,WORD PTR [RSP+18]
            add R12D,1
            add R15,8
            cvtss2sd XMM0,DWORD PTR [RSP+20]
            movsd QWORD PTR [R15-8],XMM0
            cmp ESI,R12D
            jbe .L_416850
.L_416832:

            mov RSI,RBP
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            jne .L_416810

            jmp .L_4167a8
.L_416846:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416850:

            movzx EDX,WORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP]
            mov RCX,R14
            mov RDI,QWORD PTR [R13+40]
            mov R8,RBX
            call .L_42f9a0

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            mov QWORD PTR [RSP],RAX
            call .L_426070

            mov RDI,QWORD PTR [R13+40]
            mov RSI,RBX
            call .L_426070

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            mov RAX,QWORD PTR [RSP]
            jmp .L_4167c3
.L_416898:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070

            xor EAX,EAX
            jmp .L_4167c3
.L_4168ab:

            call __stack_chk_fail@PLT
.L_4168b0:

            mov RDI,RSI
            jmp .L_430e60
.L_4168b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4168c0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,40
.L_4168da:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            mov R14D,EAX
            call .L_405470

            test EAX,EAX
            je .L_4169e8

            lea RSI,QWORD PTR [RSP+22]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_4169e8

            movzx ESI,WORD PTR [RSP+20]
            cmp SI,WORD PTR [RSP+22]
            jne .L_4169e8

            mov RDI,QWORD PTR [RBP+40]
            mov EDX,8
            call .L_426010

            test RAX,RAX
            mov R12,RAX
            je .L_4169e8

            movzx EDX,WORD PTR [RSP+20]
            lea ECX,DWORD PTR [R14-8]
            lea R9,QWORD PTR [RIP+.L_41a260]
            mov R8,RAX
            mov RSI,RBX
            mov RDI,RBP
            xor R14D,R14D
            call .L_415600

            test EAX,EAX
            mov DWORD PTR [RSP+12],0
            jne .L_4169f0

            cmp WORD PTR [RSP+20],0
            je .L_4169ad
.L_416982:

            mov R15,R12
            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416990:

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_41699d

            call .L_427870
.L_41699d:

            movzx EDX,WORD PTR [RSP+20]
            add EBX,1
            add R15,8
            cmp EDX,EBX
            ja .L_416990
.L_4169ad:

            mov RDI,QWORD PTR [RBP+40]
            mov RSI,R12
            call .L_426070

            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [R13],EAX
.L_4169c1:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_416a1e

            add RSP,40
.L_4169d8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4169e8:

            xor R14D,R14D
            jmp .L_4169c1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4169f0:

            movzx ESI,WORD PTR [RSP+20]
            mov RDI,QWORD PTR [RBP+40]
            mov RDX,R12
            call .L_430680

            mov R14,RAX
            xor EAX,EAX
            test R14,R14
            setne AL
            cmp WORD PTR [RSP+20],0
            mov DWORD PTR [RSP+12],EAX
            jne .L_416982

            jmp .L_4169ad
.L_416a1e:

            call __stack_chk_fail@PLT
.L_416a23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a30:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            je .L_416a49

            call .L_427870
.L_416a49:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_416a57

            call .L_427870
.L_416a57:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_416a65

            call .L_411c50
.L_416a65:

            mov RDI,QWORD PTR [RBP+40]
            add RSP,8
            mov RSI,RBX
            pop RBX
            pop RBP
            jmp .L_426070
.L_416a77:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a80:

            mov RDI,RSI
            jmp .L_427870
.L_416a88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a90:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R13,RDI
            push RBX
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,16
.L_416aa8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            mov RSI,RSP
            mov RDI,RBX
            mov R12D,EAX
            call .L_405470

            test EAX,EAX
            je .L_416b7f

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_416b7f

            movzx ESI,WORD PTR [RSP]
            lea EAX,DWORD PTR [RSI-1]
            cmp AX,14
            ja .L_416b7f

            movzx EDX,WORD PTR [RSP+2]
            lea EAX,DWORD PTR [RDX-1]
            cmp AX,14
            ja .L_416b7f

            mov RDI,QWORD PTR [R13+40]
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_416b7f

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_416b70

            mov EDX,DWORD PTR [RSP+4]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_41d190]
            mov R8,RBP
            mov RSI,RBX
            mov RDI,R13
            call .L_415600

            test EAX,EAX
            je .L_416b70

            movzx EAX,WORD PTR [RSP]
            cmp EAX,DWORD PTR [RBP+8]
            jne .L_416b70

            movzx EAX,WORD PTR [RSP+2]
            cmp EAX,DWORD PTR [RBP+12]
            jne .L_416b70

            mov DWORD PTR [R14],1
            jmp .L_416b81
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416b70:

            mov RDI,RBP
            call .L_431080

            mov DWORD PTR [R14],0
.L_416b7f:

            xor EBP,EBP
.L_416b81:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_416ba1

            add RSP,16
.L_416b98:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_416ba1:

            call __stack_chk_fail@PLT
.L_416ba6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416bb0:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,24
            sub RSP,8
            mov RDI,QWORD PTR [RDI+40]
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_416bf5

            mov RDI,QWORD PTR [RBP+8]
            call .L_427900

            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RBX+8],RAX
            call .L_427900

            mov RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [RBX],RAX
            call .L_411ca0

            mov QWORD PTR [RBX+16],RAX
.L_416bf5:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_416bff:

            nop
.L_416c00:

            mov RDI,RSI
            jmp .L_411ca0
.L_416c08:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416c10:

            cmp ECX,3
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_416c1b:

            mov DWORD PTR [RDX],0
            jbe .L_416c9c

            mov R12D,ECX
            sub R12D,4
            js .L_416c9c

            mov R13,RDI
            mov RDI,QWORD PTR [RDI+40]
            mov RBX,RSI
            lea ESI,DWORD PTR [RCX+7]
            mov RBP,RDX
            call .L_425fb0

            test RAX,RAX
            mov R14,RAX
            je .L_416c9c

            lea RSI,QWORD PTR [RAX+4]
            mov DWORD PTR [RAX],R12D
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_416c90

            lea RSI,QWORD PTR [R14+8]
            mov ECX,R12D
            mov EDX,1
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,R12D
            jne .L_416c90

            mov DWORD PTR [RBP],1
            mov RAX,R14
            pop RBX
.L_416c81:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c90:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070
.L_416c9c:

            xor R14D,R14D
            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_416cab:

            nop
            nop
            nop
            nop
            nop
.L_416cb0:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RDI,QWORD PTR [RDI+40]
            mov ESI,4
            mov R12,RDX
            call .L_425fb0

            test RAX,RAX
            je .L_416cf0

            mov RSI,RAX
            mov RDI,RBP
            mov RBX,RAX
            call .L_4055b0

            test EAX,EAX
            je .L_416cf0

            mov RAX,RBX
            mov DWORD PTR [R12],1
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_416cf0:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_416cfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416d00:

            push R14
            push R13
            xor R8D,R8D
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41d980]
            xor ECX,ECX
            mov R12,RDI
            mov R13,RSI
            mov RDI,RBP
            sub RSP,16
            mov RSI,RDX
            call .L_411d60

            test EAX,EAX
            jne .L_416d40
.L_416d30:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_416d40:

            mov RDI,QWORD PTR [R12+40]
            mov ESI,EAX
            mov EBX,EAX
            call .L_425fb0

            test RAX,RAX
            mov R14,RAX
            je .L_416d30

            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov R8D,EBX
            mov RCX,RAX
            mov RDI,RBP
            mov RSI,RDX
            call .L_411d60

            mov RDX,R14
            mov ESI,EBX
            mov RDI,R13
            call QWORD PTR [R13+312]

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R14
            mov DWORD PTR [RSP+12],EAX
            call .L_426070

            mov EAX,DWORD PTR [RSP+12]
            add RSP,16
.L_416d96:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_416d9f:

            nop
.L_416da0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov ESI,24
            mov EBX,ECX
            sub RSP,24
.L_416dbe:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_425fe0

            test RAX,RAX
            mov DWORD PTR [R14],0
            je .L_416f30

            mov RSI,RSP
            mov RDI,R12
            mov RBP,RAX
            call .L_4055b0

            test EAX,EAX
            je .L_416f30

            cmp EBX,3
            jbe .L_416f30

            mov RDI,QWORD PTR [R13+40]
            mov ESI,DWORD PTR [RSP]
            xor EDX,EDX
            sub EBX,4
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_416f30

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP]
            mov RDI,R12
            call .L_405510

            cmp EBX,3
            jbe .L_416f30

            test EAX,EAX
            je .L_416f30

            mov EAX,DWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+4]
            mov RDI,R12
            add EAX,EAX
            sub EBX,EAX
            call .L_4055b0

            cmp EBX,3
            jbe .L_416f30

            test EAX,EAX
            je .L_416f30

            mov RDI,QWORD PTR [R13+40]
            mov ESI,DWORD PTR [RSP+4]
            xor EDX,EDX
            sub EBX,4
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_416f30

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,R12
            call .L_405510

            test EAX,EAX
            je .L_416f30

            mov EDX,DWORD PTR [RSP+4]
            mov ECX,EBX
            mov RAX,RDX
            add RDX,RDX
            cmp RCX,RDX
            jb .L_416f30

            add EAX,EAX
            sub EBX,EAX
            cmp EBX,-1
            je .L_416f30

            mov RDI,QWORD PTR [R13+40]
            mov ESI,1
            call .L_411a30

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            je .L_416f30

            mov RDI,QWORD PTR [R13+40]
            lea ESI,DWORD PTR [RBX+1]
            call .L_425fb0

            mov ECX,EBX
            mov R15,RAX
            mov EDX,1
            mov RSI,RAX
            mov RDI,R12
            call QWORD PTR [R12+280]

            cmp EAX,EBX
            jne .L_416f30

            mov EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov RCX,R15
            mov BYTE PTR [R15+RAX*1],0
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,RDX
            call .L_411aa0

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R15
            call .L_426070

            mov DWORD PTR [R14],1
            jmp .L_416f32
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416f30:

            xor EBP,EBP
.L_416f32:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_416f54

            add RSP,24
.L_416f49:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416f54:

            call __stack_chk_fail@PLT
.L_416f59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416f60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_416f6e:

            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp ECX,3
            jbe .L_417064

            mov R12,RSI
            lea RSI,QWORD PTR [RSP+12]
            mov R14,RDI
            mov RDI,R12
            mov R15,RDX
            mov EBX,ECX
            call .L_4055b0

            test EAX,EAX
            je .L_417064

            sub EBX,4
            cmp DWORD PTR [RSP+12],EBX
            ja .L_417064

            mov RDI,QWORD PTR [R14+40]
            mov ESI,1
            call .L_411a30

            test RAX,RAX
            mov RBP,RAX
            je .L_417064

            mov EAX,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [R14+40]
            lea ESI,DWORD PTR [RAX+1]
            call .L_425fb0

            test RAX,RAX
            mov R13,RAX
            je .L_41705c

            mov ECX,DWORD PTR [RSP+12]
            mov EDX,1
            mov RSI,RAX
            mov RDI,R12
            call QWORD PTR [R12+280]

            cmp EAX,DWORD PTR [RSP+12]
            jne .L_417050

            lea RDX,QWORD PTR [RIP+.L_41d980]
            sub EBX,EAX
            mov EAX,EAX
            mov BYTE PTR [R13+RAX*1],0
            mov RCX,R13
            mov RDI,RBP
            mov RSI,RDX
            call .L_411aa0

            test EAX,EAX
            je .L_417050

            mov RDI,QWORD PTR [R14+40]
            mov RSI,R13
            call .L_426070

            cmp EBX,7
            ja .L_417090
.L_41703d:

            mov DWORD PTR [R15],1
            jmp .L_417066
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417050:

            mov RDI,QWORD PTR [R14+40]
            mov RSI,R13
            call .L_426070
.L_41705c:

            mov RDI,RBP
            call .L_411c50
.L_417064:

            xor EBP,EBP
.L_417066:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41717a

            add RSP,40
.L_417081:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417090:

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,R12
            call .L_4055b0

            test EAX,EAX
            je .L_41703d

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,R12
            call .L_4055b0

            test EAX,EAX
            je .L_41703d

            mov EDX,DWORD PTR [RSP+20]
            lea ECX,DWORD PTR [RBX-8]
            mov RBX,RCX
            mov RAX,RDX
            add RDX,RDX
            cmp RCX,RDX
            jb .L_41703d

            test EAX,EAX
            je .L_41710d

            lea R14,QWORD PTR [RSP+10]
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4170e0:

            mov ECX,1
            mov EDX,2
            mov RSI,R14
            mov RDI,R12
            call QWORD PTR [R12+280]

            test EAX,EAX
            je .L_41703d

            mov EAX,DWORD PTR [RSP+20]
            add R13D,1
            cmp EAX,R13D
            ja .L_4170e0
.L_41710d:

            add EAX,EAX
            sub EBX,EAX
            cmp EBX,69
            jbe .L_41703d

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call .L_405470

            test EAX,EAX
            je .L_41703d

            lea RSI,QWORD PTR [RSP+7]
            mov RDI,R12
            call .L_4053e0

            test EAX,EAX
            je .L_41703d

            mov EBX,67
            lea R14,QWORD PTR [RSP+10]
            jmp .L_417159
.L_417150:

            sub EBX,1
            je .L_41703d
.L_417159:

            mov ECX,1
            mov EDX,1
            mov RSI,R14
            mov RDI,R12
            call QWORD PTR [R12+280]

            test EAX,EAX
            jne .L_417150

            jmp .L_41705c
.L_41717a:

            call __stack_chk_fail@PLT
.L_41717f:

            nop
.L_417180:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov ESI,1
            mov R15,RDX
            mov EBP,ECX
            sub RSP,8
.L_41719e:

            mov RDI,QWORD PTR [RDI+40]
            call .L_411a30

            test RAX,RAX
            mov RBX,RAX
            je .L_4171ff

            cmp EBP,-1
            mov DWORD PTR [R15],0
            je .L_417218

            mov RDI,QWORD PTR [R12+40]
            lea ESI,DWORD PTR [RBP+1]
            call .L_425fb0

            test RAX,RAX
            mov R13,RAX
            je .L_417218

            mov ECX,EBP
            mov EDX,1
            mov RSI,RAX
            mov RDI,R14
            call QWORD PTR [R14+280]

            cmp EAX,EBP
            je .L_417228
.L_4171e8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_411c50

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R13
            call .L_426070
.L_4171ff:

            add RSP,8
.L_417203:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417218:

            mov RDI,RBX
            xor EBX,EBX
            call .L_411c50

            jmp .L_4171ff
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417228:

            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov EAX,EAX
            mov RCX,R13
            mov BYTE PTR [R13+RAX*1],0
            mov RDI,RBX
            mov DWORD PTR [R15],1
            mov RSI,RDX
            call .L_411aa0

            test EAX,EAX
            je .L_4171e8

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R13
            call .L_426070

            jmp .L_4171ff
.L_41725f:

            nop
.L_417260:

            mov RDI,RSI
            jmp .L_4121b0
.L_417268:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417270:

            mov RDI,RSI
            jmp .L_412200
.L_417278:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417280:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov RDI,RBX
            sub RSP,72
.L_41729a:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_417398

            mov ESI,DWORD PTR [RSP+4]
            mov RDI,QWORD PTR [RBP+40]
            cmp ESI,16
            ja .L_4173a0

            lea R8,QWORD PTR [RIP+.L_41d888]
            xor EDX,EDX
            mov RCX,R8
            call .L_412100

            mov R14,RAX
            mov EAX,DWORD PTR [RSP+4]
            test EAX,EAX
            je .L_417388

            xor EBP,EBP
            lea R12,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+10]
            jmp .L_417336
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417300:

            mov RDX,R13
            mov ESI,3
            mov RDI,RBX
            mov BYTE PTR [RSP+48],0
            call .L_405510

            test EAX,EAX
            je .L_417351

            xor ECX,ECX
            mov RDX,R13
            mov RSI,R12
            mov RDI,R14
            call .L_4122d0

            test EAX,EAX
            je .L_417351

            add EBP,1
            cmp DWORD PTR [RSP+4],EBP
            jbe .L_417388
.L_417336:

            mov ECX,1
            mov EDX,32
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_417300
.L_417351:

            mov RDI,R14
            mov DWORD PTR [R15],0
            xor R14D,R14D
            call .L_4121b0
.L_417363:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_4173ba

            add RSP,72
.L_41737a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417388:

            mov DWORD PTR [R15],1
            jmp .L_417363
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417398:

            xor R14D,R14D
            jmp .L_417363
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4173a0:

            lea RDX,QWORD PTR [RIP+.L_41d870]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            xor R14D,R14D
            call .L_426320

            jmp .L_417363
.L_4173ba:

            call __stack_chk_fail@PLT
.L_4173bf:

            nop
.L_4173c0:

            push RBP
            push RBX
            mov RBX,RSI
            mov RSI,RDX
            sub RSP,40
.L_4173cc:

            lea RBP,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RDI,RBP
            call .L_406470

            mov RDX,RBP
            mov ESI,12
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            setne AL
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_417419

            add RSP,40
.L_417413:

            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_417419:

            call __stack_chk_fail@PLT
.L_41741e:

            nop
            nop
.L_417420:

            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,56
            sub RSP,40
.L_417435:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_425fb0

            test RAX,RAX
            je .L_4174b0

            lea R13,QWORD PTR [RSP+12]
            mov RBX,RAX
            mov ECX,1
            mov EDX,12
            mov RDI,RBP
            mov RSI,R13
            call QWORD PTR [RBP+280]

            cmp EAX,1
            jne .L_4174b0

            mov RSI,RBX
            mov RDI,R13
            call .L_406350

            mov DWORD PTR [R12],1
.L_41748f:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4174b4

            add RSP,40
.L_4174a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4174b0:

            xor EBX,EBX
            jmp .L_41748f
.L_4174b4:

            call __stack_chk_fail@PLT
.L_4174b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4174c0:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R13,RDI
            mov RDI,R12
            mov RBP,RDX
            sub RSP,40
.L_4174d6:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_417600

            mov ESI,DWORD PTR [RSP+12]
            test ESI,ESI
            je .L_4175c0

            cmp ESI,1
            je .L_417578

            cmp ESI,32767
            ja .L_417600

            mov RDI,QWORD PTR [R13+40]
            xor EDX,EDX
            call .L_4274b0

            test RAX,RAX
            mov RBX,RAX
            je .L_417600

            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RSP+12]
            mov RDI,R12
            call .L_405510

            test EAX,EAX
            je .L_4175f0
.L_41754a:

            mov DWORD PTR [RBP],1
.L_417551:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_417607

            add RSP,40
.L_41756c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417578:

            lea RSI,QWORD PTR [RSP+10]
            mov RDI,R12
            xor EBX,EBX
            call .L_405470

            test EAX,EAX
            je .L_417551

            movzx EDI,WORD PTR [RSP+10]
            call .L_4061d0

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RBP],1
            mov ESI,1
            movsd QWORD PTR [RSP+16],XMM0
            call .L_427720

            mov RBX,RAX
            jmp .L_417551
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4175c0:

            mov RAX,QWORD PTR [RIP+.L_41da60]
            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov QWORD PTR [RSP+16],RAX
            call .L_427720

            test RAX,RAX
            mov RBX,RAX
            jne .L_41754a

            jmp .L_417551
.L_4175f0:

            mov RDI,RBX
            call .L_427870

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417600:

            xor EBX,EBX
            jmp .L_417551
.L_417607:

            call __stack_chk_fail@PLT
.L_41760c:

            nop
            nop
            nop
            nop
.L_417610:

            test ECX,ECX
            je .L_4176e0

            lea EAX,DWORD PTR [RCX-1]
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_417622:

            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*8+8]
            jmp .L_41763d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417630:

            add RBX,8
            cmp R12,RBX
            je .L_4176d0
.L_41763d:

            movsd XMM0,QWORD PTR [RIP+.L_41da68]
            movsd XMM1,QWORD PTR [RIP+.L_41da78]
            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RIP+.L_41da70]
            addsd XMM0,QWORD PTR [RIP+.L_41da40]
            andpd XMM1,XMM0
            movapd XMM2,XMM0
            ucomisd XMM3,XMM1
            jbe .L_4176ae

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_41da60]
            cvtsi2sd XMM1,RAX
            movapd XMM4,XMM1
            cmpnlesd XMM4,XMM0
            movapd XMM0,XMM4
            andpd XMM0,XMM5
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_41da78]
            andnpd XMM1,XMM2
            orpd XMM0,XMM1
.L_4176ae:

            cvttsd2si RSI,XMM0
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            jne .L_417630

            pop RBX
.L_4176c4:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4176d0:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4176e0:

            mov EAX,1
            ret 
.L_4176e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4176f0:

            push R15
            push R14
            xor R15D,R15D
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            mov ESI,11
            sub RSP,104
.L_41770f:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RSP+40],RAX
            call .L_406d40

            mov RDI,RBP
            mov QWORD PTR [RSP+24],RAX
            call QWORD PTR [RBP+304]

            mov RDI,R12
            mov DWORD PTR [RSP+36],EAX
            call .L_431020

            mov RDI,R12
            mov R13D,EAX
            call .L_431050

            mov RDI,R12
            mov DWORD PTR [RSP+16],EAX
            call .L_4314b0

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,EAX
            mov R14D,EAX
            call .L_426010

            test RAX,RAX
            je .L_4177c4

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,R14D
            mov R12,RAX
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_4177f0

            movzx ESI,R13W
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            jne .L_417800
.L_4177a7:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            xor R15D,R15D
            call .L_426070

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RSP+8]
            call .L_426070
.L_4177c4:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_417ac2

            add RSP,104
.L_4177df:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4177f0:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            call .L_426070

            jmp .L_4177c4
          .byte 0x66
          .byte 0x90
.L_417800:

            movzx ESI,WORD PTR [RSP+16]
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_4177a7

            movzx ESI,R14W
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_4177a7

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            test R14D,R14D
            mov DWORD PTR [RSP+72],EAX
            je .L_417a66

            xor R13D,R13D
            jmp .L_41785e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417840:

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_4177a7

            lea EAX,DWORD PTR [R13+1]
            cmp R14D,EAX
            je .L_417871

            mov R13D,EAX
.L_41785e:

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            jne .L_417840

            jmp .L_4177a7
.L_417871:

            mov EAX,DWORD PTR [RSP+36]
            mov RCX,QWORD PTR [RSP+8]
            mov R15,R12
            mov QWORD PTR [RSP+56],R12
            mov DWORD PTR [RSP+76],R14D
            mov QWORD PTR [RSP+16],RBX
            sub EAX,8
            mov DWORD PTR [RSP+36],EAX
            lea RAX,QWORD PTR [R12+4]
            mov R12,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RAX+R13*4]
            mov R13,RCX
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
.L_4178b0:

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            sub EAX,DWORD PTR [RSP+36]
            mov ESI,DWORD PTR [R12+8]
            mov DWORD PTR [R15],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_4178ed

            jmp .L_417a00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4178e0:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_417a00
.L_4178ed:

            cmp ESI,DWORD PTR [RAX]
            jne .L_4178e0
.L_4178f1:

            mov RDI,RBP
            mov RBX,RAX
            call .L_405c70

            test EAX,EAX
            je .L_417a57

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_417a57

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            mov ECX,1
            mov R14D,EAX
            mov RDX,R12
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+16]
            call QWORD PTR [RBX+16]

            test EAX,EAX
            je .L_417a57

            mov RDI,RBP
            call .L_406760

            test EAX,EAX
            je .L_417a57

            mov RDI,RBP
            add R15,4
            add R13,4
            call QWORD PTR [RBP+304]

            sub EAX,R14D
            mov R12,QWORD PTR [R12+56]
            mov DWORD PTR [R13-4],EAX
            cmp R15,QWORD PTR [RSP+48]
            jne .L_4178b0

            mov RDI,RBP
            mov R14D,DWORD PTR [RSP+76]
            mov R12,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+16]
            call QWORD PTR [RBP+304]

            mov ESI,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+16],EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_4177a7

            mov RCX,QWORD PTR [RSP+64]
            lea EAX,DWORD PTR [R14-1]
            mov R13,R12
            mov R15,QWORD PTR [RSP+8]
            lea R14,QWORD PTR [RCX+RAX*4]
            jmp .L_4179e1
.L_4179bd:

            mov ESI,DWORD PTR [R15]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_4177a7

            add R13,4
            add R15,4
            cmp R14,R13
            je .L_417a88
.L_4179e1:

            mov ESI,DWORD PTR [R13]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            jne .L_4179bd

            jmp .L_4177a7
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417a00:

            lea RAX,QWORD PTR [RIP+.L_640e20]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417a10:

            cmp ESI,DWORD PTR [RAX]
            je .L_4178f1

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_417a10

            mov RBX,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSP+83]
            mov R12,QWORD PTR [RSP+56]
            mov RDI,RBP
            call .L_426440

            mov RDI,QWORD PTR [RBX+40]
            lea RDX,QWORD PTR [RIP+.L_41d889]
            mov RCX,RBP
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_4177a7
.L_417a57:

            mov R12,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+16]
            jmp .L_4177a7
.L_417a66:

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            mov ESI,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+16],EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_4177a7
.L_417a88:

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_4177a7

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R12
            mov R15D,1
            call .L_426070

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,QWORD PTR [RSP+8]
            call .L_426070

            jmp .L_4177c4
.L_417ac2:

            call __stack_chk_fail@PLT
.L_417ac7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417ad0:

            movsd XMM1,QWORD PTR [RIP+.L_41da28]
            mov EAX,1668641398
            ucomisd XMM1,XMM0
            ja .L_417ae9

            cmp DWORD PTR [RDI+8],1
            je .L_417af0
.L_417ae9:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417af0:

            mov RAX,QWORD PTR [RDI+16]
            cmp DWORD PTR [RAX+8],6
            sbb EAX,EAX
            and EAX,216793067
            add EAX,1668641398
            ret 
.L_417b05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417b10:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RSI
            sub RSP,24
.L_417b29:

            mov RAX,QWORD PTR [RDX]
            mov EDX,DWORD PTR [RAX+8]
            cmp EDX,1835103334
            je .L_417c10
.L_417b3b:

            cmp EDX,1668707188
            je .L_417b80

            cmp EDX,1668052340
            je .L_417bf0
.L_417b4f:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41d650]
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            xor EAX,EAX
.L_417b67:

            add RSP,24
.L_417b6b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b80:

            mov RCX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP],RCX
            je .L_417f00

            mov EDX,DWORD PTR [RAX+8]
            xor R13D,R13D
            cmp EDX,1668052340
            je .L_417bf8
.L_417ba3:

            cmp EDX,1668707188
            jne .L_417b4f

            mov RCX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP+8],RCX
            jne .L_417b4f
.L_417bbd:

            test R13,R13
            je .L_417db8

            mov RAX,QWORD PTR [R13+8]
            mov R15D,DWORD PTR [RAX+20]
.L_417bce:

            movzx ESI,BYTE PTR [R14+8]
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            jne .L_417c40
.L_417bdf:

            xor EAX,EAX
.L_417be1:

            add RSP,24
.L_417be5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_417bf0:

            mov QWORD PTR [RSP],0
.L_417bf8:

            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_417ef2

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_417ba3
          .byte 0x66
          .byte 0x90
.L_417c10:

            mov RBP,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_417dc0

            xor R13D,R13D
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP],0
            xor R15D,R15D
            jmp .L_417bce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417c40:

            movzx ESI,BYTE PTR [R14+12]
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_417bdf

            movzx ESI,R15B
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_417bdf

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_417bdf

            test RBP,RBP
            je .L_417dc8

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_405e60

            test EAX,EAX
            je .L_417bdf
.L_417d60:

            mov EDX,DWORD PTR [R14+8]
            mov RDI,QWORD PTR [R12+40]
            mov RSI,RBX
            mov RCX,QWORD PTR [RSP]
            call .L_4010e0

            test EAX,EAX
            je .L_417bdf

            mov R10D,DWORD PTR [R14+12]
            mov EDX,DWORD PTR [R14+8]
            test R10D,R10D
            je .L_417d93

            test R15D,R15D
            jne .L_417e8f
.L_417d93:

            mov RDI,QWORD PTR [R12+40]
            mov RCX,QWORD PTR [RSP+8]
            mov EDX,R10D
            mov RSI,RBX
            call .L_4010e0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_417b67
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417db8:

            xor R15D,R15D
            jmp .L_417bce
.L_417dc0:

            mov EDX,DWORD PTR [RAX+8]
            jmp .L_417b3b
.L_417dc8:

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_417bdf

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            jne .L_417d60

            xor EAX,EAX
            jmp .L_417be1
.L_417e8f:

            mov ESI,R15D
            mov EDI,R10D
            call .L_4011d7

            cmp EAX,-1
            mov R15D,EAX
            je .L_417bdf

            test R13,R13
            je .L_417d93

            test EAX,EAX
            je .L_417d93

            xor EBP,EBP
.L_417eb9:

            mov RAX,QWORD PTR [R13]
            mov RDI,RBX
            movzx ESI,WORD PTR [RAX+RBP*2]
            imul ESI,ESI,65281
            add ESI,8388608
            shr ESI,24
            call .L_405b00

            test EAX,EAX
            je .L_417bdf

            add RBP,1
            cmp R15D,EBP
            ja .L_417eb9

            mov R10D,DWORD PTR [R14+12]
            jmp .L_417d93
.L_417ef2:

            mov QWORD PTR [RSP+8],0
            jmp .L_417bbd
.L_417f00:

            xor R13D,R13D
            mov QWORD PTR [RSP+8],0
            xor R15D,R15D
            jmp .L_417bce
.L_417f14:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417f20:

            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            mov ESI,R12D
            mov RBP,RDI
            sub RSP,8
            xor R13D,R13D
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_417f6e

            mov EDX,4
            mov ESI,R12D
            mov RDI,RBP
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_417f80

            mov QWORD PTR [RBX],RBP
            mov R13D,1
.L_417f6e:

            add RSP,8
            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417f80:

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_426070

            jmp .L_417f6e
.L_417f8e:

            nop
            nop
.L_417f90:

            push R13
            push R12
            xor EAX,EAX
            push RBP
            push RBX
            mov RBP,RDI
            mov R13D,ECX
            mov RDI,RSI
            mov ECX,12
            sub RSP,8
            mov RBX,RSI
            mov R12D,EDX

            rep stosq QWORD PTR [RDI]

            mov RDI,RBP
            call .L_417f20

            test EAX,EAX
            je .L_417fd2

            lea RSI,QWORD PTR [RBX+24]
            mov EDX,R12D
            mov RDI,RBP
            call .L_417f20

            test EAX,EAX
            jne .L_417ff0
.L_417fd2:

            mov RDI,RBX
            call .L_415170

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ff0:

            cmp R13D,16
            ja .L_418010
.L_417ff6:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418010:

            lea RSI,QWORD PTR [RBX+48]
            mov EDX,R12D
            mov RDI,RBP
            call .L_417f20

            test EAX,EAX
            je .L_417fd2

            cmp R13D,24
            jbe .L_417ff6

            lea RSI,QWORD PTR [RBX+72]
            mov EDX,R12D
            mov RDI,RBP
            call .L_417f20

            test EAX,EAX
            je .L_417fd2

            jmp .L_417ff6
.L_41803e:

            nop
            nop
.L_418040:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EBX,ECX
            mov RBP,RDI
            mov ESI,DWORD PTR [RSI+RBX*4]
            call .L_405c70

            test EAX,EAX
            je .L_41806f

            mov RAX,QWORD PTR [R12]
            mov RDI,RBP
            mov ESI,DWORD PTR [RAX+RBX*4]
            call .L_405c70

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41806f:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_418074:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418080:

            test EDX,EDX
            je .L_418144

            push R15
            push R14
            lea R15,QWORD PTR [RSI+40]
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12D,ECX
            mov RBP,RDI
            lea R14,QWORD PTR [RSI+16]
            xor EBX,EBX
            sub RSP,24
.L_4180a9:

            mov DWORD PTR [RSP+12],EDX
            jmp .L_4180b9
          .byte 0x90
.L_4180b0:

            add EBX,1
            cmp DWORD PTR [RSP+12],EBX
            je .L_418130
.L_4180b9:

            mov RSI,QWORD PTR [R13+8]
            mov ECX,EBX
            mov RDX,R14
            mov RDI,RBP
            call .L_418040

            test EAX,EAX
            je .L_41811b

            mov RSI,QWORD PTR [R13+32]
            mov ECX,EBX
            mov RDX,R15
            mov RDI,RBP
            call .L_418040

            test EAX,EAX
            je .L_41811b

            cmp R12D,16
            je .L_4180b0

            mov RSI,QWORD PTR [R13+56]
            lea RDX,QWORD PTR [R13+64]
            mov ECX,EBX
            mov RDI,RBP
            call .L_418040

            test EAX,EAX
            je .L_41811b

            cmp R12D,24
            jbe .L_4180b0

            mov RSI,QWORD PTR [R13+80]
            lea RDX,QWORD PTR [R13+88]
            mov ECX,EBX
            mov RDI,RBP
            call .L_418040

            test EAX,EAX
            jne .L_4180b0
.L_41811b:

            add RSP,24
.L_41811f:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418130:

            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_418144:

            mov EAX,1
            ret 
.L_41814a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418150:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            sub RSP,8
            mov ESI,DWORD PTR [RDX]
            call .L_405c70

            test EAX,EAX
            jne .L_418180
.L_41816e:

            xor EAX,EAX
.L_418170:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418180:

            mov ESI,DWORD PTR [R13+4]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41816e

            mov EAX,DWORD PTR [R13+4]
            xor R12D,R12D
            test EAX,EAX
            jne .L_4181ca

            jmp .L_4181f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4181a0:

            movsd XMM0,QWORD PTR [RBP+16]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_41816e

            mov ESI,DWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41816e

            add R12D,1
            cmp R12D,DWORD PTR [R13+4]
            jae .L_4181f0
.L_4181ca:

            mov EAX,R12D
            mov RDI,RBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RBP,QWORD PTR [R13+RAX*8]
            movsd XMM0,QWORD PTR [RBP+8]
            call .L_405e60

            test EAX,EAX
            jne .L_4181a0

            jmp .L_41816e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181f0:

            mov EAX,1
            jmp .L_418170
.L_4181fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418200:

            push R14
            mov ECX,ECX
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
            mov RSI,QWORD PTR [RSI]
            lea RBX,QWORD PTR [RCX*4]
            mov RBP,RDI
            mov R14,RDX
            mov R12D,R8D
            add RSI,RBX
            call .L_4055b0

            test EAX,EAX
            jne .L_418240
.L_41822d:

            xor EAX,EAX
.L_41822f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418240:

            mov RSI,QWORD PTR [R14]
            mov RDI,RBP
            add RSI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41822d

            add RBX,QWORD PTR [R13]
            mov EAX,1
            mov EDX,DWORD PTR [RBX]
            test EDX,EDX
            je .L_41822f

            add R12D,EDX
            mov DWORD PTR [RBX],R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_418270:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,RDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            sub RSP,120
.L_41828a:

            lea RSI,QWORD PTR [RSP+14]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_405470

            test EAX,EAX
            je .L_418320

            xor ESI,ESI
            mov RDI,RBP
            call .L_405470

            test EAX,EAX
            je .L_418320

            movzx ECX,WORD PTR [RSP+14]
            cmp CX,4
            ja .L_418368

            lea RDX,QWORD PTR [RIP+.L_41d990]
            movsxd RAX,ECX
            lea R13,QWORD PTR [RSP+16]
            pxor XMM0,XMM0
            mov EAX,DWORD PTR [RDX+RAX*4]
            movaps XMMWORD PTR [RSP+16],XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            jle .L_41834d

            sub EAX,1
            mov RBX,R13
            lea R12,QWORD PTR [R13+RAX*8+8]
            jmp .L_418311
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418308:

            add RBX,8
            cmp R12,RBX
            je .L_418348
.L_418311:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            jne .L_418308
.L_418320:

            xor EAX,EAX
.L_418322:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418381

            add RSP,120
.L_418336:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418348:

            movzx ECX,WORD PTR [RSP+14]
.L_41834d:

            mov RDI,QWORD PTR [R14+40]
            lea ESI,DWORD PTR [RCX+1]
            mov RDX,R13
            call .L_427720

            mov DWORD PTR [R15],1
            jmp .L_418322
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418368:

            mov RDI,QWORD PTR [R14+40]
            lea RDX,QWORD PTR [RIP+.L_41d678]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_418320
.L_418381:

            call __stack_chk_fail@PLT
.L_418386:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418390:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            pxor XMM0,XMM0
            mov RDI,RBP
            sub RSP,72
.L_4183a7:

            mov R13,RDX
            mov RBX,RSP
            mov QWORD PTR [RSP+48],0
            mov RSI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            call .L_4055b0

            test EAX,EAX
            je .L_418440

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_405900

            test EAX,EAX
            je .L_418440

            lea RSI,QWORD PTR [RBX+32]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_418440

            lea RSI,QWORD PTR [RBX+40]
            mov RDI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_418440

            lea RSI,QWORD PTR [RBX+48]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_418440

            mov RDI,QWORD PTR [R12+40]
            mov DWORD PTR [R13],1
            mov EDX,56
            mov RSI,RBX
            call .L_426090

            jmp .L_418442
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418440:

            xor EAX,EAX
.L_418442:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41845d

            add RSP,72
.L_418456:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41845d:

            call __stack_chk_fail@PLT
.L_418462:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418470:

            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,48
            mov ESI,DWORD PTR [RDX+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp ESI,8
            ja .L_41849e

            mov RBP,QWORD PTR [RDX+48]
            mov ECX,DWORD PTR [RBP+20]
            test ECX,ECX
            jne .L_4184c0
.L_41849e:

            xor EAX,EAX
.L_4184a0:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418579

            add RSP,48
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4184c0:

            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call .L_405b50

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_41849e

            movzx ESI,WORD PTR [RDX+20]
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_41849e

            mov ESI,DWORD PTR [RDX+16]
            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RSP+16]
            test ESI,ESI
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_41851f

            lea RDX,QWORD PTR [RSP+16]
            xor EAX,EAX
            mov RDI,QWORD PTR [RBP+8]
            nop
            nop
            nop
            nop
            nop
.L_418510:

            mov ECX,DWORD PTR [RDI+RAX*4+20]
            mov BYTE PTR [RDX+RAX*1],CL
            add RAX,1
            cmp ESI,EAX
            ja .L_418510
.L_41851f:

            mov ESI,16
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_41849e

            mov EAX,DWORD PTR [RBP+16]
            xor R12D,R12D
            test EAX,EAX
            jne .L_418552

            jmp .L_41856f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418548:

            add R12D,1
            cmp DWORD PTR [RBP+16],R12D
            jbe .L_41856f
.L_418552:

            mov RDX,QWORD PTR [RBP]
            mov EAX,R12D
            mov RDI,RBX
            movss XMM0,DWORD PTR [RDX+RAX*4]
            call .L_405d10

            test EAX,EAX
            jne .L_418548

            jmp .L_41849e
.L_41856f:

            mov EAX,1
            jmp .L_4184a0
.L_418579:

            call __stack_chk_fail@PLT
.L_41857e:

            nop
            nop
.L_418580:

            push R15
            push R14
            mov RDI,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R15,RDX
            sub RSP,72
.L_418597:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_412410

            mov RDI,R12
            mov ESI,EAX
            mov R14D,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41864a

            xor EBP,EBP
            test R14D,R14D
            lea RBX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+10]
            jg .L_418618

            jmp .L_418670
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4185e0:

            mov BYTE PTR [RSP+48],0
            mov RDX,RBX
            mov ESI,32
            mov RDI,R12
            call QWORD PTR [R12+312]

            test EAX,EAX
            je .L_418648

            mov RDX,R13
            mov ESI,3
            mov RDI,R12
            call .L_405be0

            test EAX,EAX
            je .L_418648

            add EBP,1
            cmp R14D,EBP
            je .L_418670
.L_418618:

            pxor XMM0,XMM0
            sub RSP,8
.L_418620:

            mov BYTE PTR [RBX+32],0
            xor ECX,ECX
            xor R8D,R8D
            mov RDX,RBX
            mov R9,R13
            mov ESI,EBP
            mov RDI,R15
            movaps XMMWORD PTR [RBX],XMM0
            movaps XMMWORD PTR [RBX+16],XMM0
            push 0
            call .L_412420

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_4185e0
.L_418648:

            xor EAX,EAX
.L_41864a:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_418677

            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418670:

            mov EAX,1
            jmp .L_41864a
.L_418677:

            call __stack_chk_fail@PLT
.L_41867c:

            nop
            nop
            nop
            nop
.L_418680:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov RDI,RBX
            sub RSP,200
.L_41869a:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP+8],RDX
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RCX
            xor ECX,ECX
            call .L_4055b0

            test EAX,EAX
            je .L_41881e

            lea RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41881e

            lea RSI,QWORD PTR [RSP+36]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41881e

            lea R12,QWORD PTR [RSP+80]
            mov ECX,1
            mov EDX,32
            mov RDI,RBX
            mov RSI,R12
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41881e

            lea R13,QWORD PTR [RSP+112]
            mov ECX,1
            mov EDX,32
            mov RDI,RBX
            mov RSI,R13
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41881e

            mov RDI,QWORD PTR [RBP+40]
            mov EDX,DWORD PTR [RSP+36]
            mov R8,R13
            mov ESI,DWORD PTR [RSP+32]
            mov RCX,R12
            mov BYTE PTR [RSP+143],0
            mov BYTE PTR [RSP+111],0
            call .L_412100

            test RAX,RAX
            mov R15,RAX
            je .L_418876

            mov ECX,DWORD PTR [RSP+36]
            cmp ECX,16
            ja .L_41885d

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            je .L_418850

            xor R12D,R12D
            lea RBP,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+144]
            lea R14,QWORD PTR [RSP+42]
            jmp .L_4187ef
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187a0:

            mov RDX,R14
            mov ESI,3
            mov RDI,RBX
            mov BYTE PTR [RSP+176],0
            call .L_405510

            test EAX,EAX
            je .L_418816

            mov ESI,DWORD PTR [RSP+36]
            mov RDX,RBP
            mov RDI,RBX
            call .L_405510

            test EAX,EAX
            je .L_418816

            mov RCX,RBP
            mov RDX,R14
            mov RSI,R13
            mov RDI,R15
            call .L_4122d0

            test EAX,EAX
            je .L_418816

            add R12D,1
            cmp DWORD PTR [RSP+32],R12D
            jbe .L_418850
.L_4187ef:

            pxor XMM0,XMM0
            mov ECX,1
            mov EDX,32
            mov RSI,R13
            mov RDI,RBX
            movaps XMMWORD PTR [RBP],XMM0
            movaps XMMWORD PTR [RBP+16],XMM0
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_4187a0
.L_418816:

            mov RDI,R15
            call .L_4121b0
.L_41881e:

            xor R15D,R15D
.L_418821:

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_418893

            add RSP,200
.L_41883e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418850:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            jmp .L_418821
.L_41885d:

            mov RDI,QWORD PTR [RBP+40]
            lea RDX,QWORD PTR [RIP+.L_41d6e0]
            mov ESI,2
            xor EAX,EAX
            call .L_426320

            jmp .L_418816
.L_418876:

            mov RDI,QWORD PTR [RBP+40]
            mov ECX,DWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_41d8a5]
            mov ESI,2
            xor EAX,EAX
            call .L_426320

            jmp .L_418821
.L_418893:

            call __stack_chk_fail@PLT
.L_418898:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4188a0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4188a7:

            je .L_418919

            test RDX,RDX
            mov RBP,RDI
            jne .L_4188b5

            test ESI,ESI
            jne .L_4188fa
.L_4188b5:

            test ESI,ESI
            je .L_4188f0

            lea EAX,DWORD PTR [RSI-1]
            mov RBX,RDX
            lea R12,QWORD PTR [RDX+RAX*4+4]
            jmp .L_4188d9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4188d0:

            add RBX,4
            cmp RBX,R12
            je .L_4188f0
.L_4188d9:

            movzx ESI,WORD PTR [RBX]
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            jne .L_4188d0

            pop RBX
.L_4188e9:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4188f0:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_4188fa:

            lea RCX,QWORD PTR [RIP+.L_41da10]
            lea RSI,QWORD PTR [RIP+.L_41d8c0]
            lea RDI,QWORD PTR [RIP+.L_41d708]
            mov EDX,128
            call __assert_fail@PLT
.L_418919:

            lea RCX,QWORD PTR [RIP+.L_41da10]
            lea RSI,QWORD PTR [RIP+.L_41d8c0]
            lea RDI,QWORD PTR [RIP+.L_41d8cb]
            mov EDX,127
            call __assert_fail@PLT
.L_418938:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418940:

            push R15
            pxor XMM0,XMM0
            push R14
            push R13
            xor R8D,R8D
            push R12
            mov R12,RDX
            push RBP
            lea RDX,QWORD PTR [RIP+.L_41d980]
            push RBX
            xor ECX,ECX
            mov RBX,RDI
            mov R13,RSI
            mov RDI,R12
            sub RSP,104
.L_41896a:

            mov RSI,RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov DWORD PTR [RSP+80],0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_411d60

            test EAX,EAX
            jne .L_418a50

            mov RDI,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RIP+.L_41d888]
            mov EDX,1
            call .L_426090

            mov RDI,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RIP+.L_41da24]
            mov EDX,4
            mov RBP,RAX
            call .L_426090

            mov R14,RAX
.L_4189d6:

            mov RDI,RBP
            call strlen@PLT

            lea R12D,DWORD PTR [RAX+1]
            mov RDI,R13
            mov ESI,R12D
            call .L_405c70

            test EAX,EAX
            je .L_418a09

            mov RDX,RBP
            mov ESI,R12D
            mov RDI,R13
            call QWORD PTR [R13+312]

            test EAX,EAX
            jne .L_418ad8
.L_418a09:

            xor R15D,R15D
.L_418a0c:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,RBP
            call .L_426070

            test R14,R14
            je .L_418a29

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,R14
            call .L_426070
.L_418a29:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_418ba1

            add RSP,104
.L_418a44:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_418a50:

            mov RDI,QWORD PTR [RBX+40]
            mov EDX,1
            mov ESI,EAX
            mov DWORD PTR [RSP+12],EAX
            xor R15D,R15D
            call .L_426010

            test RAX,RAX
            mov RBP,RAX
            je .L_418a29

            mov R9D,DWORD PTR [RSP+12]
            mov RDI,QWORD PTR [RBX+40]
            mov EDX,4
            mov ESI,R9D
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_418b90

            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov RCX,RBP
            mov RDI,R12
            mov RSI,RDX
            mov R8D,R9D
            call .L_411d60

            mov R9D,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov RCX,R14
            mov RDI,R12
            mov RSI,RDX
            lea R8D,DWORD PTR [R9*4]
            call .L_411e80

            jmp .L_4189d6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418ad8:

            xor ESI,ESI
            mov RDI,R13
            call .L_405c70

            test EAX,EAX
            je .L_418a09

            mov ESI,R12D
            mov RDI,R13
            call .L_405c70

            test EAX,EAX
            je .L_418a09

            mov RDX,R14
            mov ESI,R12D
            mov RDI,R13
            call .L_4188a0

            test EAX,EAX
            je .L_418a09

            xor ESI,ESI
            mov RDI,R13
            call .L_405b50

            test EAX,EAX
            je .L_418a09

            xor ESI,ESI
            mov RDI,R13
            call .L_405b00

            test EAX,EAX
            je .L_418a09

            lea R15,QWORD PTR [RSP+16]
            mov ESI,67
            mov RDI,R13
            mov RDX,R15
            call QWORD PTR [R13+312]

            test EAX,EAX
            je .L_418a09

            lea R12D,DWORD PTR [R12+R12*2]
            lea EDX,DWORD PTR [R12+90]
            add R12D,93
            mov EAX,R12D
            and EAX,4294967292
            cmp EDX,EAX
            je .L_418ba6

            sub EAX,EDX
            mov RDI,R13
            mov RDX,R15
            mov ESI,EAX
            xor R15D,R15D
            call QWORD PTR [R13+312]

            test EAX,EAX
            setne R15B
            jmp .L_418a0c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418b90:

            mov RDI,QWORD PTR [RBX+40]
            mov RSI,RBP
            call .L_426070

            jmp .L_418a29
.L_418ba1:

            call __stack_chk_fail@PLT
.L_418ba6:

            mov R15D,1
            jmp .L_418a0c
.L_418bb1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418bc0:

            push R15
            push R14
            mov R15D,R9D
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBP,RDX
            mov R14,R8
            mov R12,RDI
            sub RSP,24
.L_418bdd:

            mov QWORD PTR [RSP+8],RSI
            call QWORD PTR [RDI+304]

            mov RSI,QWORD PTR [RSP+8]
            mov EBX,EAX
            mov EDX,EBX
            sub EDX,R15D
            test R14,R14
            mov RAX,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RAX+R13*4]
            mov DWORD PTR [RAX],EDX
            je .L_418c60

            mov EDX,DWORD PTR [R14]
            mov RSI,R14
            test EDX,EDX
            je .L_418c90
.L_418c10:

            add RSI,4
            mov EAX,DWORD PTR [RSI]
            test EAX,EAX
            jne .L_418c10

            sub RSI,R14
            sar RSI,2
.L_418c21:

            mov RDX,R14
            mov RDI,R12
            call .L_4188a0

            test EAX,EAX
            je .L_418c4a

            mov RDI,R12
            call QWORD PTR [R12+304]

            mov RDX,QWORD PTR [RBP]
            sub EAX,EBX
            mov DWORD PTR [RDX+R13*4],EAX
            mov EAX,1
.L_418c4a:

            add RSP,24
.L_418c4e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418c60:

            mov RDX,QWORD PTR [RBP]
            mov DWORD PTR [RDX+R13*4],0
            mov DWORD PTR [RAX],0
            add RSP,24
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418c90:

            xor ESI,ESI
            jmp .L_418c21
.L_418c94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418ca0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
            test RDX,RDX
            je .L_418d98

            mov ESI,DWORD PTR [RDX+12]
            mov RDI,RBX
            mov R12,RDX
            call .L_405c70

            test EAX,EAX
            jne .L_418ce0
.L_418ccc:

            xor EAX,EAX
.L_418cce:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418ce0:

            mov ESI,12
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_418ccc

            mov EAX,DWORD PTR [R12+12]
            lea R15D,DWORD PTR [RAX+RAX*2]
            shl R15D,2
            test EAX,EAX
            je .L_418dd0

            lea EAX,DWORD PTR [R15+16]
            xor R14D,R14D
            mov DWORD PTR [RSP+12],EAX
            jmp .L_418d57
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418d18:

            mov RAX,QWORD PTR [R12+16]
            mov RDI,RBX
            movzx ESI,WORD PTR [RAX+R15*1+2]
            call .L_405b50

            test EAX,EAX
            je .L_418ccc

            mov ESI,R13D
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_418ccc

            mov ESI,EBP
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_418ccc

            add R14D,1
            cmp R14D,DWORD PTR [R12+12]
            jae .L_418dd0
.L_418d57:

            mov EAX,R14D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [R12+16]
            lea R15,QWORD PTR [RDX*4]
            add RAX,R15
            mov R13D,DWORD PTR [RAX+8]
            mov EBP,DWORD PTR [RAX+4]
            movzx ESI,WORD PTR [RAX]
            shr RBP,1
            shr R13,1
            add EBP,DWORD PTR [RSP+12]
            call .L_405b50

            test EAX,EAX
            jne .L_418d18

            jmp .L_418ccc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418d98:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_418ccc

            mov RDI,RBX
            mov ESI,12
            call .L_405c70

            test EAX,EAX
            setne AL
            add RSP,24
.L_418dc0:

            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_418dd0:

            mov ESI,DWORD PTR [R12+28]
            mov RDX,QWORD PTR [R12+32]
            mov RDI,RBX
            shr ESI,2
            call .L_4188a0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_418cce
.L_418df2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418e00:

            push R15
            push R14
            mov R14D,R8D
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_418e11:

            test R9,R9
            je .L_418e88

            mov RBP,R9
            mov R13,RCX
            mov QWORD PTR [RSP+8],RDX
            mov RBX,RSI
            mov R12,RDI
            mov RDI,RSI
            call QWORD PTR [RSI+304]

            mov RDX,QWORD PTR [RSP+8]
            mov R15D,EAX
            mov ECX,1
            mov RSI,RBX
            mov RDI,R12
            mov RAX,QWORD PTR [RDX]
            mov EDX,R15D
            sub EDX,DWORD PTR [RSP+80]
            mov DWORD PTR [RAX+R14*4],EDX
            mov RDX,RBP
            call .L_418ca0

            test EAX,EAX
            je .L_418e76

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov RDX,QWORD PTR [R13]
            sub EAX,R15D
            mov DWORD PTR [RDX+R14*4],EAX
            mov EAX,1
.L_418e76:

            add RSP,24
.L_418e7a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418e88:

            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [RAX+R14*4],0
            mov RAX,QWORD PTR [RDX]
            mov DWORD PTR [RAX+R14*4],0
            mov EAX,1
            jmp .L_418e76
.L_418ea5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418eb0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_418ec1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+8],RDI
            je .L_418f55

            mov R14,RDX
            mov RDI,RSI
            mov R12,RSI
            call QWORD PTR [RSI+304]

            mov RDI,R14
            mov DWORD PTR [RSP+16],EAX
            xor EBX,EBX
            call .L_412ab0

            test RAX,RAX
            je .L_4190d8

            xor R13D,R13D
            xor R15D,R15D
            mov EBP,1
            nop
.L_418f10:

            cmp QWORD PTR [RAX+8],0
            mov RDI,RAX
            cmovne R15D,EBP
            cmp QWORD PTR [RAX+16],0
            cmovne R13D,EBP
            add EBX,1
            call .L_412ad0

            test RAX,RAX
            jne .L_418f10

            cmp R15D,1
            sbb EBP,EBP
            and EBP,4294967288
            add EBP,24
            test R13D,R13D
            lea EAX,DWORD PTR [RBP+8]
            cmovne EBP,EAX
.L_418f47:

            mov ESI,EBX
            mov RDI,R12
            call .L_405c70

            test EAX,EAX
            jne .L_418f80
.L_418f55:

            xor EAX,EAX
.L_418f57:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41913e

            add RSP,152
.L_418f75:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_418f80:

            mov ESI,EBP
            mov RDI,R12
            call .L_405c70

            test EAX,EAX
            je .L_418f55

            mov RDI,R12
            lea R13,QWORD PTR [RSP+32]
            call QWORD PTR [R12+304]

            mov DWORD PTR [RSP+24],EAX
            mov RAX,QWORD PTR [RSP+8]
            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,QWORD PTR [RAX+40]
            call .L_417f90

            test EAX,EAX
            je .L_4190c8

            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,R12
            call .L_418080

            test EAX,EAX
            je .L_4190c8

            mov RDI,R14
            call .L_412ab0

            test EBX,EBX
            mov R14,RAX
            je .L_4190e6

            mov EAX,DWORD PTR [RSP+16]
            lea RCX,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+28],EBP
            xor R15D,R15D
            mov QWORD PTR [RSP+16],RCX
            sub EAX,8
            mov EBP,EAX
            jmp .L_41909e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419010:

            mov R8,QWORD PTR [R14+32]
            lea RDX,QWORD PTR [R13+40]
            lea RSI,QWORD PTR [R13+32]
            mov R9D,EBP
            mov ECX,R15D
            mov RDI,R12
            call .L_418bc0

            test EAX,EAX
            je .L_4190c8

            mov R9,QWORD PTR [R14+8]
            test R9,R9
            je .L_41905e

            sub RSP,8
.L_41903f:

            lea RCX,QWORD PTR [R13+64]
            lea RDX,QWORD PTR [R13+56]
            push RBP
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R12
            mov R8D,R15D
            call .L_418e00

            test EAX,EAX
            pop RSI
            pop RDI
            je .L_4190c8
.L_41905e:

            mov R9,QWORD PTR [R14+16]
            test R9,R9
            je .L_41908a

            sub RSP,8
            lea RCX,QWORD PTR [R13+88]
            lea RDX,QWORD PTR [R13+80]
            push RBP
            mov RDI,QWORD PTR [RSP+24]
            mov R8D,R15D
            mov RSI,R12
            call .L_418e00

            test EAX,EAX
            pop RDX
            pop RCX
            je .L_4190c8
.L_41908a:

            mov RDI,R14
            add R15D,1
            call .L_412ad0

            cmp R15D,EBX
            mov R14,RAX
            je .L_4190e2
.L_41909e:

            mov R8,QWORD PTR [R14+24]
            mov RDX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [R13+8]
            mov R9D,EBP
            mov ECX,R15D
            mov RDI,R12
            call .L_418bc0

            test EAX,EAX
            jne .L_419010

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4190c8:

            mov RDI,R13
            call .L_415170

            jmp .L_418f55
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4190d8:

            mov EBP,16
            jmp .L_418f47
.L_4190e2:

            mov EBP,DWORD PTR [RSP+28]
.L_4190e6:

            mov RDI,R12
            call QWORD PTR [R12+304]

            mov ESI,DWORD PTR [RSP+24]
            mov R14D,EAX
            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_4190c8

            mov ECX,EBP
            mov EDX,EBX
            mov RSI,R13
            mov RDI,R12
            call .L_418080

            test EAX,EAX
            je .L_4190c8

            mov ESI,R14D
            mov RDI,R12
            call QWORD PTR [R12+288]

            test EAX,EAX
            je .L_4190c8

            mov RDI,R13
            call .L_415170

            mov EAX,1
            jmp .L_418f57
.L_41913e:

            call __stack_chk_fail@PLT
.L_419143:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419150:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_41915c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_4191f2

            test ESI,ESI
            je .L_4191d0

            lea EAX,DWORD PTR [RSI-1]
            mov R12,RDI
            mov RBP,RDX
            mov RBX,RDX
            lea R14,QWORD PTR [RSP+6]
            lea R13,QWORD PTR [RDX+RAX*4+4]
            jmp .L_4191b7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419198:

            mov RSI,R14
            mov RDI,R12
            call .L_405470

            test EAX,EAX
            je .L_4191ca

            movzx EAX,WORD PTR [RSP+6]
            mov DWORD PTR [RBX],EAX
.L_4191ae:

            add RBX,4
            cmp RBX,R13
            je .L_4191d0
.L_4191b7:

            test RBP,RBP
            jne .L_419198

            xor ESI,ESI
            mov RDI,R12
            call .L_405470

            test EAX,EAX
            jne .L_4191ae
.L_4191ca:

            xor EAX,EAX
            jmp .L_4191d5
          .byte 0x66
          .byte 0x90
.L_4191d0:

            mov EAX,1
.L_4191d5:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_419211

            add RSP,16
.L_4191e9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4191f2:

            lea RCX,QWORD PTR [RIP+.L_41d9f0]
            lea RSI,QWORD PTR [RIP+.L_41d8c0]
            lea RDI,QWORD PTR [RIP+.L_41d8cb]
            mov EDX,144
            call __assert_fail@PLT
.L_419211:

            call __stack_chk_fail@PLT
.L_419216:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419220:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,24
            mov RAX,QWORD PTR [RSI+8]
            mov EAX,DWORD PTR [RAX+RBP*4]
            test EAX,EAX
            je .L_4192b0

            mov R12,RCX
            mov R13,RSI
            mov RBX,RDI
            mov ESI,EAX
            call QWORD PTR [RDI+288]

            test EAX,EAX
            jne .L_419260
.L_41924c:

            xor EAX,EAX
.L_41924e:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419260:

            mov RAX,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [R13]
            mov EBP,DWORD PTR [RAX+RBP*4]
            shr EBP,1
            lea ESI,DWORD PTR [RBP*4+4]
            call .L_425fe0

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_41924c

            mov RDX,RAX
            mov ESI,EBP
            mov RDI,RBX
            call .L_419150

            test EAX,EAX
            je .L_4192d0

            mov RAX,QWORD PTR [R12]
            mov DWORD PTR [RAX+RBP*4],0
            add RSP,24
.L_4192a2:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_4192b0:

            mov QWORD PTR [RCX],0
            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4192d0:

            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R13]
            mov DWORD PTR [RSP+12],EAX
            call .L_426070

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_41924e
.L_4192ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4192f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,ECX
            sub RSP,88
.L_419303:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+32],RDI
            mov RDI,RBP
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RCX
            xor ECX,ECX
            mov QWORD PTR [RSP+40],RDX
            call .L_4055b0

            test EAX,EAX
            je .L_419480

            lea RSI,QWORD PTR [RSP+60]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_419480

            cmp DWORD PTR [RSP+60],12
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+40]
            jne .L_4194b0

            mov ESI,DWORD PTR [RSP+56]
            call .L_411a30

            test RAX,RAX
            mov R13,RAX
            je .L_419480

            mov R12D,DWORD PTR [RSP+56]
            mov R15D,4294967288
            mov DWORD PTR [RAX+12],R12D
            lea EAX,DWORD PTR [R12+R12*2]
            shl EAX,2
            sub R15D,EAX
            test R12D,R12D
            je .L_41952d

            lea RCX,QWORD PTR [RSP+64]
            add EAX,16
            mov RSI,QWORD PTR [R13+16]
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RBX+8]
            xor R14D,R14D
            mov QWORD PTR [RSP+8],RCX
            lea RCX,QWORD PTR [RSP+68]
            xor R12D,R12D
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+16],RCX
            jmp .L_419454
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4193d0:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,RBP
            add RSI,RBX
            add RSI,2
            call .L_405470

            test EAX,EAX
            je .L_419478

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_419478

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_4055b0

            test EAX,EAX
            je .L_419478

            mov EDX,DWORD PTR [RSP+68]
            cmp DWORD PTR [RSP+24],EDX
            ja .L_419478

            mov EAX,DWORD PTR [RSP+64]
            lea ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,DWORD PTR [RSP+28]
            ja .L_419478

            mov RSI,QWORD PTR [R13+16]
            lea ECX,DWORD PTR [RDX+R15*1-8]
            mov EDX,EAX
            add RDX,RDX
            add EAX,ECX
            add RBX,RSI
            mov DWORD PTR [RBX+8],EDX
            mov EDX,ECX
            add RDX,RDX
            cmp R14D,EAX
            cmovb R14,RAX
            add R12D,1
            cmp DWORD PTR [RSP+56],R12D
            mov DWORD PTR [RBX+4],EDX
            jbe .L_4194d0
.L_419454:

            mov EAX,R12D
            mov RDI,RBP
            lea RBX,QWORD PTR [RAX+RAX*2]
            shl RBX,2
            add RSI,RBX
            call .L_405470

            test EAX,EAX
            jne .L_4193d0

            nop
            nop
            nop
            nop
            nop
            nop
.L_419478:

            mov RDI,R13
            call .L_411c50
.L_419480:

            xor R13D,R13D
.L_419483:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_419531

            add RSP,88
.L_41949e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4194b0:

            lea RDX,QWORD PTR [RIP+.L_41d730]
            mov ESI,8
            xor EAX,EAX
            xor R13D,R13D
            call .L_426320

            jmp .L_419483
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4194d0:

            add R14,R14
            xor EBX,EBX
            test R14D,R14D
            mov R12D,R14D
            jne .L_4194f6
.L_4194dd:

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [R13+32],RBX
            mov DWORD PTR [R13+24],R12D
            mov DWORD PTR [R13+28],R12D
            mov DWORD PTR [RAX],1
            jmp .L_419483
.L_4194f6:

            mov RAX,QWORD PTR [RSP+32]
            mov ESI,R14D
            mov RDI,QWORD PTR [RAX+40]
            call .L_425fb0

            test RAX,RAX
            mov RBX,RAX
            je .L_419478

            mov ESI,R14D
            mov RDX,RAX
            mov RDI,RBP
            shr ESI,2
            call .L_419150

            test EAX,EAX
            jne .L_4194dd

            jmp .L_419478
.L_41952d:

            xor EBX,EBX
            jmp .L_4194dd
.L_419531:

            call __stack_chk_fail@PLT
.L_419536:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419540:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            mov RBP,RDX
            mov R13D,ECX
            sub RSP,24
.L_419559:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_406580

            cmp EAX,1835824483
            je .L_419618

            cmp EAX,1952807028
            je .L_4195e0

            cmp EAX,1684370275
            je .L_4195b0

            xor EAX,EAX
.L_419589:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41964b

            add RSP,24
.L_4195a1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4195b0:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_4195be

            call .L_411c50
.L_4195be:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_416f60

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_419589
.L_4195e0:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_4195ee

            call .L_411c50
.L_4195ee:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_417180

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_419589
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419618:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_419626

            call .L_411c50
.L_419626:

            lea RDX,QWORD PTR [RSP+4]
            mov ECX,R13D
            mov RSI,RBX
            mov RDI,R12
            call .L_4192f0

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            setne AL
            movzx EAX,AL
            jmp .L_419589
.L_41964b:

            call __stack_chk_fail@PLT
.L_419650:

            push R13
            push R12
            mov ECX,ECX
            push RBP
            push RBX
            shl RCX,6
            mov R13,RSI
            mov RBP,RDI
            mov R12D,R8D
            sub RSP,8
            mov RBX,QWORD PTR [RDX+16]
            mov RDI,R13
            mov EDX,16
            add RBX,RCX
            mov ECX,1
            lea RSI,QWORD PTR [RBX+20]
            call QWORD PTR [R13+280]

            xor EDX,EDX
            cmp EAX,1
            je .L_4196a0

            add RSP,8
            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4196a0:

            lea RDX,QWORD PTR [RBX+56]
            mov ECX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_419540

            xor EDX,EDX
            test EAX,EAX
            setne DL
            add RSP,8
            pop RBX
            mov EAX,EDX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4196c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4196d0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RDI,R12
            mov EBP,ECX
            sub RSP,40
.L_4196e9:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP+8],RDX
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            call .L_4055b0

            test EAX,EAX
            je .L_419818

            cmp EBP,3
            jbe .L_419818

            mov RDI,QWORD PTR [R15+40]
            mov ESI,DWORD PTR [RSP+20]
            sub EBP,4
            call .L_4125e0

            test RAX,RAX
            mov R14,RAX
            je .L_419818

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            mov DWORD PTR [R14],EAX
            je .L_419840

            xor R13D,R13D
            jmp .L_4197e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419758:

            test EAX,EAX
            je .L_419810

            lea RSI,QWORD PTR [RBX+4]
            mov RDI,R12
            call .L_4055b0

            lea EDX,DWORD PTR [RBP-4]
            cmp EDX,3
            jbe .L_419810

            test EAX,EAX
            je .L_419810

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,R12
            call .L_405750

            lea EDX,DWORD PTR [RBP-8]
            cmp EDX,7
            jbe .L_419810

            test EAX,EAX
            je .L_419810

            lea RSI,QWORD PTR [RBX+16]
            mov RDI,R12
            call .L_4055b0

            lea EDX,DWORD PTR [RBP-16]
            cmp EDX,3
            jbe .L_419810

            test EAX,EAX
            je .L_419810

            sub EBP,20
            lea RDX,QWORD PTR [RBX+40]
            mov RSI,R12
            mov ECX,EBP
            mov RDI,R15
            call .L_419540

            test EAX,EAX
            je .L_419810

            lea RDX,QWORD PTR [RBX+48]
            mov ECX,EBP
            mov RSI,R12
            mov RDI,R15
            call .L_419540

            test EAX,EAX
            je .L_419810

            add R13D,1
            cmp DWORD PTR [RSP+20],R13D
            jbe .L_419840
.L_4197e8:

            mov EBX,R13D
            mov RDI,R12
            shl RBX,6
            add RBX,QWORD PTR [R14+16]
            mov RSI,RBX
            call .L_4055b0

            cmp EBP,3
            ja .L_419758

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419810:

            mov RDI,R14
            call .L_412690
.L_419818:

            xor R14D,R14D
.L_41981b:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_41984d

            add RSP,40
.L_419832:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419840:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],1
            jmp .L_41981b
.L_41984d:

            call __stack_chk_fail@PLT
.L_419852:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419860:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,24
.L_419871:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            je .L_4199b0

            mov ECX,DWORD PTR [RAX+8]
            xor EBP,EBP
            cmp ECX,1835103334
            je .L_419968

            cmp ECX,1668707188
            je .L_4198d0
.L_419896:

            cmp ECX,1668052340
            je .L_419990
.L_4198a2:

            mov RDI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41d770]
            xor EAX,EAX
            mov ESI,8
            call .L_426320

            xor EAX,EAX
.L_4198ba:

            add RSP,24
.L_4198be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4198d0:

            mov R12,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_4199b5

            mov ECX,DWORD PTR [RAX+8]
            xor R15D,R15D
            cmp ECX,1668052340
            je .L_419993
.L_4198f3:

            cmp ECX,1668707188
            jne .L_4198a2

            mov RDI,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            mov QWORD PTR [RSP],RDI
            jne .L_4198a2
.L_41990c:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],RDX
            call .L_431020

            mov RDX,QWORD PTR [RSP+8]
            mov R13D,EAX
            mov RDI,RDX
            call .L_431050

            test R15,R15
            mov DWORD PTR [RSP+8],EAX
            je .L_419d68

            mov RAX,QWORD PTR [R15+8]
            movzx ESI,R13B
            mov RDI,RBX
            mov R14D,DWORD PTR [RAX+20]
            call .L_405b00

            test EAX,EAX
            jne .L_4199f6
.L_419952:

            xor EAX,EAX
.L_419954:

            add RSP,24
.L_419958:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419968:

            mov RBP,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_419c87

            mov ECX,DWORD PTR [RAX+8]
            cmp ECX,1668707188
            jne .L_419896

            jmp .L_4198d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419990:

            xor R12D,R12D
.L_419993:

            mov R15,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_419cd4

            mov ECX,DWORD PTR [RAX+8]
            jmp .L_4198f3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4199b0:

            xor EBP,EBP
            xor R12D,R12D
.L_4199b5:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            xor R15D,R15D
            call .L_431020

            mov RDX,QWORD PTR [RSP]
            mov R13D,EAX
            xor R14D,R14D
            mov RDI,RDX
            call .L_431050

            mov QWORD PTR [RSP],0
            mov DWORD PTR [RSP+8],EAX
.L_4199e2:

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_419952
.L_4199f6:

            movzx ESI,BYTE PTR [RSP+8]
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_419952

            movzx ESI,R14B
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_419952

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_419952

            test RBP,RBP
            je .L_419bc0

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+8]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+16]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+24]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+32]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+40]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+48]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+56]
            call .L_405e60

            test EAX,EAX
            je .L_419952

            mov RAX,QWORD PTR [RBP]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RAX+64]
            call .L_405e60

            test EAX,EAX
            je .L_419952
.L_419b1a:

            test R12,R12
            je .L_419d4c

            mov RAX,QWORD PTR [R12+8]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX]
            movzx ESI,WORD PTR [RAX+40]
            call .L_405b50

            test EAX,EAX
            je .L_419952
.L_419b3f:

            cmp QWORD PTR [RSP],0
            je .L_419d70

            mov RAX,QWORD PTR [RSP]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
            movzx ESI,WORD PTR [RAX+40]
            call .L_405b50

            test EAX,EAX
            je .L_419952
.L_419b69:

            xor EBP,EBP
            test R12,R12
            je .L_419d17

            mov RSI,R12
            mov RDI,RBX
            call .L_4014a6

            test EAX,EAX
            je .L_419952
.L_419b87:

            cmp DWORD PTR [RSP+8],0
            je .L_419b97

            test R14D,R14D
            jne .L_419c8f
.L_419b97:

            xor EBP,EBP
            cmp QWORD PTR [RSP],0
            je .L_419ce1

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_4014a6

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_4198ba
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419bc0:

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            pxor XMM0,XMM0
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419952

            movsd XMM0,QWORD PTR [RIP+.L_41da60]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            jne .L_419b1a

            xor EAX,EAX
            jmp .L_419954
.L_419c87:

            xor R12D,R12D
            jmp .L_4199b5
.L_419c8f:

            mov EDI,DWORD PTR [RSP+8]
            mov EDX,R13D
            mov ESI,R14D
            call .L_4011d7

            cmp EAX,-1
            je .L_419952

            test R15,R15
            je .L_419b97

            test EAX,EAX
            je .L_419b97

            mov RDX,QWORD PTR [R15]
            mov ESI,EAX
            mov RDI,RBX
            call .L_405be0

            test EAX,EAX
            jne .L_419b97

            xor EAX,EAX
            jmp .L_419954
.L_419cd4:

            mov QWORD PTR [RSP],0
            jmp .L_41990c
.L_419ce1:

            cmp EBP,DWORD PTR [RSP+8]
            jge .L_419d8c

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_419952

            mov ESI,65535
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_419952

            add EBP,1
            jmp .L_419ce1
.L_419d17:

            cmp EBP,R13D
            jge .L_419b87

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_419952

            mov ESI,65535
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_419952

            add EBP,1
            jmp .L_419d17
.L_419d4c:

            mov ESI,2
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            jne .L_419b3f

            xor EAX,EAX
            jmp .L_419954
.L_419d68:

            xor R14D,R14D
            jmp .L_4199e2
.L_419d70:

            mov ESI,2
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            jne .L_419b69

            xor EAX,EAX
            jmp .L_419954
.L_419d8c:

            mov EAX,1
            jmp .L_4198ba
.L_419d96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419da0:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RSI,RDX
            mov RBP,RDX
            sub RSP,8
            call .L_405f70

            test EAX,EAX
            jne .L_419dc8
.L_419dbb:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 

            nop
            nop
            nop
            nop
.L_419dc8:

            lea RSI,QWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_405f70

            test EAX,EAX
            je .L_419dbb

            mov ESI,DWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_419df2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419e00:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov RBP,RDX
            sub RSP,8
            mov ESI,DWORD PTR [RDX]
            call .L_405c70

            test EAX,EAX
            jne .L_419e28
.L_419e1a:

            xor EAX,EAX
.L_419e1c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419e28:

            lea RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_405f70

            test EAX,EAX
            je .L_419e1a

            mov ESI,DWORD PTR [RBP+32]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_419e1a

            movsd XMM0,QWORD PTR [RBP+40]
            mov RDI,RBX
            call .L_405e60

            test EAX,EAX
            je .L_419e1a

            mov ESI,DWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_419e1c
.L_419e6d:

            nop
            nop
            nop
.L_419e70:

            push R15
            push R14
            mov ECX,ECX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov ESI,1668641382
            sub RSP,56
.L_419e8b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX+8]
            mov RBX,QWORD PTR [RAX+RCX*8]
            mov R12,QWORD PTR [RBX+16]
            mov R13D,DWORD PTR [RBX+8]
            call .L_405c70

            test EAX,EAX
            jne .L_419ee0
.L_419eb4:

            xor EAX,EAX
.L_419eb6:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            jne .L_41a0f4

            add RSP,56
.L_419ece:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ee0:

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            movzx ESI,R13W
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_419eb4

            xor ESI,ESI
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_419eb4

            cmp R13D,1
            je .L_419f60

            lea EDX,DWORD PTR [R13-2]
            lea R14,QWORD PTR [R12+4]
            lea RAX,QWORD PTR [RDX*8]
            sub RAX,RDX
            shl RAX,4
            lea R13,QWORD PTR [R12+RAX*1+116]
            jmp .L_419f41
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419f38:

            add R14,112
            cmp R14,R13
            je .L_419f60
.L_419f41:

            movss XMM0,DWORD PTR [R14]
            mov RDI,RBP
            call .L_405d10

            test EAX,EAX
            jne .L_419f38

            jmp .L_419eb4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419f60:

            mov ECX,DWORD PTR [RBX+8]
            test ECX,ECX
            je .L_41a0ea

            mov DWORD PTR [RSP+12],0
.L_419f73:

            mov EAX,DWORD PTR [RSP+12]
            lea R13,QWORD PTR [RAX*8]
            sub R13,RAX
            shl R13,4
            lea R14,QWORD PTR [R12+R13*1]
            mov EDX,DWORD PTR [R14+8]
            test EDX,EDX
            jne .L_41a020

            mov ESI,1935764838
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            mov ESI,DWORD PTR [R14+96]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            mov RAX,QWORD PTR [RBX+16]
            mov EAX,DWORD PTR [RAX+R13*1+96]
            test EAX,EAX
            je .L_41a0d8

            xor R15D,R15D
            jmp .L_41a003
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ff0:

            mov RAX,QWORD PTR [RBX+16]
            add R15D,1
            cmp R15D,DWORD PTR [RAX+R13*1+96]
            jae .L_41a0d8
.L_41a003:

            mov RCX,QWORD PTR [R14+104]
            mov EAX,R15D
            mov RDI,RBP
            movss XMM0,DWORD PTR [RCX+RAX*4]
            call .L_405d10

            test EAX,EAX
            jne .L_419ff0

            jmp .L_419eb4
.L_41a020:

            movabs RAX,21474836484
            mov ESI,1885434470
            mov RDI,RBP
            mov QWORD PTR [RSP+28],RAX
            mov DWORD PTR [RSP+36],5
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_419eb4

            mov EAX,DWORD PTR [R14+8]
            lea R13D,DWORD PTR [RAX-6]
            cmp R13D,2
            ja .L_419eb4

            mov ESI,R13D
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_419eb4

            xor ESI,ESI
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_419eb4

            movsxd R13,R13D
            mov EAX,DWORD PTR [RSP+R13*4+28]
            test EAX,EAX
            je .L_41a0d8

            sub EAX,1
            lea R13,QWORD PTR [R14+16]
            lea R14,QWORD PTR [R14+RAX*8+24]
            jmp .L_41a0b9
          .byte 0x90
.L_41a0b0:

            add R13,8
            cmp R14,R13
            je .L_41a0d8
.L_41a0b9:

            pxor XMM0,XMM0
            mov RDI,RBP
            cvtsd2ss XMM0,QWORD PTR [R13]
            call .L_405d10

            test EAX,EAX
            jne .L_41a0b0

            jmp .L_419eb4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a0d8:

            add DWORD PTR [RSP+12],1
            mov EAX,DWORD PTR [RSP+12]
            cmp EAX,DWORD PTR [RBX+8]
            jb .L_419f73
.L_41a0ea:

            mov EAX,1
            jmp .L_419eb6
.L_41a0f4:

            call __stack_chk_fail@PLT
.L_41a0f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a100:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,EDX
            sub RSP,120
.L_41a115:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41a230

            lea RBP,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,RBP
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+16]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+24]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+32]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+40]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+48]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+56]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [RBP+64]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            mov R13,RSP
            mov RDI,RBX
            mov RSI,R13
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [R13+8]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            lea RSI,QWORD PTR [R13+16]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a230

            mov RDI,QWORD PTR [R12]
            mov R8,R13
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            jmp .L_41a232
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a230:

            xor EAX,EAX
.L_41a232:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41a24d

            add RSP,120
.L_41a246:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41a24d:

            call __stack_chk_fail@PLT
.L_41a252:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a260:

            push R15
            push R14
            mov ECX,ECX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            lea R14,QWORD PTR [RDX+RCX*8]
            sub RSP,88
.L_41a27d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+44]
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call .L_4055b0

            test EAX,EAX
            je .L_41a3bb

            cmp DWORD PTR [RSP+44],1668641382
            jne .L_41a3bb

            xor ESI,ESI
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41a3bb

            lea RSI,QWORD PTR [RSP+40]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41a3bb

            xor ESI,ESI
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41a3bb

            movzx ESI,WORD PTR [RSP+40]
            test SI,SI
            je .L_41a3bb

            mov RDI,QWORD PTR [R12+40]
            mov EDX,112
            call .L_426010

            test RAX,RAX
            mov RBP,RAX
            je .L_41a3bb

            cmp WORD PTR [RSP+40],1
            je .L_41a650

            movss XMM0,DWORD PTR [RIP+.L_41da80]
            xor R13D,R13D
            jmp .L_41a34b
          .byte 0x90
.L_41a330:

            movzx ESI,WORD PTR [RSP+40]
            add R13D,1
            movss XMM0,DWORD PTR [R15+4]
            lea ECX,DWORD PTR [RSI-1]
            cmp R13D,ECX
            jae .L_41a3e8
.L_41a34b:

            mov EAX,R13D
            mov RDI,RBX
            lea R15,QWORD PTR [RAX*8]
            sub R15,RAX
            shl R15,4
            add R15,RBP
            movss DWORD PTR [R15],XMM0
            lea RSI,QWORD PTR [R15+4]
            call .L_405660

            test EAX,EAX
            jne .L_41a330
.L_41a375:

            xor EBX,EBX
            cmp WORD PTR [RSP+40],0
            mov RDI,QWORD PTR [R12+40]
            lea R13,QWORD PTR [RBP+104]
            je .L_41a3b3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a390:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_41a3a3

            call .L_426070

            mov RDI,QWORD PTR [R12+40]
.L_41a3a3:

            movzx EAX,WORD PTR [RSP+40]
            add EBX,1
            add R13,112
            cmp EBX,EAX
            jb .L_41a390
.L_41a3b3:

            mov RSI,RBP
            call .L_426070
.L_41a3bb:

            xor EAX,EAX
            xor EBX,EBX
.L_41a3bf:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [R14],RBX
            jne .L_41a663

            add RSP,88
.L_41a3da:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a3e8:

            movzx ECX,SI
            lea RDX,QWORD PTR [RCX*8]
            sub RDX,RCX
            shl RDX,4
            test SI,SI
            lea RDX,QWORD PTR [RBP+RDX*1-112]
            movss DWORD PTR [RDX],XMM0
            mov DWORD PTR [RDX+4],1678214776
            je .L_41a5ea
.L_41a413:

            lea RAX,QWORD PTR [RSP+42]
            mov R15,RBP
            mov DWORD PTR [RSP+20],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RAX
.L_41a432:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41a375

            xor ESI,ESI
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41a375

            mov ESI,DWORD PTR [RSP+44]
            cmp ESI,1885434470
            je .L_41a4f0

            cmp ESI,1935764838
            jne .L_41a5a0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41a375

            mov ESI,DWORD PTR [RSP+48]
            mov RDI,QWORD PTR [R12+40]
            mov EDX,4
            mov DWORD PTR [R15+96],ESI
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15+104],RAX
            je .L_41a375

            mov EDX,DWORD PTR [RSP+48]
            test EDX,EDX
            je .L_41a5d0

            xor R13D,R13D
            jmp .L_41a4d3
          .byte 0x66
          .byte 0x90
.L_41a4c0:

            add R13D,1
            cmp R13D,DWORD PTR [RSP+48]
            jae .L_41a5d0

            mov RAX,QWORD PTR [R15+104]
.L_41a4d3:

            mov ECX,R13D
            mov RDI,RBX
            lea RSI,QWORD PTR [RAX+RCX*4]
            call .L_405660

            test EAX,EAX
            jne .L_41a4c0

            jmp .L_41a375
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a4f0:

            mov RSI,QWORD PTR [RSP+24]
            movabs RAX,21474836484
            mov RDI,RBX
            mov QWORD PTR [RSP+52],RAX
            mov DWORD PTR [RSP+60],5
            call .L_405470

            test EAX,EAX
            je .L_41a375

            xor ESI,ESI
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41a375

            movzx EAX,WORD PTR [RSP+42]
            lea ECX,DWORD PTR [RAX+6]
            cmp AX,2
            mov DWORD PTR [R15+8],ECX
            ja .L_41a375

            cdqe 
            mov R13D,1
            mov ECX,DWORD PTR [RSP+RAX*4+52]
            test ECX,ECX
            jne .L_41a583

            jmp .L_41a5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a560:

            pxor XMM0,XMM0
            movzx EAX,WORD PTR [RSP+42]
            mov ECX,R13D
            cvtss2sd XMM0,DWORD PTR [RSP+48]
            movsd QWORD PTR [R15+R13*8+8],XMM0
            add R13,1
            cmp ECX,DWORD PTR [RSP+RAX*4+52]
            jae .L_41a5d0
.L_41a583:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_405660

            test EAX,EAX
            jne .L_41a560

            jmp .L_41a375
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a5a0:

            lea RBX,QWORD PTR [RSP+67]
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R12+40]
            lea RDX,QWORD PTR [RIP+.L_41d7a0]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_41a375
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a5d0:

            add DWORD PTR [RSP+20],1
            movzx ESI,WORD PTR [RSP+40]
            add R15,112
            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,ESI
            jb .L_41a432
.L_41a5ea:

            mov RDI,QWORD PTR [R12+40]
            mov RDX,RBP
            call .L_4274c0

            cmp WORD PTR [RSP+40],0
            mov RBX,RAX
            mov RDI,QWORD PTR [R12+40]
            je .L_41a634

            lea R15,QWORD PTR [RBP+104]
            xor R13D,R13D
            nop
            nop
.L_41a610:

            mov RSI,QWORD PTR [R15]
            test RSI,RSI
            je .L_41a622

            call .L_426070

            mov RDI,QWORD PTR [R12+40]
.L_41a622:

            movzx EAX,WORD PTR [RSP+40]
            add R13D,1
            add R15,112
            cmp R13D,EAX
            jb .L_41a610
.L_41a634:

            mov RSI,RBP
            call .L_426070

            xor EAX,EAX
            test RBX,RBX
            setne AL
            jmp .L_41a3bf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a650:

            movabs RAX,7207877582409664120
            mov QWORD PTR [RBP],RAX
            jmp .L_41a413
.L_41a663:

            call __stack_chk_fail@PLT
.L_41a668:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a670:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R12,RDX
            sub RSP,104
.L_41a68a:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+9]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_4053e0

            test EAX,EAX
            je .L_41a723

            lea RSI,QWORD PTR [RSP+10]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41a723

            lea RSI,QWORD PTR [RSP+11]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41a723

            xor ESI,ESI
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41a723

            movzx ESI,BYTE PTR [RSP+9]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,15
            ja .L_41a723

            movzx EDX,BYTE PTR [RSP+10]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,15
            ja .L_41a723

            mov RDI,QWORD PTR [R13+40]
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_41a723

            lea R14,QWORD PTR [RSP+16]
            mov RDI,RBX
            mov RSI,R14
            call .L_4057f0

            test EAX,EAX
            jne .L_41a750
.L_41a71b:

            mov RDI,RBP
            call .L_431080
.L_41a723:

            xor EBP,EBP
.L_41a725:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41a8d3

            add RSP,104
.L_41a740:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a750:

            lea RSI,QWORD PTR [R14+8]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+16]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+24]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+32]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+40]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+48]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+56]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [R14+64]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41a71b

            cmp BYTE PTR [RSP+9],3
            je .L_41a92f
.L_41a7eb:

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41a71b

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41a71b

            movzx EAX,WORD PTR [RSP+12]
            test AX,AX
            js .L_41a71b

            cmp WORD PTR [RSP+14],0
            js .L_41a71b

            cmp BYTE PTR [RSP+11],1
            je .L_41a71b

            test AX,AX
            movzx R8D,AX
            movzx EDX,BYTE PTR [RSP+9]
            mov RDI,QWORD PTR [R13+40]
            je .L_41a879

            cmp EDX,16
            jg .L_41a71b

            cmp R8D,1
            je .L_41a71b

            mov ECX,EDX
            mov RSI,RBX
            mov RDX,RBP
            call .L_401536

            test EAX,EAX
            je .L_41a71b

            movzx EDX,BYTE PTR [RSP+9]
.L_41a879:

            movzx R9D,BYTE PTR [RSP+10]
            movzx ESI,BYTE PTR [RSP+11]
            test R9D,R9D
            je .L_41a88d

            test ESI,ESI
            jne .L_41a8d8
.L_41a88d:

            mov RDI,QWORD PTR [R13+40]
.L_41a891:

            movzx R8D,WORD PTR [RSP+14]
            test R8D,R8D
            je .L_41a8c6

            cmp R8D,1
            je .L_41a71b

            cmp R9D,16
            jg .L_41a71b

            mov ECX,R9D
            mov RDX,RBP
            mov RSI,RBX
            call .L_401536

            test EAX,EAX
            je .L_41a71b
.L_41a8c6:

            mov DWORD PTR [R12],1
            jmp .L_41a725
.L_41a8d3:

            call __stack_chk_fail@PLT
.L_41a8d8:

            mov EDI,R9D
            call .L_4011d7

            cmp EAX,-1
            mov R15D,EAX
            je .L_41a71b

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            je .L_41a891

            mov EDX,2
            mov ESI,EAX
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_41a71b

            mov RDX,RAX
            mov ESI,R15D
            mov RDI,RBX
            call .L_405510

            test EAX,EAX
            jne .L_41a975

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070

            jmp .L_41a71b
.L_41a92f:

            mov RDI,R14
            call .L_431ff0

            test EAX,EAX
            jne .L_41a7eb

            mov RDI,QWORD PTR [R13+40]
            xor R8D,R8D
            mov RCX,R14
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_41a71b

            jmp .L_41a7eb
.L_41a975:

            movzx ECX,BYTE PTR [RSP+10]
            movzx EDX,BYTE PTR [RSP+9]
            mov R8,R14
            movzx ESI,BYTE PTR [RSP+11]
            mov RDI,QWORD PTR [R13+40]
            call .L_430b00

            mov ESI,1
            mov RDI,RBP
            mov RDX,RAX
            call .L_431280

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            jne .L_41a9b5

            call .L_426070

            jmp .L_41a71b
.L_41a9b5:

            call .L_426070

            mov RDI,QWORD PTR [R13+40]
            movzx R9D,BYTE PTR [RSP+10]
            jmp .L_41a891
.L_41a9c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a9d0:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov R12,RDX
            lea RSI,QWORD PTR [RIP+.L_41d8f7]
            xor ECX,ECX
            sub RSP,8
            mov RDX,R13
            mov R14,RDI
            mov RDI,R12
            call .L_411d60

            mov RDI,QWORD PTR [R14]
            mov EBX,EAX
            mov ESI,EAX
            call .L_425fb0

            mov ESI,EBX
            mov RDI,RBP
            mov R15,RAX
            call .L_405c70

            test EAX,EAX
            jne .L_41aa30
.L_41aa1e:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41aa30:

            lea RSI,QWORD PTR [RIP+.L_41d8f7]
            mov R8D,EBX
            mov RCX,R15
            mov RDX,R13
            mov RDI,R12
            call .L_411d60

            test EAX,EAX
            je .L_41aa1e

            mov RDX,R15
            mov ESI,EBX
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            test EAX,EAX
            je .L_41aa1e

            mov RDI,QWORD PTR [R14]
            mov RSI,R15
            call .L_426070

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41aa7d:

            nop
            nop
            nop
.L_41aa80:

            push R12
            push RBP
            lea RCX,QWORD PTR [RIP+.L_41d8fa]
            push RBX
            lea RBX,QWORD PTR [RDI+40]
            mov RBP,RSI
            mov R12,RDX
            mov RDI,RBX
            call .L_41a9d0

            test EAX,EAX
            jne .L_41aab0
.L_41aaa1:

            xor EAX,EAX
.L_41aaa3:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aab0:

            lea RCX,QWORD PTR [RIP+.L_41d8fd]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_41a9d0

            test EAX,EAX
            je .L_41aaa1

            lea RCX,QWORD PTR [RIP+.L_41d900]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_41a9d0

            test EAX,EAX
            je .L_41aaa1

            lea RCX,QWORD PTR [RIP+.L_41d903]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_41a9d0

            test EAX,EAX
            je .L_41aaa1

            lea RCX,QWORD PTR [RIP+.L_41d906]
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_41a9d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41aaa3
.L_41ab1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41ab20:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R12,RDX
            sub RSP,120
.L_41ab3a:

            mov DWORD PTR [RDX],0
            lea RSI,QWORD PTR [RSP+29]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_4053e0

            test EAX,EAX
            je .L_41abda

            lea RSI,QWORD PTR [RSP+30]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41abda

            lea RSI,QWORD PTR [RSP+31]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41abda

            cmp BYTE PTR [RSP+31],1
            je .L_41abda

            xor ESI,ESI
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41abda

            movzx ESI,BYTE PTR [RSP+29]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,15
            ja .L_41abda

            movzx EDX,BYTE PTR [RSP+30]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,15
            ja .L_41abda

            mov RDI,QWORD PTR [R13+40]
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_41abda

            lea R14,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,R14
            call .L_4057f0

            test EAX,EAX
            jne .L_41ac08
.L_41abd2:

            mov RDI,RBP
            call .L_431080
.L_41abda:

            xor EBP,EBP
.L_41abdc:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41ad15

            add RSP,120
.L_41abf7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ac08:

            lea RSI,QWORD PTR [R14+8]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+16]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+24]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+32]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+40]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+48]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+56]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            lea RSI,QWORD PTR [R14+64]
            mov RDI,RBX
            call .L_4057f0

            test EAX,EAX
            je .L_41abd2

            cmp BYTE PTR [RSP+29],3
            je .L_41ad1a
.L_41ac9f:

            movzx ECX,BYTE PTR [RSP+29]
            mov RDI,QWORD PTR [R13+40]
            mov EAX,ECX
            sub EAX,1
            cmp AL,15
            ja .L_41abd2

            mov RDX,RBP
            mov RSI,RBX
            call .L_40163b

            test EAX,EAX
            je .L_41abd2

            movzx ESI,BYTE PTR [RSP+31]
            movzx EDX,BYTE PTR [RSP+29]
            movzx EDI,BYTE PTR [RSP+30]
            test ESI,ESI
            je .L_41acdf

            test EDI,EDI
            jne .L_41ad5d
.L_41acdf:

            mov RDI,QWORD PTR [R13+40]
.L_41ace3:

            movzx ECX,BYTE PTR [RSP+30]
            mov EAX,ECX
            sub EAX,1
            cmp AL,15
            ja .L_41abd2

            mov RDX,RBP
            mov RSI,RBX
            call .L_40163b

            test EAX,EAX
            je .L_41abd2

            mov DWORD PTR [R12],1
            jmp .L_41abdc
.L_41ad15:

            call __stack_chk_fail@PLT
.L_41ad1a:

            mov RDI,R14
            call .L_431ff0

            test EAX,EAX
            jne .L_41ac9f

            mov RDI,QWORD PTR [R13+40]
            xor R8D,R8D
            mov RCX,R14
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_41abd2

            jmp .L_41ac9f
.L_41ad5d:

            call .L_4011d7

            cmp EAX,-1
            mov R15D,EAX
            je .L_41abd2

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            je .L_41ace3

            mov EDX,2
            mov ESI,EAX
            call .L_426010

            test RAX,RAX
            mov R14,RAX
            je .L_41abd2

            mov RDI,QWORD PTR [R13+40]
            mov ESI,R15D
            call .L_425fb0

            test RAX,RAX
            je .L_41adea

            mov EDX,R15D
            mov ECX,1
            mov RSI,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            xor EDX,EDX
            sub EAX,1
            mov R8,QWORD PTR [RSP+8]
            je .L_41adfb

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070

            mov R8,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R8
            call .L_426070

            jmp .L_41abd2
.L_41adea:

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            call .L_426070

            jmp .L_41abd2
.L_41adfb:

            movzx EAX,BYTE PTR [R8+RDX*1]
            mov ECX,EAX
            shl ECX,8
            or EAX,ECX
            mov WORD PTR [R14+RDX*2],AX
            add RDX,1
            cmp R15D,EDX
            ja .L_41adfb

            mov RDI,QWORD PTR [R13+40]
            mov RSI,R8
            call .L_426070

            movzx ECX,BYTE PTR [RSP+30]
            movzx EDX,BYTE PTR [RSP+29]
            mov R8,R14
            movzx ESI,BYTE PTR [RSP+31]
            mov RDI,QWORD PTR [R13+40]
            call .L_430b00

            mov ESI,1
            mov RDI,RBP
            mov RDX,RAX
            call .L_431280

            test EAX,EAX
            mov RDI,QWORD PTR [R13+40]
            mov RSI,R14
            jne .L_41ae61

            call .L_426070

            jmp .L_41abd2
.L_41ae61:

            call .L_426070

            jmp .L_41acdf
.L_41ae6b:

            nop
            nop
            nop
            nop
            nop
.L_41ae70:

            push R14
            push R13
            mov R13,R9
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov EBX,R8D
            sub RSP,16
.L_41ae85:

            mov ESI,DWORD PTR [RDX+RBX*4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            test ESI,ESI
            je .L_41aef0

            mov RAX,QWORD PTR [RCX]
            mov R12,RCX
            mov EAX,DWORD PTR [RAX+RBX*4]
            test EAX,EAX
            je .L_41aef0

            mov R14,RDI
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_41aefd

            mov RAX,QWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+4]
            mov RSI,RBP
            mov RDI,R14
            mov ECX,DWORD PTR [RAX+RBX*4]
            call .L_4192f0

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            setne AL
            movzx EAX,AL
            jmp .L_41aefd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aef0:

            mov QWORD PTR [R13],0
            mov EAX,1
.L_41aefd:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41af1a

            add RSP,16
.L_41af11:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41af1a:

            call __stack_chk_fail@PLT
.L_41af1f:

            nop
.L_41af20:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov RDI,RSI
            sub RSP,216
.L_41af3a:

            mov DWORD PTR [RDX],0
            mov QWORD PTR [RSP+40],RDX
            mov QWORD PTR [RSP+64],0
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+88],0
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+56]
            mov RDI,R14
            mov R12D,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_41b0c1

            lea RSI,QWORD PTR [RSP+60]
            mov RDI,R14
            call .L_4055b0

            test EAX,EAX
            je .L_41b0c1

            mov ECX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [R15+40]
            mov EAX,ECX
            and EAX,4294967287
            cmp EAX,16
            je .L_41afca

            cmp ECX,32
            jne .L_41b2b8
.L_41afca:

            call .L_412860

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_41b0c1

            lea RBX,QWORD PTR [RSP+96]
            mov RDI,QWORD PTR [R15+40]
            mov ECX,DWORD PTR [RSP+60]
            mov EDX,DWORD PTR [RSP+56]
            mov RSI,RBX
            call .L_417f90

            test EAX,EAX
            je .L_41b0b0

            mov EAX,DWORD PTR [RSP+56]
            mov R13D,DWORD PTR [RSP+60]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            je .L_41b2a0

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+16],R15
            sub R12D,8
            xor EBP,EBP
            mov R15,RAX
            jmp .L_41b03d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b030:

            add EBP,1
            cmp DWORD PTR [RSP+8],EBP
            je .L_41b100
.L_41b03d:

            lea RSI,QWORD PTR [RBX+8]
            mov R8D,R12D
            mov ECX,EBP
            mov RDX,R15
            mov RDI,R14
            call .L_418200

            test EAX,EAX
            je .L_41b0b0

            lea RDX,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RBX+32]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_418200

            test EAX,EAX
            je .L_41b0b0

            cmp R13D,16
            jbe .L_41b030

            lea RDX,QWORD PTR [RBX+64]
            lea RSI,QWORD PTR [RBX+56]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_418200

            test EAX,EAX
            je .L_41b0b0

            cmp R13D,24
            jbe .L_41b030

            lea RDX,QWORD PTR [RBX+88]
            lea RSI,QWORD PTR [RBX+80]
            mov R8D,R12D
            mov ECX,EBP
            mov RDI,R14
            call .L_418200

            test EAX,EAX
            jne .L_41b030

            nop
            nop
            nop
            nop
.L_41b0b0:

            mov RDI,RBX
            call .L_415170

            mov RDI,QWORD PTR [RSP]
            call .L_412880
.L_41b0c1:

            mov QWORD PTR [RSP],0
.L_41b0c9:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP]
            jne .L_41b2d8

            add RSP,216
.L_41b0eb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b100:

            mov EAX,DWORD PTR [RSP+56]
            mov R15,QWORD PTR [RSP+16]
            test EAX,EAX
            je .L_41b2a0

            lea RAX,QWORD PTR [RSP+72]
            xor EBP,EBP
            lea R13,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41b1d4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b148:

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            je .L_41b280
.L_41b156:

            mov RDX,QWORD PTR [RSP+72]
            test RDX,RDX
            je .L_41b280

            mov R8,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP]
            call .L_412920

            mov R12D,EAX
.L_41b17a:

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            je .L_41b18d

            mov RDI,QWORD PTR [R15+40]
            call .L_426070
.L_41b18d:

            mov RSI,QWORD PTR [RSP+72]
            test RSI,RSI
            je .L_41b1a0

            mov RDI,QWORD PTR [R15+40]
            call .L_426070
.L_41b1a0:

            mov RDI,QWORD PTR [RSP+80]
            test RDI,RDI
            je .L_41b1af

            call .L_411c50
.L_41b1af:

            mov RDI,QWORD PTR [RSP+88]
            test RDI,RDI
            je .L_41b1be

            call .L_411c50
.L_41b1be:

            test R12D,R12D
            je .L_41b0b0

            add EBP,1
            cmp DWORD PTR [RSP+56],EBP
            jbe .L_41b2a0
.L_41b1d4:

            mov RCX,R13
            mov EDX,EBP
            mov RSI,RBX
            mov RDI,R14
            call .L_419220

            test EAX,EAX
            je .L_41b0b0

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov EDX,EBP
            mov RDI,R14
            call .L_419220

            test EAX,EAX
            je .L_41b0b0

            cmp DWORD PTR [RSP+60],16
            jbe .L_41b148

            mov R9,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+152]
            lea RCX,QWORD PTR [RBX+64]
            mov R8D,EBP
            mov RSI,R14
            mov RDI,R15
            call .L_41ae70

            test EAX,EAX
            je .L_41b0b0

            cmp DWORD PTR [RSP+60],24
            jbe .L_41b148

            mov R9,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+176]
            lea RCX,QWORD PTR [RBX+88]
            mov R8D,EBP
            mov RSI,R14
            mov RDI,R15
            call .L_41ae70

            test EAX,EAX
            je .L_41b0b0

            mov RSI,QWORD PTR [RSP+64]
            test RSI,RSI
            jne .L_41b156

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b280:

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_41d909]
            mov ESI,12
            xor EAX,EAX
            xor R12D,R12D
            call .L_426320

            jmp .L_41b17a
          .byte 0x90
.L_41b2a0:

            mov RDI,RBX
            call .L_415170

            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RAX],1
            jmp .L_41b0c9
.L_41b2b8:

            lea RDX,QWORD PTR [RIP+.L_41d7c8]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            mov QWORD PTR [RSP],0
            jmp .L_41b0c9
.L_41b2d8:

            call __stack_chk_fail@PLT
.L_41b2dd:

            nop
            nop
            nop
.L_41b2e0:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov R13,RDX
            mov RBP,RCX
            sub RSP,24
.L_41b300:

            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4055b0

            test EAX,EAX
            je .L_41b338

            mov ESI,DWORD PTR [RSP+4]
            cmp ESI,-5
            ja .L_41b338

            mov EDX,DWORD PTR [RBP]
            mov EAX,ESI
            add RAX,4
            cmp RDX,RAX
            jae .L_41b360

            nop
            nop
            nop
.L_41b338:

            xor EAX,EAX
.L_41b33a:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41b3de

            add RSP,24
.L_41b352:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b360:

            mov RDI,QWORD PTR [R12]
            add ESI,1
            call .L_425fb0

            test RAX,RAX
            mov R15,RAX
            je .L_41b338

            mov ECX,DWORD PTR [RSP+4]
            mov EDX,1
            mov RSI,RAX
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,DWORD PTR [RSP+4]
            je .L_41b3a0

            mov RDI,QWORD PTR [R12]
            mov RSI,R15
            call .L_426070

            jmp .L_41b338
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b3a0:

            mov EAX,EAX
            lea RSI,QWORD PTR [RIP+.L_41d8f7]
            mov RCX,R15
            mov RDX,R14
            mov RDI,R13
            mov BYTE PTR [R15+RAX*1],0
            call .L_411aa0

            mov RDI,QWORD PTR [R12]
            mov RSI,R15
            call .L_426070

            mov EAX,4294967292
            sub EAX,DWORD PTR [RSP+4]
            add DWORD PTR [RBP],EAX
            mov EAX,1
            jmp .L_41b33a
.L_41b3de:

            call __stack_chk_fail@PLT
.L_41b3e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b3f0:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov ESI,5
            add RBX,40
            sub RSP,16
.L_41b40e:

            mov RDI,QWORD PTR [RDI+40]
            mov DWORD PTR [RSP+12],ECX
            call .L_411a30

            cmp DWORD PTR [RSP+12],3
            mov RBP,RAX
            mov DWORD PTR [R14],0
            jbe .L_41b500

            lea R13,QWORD PTR [RSP+12]
            lea R8,QWORD PTR [RIP+.L_41d8fa]
            mov RDX,RAX
            mov RSI,R12
            mov RDI,RBX
            mov RCX,R13
            call .L_41b2e0

            test EAX,EAX
            je .L_41b500

            cmp DWORD PTR [RSP+12],3
            jbe .L_41b500

            lea R8,QWORD PTR [RIP+.L_41d8fd]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_41b2e0

            test EAX,EAX
            je .L_41b500

            cmp DWORD PTR [RSP+12],3
            jbe .L_41b500

            lea R8,QWORD PTR [RIP+.L_41d900]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_41b2e0

            test EAX,EAX
            je .L_41b500

            cmp DWORD PTR [RSP+12],3
            jbe .L_41b500

            lea R8,QWORD PTR [RIP+.L_41d903]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_41b2e0

            test EAX,EAX
            je .L_41b500

            cmp DWORD PTR [RSP+12],3
            jbe .L_41b500

            lea R8,QWORD PTR [RIP+.L_41d906]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_41b2e0

            test EAX,EAX
            je .L_41b500

            mov DWORD PTR [R14],1
            add RSP,16
.L_41b4f4:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41b500:

            mov RDI,RBP
            xor EBP,EBP
            call .L_411c50

            add RSP,16
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41b51a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b520:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RAX,QWORD PTR [RDX]
            mov R12,RDI
            mov RDI,RBP
            mov RBX,RDX
            mov ESI,DWORD PTR [RAX+40]
            call .L_405c70

            test EAX,EAX
            jne .L_41b550
.L_41b543:

            xor EAX,EAX
.L_41b545:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_41b550:

            mov RAX,QWORD PTR [RBX]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RAX+40]
            call .L_405be0

            test EAX,EAX
            je .L_41b543

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,RBP
            mov ESI,DWORD PTR [RAX+40]
            call .L_405c70

            test EAX,EAX
            je .L_41b543

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+48]
            mov ESI,DWORD PTR [RAX+40]
            call .L_405be0

            test EAX,EAX
            je .L_41b543

            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov RDI,QWORD PTR [RBX+16]
            xor R8D,R8D
            xor ECX,ECX
            mov RSI,RDX
            call .L_411d60

            mov RDI,QWORD PTR [R12+40]
            mov ESI,EAX
            mov R13D,EAX
            call .L_425fb0

            lea RDX,QWORD PTR [RIP+.L_41d980]
            mov RDI,QWORD PTR [RBX+16]
            mov R8D,R13D
            mov RCX,RAX
            mov R14,RAX
            mov RSI,RDX
            call .L_411d60

            cmp R13D,EAX
            jne .L_41b543

            mov RDX,R14
            mov ESI,R13D
            mov RDI,RBP
            call QWORD PTR [RBP+312]

            test EAX,EAX
            je .L_41b543

            mov RDI,QWORD PTR [R12+40]
            mov RSI,R14
            call .L_426070

            mov EAX,1
            jmp .L_41b545
.L_41b60a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b610:

            push R15
            push R14
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            mov R12D,ECX
            mov ESI,EDX
            sub RSP,120
.L_41b62c:

            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41b68d

            lea R15,QWORD PTR [RSP+80]
            mov ECX,1
            mov EDX,16
            mov RDI,RBX
            mov RSI,R15
            call QWORD PTR [RBX+280]

            cmp EAX,1
            jne .L_41b68d

            xor EAX,EAX
            jmp .L_41b683
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b670:

            lea R14,QWORD PTR [RSP+16]
            mov DWORD PTR [R14+RAX*4],EDX
            add RAX,1
            cmp RAX,16
            je .L_41b6c0
.L_41b683:

            movzx EDX,BYTE PTR [R15+RAX*1]
            cmp DL,1
            jne .L_41b670
.L_41b68d:

            xor R12D,R12D
.L_41b690:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41b7d8

            add RSP,120
.L_41b6ab:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b6c0:

            lea RSI,QWORD PTR [RSP+14]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41b68d

            xor ESI,ESI
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41b68d

            xor ESI,ESI
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41b68d

            xor ESI,ESI
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41b68d

            mov RDI,QWORD PTR [RBP]
            xor R8D,R8D
            mov EDX,R12D
            mov ECX,R13D
            mov RSI,R14
            call .L_430960

            test RAX,RAX
            mov R12,RAX
            je .L_41b68d

            mov R14,QWORD PTR [RAX+48]
            movzx EAX,BYTE PTR [RSP+14]
            cmp AL,1
            je .L_41b758

            cmp AL,2
            jne .L_41b7af

            mov ESI,DWORD PTR [R14+16]
            mov RDX,QWORD PTR [R14]
            mov RDI,RBX
            call .L_405510

            test EAX,EAX
            jne .L_41b690
.L_41b748:

            mov RDI,R12
            xor R12D,R12D
            call .L_430660

            jmp .L_41b690
.L_41b758:

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_41b690

            xor EBP,EBP
            lea R13,QWORD PTR [RSP+15]
            jmp .L_41b792
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b770:

            movzx EAX,BYTE PTR [RSP+15]
            mov ESI,EBP
            add EBP,1
            mov RCX,QWORD PTR [R14]
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            cmp EBP,DWORD PTR [R14+16]
            mov WORD PTR [RCX+RSI*2],AX
            jae .L_41b690
.L_41b792:

            mov ECX,1
            mov EDX,1
            mov RSI,R13
            mov RDI,RBX
            call QWORD PTR [RBX+280]

            cmp EAX,1
            je .L_41b770

            jmp .L_41b748
.L_41b7af:

            mov RDI,R12
            call .L_430660

            movzx ECX,BYTE PTR [RSP+14]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41d923]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_41b68d
.L_41b7d8:

            call __stack_chk_fail@PLT
.L_41b7dd:

            nop
            nop
            nop
.L_41b7e0:

            push R15
            push R14
            mov RDI,RDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,216
.L_41b7fa:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_412410

            xor ESI,ESI
            mov RDI,RBX
            mov R12D,EAX
            call .L_405c70

            test EAX,EAX
            jne .L_41b850
.L_41b823:

            xor EAX,EAX
.L_41b825:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41b98d

            add RSP,216
.L_41b843:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41b850:

            mov ESI,R12D
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41b823

            mov ESI,DWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41b823

            lea R13,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBP+12]
            mov EDX,32
            lea R14,QWORD PTR [RSP+112]
            mov RDI,R13
            call strncpy@PLT

            lea RSI,QWORD PTR [RBP+45]
            mov EDX,32
            mov RDI,R14
            call strncpy@PLT

            mov BYTE PTR [RSP+96],0
            mov BYTE PTR [RSP+144],0
            mov RDX,R13
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_41b823

            mov RDX,R14
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_41b823

            test R12D,R12D
            jle .L_41b983

            lea RAX,QWORD PTR [RSP+26]
            xor R13D,R13D
            lea R14,QWORD PTR [RSP+160]
            lea R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41b95a
          .byte 0x66
          .byte 0x90
.L_41b900:

            mov BYTE PTR [RSP+192],0
            mov RDX,R14
            mov ESI,32
            mov RDI,RBX
            call QWORD PTR [RBX+312]

            test EAX,EAX
            je .L_41b823

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,3
            mov RDI,RBX
            call .L_405be0

            test EAX,EAX
            je .L_41b823

            mov ESI,DWORD PTR [RBP+8]
            mov RDX,R15
            mov RDI,RBX
            call .L_405be0

            test EAX,EAX
            je .L_41b823

            add R13D,1
            cmp R12D,R13D
            je .L_41b983
.L_41b95a:

            sub RSP,8
.L_41b95e:

            xor ECX,ECX
            xor R8D,R8D
            push R15
            mov R9,QWORD PTR [RSP+24]
            mov RDX,R14
            mov ESI,R13D
            mov RDI,RBP
            call .L_412420

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_41b900

            jmp .L_41b823
.L_41b983:

            mov EAX,1
            jmp .L_41b825
.L_41b98d:

            call __stack_chk_fail@PLT
.L_41b992:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b9a0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,8
            cmp DWORD PTR [RDX+8],1
            jne .L_41b9bc

            mov RAX,QWORD PTR [RDX+16]
            cmp DWORD PTR [RAX+8],1
            je .L_41b9f0
.L_41b9bc:

            mov ESI,DWORD PTR [RBX+40]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            jne .L_41b9d8
.L_41b9cb:

            xor EAX,EAX
.L_41b9cd:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b9d8:

            mov RDX,QWORD PTR [RBX+48]
            mov ESI,DWORD PTR [RBX+40]
            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_405be0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b9f0:

            movsd XMM0,QWORD PTR [RAX+16]
            call .L_406200

            mov ESI,1
            mov RDI,RBP
            mov EBX,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41b9cb

            movzx ESI,BX
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41b9cd
.L_41ba22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ba30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,184
.L_41ba41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            cmp ECX,16
            ja .L_41bbf0

            mov RBP,RSI
            mov R15,RDI
            mov R14D,ECX
            mov ESI,EDX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_41bbf0

            test R14D,R14D
            je .L_41bbd8

            lea R13,QWORD PTR [RSP+32]
            lea ESI,DWORD PTR [R14-1]
            lea RAX,QWORD PTR [R13+8]
            mov RDX,R13
            lea RCX,QWORD PTR [RAX+RSI*8]
            jmp .L_41baa4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41baa0:

            add RAX,8
.L_41baa4:

            cmp RAX,RCX
            mov QWORD PTR [RDX],0
            mov RDX,RAX
            jne .L_41baa0

            lea RAX,QWORD PTR [RSI+1]
            xor EBX,EBX
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+28]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41bb06
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bad0:

            mov RDX,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R15
            call .L_418270
.L_41bae2:

            test RAX,RAX
            mov QWORD PTR [R13+RBX*8],RAX
            je .L_41bb58

            mov RDI,RBP
            call .L_4066c0

            test EAX,EAX
            je .L_41bb58

            add RBX,1
            cmp RBX,QWORD PTR [RSP]
            je .L_41bbc0
.L_41bb06:

            mov RDI,RBP
            mov R12D,EBX
            call .L_406580

            cmp EAX,1668641398
            je .L_41bba0

            cmp EAX,1885434465
            je .L_41bad0

            lea RBX,QWORD PTR [RSP+163]
            mov ESI,EAX
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_41d93d]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            mov QWORD PTR [RSP+R12*8+32],0
.L_41bb58:

            xor EBP,EBP
.L_41bb5a:

            xor EBX,EBX
.L_41bb5c:

            mov RDI,QWORD PTR [R13+RBX*8]
            add RBX,1
            call .L_427870

            cmp R14D,EBX
            ja .L_41bb5c
.L_41bb6f:

            mov RSI,QWORD PTR [RSP+168]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41bbf7

            add RSP,184
.L_41bb8c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bba0:

            mov RDX,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R15
            call .L_4174c0

            jmp .L_41bae2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bbc0:

            mov RDI,QWORD PTR [R15+40]
            mov RDX,R13
            mov ESI,R14D
            call .L_430680

            mov RBP,RAX
            jmp .L_41bb5a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bbd8:

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RSP+32]
            xor ESI,ESI
            call .L_430680

            mov RBP,RAX
            jmp .L_41bb6f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bbf0:

            xor EBP,EBP
            jmp .L_41bb6f
.L_41bbf7:

            call __stack_chk_fail@PLT
.L_41bbfc:

            nop
            nop
            nop
            nop
.L_41bc00:

            push R14
            push R13
            mov R13,RDX
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,32
.L_41bc18:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            mov EBP,EAX
            call .L_4053e0

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+3]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41bd90

            movzx EAX,BYTE PTR [RSP+2]
            sub EAX,1
            cmp AL,14
            ja .L_41bd90

            movzx EAX,BYTE PTR [RSP+3]
            sub EAX,1
            cmp AL,14
            ja .L_41bd90

            xor ESI,ESI
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41bd90

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41bd90

            movzx EDX,BYTE PTR [RSP+3]
            movzx ESI,BYTE PTR [RSP+2]
            mov RDI,QWORD PTR [R12+40]
            call .L_430f40

            test RAX,RAX
            mov R14,RAX
            je .L_41bd90

            mov EDX,DWORD PTR [RSP+4]
            sub EBP,8
            test EDX,EDX
            jne .L_41bdc0
.L_41bd20:

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            jne .L_41bdf0
.L_41bd2c:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            jne .L_41be20
.L_41bd38:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            jne .L_41be50
.L_41bd44:

            mov EDX,DWORD PTR [RSP+20]
            test EDX,EDX
            jne .L_41bd60
.L_41bd4c:

            mov DWORD PTR [R13],1
            jmp .L_41bd93
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bd60:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            jne .L_41bd4c
.L_41bd86:

            mov RDI,R14
            call .L_431080

            nop
            nop
.L_41bd90:

            xor R14D,R14D
.L_41bd93:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_41be87

            add RSP,32
.L_41bdae:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bdc0:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            jne .L_41bd20

            jmp .L_41bd86
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bdf0:

            lea RDI,QWORD PTR [R12+40]
            add EDX,EBP
            mov RSI,RBX
            call .L_41a100

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            jne .L_41bd2c

            jmp .L_41bd86
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41be20:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            jne .L_41bd38

            jmp .L_41bd86
          .byte 0x90
.L_41be50:

            movzx ECX,BYTE PTR [RSP+2]
            movzx R8D,BYTE PTR [RSP+3]
            lea RDI,QWORD PTR [R12+40]
            add EDX,EBP
            mov RSI,RBX
            call .L_41b610

            mov ESI,1
            mov RDX,RAX
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            jne .L_41bd44

            jmp .L_41bd86
.L_41be87:

            call __stack_chk_fail@PLT
.L_41be8c:

            nop
            nop
            nop
            nop
.L_41be90:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R13,RDI
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,32
.L_41bea8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call QWORD PTR [RSI+304]

            lea RSI,QWORD PTR [RSP+2]
            mov RDI,RBX
            mov R12D,EAX
            call .L_4053e0

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+3]
            mov RDI,RBX
            call .L_4053e0

            test EAX,EAX
            je .L_41c010

            xor ESI,ESI
            mov RDI,RBX
            call .L_405470

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+4]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41c010

            lea RSI,QWORD PTR [RSP+20]
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41c010

            movzx ESI,BYTE PTR [RSP+2]
            lea EAX,DWORD PTR [RSI-1]
            cmp AL,14
            ja .L_41c010

            movzx EDX,BYTE PTR [RSP+3]
            lea EAX,DWORD PTR [RDX-1]
            cmp AL,14
            ja .L_41c010

            mov RDI,QWORD PTR [R13+40]
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_41c010

            mov EDX,DWORD PTR [RSP+20]
            sub R12D,8
            test EDX,EDX
            jne .L_41c040
.L_41bfa7:

            mov EDX,DWORD PTR [RSP+16]
            test EDX,EDX
            jne .L_41c070
.L_41bfb3:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            jne .L_41c0b0
.L_41bfbf:

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            jne .L_41c0e0
.L_41bfcb:

            mov EDX,DWORD PTR [RSP+4]
            test EDX,EDX
            jne .L_41bfe0
.L_41bfd3:

            mov DWORD PTR [R14],1
            jmp .L_41c012
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bfe0:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_41bfd3
.L_41c007:

            mov RDI,RBP
            call .L_431080

            nop
.L_41c010:

            xor EBP,EBP
.L_41c012:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41c10c

            add RSP,32
.L_41c02d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c040:

            movzx ECX,BYTE PTR [RSP+2]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_41bfa7

            jmp .L_41c007
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c070:

            movzx ECX,BYTE PTR [RSP+2]
            movzx R8D,BYTE PTR [RSP+3]
            lea RDI,QWORD PTR [R13+40]
            add EDX,R12D
            mov RSI,RBX
            call .L_41b610

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_41bfb3

            jmp .L_41c007

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c0b0:

            movzx ECX,BYTE PTR [RSP+3]
            add EDX,R12D
            mov RSI,RBX
            mov RDI,R13
            call .L_41ba30

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_41bfbf

            jmp .L_41c007
.L_41c0e0:

            lea RDI,QWORD PTR [R13+40]
            add EDX,R12D
            mov RSI,RBX
            call .L_41a100

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_41bfcb

            jmp .L_41c007
.L_41c10c:

            call __stack_chk_fail@PLT
.L_41c111:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c120:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            cmp DWORD PTR [RDI+48],67108863
            mov RBX,RDI
            mov RBP,RSI
            ja .L_41c150

            mov ESI,1684370275
            mov RDI,RBP
            call .L_406620

            test EAX,EAX
            jne .L_41c180
.L_41c147:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41c150:

            mov ESI,1835824483
            mov RDI,RBP
            call .L_406620

            test EAX,EAX
            je .L_41c147

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov ECX,1
            jmp .L_418ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c180:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov ECX,1
            jmp .L_418940
.L_41c197:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c1a0:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBX,ECX
            shl RBX,6
            mov R12,RSI
            mov RBP,RDI
            sub RSP,8
            mov RDX,QWORD PTR [RDX+16]
            mov ESI,16
            mov RDI,R12
            add RDX,RBX
            add RDX,20
            call QWORD PTR [R12+312]

            test EAX,EAX
            je .L_41c1f4

            mov RAX,QWORD PTR [R13+16]
            mov RSI,R12
            mov RDI,RBP
            mov RDX,QWORD PTR [RAX+RBX*1+56]
            call .L_41c120

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41c1f4:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41c1ff:

            nop
.L_41c200:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_41c20e:

            mov ESI,DWORD PTR [RDX]
            mov RDI,RBP
            mov R13,RDX
            call .L_405c70

            test EAX,EAX
            je .L_41c2b0

            mov EAX,DWORD PTR [R13]
            xor R12D,R12D
            test EAX,EAX
            jne .L_41c296

            jmp .L_41c2c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c238:

            mov ESI,DWORD PTR [RBX+4]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c2b0

            lea RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_405db0

            test EAX,EAX
            je .L_41c2b0

            mov ESI,DWORD PTR [RBX+16]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c2b0

            mov RDX,QWORD PTR [RBX+40]
            mov RSI,RBP
            mov RDI,R14
            call .L_41c120

            test EAX,EAX
            je .L_41c2b0

            mov RDX,QWORD PTR [RBX+48]
            mov RSI,RBP
            mov RDI,R14
            call .L_41c120

            test EAX,EAX
            je .L_41c2b0

            add R12D,1
            cmp R12D,DWORD PTR [R13]
            jae .L_41c2c0
.L_41c296:

            mov EBX,R12D
            mov RDI,RBP
            shl RBX,6
            add RBX,QWORD PTR [R13+16]
            mov ESI,DWORD PTR [RBX]
            call .L_405c70

            test EAX,EAX
            jne .L_41c238

            nop
.L_41c2b0:

            xor EAX,EAX
.L_41c2b2:

            pop RBX
.L_41c2b3:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c2c0:

            mov EAX,1
            jmp .L_41c2b2
.L_41c2c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c2d0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4062e0

            mov RDI,RBX
            mov ESI,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41c30e

            movsd XMM0,QWORD PTR [RSP+8]
            call .L_4062e0

            mov RDI,RBX
            mov ESI,EAX
            call .L_405c70

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41c30e:

            add RSP,16
            pop RBX
            ret 
.L_41c314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c320:

            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,3
            mov RBP,RDX
            sub RSP,8
            call .L_405b50

            test EAX,EAX
            jne .L_41c350
.L_41c33d:

            xor EAX,EAX
.L_41c33f:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c350:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_41c33d

            movsd XMM1,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP]
            call .L_41c2d0

            test EAX,EAX
            je .L_41c33d

            movsd XMM1,QWORD PTR [RBP+32]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+24]
            call .L_41c2d0

            test EAX,EAX
            je .L_41c33d

            movsd XMM0,QWORD PTR [RBP+48]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RBP+56]
            call .L_41c2d0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41c33f
.L_41c3a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c3b0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RDX
            mov RBX,RDX
            mov RBP,RSI
            sub RSP,8
.L_41c3c6:

            call .L_430e20

            mov RDI,RBX
            mov R13D,EAX
            call .L_42f990

            test R13D,R13D
            je .L_41c43e

            mov RBX,RAX
            lea EAX,DWORD PTR [R13-1]
            lea R13,QWORD PTR [RBX+RAX*8+8]
.L_41c3e7:

            mov RDX,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            je .L_41c460

            cmp EAX,2
            mov RDX,QWORD PTR [RDX+16]
            je .L_41c450
.L_41c3fa:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            js .L_41c460

            mov ESI,1885434465
            mov RDI,RBP
            call .L_406620

            test EAX,EAX
            je .L_41c488

            mov RDX,QWORD PTR [RBX]
            mov ECX,1
            mov RSI,RBP
            mov RDI,R12
            call .L_415870

            test EAX,EAX
            je .L_41c488
.L_41c429:

            mov RDI,RBP
            call .L_406760

            test EAX,EAX
            je .L_41c488

            add RBX,8
            cmp RBX,R13
            jne .L_41c3e7
.L_41c43e:

            add RSP,8
.L_41c442:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_41c450:

            mov ECX,DWORD PTR [RDX+120]
            test ECX,ECX
            jne .L_41c3fa

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c460:

            mov ESI,1668641398
            mov RDI,RBP
            call .L_406620

            test EAX,EAX
            je .L_41c488

            mov RDX,QWORD PTR [RBX]
            mov ECX,1
            mov RSI,RBP
            mov RDI,R12
            call .L_41b9a0

            test EAX,EAX
            jne .L_41c429
.L_41c488:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41c495:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c4a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            mov RDI,RSI
            sub RSP,88
.L_41c4ba:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            call QWORD PTR [RSI+304]

            cmp QWORD PTR [RBX],0
            mov R14D,EAX
            je .L_41c526

            lea R12,QWORD PTR [RSP+40]
            xor EAX,EAX
            mov EDX,1668707188
            mov ESI,1
            mov RDI,RBX
            mov RCX,R12
            call .L_42f820

            test EAX,EAX
            je .L_41c580
.L_41c526:

            mov RDI,RBX
            call .L_431020

            mov RDI,RBX
            mov R12D,EAX
            call .L_431050

            movzx ESI,R12B
            mov RDI,RBP
            mov R15D,EAX
            call .L_405b00

            test EAX,EAX
            jne .L_41c670
.L_41c550:

            xor R12D,R12D
.L_41c553:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41c8c0

            add RSP,88
.L_41c56e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c580:

            lea RAX,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,RBX
            mov R8D,1668707188
            mov ECX,1835103334
            mov EDX,1668707188
            mov QWORD PTR [RSP+8],RAX
            push R12
            mov R9,RAX
            xor EAX,EAX
            lea R15,QWORD PTR [RSP+64]
            push R15
            call .L_42f820

            test EAX,EAX
            pop RSI
            pop RDI
            jne .L_41c526

            lea R10,QWORD PTR [RSP+32]
            push R12
            mov ECX,1668052340
            mov EDX,1668707188
            mov R8D,1668707188
            mov ESI,3
            lea R11,QWORD PTR [RSP+72]
            mov R9,R10
            mov RDI,RBX
            push R11
            mov QWORD PTR [RSP+40],R11
            mov QWORD PTR [RSP+32],R10
            call .L_42f820

            pop RDX
            test EAX,EAX
            pop RCX
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            jne .L_41c526

            push R12
            push R15
            mov R9D,1835103334
            push QWORD PTR [RSP+24]
            push R11
            mov R8D,1668707188
            push R10
            push 1668707188
            mov ECX,1668052340
            mov EDX,1668707188
            mov ESI,5
            mov RDI,RBX
            call .L_42f820

            add RSP,48
            test EAX,EAX
            mov R12D,EAX
            jne .L_41c526

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RIP+.L_41d7f8]
            mov ESI,13
            xor EAX,EAX
            call .L_426320

            jmp .L_41c553
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c670:

            movzx ESI,R15B
            mov RDI,RBP
            call .L_405b00

            test EAX,EAX
            je .L_41c550

            xor ESI,ESI
            mov RDI,RBP
            call .L_405b50

            test EAX,EAX
            je .L_41c550

            mov RDI,RBP
            call QWORD PTR [RBP+304]

            xor ESI,ESI
            mov RDI,RBP
            mov R12D,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            xor ESI,ESI
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            sub R14D,8
            cmp QWORD PTR [RSP+32],0
            mov RAX,QWORD PTR [RBP+304]
            je .L_41c8c5

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBP
            mov RDI,R13
            mov R15D,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c550

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
            mov DWORD PTR [RSP+16],R15D
.L_41c742:

            cmp QWORD PTR [RSP+64],0
            je .L_41c8da

            mov RDI,RBP
            call RAX

            cmp DWORD PTR [RBX+64],1
            mov RCX,QWORD PTR [RSP+64]
            mov RSI,RBP
            mov RDI,R13
            mov R15D,EAX
            sbb EDX,EDX
            not EDX
            add EDX,2
            call .L_401364

            test EAX,EAX
            je .L_41c550

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
            mov DWORD PTR [RSP+8],R15D
.L_41c788:

            cmp QWORD PTR [RSP+48],0
            je .L_41c8ef

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            mov RDI,R13
            mov EBX,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c550

            mov RAX,QWORD PTR [RBP+304]
            sub EBX,R14D
.L_41c7bd:

            cmp QWORD PTR [RSP+56],0
            je .L_41c8e7

            mov RDI,RBP
            call RAX

            mov R15D,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,RBP
            mov RSI,QWORD PTR [RAX+48]
            call .L_40120f

            test EAX,EAX
            je .L_41c550

            mov RAX,QWORD PTR [RBP+304]
            sub R15D,R14D
.L_41c7f4:

            cmp QWORD PTR [RSP+40],0
            je .L_41c8d2

            mov RDI,RBP
            call RAX

            mov RDX,QWORD PTR [RSP+40]
            sub EAX,R14D
            mov RSI,RBP
            mov RDI,R13
            mov R14D,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c550

            mov RAX,QWORD PTR [RBP+304]
.L_41c82a:

            mov RDI,RBP
            call RAX

            mov ESI,R12D
            mov R13D,EAX
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            je .L_41c550

            mov ESI,R14D
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            mov ESI,R15D
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            mov ESI,EBX
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_405c70

            test EAX,EAX
            je .L_41c550

            xor R12D,R12D
            mov ESI,R13D
            mov RDI,RBP
            call QWORD PTR [RBP+288]

            test EAX,EAX
            setne R12B
            jmp .L_41c553
.L_41c8c0:

            call __stack_chk_fail@PLT
.L_41c8c5:

            mov DWORD PTR [RSP+16],0
            jmp .L_41c742
.L_41c8d2:

            xor R14D,R14D
            jmp .L_41c82a
.L_41c8da:

            mov DWORD PTR [RSP+8],0
            jmp .L_41c788
.L_41c8e7:

            xor R15D,R15D
            jmp .L_41c7f4
.L_41c8ef:

            xor EBX,EBX
            jmp .L_41c7bd
.L_41c8f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c900:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov RDI,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,88
.L_41c91a:

            lea R12,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            call QWORD PTR [RSI+304]

            mov RCX,R12
            mov DWORD PTR [RSP+12],EAX
            mov EDX,1668707188
            xor EAX,EAX
            mov ESI,1
            mov RDI,RBP
            call .L_42f820

            test EAX,EAX
            jne .L_41c9b9

            lea R14,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,RBP
            mov R9,R12
            mov R8D,1668707188
            mov ECX,1835103334
            push R14
.L_41c99e:

            mov EDX,1668707188
            lea R13,QWORD PTR [RSP+64]
            push R13
            call .L_42f820

            test EAX,EAX
            pop RSI
            pop RDI
.L_41c9b3:

            je .L_41cc58
.L_41c9b9:

            mov RDI,RBP
            call .L_431020

            mov RDI,RBP
            mov R12D,EAX
            call .L_431050

            movzx ESI,R12B
            mov RDI,RBX
            mov R13D,EAX
            call .L_405b00

            test EAX,EAX
            jne .L_41ca10
.L_41c9df:

            xor R12D,R12D
.L_41c9e2:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41cd01

            add RSP,88
.L_41c9fd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ca10:

            movzx ESI,R13B
            mov RDI,RBX
            call .L_405b00

            test EAX,EAX
            je .L_41c9df

            xor ESI,ESI
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_41c9df

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            xor ESI,ESI
            mov RDI,RBX
            mov R12D,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            mov R13D,DWORD PTR [RSP+12]
            mov RAX,QWORD PTR [RBX+304]
            sub R13D,8
            cmp QWORD PTR [RSP+32],0
            je .L_41cd06

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,RBX
            mov RDI,R15
            mov R14D,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c9df

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
            mov DWORD PTR [RSP+16],R14D
.L_41cad7:

            cmp QWORD PTR [RSP+64],0
            je .L_41cd1b

            mov RDI,RBX
            call RAX

            cmp DWORD PTR [RBP+64],1
            mov RCX,QWORD PTR [RSP+64]
            mov RSI,RBX
            mov RDI,R15
            mov R14D,EAX
            sbb EDX,EDX
            not EDX
            add EDX,2
            call .L_401364

            test EAX,EAX
            je .L_41c9df

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
            mov DWORD PTR [RSP+12],R14D
.L_41cb1d:

            cmp QWORD PTR [RSP+48],0
            je .L_41cd30

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBX
            mov RDI,R15
            mov EBP,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c9df

            mov RAX,QWORD PTR [RBX+304]
            sub EBP,R13D
.L_41cb52:

            cmp QWORD PTR [RSP+56],0
            je .L_41cd28

            mov RDI,RBX
            call RAX

            mov R14D,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,RBX
            mov RSI,QWORD PTR [RAX+48]
            call .L_40120f

            test EAX,EAX
            je .L_41c9df

            mov RAX,QWORD PTR [RBX+304]
            sub R14D,R13D
.L_41cb89:

            cmp QWORD PTR [RSP+40],0
            je .L_41cd13

            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP+40]
            sub EAX,R13D
            mov RSI,RBX
            mov RDI,R15
            mov R13D,EAX
            call .L_41c3b0

            test EAX,EAX
            je .L_41c9df

            mov RAX,QWORD PTR [RBX+304]
.L_41cbbf:

            mov RDI,RBX
            call RAX

            mov ESI,R12D
            mov R15D,EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41c9df

            mov ESI,R13D
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            mov ESI,R14D
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            mov ESI,EBP
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41c9df

            xor R12D,R12D
            mov ESI,R15D
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            setne R12B
            jmp .L_41c9e2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cc58:

            lea R11,QWORD PTR [RSP+32]
            mov ECX,1668052340
            mov EDX,1668707188
            mov R9,R12
            mov R8D,1668707188
            mov ESI,3
            push R11
.L_41cc77:

            mov RDI,RBP
            lea R10,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+32],R11
            push R10
            mov QWORD PTR [RSP+32],R10
            call .L_42f820

            pop RDX
            test EAX,EAX
            pop RCX
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            jne .L_41c9b9

            push R11
            push R10
            mov R9D,1668052340
            push R14
            push R13
            mov R8D,1668707188
            push R12
            push 1668707188
            mov ECX,1835103334
            mov EDX,1668707188
            mov ESI,5
            mov RDI,RBP
            call .L_42f820

            add RSP,48
            test EAX,EAX
            mov R12D,EAX
            jne .L_41c9b9

            mov RDI,QWORD PTR [R15+40]
            lea RDX,QWORD PTR [RIP+.L_41d828]
            mov ESI,13
            xor EAX,EAX
            call .L_426320

            jmp .L_41c9e2
.L_41cd01:

            call __stack_chk_fail@PLT
.L_41cd06:

            mov DWORD PTR [RSP+16],0
            jmp .L_41cad7
.L_41cd13:

            xor R13D,R13D
            jmp .L_41cbbf
.L_41cd1b:

            mov DWORD PTR [RSP+12],0
            jmp .L_41cb1d
.L_41cd28:

            xor R14D,R14D
            jmp .L_41cb89
.L_41cd30:

            xor EBP,EBP
            jmp .L_41cb52
.L_41cd37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd40:

            mov RDI,RSI
            jmp .L_431160
.L_41cd48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd50:

            mov RDI,RSI
            jmp .L_411ca0
.L_41cd58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cd60:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EDX,4
            mov RBX,RSI
            xor EBP,EBP
            sub RSP,56
.L_41cd7e:

            mov QWORD PTR [RSP+8],RDI
            mov RDI,QWORD PTR [RSI+8]
            mov ESI,R12D
            mov DWORD PTR [RSP+20],ECX
            mov QWORD PTR [RSP+24],R8
            call .L_426010

            test RAX,RAX
            je .L_41ce68

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,4
            mov ESI,R12D
            mov R13,RAX
            call .L_426010

            test RAX,RAX
            mov R15,RAX
            je .L_41cf70

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            test R12D,R12D
            mov DWORD PTR [RSP+40],EAX
            jne .L_41ce40

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov ESI,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41ce4e
.L_41cdf1:

            mov ESI,DWORD PTR [RSP+8]
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41ce4e

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            mov EBP,1
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R15
            call .L_426070

            jmp .L_41ce68
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ce28:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41ce4e

            lea EAX,DWORD PTR [RBP+1]
            cmp R12D,EAX
            je .L_41ce80

            mov EBP,EAX
.L_41ce40:

            xor ESI,ESI
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            jne .L_41ce28
.L_41ce4e:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            xor EBP,EBP
            call .L_426070

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R15
            call .L_426070
.L_41ce68:

            add RSP,56
.L_41ce6c:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ce80:

            lea RAX,QWORD PTR [RBP+1]
            mov DWORD PTR [RSP+44],R12D
            xor EBP,EBP
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41ceb3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ce98:

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            sub EAX,R12D
            mov DWORD PTR [R15+RBP*4],EAX
            add RBP,1
            cmp QWORD PTR [RSP+32],RBP
            je .L_41cef0
.L_41ceb3:

            mov RDI,RBX
            call QWORD PTR [RBX+304]

            mov R12D,EAX
            sub EAX,DWORD PTR [RSP+20]
            xor R8D,R8D
            mov ECX,EBP
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBX
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [R13+RBP*4],EAX
            call R14

            test EAX,EAX
            jne .L_41ce98

            jmp .L_41ce4e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cef0:

            mov RDI,RBX
            mov R12D,DWORD PTR [RSP+44]
            call QWORD PTR [RBX+304]

            mov ESI,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,RBX
            call QWORD PTR [RBX+288]

            test EAX,EAX
            je .L_41ce4e

            lea EAX,DWORD PTR [R12-1]
            mov RBP,R13
            mov R14,R15
            lea R12,QWORD PTR [R13+RAX*4+4]
            jmp .L_41cf54
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf30:

            mov ESI,DWORD PTR [R14]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            je .L_41ce4e

            add RBP,4
            add R14,4
            cmp R12,RBP
            je .L_41cdf1
.L_41cf54:

            mov ESI,DWORD PTR [RBP]
            mov RDI,RBX
            call .L_405c70

            test EAX,EAX
            jne .L_41cf30

            jmp .L_41ce4e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf70:

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,R13
            call .L_426070

            jmp .L_41ce68
.L_41cf81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cf90:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            mov R14,QWORD PTR [RDX+48]
            call QWORD PTR [RSI+304]

            movzx ESI,WORD PTR [RBP+16]
            mov RDI,RBX
            mov R12D,EAX
            call .L_405b50

            test EAX,EAX
            jne .L_41cfd0
.L_41cfc1:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cfd0:

            movzx ESI,WORD PTR [RBP+16]
            mov RDI,RBX
            call .L_405b50

            test EAX,EAX
            je .L_41cfc1

            mov EDX,DWORD PTR [RBP+16]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_419e70]
            mov R8,R14
            mov RSI,RBX
            mov RDI,R13
            call .L_41cd60

            test EAX,EAX
            setne AL
            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41d00e:

            nop
            nop
.L_41d010:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            mov RDI,RSI
            sub RSP,8
.L_41d026:

            call QWORD PTR [RSI+304]

            mov ESI,DWORD PTR [RBP]
            mov RDI,RBX
            mov R12D,EAX
            call .L_405c70

            test EAX,EAX
            je .L_41d063

            mov EDX,DWORD PTR [RBP]
            lea ECX,DWORD PTR [R12-8]
            lea R9,QWORD PTR [RIP+.L_41c1a0]
            mov R8,RBP
            mov RSI,RBX
            mov RDI,R13
            call .L_41cd60

            test EAX,EAX
            setne AL
            movzx EAX,AL
.L_41d063:

            add RSP,8
.L_41d067:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41d06e:

            nop
            nop
.L_41d070:

            mov RDI,RSI
            jmp .L_431160
.L_41d078:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d080:

            mov RDI,RSI
            jmp .L_411ca0
.L_41d088:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d090:

            mov RDI,RSI
            jmp .L_427900
.L_41d098:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0a0:

            mov RDI,RSI
            jmp .L_411ca0
.L_41d0a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0b0:

            mov RDI,RSI
            jmp .L_431160
.L_41d0b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0c0:

            mov RDI,RSI
            jmp .L_431160
.L_41d0c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0d0:

            mov RDI,RSI
            jmp .L_412200
.L_41d0d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0e0:

            mov RDI,RSI
            jmp .L_412720
.L_41d0e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d0f0:

            mov RDI,RSI
            jmp .L_411c50
.L_41d0f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d100:

            mov RDI,RSI
            jmp .L_411c50
.L_41d108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d110:

            mov RDI,RSI
            jmp .L_431080
.L_41d118:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d120:

            mov RDI,RSI
            jmp .L_431080
.L_41d128:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d130:

            mov RDI,RSI
            jmp .L_412690
.L_41d138:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d140:

            mov RDI,RSI
            jmp .L_431080
.L_41d148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d150:

            mov RDI,RSI
            jmp .L_4121b0
.L_41d158:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d160:

            mov RDI,RSI
            jmp .L_411c50
.L_41d168:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d170:

            mov RDI,RSI
            jmp .L_427870
.L_41d178:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d180:

            mov RDI,RSI
            jmp .L_431080
.L_41d188:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d190:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12D,R8D
            push RBX
            mov RBX,RSI
            mov ESI,11
            mov RBP,RDX
            sub RSP,32
.L_41d1ad:

            mov RDI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_406d40

            lea RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov R14,RAX
            call .L_4055b0

            test EAX,EAX
            jne .L_41d200
.L_41d1da:

            xor EAX,EAX
.L_41d1dc:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41d2b3

            add RSP,32
.L_41d1f4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d200:

            xor ESI,ESI
            mov RDI,RBX
            call .L_4055b0

            test EAX,EAX
            je .L_41d1da

            mov RAX,QWORD PTR [R14]
            mov ESI,DWORD PTR [RSP+8]
            test RAX,RAX
            jne .L_41d229

            jmp .L_41d268
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d220:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_41d268
.L_41d229:

            cmp ESI,DWORD PTR [RAX]
            jne .L_41d220
.L_41d22d:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_41d2a9

            lea RDX,QWORD PTR [RSP+12]
            mov ECX,R12D
            mov RSI,RBX
            mov RDI,R13
            call RAX

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_41d1dc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d268:

            lea RAX,QWORD PTR [RIP+.L_640e20]
            nop
.L_41d270:

            cmp ESI,DWORD PTR [RAX]
            je .L_41d22d

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_41d270

            lea RBX,QWORD PTR [RSP+19]
            mov RDI,RBX
            call .L_426440

            mov RDI,QWORD PTR [R13+40]
            lea RDX,QWORD PTR [RIP+.L_41d955]
            mov RCX,RBX
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            jmp .L_41d1da
.L_41d2a9:

            mov EAX,1
            jmp .L_41d1dc
.L_41d2b3:

            call __stack_chk_fail@PLT
.L_41d2b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d2c0:

            test RSI,RSI
            je .L_41d2d0

            mov EDX,8
            jmp .L_414fa0
          .byte 0x90
.L_41d2d0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d10]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [RBX+80],RAX
            pop RBX
            ret 
.L_41d2ef:

            nop
.L_41d2f0:

            test RSI,RSI
            je .L_41d300

            mov EDX,11
            jmp .L_414fa0
          .byte 0x90
.L_41d300:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d08]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [RBX+104],RAX
            pop RBX
            ret 
.L_41d31f:

            nop
.L_41d320:

            mov EDX,8
            jmp .L_415070
.L_41d32a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d330:

            mov EDX,11
            jmp .L_415070
.L_41d33a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d340:

            push RBX
            mov EBX,ESI
            mov ESI,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41d369

            jmp .L_41d370
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d360:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_41d370
.L_41d369:

            cmp EBX,DWORD PTR [RAX]
            jne .L_41d360
.L_41d36d:

            pop RBX
            ret 
          .byte 0x90
.L_41d370:

            lea RAX,QWORD PTR [RIP+.L_640660]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d380:

            cmp EBX,DWORD PTR [RAX]
            je .L_41d36d

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_41d380

            pop RBX
            ret 
.L_41d38f:

            nop
.L_41d390:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_41d39b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_41d418

            mov RAX,QWORD PTR [RSI+88]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_41d450

            xor EBP,EBP
            jmp .L_41d3e1
.L_41d3d0:

            mov RBX,QWORD PTR [RBX+104]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_41d450
.L_41d3e1:

            mov EDX,112
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_41d42e

            test RBP,RBP
            mov QWORD PTR [RAX+104],0
            je .L_41d404

            mov QWORD PTR [RBP+104],RAX
.L_41d404:

            cmp QWORD PTR [RSP],0
            jne .L_41d3d0

            mov QWORD PTR [RSP],RAX
            jmp .L_41d3d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d418:

            lea RSI,QWORD PTR [RIP+.L_641d00]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+88],RAX
.L_41d42e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41d464

            add RSP,16
.L_41d442:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d450:

            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+88],RAX
            jmp .L_41d42e
.L_41d464:

            call __stack_chk_fail@PLT
.L_41d469:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d470:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_41d477:

            mov RBX,RSI
            mov ESI,9
            call .L_406d40

            test RBX,RBX
            mov R12,RAX
            je .L_41d4f8

            mov ESI,112
            mov RDI,RBP
            call .L_406970

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41d4ef

            movdqu XMM0,XMMWORD PTR [RBX+32]
            mov EAX,DWORD PTR [RBX+24]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            mov DWORD PTR [RDX],EAX
            mov RAX,QWORD PTR [R12]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movups XMMWORD PTR [RDX+56],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movups XMMWORD PTR [RDX+72],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            mov QWORD PTR [RDX+104],RAX
            mov EAX,1
            movups XMMWORD PTR [RDX+88],XMM0
            mov QWORD PTR [R12],RDX
.L_41d4ef:

            pop RBX
.L_41d4f0:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d4f8:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_41d509:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d510:

            push RBX
            mov EBX,ESI
            mov ESI,9
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_41d539

            jmp .L_41d548

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d530:

            mov RAX,QWORD PTR [RAX+104]
            test RAX,RAX
            je .L_41d548
.L_41d539:

            cmp DWORD PTR [RAX],EBX
            jne .L_41d530
.L_41d53d:

            add RAX,8
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d548:

            lea RAX,QWORD PTR [RIP+.L_63ea60]
            nop
.L_41d550:

            cmp DWORD PTR [RAX],EBX
            je .L_41d53d

            mov RAX,QWORD PTR [RAX+104]
            test RAX,RAX
            jne .L_41d550

            pop RBX
            ret 
.L_41d55f:
          .byte 0x90
.L_41d560:
          .string "Multisegment or Inverted parametric curves cannot be written"
          .zero 3
.L_41d5a0:
          .string "Unsupported number of channels for VCGT \'%d\'"
          .zero 3
.L_41d5d0:
          .string "Unsupported bit depth for VCGT \'%d\'"
          .zero 4
.L_41d5f8:
          .string "Unsupported tag type for VCGT \'%d\'"
          .zero 5
.L_41d620:
          .string "LUT8 needs 256 entries on prelinearization"
          .zero 5
.L_41d650:
          .string "LUT is not suitable to be saved as LUT8"
.L_41d678:
          .string "Unknown parametric curve type \'%d\'"
          .zero 5
.L_41d6a0:
          .string "Cannot save floating point data, CLUT are 8 or 16 bit only"
          .zero 5
.L_41d6e0:
          .string "Too many device coordinates \'%d\'"
          .zero 7
.L_41d708:
          .string "(!(Array == ((void *)0) && n > 0))"
          .zero 5
.L_41d730:
          .string "multiLocalizedUnicodeType of len != 12 is not supported."
          .zero 7
.L_41d770:
          .string "LUT is not suitable to be saved as LUT16"
          .zero 7
.L_41d7a0:
          .string "Unknown curve element type \'%s\' found."
          .zero 1
.L_41d7c8:
          .string "Unknown record length in dictionary \'%d\'"
          .zero 7
.L_41d7f8:
          .string "LUT is not suitable to be saved as LutAToB"
          .zero 5
.L_41d828:
          .string "LUT is not suitable to be saved as LutBToA"
.L_41d853:
          .string "Unsupported parametric curve"
.L_41d870:
          .string "Too many colorants \'%d\'"
.L_41d888:
          .zero 1
.L_41d889:
          .string "Found unknown MPE type \'%s\'"
.L_41d8a5:
          .string "Too many named colors \'%d\'"
.L_41d8c0:
          .string "cmstypes.c"
.L_41d8cb:
          .string "(io != ((void *)0))"
.L_41d8df:
          .string "(Tables != ((void *)0))"
.L_41d8f7:
          .string "PS"
.L_41d8fa:
          .string "nm"
.L_41d8fd:
          .string "#0"
.L_41d900:
          .string "#1"
.L_41d903:
          .string "#2"
.L_41d906:
          .string "#3"
.L_41d909:
          .string "Bad dictionary Name/Value"
.L_41d923:
          .string "Unknown precision of \'%d\'"
.L_41d93d:
          .string "Unknown curve type \'%s\'"
.L_41d955:
          .string "Unknown MPE type \'%s\' found."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d980:
          .zero 16
.L_41d990:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d9b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d9d0:
          .string "Write16bitTables"
          .zero 15
.L_41d9f0:
          .string "_cmsReadWCharArray"
          .zero 13
.L_41da10:
          .string "_cmsWriteWCharArray"
.L_41da24:
          .zero 4
.L_41da28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_41da30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_41da38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_41da40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_41da48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_41da50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_41da58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3e
.L_41da60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_41da68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x40
.L_41da70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_41da78:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_41da80:
          .byte 0x78
          .byte 0x86
          .byte 0x7
          .byte 0xe4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_41da90:

            movzx EAX,WORD PTR [RDI]
            mov WORD PTR [RSI],AX
            ret 
.L_41da97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41daa0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDX
            sub RSP,64
.L_41dab2:

            mov EDX,DWORD PTR [RDX+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test EDX,EDX
            jle .L_41daff

            lea R14,QWORD PTR [RSP-2]
            mov R13,RDI
            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dae0:

            mov RDX,QWORD PTR [RBX+RBP*8+72]
            lea RSI,QWORD PTR [R14+RBP*2]
            mov RDI,R13
            add R13,2
            call QWORD PTR [RBX+RBP*8+8]

            mov EAX,EBP
            add RBP,1
            cmp DWORD PTR [RBX+8],EAX
            jg .L_41dae0
.L_41daff:

            lea R13,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RBX+152]
            mov RDI,RSP
            mov RSI,R13
            call QWORD PTR [RBX+144]

            mov EAX,DWORD PTR [RBX+12]
            test EAX,EAX
            jle .L_41db4d

            xor EBP,EBP
.L_41db20:

            mov RAX,QWORD PTR [RBX+168]
            lea RDI,QWORD PTR [R13+RBP*2]
            mov RSI,R12
            add R12,2
            mov RDX,QWORD PTR [RAX+RBP*8]
            mov RAX,QWORD PTR [RBX+160]
            call QWORD PTR [RAX+RBP*8]

            lea EAX,DWORD PTR [RBP+1]
            add RBP,1
            cmp DWORD PTR [RBX+12],EAX
            jg .L_41db20
.L_41db4d:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41db6a

            add RSP,64
.L_41db61:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41db6a:

            call __stack_chk_fail@PLT
.L_41db6f:

            nop
.L_41db70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41db7a:

            movzx EAX,WORD PTR [RDI]
            movzx R8D,BYTE PTR [RDI+3]
            movzx EDI,BYTE PTR [RDI+5]
            mov R14,QWORD PTR [RDX+8]
            movzx EAX,AH
            mov R15D,DWORD PTR [RDX+R8*4+2576]
            movzx R10D,WORD PTR [RDX+R8*2+528]
            movzx R9D,WORD PTR [RDX+RAX*2+16]
            mov EBX,DWORD PTR [RDX+RAX*4+1552]
            mov R11D,DWORD PTR [RDX+RDI*4+3600]
            mov R12D,DWORD PTR [R14+16]
            mov RCX,QWORD PTR [R14+120]
            movzx R8D,WORD PTR [RDX+RDI*2+1040]
            mov R13D,EBX
            test R9D,R9D
            mov DWORD PTR [RSP-32],R11D
            je .L_41dbd5

            add R13D,DWORD PTR [R14+92]
.L_41dbd5:

            test R10D,R10D
            mov R11D,R15D
            je .L_41dbe1

            add R11D,DWORD PTR [R14+88]
.L_41dbe1:

            mov EAX,DWORD PTR [RSP-32]
            test R8D,R8D
            mov EBP,EAX
            je .L_41dbf2

            add EAX,DWORD PTR [R14+84]
            mov EBP,EAX
.L_41dbf2:

            test R12D,R12D
            jle .L_41de00

            cmp R9D,R10D
            mov R14D,DWORD PTR [RSP-32]
            lea EDX,DWORD PTR [RBX+R15*1]
            setge BYTE PTR [RSP-14]
            cmp R10D,R8D
            movzx EAX,BYTE PTR [RSP-14]
            setge BYTE PTR [RSP-13]
            movzx EDI,BYTE PTR [RSP-13]
            add R12D,R15D
            add R12D,DWORD PTR [RSP-32]
            mov DWORD PTR [RSP-20],R15D
            and EAX,EDI
            add R12D,R13D
            mov BYTE PTR [RSP-15],AL
            lea EAX,DWORD PTR [R14+RDX*1]
            add R14D,R15D
            mov DWORD PTR [RSP-28],R12D
            mov R12D,EBX
            sub EDX,R14D
            sub R12D,R14D
            sub EBX,R15D
            sub EDX,R13D
            sub R12D,R13D
            sub EBX,R13D
            add EDX,EBP
            add R12D,R11D
            cdqe 
            mov DWORD PTR [RSP-12],EDX
            lea EDX,DWORD PTR [RBX+R11*1]
            add R12D,EBP
            lea RDI,QWORD PTR [RCX+RAX*2]
            mov DWORD PTR [RSP-24],R14D
            lea EAX,DWORD PTR [R13+R14*1]
            mov DWORD PTR [RSP-4],R12D
            mov DWORD PTR [RSP-8],EDX
            jmp .L_41dcfd
.L_41dc80:

            movsxd R12,EAX
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-20]
            add R12D,EAX
            mov R15D,R14D
            movsxd R12,R12D
            sub R15D,EBX
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            mov EBX,R15D
            imul EBX,R9D
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            imul R13D,R10D
            imul R12D,R8D
            add R13D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
.L_41dcd7:

            mov EBX,R12D
            sar EBX,16
            add EBX,R12D
            sar EBX,16
            add EDX,EBX
.L_41dce5:

            mov WORD PTR [RSI],DX
            add RDI,2
            add RSI,2
            add EAX,1
            cmp DWORD PTR [RSP-28],EAX
            je .L_41de00
.L_41dcfd:

            movzx EBX,WORD PTR [RDI]
            cmp BYTE PTR [RSP-15],0
            mov EDX,EBX
            jne .L_41dc80

            cmp R9D,R8D
            setge R12B
            cmp R10D,R8D
            setle R13B
            test R12B,R12B
            je .L_41dd88

            test R13B,R13B
            je .L_41dd88

            movsxd R12,EAX
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,EBP
            sub R12D,DWORD PTR [RSP-32]
            add R12D,EAX
            mov R15D,R14D
            movsxd R12,R12D
            sub R15D,EBX
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            mov EBX,R15D
            imul EBX,R9D
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R10D
            imul R13D,R8D
            add R12D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
            jmp .L_41dcd7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dd88:

            cmp R9D,R8D
            setle R14B
            jg .L_41de10

            cmp BYTE PTR [RSP-14],0
            je .L_41de10

            mov R12D,EBP
            sub R12D,DWORD PTR [RSP-32]
            mov R15D,DWORD PTR [RSP-12]
            add R12D,EAX
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBX
            imul R12D,R10D
            imul R14D,R9D
            imul R13D,R8D
            add R14D,R12D
            lea R12D,DWORD PTR [R14+R13*1+32769]
            jmp .L_41dcd7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41de00:

            pop RBX
.L_41de01:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41de10:

            cmp R9D,R10D
            setle R15B
            test R12B,R12B
            je .L_41de80

            test R15B,R15B
            je .L_41de80

            mov R14D,R11D
            sub R14D,DWORD PTR [RSP-24]
            mov R12D,R11D
            mov R15D,DWORD PTR [RSP-8]
            sub R12D,DWORD PTR [RSP-20]
            lea R13D,DWORD PTR [R15+RAX*1]
            add R14D,EBP
            add R12D,EAX
            add R14D,EAX
            movsxd R12,R12D
            movsxd R13,R13D
            movsxd R14,R14D
            movzx R12D,WORD PTR [RCX+R12*2]
            movzx R13D,WORD PTR [RCX+R13*2]
            movzx R14D,WORD PTR [RCX+R14*2]
            sub R14D,R12D
            sub R12D,R13D
            sub R13D,EBX
            imul R12D,R9D
            imul R13D,R10D
            imul R14D,R8D
            add R12D,R13D
.L_41de73:

            lea R12D,DWORD PTR [R12+R14*1+32769]
            jmp .L_41dcd7
.L_41de80:

            test R14B,R14B
            je .L_41def0

            cmp BYTE PTR [RSP-13],0
            je .L_41def0

            mov R15D,DWORD PTR [RSP-4]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP-8]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            mov R15D,R14D
            add R12D,EAX
            sub R15D,EBX
            movsxd R12,R12D
            mov EBX,R15D
            movzx R12D,WORD PTR [RCX+R12*2]
            imul EBX,R10D
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R9D
            imul R13D,R8D
            add R12D,EBX
            lea R12D,DWORD PTR [R12+R13*1+32769]
            jmp .L_41dcd7
          .byte 0x90
.L_41def0:

            test R13B,R13B
            je .L_41dce5

            test R15B,R15B
            je .L_41dce5

            mov R15D,DWORD PTR [RSP-4]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP-12]
            movsxd R12,R12D
            movzx R13D,WORD PTR [RCX+R12*2]
            lea R12D,DWORD PTR [R15+RAX*1]
            movsxd R12,R12D
            movzx R14D,WORD PTR [RCX+R12*2]
            mov R12D,R11D
            sub R12D,DWORD PTR [RSP-24]
            add R12D,EBP
            add R12D,EAX
            movsxd R12,R12D
            movzx R12D,WORD PTR [RCX+R12*2]
            sub R12D,R13D
            sub R13D,R14D
            sub R14D,EBX
            imul R12D,R9D
            imul R13D,R10D
            imul R14D,R8D
            add R12D,R13D
            jmp .L_41de73
.L_41df57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41df60:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            jle .L_41df94

            mov R9,QWORD PTR [RDX+16]
            sub EAX,1
            lea R8,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
.L_41df78:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov RCX,QWORD PTR [R9+RAX*4]
            movzx EDX,DH
            movzx EDX,WORD PTR [RCX+RDX*2]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp R8,RAX
            jne .L_41df78
.L_41df94:

            ret 
.L_41df96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dfa0:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            jle .L_41dfd1

            mov R9,QWORD PTR [RDX+16]
            sub EAX,1
            lea R8,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
.L_41dfb8:

            movzx ECX,WORD PTR [RDI+RAX*1]
            mov RDX,QWORD PTR [R9+RAX*4]
            movzx EDX,WORD PTR [RDX+RCX*2]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp R8,RAX
            jne .L_41dfb8
.L_41dfd1:

            ret 
.L_41dfd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dfe0:

            mov EAX,DWORD PTR [RDX+8]
            test EAX,EAX
            je .L_41e009

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dff8:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp RAX,RCX
            jne .L_41dff8
.L_41e009:

            ret 
.L_41e00b:

            nop
            nop
            nop
            nop
            nop
.L_41e010:

            movzx EAX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+2]
            movzx EDI,BYTE PTR [RDI+4]
            mov R8D,DWORD PTR [RDX+3080]
            mov R10D,DWORD PTR [RDX+3096]
            mov EAX,DWORD PTR [RDX+RAX*4+8]
            mov ECX,DWORD PTR [RDX+RCX*4+1032]
            mov R9D,DWORD PTR [RDX+RDI*4+2056]
            mov EDI,DWORD PTR [RDX+3084]
            imul R8D,EAX
            imul EDI,ECX
            add R8D,EDI
            mov EDI,DWORD PTR [RDX+3088]
            imul R10D,ECX
            imul ECX,DWORD PTR [RDX+3108]
            imul EDI,R9D
            add R8D,EDI
            mov EDI,DWORD PTR [RDX+3092]
            add R8D,DWORD PTR [RDX+3116]
            imul EDI,EAX
            imul EAX,DWORD PTR [RDX+3104]
            add R8D,8192
            add EDI,R10D
            mov R10D,DWORD PTR [RDX+3100]
            sar R8D,14
            imul R10D,R9D
            imul R9D,DWORD PTR [RDX+3112]
            add ECX,EAX
            add EDI,R10D
            add EDI,DWORD PTR [RDX+3120]
            lea EAX,DWORD PTR [RCX+R9*1]
            add EAX,DWORD PTR [RDX+3124]
            add EDI,8192
            sar EDI,14
            xor R9D,R9D
            add EAX,8192
            sar EAX,14
            test R8D,R8D
            js .L_41e0db

            cmp R8D,16384
            mov R9D,16384
            cmovle R9,R8
.L_41e0db:

            xor R8D,R8D
            test EDI,EDI
            js .L_41e0f2

            cmp EDI,16384
            mov R8D,16384
            cmovle R8,RDI
.L_41e0f2:

            xor ECX,ECX
            test EAX,EAX
            js .L_41e106

            cmp EAX,16384
            mov ECX,16384
            cmovle RCX,RAX
.L_41e106:

            movzx EAX,WORD PTR [RDX+R9*2+3128]
            mov WORD PTR [RSI],AX
            movzx EAX,WORD PTR [RDX+R8*2+35898]
            mov WORD PTR [RSI+2],AX
            movzx EAX,WORD PTR [RDX+RCX*2+68668]
            mov WORD PTR [RSI+4],AX
            ret 
.L_41e12c:

            nop
            nop
            nop
            nop
.L_41e130:

            push R12
            push RBP
            push RBX
            sub RSP,144
.L_41e13b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            cmp EAX,15
            ja .L_41e266

            cmp DWORD PTR [RDX+12],15
            mov R12,RDX
            ja .L_41e28a

            test EAX,EAX
            mov RBP,RSI
            mov R8,RSP
            je .L_41e1af

            lea ECX,DWORD PTR [RAX-1]
            movsd XMM1,QWORD PTR [RIP+.L_4208f0]
            xor EDX,EDX
            mov R8,RSP
            add RCX,1
            nop
            nop
            nop
.L_41e188:

            movzx EAX,WORD PTR [RDI+RDX*2]
            pxor XMM0,XMM0
            pxor XMM6,XMM6
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [R8+RDX*4],XMM6
            add RDX,1
            cmp RCX,RDX
            jne .L_41e188
.L_41e1af:

            lea RBX,QWORD PTR [RSP+64]
            mov RDX,R12
            mov RDI,R8
            mov RSI,RBX
            call .L_431130

            mov EAX,DWORD PTR [R12+12]
            test EAX,EAX
            je .L_41e242

            lea ECX,DWORD PTR [RAX-1]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4208f0]
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_4208f8]
            add RCX,1
            movsd XMM5,QWORD PTR [RIP+.L_420900]
            mov ESI,4294967295
            movsd XMM4,QWORD PTR [RIP+.L_420908]
            nop
            nop
            nop
.L_41e200:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RBX+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41e234

            ucomisd XMM0,XMM1
            mov EAX,ESI
            jae .L_41e234

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_41e234:

            mov WORD PTR [RBP+RDX*2],AX
            add RDX,1
            cmp RDX,RCX
            jne .L_41e200
.L_41e242:

            mov RSI,QWORD PTR [RSP+136]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_41e285

            add RSP,144
.L_41e261:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_41e266:

            lea RCX,QWORD PTR [RIP+.L_4208b8]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_4207c7]
            mov EDX,415
            call __assert_fail@PLT
.L_41e285:

            call __stack_chk_fail@PLT
.L_41e28a:

            lea RCX,QWORD PTR [RIP+.L_4208b8]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_4207e3]
            mov EDX,416
            call __assert_fail@PLT
.L_41e2a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e2b0:

            push R12
            push RBP
            mov EDX,176
            push RBX
.L_41e2b9:

            mov R12,RDI
            mov RBX,RSI
            call .L_426090

            test RAX,RAX
            mov RBP,RAX
            je .L_41e30c

            mov EAX,DWORD PTR [RBX+12]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,R12
            lea EDX,DWORD PTR [RAX*8]
            call .L_426090

            mov QWORD PTR [RBP+160],RAX
            mov EAX,DWORD PTR [RBX+12]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+168]
            lea EDX,DWORD PTR [RAX*8]
            call .L_426090

            mov QWORD PTR [RBP+168],RAX
.L_41e30c:

            mov RAX,RBP
            pop RBX
.L_41e310:

            pop RBP
            pop R12
            ret 
.L_41e314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e320:

            mov EDX,4624
            jmp .L_426090
.L_41e32a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41e330:

            mov EDX,101440
            jmp .L_426090
.L_41e33a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41e340:

            push R14
            push R13
            mov EDX,24
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_41e350:

            call .L_426090

            test RAX,RAX
            mov RBP,RAX
            je .L_41e3ba

            mov EAX,DWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RBP+16]
            mov RDI,R13
            lea EDX,DWORD PTR [RAX*8]
            call .L_426090

            mov EDX,DWORD PTR [RBP+8]
            mov QWORD PTR [RBP+16],RAX
            test EDX,EDX
            jle .L_41e3ba

            xor R14D,R14D
            xor R12D,R12D
            jmp .L_41e394
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e390:

            mov RAX,QWORD PTR [RBP+16]
.L_41e394:

            lea RBX,QWORD PTR [RAX+R14*1]
            mov EAX,DWORD PTR [RBP+12]
            mov RDI,R13
            add R12D,1
            add R14,8
            mov RSI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX+RAX*1]
            call .L_426090

            cmp DWORD PTR [RBP+8],R12D
            mov QWORD PTR [RBX],RAX
            jg .L_41e390
.L_41e3ba:

            pop RBX
.L_41e3bb:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41e3c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e3d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov RSI,QWORD PTR [RSI+160]
            call .L_426070

            mov RSI,QWORD PTR [RBP+168]
            mov RDI,RBX
            call .L_426070

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_426070
.L_41e408:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e410:

            jmp .L_426070
.L_41e415:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e420:

            test RSI,RSI
            je .L_41e430

            jmp .L_426070
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e430:

            ret 
.L_41e432:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e440:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EAX,DWORD PTR [RSI+8]
            mov RBP,RSI
            test EAX,EAX
            jle .L_41e474

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
.L_41e458:

            mov RAX,QWORD PTR [RBP+16]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+RBX*8]
            call .L_426070

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP+8],EAX
            jg .L_41e458
.L_41e474:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,R12
            call .L_426070

            pop RBX
            mov RSI,RBP
            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_426070
.L_41e48f:

            nop
.L_41e490:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,176
            push RBP
            push RBX
            mov R13,RDI
            mov R14,RCX
            mov R12D,R8D
            mov RBP,R9
            sub RSP,24
.L_41e4b2:

            mov DWORD PTR [RSP+12],EDX
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_41e5d4

            mov EDX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+12],R12D
            test EDX,EDX
            mov DWORD PTR [RAX+8],EDX
            jle .L_41e523

            xor EAX,EAX
            lea RDI,QWORD PTR [RIP+.L_41da90]
            jmp .L_41e508
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e4e8:

            mov RCX,QWORD PTR [R14+RAX*8]
            mov RSI,QWORD PTR [RCX]
            mov RCX,QWORD PTR [RSI+128]
            mov QWORD PTR [RBX+RAX*8+80],RSI
            mov QWORD PTR [RBX+RAX*8+16],RCX
            add RAX,1
            cmp EDX,EAX
            jle .L_41e523
.L_41e508:

            test R14,R14
            jne .L_41e4e8

            mov QWORD PTR [RBX+RAX*8+80],0
            mov QWORD PTR [RBX+RAX*8+16],RDI
            add RAX,1
            cmp EDX,EAX
            jg .L_41e508
.L_41e523:

            mov RAX,QWORD PTR [R15+128]
            mov EDX,8
            mov ESI,R12D
            mov RDI,R13
            mov QWORD PTR [RBX+152],R15
            mov QWORD PTR [RBX+144],RAX
            call .L_426010

            mov EDX,8
            mov QWORD PTR [RBX+160],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_426010

            test R12D,R12D
            mov QWORD PTR [RBX+168],RAX
            jle .L_41e5d4

            lea EDX,DWORD PTR [R12-1]
            mov RDI,QWORD PTR [RBX+160]
            lea R9,QWORD PTR [RIP+.L_41da90]
            lea R8,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            jmp .L_41e5b5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e590:

            mov RCX,QWORD PTR [RBP+RDX*1]
            add RDX,8
            cmp RDX,R8
            mov RCX,QWORD PTR [RCX]
            mov QWORD PTR [RAX],RCX
            mov RAX,QWORD PTR [RCX+128]
            mov QWORD PTR [RSI],RAX
            je .L_41e5d4
.L_41e5ae:

            mov RAX,QWORD PTR [RBX+168]
.L_41e5b5:

            add RAX,RDX
            test RBP,RBP
            lea RSI,QWORD PTR [RDI+RDX*1]
            jne .L_41e590

            add RDX,8
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RSI],R9
            cmp RDX,R8
            jne .L_41e5ae
.L_41e5d4:

            add RSP,24
.L_41e5d8:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41e5e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e5f0:

            push R12
            mov R12,RDI
            push RBP
            mov RBP,RSI
            push RBX
.L_41e5fa:

            xor EBX,EBX
            jmp .L_41e68a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e608:

            cvtss2sd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_420960]
            mulsd XMM0,QWORD PTR [RIP+.L_420918]
            movsd XMM6,QWORD PTR [RIP+.L_420920]
            addsd XMM0,QWORD PTR [RIP+.L_4208f8]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
            andpd XMM1,XMM2
            ucomisd XMM6,XMM1
            jbe .L_41e675

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_420928]
            andnpd XMM2,XMM3
            cvtsi2sd XMM1,RAX
            movapd XMM7,XMM1
            cmpnlesd XMM7,XMM0
            movapd XMM0,XMM7
            andpd XMM0,XMM4
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            orpd XMM0,XMM2
.L_41e675:

            cvttsd2si EAX,XMM0
            mov DWORD PTR [R12+RBX*4],EAX
            add RBX,1
            cmp RBX,256
            je .L_41e6cc
.L_41e68a:

            pxor XMM0,XMM0
            mov RDI,RBP
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RIP+.L_420910]
            cvtsd2ss XMM0,XMM0
            call .L_428730

            movss XMM5,DWORD PTR [RIP+.L_420958]
            ucomiss XMM5,XMM0
            ja .L_41e608

            mov DWORD PTR [R12+RBX*4],2147483647
            add RBX,1
            cmp RBX,256
            jne .L_41e68a
.L_41e6cc:

            pop RBX
.L_41e6cd:

            pop RBP
            pop R12
            ret 
.L_41e6d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e6e0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov EBP,EDX
            xor EBX,EBX
            sub RSP,8
.L_41e6f4:

            jmp .L_41e721
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e700:

            ucomiss XMM0,DWORD PTR [RIP+.L_42095c]
            jbe .L_41e783

            mov EAX,4294967295
.L_41e70e:

            mov WORD PTR [R13+RBX*2],AX
            add RBX,1
            cmp RBX,16385
            je .L_41e778
.L_41e721:

            pxor XMM0,XMM0
            mov RDI,R12
            cvtsi2sd XMM0,EBX
            mulsd XMM0,QWORD PTR [RIP+.L_420930]
            cvtsd2ss XMM0,XMM0
            call .L_428730

            pxor XMM3,XMM3
            ucomiss XMM3,XMM0
            jbe .L_41e700

            test EBP,EBP
            jne .L_41e770

            movsd XMM0,QWORD PTR [RIP+.L_4208f8]
.L_41e752:

            subsd XMM0,QWORD PTR [RIP+.L_420900]
            addsd XMM0,QWORD PTR [RIP+.L_420908]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            jmp .L_41e70e
          .byte 0x90
.L_41e770:

            xor EAX,EAX
            jmp .L_41e70e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e778:

            add RSP,8
.L_41e77c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41e783:

            cvtss2sd XMM0,XMM0
            test EBP,EBP
            movsd XMM2,QWORD PTR [RIP+.L_4208f0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4208f8]
            je .L_41e7ee

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            jae .L_41e770

            or EAX,4294967295
            ucomisd XMM0,XMM2
            jae .L_41e70e

            subsd XMM0,QWORD PTR [RIP+.L_420900]
            addsd XMM0,QWORD PTR [RIP+.L_420908]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
            movzx EAX,AX
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            jmp .L_41e70e
.L_41e7ee:

            pxor XMM1,XMM1
            xor EAX,EAX
            ucomisd XMM1,XMM0
            jae .L_41e70e

            or EAX,4294967295
            ucomisd XMM0,XMM2
            jb .L_41e752

            jmp .L_41e70e
.L_41e810:

            mov RCX,QWORD PTR [RDI]
            xor EAX,EAX
            test RCX,RCX
            je .L_41e880

            push R12
            mov R12D,EDX
            push RBP
            mov EBP,ESI
            push RBX
.L_41e823:

            mov RBX,RDI
            jmp .L_41e836
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e830:

            mov RCX,RDI
            mov RBX,R8
.L_41e836:

            mov RDI,QWORD PTR [RCX+56]
            lea R8,QWORD PTR [RCX+56]
            test RDI,RDI
            je .L_41e877

            cmp DWORD PTR [RCX+12],EBP
            jne .L_41e830

            cmp DWORD PTR [RDI+12],R12D
            jne .L_41e830

            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RCX+56],RAX
            call .L_430660

            mov RDI,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [RBX],RAX
            call .L_430660

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            jne .L_41e882

            mov EAX,1
.L_41e877:

            pop RBX
.L_41e878:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e880:

            ret 
.L_41e882:

            mov R8,RBX
            mov EAX,1
            jmp .L_41e830
.L_41e88c:

            nop
            nop
            nop
            nop
.L_41e890:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41e899:

            call .L_42f990

            test RAX,RAX
            je .L_41e8d5

            mov RDI,RBP
            mov RBX,RAX
            call .L_430e20

            test EAX,EAX
            je .L_41e8e0

            sub EAX,1
            lea RBP,QWORD PTR [RBX+RAX*8+8]
            jmp .L_41e8c9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e8c0:

            add RBX,8
            cmp RBX,RBP
            je .L_41e8e0
.L_41e8c9:

            mov RDI,QWORD PTR [RBX]
            call .L_427ce0

            test EAX,EAX
            jne .L_41e8c0
.L_41e8d5:

            add RSP,8
.L_41e8d9:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_41e8e0:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_41e8ec:

            nop
            nop
            nop
            nop
.L_41e8f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RCX
            sub RSP,184
.L_41e904:

            mov RBX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RDI
            mov EDI,DWORD PTR [RDX]
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP],R8
            call .L_40b390

            test EAX,EAX
            je .L_41e960
.L_41e933:

            xor EBP,EBP
.L_41e935:

            mov RSI,QWORD PTR [RSP+168]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41ecfa

            add RSP,184
.L_41e955:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41e960:

            mov EDI,DWORD PTR [RBP]
            call .L_40b390

            test EAX,EAX
            mov EBP,EAX
            jne .L_41e933

            mov RDI,RBX
            call .L_431470

            test RAX,RAX
            mov R14,RAX
            jne .L_41e990

            jmp .L_41e9a1
.L_41e980:

            mov RDI,R14
            call .L_430e50

            test RAX,RAX
            mov R14,RAX
            je .L_41e9a1
.L_41e990:

            mov RDI,R14
            call .L_430e30

            cmp EAX,1668707188
            je .L_41e980

            jmp .L_41e933
.L_41e9a1:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            call .L_430f40

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41e933

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov EDX,8
            call .L_426010

            test RAX,RAX
            mov R15,RAX
            je .L_41ea47

            mov ESI,DWORD PTR [RBX+8]
            test ESI,ESI
            je .L_41ea56

            xor R14D,R14D
            jmp .L_41e9f4

            nop
            nop
            nop
            nop
            nop
.L_41e9e8:

            mov ESI,DWORD PTR [RBX+8]
            add R14D,1
            cmp ESI,R14D
            jbe .L_41ea56
.L_41e9f4:

            mov RDI,QWORD PTR [RBX+56]
            mov EAX,R14D
            xor EDX,EDX
            lea R12,QWORD PTR [R15+RAX*8]
            mov ESI,4096
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            jne .L_41e9e8
.L_41ea14:

            mov EAX,DWORD PTR [RBX+8]
            xor R12D,R12D
            test EAX,EAX
            je .L_41ea3b

            nop
            nop
.L_41ea20:

            mov EAX,R12D
            mov RDI,QWORD PTR [R15+RAX*8]
            test RDI,RDI
            je .L_41ea31

            call .L_427870
.L_41ea31:

            add R12D,1
            cmp DWORD PTR [RBX+8],R12D
            ja .L_41ea20
.L_41ea3b:

            mov RDI,QWORD PTR [RBX+56]
            mov RSI,R15
            call .L_426070
.L_41ea47:

            mov RDI,QWORD PTR [RSP+24]
            call .L_431080

            jmp .L_41e935
.L_41ea56:

            lea R12,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RSP+96]
            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_41ea68:

            test ESI,ESI
            je .L_41eaa8

            pxor XMM0,XMM0
            lea ECX,DWORD PTR [RSI-1]
            lea RAX,QWORD PTR [R12+4]
            mov RDX,R12
            lea RCX,QWORD PTR [RAX+RCX*4]
            cvtsi2sd XMM0,R13D
            divsd XMM0,QWORD PTR [RIP+.L_420938]
            cvtsd2ss XMM0,XMM0
            jmp .L_41ea9c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ea98:

            add RAX,4
.L_41ea9c:

            cmp RCX,RAX
            movss DWORD PTR [RDX],XMM0
            mov RDX,RAX
            jne .L_41ea98
.L_41eaa8:

            mov RSI,R14
            mov RDX,RBX
            mov RDI,R12
            call .L_431130

            mov ESI,DWORD PTR [RBX+8]
            test ESI,ESI
            je .L_41eb4b

            lea EDI,DWORD PTR [RSI-1]
            pxor XMM2,XMM2
            lea R8,QWORD PTR [R13+R13*1]
            movsd XMM1,QWORD PTR [RIP+.L_4208f0]
            movsd XMM3,QWORD PTR [RIP+.L_4208f8]
            add RDI,1
            movsd XMM4,QWORD PTR [RIP+.L_420908]
            xor EAX,EAX
            mov R9D,4294967295
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eaf8:

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [R15+RAX*8]
            cvtss2sd XMM0,DWORD PTR [R14+RAX*4]
            mov RCX,QWORD PTR [RDX+48]
            xor EDX,EDX
            mulsd XMM0,XMM1
            add RCX,R8
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41eb3f

            ucomisd XMM0,XMM1
            mov EDX,R9D
            jae .L_41eb3f

            subsd XMM0,QWORD PTR [RIP+.L_420900]
            addsd XMM0,XMM4
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41eb3f:

            add RAX,1
            mov WORD PTR [RCX],DX
            cmp RAX,RDI
            jne .L_41eaf8
.L_41eb4b:

            add R13,1
            cmp R13,4096
            jne .L_41ea68

            mov RDI,QWORD PTR [RBX+56]
            mov RDX,R15
            call .L_430680

            test RAX,RAX
            mov R13,RAX
            je .L_41ea14

            mov EDX,DWORD PTR [RBX+8]
            test EDX,EDX
            je .L_41eba0

            xor R14D,R14D
.L_41eb7e:

            mov EAX,R14D
            add R14D,1
            lea R12,QWORD PTR [R15+RAX*8]
            mov RDI,QWORD PTR [R12]
            call .L_427870

            cmp DWORD PTR [RBX+8],R14D
            mov QWORD PTR [R12],0
            ja .L_41eb7e
.L_41eba0:

            mov RDI,QWORD PTR [RBX+56]
            mov RSI,R15
            call .L_426070

            mov RDI,R13
            call .L_41e890

            test EAX,EAX
            jne .L_41ebd8

            mov RDI,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDX,R13
            call .L_431280

            test EAX,EAX
            jne .L_41ec45
.L_41ebcb:

            mov RDI,R13
            call .L_430660

            jmp .L_41ea47
.L_41ebd8:

            mov RDI,R13
            call .L_430660

            mov R15,QWORD PTR [RSP+24]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [R15+56]
            call .L_42f7c0

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_431280

            test EAX,EAX
            je .L_41ea47

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RIP+.L_41dfe0]
            xor R8D,R8D
            xor ECX,ECX
            or DWORD PTR [RAX],64
            mov RDX,RDI
            call .L_4314e0
.L_41ec26:

            mov RDI,RBX
            mov EBP,1
            call .L_431080

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],RBX
            jmp .L_41e935
.L_41ec45:

            mov RAX,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RAX]
            call .L_40b3a0

            test EAX,EAX
            je .L_41eca4

            mov RAX,QWORD PTR [R13+48]
            mov R15,QWORD PTR [RSP+24]
            mov EDX,256
            mov RCX,QWORD PTR [RAX+8]
            mov RDI,QWORD PTR [R15+56]
            mov ESI,DWORD PTR [RAX]
            call .L_4017bf

            test RAX,RAX
            je .L_41ebcb

            mov RSI,QWORD PTR [RSP]
            lea R8,QWORD PTR [RIP+.L_41e340]
            lea RCX,QWORD PTR [RIP+.L_41e440]
            mov RDX,RAX
            mov RDI,R15
            or DWORD PTR [RSI],64
            lea RSI,QWORD PTR [RIP+.L_41df60]
            call .L_4314e0

            jmp .L_41ec26
.L_41eca4:

            mov RDI,R13
            call .L_430e40

            mov R15,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RAX+8]
            mov EDX,65536
            mov ESI,DWORD PTR [RAX]
            mov RDI,QWORD PTR [R15+56]
            call .L_4017bf

            test RAX,RAX
            je .L_41ebcb

            mov RSI,QWORD PTR [RSP]
            lea R8,QWORD PTR [RIP+.L_41e340]
            lea RCX,QWORD PTR [RIP+.L_41e440]
            mov RDX,RAX
            mov RDI,R15
            or DWORD PTR [RSI],64
            lea RSI,QWORD PTR [RIP+.L_41dfa0]
            call .L_4314e0

            jmp .L_41ec26
.L_41ecfa:

            call __stack_chk_fail@PLT
.L_41ecff:

            nop
.L_41ed00:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RDI
            mov R12D,ESI
            mov RBP,R8
            sub RSP,72
.L_41ed1d:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            call .L_40b390

            test EAX,EAX
            je .L_41ed78
.L_41ed4a:

            xor R15D,R15D
.L_41ed4d:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_41f0e4

            add RSP,72
.L_41ed68:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ed78:

            mov EDI,DWORD PTR [R14]
            call .L_40b390

            test EAX,EAX
            mov R15D,EAX
            jne .L_41ed4a

            mov EDI,DWORD PTR [R13]
            shr EDI,16
            and EDI,31
            call .L_40d430

            mov EDI,DWORD PTR [R14]
            mov R13D,EAX
            mov DWORD PTR [RSP],EAX
            shr EDI,16
            and EDI,31
            call .L_40d430

            cmp R13D,-1
            mov DWORD PTR [RSP+4],EAX
            je .L_41ed4a

            cmp EAX,-1
            je .L_41ed4a

            mov ESI,DWORD PTR [RBP]
            mov EDI,R13D
            call .L_40d9d0

            mov RDI,QWORD PTR [RBX]
            mov R14D,EAX
            call .L_4314b0

            test EAX,EAX
            mov EAX,2
            cmovne EAX,R14D
            mov R14,QWORD PTR [RBX]
            mov DWORD PTR [RSP+8],EAX
            mov RDI,R14
            call .L_431470

            test RAX,RAX
            mov R13,RAX
            je .L_41ee1b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41edf8:

            mov RDI,R13
            call .L_430e30

            cmp EAX,1852009504
            je .L_41ed4a

            mov RDI,R13
            call .L_430e50

            test RAX,RAX
            mov R13,RAX
            jne .L_41edf8
.L_41ee1b:

            mov EDX,DWORD PTR [R14+12]
            mov ESI,DWORD PTR [R14+8]
            mov RDI,QWORD PTR [R14+56]
            call .L_430f40

            test RAX,RAX
            mov R13,RAX
            je .L_41ed4a

            test BYTE PTR [RBP],16
            je .L_41ee58

            mov RDI,R14
            call .L_431470

            test RAX,RAX
            je .L_41ee58

            cmp DWORD PTR [RAX+8],1668707188
            je .L_41f038
.L_41ee58:

            mov QWORD PTR [RSP+16],0
.L_41ee61:

            mov ECX,DWORD PTR [R14+12]
            mov EDX,DWORD PTR [R14+8]
            xor R8D,R8D
            mov RDI,QWORD PTR [R14+56]
            mov ESI,DWORD PTR [RSP+8]
            call .L_430b00

            test RAX,RAX
            je .L_41eff0

            mov RDX,RAX
            mov ESI,1
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            call .L_431280

            test EAX,EAX
            je .L_41eff0

            test BYTE PTR [RBP],1
            mov R8,QWORD PTR [RSP+8]
            je .L_41eee8

            mov RDI,R14
            mov QWORD PTR [RSP+8],R8
            call .L_431480

            test RAX,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_41eee8

            mov RDI,RAX
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+8],RAX
            call .L_430e30

            cmp EAX,1668707188
            mov RDX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+24]
            je .L_41f0e9
.L_41eee8:

            mov QWORD PTR [RSP+8],0
.L_41eef1:

            lea RSI,QWORD PTR [RIP+.L_41e130]
            xor ECX,ECX
            mov RDX,R14
            mov RDI,R8
            mov QWORD PTR [RSP+24],R8
            call .L_42fba0

            test EAX,EAX
            je .L_41eff0

            mov RDI,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+24]
            test RDI,RDI
            je .L_41ef2b

            call .L_430660

            mov R8,QWORD PTR [RSP+24]
.L_41ef2b:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_41ef44

            mov QWORD PTR [RSP+24],R8
            call .L_430660

            mov R8,QWORD PTR [RSP+24]
.L_41ef44:

            mov RDI,R14
            mov QWORD PTR [RSP+24],R8
            call .L_431080

            mov RSI,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            test RSI,RSI
            mov RAX,QWORD PTR [R8+48]
            je .L_41f0c1

            cmp QWORD PTR [RSP+8],0
            mov RDX,QWORD PTR [RSI+48]
            mov RCX,QWORD PTR [RDX+8]
            je .L_41f0d8

            mov RAX,QWORD PTR [RAX+8]
.L_41ef80:

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSI+48]
            mov R9,QWORD PTR [RDX+8]
.L_41ef8d:

            test RCX,RCX
            jne .L_41f088

            test R9,R9
            jne .L_41f088
.L_41ef9f:

            mov RSI,QWORD PTR [RAX+128]
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,RAX
            mov RDI,R13
            call .L_4314e0
.L_41efb6:

            cmp R12D,3
            mov EAX,DWORD PTR [RBP]
            jne .L_41efc5

            or EAX,4
            mov DWORD PTR [RBP],EAX
.L_41efc5:

            test AL,4
            jne .L_41efd8

            mov EDX,DWORD PTR [RSP+4]
            mov ESI,DWORD PTR [RSP]
            mov RDI,R13
            call .L_401944
.L_41efd8:

            mov QWORD PTR [RBX],R13
            mov R15D,1
            jmp .L_41ed4d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eff0:

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_41f00c

            xor ESI,ESI
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            je .L_41f144
.L_41f00c:

            mov RDX,QWORD PTR [RSP+48]
            test RDX,RDX
            je .L_41f02b

            mov ESI,1
            mov RDI,R14
            call .L_431280

            test EAX,EAX
            je .L_41f163
.L_41f02b:

            mov RDI,R13
            call .L_431080

            jmp .L_41ed4d
.L_41f038:

            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_41e890

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            jne .L_41ee58

            mov RDI,RDX
            call .L_430e60

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R13
            mov QWORD PTR [RSP+16],RAX
            call .L_431280

            test EAX,EAX
            je .L_41eff0

            lea RDX,QWORD PTR [RSP+40]
            xor ESI,ESI
            mov RDI,R14
            call .L_4312f0

            jmp .L_41ee61
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f088:

            mov EDX,DWORD PTR [R13+8]
            mov RDI,QWORD PTR [R13+56]
            mov RSI,RAX
            mov R8D,DWORD PTR [R13+12]
            call .L_41e490

            lea R8,QWORD PTR [RIP+.L_41e2b0]
            lea RCX,QWORD PTR [RIP+.L_41e3d0]
            lea RSI,QWORD PTR [RIP+.L_41daa0]
            mov RDX,RAX
            mov RDI,R13
            call .L_4314e0

            jmp .L_41efb6
.L_41f0c1:

            cmp QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RAX+8]
            je .L_41ef9f

            xor ECX,ECX
            jmp .L_41ef80
.L_41f0d8:

            xor R9D,R9D
            mov RAX,QWORD PTR [RAX+8]
            jmp .L_41ef8d
.L_41f0e4:

            call __stack_chk_fail@PLT
.L_41f0e9:

            mov RDI,RDX
            call .L_41e890

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+24]
            jne .L_41eee8

            mov RDI,RDX
            call .L_430e60

            mov ESI,1
            mov RDX,RAX
            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            call .L_431280

            test EAX,EAX
            je .L_41eff0

            lea RDX,QWORD PTR [RSP+48]
            mov ESI,1
            mov RDI,R14
            call .L_4312f0

            mov R8,QWORD PTR [RSP+24]
            jmp .L_41eef1
.L_41f144:

            lea RCX,QWORD PTR [RIP+.L_4208a0]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_420800]
            mov EDX,739
            call __assert_fail@PLT
.L_41f163:

            lea RCX,QWORD PTR [RIP+.L_4208a0]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_420800]
            mov EDX,744
            call __assert_fail@PLT
.L_41f182:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f190:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,200
.L_41f1a4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+28],0
.L_41f1bf:

            mov RDI,QWORD PTR [RBP]
            mov R13,RBP
            xor EBX,EBX
.L_41f1c8:

            test RDI,RDI
            je .L_41f1ea
.L_41f1cd:

            cmp DWORD PTR [RDI+12],1768189472
            mov RAX,QWORD PTR [RDI+56]
            je .L_41f3d0

            lea R13,QWORD PTR [RDI+56]
            mov RDI,RAX
            test RDI,RDI
            jne .L_41f1cd
.L_41f1ea:

            mov EDX,2016570400
            mov ESI,1815246880
            mov RDI,RBP
            call .L_41e810

            mov EDX,1815246880
            mov R12D,EAX
            mov ESI,2016570400
            mov RDI,RBP
            or EBX,R12D
            call .L_41e810

            mov EDX,840971296
            mov ESI,874525216
            mov RDI,RBP
            or EBX,EAX
            call .L_41e810

            mov EDX,874525216
            mov ESI,840971296
            mov RDI,RBP
            or EBX,EAX
            call .L_41e810

            mov EDX,1815241760
            mov ESI,1681026080
            mov RDI,RBP
            or EBX,EAX
            call .L_41e810

            mov EDX,2016568352
            mov ESI,1681029152
            mov RDI,RBP
            or EBX,EAX
            call .L_41e810

            mov R14,QWORD PTR [RBP]
            or EBX,EAX
            test R14,R14
            je .L_41f3f2

            lea RAX,QWORD PTR [RSP+32]
            mov R15,RBP
            xor ESI,ESI
            lea R12,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41f296
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f290:

            mov R14,RAX
            mov R15,RDX
.L_41f296:

            mov RAX,QWORD PTR [R14+56]
            lea RDX,QWORD PTR [R14+56]
            test RAX,RAX
            je .L_41f3f0

            cmp DWORD PTR [R14+12],1835103334
            jne .L_41f290

            cmp DWORD PTR [RAX+12],1835103334
            jne .L_41f290

            mov RDI,R14
            call .L_430e40

            mov RDI,QWORD PTR [R14+56]
            mov R13,RAX
            call .L_430e40

            cmp QWORD PTR [R13+8],0
            jne .L_41f3f2

            cmp QWORD PTR [RAX+8],0
            mov QWORD PTR [RSP+16],RAX
            jne .L_41f3f2

            mov RDI,QWORD PTR [R15]
            call .L_430e10

            cmp EAX,3
            jne .L_41f3f2

            mov RDI,QWORD PTR [R15]
            call .L_430e20

            cmp EAX,3
            jne .L_41f3f2

            mov RDI,QWORD PTR [R14+56]
            call .L_430e10

            cmp EAX,3
            jne .L_41f3f2

            mov RDI,QWORD PTR [R14+56]
            call .L_430e20

            cmp EAX,3
            jne .L_41f3f2

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RAX]
            call .L_4320e0

            mov RDI,QWORD PTR [R14+56]
            mov R13,QWORD PTR [RDI+56]
            mov QWORD PTR [R14+56],R13
            call .L_430660

            mov RDI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RDI+56]
            mov QWORD PTR [R15],RAX
            call .L_430660

            mov RDI,R12
            call .L_431fa0

            mov RCX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R12+72]
            mov RDX,R12
.L_41f37a:

            xor EAX,EAX
.L_41f37c:

            movsd XMM0,QWORD PTR [RDX+RAX*1]
            movsd XMM1,QWORD PTR [RIP+.L_420940]
            subsd XMM0,QWORD PTR [RCX+RAX*1]
            andpd XMM0,XMMWORD PTR [RIP+.L_420960]
            ucomisd XMM1,XMM0
            jbe .L_41f430

            add RAX,8
            cmp RAX,24
            jne .L_41f37c

            add RDX,24
            add RCX,24
            cmp RDX,RSI
            jne .L_41f37a

            mov RAX,QWORD PTR [R15]
            test RAX,RAX
            je .L_41f460
.L_41f3c3:

            mov RDX,R15
            mov ESI,1
            jmp .L_41f290
.L_41f3d0:

            mov QWORD PTR [R13],RAX
            mov EBX,1
            call .L_430660

            mov RDI,QWORD PTR [R13]
            jmp .L_41f1c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f3f0:

            or EBX,ESI
.L_41f3f2:

            test EBX,EBX
            jne .L_41f420

            mov RCX,QWORD PTR [RSP+184]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+28]
            jne .L_41f465

            add RSP,200
.L_41f414:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41f420:

            mov DWORD PTR [RSP+28],1
            jmp .L_41f1bf
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f430:

            mov RDI,QWORD PTR [RBP+56]
            mov RCX,QWORD PTR [RSP+8]
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_41f3f2

            test RAX,RAX
            mov QWORD PTR [RAX+56],R13
            mov QWORD PTR [R15],RAX
            jne .L_41f3c3
.L_41f460:

            or EBX,1
            jmp .L_41f3f2
.L_41f465:

            call __stack_chk_fail@PLT
.L_41f46a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41f470:

            test EDI,EDI
            jle .L_41f4d0

            mov RDX,QWORD PTR [RSI]
            lea ECX,DWORD PTR [RDI-1]
            xor ESI,ESI
            lea RAX,QWORD PTR [RDX+2]
            lea R8,QWORD PTR [RAX+RCX*2]
            xor ECX,ECX
            jmp .L_41f49f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f490:

            add ECX,1
            cmp R8,RAX
            mov RDX,RAX
            je .L_41f4bb
.L_41f49b:

            add RAX,2
.L_41f49f:

            movzx EDX,WORD PTR [RDX]
            test DX,DX
            je .L_41f490

            cmp DX,-1
            sete DL
            movzx EDX,DL
            add ESI,EDX
            cmp R8,RAX
            mov RDX,RAX
            jne .L_41f49b
.L_41f4bb:

            cmp ECX,1
            jne .L_41f4d4

            xor EAX,EAX
            cmp ESI,1
            jne .L_41f4d4

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f4d0:

            xor ESI,ESI
            xor ECX,ECX
.L_41f4d4:

            mov EAX,EDI
            mov EDX,1717986919
            sar EDI,31
            imul EDX
            sar EDX,3
            sub EDX,EDI
            cmp EDX,ESI
            setl AL
            cmp EDX,ECX
            setl DL
            or EAX,EDX
            movzx EAX,AL
            ret 
.L_41f4f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f500:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,488
.L_41f514:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+472],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],ESI
            mov EAX,EDI
            shr EAX,16
            and EAX,31
            cmp EAX,4
            je .L_41f568
.L_41f53a:

            xor EAX,EAX
.L_41f53c:

            mov RBX,QWORD PTR [RSP+472]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41fbeb

            add RSP,488
.L_41f55a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f568:

            test EDI,4096
            jne .L_41f53a

            mov R14,RDX
            mov EDX,DWORD PTR [RCX]
            mov EAX,EDX
            shr EAX,16
            and EAX,31
            cmp EAX,4
            jne .L_41f53a

            and DH,16
            jne .L_41f53a

            mov QWORD PTR [RSP+8],RCX
            mov RBP,R8
            call .L_40b3a0

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            jne .L_41f5a3

            test BYTE PTR [RBP],16
            je .L_41f53a
.L_41f5a3:

            mov RBX,QWORD PTR [R12]
            mov QWORD PTR [RSP+8],RCX
            mov RDI,RBX
            call .L_431470

            test RAX,RAX
            mov R13,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_41f5f7

            mov R15,RCX
            jmp .L_41f5e0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f5d0:

            mov RDI,R13
            call .L_430e50

            test RAX,RAX
            mov R13,RAX
            je .L_41f5f4
.L_41f5e0:

            mov RDI,R13
            call .L_430e30

            cmp EAX,1852009504
            jne .L_41f5d0

            jmp .L_41f53a
.L_41f5f4:

            mov RCX,R15
.L_41f5f7:

            mov EDI,DWORD PTR [R14]
            mov QWORD PTR [RSP+8],RCX
            lea R13,QWORD PTR [RSP+208]
            shr EDI,16
            and EDI,31
            call .L_40d430

            mov RCX,QWORD PTR [RSP+8]
            mov R15D,EAX
            mov DWORD PTR [RSP+40],EAX
            mov EDI,DWORD PTR [RCX]
            shr EDI,16
            and EDI,31
            call .L_40d430

            mov ESI,DWORD PTR [RBP]
            mov EDI,R15D
            mov DWORD PTR [RSP+44],EAX
            call .L_40d9d0

            mov ECX,16
            mov DWORD PTR [RSP+48],EAX
            mov RDI,R13
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [RSP+336]
            mov ECX,16
            mov QWORD PTR [RSP+32],RDI

            rep stosq QWORD PTR [RDI]

            mov RDI,RBX
            call .L_431480

            mov RDI,RAX
            mov R15,RAX
            call .L_430e30

            cmp EAX,1668707188
            je .L_41fb0d
.L_41f67e:

            mov R10D,DWORD PTR [RBX+8]
            mov R15D,1
            test R10D,R10D
            jne .L_41f6ac

            jmp .L_41f73e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f698:

            mov R10D,DWORD PTR [RBX+8]
            mov EAX,R15D
            add R15,1
            cmp EAX,R10D
            jae .L_41f73e
.L_41f6ac:

            mov RDI,QWORD PTR [RBX+56]
            xor EDX,EDX
            mov ESI,4096
            call .L_4274b0

            test RAX,RAX
            mov QWORD PTR [R13+R15*8-8],RAX
            jne .L_41f698
.L_41f6c6:

            mov EAX,DWORD PTR [RBX+8]
            test EAX,EAX
            je .L_41f53a

            mov QWORD PTR [RSP+8],0
            xor R15D,R15D
.L_41f6dd:

            mov R12,QWORD PTR [RSP+32]
            mov EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f6f0:

            mov RDI,QWORD PTR [R13+RBP*8-8]
            test RDI,RDI
            je .L_41f6ff

            call .L_427870
.L_41f6ff:

            mov RDI,QWORD PTR [R12+RBP*8-8]
            test RDI,RDI
            je .L_41f70e

            call .L_427870
.L_41f70e:

            mov EAX,EBP
            add RBP,1
            cmp EAX,DWORD PTR [RBX+8]
            jb .L_41f6f0

            test R15,R15
            je .L_41f726
.L_41f71e:

            mov RDI,R15
            call .L_431080
.L_41f726:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_41f53a

            call .L_431080

            jmp .L_41f53a
.L_41f73e:

            lea R9,QWORD PTR [RSP+80]
            xor R8D,R8D
            lea R15,QWORD PTR [RSP+144]
            movsd XMM1,QWORD PTR [RIP+.L_4208f0]
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+24],RBP
            mov R12,R9
            mov RBP,R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f770:

            pxor XMM0,XMM0
            test R10D,R10D
            cvtsi2sd XMM0,EBP
            divsd XMM0,QWORD PTR [RIP+.L_420938]
            cvtsd2ss XMM0,XMM0
            je .L_41f7b0

            lea ECX,DWORD PTR [R10-1]
            lea RAX,QWORD PTR [R12+4]
            mov RDX,R12
            lea RCX,QWORD PTR [RAX+RCX*4]
            jmp .L_41f7a4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f7a0:

            add RAX,4
.L_41f7a4:

            cmp RCX,RAX
            movss DWORD PTR [RDX],XMM0
            mov RDX,RAX
            jne .L_41f7a0
.L_41f7b0:

            mov RDX,RBX
            mov RSI,R15
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call .L_431130

            mov R10D,DWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+8]
            test R10D,R10D
            je .L_41f854

            lea ESI,DWORD PTR [R10-1]
            pxor XMM2,XMM2
            lea RDI,QWORD PTR [RBP+RBP*1]
            movsd XMM3,QWORD PTR [RIP+.L_4208f8]
            movsd XMM4,QWORD PTR [RIP+.L_420908]
            add RSI,1
            xor EAX,EAX
            mov R11D,4294967295
.L_41f800:

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [R13+RAX*8]
            cvtss2sd XMM0,DWORD PTR [R15+RAX*4]
            mov RCX,QWORD PTR [RDX+48]
            xor EDX,EDX
            mulsd XMM0,XMM1
            add RCX,RDI
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_41f848

            ucomisd XMM0,XMM1
            mov EDX,R11D
            jae .L_41f848

            subsd XMM0,QWORD PTR [RIP+.L_420900]
            addsd XMM0,XMM4
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41f848:

            add RAX,1
            mov WORD PTR [RCX],DX
            cmp RSI,RAX
            jne .L_41f800
.L_41f854:

            add RBP,1
            cmp RBP,4096
            jne .L_41f770

            test R10D,R10D
            mov R12,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+24]
            je .L_41fba2

            pxor XMM1,XMM1
            mov R8D,1
            mov QWORD PTR [RSP+56],R12
            movsd XMM3,QWORD PTR [RIP+.L_4208f0]
            mov R15,R8
            movsd XMM2,QWORD PTR [RIP+.L_4208f8]
            mov QWORD PTR [RSP+64],R14
            mov QWORD PTR [RSP+72],RBP
            nop
            nop
            nop
            nop
.L_41f8a8:

            mov R12,QWORD PTR [R13+R15*8-8]
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_420950]
            movsd XMM7,QWORD PTR [RIP+.L_420920]
            mov EDX,DWORD PTR [R12+40]
            cvtsi2sd XMM0,RDX
            mov RAX,RDX
            mulsd XMM0,QWORD PTR [RIP+.L_420948]
            addsd XMM0,XMM2
            andpd XMM4,XMM0
            movapd XMM5,XMM0
            ucomisd XMM7,XMM4
            jbe .L_41f906

            cvttsd2si RDX,XMM0
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_420950]
            andnpd XMM4,XMM5
            cvtsi2sd XMM0,RDX
            orpd XMM0,XMM4
.L_41f906:

            cvttsd2si R14D,XMM0
            lea ESI,DWORD PTR [RAX-1]
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            sub ESI,R14D
            mov EBP,ESI
            call .L_4285f0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            je .L_41fb00

            pxor XMM4,XMM4
            movapd XMM0,XMM3
.L_41f94f:

            mov RCX,QWORD PTR [R12+48]
            movsxd RAX,R14D
            test R14D,R14D
            pxor XMM5,XMM5
            pxor XMM7,XMM7
            movzx EAX,WORD PTR [RCX+RAX*2]
            cvtsi2sd XMM7,R14D
            cvtsi2sd XMM5,EAX
            movapd XMM6,XMM5
            subsd XMM6,XMM0
            movapd XMM0,XMM7
            divsd XMM6,XMM7
            mulsd XMM0,XMM6
            subsd XMM5,XMM0
            jle .L_41f9ef

            lea EDI,DWORD PTR [R14-1]
            xor EAX,EAX
            mov R9D,4294967295
            add RDI,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f9a0:

            pxor XMM0,XMM0
            xor EDX,EDX
            cvtsi2sd XMM0,EAX
            mulsd XMM0,XMM6
            addsd XMM0,XMM5
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_41f9e2

            ucomisd XMM0,XMM3
            mov EDX,R9D
            jae .L_41f9e2

            subsd XMM0,QWORD PTR [RIP+.L_420900]
            addsd XMM0,QWORD PTR [RIP+.L_420908]
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_41f9e2:

            mov WORD PTR [RCX+RAX*2],DX
            add RAX,1
            cmp RDI,RAX
            jne .L_41f9a0
.L_41f9ef:

            movsxd RDI,EBP
            pxor XMM5,XMM5
            movzx EAX,WORD PTR [RCX+RDI*2]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EBP
            cvtsi2sd XMM5,EAX
            mov EAX,DWORD PTR [R12+40]
            cmp EBP,EAX
            subsd XMM4,XMM5
            divsd XMM4,XMM7
            mulsd XMM0,XMM4
            subsd XMM5,XMM0
            jge .L_41fa91

            sub EAX,1
            lea RDX,QWORD PTR [RDI+1]
            mov R8D,4294967295
            sub EAX,EBP
            movsd XMM7,QWORD PTR [RIP+.L_420900]
            lea RSI,QWORD PTR [RAX+RDX*1]
            movsd XMM6,QWORD PTR [RIP+.L_420908]
            jmp .L_41fa4c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fa48:

            add RDX,1
.L_41fa4c:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtsi2sd XMM0,EDI
            mulsd XMM0,XMM4
            addsd XMM0,XMM5
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_41fa85

            ucomisd XMM0,XMM3
            mov EAX,R8D
            jae .L_41fa85

            subsd XMM0,XMM7
            addsd XMM0,XMM6
            movq RAX,XMM0
            sar EAX,16
            add AX,32767
.L_41fa85:

            cmp RSI,RDX
            mov WORD PTR [RCX+RDI*2],AX
            mov RDI,RDX
            jne .L_41fa48
.L_41fa91:

            mov EAX,DWORD PTR [RBX+8]
            mov EDX,R15D
            add R15,1
            cmp EDX,EAX
            jb .L_41f8a8

            mov R12,QWORD PTR [RSP+56]
            mov R14,QWORD PTR [RSP+64]
            xor R15D,R15D
            mov RBP,QWORD PTR [RSP+72]
.L_41fab5:

            cmp EAX,R15D
            jbe .L_41fb52

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_427ce0

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_428520

            mov R9D,EAX
            mov RAX,QWORD PTR [R13+R15*8]
            mov EDI,DWORD PTR [RAX+40]
            lea RSI,QWORD PTR [RAX+48]
            call .L_41f470

            test EAX,EAX
            jne .L_41f6c6

            add R15,1
            test R9D,R9D
            mov EAX,DWORD PTR [RBX+8]
            jne .L_41fab5

            jmp .L_41f6c6
          .byte 0x90
.L_41fb00:

            movapd XMM4,XMM3
            pxor XMM0,XMM0
            jmp .L_41f94f
.L_41fb0d:

            mov RDI,R15
            call .L_430e40

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_41f67e

            mov R10,QWORD PTR [RAX+8]
            lea EAX,DWORD PTR [RDX-1]
            lea R9,QWORD PTR [R10+RAX*8+8]
            jmp .L_41fb3a
.L_41fb2d:

            add R10,8
            cmp R9,R10
            je .L_41f67e
.L_41fb3a:

            mov RAX,QWORD PTR [R10]
            mov EDI,DWORD PTR [RAX+40]
            lea RSI,QWORD PTR [RAX+48]
            call .L_41f470

            test EAX,EAX
            je .L_41fb2d

            jmp .L_41f6c6
.L_41fb52:

            test EAX,EAX
            je .L_41fba2

            mov RAX,R13
            mov R15D,1
            mov R13,RBP
            mov RBP,RAX
            jmp .L_41fb73
.L_41fb67:

            mov EAX,R15D
            add R15,1
            cmp EAX,DWORD PTR [RBX+8]
            jae .L_41fb99
.L_41fb73:

            mov RSI,QWORD PTR [RBP+R15*8-8]
            mov EDI,4096
            call .L_427930

            mov RSI,QWORD PTR [RSP+32]
            test RAX,RAX
            mov QWORD PTR [RSI+R15*8-8],RAX
            jne .L_41fb67

            mov R13,RBP
            jmp .L_41f6c6
.L_41fb99:

            mov RAX,RBP
            mov RBP,R13
            mov R13,RAX
.L_41fba2:

            mov RDI,RBX
            call .L_431160

            test RAX,RAX
            mov R15,RAX
            je .L_41f6c6

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov RDX,QWORD PTR [RSP+32]
            call .L_430680

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_431280

            test EAX,EAX
            jne .L_41fbf0
.L_41fbd8:

            cmp DWORD PTR [RBX+8],0
            jne .L_41fc3f

            mov RDI,R15
            call .L_431080

            jmp .L_41f53a
.L_41fbeb:

            call __stack_chk_fail@PLT
.L_41fbf0:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            call .L_430f40

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_41fbd8

            mov ESI,DWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+56]
            mov RDX,R13
            call .L_430680

            mov RDI,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov RDX,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_431280

            test EAX,EAX
            jne .L_41fc4d
.L_41fc30:

            cmp DWORD PTR [RBX+8],0
            je .L_41f71e

            jmp .L_41f6dd
.L_41fc3f:

            mov QWORD PTR [RSP+8],0
            jmp .L_41f6dd
.L_41fc4d:

            mov ECX,DWORD PTR [RBX+12]
            mov EDX,DWORD PTR [RBX+8]
            xor R8D,R8D
            mov RDI,QWORD PTR [RBX+56]
            mov ESI,DWORD PTR [RSP+48]
            call .L_430b00

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RAX
            mov ESI,1
            mov QWORD PTR [RSP+16],RAX
            call .L_431280

            test EAX,EAX
            je .L_41fc30

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_41e130]
            xor ECX,ECX
            mov RDX,R15
            call .L_42fba0

            test EAX,EAX
            je .L_41fc30

            xor EAX,EAX
            mov QWORD PTR [RSP+48],RBP
            mov RBP,RAX
.L_41fca2:

            cmp DWORD PTR [RBX+8],EBP
            jbe .L_41fccf

            mov RDI,QWORD PTR [R13+RBP*8]
            test RDI,RDI
            je .L_41fcb6

            call .L_427870
.L_41fcb6:

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+RBP*8]
            test RDI,RDI
            je .L_41fcc9

            call .L_427870
.L_41fcc9:

            add RBP,1
            jmp .L_41fca2
.L_41fccf:

            mov RDI,R15
            mov RBP,QWORD PTR [RSP+48]
            call .L_431080

            mov RDI,QWORD PTR [RSP+24]
            call .L_42f990

            mov EDI,DWORD PTR [R14]
            mov R15,RAX
            mov RAX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RAX+48]
            call .L_40b3a0

            test EAX,EAX
            je .L_41fe41

            mov RAX,QWORD PTR [RSP+8]
            mov ESI,4624
            mov R13,QWORD PTR [R13+8]
            mov RAX,QWORD PTR [RAX+56]
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_425fe0

            test RAX,RAX
            mov R14,RAX
            je .L_41f53a

            xor R8D,R8D
            mov R11D,65535
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+32],R12
            mov QWORD PTR [RSP+48],RBP
            jmp .L_41fe25
.L_41fd4a:

            mov RDI,QWORD PTR [R15]
            movzx R12D,BX
            mov QWORD PTR [RSP+64],R8
            mov ESI,R12D
            mov DWORD PTR [RSP+56],R11D
            call .L_4286b0

            mov RDI,QWORD PTR [R15+8]
            mov ESI,R12D
            mov EBX,EAX
            call .L_4286b0

            mov RDI,QWORD PTR [R15+16]
            mov ESI,R12D
            mov EBP,EAX
            call .L_4286b0

            mov R11D,DWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+64]
            movzx EDI,AX
.L_41fd8c:

            movzx ESI,BX
            imul ESI,DWORD PTR [R13+52]
            imul EDI,DWORD PTR [R13+60]
            lea EAX,DWORD PTR [RSI+32767]
            cdq 
            idiv R11D
            lea EBX,DWORD PTR [RAX+RSI*1]
            movzx ESI,BP
            imul ESI,DWORD PTR [R13+56]
            lea EAX,DWORD PTR [RSI+32767]
            cdq 
            idiv R11D
            add ESI,EAX
            lea EAX,DWORD PTR [RDI+32767]
            cdq 
            idiv R11D
            mov EDX,EBX
            sar EDX,16
            imul EDX,DWORD PTR [R13+92]
            add EAX,EDI
            mov DWORD PTR [R14+R8*4+1552],EDX
            mov EDX,ESI
            sar EDX,16
            imul EDX,DWORD PTR [R13+88]
            mov DWORD PTR [R14+R8*4+2576],EDX
            mov EDX,EAX
            sar EDX,16
            imul EDX,DWORD PTR [R13+84]
            mov DWORD PTR [R14+R8*4+3600],EDX
            mov WORD PTR [R14+R8*2+16],BX
            mov WORD PTR [R14+R8*2+528],SI
            mov WORD PTR [R14+R8*2+1040],AX
            add R8,1
            cmp R8,256
            je .L_41fed6
.L_41fe25:

            mov EBX,R8D
            shl EBX,8
            or EBX,R8D
            test R15,R15
            jne .L_41fd4a

            movzx EDI,BX
            mov EBP,EBX
            jmp .L_41fd8c
.L_41fe41:

            mov R14,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [R13+8]
            xor R9D,R9D
            mov R8D,3
            mov RCX,R15
            mov EDX,3
            mov RDI,QWORD PTR [R14+56]
            call .L_41e490

            test RAX,RAX
            je .L_41f53a

            lea R8,QWORD PTR [RIP+.L_41e2b0]
            lea RCX,QWORD PTR [RIP+.L_41e3d0]
            lea RSI,QWORD PTR [RIP+.L_41daa0]
            mov RDX,RAX
            mov RDI,R14
            call .L_4314e0
.L_41fe8d:

            cmp DWORD PTR [RSP+4],3
            mov EAX,DWORD PTR [RBP]
            jne .L_41fe9d

            or EAX,4
            mov DWORD PTR [RBP],EAX
.L_41fe9d:

            test AL,4
            jne .L_41febb

            mov EDX,DWORD PTR [RSP+44]
            mov ESI,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+8]
            call .L_401944

            test EAX,EAX
            je .L_41f53a
.L_41febb:

            mov RDI,RBX
            call .L_431080

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12],RAX
            mov EAX,1
            jmp .L_41f53c
.L_41fed6:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RIP+.L_41e320]
            lea RCX,QWORD PTR [RIP+.L_41e410]
            lea RSI,QWORD PTR [RIP+.L_41db70]
            mov QWORD PTR [R14+8],R13
            mov RDX,R14
            mov RBX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov QWORD PTR [R14],RAX
            mov RBP,QWORD PTR [RSP+48]
            call .L_4314e0

            jmp .L_41fe8d
.L_41ff18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff20:

            push R14
            push R13
            mov R14,R8
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,DWORD PTR [RDX]
            mov R13D,ESI
            mov RBX,RDX
            mov RBP,RCX
            call .L_40b390

            test EAX,EAX
            je .L_41ff50
.L_41ff42:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ff50:

            mov EDI,DWORD PTR [RBP]
            call .L_40b390

            test EAX,EAX
            jne .L_41ff42

            mov R8,R14
            mov RCX,RBP
            mov RDX,RBX
            mov ESI,R13D
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_41f500
.L_41ff78:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff80:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,168
.L_41ff94:

            mov EDI,DWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov EAX,EDI
            shr EAX,3
            and EAX,15
            cmp EAX,3
            je .L_41ffe8
.L_41ffb6:

            xor EAX,EAX
.L_41ffb8:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4204a1

            add RSP,168
.L_41ffd6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ffe8:

            mov EAX,DWORD PTR [RCX]
            mov RBP,RCX
            shr EAX,3
            and EAX,15
            cmp EAX,3
            jne .L_41ffb6

            mov R14D,ESI
            mov RBX,RDX
            mov R13,R8
            call .L_40b3a0

            test EAX,EAX
            je .L_41ffb6

            lea R10,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [R12]
            mov R9D,1668707188
            mov R8D,1835103334
            mov ECX,1835103334
            mov EDX,1668707188
            push R10
.L_42002b:

            mov ESI,4
            mov RDI,R15
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],R10
            push RAX
            lea R11,QWORD PTR [RSP+72]
            push R11
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+40],RAX
            push RAX
            xor EAX,EAX
            call .L_42f820

            add RSP,32
.L_420060:

            test EAX,EAX
            mov R11,QWORD PTR [RSP]
            mov R10,QWORD PTR [RSP+8]
            je .L_4203b0

            mov RDI,QWORD PTR [RSP+56]
            call .L_430e40

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RAX
            call .L_430e40

            mov RDX,QWORD PTR [RSP]
            cmp QWORD PTR [RDX+8],0
            jne .L_41ffb6

            lea RCX,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RAX]
            mov QWORD PTR [RSP],RAX
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call .L_4320e0

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP],RAX
            call .L_431ff0

            test EAX,EAX
            setne AL
            xor EDX,EDX
            cmp QWORD PTR [RSP],0
            sete DL
            and EDX,EAX
            mov DWORD PTR [RSP+16],EDX
.L_4200df:

            mov EDX,DWORD PTR [R15+12]
            mov ESI,DWORD PTR [R15+8]
            mov RDI,QWORD PTR [R15+56]
            call .L_430f40

            test RAX,RAX
            mov QWORD PTR [RSP+72],RAX
            je .L_41ffb6

            mov RDI,QWORD PTR [RSP+40]
            call .L_430e60

            mov RDI,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov RDX,RAX
            call .L_431280

            test EAX,EAX
            je .L_420457

            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_420466

            mov RAX,QWORD PTR [RSP+72]
            mov R8,QWORD PTR [RSP]
            mov EDX,3
            mov RCX,QWORD PTR [RSP+8]
            mov ESI,3
            mov RDI,QWORD PTR [RAX+56]
            call .L_42f9a0

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            je .L_420457

            mov RDI,QWORD PTR [RSP+48]
            call .L_430e60

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            je .L_420457

            mov RDI,QWORD PTR [RSP+40]
            call .L_430e40

            mov RDI,QWORD PTR [RSP+48]
            mov RBX,RAX
            call .L_430e40

            or DWORD PTR [R13],64
            mov RAX,QWORD PTR [RAX+8]
            mov R13,QWORD PTR [RBX+8]
            mov EDI,DWORD PTR [RBP]
            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],RAX
            call .L_40b3a0

            mov RDI,QWORD PTR [RBX+56]
            mov ESI,101440
            mov DWORD PTR [RSP+28],EAX
            call .L_425fb0

            test RAX,RAX
            mov R14,RAX
            je .L_42038c

            mov RDX,QWORD PTR [RBX+56]
            mov RSI,QWORD PTR [R13]
            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RAX],RDX
            call .L_41e5f0

            mov RSI,QWORD PTR [R13+8]
            lea RDI,QWORD PTR [R14+1032]
            call .L_41e5f0

            mov RSI,QWORD PTR [R13+16]
            lea RDI,QWORD PTR [R14+2056]
            call .L_41e5f0

            mov RAX,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [RSP+28]
            lea RDI,QWORD PTR [R14+3128]
            mov RSI,QWORD PTR [RAX]
            mov EDX,R13D
            call .L_41e6e0

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+35898]
            mov EDX,R13D
            mov RSI,QWORD PTR [RAX+8]
            call .L_41e6e0

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+68668]
            mov EDX,R13D
            mov RSI,QWORD PTR [RAX+16]
            call .L_41e6e0

            mov RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [R14+36]
            mov RSI,R14
            movsd XMM2,QWORD PTR [RIP+.L_420918]
            movsd XMM3,QWORD PTR [RIP+.L_4208f8]
            movsd XMM5,QWORD PTR [RIP+.L_420920]
            movsd XMM4,QWORD PTR [RIP+.L_420960]
            movsd XMM7,QWORD PTR [RIP+.L_420928]
.L_420292:

            xor EDX,EDX
.L_420294:

            movsd XMM0,QWORD PTR [RDI+RDX*8]
            mulsd XMM0,XMM2
            addsd XMM0,XMM3
            movapd XMM1,XMM0
            movapd XMM6,XMM0
            andpd XMM1,XMM4
            ucomisd XMM5,XMM1
            jbe .L_4202e9

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            cvtsi2sd XMM1,RAX
            movapd XMM8,XMM1
            cmpnlesd XMM8,XMM0
            movapd XMM0,XMM8
            andpd XMM0,XMM7
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movapd XMM1,XMM4
            andnpd XMM1,XMM6
            orpd XMM0,XMM1
.L_4202e9:

            cvttsd2si EAX,XMM0
            mov DWORD PTR [RSI+RDX*4+3080],EAX
            add RDX,1
            cmp RDX,3
            jne .L_420294

            add RSI,12
            add RDI,24
            cmp R8,RSI
            jne .L_420292

            xor R13D,R13D
.L_42030e:

            cmp QWORD PTR [RSP],0
            je .L_4204a6

            mov RAX,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,QWORD PTR [RAX+R13*2]
            addsd XMM0,XMM3
            call floor@PLT

            cvttsd2si EAX,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            mov DWORD PTR [R14+R13*1+3116],EAX
.L_420354:

            add R13,4
            cmp R13,12
            jne .L_42030e

            cmp DWORD PTR [RSP+28],0
            je .L_42036c

            or DWORD PTR [RBP],2097152
.L_42036c:

            lea R8,QWORD PTR [RIP+.L_41e330]
            lea RCX,QWORD PTR [RIP+.L_41e420]
            lea RSI,QWORD PTR [RIP+.L_41e010]
            mov RDX,R14
            mov RDI,RBX
            call .L_4314e0
.L_42038c:

            mov RDI,R15
            call .L_431080

            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [R12],RAX
            mov EAX,1
            jmp .L_41ffb8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4203b0:

            push R10
.L_4203b2:

            push R11
            mov ECX,1835103334
            mov R9,QWORD PTR [RSP+32]
            mov EDX,1668707188
            xor EAX,EAX
            mov R8D,1668707188
            mov ESI,3
            mov RDI,R15
            call .L_42f820

            test EAX,EAX
            pop RDX
            pop RCX
            je .L_41ffb6

            mov RDI,QWORD PTR [RSP+56]
            call .L_430e40

            mov RDX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RDI
            movdqu XMM0,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+16]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+32]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RDX+48]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov RDX,QWORD PTR [RDX+64]
            mov QWORD PTR [RSP+144],RDX
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP],RAX
            call .L_431ff0

            cmp QWORD PTR [RSP],0
            sete DL
            test EAX,EAX
            setne AL
            movzx EAX,AL
            and EAX,EDX
            mov DWORD PTR [RSP+16],EAX
            jmp .L_4200df
.L_420457:

            mov RDI,QWORD PTR [RSP+72]
            call .L_431080

            jmp .L_41ffb6
.L_420466:

            mov RDI,QWORD PTR [RSP+48]
            call .L_430e60

            mov RDI,QWORD PTR [RSP+72]
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            je .L_420457

            lea RDI,QWORD PTR [RSP+72]
            mov R8,R13
            mov RCX,RBP
            mov RDX,RBX
            mov ESI,R14D
            call .L_41e8f0

            jmp .L_42038c
.L_4204a1:

            call __stack_chk_fail@PLT
.L_4204a6:

            mov DWORD PTR [R14+R13*1+3116],0
            jmp .L_420354
.L_4204b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4204c0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_4204cb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_420590

            test RDI,RDI
            mov RAX,QWORD PTR [RSI+112]
            mov QWORD PTR [RSP],0
            je .L_4205d0

            test RAX,RAX
            je .L_4205b1

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_42055b

            xor EBP,EBP
            jmp .L_42051c
          .byte 0x66
          .byte 0x90
.L_420510:

            mov RBX,QWORD PTR [RBX+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_42055b
.L_42051c:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,16
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_420572

            test RBP,RBP
            mov QWORD PTR [RAX+8],0
            je .L_420544

            mov QWORD PTR [RBP+8],RAX
.L_420544:

            cmp QWORD PTR [RSP],0
            jne .L_420510

            mov RBX,QWORD PTR [RBX+8]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_42051c
.L_42055b:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+112],RAX
.L_420572:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4205ac

            add RSP,16
.L_420586:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420590:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d20]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+112],RAX
            jmp .L_420572
.L_4205ac:

            call __stack_chk_fail@PLT
.L_4205b1:

            lea RCX,QWORD PTR [RIP+.L_4208d0]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_420819]
            mov EDX,1814
            call __assert_fail@PLT
.L_4205d0:

            lea RCX,QWORD PTR [RIP+.L_4208d0]
            lea RSI,QWORD PTR [RIP+.L_4207be]
            lea RDI,QWORD PTR [RIP+.L_420804]
            mov EDX,1813
            call __assert_fail@PLT
.L_4205ef:

            nop
.L_4205f0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_4205f7:

            mov RBX,RSI
            mov ESI,12
            call .L_406d40

            test RBX,RBX
            mov R12,RAX
            je .L_420650

            cmp QWORD PTR [RBX+24],0
            je .L_420648

            mov ESI,16
            mov RDI,RBP
            call .L_406970

            test RAX,RAX
            je .L_420648

            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [R12]
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [R12],RAX
            mov EAX,1
            pop RBX
.L_42063e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420648:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_420650:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_420661:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420670:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,R9
            mov RBX,RSI
            mov ESI,12
            mov R12D,EDX
            sub RSP,24
.L_420692:

            call .L_406d40

            test BYTE PTR [RBP],2
            mov RDI,QWORD PTR [RBX]
            jne .L_420740

            cmp QWORD PTR [RDI],0
            je .L_420710

            mov R15,RAX
            call .L_41f190

            mov RDI,QWORD PTR [RBX]
            mov DWORD PTR [RSP+4],EAX
            cmp QWORD PTR [RDI],0
            je .L_420710

            test DWORD PTR [RBP],256
            jne .L_420770

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_4206ed

            jmp .L_420780
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4206e0:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_420780
.L_4206ed:

            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            call QWORD PTR [R15]

            test EAX,EAX
            je .L_4206e0
.L_420703:

            mov DWORD PTR [RSP+4],1
            jmp .L_42072c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420710:

            lea RSI,QWORD PTR [RIP+.L_41dfe0]
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,RDI
            call .L_4314e0

            mov DWORD PTR [RSP+4],1
.L_42072c:

            mov EAX,DWORD PTR [RSP+4]
            add RSP,24
.L_420734:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_420740:

            call .L_41f190

            add RSP,24
            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_41ed00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420770:

            mov DWORD PTR [RSP+4],0
            jmp .L_42072c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420780:

            lea R9,QWORD PTR [RIP+.L_640f60]
            jmp .L_42079e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420790:

            mov R9,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [R9+8]
            test R9,R9
            je .L_42072c
.L_42079e:

            mov R8,RBP
            mov RCX,R14
            mov RDX,R13
            mov ESI,R12D
            mov RDI,RBX
            mov QWORD PTR [RSP+8],R9
            call QWORD PTR [R9]

            test EAX,EAX
            je .L_420790

            jmp .L_420703
.L_4207be:
          .string "cmsopt.c"
.L_4207c7:
          .string "(Lut -> InputChannels < 16)"
.L_4207e3:
          .string "(Lut -> OutputChannels < 16)"
.L_420800:
          .string "(0)"
.L_420804:
          .string "(ctx != ((void *)0))"
.L_420819:
          .string "(head != ((void *)0))"
          .byte 0x90
.L_420830:
          .string "(internal) Attempt to PatchLUT on non-lut stage"
.L_420860:
          .string "(internal) %d Channels are not supported on PatchLUT"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4208a0:
          .string "OptimizeByResampling"
          .zero 3
.L_4208b8:
          .string "XFormSampler16"
          .zero 9
.L_4208d0:
          .string "DupPluginOptimizationList"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4208f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_4208f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_420900:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_420908:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_420910:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_420918:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x40
.L_420920:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_420928:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_420930:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3f
.L_420938:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xaf
          .byte 0x40
.L_420940:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb5
          .byte 0xf8
          .byte 0xe4
          .byte 0x3e
.L_420948:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x94
          .byte 0x3f
.L_420950:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_420958:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
.L_42095c:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_420960:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420970:

            mov EAX,EDI
            lea RDX,QWORD PTR [RIP+.L_4210e0]
            and EDI,1023
            shr AX,10
            and EAX,63
            movzx EDX,WORD PTR [RDX+RAX*2]
            add EDI,EDX
            lea RDX,QWORD PTR [RIP+.L_420fe0]
            movsxd RDI,EDI
            mov EAX,DWORD PTR [RDX+RAX*4]
            lea RDX,QWORD PTR [RIP+.L_421160]
            add EAX,DWORD PTR [RDX+RDI*4]
            mov DWORD PTR [RSP-4],EAX
            movss XMM0,DWORD PTR [RSP-4]
            ret 
.L_4209ae:

            nop
            nop
.L_4209b0:

            movd EDX,XMM0
            lea RCX,QWORD PTR [RIP+.L_4209e0]
            movd EAX,XMM0
            shr EDX,23
            and EAX,8388607
            movzx ECX,BYTE PTR [RCX+RDX*1]
            shr EAX,CL
            lea RCX,QWORD PTR [RIP+.L_420be0]
            add AX,WORD PTR [RCX+RDX*2]
            ret 
.L_4209d9:
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4209e0:
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x16
          .byte 0x15
          .byte 0x14
          .byte 0x13
          .byte 0x12
          .byte 0x11
          .byte 0x10
          .byte 0xf
          .byte 0xe
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x17
          .byte 0x16
          .byte 0x15
          .byte 0x14
          .byte 0x13
          .byte 0x12
          .byte 0x11
          .byte 0x10
          .byte 0xf
          .byte 0xe
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0x18
          .byte 0xd
.L_420be0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x80
          .byte 0x2
          .byte 0x80
          .byte 0x4
          .byte 0x80
          .byte 0x8
          .byte 0x80
          .byte 0x10
          .byte 0x80
          .byte 0x20
          .byte 0x80
          .byte 0x40
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0xfc
.L_420fe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc7
.L_4210e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x4
.L_421160:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x80
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x81
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x82
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x85
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x87
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x88
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x89
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x8f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x90
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x91
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x92
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x93
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x94
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x95
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x96
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x97
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x98
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x99
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9a
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9b
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9c
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9d
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9e
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0x9f
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xa9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xaa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xab
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xac
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xad
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xae
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xaf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xb9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xba
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xbf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xc9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xca
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xce
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xcf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xd9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xda
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xde
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xdf
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xe9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xea
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xeb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xec
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xed
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xee
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xef
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf1
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf2
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf3
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf4
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf5
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf6
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf7
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xf9
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfa
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfb
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfc
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfd
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xfe
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x37
          .byte 0x0
          .byte 0x80
          .byte 0xff
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x8
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x9
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xa
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xb
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xc
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xd
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xe
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0xf
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x10
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x11
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x12
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x13
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x14
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x15
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x16
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x17
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x18
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x19
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x20
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x21
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x23
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x24
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x25
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x26
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x27
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x28
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x29
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x2f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x30
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x31
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x32
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x33
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x34
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x35
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x36
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x37
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x38
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x39
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x40
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x41
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x42
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x43
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x44
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x45
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x46
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x47
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x48
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x49
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x4f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x50
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x51
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x52
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x53
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x54
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x55
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x56
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x57
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x58
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x59
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x5f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x60
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x61
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x62
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x63
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x64
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x65
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x66
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x67
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x68
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x69
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x71
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x72
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x73
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x74
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x75
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x76
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x77
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x78
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x79
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7a
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7b
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7c
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7d
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7e
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x20
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x40
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x60
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0x80
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xa0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xc0
          .byte 0x7f
          .byte 0x38
          .byte 0x0
          .byte 0xe0
          .byte 0x7f
          .byte 0x38
.L_423160:

            movzx EAX,BYTE PTR [RSI]
            mov EDX,EAX
            shl EDX,8
            or EAX,EDX
            mov WORD PTR [RDI],AX
            ret 
.L_42316e:

            nop
            nop
.L_423170:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_423cac]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_423188:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423190:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,QWORD PTR [RIP+.L_423cb8]
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_4231a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4231b0:

            movzx EAX,WORD PTR [RSI]
            imul EAX,EAX,65281
            add EAX,8388608
            shr EAX,24
            mov BYTE PTR [RDI],AL
            ret 
.L_4231c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4231d0:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_423cb0]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_4231e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4231f0:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_423cb0]
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_42320c:

            nop
            nop
            nop
            nop
.L_423210:

            movss XMM0,DWORD PTR [RIP+.L_423cac]
            xor EAX,EAX
            mulss XMM0,DWORD PTR [RSI]
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM1,XMM0
            jae .L_42325d

            ucomisd XMM0,QWORD PTR [RIP+.L_423cb8]
            mov EAX,4294967295
            jae .L_42325d

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_42325d:

            mov BYTE PTR [RDI],AL
            ret 
.L_423260:

            movss XMM0,DWORD PTR [RIP+.L_423cb0]
            xor EAX,EAX
            mulss XMM0,DWORD PTR [RSI]
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM1,XMM0
            jae .L_4232ae

            ucomisd XMM0,QWORD PTR [RIP+.L_423cd8]
            mov EAX,4294967295
            jae .L_4232ae

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_4232ae:

            mov WORD PTR [RDI],AX
            ret 
.L_4232b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4232c0:

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI]
            movsd QWORD PTR [RDI],XMM0
            ret 
.L_4232cd:

            nop
            nop
            nop
.L_4232d0:

            movsd XMM1,QWORD PTR [RIP+.L_423cb8]
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM2,XMM0
            jae .L_423319

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_423319

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_423319:

            mov BYTE PTR [RDI],AL
            ret 
.L_42331c:

            nop
            nop
            nop
            nop
.L_423320:

            movsd XMM1,QWORD PTR [RIP+.L_423cd8]
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI]
            pxor XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM2,XMM0
            jae .L_42336a

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_42336a

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_42336a:

            mov WORD PTR [RDI],AX
            ret 
.L_42336e:

            nop
            nop
.L_423370:

            pxor XMM0,XMM0
            cvtsd2ss XMM0,QWORD PTR [RSI]
            movss DWORD PTR [RDI],XMM0
            ret 
.L_42337d:

            nop
            nop
            nop
.L_423380:

            mov EAX,EDI
            and EAX,7
            jne .L_4233a0

            and EDI,4194304
            cmp EDI,1
            sbb EAX,EAX
            or EAX,4
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4233a0:

            cmp EAX,2
            jne .L_4233b8

            and EDI,4194304
            mov EDX,1
            cmove EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4233b8:

            cmp EAX,4
            jne .L_4233cc

            and EDI,4194304
            cmp EDI,1
            sbb EAX,EAX
            or EAX,3
            ret 
.L_4233cc:

            sub EAX,1
            jne .L_4233da

            shl EDI,9
            mov EAX,EDI
            sar EAX,31
            ret 
.L_4233da:

            or EAX,4294967295
            ret 
.L_4233de:

            nop
            nop
.L_4233e0:

            movzx EAX,BYTE PTR [RSI]
            mov BYTE PTR [RDI],AL
            ret 
.L_4233e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4233f0:

            movzx EAX,WORD PTR [RSI]
            mov WORD PTR [RDI],AX
            ret 
.L_4233f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423400:

            mov EAX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],EAX
            ret 
.L_423405:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423410:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDI],RAX
            ret 
.L_423417:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423420:

            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsd2ss XMM0,QWORD PTR [RSI]
            call .L_4209b0

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_423436:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423440:

            push RBX
            movss XMM0,DWORD PTR [RSI]
            mov RBX,RDI
            call .L_4209b0

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_423452:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423460:

            movzx EAX,WORD PTR [RSI]
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_423cb0]
            call .L_4209b0

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_423481:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423490:

            movzx EAX,BYTE PTR [RSI]
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            cvtsi2ss XMM0,EAX
            divss XMM0,DWORD PTR [RIP+.L_423cac]
            call .L_4209b0

            mov WORD PTR [RBX],AX
            pop RBX
            ret 
.L_4234b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4234c0:

            push RBX
            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_420970

            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RBX],XMM0
            pop RBX
            ret 
.L_4234d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4234e0:

            push RBX
            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_420970

            movss DWORD PTR [RBX],XMM0
            pop RBX
            ret 
.L_4234f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423500:

            push RBX

            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_420970

            mulss XMM0,DWORD PTR [RIP+.L_423cb0]
            xor EAX,EAX
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM1,XMM0
            jae .L_423556

            ucomisd XMM0,QWORD PTR [RIP+.L_423cd8]
            mov EAX,4294967295
            jae .L_423556

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_423556:

            mov WORD PTR [RBX],AX
            pop RBX

            ret 
.L_42355b:

            nop
            nop
            nop
            nop
            nop
.L_423560:

            push RBX

            mov RBX,RDI
            movzx EDI,WORD PTR [RSI]
            call .L_420970

            mulss XMM0,DWORD PTR [RIP+.L_423cac]
            xor EAX,EAX
            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_423cc0]
            ucomisd XMM1,XMM0
            jae .L_4235b5

            ucomisd XMM0,QWORD PTR [RIP+.L_423cb8]
            mov EAX,4294967295
            jae .L_4235b5

            subsd XMM0,QWORD PTR [RIP+.L_423cc8]
            addsd XMM0,QWORD PTR [RIP+.L_423cd0]
            movd EAX,XMM0
            sar EAX,16
            sub EAX,1
.L_4235b5:

            mov BYTE PTR [RBX],AL
            pop RBX

            ret 
.L_4235b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4235c0:

            push R14
            push R13
            mov R9D,EDI
            push R12
            push RBP
            shr R9D,3
            push RBX
            mov R8D,EDI
            and R9D,15
            and R8D,7
            sub RSP,80
.L_4235de:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,EDI
            shr EAX,7
            and EAX,7
            test EDI,4096
            lea R11D,DWORD PTR [RAX+R9*1]
            jne .L_423640

            lea R10D,DWORD PTR [R11-1]
            test R8D,R8D
            mov ESI,8
            cmove R8D,ESI
            cmp R10D,14
            jbe .L_423768
.L_42361c:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42386b

            add RSP,80
.L_423634:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423640:

            test R8D,R8D
            mov R10D,8
            cmove R8D,R10D
            lea R10D,DWORD PTR [R11-1]
            cmp R10D,14
            ja .L_42361c

            pxor XMM0,XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_42368c

            lea EBX,DWORD PTR [RAX-1]
            lea RBX,QWORD PTR [RCX+RBX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_423680:

            mov DWORD PTR [RCX],R8D
            add RCX,4
            cmp RBX,RCX
            jne .L_423680
.L_42368c:

            mov EBP,R10D
            mov R14D,EDI
            mov ECX,1
            lea R13,QWORD PTR [RBP+2]
            and R14D,1024
            mov RBX,RSP
            nop
            nop
            nop
.L_4236a8:

            lea R12D,DWORD PTR [RCX-1]
            mov R8D,R11D
            sub R8D,ECX
            test R14D,R14D
            cmove R8D,R12D
            mov DWORD PTR [RBX+RCX*4-4],R8D
            add RCX,1
            cmp R13,RCX
            jne .L_4236a8

            and EDI,16384
            mov R8D,DWORD PTR [RSP]
            je .L_42370e

            test R10D,R10D
            je .L_423703

            lea RCX,QWORD PTR [RBX+4]
            sub R11D,2
            mov RDI,RBX
            lea R12,QWORD PTR [RCX+R11*4]
            jmp .L_4236f4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4236f0:

            add RCX,4
.L_4236f4:

            mov R11D,DWORD PTR [RDI+4]
            cmp RCX,R12
            mov DWORD PTR [RDI],R11D
            mov RDI,RCX
            jne .L_4236f0
.L_423703:

            movsxd R10,R10D
            mov DWORD PTR [RSP+R10*4],R8D
            mov R8D,DWORD PTR [RSP]
.L_42370e:

            lea RCX,QWORD PTR [RBX+4]
            mov RDI,RBX
            lea R10,QWORD PTR [RCX+RBP*4]
            jmp .L_423727
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423720:

            mov R8D,DWORD PTR [RCX]
            add RCX,4
.L_423727:

            imul R8D,ESI
            cmp R10,RCX
            mov DWORD PTR [RDI],R8D
            mov RDI,RCX
            jne .L_423720

            test EAX,EAX
            je .L_42361c

            movsxd R9,R9D
            xor ECX,ECX
            lea RDI,QWORD PTR [RBX+R9*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423750:

            mov ESI,DWORD PTR [RDI+RCX*4]
            mov DWORD PTR [RDX+RCX*4],ESI
            add RCX,1
            cmp EAX,ECX
            jg .L_423750

            jmp .L_42361c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423768:

            pxor XMM0,XMM0
            test EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_4237a3

            mov EBX,R11D
            lea ESI,DWORD PTR [RAX-1]
            imul EBX,R8D
            lea RSI,QWORD PTR [RCX+RSI*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_423798:

            mov DWORD PTR [RCX],EBX
            add RCX,4
            cmp RCX,RSI
            jne .L_423798
.L_4237a3:

            mov EBP,R10D
            mov R13D,EDI
            xor ECX,ECX
            lea R12,QWORD PTR [RBP+1]
            and R13D,1024
            mov RBX,RSP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4237c0:

            mov ESI,R10D
            sub ESI,ECX
            test R13D,R13D
            cmove ESI,ECX
            mov DWORD PTR [RBX+RCX*4],ESI
            add RCX,1
            cmp RCX,R12
            jne .L_4237c0

            and EDI,16384
            je .L_423818

            cmp R11D,1
            je .L_423818

            lea EDI,DWORD PTR [R11-2]
            lea RCX,QWORD PTR [RBX+4]
            mov R12D,DWORD PTR [RSP]
            mov RSI,RBX
            lea R11,QWORD PTR [RCX+RDI*4]
            jmp .L_423804
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423800:

            add RCX,4
.L_423804:

            mov EDI,DWORD PTR [RSI+4]
            cmp RCX,R11
            mov DWORD PTR [RSI],EDI
            mov RSI,RCX
            jne .L_423800

            movsxd R10,R10D
            mov DWORD PTR [RSP+R10*4],R12D
.L_423818:

            cmp R8D,1
            je .L_423844

            lea RCX,QWORD PTR [RBX+4]
            mov RSI,RBX
            lea R10,QWORD PTR [RCX+RBP*4]
            jmp .L_423834
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423830:

            add RCX,4
.L_423834:

            mov EDI,DWORD PTR [RSI]
            imul EDI,R8D
            cmp R10,RCX
            mov DWORD PTR [RSI],EDI
            mov RSI,RCX
            jne .L_423830
.L_423844:

            test EAX,EAX
            je .L_42361c

            movsxd R9,R9D
            xor ECX,ECX
            lea RDI,QWORD PTR [RBX+R9*4]
            nop
            nop
            nop
.L_423858:

            mov ESI,DWORD PTR [RDI+RCX*4]
            mov DWORD PTR [RDX+RCX*4],ESI
            add RCX,1
            cmp EAX,ECX
            jg .L_423858

            jmp .L_42361c
.L_42386b:

            call __stack_chk_fail@PLT
.L_423870:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,776
.L_423881:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+760],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+211],4
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+28],ECX
            mov DWORD PTR [RSP+56],R8D
            mov QWORD PTR [RSP+32],R9
            je .L_4238e0

            mov RBP,RDI
            mov EDI,DWORD PTR [RDI]
            mov EAX,DWORD PTR [RBP+4]
            cmp EDI,EAX
            jne .L_4238c6

            cmp RSI,RDX
            je .L_4238e0
.L_4238c6:

            mov EBX,EDI
            shr EAX,7
            shr EBX,7
            and EAX,7
            and EBX,7
            cmp EAX,EBX
            jne .L_4238e0

            test EBX,EBX
            jne .L_423910

            nop
            nop
            nop
            nop
.L_4238e0:

            mov RAX,QWORD PTR [RSP+760]
            xor RAX,QWORD PTR FS:[40]
            jne .L_423c83

            add RSP,776
.L_4238fe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423910:

            mov R15,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+88],RDX
            mov ESI,DWORD PTR [R15+8]
            call .L_4235c0

            mov ESI,DWORD PTR [R15+12]
            mov EDI,DWORD PTR [RBP+4]
            lea RCX,QWORD PTR [RSP+304]
            lea RDX,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+104],RCX
            mov QWORD PTR [RSP+96],RDX
            call .L_4235c0

            mov EDI,DWORD PTR [RBP]
            call .L_423380

            mov EDI,DWORD PTR [RBP+4]
            movsxd RCX,EAX
            call .L_423380

            cmp ECX,4
            ja .L_423a51

            cmp EAX,4
            ja .L_423a51

            lea RDX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RAX,RDX
            lea RDX,QWORD PTR [RIP+.L_63dd40]
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [RSP+8],RAX
.L_423999:

            cmp EBX,1
            jne .L_423a79

            mov ECX,DWORD PTR [RSP+56]
            test ECX,ECX
            je .L_4238e0

            mov R14,QWORD PTR [RSP+8]
            mov EBX,DWORD PTR [RSP+28]
            xor R12D,R12D
            xor EBP,EBP
            xor R13D,R13D
            mov DWORD PTR [RSP+16],R12D
            mov DWORD PTR [RSP+4],EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4239d0:

            mov EDX,DWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+40]
            add RAX,RDX
            mov EDX,DWORD PTR [RSP+240]
            lea RBP,QWORD PTR [RCX+RAX*1]
            mov RAX,QWORD PTR [RSP+48]
            mov ECX,R13D
            add RDX,RCX
            test EBX,EBX
            lea R12,QWORD PTR [RAX+RDX*1]
            je .L_423a2e

            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a08:

            mov RSI,RBP
            mov RDI,R12
            add R15D,1
            call R14

            mov ESI,DWORD PTR [RSP+176]
            add RBP,RSI
            mov ESI,DWORD PTR [RSP+304]
            add R12,RSI
            cmp EBX,R15D
            jne .L_423a08
.L_423a2e:

            mov RAX,QWORD PTR [RSP+32]
            add DWORD PTR [RSP+4],1
            mov ECX,DWORD PTR [RAX]
            add R13D,DWORD PTR [RAX+4]
            add DWORD PTR [RSP+16],ECX
            mov EAX,DWORD PTR [RSP+4]
            cmp DWORD PTR [RSP+56],EAX
            jne .L_4239d0

            jmp .L_4238e0
.L_423a51:

            mov RDI,QWORD PTR [RBP+232]
            lea RDX,QWORD PTR [RIP+.L_423c88]
            mov ESI,8
            xor EAX,EAX
            call .L_426320

            mov QWORD PTR [RSP+8],0
            jmp .L_423999
.L_423a79:

            mov EDX,DWORD PTR [RSP+56]
            pxor XMM0,XMM0
            test EDX,EDX
            movaps XMMWORD PTR [RSP+368],XMM0
            movaps XMMWORD PTR [RSP+384],XMM0
            movaps XMMWORD PTR [RSP+400],XMM0
            movaps XMMWORD PTR [RSP+416],XMM0
            movaps XMMWORD PTR [RSP+432],XMM0
            movaps XMMWORD PTR [RSP+448],XMM0
            movaps XMMWORD PTR [RSP+464],XMM0
            movaps XMMWORD PTR [RSP+480],XMM0
            je .L_4238e0

            lea RAX,QWORD PTR [RSP+368]
            lea R14,QWORD PTR [RSP+496]
            lea R15,QWORD PTR [RSP+624]
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RSP+432]
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            mov DWORD PTR [RSP+60],0
            mov QWORD PTR [RSP+72],RAX
            mov RAX,R14
            mov R14,R15
            mov R15,RAX
            nop
            nop
            nop
            nop
.L_423b18:

            mov ESI,DWORD PTR [RSP+68]
            mov EAX,DWORD PTR [RSP+64]
            xor ECX,ECX
            mov RDI,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+88]
            mov RBP,QWORD PTR [RSP+80]
            mov R10,QWORD PTR [RSP+96]
            jmp .L_423b50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423b48:

            mov EAX,DWORD PTR [RBP+RCX*4]
            mov ESI,DWORD PTR [R11+RCX*4]
.L_423b50:

            mov EDX,DWORD PTR [R9+RCX*4]
            add RDX,RAX
            mov EAX,DWORD PTR [R10+RCX*4]
            add RDX,RDI
            mov QWORD PTR [R15+RCX*8],RDX
            add RAX,RSI
            add RAX,R8
            mov QWORD PTR [R14+RCX*8],RAX
            add RCX,1
            cmp EBX,ECX
            ja .L_423b48

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_423c11

            mov R13,QWORD PTR [RSP+104]
            mov RAX,R15
            mov DWORD PTR [RSP+24],0
            mov R15,R14
            mov DWORD PTR [RSP+4],EBX
            mov R14,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_423ba0:

            mov R12,R15
            xor EBX,EBX
            mov R15,R13
            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_423bb0:

            mov R14,QWORD PTR [R13+RBX*8]
            mov RBP,QWORD PTR [R12+RBX*8]
            mov RAX,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,RBP
            call RAX

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RAX+RBX*4]
            lea RAX,QWORD PTR [R14+RSI*1]
            mov QWORD PTR [R13+RBX*8],RAX
            mov EAX,DWORD PTR [R15+RBX*4]
            add RBP,RAX
            mov QWORD PTR [R12+RBX*8],RBP
            add RBX,1
            cmp DWORD PTR [RSP+4],EBX
            ja .L_423bb0

            add DWORD PTR [RSP+24],1
            mov R14,R13
            mov R13,R15
            mov EAX,DWORD PTR [RSP+24]
            cmp DWORD PTR [RSP+28],EAX
            mov R15,R12
            jne .L_423ba0

            mov EBX,DWORD PTR [RSP+4]
            mov RAX,R14
            mov R14,R12
            mov R15,RAX
.L_423c11:

            mov RAX,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RSP+68]
            mov R8,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            mov ESI,DWORD PTR [RAX]
            mov ECX,DWORD PTR [RAX+4]
            xor EAX,EAX
            jmp .L_423c40
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423c38:

            mov EDX,DWORD PTR [R9+RAX*4]
            mov EDI,DWORD PTR [R8+RAX*4]
.L_423c40:

            add EDX,ESI
            mov DWORD PTR [R9+RAX*4],EDX
            lea EDX,DWORD PTR [RCX+RDI*1]
            mov DWORD PTR [R8+RAX*4],EDX
            add RAX,1
            cmp EBX,EAX
            ja .L_423c38

            add DWORD PTR [RSP+60],1
            mov EAX,DWORD PTR [RSP+60]
            cmp DWORD PTR [RSP+56],EAX
            je .L_4238e0

            mov EAX,DWORD PTR [RSP+368]
            mov DWORD PTR [RSP+64],EAX
            mov EAX,DWORD PTR [RSP+432]
            mov DWORD PTR [RSP+68],EAX
            jmp .L_423b18
.L_423c83:

            call __stack_chk_fail@PLT
.L_423c88:
          .string "Unrecognized alpha channel width"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423cac:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
.L_423cb0:
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x47
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423cb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_423cc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_423cc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_423cd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_423cd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_423ce0:

            push RBX
            sub RSP,304
.L_423ce8:

            movdqa XMM0,XMMWORD PTR [RDI]
            lea RBX,QWORD PTR [RSP+224]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+144],XMM0
            mov RAX,QWORD PTR [RDI+64]
            mov RSI,RBX
            movdqa XMM0,XMMWORD PTR [RDI+16]
            mov QWORD PTR [RSP+208],RAX
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqa XMM0,XMMWORD PTR [RDI+32]
            movaps XMMWORD PTR [RSP+176],XMM0
            movdqa XMM0,XMMWORD PTR [RDI+48]
            lea RDI,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RSP+192],XMM0
            call .L_432250

            test EAX,EAX
            pxor XMM0,XMM0
            jne .L_423d80
.L_423d5a:

            mov RAX,QWORD PTR [RSP+296]
            xor RAX,QWORD PTR FS:[40]
            jne .L_423e22

            add RSP,304
.L_423d78:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423d80:

            call .L_40de30

            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+112],XMM0
            call .L_40de30

            movsd XMM0,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+120],XMM0
            call .L_40de30

            lea RDX,QWORD PTR [RSP+112]
            movsd XMM0,QWORD PTR [RAX+16]
            lea RDI,QWORD PTR [RSP+80]
            mov RSI,RBX
            lea RBX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+128],XMM0
            call .L_4323e0

            movsd XMM0,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+16]
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+32],XMM0
            call .L_40b650

            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            call .L_40e000

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_425a88]
            je .L_423d5a

            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_423d5a
.L_423e22:

            call __stack_chk_fail@PLT
.L_423e27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423e30:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R14D,EDX
            push RBP
            push RBX
            movsxd RBP,EDI
            mov RDI,R8
            mov RBX,R9
            mov R13,RSI
            sub RSP,760
.L_423e53:

            mov R12,R8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+744],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+8],XMM0
            call .L_431fa0

            pxor XMM2,XMM2
            mov RDI,RBX
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            call .L_431e00

            cmp R14D,3
            je .L_424178

            test R15D,R15D
            jne .L_423ef8
.L_423e97:

            movsd XMM1,QWORD PTR [RIP+.L_425aa0]
            mov EAX,1
            movsd XMM0,QWORD PTR [RBX]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM0
.L_423ecc:

            mov RCX,QWORD PTR [RSP+744]
            xor RCX,QWORD PTR FS:[40]
            jne .L_424550

            add RSP,760
.L_423eea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423ef8:

            mov RSI,QWORD PTR [R13+RBP*8-8]
            lea RDI,QWORD PTR [RSP+128]
            xor ECX,ECX
            mov EDX,R14D
            call .L_4327c0

            mov RSI,QWORD PTR [R13+RBP*8]
            lea RDI,QWORD PTR [RSP+160]
            xor ECX,ECX
            mov EDX,R14D
            call .L_4329d0

            movsd XMM0,QWORD PTR [RSP+128]
            ucomisd XMM0,QWORD PTR [RSP+160]
            jp .L_423f70

            jne .L_423f70

            movsd XMM1,QWORD PTR [RSP+136]
            ucomisd XMM1,QWORD PTR [RSP+168]
            jp .L_423f70

            jne .L_423f70

            movsd XMM1,QWORD PTR [RSP+144]
            ucomisd XMM1,QWORD PTR [RSP+176]
            jp .L_423f70

            je .L_423e97

            nop
            nop
            nop
            nop
.L_423f70:

            movsd QWORD PTR [RSP+8],XMM0
            call .L_40de30

            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40de30

            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+144]
            subsd XMM4,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM4
            call .L_40de30

            movsd XMM0,QWORD PTR [RSP+24]
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            subsd XMM6,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM6
            call .L_40de30

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+168]
            subsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+32],XMM7
            divsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM0
            call .L_40de30

            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+176]
            subsd XMM7,QWORD PTR [RAX+8]
            movsd QWORD PTR [RSP+32],XMM6
            divsd XMM7,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+48],XMM7
            call .L_40de30

            movsd XMM6,QWORD PTR [RSP+32]
            subsd XMM6,QWORD PTR [RAX+16]
            divsd XMM6,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+40],XMM6
            call .L_40de30

            movsd XMM3,QWORD PTR [RSP+160]
            movsd XMM1,QWORD PTR [RAX]
            subsd XMM3,QWORD PTR [RSP+128]
            xorpd XMM1,XMMWORD PTR [RIP+.L_425af0]
            mulsd XMM3,XMM1
            divsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            call .L_40de30

            movsd XMM4,QWORD PTR [RSP+168]
            movsd XMM1,QWORD PTR [RAX+8]
            subsd XMM4,QWORD PTR [RSP+136]
            xorpd XMM1,XMMWORD PTR [RIP+.L_425af0]
            mulsd XMM4,XMM1
            divsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_40de30

            movsd XMM5,QWORD PTR [RSP+176]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RAX+16]
            subsd XMM5,QWORD PTR [RSP+144]
            pxor XMM2,XMM2
            xorpd XMM1,XMMWORD PTR [RIP+.L_425af0]
            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM5,XMM1
            pxor XMM1,XMM1
            divsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM5
            call .L_431e00

            movsd XMM7,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R12+24]
            pxor XMM2,XMM2
            pxor XMM0,XMM0
            movapd XMM1,XMM7
            call .L_431e00

            movsd XMM6,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [R12+48]
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            movapd XMM2,XMM6
            call .L_431e00

            movsd XMM5,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM5
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            call .L_431e00

            jmp .L_423e97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424178:

            shl RBP,3
            lea RDI,QWORD PTR [RSP+64]
            lea R14,QWORD PTR [RSP+192]
            lea R15,QWORD PTR [R13+RBP*1-8]
            add RBP,R13
            lea R13,QWORD PTR [RSP+272]
            mov RSI,QWORD PTR [R15]
            call .L_42d6f0

            mov RSI,QWORD PTR [R15]
            mov RDI,R14
            call .L_42d790

            mov RSI,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+96]
            call .L_42d6f0

            mov RSI,QWORD PTR [RBP]
            mov RDI,R13
            call .L_42d790

            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM3,QWORD PTR [RIP+.L_425a90]
            jp .L_4241dc

            je .L_424350
.L_4241dc:

            movsd XMM0,QWORD PTR [RSP+64]
            lea RBP,QWORD PTR [RSP+352]
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+96]
            mov RDI,RBP
            pxor XMM1,XMM1
            call .L_431e00

            movsd XMM1,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [RBP+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+104]
            pxor XMM0,XMM0
            call .L_431e00

            movsd XMM2,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RBP+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+112]
            pxor XMM0,XMM0
            call .L_431e00

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM6
            jp .L_4243b0

            jne .L_4243b0

            movdqa XMM0,XMMWORD PTR [RSP+272]
            lea R14,QWORD PTR [RSP+512]
            lea RSI,QWORD PTR [RSP+432]
            mov RAX,QWORD PTR [RSP+336]
            mov RDX,RBP
            lea RBP,QWORD PTR [RSP+672]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov RDI,R14
            movdqa XMM0,XMMWORD PTR [RSP+288]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+304]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+320]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_4320e0

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call .L_4320e0

            movdqa XMM0,XMMWORD PTR [RSP+192]
            lea RDI,QWORD PTR [RSP+592]
            mov RAX,QWORD PTR [RSP+256]
            mov RSI,RBP
            movaps XMMWORD PTR [RSP+592],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+656],RAX
            movaps XMMWORD PTR [RSP+608],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+624],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+240]
            movaps XMMWORD PTR [RSP+640],XMM0
            call .L_432250

            test EAX,EAX
            jne .L_424530
.L_424345:

            xor EAX,EAX
            jmp .L_423ecc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424350:

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,R12
            pxor XMM2,XMM2
            divsd XMM0,QWORD PTR [RSP+96]
            pxor XMM1,XMM1
            call .L_431e00

            movsd XMM1,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [R12+24]
            pxor XMM2,XMM2
            divsd XMM1,QWORD PTR [RSP+104]
            pxor XMM0,XMM0
            call .L_431e00

            movsd XMM2,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [R12+48]
            pxor XMM1,XMM1
            divsd XMM2,QWORD PTR [RSP+112]
            pxor XMM0,XMM0
            call .L_431e00

            jmp .L_423e97
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4243b0:

            movdqa XMM0,XMMWORD PTR [RSP+192]
            lea R15,QWORD PTR [RSP+512]
            mov RAX,QWORD PTR [RSP+256]
            lea RDI,QWORD PTR [RSP+432]
            movaps XMMWORD PTR [RSP+432],XMM0
            mov RSI,R15
            movdqa XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+496],RAX
            movaps XMMWORD PTR [RSP+448],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+464],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+240]
            movaps XMMWORD PTR [RSP+480],XMM0
            call .L_432250

            test EAX,EAX
            je .L_424345

            lea RAX,QWORD PTR [RSP+592]
            mov RDX,RBP
            mov RSI,R15
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_4320e0

            mov RDI,R14
            call .L_423ce0

            mov RDI,R13
            movsd QWORD PTR [RSP+16],XMM0
            call .L_423ce0

            pxor XMM2,XMM2
            ucomisd XMM2,QWORD PTR [RSP+16]
            ja .L_424345

            ucomisd XMM2,XMM0
            movsd QWORD PTR [RSP+32],XMM0
            ja .L_424345

            mov RDI,RBP
            call .L_431ff0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP+32]
            je .L_4244af

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RIP+.L_425a98]
            subsd XMM5,XMM0
            movapd XMM1,XMM5
            andpd XMM1,XMMWORD PTR [RIP+.L_425ae0]
            ucomisd XMM2,XMM1
            ja .L_424543
.L_4244af:

            movsd XMM5,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [RSP+160]
            lea R13,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RIP+.L_425a90]
            mov RDI,RBP
            subsd XMM1,XMM5
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            addsd XMM0,XMM1
            call .L_40de70

            mov RSI,RBP
            lea RBP,QWORD PTR [RSP+672]
            mov RDI,R13
            call .L_40b690

            call .L_40de30

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RBP
            mov RCX,RAX
            call .L_40e220

            mov RSI,QWORD PTR [RSP+24]
            mov RDX,RBP
            mov RDI,R12
            call .L_4320e0

            jmp .L_423e97
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424530:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_4320e0

            jmp .L_423e97
.L_424543:

            mov RDI,R12
            call .L_431fa0

            jmp .L_423e97
.L_424550:

            call __stack_chk_fail@PLT
.L_424555:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424560:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            xor EDX,EDX
            sub RSP,160
.L_42457a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RIP+.L_425aa8]
.L_42459a:

            movzx EAX,WORD PTR [RBX+RDX*2]
            pxor XMM0,XMM0
            pxor XMM7,XMM7
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [R13+RDX*4],XMM7
            add RDX,1
            cmp RDX,4
            jne .L_42459a

            mov RDI,QWORD PTR [R12+24]
            movss XMM0,DWORD PTR [RSP+108]
            movsd QWORD PTR [RSP+8],XMM1
            call .L_428730

            cmp WORD PTR [RBX],0
            movss DWORD PTR [RSP+140],XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            jne .L_4245f9

            cmp WORD PTR [RBX+2],0
            je .L_4246e0
.L_4245f9:

            mov RDX,QWORD PTR [R12]
            lea RBX,QWORD PTR [RSP+112]
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,RBX
            call .L_431130

            pxor XMM2,XMM2
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_425ab0]
            mov ECX,4294967295
            movsd XMM5,QWORD PTR [RIP+.L_425ab8]
            movsd XMM4,QWORD PTR [RIP+.L_425ac0]
            movsd XMM1,QWORD PTR [RSP+8]
.L_42463c:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RBX+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_424670

            ucomisd XMM0,XMM1
            mov EAX,ECX
            jae .L_424670

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_424670:

            mov WORD PTR [RBP+RDX*2],AX
            add RDX,1
            cmp RDX,4
            jne .L_42463c

            movss XMM0,DWORD PTR [RSP+124]
            subss XMM0,DWORD PTR [RSP+140]
            movsd XMM4,QWORD PTR [RIP+.L_425ac8]
            andps XMM0,XMMWORD PTR [RIP+.L_425b00]
            cvtss2sd XMM0,XMM0
            ucomisd XMM4,XMM0
            jbe .L_424748
.L_4246ab:

            mov RSI,QWORD PTR [RSP+152]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_424985

            add RSP,160
.L_4246ce:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4246e0:

            cmp WORD PTR [RBX+4],0
            jne .L_4245f9

            cvtss2sd XMM0,XMM0
            pxor XMM2,XMM2
            xor EAX,EAX
            mov DWORD PTR [RBP],0
            mulsd XMM0,XMM1
            mov WORD PTR [RBP+4],AX
            xor EAX,EAX
            addsd XMM0,QWORD PTR [RIP+.L_425ab0]
            ucomisd XMM2,XMM0
            jae .L_42473a

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_42473a

            subsd XMM0,QWORD PTR [RIP+.L_425ab8]
            addsd XMM0,QWORD PTR [RIP+.L_425ac0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_42473a:

            mov WORD PTR [RBP+6],AX
            jmp .L_4246ab
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424748:

            mov RDI,QWORD PTR [R12+8]
            lea R13,QWORD PTR [RSP+32]
            mov ECX,1
            mov RSI,RBP
            movsd QWORD PTR [RSP+24],XMM3
            lea R14,QWORD PTR [RSP+128]
            mov RDX,R13
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_410260

            mov RDI,QWORD PTR [R12+16]
            mov ECX,1
            mov RDX,R14
            mov RSI,RBX
            call .L_410260

            mov RCX,QWORD PTR [R12+32]
            mov RDX,RBX
            mov RSI,RBX
            mov RDI,R14
            call .L_431500

            test EAX,EAX
            je .L_4246ab

            movss XMM6,DWORD PTR [RSP+112]
            movaps XMM7,XMM6
            movss XMM4,DWORD PTR [RSP+116]
            movss XMM0,DWORD PTR [RSP+120]
            addss XMM7,XMM4
            movss XMM5,DWORD PTR [RSP+140]
            movss DWORD PTR [RSP+124],XMM5
            cvtss2sd XMM5,XMM5
            movsd XMM9,QWORD PTR [R12+56]
            addss XMM7,XMM0
            movapd XMM8,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            cvtss2sd XMM7,XMM7
            addsd XMM8,XMM7
            ucomisd XMM8,XMM9
            jbe .L_424978

            subsd XMM8,XMM9
            movapd XMM10,XMM2
            divsd XMM8,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_425a90]
            subsd XMM7,XMM8
            maxsd XMM10,XMM7
            movapd XMM7,XMM10
.L_424834:

            cvtss2sd XMM6,XMM6
            xor EAX,EAX
            mulsd XMM6,XMM7
            mulsd XMM6,XMM1
            addsd XMM6,XMM3
            ucomisd XMM2,XMM6
            jae .L_424872

            ucomisd XMM6,XMM1
            mov EAX,4294967295
            jae .L_424872

            subsd XMM6,QWORD PTR [RIP+.L_425ab8]
            addsd XMM6,QWORD PTR [RIP+.L_425ac0]
            movd EAX,XMM6
            sar EAX,16
            add AX,32767
.L_424872:

            cvtss2sd XMM4,XMM4
            mov WORD PTR [RBP],AX
            xor EAX,EAX
            mulsd XMM4,XMM7
            mulsd XMM4,XMM1
            addsd XMM4,XMM3
            ucomisd XMM2,XMM4
            jae .L_4248b4

            ucomisd XMM4,XMM1
            mov EAX,4294967295
            jae .L_4248b4

            subsd XMM4,QWORD PTR [RIP+.L_425ab8]
            addsd XMM4,QWORD PTR [RIP+.L_425ac0]
            movd EAX,XMM4
            sar EAX,16
            add AX,32767
.L_4248b4:

            cvtss2sd XMM0,XMM0
            mov WORD PTR [RBP+2],AX
            xor EAX,EAX
            mulsd XMM0,XMM7
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_4248f6

            ucomisd XMM0,XMM1
            mov EAX,4294967295
            jae .L_4248f6

            subsd XMM0,QWORD PTR [RIP+.L_425ab8]
            addsd XMM0,QWORD PTR [RIP+.L_425ac0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_4248f6:

            mulsd XMM5,XMM1
            mov WORD PTR [RBP+4],AX
            xor EAX,EAX
            addsd XMM3,XMM5
            ucomisd XMM2,XMM3
            jae .L_424930

            ucomisd XMM3,XMM1
            mov EAX,4294967295
            jae .L_424930

            subsd XMM3,QWORD PTR [RIP+.L_425ab8]
            addsd XMM3,QWORD PTR [RIP+.L_425ac0]
            movd EAX,XMM3
            sar EAX,16
            add AX,32767
.L_424930:

            lea RBX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [R12+8]
            mov WORD PTR [RBP+6],AX
            mov ECX,1
            mov RSI,RBP
            mov RDX,RBX
            call .L_410260

            mov RSI,RBX
            mov RDI,R13
            call .L_40c030

            ucomisd XMM0,QWORD PTR [R12+40]
            jbe .L_4246ab

            movsd QWORD PTR [R12+40],XMM0
            jmp .L_4246ab
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424978:

            movsd XMM7,QWORD PTR [RIP+.L_425a90]
            jmp .L_424834
.L_424985:

            call __stack_chk_fail@PLT
.L_42498a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_424990:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBX,RSI
            sub RSP,80
.L_42499e:

            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_431fa0

            pxor XMM4,XMM4
            xor EAX,EAX
            movq XMM3,QWORD PTR [RIP+.L_425ae0]
.L_4249c7:

            movsd XMM0,QWORD PTR [R12+RAX*1]
            subsd XMM0,QWORD PTR [RBP+RAX*1]
            add RAX,8
            cmp RAX,72
            andpd XMM0,XMM3
            addsd XMM4,XMM0
            jne .L_4249c7

            movsd XMM1,QWORD PTR [RBX]
            xor EAX,EAX
            movapd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            andpd XMM2,XMM3
            andpd XMM1,XMM3
            addsd XMM2,XMM4
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+16]
            andpd XMM1,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_425ad0]
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            seta AL
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_424a3d

            add RSP,80
.L_424a38:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_424a3d:

            call __stack_chk_fail@PLT
.L_424a42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424a50:

            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            sub RSP,24
.L_424a5c:

            cmp ESI,1281450528
            je .L_424b00

            cmp ESI,1482250784
            jne .L_424ab0

            cmp EDX,1281450528
            je .L_424b40

            cmp EDX,1482250784
            jne .L_424af6

            mov RSI,R8
            mov QWORD PTR [RSP+8],R8
.L_424a8c:

            mov RDI,RBP
            call .L_424990

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            je .L_424bb0
.L_424aa1:

            add RSP,24
.L_424aa5:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424ab0:

            xor EAX,EAX
            cmp ESI,EDX
            sete AL
            add RSP,24
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_424ac0:

            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call .L_424990

            test EAX,EAX
            jne .L_424aa1

            mov RDI,QWORD PTR [RBX+56]
            call .L_430400

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_431280

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            jne .L_424b59
.L_424af6:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_424b00:

            cmp EDX,1281450528
            je .L_424ac0

            cmp EDX,1482250784
            mov QWORD PTR [RSP+8],R8
            jne .L_424af6

            mov RDI,QWORD PTR [RDI+56]
            call .L_430400

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_431280

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            je .L_424af6

            mov RSI,R8
            jmp .L_424a8c
          .byte 0x90
.L_424b40:

            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call .L_424990

            test EAX,EAX
            mov R8,QWORD PTR [RSP+8]
            jne .L_424b87
.L_424b59:

            mov RDI,QWORD PTR [RBX+56]
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBX
            call .L_431280

            test EAX,EAX
            je .L_424af6
.L_424b87:

            mov RDI,QWORD PTR [RBX+56]
            call .L_430600
.L_424b90:

            mov RDI,RBX
            mov RDX,RAX
            mov ESI,1
            call .L_431280

            test EAX,EAX
            setne AL
            add RSP,24
.L_424ba9:

            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_424bb0:

            mov RDI,QWORD PTR [RBX+56]
            mov RCX,RBP
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            jmp .L_424b90
.L_424bc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424bd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,216
.L_424be1:

            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+88],RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RCX
            xor ECX,ECX
            test ESI,ESI
            mov DWORD PTR [RSP+68],ESI
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+80],R9
            je .L_424ea1

            mov RDI,QWORD PTR [RSP+88]
            xor EDX,EDX
            xor ESI,ESI
            call .L_430f40

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_424ea1

            mov RAX,QWORD PTR [RSP+24]
            xor R14D,R14D
            mov RDI,QWORD PTR [RAX]
            call .L_403540

            mov R15D,EAX
            mov EAX,DWORD PTR [RSP+68]
            sub EAX,1
            add RAX,1
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_424da1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424c70:

            test DL,DL
            jne .L_424ddc

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+44],1
            mov R13D,DWORD PTR [RAX+R14*4]
.L_424c89:

            mov RDI,RBX
            mov BYTE PTR [RSP+67],DL
            call .L_403540

            mov RDI,RBX
            mov EBP,EAX
            call .L_403520

            movzx EDX,BYTE PTR [RSP+67]
            mov DWORD PTR [RSP+20],EAX
.L_424ca8:

            cmp R15D,EBP
            je .L_424cc6

            cmp EBP,876825682
            jne .L_424e40

            cmp R15D,1129142603
            jne .L_424e40
.L_424cc6:

            test DL,DL
            jne .L_424ce2

            cmp R12D,1852662636
            jne .L_424ee0

            cmp DWORD PTR [RSP+68],1
            jne .L_424ee0
.L_424ce2:

            mov RDI,RBX
            mov ESI,R13D
            call .L_42e330

            test RAX,RAX
            mov RBX,RAX
            je .L_424e97

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            je .L_424f08

            cmp BYTE PTR [RSP],0
            je .L_424f08

            mov RAX,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+32]
            mov R9,R12
            movsd XMM3,QWORD PTR [RAX+R14*8]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM3
            movapd XMM0,XMM3
            mov ECX,DWORD PTR [RAX+R14*4]
.L_424d39:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,R13D
            mov EDI,R14D
            call .L_423e30

            test EAX,EAX
            je .L_424f70
.L_424d51:

            mov RCX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+8]
            mov R8,R12
            mov EDX,EBP
            mov ESI,R15D
            call .L_424a50

            test EAX,EAX
            je .L_424f70
.L_424d70:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            call .L_4313a0

            test EAX,EAX
            je .L_424f70

            mov RDI,RBX
            add R14,1
            call .L_431080

            cmp QWORD PTR [RSP+56],R14
            mov R15D,DWORD PTR [RSP+20]
            je .L_424f80
.L_424da1:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX+R14*8]
            mov RDI,RBX
            call .L_403560

            cmp EAX,1633842036
            mov R12D,EAX
            mov DWORD PTR [RSP+40],R14D
            sete BYTE PTR [RSP]
            movzx EAX,BYTE PTR [RSP]
            cmp R12D,1818848875
            sete DL
            or EDX,EAX
            test R14D,R14D
            je .L_424c70
.L_424ddc:

            cmp R15D,1482250784
            setne AL
            cmp R15D,1281450528
            setne SIL
            and EAX,ESI
            test DL,DL
            movzx ECX,AL
            mov DWORD PTR [RSP+44],ECX
            mov RCX,QWORD PTR [RSP+48]
            mov R13D,DWORD PTR [RCX+R14*4]
            jne .L_424c89

            test AL,AL
            jne .L_424c89

            mov RDI,RBX
            mov BYTE PTR [RSP+67],DL
            call .L_403520

            mov RDI,RBX
            mov EBP,EAX
            call .L_403540

            movzx EDX,BYTE PTR [RSP+67]
            mov DWORD PTR [RSP+20],EAX
            jmp .L_424ca8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424e40:

            cmp EBP,1129142603
            jne .L_424e55

            cmp R15D,876825682
            je .L_424cc6
.L_424e55:

            cmp EBP,1482250784
            jne .L_424e6a

            cmp R15D,1281450528
            je .L_424cc6
.L_424e6a:

            cmp EBP,1281450528
            jne .L_424e7f

            cmp R15D,1482250784
            je .L_424cc6
.L_424e7f:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_425a39]
            mov ESI,9
            xor EAX,EAX
            call .L_426320
.L_424e97:

            mov RDI,QWORD PTR [RSP+8]
            call .L_431080
.L_424ea1:

            mov QWORD PTR [RSP+8],0
.L_424eaa:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+8]
            jne .L_424ff5

            add RSP,216
.L_424ecd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ee0:

            mov EAX,DWORD PTR [RSP+44]
            mov ESI,R13D
            mov RDI,RBX
            test EAX,EAX
            je .L_424f30

            call .L_42d870

            test RAX,RAX
            mov RBX,RAX
            jne .L_424d70

            jmp .L_424e97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f08:

            mov RDI,QWORD PTR [RSP+32]
            lea R12,QWORD PTR [RSP+96]
            call .L_431fa0

            pxor XMM2,XMM2
            mov RDI,R12
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            call .L_431e00

            jmp .L_424d51
.L_424f30:

            call .L_42ddd0

            test RAX,RAX
            mov RBX,RAX
            je .L_424e97

            mov RAX,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+32]
            mov R9,R12
            movsd XMM4,QWORD PTR [RAX+R14*8]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM4
            movapd XMM0,XMM4
            mov ECX,DWORD PTR [RAX+R14*4]
            jmp .L_424d39
.L_424f70:

            mov RDI,RBX
            call .L_431080

            jmp .L_424e97
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424f80:

            test DWORD PTR [RSP+272],32768
            je .L_424eaa

            cmp R15D,1196573017
            sete DL
            cmp R15D,1380401696
            sete AL
            or DL,AL
            jne .L_424fb6

            cmp R15D,1129142603
            jne .L_424eaa
.L_424fb6:

            mov EDI,DWORD PTR [RSP+20]
            call .L_40d760

            mov RBX,QWORD PTR [RSP+8]
            mov ESI,EAX
            mov RDI,QWORD PTR [RBX+56]
            call .L_4305a0

            test RAX,RAX
            je .L_424e97

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBX
            call .L_431280

            test EAX,EAX
            jne .L_424eaa

            jmp .L_424e97
.L_424ff5:

            call __stack_chk_fail@PLT
.L_424ffa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_425000:

            push R15
            push R14
            lea R15D,DWORD PTR [RSI-1]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,1144
.L_425015:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1128],RAX
            xor EAX,EAX
            cmp R15D,254
            mov QWORD PTR [RSP+8],R8
            ja .L_425230

            mov R12,RDI
            mov R14,R9
            mov EBP,ESI
            mov RBX,RCX
            lea RDI,QWORD PTR [R15*4+4]
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+96]
            mov R8D,1
            mov R9D,1
            jmp .L_42508e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425068:

            test ESI,36864
            jne .L_425120

            test ESI,18432
            cmovne ECX,R9D
            nop
            nop
.L_425080:

            mov DWORD PTR [R13+RAX*1],ECX
            add RAX,4
            cmp RAX,RDI
            je .L_4250b4
.L_42508e:

            mov ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,15
            ja .L_425080

            mov RSI,R8
            shl RSI,CL
            test ESI,9216
            je .L_425068

            xor ECX,ECX
            mov DWORD PTR [R13+RAX*1],ECX
            add RAX,4
            cmp RAX,RDI
            jne .L_42508e
.L_4250b4:

            mov RDI,QWORD PTR [RBX]
            call .L_403540

            cmp EAX,1129142603
            je .L_425130
.L_4250c3:

            sub RSP,8
.L_4250c7:

            mov RCX,RBX
            mov ESI,EBP
            mov EAX,DWORD PTR [RSP+1208]
            mov R9,R14
            mov RDX,R13
            mov RDI,R12
            push RAX
            mov R8,QWORD PTR [RSP+24]
            call .L_424bd0

            pop RBX
            pop RBP
            mov R15,RAX
.L_4250ec:

            mov RBX,QWORD PTR [RSP+1128]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_4253aa

            add RSP,1144
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425120:

            mov ECX,2
            jmp .L_425080
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425130:

            lea R15,QWORD PTR [RBX+R15*8]
            mov RDI,QWORD PTR [R15]
            mov QWORD PTR [RSP+16],R15
            call .L_403540

            cmp EAX,1129142603
            je .L_42515b

            mov RDI,QWORD PTR [R15]
            call .L_403560

            cmp EAX,1886549106
            jne .L_4250c3
.L_42515b:

            mov EDX,4
            mov ESI,4
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov R15,RAX
            je .L_425230

            lea RAX,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            mov ESI,1
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RSP+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            mov RDI,QWORD PTR [RAX]
            call .L_42d870

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_4251dc

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RAX]
            call .L_429a60

            divsd XMM0,QWORD PTR [RIP+.L_425ad8]
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RSP+88],XMM0
            jb .L_425238
.L_4251dc:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_4251eb
.L_4251e6:

            call .L_431080
.L_4251eb:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_4251fa

            call .L_40fdf0
.L_4251fa:

            mov RDI,QWORD PTR [RSP+40]
            test RDI,RDI
            je .L_425209

            call .L_40fdf0
.L_425209:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_425218

            call .L_427870
.L_425218:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_4250ec

            call .L_431080

            jmp .L_4250ec
.L_425230:

            xor R15D,R15D
            jmp .L_4250ec
.L_425238:

            sub RSP,8
.L_42523c:

            mov R9,R14
            mov RCX,RBX
            mov EDX,DWORD PTR [RSP+1208]
            mov ESI,EBP
            mov RDI,R12
            push RDX
            mov R8,QWORD PTR [RSP+24]
            mov RDX,R13
            call .L_424bd0

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            pop R10
            pop R11
            je .L_4251eb

            mov EDX,DWORD PTR [RSP+1200]
            mov R8,RBX
            mov RCX,R13
            mov ESI,4096
            mov RDI,R12
            push RDX
            push R14
            mov EDX,EBP
            mov R9,QWORD PTR [RSP+24]
            call .L_4295e0

            test RAX,RAX
            mov QWORD PTR [RSP+72],RAX
            pop R8
            pop R9
            je .L_4251dc

            xor ESI,ESI
            mov RDI,R12
            call .L_413990

            sub RSP,8
            mov RDI,R12
            mov R9D,1
            push 320
            mov R14,QWORD PTR [RSP+32]
            mov R8D,4849688
            mov RCX,RAX
            mov EDX,34
            mov RBX,RAX
            mov RSI,QWORD PTR [R14]
            call .L_410e00

            test RAX,RAX
            mov QWORD PTR [RSP+56],RAX
            pop RSI
            pop RDI
            je .L_4251dc

            sub RSP,8
            mov RSI,QWORD PTR [R14]
            mov RCX,RBX
            push 320
            mov EDX,4194340
            mov R9D,1
            mov R8D,4194332
            mov RDI,R12
            call .L_410e00

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            pop RDX
            pop RCX
            je .L_425397

            mov RDI,RBX
            call .L_403eb0

            mov ESI,DWORD PTR [RSP+1200]
            mov EDI,1129142603
            mov QWORD PTR [RSP+72],0
            call .L_40d9d0

            xor R8D,R8D
            mov ECX,4
            mov EDX,4
            mov ESI,EAX
            mov RDI,R12
            call .L_430b00

            test RAX,RAX
            mov RBX,RAX
            je .L_4251dc

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_431280

            test EAX,EAX
            je .L_4251dc

            mov RDX,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RIP+.L_424560]
            xor ECX,ECX
            mov RDI,RBX
            call .L_42fba0

            jmp .L_4251dc
.L_425397:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            jne .L_4251e6

            jmp .L_4251fa
.L_4253aa:

            call __stack_chk_fail@PLT
.L_4253af:

            nop
.L_4253b0:

            push R15
            push R14
            lea R15D,DWORD PTR [RSI-1]
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,1080
.L_4253c5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            cmp R15D,254
            mov QWORD PTR [RSP],R8
            ja .L_425624

            mov R12,RDI
            mov EBP,ESI
            mov R13,RCX
            mov R14,R9
            lea RSI,QWORD PTR [R15*4+4]
            xor EAX,EAX
            lea RBX,QWORD PTR [RSP+32]
            mov EDI,1
            mov R8D,1
            jmp .L_42543c
.L_425410:

            test R9D,36864
            jne .L_4254d0

            test R9D,18432
            cmovne ECX,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425430:

            mov DWORD PTR [RBX+RAX*1],ECX
            add RAX,4
            cmp RAX,RSI
            je .L_425461
.L_42543c:

            mov ECX,DWORD PTR [RDX+RAX*1]
            cmp ECX,15
            ja .L_425430

            mov R9,RDI
            shl R9,CL
            test R9D,9216
            je .L_425410

            xor ECX,ECX
            mov DWORD PTR [RBX+RAX*1],ECX
            add RAX,4
            cmp RAX,RSI
            jne .L_42543c
.L_425461:

            mov RDI,QWORD PTR [R13]
            call .L_403540

            cmp EAX,1129142603
            je .L_4254e0
.L_425471:

            sub RSP,8
.L_425475:

            mov R9,R14
            mov RCX,R13
            mov EAX,DWORD PTR [RSP+1144]
            mov RDX,RBX
            mov ESI,EBP
            mov RDI,R12
            push RAX
            mov R8,QWORD PTR [RSP+16]
            call .L_424bd0

            pop R8
            pop R9
            mov R15,RAX
.L_42549c:

            mov RBX,QWORD PTR [RSP+1064]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_425638

            add RSP,1080
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4254d0:

            mov ECX,2
            jmp .L_425430
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4254e0:

            mov RDI,QWORD PTR [R13+R15*8]
            call .L_403540

            cmp EAX,1129142603
            jne .L_425471

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+16]
            mov EDX,4
            mov ESI,4
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_430f40

            test RAX,RAX
            mov R15,RAX
            je .L_425624

            sub RSP,8
.L_425526:

            mov ESI,EBP
            mov RDI,R12
            mov EAX,DWORD PTR [RSP+1144]
            mov R9,R14
            mov RCX,R13
            mov RDX,RBX
            push RAX
            mov R8,QWORD PTR [RSP+16]
            call .L_424bd0

            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            pop RSI
            pop RDI
            je .L_42560d

            mov EAX,DWORD PTR [RSP+1136]
            mov RCX,RBX
            mov EDX,EBP
            mov R8,R13
            mov ESI,4096
            mov RDI,R12
            push RAX
            push R14
            mov R9,QWORD PTR [RSP+16]
            call .L_4295e0

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            pop RDX
            pop RCX
            je .L_42562c

            mov ESI,DWORD PTR [RSP+1136]
            mov EDI,1129142603
            call .L_40d9d0

            xor R8D,R8D
            mov ECX,4
            mov EDX,4
            mov ESI,EAX
            mov RDI,R12
            call .L_430b00

            test RAX,RAX
            mov RBX,RAX
            je .L_4255fe

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R15
            call .L_431280

            test EAX,EAX
            je .L_4255fe

            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_425640]
            xor ECX,ECX
            mov RDI,RBX
            call .L_42fba0

            test EAX,EAX
            je .L_4255fe

            mov RDI,QWORD PTR [RSP+16]
            call .L_431080

            mov RDI,QWORD PTR [RSP+24]
            call .L_427870

            jmp .L_42549c
.L_4255fe:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_42560d
.L_425608:

            call .L_431080
.L_42560d:

            mov RDI,QWORD PTR [RSP+24]
            test RDI,RDI
            je .L_42561c

            call .L_427870
.L_42561c:

            mov RDI,R15
            call .L_431080
.L_425624:

            xor R15D,R15D
            jmp .L_42549c
.L_42562c:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            jne .L_425608

            jmp .L_42561c
.L_425638:

            call __stack_chk_fail@PLT
.L_42563d:

            nop
            nop
            nop
.L_425640:

            push RBX
            cmp WORD PTR [RDI],0
            mov RBX,RSI
            je .L_425660
.L_42564a:

            mov RAX,QWORD PTR [RDX]
            mov RSI,RBX
            mov RDX,QWORD PTR [RAX+16]
            call QWORD PTR [RAX+24]
.L_425657:

            mov EAX,1
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_425660:

            cmp WORD PTR [RDI+2],0
            jne .L_42564a

            cmp WORD PTR [RDI+4],0
            jne .L_42564a

            xor EAX,EAX
            mov DWORD PTR [RSI],0
            mov WORD PTR [RSI+4],AX
            movzx ESI,WORD PTR [RDI+6]
            mov RDI,QWORD PTR [RDX+8]
            call .L_4286b0

            mov WORD PTR [RBX+6],AX
            jmp .L_425657
.L_42568d:

            nop
            nop
            nop
.L_425690:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_42569b:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_425720

            mov RAX,QWORD PTR [RSI+96]
            mov QWORD PTR [RSP],0
            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_425750

            xor EBP,EBP
            jmp .L_4256e4
.L_4256d0:

            mov RBX,QWORD PTR [RBX+272]
            mov RDI,QWORD PTR [R12+8]
            mov RBP,RAX
            test RBX,RBX
            je .L_425750
.L_4256e4:

            mov EDX,280
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_425736

            test RBP,RBP
            mov QWORD PTR [RAX+272],0
            je .L_42570d

            mov QWORD PTR [RBP+272],RAX
.L_42570d:

            cmp QWORD PTR [RSP],0
            jne .L_4256d0

            mov QWORD PTR [RSP],RAX
            jmp .L_4256d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425720:

            lea RSI,QWORD PTR [RIP+.L_641d30]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+96],RAX
.L_425736:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_425764

            add RSP,16
.L_42574a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_425750:

            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+96],RAX
            jmp .L_425736
.L_425764:

            call __stack_chk_fail@PLT
.L_425769:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425770:

            jmp .L_424bd0
.L_425775:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425780:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            sub RSP,40
.L_425791:

            mov EAX,DWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+16],R9
            mov DWORD PTR [RSP+24],EAX
            lea EAX,DWORD PTR [RSI-1]
            cmp EAX,254
            ja .L_4258db

            mov R13,RDX
            mov R15,RCX
            mov RBX,R8
            lea RBP,QWORD PTR [RAX*4+4]
            xor R14D,R14D
            jmp .L_4257d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4257d0:

            add R14,4
            cmp RBP,R14
            je .L_425820
.L_4257d9:

            mov EAX,DWORD PTR [R13+R14*1]
            cmp EAX,3
            jne .L_4257f0

            mov DWORD PTR [RBX+R14*1],0
            mov EAX,DWORD PTR [R13+R14*1]
.L_4257f0:

            and EAX,4294967293
            jne .L_4257d0

            mov RDI,QWORD PTR [R15+R14*2]
            call .L_403580

            cmp EAX,67108863
            jbe .L_4257d0

            mov DWORD PTR [RBX+R14*1],1
            add R14,4
            cmp RBP,R14
            jne .L_4257d9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425820:

            mov ECX,DWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov ESI,10
            mov DWORD PTR [RSP+28],ECX
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            mov ECX,DWORD PTR [RSP+28]
            test RAX,RAX
            jne .L_425854

            jmp .L_425890
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425848:

            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            je .L_425890
.L_425854:

            cmp ECX,DWORD PTR [RAX]
            jne .L_425848
.L_425858:

            mov EDX,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+16]
            mov R8,RBX
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R15
            mov ESI,R12D
            mov DWORD PTR [RSP+96],EDX
            mov RAX,QWORD PTR [RAX+264]
            add RSP,40
.L_42587e:

            pop RBX
            mov RDX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425890:

            lea RAX,QWORD PTR [RIP+.L_640fa0]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4258a0:

            cmp ECX,DWORD PTR [RAX]
            je .L_425858

            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            jne .L_4258a0

            mov ECX,DWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_425a69]
            mov ESI,8
            call .L_426320
.L_4258ca:

            add RSP,40
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4258db:

            lea RDX,QWORD PTR [RIP+.L_425a4d]
            mov ECX,ESI
            xor EAX,EAX
            mov ESI,2
            call .L_426320

            jmp .L_4258ca
.L_4258f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425900:

            push R12
            push RBP
            mov R12,RCX
            push RBX
.L_425907:

            mov EBX,ESI
            mov ESI,10
            mov RBP,RDX
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42594f

            xor ESI,ESI
.L_425920:

            cmp ESI,EBX
            jae .L_425940

            test RBP,RBP
            je .L_425931

            mov ECX,DWORD PTR [RAX]
            mov EDX,ESI
            mov DWORD PTR [RBP+RDX*4],ECX
.L_425931:

            test R12,R12
            je .L_425940

            lea RCX,QWORD PTR [RAX+4]
            mov EDX,ESI
            mov QWORD PTR [R12+RDX*8],RCX
.L_425940:

            mov RAX,QWORD PTR [RAX+272]
            add ESI,1
            test RAX,RAX
            jne .L_425920
.L_42594f:

            lea RSI,QWORD PTR [RIP+.L_640fa0]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425960:

            cmp EBX,EAX
            jbe .L_425980

            test RBP,RBP
            je .L_425971

            mov ECX,DWORD PTR [RSI]
            mov EDX,EAX
            mov DWORD PTR [RBP+RDX*4],ECX
.L_425971:

            test R12,R12
            je .L_425980

            lea RCX,QWORD PTR [RSI+4]
            mov EDX,EAX
            mov QWORD PTR [R12+RDX*8],RCX
.L_425980:

            mov RSI,QWORD PTR [RSI+272]
            add EAX,1
            test RSI,RSI
            jne .L_425960

            pop RBX
.L_425990:

            pop RBP
            pop R12
            ret 
.L_425994:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4259a0:

            mov RCX,RDX
            mov RDX,RSI
            mov ESI,EDI
            xor EDI,EDI
            jmp .L_425900
.L_4259af:

            nop
.L_4259b0:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
.L_4259b7:

            mov ESI,10
            mov RBX,RDI
            call .L_406d40

            test RBP,RBP
            mov R12,RAX
            je .L_425a28

            mov RDI,RBX
            mov ESI,280
            call .L_406970

            mov RBX,RAX
            xor EAX,EAX
            test RBX,RBX
            je .L_425a20

            mov EAX,DWORD PTR [RBP+24]
            lea RSI,QWORD PTR [RBP+40]
            lea RDI,QWORD PTR [RBX+4]
            mov EDX,255
            mov DWORD PTR [RBX],EAX
            call strncpy@PLT

            mov BYTE PTR [RBX+259],0
            mov RAX,QWORD PTR [RBP+32]
            mov QWORD PTR [RBX+264],RAX
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [RBX+272],RAX
            mov QWORD PTR [R12],RBX
            mov EAX,1
.L_425a20:

            pop RBX
.L_425a21:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425a28:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_425a39:
          .string "ColorSpace mismatch"
.L_425a4d:
          .string "Couldn\'t link \'%d\' profiles"
.L_425a69:
          .string "Unsupported intent \'%d\'"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_425a90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_425a98:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
.L_425aa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_425aa8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_425ab0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_425ab8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_425ac0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_425ac8:
          .byte 0x18
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x8
          .byte 0x3f
.L_425ad0:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x60
          .byte 0x3f
.L_425ad8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_425ae0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425af0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425b00:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425b10:

            ret 
.L_425b12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b20:

            cmp EDX,536870912
            mov RDI,RSI
            ja .L_425b38

            mov ESI,EDX
            jmp realloc@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425b38:

            xor EAX,EAX
            ret 
.L_425b3b:

            nop
            nop
            nop
            nop
            nop
.L_425b40:

            test RSI,RSI
            je .L_425b50

            mov RDI,RSI
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425b50:

            ret 
.L_425b52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b60:

            cmp ESI,536870912
            ja .L_425b70

            mov EDI,ESI
            jmp malloc@PLT
          .byte 0x90
.L_425b70:

            xor EAX,EAX
            ret 
.L_425b73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425b80:

            cmp EDX,536870912
            ja .L_425bd0

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov ESI,4
            call .L_406d40

            mov ESI,EBP
            mov RDI,RBX
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RCX,RAX
            je .L_425bc2

            test R12,R12
            je .L_425bc2

            mov EDX,EBP
            mov RSI,R12
            mov RDI,RAX
            call memmove@PLT

            mov RCX,RAX
.L_425bc2:

            pop RBX
            mov RAX,RCX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425bd0:

            xor ECX,ECX
            mov RAX,RCX
            ret 
.L_425bd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425be0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            mov ESI,4
            sub RSP,8
            call .L_406d40

            mov ESI,EBX
            mov RDI,RBP
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RCX,RAX
            je .L_425c13

            mov EDX,EBX
            xor ESI,ESI
            mov RDI,RAX
            call memset@PLT

            mov RCX,RAX
.L_425c13:

            add RSP,8
            mov RAX,RCX
            pop RBX
            pop RBP
            ret 
.L_425c1d:

            nop
            nop
            nop
.L_425c20:

            push RBP
            push RBX
            mov EBX,ESI
            imul EBX,EDX
            sub RSP,8
            test EBX,EBX
            je .L_425c78

            mov ECX,EDX
            mov EAX,4294967295
            xor EDX,EDX
            div ECX
            cmp EAX,ESI
            jbe .L_425c78

            cmp ESI,EBX
            seta DL
            cmp ECX,EBX
            seta AL
            or DL,AL
            jne .L_425c78

            cmp EBX,536870912
            ja .L_425c78

            mov ESI,4
            mov RBP,RDI
            call .L_406d40

            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            mov ESI,EBX
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425c78:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_425c81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425c90:

            mov RDI,RSI
            jmp pthread_mutex_unlock@PLT
.L_425c98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ca0:

            sub RSP,8
            mov RDI,RSI
            call pthread_mutex_lock@PLT

            test EAX,EAX
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_425cb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425cc0:

            push RBX
            mov ESI,4
            mov RBX,RDI
            call .L_406d40

            mov RDI,RBX
            mov ESI,40
            call QWORD PTR [RAX]

            xor ESI,ESI
            mov RBX,RAX
            mov RDI,RAX
            call pthread_mutex_init@PLT

            mov RAX,RBX
            pop RBX
            ret 
.L_425cea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_425cf0:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX+16]
            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_425d18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d20:

            push R12
            push RBP
            test ESI,ESI
            push RBX
.L_425d26:

            mov R12,RDI
            mov EBP,ESI
            mov EAX,20480
            mov ESI,4
            cmove EBP,EAX
            call .L_406d40

            mov ESI,24
            mov RDI,R12
            call QWORD PTR [RAX+8]

            test RAX,RAX
            mov RBX,RAX
            je .L_425d7e

            mov ESI,4
            mov RDI,R12
            call .L_406d40

            mov ESI,EBP
            mov RDI,R12
            call QWORD PTR [RAX]

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_425d90

            mov DWORD PTR [RBX+8],EBP
            mov DWORD PTR [RBX+12],0
            mov QWORD PTR [RBX+16],0
.L_425d7e:

            mov RAX,RBX
            pop RBX
.L_425d82:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425d90:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_425cf0

            jmp .L_425d7e
.L_425d9f:

            nop
.L_425da0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,8
            call pthread_mutex_destroy@PLT

            add RSP,8
            mov RSI,RBX
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_425cf0
.L_425dc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425dd0:

            mov EAX,2080
            ret 
.L_425dd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425de0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            call __ctype_toupper_loc@PLT

            mov RCX,QWORD PTR [RAX]
            jmp .L_425e08
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425e00:

            add RBP,1
            test DL,DL
            je .L_425e30
.L_425e08:

            add RBX,1
            movzx EAX,BYTE PTR [RBP]
            movzx ESI,BYTE PTR [RBX-1]
            mov RDX,RAX
            mov ESI,DWORD PTR [RCX+RSI*4]
            mov EAX,DWORD PTR [RCX+RAX*4]
            cmp ESI,EAX
            je .L_425e00

            add RSP,8
            sub EAX,ESI
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425e30:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_425e39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425e40:

            push R12
            push RBP
            push RBX
.L_425e44:

            mov RBX,RDI
            call ftell@PLT

            cmp RAX,-1
            je .L_425e90

            xor ESI,ESI
            mov EDX,2
            mov RDI,RBX
            mov RBP,RAX
            call fseek@PLT

            test EAX,EAX
            jne .L_425e90

            mov RDI,RBX
            call ftell@PLT

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            mov R12,RAX
            call fseek@PLT
.L_425e80:

            mov RAX,R12
            pop RBX
.L_425e84:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425e90:

            mov R12,-1
            jmp .L_425e80
.L_425e99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ea0:

            test RDI,RDI
            je .L_425f10

            mov RAX,QWORD PTR [RDI+24]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+32]
            mov QWORD PTR [RSI+16],RAX
            mov RAX,QWORD PTR [RDI+40]
            mov QWORD PTR [RSI+24],RAX
            lea RAX,QWORD PTR [RIP+.L_425be0]
            mov QWORD PTR [RSI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_425c20]
            mov QWORD PTR [RSI+32],RAX
            lea RAX,QWORD PTR [RIP+.L_425b80]
            mov QWORD PTR [RSI+40],RAX
            mov RAX,QWORD PTR [RDI+48]
            test RAX,RAX
            je .L_425eea

            mov QWORD PTR [RSI+8],RAX
.L_425eea:

            mov RAX,QWORD PTR [RDI+56]
            test RAX,RAX
            je .L_425ef7

            mov QWORD PTR [RSI+32],RAX
.L_425ef7:

            mov RAX,QWORD PTR [RDI+64]
            test RAX,RAX
            je .L_425f04

            mov QWORD PTR [RSI+40],RAX
.L_425f04:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425f10:

            movdqa XMM0,XMMWORD PTR [RIP+.L_641b20]
            movups XMMWORD PTR [RSI],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_641b30]
            movups XMMWORD PTR [RSI+16],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_641b40]
            movups XMMWORD PTR [RSI+32],XMM0
            ret 
.L_425f34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425f40:

            test RSI,RSI
            je .L_425f90

            cmp QWORD PTR [RSI+24],0
            je .L_425f80

            cmp QWORD PTR [RSI+32],0
            je .L_425f80

            cmp QWORD PTR [RSI+40],0
            je .L_425f80

            push RBX
            mov RBX,RSI
            mov ESI,4
            call .L_406d40

            test RAX,RAX
            je .L_425f88

            mov RSI,RAX
            mov RDI,RBX
            call .L_425ea0

            mov EAX,1
            pop RBX
            ret 

            nop
.L_425f80:

            xor EAX,EAX
.L_425f82:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425f88:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425f90:

            test RDI,RDI
            mov EAX,1
            je .L_425f82

            lea RDX,QWORD PTR [RDI+136]
            mov QWORD PTR [RDI+48],RDX
            ret 
.L_425fa6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425fb0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            add RSP,8
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_425fd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425fe0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,4
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_426006:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426010:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,4
            call .L_406d40

            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+32]
            jmp RAX
.L_426038:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426040:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov ESI,4
            call .L_406d40

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+24]
            jmp RAX
.L_42606a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_426070:

            test RSI,RSI
            je .L_426080

            jmp .L_425cf0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426080:

            ret 
.L_426082:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426090:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov ESI,4
            call .L_406d40

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            mov RAX,QWORD PTR [RAX+40]
            jmp RAX
.L_4260ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4260c0:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBP,RDI
            mov ESI,4
            call .L_406d40

            mov ESI,16
            mov RDI,RBP
            call QWORD PTR [RAX+8]

            test RAX,RAX
            mov RBX,RAX
            je .L_4260fe

            mov QWORD PTR [RAX],RBP
            mov ESI,R12D
            mov RDI,RBP
            call .L_425d20

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_426110
.L_4260fe:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426110:

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_425cf0

            jmp .L_4260fe
.L_42611f:

            nop
.L_426120:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,QWORD PTR [RDI+8]
            test RBX,RBX
            je .L_426159
.L_426130:

            mov RSI,QWORD PTR [RBX]
            mov R12,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBP]
            test RSI,RSI
            je .L_426149

            call .L_425cf0

            mov RDI,QWORD PTR [RBP]
.L_426149:

            mov RSI,RBX
            mov RBX,R12
            call .L_425cf0

            test R12,R12
            jne .L_426130
.L_426159:

            pop RBX
            mov RSI,RBP
            mov RDI,QWORD PTR [RBP]
            pop RBP
            pop R12
            jmp .L_425cf0
.L_426169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426170:

            push RBP
            push RBX
            lea EBX,DWORD PTR [RSI+7]
            sub RSP,8
.L_426179:

            mov RDX,QWORD PTR [RDI+8]
            and EBX,4294967288
            mov EAX,DWORD PTR [RDX+8]
            mov ECX,DWORD PTR [RDX+12]
            mov ESI,EAX
            sub ESI,ECX
            cmp ESI,EBX
            jae .L_4261b9

            add EAX,EAX
            mov RBP,RDI
            mov RDI,QWORD PTR [RDI]
            cmp EBX,EAX
            cmovae EAX,EBX
            mov ESI,EAX
            call .L_425d20

            test RAX,RAX
            mov RDX,RAX
            je .L_4261d0

            mov RAX,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [RDX+12]
            mov QWORD PTR [RDX+16],RAX
            mov QWORD PTR [RBP+8],RDX
.L_4261b9:

            mov EAX,ECX
            add RAX,QWORD PTR [RDX]
            add EBX,ECX
            mov DWORD PTR [RDX+12],EBX
.L_4261c3:

            add RSP,8
.L_4261c7:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4261d0:

            xor EAX,EAX
            jmp .L_4261c3
.L_4261d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4261e0:

            test RSI,RSI
            je .L_426220

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,EDX
            mov EBX,EDX
            sub RSP,8
            call .L_426170

            test RAX,RAX
            mov RCX,RAX
            je .L_42620f

            mov EDX,EBX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov RCX,RAX
.L_42620f:

            add RSP,8
            mov RAX,RCX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426220:

            xor ECX,ECX
            mov RAX,RCX
            ret 
.L_426226:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426230:

            test RDI,RDI
            push RBX
            je .L_426268

            test RSI,RSI
            mov RBX,RDI
            jne .L_426250

            lea RAX,QWORD PTR [RDI+136]
            mov QWORD PTR [RDI+48],RAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426250:

            mov RSI,QWORD PTR [RSI+48]
            mov RDI,QWORD PTR [RDI+8]
            mov EDX,48
            call .L_4261e0

            mov QWORD PTR [RBX+48],RAX
            pop RBX
            ret 
.L_426268:

            lea RCX,QWORD PTR [RIP+.L_426620]
            lea RSI,QWORD PTR [RIP+.L_4265f7]
            lea RDI,QWORD PTR [RIP+.L_426600]
            mov EDX,189
            call __assert_fail@PLT
.L_426287:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426290:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_641ac0]
            mov RBX,RDI
            je .L_4262a4

            mov RAX,QWORD PTR [RSI+24]
.L_4262a4:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            mov RSI,RAX
            call .L_4261e0

            mov QWORD PTR [RBX+24],RAX
            pop RBX
            ret 
.L_4262bb:

            nop
            nop
            nop
            nop
            nop
.L_4262c0:

            push RBX
            mov RBX,RSI
            mov ESI,1
            call .L_406d40

            test RAX,RAX
            je .L_4262e4

            lea RSI,QWORD PTR [RIP+.L_425b10]
            test RBX,RBX
            cmovne RSI,RBX
            mov QWORD PTR [RAX],RSI
.L_4262e4:

            pop RBX
            ret 
.L_4262e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4262f0:

            push RBX
            mov ESI,1
            mov RBX,RDI
            xor EDI,EDI
            call .L_406d40

            test RAX,RAX
            je .L_426316

            lea RDI,QWORD PTR [RIP+.L_425b10]
            test RBX,RBX
            cmovne RDI,RBX
            mov QWORD PTR [RAX],RDI
.L_426316:

            pop RBX
            ret 
.L_426318:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426320:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov RBX,RDI
            sub RSP,1248
.L_426331:

            test AL,AL
            mov QWORD PTR [RSP+1096],RCX
            mov QWORD PTR [RSP+1104],R8
            mov QWORD PTR [RSP+1112],R9
            je .L_42638d

            movaps XMMWORD PTR [RSP+1120],XMM0
            movaps XMMWORD PTR [RSP+1136],XMM1
            movaps XMMWORD PTR [RSP+1152],XMM2
            movaps XMMWORD PTR [RSP+1168],XMM3
            movaps XMMWORD PTR [RSP+1184],XMM4
            movaps XMMWORD PTR [RSP+1200],XMM5
            movaps XMMWORD PTR [RSP+1216],XMM6
            movaps XMMWORD PTR [RSP+1232],XMM7
.L_42638d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+1280]
            lea RBP,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+8]
            mov R8,RDX
            mov ECX,1024
            mov EDX,1
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+1072]
            mov ESI,1023
            mov RDI,RBP
            mov DWORD PTR [RSP+8],24
            mov DWORD PTR [RSP+12],48
            mov QWORD PTR [RSP+24],RAX
            call __vsnprintf_chk@PLT

            mov ESI,1
            mov RDI,RBX
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42640e

            mov RDX,RBP
            mov ESI,R12D
            mov RDI,RBX
            call RAX
.L_42640e:

            mov RAX,QWORD PTR [RSP+1064]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42642d

            add RSP,1248
.L_426428:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42642d:

            call __stack_chk_fail@PLT
.L_426432:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426440:

            push RBX
            mov RBX,RDI
            mov EDI,ESI
            call .L_405350

            mov BYTE PTR [RBX+4],0
            mov DWORD PTR [RBX],EAX
            pop RBX
            ret 
.L_426453:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426460:

            test RSI,RSI
            push RBX
            lea RAX,QWORD PTR [RIP+.L_641aa0]
            mov RBX,RDI
            je .L_426477

            mov RAX,QWORD PTR [RSI+128]
.L_426477:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,32
            mov RSI,RAX
            call .L_4261e0

            mov QWORD PTR [RBX+128],RAX
            pop RBX
            ret 
.L_426491:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4264a0:

            push RBX
.L_4264a1:

            mov RBX,RSI
            mov ESI,14
            call .L_406d40

            test RBX,RBX
            mov RDX,RAX
            je .L_4264f8

            mov RCX,QWORD PTR [RBX+24]
            xor EAX,EAX
            test RCX,RCX
            je .L_4264f0

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_4264f0

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_4264f0

            mov R8,QWORD PTR [RBX+48]
            test R8,R8
            je .L_4264f0

            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDX+8],RSI
            mov EAX,1
            mov QWORD PTR [RDX+16],RDI
            mov QWORD PTR [RDX+24],R8
.L_4264f0:

            pop RBX
.L_4264f1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4264f8:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov EAX,1
            pop RBX
            ret 
.L_42651e:

            nop
            nop
.L_426520:

            push RBX
            mov ESI,14
            mov RBX,RDI
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42653c

            mov RDI,RBX
            pop RBX
            jmp RAX
.L_42653c:

            xor EAX,EAX
            pop RBX
            ret 
.L_426540:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_426570

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426570:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_426577:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426580:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            je .L_4265b0

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4265b0:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_4265bc:

            nop
            nop
            nop
            nop
.L_4265c0:

            push RBP
            push RBX
            mov RBP,RSI
            mov ESI,14
            mov RBX,RDI
            sub RSP,8
            call .L_406d40

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            je .L_4265f0

            add RSP,8
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4265f0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4265f7:
          .string "cmserr.c"
.L_426600:
          .string "(ctx != ((void *)0))"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_426620:
          .string "_cmsAllocMemPluginChunk"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426640:

            sub RSP,24
.L_426644:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+8]
            sub EAX,1
            js .L_4266a9

            cdqe 
            lea RSI,QWORD PTR [RAX*8]
            sub RSI,RAX
            shl RSI,4
            add RSI,QWORD PTR [RDI+16]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426678:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RSI]
            cvtss2sd XMM2,XMM1
            ucomisd XMM0,XMM2
            jbe .L_42669d

            pxor XMM4,XMM4
            movss XMM3,DWORD PTR [RSI+4]
            cvtss2sd XMM4,XMM3
            ucomisd XMM4,XMM0
            jae .L_4266d0
.L_42669d:

            sub RAX,1
            sub RSI,112
            test EAX,EAX
            jns .L_426678
.L_4266a9:

            movsd XMM0,QWORD PTR [RIP+.L_428f78]
.L_4266b1:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_426757

            add RSP,24
.L_4266c9:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4266d0:

            mov ECX,DWORD PTR [RSI+8]
            lea RDX,QWORD PTR [RAX*8]
            test ECX,ECX
            je .L_426710

            mov RDX,QWORD PTR [RDI+32]
            add RSI,16
            mov EDI,ECX
            call QWORD PTR [RDX+RAX*8]
.L_4266ec:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_428ff0]
            ucomisd XMM1,QWORD PTR [RIP+.L_428f80]
            jbe .L_4266b1

            movsd XMM0,QWORD PTR [RIP+.L_428f70]
            jmp .L_4266b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426710:

            subsd XMM0,XMM2
            mov RAX,QWORD PTR [RDI+24]
            mov RCX,QWORD PTR [RSI+104]
            subss XMM3,XMM1
            mov RSI,RSP
            lea RDI,QWORD PTR [RSP+4]
            add RAX,RDX
            cvtsd2ss XMM0,XMM0
            mov RDX,QWORD PTR [RAX]
            divss XMM0,XMM3
            mov QWORD PTR [RDX+120],RCX
            mov RAX,QWORD PTR [RAX]
            mov RDX,RAX
            movss DWORD PTR [RSP+4],XMM0
            call QWORD PTR [RAX+128]

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSP]
            jmp .L_4266ec
.L_426757:

            call __stack_chk_fail@PLT
.L_42675c:

            nop
            nop
            nop
            nop
.L_426760:

            push RBX
            sub RSP,16
.L_426765:

            cmp EDI,-1
            je .L_426bc0

            movapd XMM2,XMM0
            mov RBX,RSI
            jle .L_4267e0

            cmp EDI,5
            je .L_4268c0

            jg .L_426848

            cmp EDI,2
            je .L_426968

            jle .L_426a50

            cmp EDI,3
            je .L_426a98

            cmp EDI,4
            jne .L_4267d0

            ucomisd XMM0,QWORD PTR [RSI+32]
            jb .L_426cf8

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            pxor XMM4,XMM4
            addsd XMM0,XMM2
            ucomisd XMM0,XMM4
            ja .L_4269a6

            nop
            nop
            nop
            nop
            nop
            nop
.L_4267d0:

            pxor XMM0,XMM0
.L_4267d4:

            add RSP,16
.L_4267d8:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4267e0:

            cmp EDI,-6
            je .L_4269b8

            jle .L_4269f0

            cmp EDI,-4
            je .L_426930

            jl .L_426b80

            cmp EDI,-3
            je .L_426b50

            cmp EDI,-2
            jne .L_4267d0

            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            ja .L_4267d0

            movsd XMM1,QWORD PTR [RIP+.L_428f90]
            movsd QWORD PTR [RSP],XMM4
            divsd XMM1,QWORD PTR [RSI]
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RSP]
            divsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM4,XMM0
            ja .L_4267d0

            jmp .L_4267d4

            nop
            nop
            nop
            nop
            nop
.L_426848:

            cmp EDI,7
            je .L_4268f8

            jl .L_426af0

            cmp EDI,8
            je .L_426b18

            cmp EDI,108
            jne .L_4267d0

            movsd XMM3,QWORD PTR [RIP+.L_428f90]
            movapd XMM4,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM3
            divsd XMM4,QWORD PTR [RSI]
            subsd XMM0,XMM2
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM4
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            add RSP,16
.L_4268a4:

            subsd XMM3,XMM0
            pop RBX
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            jmp pow@PLT
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4268c0:

            ucomisd XMM0,QWORD PTR [RSI+32]
            jb .L_426ce0

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            addsd XMM0,XMM2
            ucomisd XMM0,QWORD PTR [RIP+.L_428f88]
            ja .L_426d70

            movsd XMM0,QWORD PTR [RSI+40]
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4268f8:

            movsd XMM6,QWORD PTR [RSI+16]
            movsd XMM1,QWORD PTR [RSI]
            movsd QWORD PTR [RSP],XMM6
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RBX+24]
            ucomisd XMM1,XMM0
            jb .L_426ca0

            movsd XMM0,QWORD PTR [RBX+32]
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426930:

            movsd XMM3,QWORD PTR [RSI+8]
            pxor XMM0,XMM0
            mulsd XMM3,QWORD PTR [RSI+32]
            addsd XMM3,QWORD PTR [RSI+16]
            ucomisd XMM0,XMM3
            jbe .L_426cc0
.L_42694d:

            ucomisd XMM2,XMM0
            jae .L_4269cb

            divsd XMM2,QWORD PTR [RBX+24]
            movapd XMM0,XMM2
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426968:

            movsd XMM4,QWORD PTR [RSI+16]
            movsd XMM1,QWORD PTR [RSI+8]
            movapd XMM3,XMM4
            xorpd XMM3,XMMWORD PTR [RIP+.L_429000]
            divsd XMM3,XMM1
            ucomisd XMM0,XMM3
            jb .L_4267d0

            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            addsd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM0,XMM4
            jbe .L_4267d0
.L_4269a6:

            movsd XMM1,QWORD PTR [RBX]
            add RSP,16
.L_4269ae:

            pop RBX
            jmp pow@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4269b8:

            subsd XMM2,QWORD PTR [RSI+24]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            ja .L_4267d0
.L_4269cb:

            movsd XMM1,QWORD PTR [RIP+.L_428f90]
            movapd XMM0,XMM2
            divsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,QWORD PTR [RBX+8]
            jmp .L_4267d4
          .byte 0x90
.L_4269f0:

            cmp EDI,-8
            je .L_426c50

            jg .L_426c00

            cmp EDI,-108
            jne .L_4267d0

            movsd XMM3,QWORD PTR [RSI]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            movsd XMM7,QWORD PTR [RIP+.L_428f90]
            movsd XMM3,QWORD PTR [RSP]
            subsd XMM7,XMM0
            movapd XMM1,XMM3
            movapd XMM0,XMM7
            call pow@PLT

            movsd XMM5,QWORD PTR [RIP+.L_428f90]
            subsd XMM5,XMM0
            movapd XMM0,XMM5
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426a50:

            cmp EDI,1
            jne .L_4267d0

            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RSI]
            ucomisd XMM4,XMM0
            jbe .L_426d60

            subsd XMM1,QWORD PTR [RIP+.L_428f90]
            movsd XMM2,QWORD PTR [RIP+.L_428f98]
            andpd XMM1,XMMWORD PTR [RIP+.L_428ff0]
            ucomisd XMM2,XMM1
            ja .L_4267d4

            jmp .L_4267d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426a98:

            movsd XMM5,QWORD PTR [RSI+16]
            movsd XMM3,QWORD PTR [RSI+8]
            movapd XMM1,XMM5
            pxor XMM4,XMM4
            xorpd XMM1,XMMWORD PTR [RIP+.L_429000]
            movapd XMM6,XMM4
            divsd XMM1,XMM3
            maxsd XMM6,XMM1
            ucomisd XMM0,XMM6
            jb .L_426b08

            mulsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM5
            ucomisd XMM0,XMM4
            jbe .L_4267d0
.L_426ada:

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            addsd XMM0,QWORD PTR [RBX+24]
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426af0:

            mulsd XMM2,QWORD PTR [RSI+8]
            movsd XMM0,QWORD PTR [RSI+16]
            pxor XMM1,XMM1
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jbe .L_426ada
.L_426b08:

            movsd XMM0,QWORD PTR [RBX+24]
            jmp .L_4267d4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426b18:

            movsd XMM1,QWORD PTR [RSI+16]
            movsd XMM7,QWORD PTR [RSI]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP],XMM7
            addsd XMM1,QWORD PTR [RSI+24]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426b50:

            movsd XMM0,QWORD PTR [RSI+24]
            ucomisd XMM2,XMM0
            jb .L_426d28

            subsd XMM2,XMM0
            pxor XMM4,XMM4
            ucomisd XMM2,XMM4
            jbe .L_4267d0

            jmp .L_4269cb
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426b80:

            movsd XMM1,QWORD PTR [RSI+24]
            movsd XMM0,QWORD PTR [RSI+32]
            movsd XMM3,QWORD PTR [RSI+48]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jb .L_426d10

            subsd XMM2,QWORD PTR [RSI+40]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            ja .L_4267d0

            jmp .L_4269cb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426bc0:

            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [RSI]
            ucomisd XMM4,XMM0
            jbe .L_426d40

            subsd XMM2,QWORD PTR [RIP+.L_428f90]
            movsd XMM1,QWORD PTR [RIP+.L_428f98]
            andpd XMM2,XMMWORD PTR [RIP+.L_428ff0]
            ucomisd XMM1,XMM2
            ja .L_4267d4

            jmp .L_4267d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c00:

            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_428f90]
            subsd XMM1,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RIP+.L_428fa0]
            divsd XMM3,QWORD PTR [RSI]
            divsd XMM1,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP],XMM3
            call pow@PLT

            subsd XMM0,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM3
            divsd XMM0,QWORD PTR [RBX+16]
            add RSP,16
.L_426c43:

            pop RBX
            jmp pow@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c50:

            subsd XMM2,QWORD PTR [RSI+32]
            pxor XMM4,XMM4
            ucomisd XMM4,XMM2
            movapd XMM0,XMM2
            ja .L_4267d0

            divsd XMM0,QWORD PTR [RSI]
            call log@PLT

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            call log@PLT

            movsd XMM2,QWORD PTR [RSP]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+24]
            divsd XMM0,QWORD PTR [RBX+16]
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426ca0:

            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP],XMM5
            call log10@PLT

            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            jmp .L_4267d4
          .byte 0x66
          .byte 0x90
.L_426cc0:

            movsd XMM1,QWORD PTR [RSI]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_42694d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426ce0:

            mulsd XMM2,QWORD PTR [RSI+24]
            movsd XMM0,QWORD PTR [RSI+48]
            addsd XMM0,XMM2
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426cf8:

            mulsd XMM2,QWORD PTR [RSI+24]
            movapd XMM0,XMM2
            jmp .L_4267d4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d10:

            subsd XMM2,XMM3
            movapd XMM0,XMM2
            divsd XMM0,XMM1
            jmp .L_4267d4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d28:

            movsd XMM0,QWORD PTR [RSI+16]
            xorpd XMM0,XMMWORD PTR [RIP+.L_429000]
            divsd XMM0,QWORD PTR [RSI+8]
            jmp .L_4267d4
          .byte 0x90
.L_426d40:

            movsd XMM1,QWORD PTR [RIP+.L_428f90]
            add RSP,16
.L_426d4c:

            pop RBX
            divsd XMM1,XMM2
            jmp pow@PLT
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426d60:

            add RSP,16
            pop RBX
            jmp pow@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426d70:

            movsd XMM1,QWORD PTR [RSI]
            call pow@PLT

            addsd XMM0,QWORD PTR [RBX+40]
            jmp .L_4267d4
.L_426d83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426d90:

            push RBP
            push RBX
            mov EBX,ESI
            mov ESI,6
            mov RBP,RDX
            sub RSP,8
.L_426da0:

            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            mov R9D,EBX
            sar R9D,31
            test RAX,RAX
            je .L_426dfd

            nop
            nop
            nop
            nop
.L_426db8:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jle .L_426df1

            mov ESI,R9D
            xor ESI,EBX
            sub ESI,R9D
            cmp ESI,DWORD PTR [RAX+4]
            je .L_426e60

            lea EDI,DWORD PTR [RDX-1]
            mov ECX,1
            add RDI,1
            jmp .L_426de9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426de0:

            add RCX,1
            cmp ESI,DWORD PTR [RAX+RCX*4]
            je .L_426e68
.L_426de9:

            cmp RCX,RDI
            mov R8D,ECX
            jne .L_426de0
.L_426df1:

            mov RAX,QWORD PTR [RAX+176]
            test RAX,RAX
            jne .L_426db8
.L_426dfd:

            mov R8D,EBX
            lea RAX,QWORD PTR [RIP+.L_641b60]
            sar R8D,31
            nop
            nop
            nop
            nop
            nop
.L_426e10:

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            jle .L_426e48

            mov ESI,R8D
            xor ESI,EBX
            sub ESI,R8D
            cmp DWORD PTR [RAX+4],ESI
            je .L_426e78

            lea EDI,DWORD PTR [RDX-1]
            mov ECX,1
            add RDI,1
            jmp .L_426e41
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426e38:

            add RCX,1
            cmp DWORD PTR [RAX+RCX*4],ESI
            je .L_426e80
.L_426e41:

            cmp RCX,RDI
            mov EDX,ECX
            jne .L_426e38
.L_426e48:

            mov RAX,QWORD PTR [RAX+176]
            test RAX,RAX
            jne .L_426e10
.L_426e54:

            add RSP,8
.L_426e58:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426e60:

            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_426e68:

            test RBP,RBP
            je .L_426e54

            mov DWORD PTR [RBP],R8D
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_426e78:

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e80:

            test RBP,RBP
            je .L_426e54

            mov DWORD PTR [RBP],EDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_426e8f:

            nop
.L_426e90:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_426ea1:

            cmp ESI,65530
            mov QWORD PTR [RSP],RCX
            ja .L_427170

            test ESI,ESI
            mov EBP,ESI
            mov R13D,EDX
            mov R15,R8
            jg .L_426ec5

            test EDX,EDX
            jle .L_427150
.L_426ec5:

            mov ESI,56
            mov RDI,R12
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_427064

            test R13D,R13D
            jg .L_427080

            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+32],0
.L_426ef7:

            test EBP,EBP
            mov DWORD PTR [RBX+8],R13D
            jne .L_427100

            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+40],0
.L_426f12:

            mov RBP,QWORD PTR [RSP]
            test RBP,RBP
            je .L_427000

            test R13D,R13D
            jle .L_427000

            mov EDX,8
            mov ESI,R13D
            mov RDI,R12
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_427024

            xor R15D,R15D
            jmp .L_426fb5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426f50:

            mov RAX,QWORD PTR [RBP+104]
            mov R10,QWORD PTR [RBX+16]
            add R10,R14
            test RAX,RAX
            je .L_426fed

            mov ECX,DWORD PTR [RBP+96]
            mov RSI,RAX
            mov RDI,R12
            mov QWORD PTR [RSP+8],R10
            lea EDX,DWORD PTR [RCX*4]
            call .L_426090

            mov R10,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RBP+8]
            mov QWORD PTR [R10+104],RAX
.L_426f8a:

            xor EDX,EDX
            mov RDI,R12
            call .L_426d90

            test RAX,RAX
            je .L_426fa8

            mov RDX,QWORD PTR [RAX+168]
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RAX+R15*8],RDX
.L_426fa8:

            add R15,1
            add RBP,112
            cmp R13D,R15D
            jle .L_427000
.L_426fb5:

            mov EAX,DWORD PTR [RBP+8]
            mov R14,RBP
            sub R14,QWORD PTR [RSP]
            test EAX,EAX
            je .L_4270c8
.L_426fc7:

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,RBP
            mov EDX,112
            add RDI,R14
            call memmove@PLT

            mov ESI,DWORD PTR [RBP+8]
            test ESI,ESI
            je .L_426f50

            mov R10,QWORD PTR [RBX+16]
            add R10,R14
.L_426fed:

            mov QWORD PTR [R10+104],0
            jmp .L_426f8a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427000:

            mov ESI,DWORD PTR [RBX+40]
            mov R8,QWORD PTR [RBX+48]
            xor R9D,R9D
            mov ECX,1
            mov EDX,1
            mov RDI,R12
            call .L_42d390

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            jne .L_427064
.L_427024:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_427035
.L_42702d:

            mov RDI,R12
            call .L_426070
.L_427035:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_427046

            mov RDI,R12
            call .L_426070
.L_427046:

            mov RSI,QWORD PTR [RBX+48]
            test RSI,RSI
            je .L_427057

            mov RDI,R12
            call .L_426070
.L_427057:

            mov RSI,RBX
            mov RDI,R12
            xor EBX,EBX
            call .L_426070
.L_427064:

            add RSP,24
.L_427068:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427080:

            mov EDX,112
            mov ESI,R13D
            mov RDI,R12
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_427035

            mov EDX,8
            mov ESI,R13D
            mov RDI,R12
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            jne .L_426ef7

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_42702d

            jmp .L_427046
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4270c8:

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RBP+96]
            mov R9D,1
            xor R8D,R8D
            mov ECX,1
            mov EDX,1
            mov RDI,R12
            lea R11,QWORD PTR [RAX+R15*8]
            mov QWORD PTR [RSP+8],R11
            call .L_42d390

            mov R11,QWORD PTR [RSP+8]
            mov QWORD PTR [R11],RAX
            jmp .L_426fc7
.L_427100:

            mov EDX,2
            mov ESI,EBP
            mov RDI,R12
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_427024

            test R15,R15
            mov DWORD PTR [RBX+40],EBP
            je .L_426f12

            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_427130:

            movzx ECX,WORD PTR [R15+RDX*2]
            mov WORD PTR [RAX+RDX*2],CX
            add RDX,1
            cmp EBP,EDX
            jg .L_427130

            jmp .L_426f12
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427150:

            lea RDX,QWORD PTR [RIP+.L_428b10]
.L_427157:

            mov ESI,2
            mov RDI,R12
            xor EAX,EAX
            call .L_426320

            xor EBX,EBX
            jmp .L_427064
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427170:

            lea RDX,QWORD PTR [RIP+.L_428ad8]
            jmp .L_427157
.L_427179:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427180:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_42718d:

            mov RDI,QWORD PTR [RDI]
            mov R12,QWORD PTR [RDI]
            call .L_42d3f0

            mov RSI,QWORD PTR [RBX+48]
            test RSI,RSI
            je .L_4271a9

            mov RDI,R12
            call .L_426070
.L_4271a9:

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            je .L_427216

            mov EAX,DWORD PTR [RBX+8]
            test EAX,EAX
            je .L_427202

            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
.L_4271c0:

            mov R13D,EBP
            lea RAX,QWORD PTR [R13*8]
            sub RAX,R13
            shl RAX,4
            mov RSI,QWORD PTR [RSI+RAX*1+104]
            test RSI,RSI
            je .L_4271e4

            mov RDI,R12
            call .L_426070
.L_4271e4:

            mov RAX,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RAX+R13*8]
            test RDI,RDI
            je .L_4271f6

            call .L_42d3f0
.L_4271f6:

            add EBP,1
            cmp EBP,DWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX+16]
            jb .L_4271c0
.L_427202:

            mov RDI,R12
            call .L_426070

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_426070
.L_427216:

            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            je .L_427227

            mov RDI,R12
            call .L_426070
.L_427227:

            add RSP,8
.L_42722b:

            mov RSI,RBX
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_426070
.L_42723c:

            nop
            nop
            nop
            nop
.L_427240:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_427248:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_42735b

            test RSI,RSI
            mov R12,RDI
            je .L_427320

            mov RAX,QWORD PTR [RSI+64]
            mov QWORD PTR [RSP],0
            test RAX,RAX
            je .L_42733c

            mov RBX,QWORD PTR [RAX]
            test RBX,RBX
            je .L_4272e7

            xor EBP,EBP
            jmp .L_42729f
          .byte 0x66
          .byte 0x90
.L_427290:

            mov RBX,QWORD PTR [RBX+176]
            mov RBP,RAX
            test RBX,RBX
            je .L_4272e7
.L_42729f:

            mov RDI,QWORD PTR [R12+8]
            mov EDX,184
            mov RSI,RBX
            call .L_4261e0

            test RAX,RAX
            je .L_4272fe

            test RBP,RBP
            mov QWORD PTR [RAX+176],0
            je .L_4272cd

            mov QWORD PTR [RBP+176],RAX
.L_4272cd:

            cmp QWORD PTR [RSP],0
            jne .L_427290

            mov RBX,QWORD PTR [RBX+176]
            mov QWORD PTR [RSP],RAX
            mov RBP,RAX
            test RBX,RBX
            jne .L_42729f
.L_4272e7:

            mov RDI,QWORD PTR [R12+8]
            mov RSI,RSP
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+64],RAX
.L_4272fe:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42737a

            add RSP,16
.L_427312:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427320:

            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_641d40]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [R12+64],RAX
            jmp .L_4272fe
.L_42733c:

            lea RCX,QWORD PTR [RIP+.L_428f30]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c47]
            mov EDX,78
            call __assert_fail@PLT
.L_42735b:

            lea RCX,QWORD PTR [RIP+.L_428f50]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c32]
            mov EDX,108
            call __assert_fail@PLT
.L_42737a:

            call __stack_chk_fail@PLT
.L_42737f:

            nop
.L_427380:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov ESI,6
            mov RBP,RDI
            sub RSP,8
.L_427395:

            call .L_406d40

            test RBX,RBX
            mov R13,RAX
            je .L_427420

            mov RDI,RBP
            mov ESI,184
            call .L_406970

            mov RBP,RAX
            xor EAX,EAX
            test RBP,RBP
            je .L_42740d

            movsxd R12,DWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX+192]
            mov QWORD PTR [RBP+168],RAX
            cmp R12D,20
            jg .L_427440

            mov DWORD PTR [RBP],R12D
            shl R12,2
.L_4273d9:

            lea RSI,QWORD PTR [RBX+28]
            lea RDI,QWORD PTR [RBP+4]
            mov RDX,R12
            call memmove@PLT

            lea RSI,QWORD PTR [RBX+108]
            lea RDI,QWORD PTR [RBP+84]
            mov RDX,R12
            call memmove@PLT

            mov RAX,QWORD PTR [R13]
            mov QWORD PTR [RBP+176],RAX
            mov QWORD PTR [R13],RBP
            mov EAX,1
.L_42740d:

            add RSP,8
.L_427411:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427420:

            mov QWORD PTR [RAX],0
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427440:

            mov DWORD PTR [RBP],20
            mov R12D,80
            jmp .L_4273d9
.L_42744f:

            nop
.L_427450:

            test RDI,RDI
            je .L_427459

            mov EAX,DWORD PTR [RDI+40]
            ret 
.L_427459:

            lea RCX,QWORD PTR [RIP+.L_428f00]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8
            mov EDX,618
            call __assert_fail@PLT
.L_42747c:

            nop
            nop
            nop
            nop
.L_427480:

            test RDI,RDI
            je .L_42748a

            mov RAX,QWORD PTR [RDI+48]
            ret 
.L_42748a:

            lea RCX,QWORD PTR [RIP+.L_428ee0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8
            mov EDX,624
            call __assert_fail@PLT
.L_4274ad:

            nop
            nop
            nop
.L_4274b0:

            mov R8,RDX
            xor ECX,ECX
            xor EDX,EDX
            jmp .L_426e90
.L_4274bc:

            nop
            nop
            nop
            nop
.L_4274c0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4274ca:

            test RDX,RDX
            je .L_4275d8

            cmp ESI,1
            mov EBP,4096
            je .L_4275a0
.L_4274e1:

            xor R8D,R8D
            mov RCX,RDX
            mov EDX,ESI
            mov ESI,EBP
            call .L_426e90

            test RAX,RAX
            mov R13,RAX
            je .L_42758f

            pxor XMM4,XMM4
            sub EBP,1
            xor EBX,EBX
            mov R12D,4294967295
            cvtsi2sd XMM4,EBP
            add RBP,1
            movsd QWORD PTR [RSP+8],XMM4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427520:

            pxor XMM0,XMM0
            mov RDI,R13
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RSP+8]
            call .L_426640

            mulsd XMM0,QWORD PTR [RIP+.L_428fb0]
            xor EDX,EDX
            mov RAX,QWORD PTR [R13+48]
            pxor XMM3,XMM3
            lea RAX,QWORD PTR [RAX+RBX*2]
            addsd XMM0,QWORD PTR [RIP+.L_428fb8]
            ucomisd XMM3,XMM0
            jae .L_427583

            ucomisd XMM0,QWORD PTR [RIP+.L_428fb0]
            mov EDX,R12D
            jae .L_427583

            subsd XMM0,QWORD PTR [RIP+.L_428fc0]
            addsd XMM0,QWORD PTR [RIP+.L_428fc8]
            movd EDX,XMM0
            sar EDX,16
            add DX,32767
.L_427583:

            add RBX,1
            mov WORD PTR [RAX],DX
            cmp RBP,RBX
            jne .L_427520
.L_42758f:

            add RSP,24
.L_427593:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4275a0:

            cmp DWORD PTR [RDX+8],1
            jne .L_4274e1

            movsd XMM0,QWORD PTR [RDX+16]
            mov EAX,2
            movsd XMM1,QWORD PTR [RIP+.L_428fa8]
            subsd XMM0,QWORD PTR [RIP+.L_428f90]
            andpd XMM0,XMMWORD PTR [RIP+.L_428ff0]
            ucomisd XMM1,XMM0
            cmova EBP,EAX
            jmp .L_4274e1
.L_4275d8:

            lea RCX,QWORD PTR [RIP+.L_428ec0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c70]
            mov EDX,653
            call __assert_fail@PLT
.L_4275f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427600:

            sub RSP,360
.L_427607:

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_428f90]
            mov DWORD PTR [RSP+208],ESI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+344],RAX
            xor EAX,EAX
            mov EAX,3825698424
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+216],RDX
            mov QWORD PTR [RSP],RAX
            movabs RAX,4575657221408423936
            movsd QWORD PTR [RSP+240],XMM0
            mov QWORD PTR [RSP+112],RAX
            pxor XMM0,XMM0
            movabs RAX,7207877579649318912
            cvtss2sd XMM1,DWORD PTR [RDX]
            mov DWORD PTR [RSP+8],6
            mov QWORD PTR [RSP+224],RAX
            lea EAX,DWORD PTR [RSI-1]
            mov ESI,3
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            movsd QWORD PTR [RSP+40],XMM1
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            mov RDX,RSP
            mov QWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+120],0
            mov DWORD PTR [RSP+232],6
            mov QWORD PTR [RSP+248],0
            movsd QWORD PTR [RSP+264],XMM0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+272],0
            call .L_4274c0

            mov RCX,QWORD PTR [RSP+344]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42770f

            add RSP,360
.L_42770e:

            ret 
.L_42770f:

            call __stack_chk_fail@PLT
.L_427714:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427720:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,ESI
            sub RSP,152
.L_427736:

            lea RDX,QWORD PTR [RSP+12]
            mov DWORD PTR [RSP+12],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            call .L_426d90

            test R13,R13
            je .L_42781d

            test RAX,RAX
            mov RDX,RAX
            je .L_427800

            lea RDI,QWORD PTR [RSP+32]
            xor EAX,EAX
            mov ECX,12
            mov QWORD PTR [RSP+28],0
            mov QWORD PTR [RSP+120],0
            lea RBX,QWORD PTR [RSP+16]

            rep stosq QWORD PTR [RDI]

            movabs RAX,7207877582409664120
            lea RDI,QWORD PTR [RSP+32]
            mov RSI,R13
            mov QWORD PTR [RSP+16],RAX
            mov ECX,96
            mov DWORD PTR [RSP+24],R12D
            movsxd RAX,DWORD PTR [RSP+12]
            mov EDX,DWORD PTR [RDX+RAX*4+84]
            shl EDX,3
            call __memmove_chk@PLT

            mov RDX,RBX
            mov ESI,1
            mov RDI,RBP
            call .L_4274c0
.L_4277d8:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42783c

            add RSP,152
.L_4277f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427800:

            lea RDX,QWORD PTR [RIP+.L_428b50]
            xor EAX,EAX
            mov ECX,R12D
            mov ESI,8
            mov RDI,RBP
            call .L_426320

            xor EAX,EAX
            jmp .L_4277d8
.L_42781d:

            lea RCX,QWORD PTR [RIP+.L_428ea0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c8a]
            mov EDX,731
            call __assert_fail@PLT
.L_42783c:

            call __stack_chk_fail@PLT
.L_427841:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427850:

            sub RSP,24
            mov ESI,1
            lea RDX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            call .L_427720

            add RSP,24
            ret 
.L_42786e:

            nop
            nop
.L_427870:

            test RDI,RDI
            je .L_427880

            jmp .L_427180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427880:

            ret 
.L_427882:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427890:

            test RDI,RDI
            push RBX
.L_427894:

            je .L_4278db

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_4278a6

            call .L_427180
.L_4278a6:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_4278b4

            call .L_427180
.L_4278b4:

            mov RDI,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_4278c2

            call .L_427180
.L_4278c2:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX],0
            pop RBX
.L_4278da:

            ret 
.L_4278db:

            lea RCX,QWORD PTR [RIP+.L_428e80]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428ca2]
            mov EDX,801
            call __assert_fail@PLT
.L_4278fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427900:

            test RDI,RDI
            je .L_427920

            mov RAX,QWORD PTR [RDI]
            mov RCX,QWORD PTR [RDI+16]
            mov EDX,DWORD PTR [RDI+8]
            mov ESI,DWORD PTR [RDI+40]
            mov R8,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RAX]
            jmp .L_426e90
          .byte 0x66
          .byte 0x90
.L_427920:

            xor EAX,EAX
            ret 
.L_427923:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427930:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42793e:

            test RSI,RSI
            je .L_427c7b

            cmp DWORD PTR [RSI+8],1
            mov RAX,QWORD PTR [RSI]
            mov R12D,EDI
            mov RBX,RSI
            mov RDI,QWORD PTR [RAX]
            jne .L_427968

            mov RAX,QWORD PTR [RSI+16]
            mov ESI,DWORD PTR [RAX+8]
            test ESI,ESI
            jg .L_427c3e
.L_427968:

            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            mov ESI,R12D
            call .L_426e90

            test RAX,RAX
            je .L_427b64

            mov R8,QWORD PTR [RBX+48]
            mov EDX,DWORD PTR [RBX+40]
            test R12D,R12D
            movzx EDI,WORD PTR [R8]
            lea R14D,DWORD PTR [RDX-1]
            mov WORD PTR [RSP+12],DI
            movzx EDI,WORD PTR [R8+R14*2]
            mov WORD PTR [RSP+14],DI
            jle .L_427b64

            mov RDX,QWORD PTR [RBX]
            pxor XMM9,XMM9
            sub R12D,1
            movsd XMM12,QWORD PTR [RIP+.L_428fc0]
            movsd XMM11,QWORD PTR [RIP+.L_428fc8]
            lea R11,QWORD PTR [R12+1]
            mov EDX,DWORD PTR [RDX+52]
            cvtsi2sd XMM9,R12D
            pxor XMM7,XMM7
            mov R12,QWORD PTR [RAX+48]
            pxor XMM8,XMM8
            xor R10D,R10D
            pxor XMM5,XMM5
            mov R15D,4294967295
            lea R9D,DWORD PTR [RDX-1]
            lea R13,QWORD PTR [R8+RDX*2]
            mov RBX,RDX
            movsd XMM3,QWORD PTR [RIP+.L_428fb0]
            movsd XMM10,QWORD PTR [RIP+.L_428fb8]
            movapd XMM14,XMM12
            movapd XMM13,XMM11
            mov RBP,R9
            add R9,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a20:

            pxor XMM0,XMM0
            test EBX,EBX
            cvtsi2sd XMM0,R10D
            mulsd XMM0,XMM3
            divsd XMM0,XMM9
            je .L_427b1a

            movzx EDX,WORD PTR [R8]
            cmp DX,WORD PTR [R13]
            jb .L_427b78

            test EBX,EBX
            jle .L_427b1a

            xor ECX,ECX
            jmp .L_427a86
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427a58:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM0,XMM1
            jb .L_427a74

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM1,XMM0
            jae .L_427aae
.L_427a74:

            add RCX,1
            cmp R9,RCX
            je .L_427b1a

            movzx EDX,WORD PTR [R8+RCX*2]
.L_427a86:

            movzx ESI,WORD PTR [R8+RCX*2+2]
            mov EDI,ECX
            cmp EDX,ESI
            jle .L_427a58

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM0,XMM1
            jb .L_427a74

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM1,XMM0
            jb .L_427a74
.L_427aae:

            pxor XMM2,XMM2
            pxor XMM6,XMM6
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            cvtsi2sd XMM2,EDI
            add EDI,1
            cvtsi2sd XMM6,EDX
            cvtsi2sd XMM4,ESI
            cvtsi2sd XMM1,EDI
            pxor XMM15,XMM15
            cvtsi2sd XMM15,R14
            mulsd XMM2,XMM3
            ucomisd XMM6,XMM4
            mulsd XMM1,XMM3
            divsd XMM2,XMM15
            divsd XMM1,XMM15
            jp .L_427af9

            je .L_427bf0
.L_427af9:

            movapd XMM5,XMM1
            subsd XMM5,XMM2
            movapd XMM2,XMM4
            subsd XMM2,XMM6
            divsd XMM5,XMM2
            mulsd XMM4,XMM5
            subsd XMM1,XMM4
            movapd XMM8,XMM1
.L_427b1a:

            mulsd XMM0,XMM5
            xor EDX,EDX
            lea RCX,QWORD PTR [R12+R10*2]
            addsd XMM0,XMM8
            addsd XMM0,XMM10
            ucomisd XMM7,XMM0
            jae .L_427b54

            ucomisd XMM0,XMM3
            mov EDX,R15D
            jae .L_427b54

            subsd XMM0,XMM12
            addsd XMM0,XMM11
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_427b54:

            add R10,1
            mov WORD PTR [RCX],DX
            cmp R11,R10
            jne .L_427a20
.L_427b64:

            add RSP,24
.L_427b68:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427b78:

            test EBP,EBP
            js .L_427b1a

            movsxd RCX,EBP
            jmp .L_427bb4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427b88:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM0,XMM1
            jb .L_427ba8

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM1,XMM0
            jae .L_427aae
.L_427ba8:

            sub RCX,1
            test ECX,ECX
            js .L_427b1a
.L_427bb4:

            movzx EDX,WORD PTR [R8+RCX*2]
            movzx ESI,WORD PTR [R8+RCX*2+2]
            mov EDI,ECX
            cmp EDX,ESI
            jle .L_427b88

            pxor XMM1,XMM1
            cvtsi2sd XMM1,ESI
            ucomisd XMM0,XMM1
            jb .L_427ba8

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            ucomisd XMM1,XMM0
            jb .L_427ba8

            jmp .L_427aae
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427bf0:

            movzx ESI,WORD PTR [RSP+14]
            cmp WORD PTR [RSP+12],SI
            ja .L_427c00

            movapd XMM2,XMM1
.L_427c00:

            addsd XMM2,XMM10
            xor EDX,EDX
            lea RCX,QWORD PTR [R12+R10*2]
            ucomisd XMM7,XMM2
            jae .L_427b54

            ucomisd XMM2,XMM3
            mov EDX,R15D
            jae .L_427b54

            subsd XMM2,XMM14
            addsd XMM2,XMM13
            movq RDX,XMM2
            sar EDX,16
            add DX,32767
            jmp .L_427b54
.L_427c3e:

            xor EDX,EDX
            call .L_426d90

            test RAX,RAX
            jne .L_427c55

            mov RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RAX]
            jmp .L_427968
.L_427c55:

            mov RAX,QWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RAX+8]
            lea RDX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RAX]
            add RSP,24
.L_427c6a:

            neg ESI
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_427720
.L_427c7b:

            lea RCX,QWORD PTR [RIP+.L_428e40]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428cb9]
            mov EDX,921
            call __assert_fail@PLT
.L_427c9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427ca0:

            test RDI,RDI
            je .L_427cb2

            mov RSI,RDI
            mov EDI,4096
            jmp .L_427930
.L_427cb2:

            lea RCX,QWORD PTR [RIP+.L_428e20]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428cd2]
            sub RSP,8
            mov EDX,983
            call __assert_fail@PLT
.L_427cd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427ce0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_427ce7:

            je .L_427d4a

            mov R12,RDI
            mov EDI,DWORD PTR [RDI+40]
            xor EBP,EBP
            test EDI,EDI
            jne .L_427d0c

            jmp .L_427d40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427d00:

            mov EDI,DWORD PTR [R12+40]
            add EBP,1
            cmp EDI,EBP
            jbe .L_427d40
.L_427d0c:

            pxor XMM0,XMM0
            mov EAX,EBP
            mov RDX,QWORD PTR [R12+48]
            cvtsi2sd XMM0,RAX
            movzx EBX,WORD PTR [RDX+RAX*2]
            call .L_42fb40

            movzx EAX,AX
            sub EBX,EAX
            mov EAX,EBX
            cdq 
            xor EAX,EDX
            sub EAX,EDX
            cmp EAX,15
            jle .L_427d00

            pop RBX
.L_427d37:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427d40:

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
.L_427d4a:

            lea RCX,QWORD PTR [RIP+.L_428e00]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428ca2]
            mov EDX,1121
            call __assert_fail@PLT
.L_427d69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427d70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,49272
.L_427d81:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+49256],RAX
            xor EAX,EAX
            test RDI,RDI
            movsd QWORD PTR [RSP+8],XMM0
            je .L_4283b8

            mov RBX,RDI
            call .L_427ce0

            test EAX,EAX
            mov EBP,EAX
            jne .L_428498

            mov RAX,QWORD PTR [RBX]
            mov R14D,DWORD PTR [RBX+40]
            mov RDI,QWORD PTR [RAX]
            cmp R14D,4096
            mov QWORD PTR [RSP+16],RDI
            jg .L_4284a8

            movsxd RAX,R14D
            lea R11,QWORD PTR [RSP+64]
            xor ESI,ESI
            lea R15,QWORD PTR [RAX*4]
            mov ECX,16388
            mov QWORD PTR [RSP+40],RAX
            mov RDI,R11
            mov QWORD PTR [RSP+32],R11
            lea R13,QWORD PTR [RSP+32864]
            mov RDX,R15
            mov QWORD PTR [RSP+48],R15
            call __memset_chk@PLT

            lea R10,QWORD PTR [RSP+16464]
            xor ESI,ESI
            mov ECX,16388
            mov RDX,R15
            mov RDI,R10
            mov QWORD PTR [RSP+24],R10
            call __memset_chk@PLT

            xor ESI,ESI
            mov ECX,16388
            mov RDX,R15
            mov RDI,R13
            call __memset_chk@PLT

            test R14D,R14D
            mov R10,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            jle .L_427e8a

            lea ECX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RBX+48]
            mov EAX,1
            movss XMM1,DWORD PTR [RIP+.L_429010]
            add RCX,2
            nop
            nop
            nop
            nop
            nop
.L_427e68:

            movzx EDX,WORD PTR [RSI+RAX*2-2]
            pxor XMM0,XMM0
            movss DWORD PTR [R11+RAX*4],XMM1
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [R10+RAX*4],XMM0
            add RAX,1
            cmp RCX,RAX
            jne .L_427e68
.L_427e8a:

            mov R15,QWORD PTR [RSP+16]
            mov EDX,4
            mov ESI,4097
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+32],R10
            mov RDI,R15
            call .L_426010

            mov RDI,R15
            mov EDX,4
            mov ESI,4097
            mov R12,RAX
            call .L_426010

            mov RDI,R15
            mov EDX,4
            mov ESI,4097
            mov QWORD PTR [RSP+24],RAX
            xor R15D,R15D
            call .L_426010

            test R12,R12
            mov RCX,QWORD PTR [RSP+24]
            je .L_4284c0

            test RCX,RCX
            je .L_4284c0

            test RAX,RAX
            je .L_4282c1

            pxor XMM4,XMM4
            movss XMM7,DWORD PTR [RIP+.L_433250-41532]
            movss XMM0,DWORD PTR [RSP+68]
            cmp R14D,4
            cvtsd2ss XMM4,QWORD PTR [RSP+8]
            movaps XMM1,XMM4
            mulss XMM7,XMM4
            addss XMM1,XMM0
            mulss XMM0,DWORD PTR [RSP+16468]
            movaps XMM5,XMM7
            divss XMM5,XMM1
            movss DWORD PTR [RCX+4],XMM1
            movaps XMM1,XMM4
            movss DWORD PTR [RSP+32868],XMM0
            movss DWORD PTR [R12+4],XMM5
            movss XMM5,DWORD PTR [RIP+.L_433250-41528]
            divss XMM1,DWORD PTR [RCX+4]
            mulss XMM5,XMM4
            movss DWORD PTR [RAX+4],XMM1
            movss XMM1,DWORD PTR [RSP+72]
            movss XMM2,DWORD PTR [RCX+4]
            movaps XMM3,XMM1
            movaps XMM6,XMM2
            mulss XMM1,DWORD PTR [RSP+16472]
            movss XMM8,DWORD PTR [R12+4]
            addss XMM3,XMM5
            mulss XMM6,XMM8
            mulss XMM6,XMM8
            subss XMM3,XMM6
            movss XMM6,DWORD PTR [RIP+.L_433250-41524]
            mulss XMM6,XMM4
            movss DWORD PTR [RCX+8],XMM3
            movaps XMM10,XMM6
            mulss XMM2,DWORD PTR [R12+4]
            mulss XMM2,DWORD PTR [RAX+4]
            subss XMM10,XMM2
            movaps XMM2,XMM10
            divss XMM2,XMM3
            movss DWORD PTR [R12+8],XMM2
            movaps XMM2,XMM4
            divss XMM2,DWORD PTR [RCX+8]
            movss DWORD PTR [RAX+8],XMM2
            mulss XMM0,DWORD PTR [R12+4]
            subss XMM1,XMM0
            movss DWORD PTR [RSP+32872],XMM1
            jle .L_4280dc

            movss XMM8,DWORD PTR [RIP+.L_433250-41520]
            lea EDX,DWORD PTR [R14-5]
            mov R10,QWORD PTR [RSP+32]
            mulss XMM8,XMM4
            mov R11,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RCX+4]
            lea R15,QWORD PTR [RSP+32860]
            lea RDI,QWORD PTR [RSP+32856]
            lea R8,QWORD PTR [RDX*4+16]
            mov EDX,12
            nop
            nop
            nop
            nop
            nop
.L_428030:

            movss XMM9,DWORD PTR [R12+RDX*1-4]
            add RSI,4
            mulss XMM9,XMM9
            movss XMM3,DWORD PTR [RAX+RDX*1-8]
            movss XMM0,DWORD PTR [R11+RDX*1]
            mulss XMM3,XMM3
            movaps XMM1,XMM0
            mulss XMM0,DWORD PTR [R10+RDX*1]
            movss XMM2,DWORD PTR [RSI]
            mulss XMM9,XMM2
            addss XMM1,XMM8
            mulss XMM3,DWORD PTR [RSI-4]
            subss XMM1,XMM9
            subss XMM1,XMM3
            movaps XMM3,XMM6
            movss DWORD PTR [RSI+4],XMM1
            mulss XMM2,DWORD PTR [R12+RDX*1-4]
            mulss XMM2,DWORD PTR [RAX+RDX*1-4]
            subss XMM3,XMM2
            movaps XMM2,XMM3
            divss XMM2,XMM1
            movaps XMM1,XMM4
            movss DWORD PTR [R12+RDX*1],XMM2
            divss XMM1,DWORD PTR [RSI+4]
            movss DWORD PTR [RAX+RDX*1],XMM1
            movss XMM1,DWORD PTR [R12+RDX*1-4]
            mulss XMM1,DWORD PTR [R15+RDX*1]
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [RAX+RDX*1-8]
            mulss XMM1,DWORD PTR [RDI+RDX*1]
            subss XMM0,XMM1
            movss DWORD PTR [R13+RDX*1],XMM0
            add RDX,4
            cmp R8,RDX
            jne .L_428030
.L_4280dc:

            lea EDI,DWORD PTR [R14-2]
            mov R15,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+8],EDI
            movsxd RDI,EDI
            lea RDX,QWORD PTR [RDI*4]
            lea RSI,QWORD PTR [R15-4]
            mov QWORD PTR [RSP+56],RDI
            movss XMM0,DWORD PTR [RSP+R15*1+60]
            lea R11,QWORD PTR [R12+RDX*1]
            lea R9,QWORD PTR [RDX-4]
            lea R8,QWORD PTR [RCX+RDX*1]
            addss XMM5,XMM0
            lea R10,QWORD PTR [RAX+RDX*1]
            lea RDI,QWORD PTR [R12+RSI*1]
            movss XMM2,DWORD PTR [R11]
            lea R15,QWORD PTR [RAX+R9*1]
            mulss XMM2,XMM2
            mov QWORD PTR [RSP+24],R9
            lea R9,QWORD PTR [RCX+RSI*1]
            movss XMM1,DWORD PTR [R15]
            mulss XMM0,DWORD PTR [RSP+RSI*1+16464]
            mulss XMM1,XMM1
            mov QWORD PTR [RSP+32],RDI
            mulss XMM2,DWORD PTR [R8]
            mulss XMM1,DWORD PTR [RCX+RDX*1-4]
            subss XMM5,XMM2
            subss XMM5,XMM1
            movss DWORD PTR [R9],XMM5
            movss XMM1,DWORD PTR [R8]
            mulss XMM1,DWORD PTR [R11]
            mulss XMM1,DWORD PTR [R10]
            subss XMM7,XMM1
            divss XMM7,XMM5
            movss DWORD PTR [RDI],XMM7
            lea RDI,QWORD PTR [R13+RSI*1]
            lea RSI,QWORD PTR [R13+RDX*1]
            movss XMM1,DWORD PTR [R11]
            mulss XMM1,DWORD PTR [RSI]
            mov R11,QWORD PTR [RSP+24]
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [RSP+R11*1+32864]
            mulss XMM1,DWORD PTR [R15]
            lea R11,QWORD PTR [RDX+4]
            mov R15,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [R12+R11*1]
            movss XMM2,DWORD PTR [RSI]
            mulss XMM2,XMM2
            subss XMM0,XMM1
            movss XMM1,DWORD PTR [R10]
            mulss XMM1,XMM1
            mulss XMM2,DWORD PTR [RCX+RDX*1+4]
            movss DWORD PTR [RDI],XMM0
            movss XMM0,DWORD PTR [RSP+R15*1+64]
            mulss XMM1,DWORD PTR [R8]
            addss XMM4,XMM0
            mov R8,QWORD PTR [RSP+40]
            mulss XMM0,DWORD PTR [RSP+R15*1+16464]
            subss XMM4,XMM2
            subss XMM4,XMM1
            movss DWORD PTR [RCX+R8*4],XMM4
            lea R8,QWORD PTR [R13+RDX*1]
            movss XMM1,DWORD PTR [R10]
            movss XMM2,DWORD PTR [RSP+RDX*1+32868]
            mulss XMM2,DWORD PTR [RSI]
            mov ESI,DWORD PTR [RSP+8]
            test ESI,ESI
            subss XMM0,XMM2
            movss XMM2,DWORD PTR [R8]
            mulss XMM2,XMM1
            subss XMM0,XMM2
            divss XMM0,XMM4
            movss DWORD PTR [RSP+R15*1+32864],XMM0
            movss XMM2,DWORD PTR [RDI]
            divss XMM2,DWORD PTR [R9]
            mov R9,QWORD PTR [RSP+32]
            mulss XMM0,DWORD PTR [R9]
            subss XMM2,XMM0
            movss DWORD PTR [RDI],XMM2
            jle .L_4282bb

            mov RDI,QWORD PTR [RSP+56]
            lea ESI,DWORD PTR [R14-3]
            lea R10,QWORD PTR [R13+4]
            sub RDI,RSI
            mov RSI,RDI
            lea RDI,QWORD PTR [R13+8]
            shl RSI,2
            jmp .L_42828a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428280:

            movss XMM1,DWORD PTR [RAX+RDX*1-4]
            sub RDX,4
.L_42828a:

            movss XMM0,DWORD PTR [R13+RDX*1]
            mulss XMM1,DWORD PTR [RDI+RDX*1]
            divss XMM0,DWORD PTR [RCX+RDX*1]
            movss XMM2,DWORD PTR [R12+RDX*1]
            cmp RSI,RDX
            mulss XMM2,DWORD PTR [R10+RDX*1]
            subss XMM0,XMM2
            subss XMM0,XMM1
            movss DWORD PTR [R13+RDX*1],XMM0
            jne .L_428280
.L_4282bb:

            mov R15D,1
.L_4282c1:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R12
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_426070

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+8]
.L_4282e2:

            test RCX,RCX
            je .L_4282fe

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RCX
            mov QWORD PTR [RSP+8],RAX
            call .L_426070

            mov RAX,QWORD PTR [RSP+8]
.L_4282fe:

            test RAX,RAX
            je .L_428310

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RAX
            call .L_426070
.L_428310:

            test R15D,R15D
            je .L_4283b8

            xor EDI,EDI
            xor ECX,ECX
            cmp R14D,1
            jle .L_4283e8

            lea EDX,DWORD PTR [R14-1]
            mov RAX,QWORD PTR [RSP+40]
            xor EDI,EDI
            xor ECX,ECX
            pxor XMM2,XMM2
            movsxd RDX,EDX
            shl RDX,2
            movss XMM0,DWORD PTR [RSP+RAX*4+32864]
            lea RSI,QWORD PTR [RSP+RDX*1+32860]
            lea RAX,QWORD PTR [R13+RDX*1]
            lea EDX,DWORD PTR [R14-2]
            shl RDX,2
            sub RSI,RDX
            jmp .L_428374
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428368:

            sub RAX,4
            cmp RSI,RAX
            je .L_4283e8

            movaps XMM0,XMM1
.L_428374:

            ucomiss XMM0,XMM2
            jp .L_428381

            sete DL
            movzx EDX,DL
            add ECX,EDX
.L_428381:

            ucomiss XMM0,DWORD PTR [RIP+.L_433250-41516]
            jb .L_42838d

            add EDI,1
.L_42838d:

            movss XMM1,DWORD PTR [RAX]
            ucomiss XMM1,XMM0
            jbe .L_428368

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428ba0]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_426320

            jmp .L_4283ba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4283b8:

            xor EBP,EBP
.L_4283ba:

            mov RBX,QWORD PTR [RSP+49256]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_42850c

            add RSP,49272
.L_4283da:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4283e8:

            mov EAX,R14D
            mov EDX,1431655766
            imul EDX
            mov EAX,R14D
            sar EAX,31
            sub EDX,EAX
            cmp EDX,ECX
            jl .L_4284d0

            cmp EDX,EDI
            jl .L_4284ee

            test R14D,R14D
            jle .L_428498

            lea ECX,DWORD PTR [R14-1]
            mov RSI,QWORD PTR [RBX+48]
            mov EDX,1
            pxor XMM1,XMM1
            mov EDI,4294967295
            movsd XMM2,QWORD PTR [RIP+.L_428fb8]
            add RCX,2
            movsd XMM3,QWORD PTR [RIP+.L_428fb0]
            movsd XMM5,QWORD PTR [RIP+.L_428fc0]
            movsd XMM4,QWORD PTR [RIP+.L_428fc8]
            nop
            nop
            nop
.L_428450:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [R13+RDX*4]
            addsd XMM0,XMM2
            ucomisd XMM1,XMM0
            jae .L_428483

            ucomisd XMM0,XMM3
            mov EAX,EDI
            jae .L_428483

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movq RAX,XMM0
            sar EAX,16
            add AX,32767
.L_428483:

            mov WORD PTR [RSI+RDX*2-2],AX
            add RDX,1
            cmp RDX,RCX
            jne .L_428450

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428498:

            mov EBP,1
            jmp .L_4283ba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4284a8:

            lea RDX,QWORD PTR [RIP+.L_428b78]
            mov ESI,2
            xor EAX,EAX
            call .L_426320

            jmp .L_4283ba
.L_4284c0:

            test R12,R12
            je .L_4282e2

            jmp .L_4282c1
          .byte 0x66
          .byte 0x90
.L_4284d0:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428bc8]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_426320

            jmp .L_4283ba
.L_4284ee:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428bf8]
            mov ESI,2
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            call .L_426320

            jmp .L_4283ba
.L_42850c:

            call __stack_chk_fail@PLT
.L_428511:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428520:

            test RDI,RDI
            je .L_4285c5

            mov EDX,DWORD PTR [RDI+40]
            mov EAX,1
            cmp EDX,1
            jle .L_42857a

            mov RSI,QWORD PTR [RDI+48]
            lea EAX,DWORD PTR [RDX-1]
            movzx ECX,WORD PTR [RSI]
            cmp CX,WORD PTR [RSI+RAX*2]
            jbe .L_428580

            sub EDX,2
            lea RAX,QWORD PTR [RSI+2]
            lea RSI,QWORD PTR [RSI+RDX*2+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_428558:

            movzx EDX,WORD PTR [RAX]
            mov EDI,EDX
            sub EDI,ECX
            cmp EDI,2
            jg .L_428578

            add RAX,2
            mov ECX,EDX
            cmp RSI,RAX
            jne .L_428558

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428578:

            xor EAX,EAX
.L_42857a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428580:

            movsxd RAX,EDX
            sub EDX,2
            movsxd RDI,EDX
            movzx ECX,WORD PTR [RSI+RAX*2-2]
            mov EDX,EDX
            add RDI,RDI
            add RDX,RDX
            lea RAX,QWORD PTR [RSI+RDI*1]
            lea RSI,QWORD PTR [RSI+RDI*1-2]
            sub RSI,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4285a8:

            movzx EDX,WORD PTR [RAX]
            mov EDI,EDX
            sub EDI,ECX
            cmp EDI,2
            jg .L_428578

            sub RAX,2
            mov ECX,EDX
            cmp RAX,RSI
            jne .L_4285a8

            mov EAX,1
            ret 
.L_4285c5:

            lea RCX,QWORD PTR [RIP+.L_428de0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8

            mov EDX,1140
            call __assert_fail@PLT
.L_4285e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4285f0:

            test RDI,RDI
            je .L_42860d

            mov EDX,DWORD PTR [RDI+40]
            mov RAX,QWORD PTR [RDI+48]
            sub EDX,1
            movzx ECX,WORD PTR [RAX+RDX*2]
            cmp WORD PTR [RAX],CX
            seta AL
            movzx EAX,AL
            ret 
.L_42860d:

            lea RCX,QWORD PTR [RIP+.L_428dc0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8
            mov EDX,1182
            call __assert_fail@PLT
.L_428630:

            test RDI,RDI
            je .L_42863f

            xor EAX,EAX
            cmp DWORD PTR [RDI+8],1
            seta AL
            ret 
.L_42863f:

            lea RCX,QWORD PTR [RIP+.L_428da0]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8
            mov EDX,1191
            call __assert_fail@PLT
.L_428662:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428670:

            test RDI,RDI
            je .L_428688

            xor EAX,EAX
            cmp DWORD PTR [RDI+8],1
            je .L_428680

            ret 
          .byte 0x90
.L_428680:

            mov RAX,QWORD PTR [RDI+16]
            mov EAX,DWORD PTR [RAX+8]
            ret 
.L_428688:

            lea RCX,QWORD PTR [RIP+.L_428d80]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            sub RSP,8
            mov EDX,1198
            call __assert_fail@PLT
.L_4286ab:

            nop
            nop
            nop
            nop
            nop
.L_4286b0:

            sub RSP,40
.L_4286b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            mov WORD PTR [RSP+12],SI
            je .L_4286fe

            mov RAX,QWORD PTR [RDI]
            lea RSI,QWORD PTR [RSP+22]
            lea RDI,QWORD PTR [RSP+12]
            mov RDX,RAX
            call QWORD PTR [RAX+128]

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,WORD PTR [RSP+22]
            jne .L_42871d

            add RSP,40
.L_4286fd:

            ret 
.L_4286fe:

            lea RCX,QWORD PTR [RIP+.L_428d40]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428ca2]
            mov EDX,1228
            call __assert_fail@PLT
.L_42871d:

            call __stack_chk_fail@PLT
.L_428722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428730:

            sub RSP,8
.L_428734:

            test RDI,RDI
            je .L_4287c6

            mov EAX,DWORD PTR [RDI+8]
            cvtss2sd XMM0,XMM0
            test EAX,EAX
            jne .L_4287b8

            mulsd XMM0,QWORD PTR [RIP+.L_428fb0]
            xor ESI,ESI
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_428fb8]
            ucomisd XMM1,XMM0
            jae .L_428792

            ucomisd XMM0,QWORD PTR [RIP+.L_428fb0]
            mov ESI,65535
            jae .L_428792

            subsd XMM0,QWORD PTR [RIP+.L_428fc0]
            addsd XMM0,QWORD PTR [RIP+.L_428fc8]
            movd ESI,XMM0
            sar ESI,16
            add SI,32767
            movzx ESI,SI
.L_428792:

            call .L_4286b0

            pxor XMM0,XMM0
            movzx EAX,AX
            cvtsi2sd XMM0,EAX
            divsd XMM0,QWORD PTR [RIP+.L_428fb0]
            add RSP,8
.L_4287ae:

            cvtsd2ss XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4287b8:

            call .L_426640

            cvtsd2ss XMM0,XMM0
            add RSP,8
            ret 
.L_4287c6:

            lea RCX,QWORD PTR [RIP+.L_428d60]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428ca2]
            mov EDX,1207
            call __assert_fail@PLT
.L_4287e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4287f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4287fe:

            test RSI,RSI
            mov QWORD PTR [RSP+8],RDI
            je .L_4288e5

            test RDX,RDX
            je .L_428904

            mov R13,RSI
            mov EDI,ECX
            mov RSI,RDX
            mov R14D,ECX
            call .L_427930

            test RAX,RAX
            mov RBP,RAX
            je .L_4288e0

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,4
            mov ESI,R14D
            xor R12D,R12D
            call .L_426010

            test RAX,RAX
            mov RBX,RAX
            je .L_4288c2

            test R14D,R14D
            je .L_4288a1

            pxor XMM2,XMM2
            lea R12D,DWORD PTR [R14-1]
            xor R15D,R15D
            cvtsi2ss XMM2,R12
            add R12,1
            movss DWORD PTR [RSP+4],XMM2
            nop
            nop
            nop
.L_428870:

            pxor XMM0,XMM0
            mov EAX,R15D
            mov RDI,R13
            cvtsi2ss XMM0,RAX
            divss XMM0,DWORD PTR [RSP+4]
            call .L_428730

            mov RDI,RBP
            call .L_428730

            movss DWORD PTR [RBX+R15*4],XMM0
            add R15,1
            cmp R12,R15
            jne .L_428870
.L_4288a1:

            mov ESI,R14D
            mov R14,QWORD PTR [RSP+8]
            mov RDX,RBX
            mov RDI,R14
            call .L_427600

            mov RSI,RBX
            mov RDI,R14
            mov R12,RAX
            call .L_426070
.L_4288c2:

            mov RDI,RBP
            call .L_427180
.L_4288ca:

            add RSP,24
.L_4288ce:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4288e0:

            xor R12D,R12D
            jmp .L_4288ca
.L_4288e5:

            lea RCX,QWORD PTR [RIP+.L_428e60]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428ceb]
            mov EDX,835
            call __assert_fail@PLT
.L_428904:

            lea RCX,QWORD PTR [RIP+.L_428e60]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428cfe]
            mov EDX,836
            call __assert_fail@PLT
.L_428923:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428930:

            push RBP
            push RBX
            sub RSP,56
.L_428936:

            test RDI,RDI
            movsd QWORD PTR [RSP+40],XMM0
            je .L_428ab8

            mov RBP,RDI
            mov EBX,1
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+8],0
            jmp .L_42897f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428970:

            add EBX,1
            cmp EBX,4096
            je .L_428a40
.L_42897f:

            pxor XMM1,XMM1
            mov RDI,RBP
            pxor XMM0,XMM0
            cvtsi2sd XMM1,EBX
            mulsd XMM1,QWORD PTR [RIP+.L_428fd8]
            cvtsd2ss XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call .L_428730

            pxor XMM3,XMM3
            ucomiss XMM0,XMM3
            jbe .L_428970

            movss XMM4,DWORD PTR [RIP+.L_429010]
            ucomiss XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP]
            jbe .L_428970

            ucomisd XMM1,QWORD PTR [RIP+.L_428fe0]
            jbe .L_428970

            cvtss2sd XMM0,XMM0
            add EBX,1
            movsd QWORD PTR [RSP+32],XMM1
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call log@PLT

            movsd XMM2,QWORD PTR [RSP]
            cmp EBX,4096
            movsd XMM6,QWORD PTR [RIP+.L_428f90]
            divsd XMM2,XMM0
            addsd XMM6,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            addsd XMM5,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            addsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_42897f

            nop
            nop
            nop
            nop
.L_428a40:

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM1,XMM6
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,XMM6
            mulsd XMM0,XMM5
            pxor XMM6,XMM6
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            subsd XMM1,QWORD PTR [RIP+.L_428f90]
            mulsd XMM1,XMM5
            divsd XMM0,XMM1
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_428aa7
.L_428a84:

            ucomisd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_428fd0]
            ja .L_428aa0

            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
.L_428aa0:

            add RSP,56
.L_428aa4:

            pop RBX
            pop RBP
            ret 
.L_428aa7:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_428a84
.L_428ab8:

            lea RCX,QWORD PTR [RIP+.L_428d20]
            lea RSI,QWORD PTR [RIP+.L_428c27]
            lea RDI,QWORD PTR [RIP+.L_428c5d]
            mov EDX,1258
            call __assert_fail@PLT
.L_428ad7:
          .byte 0x90
.L_428ad8:
          .string "Couldn\'t create tone curve of more than 65530 entries"
          .zero 2
.L_428b10:
          .string "Couldn\'t create tone curve with zero segments and no table"
          .zero 5
.L_428b50:
          .string "Invalid parametric curve type %d"
          .zero 7
.L_428b78:
          .string "cmsSmoothToneCurve: too many points."
          .zero 3
.L_428ba0:
          .string "cmsSmoothToneCurve: Non-Monotonic."
          .zero 5
.L_428bc8:
          .string "cmsSmoothToneCurve: Degenerated, mostly zeros."
          .zero 1
.L_428bf8:
          .string "cmsSmoothToneCurve: Degenerated, mostly poles."
.L_428c27:
          .string "cmsgamma.c"
.L_428c32:
          .string "(ctx != ((void *)0))"
.L_428c47:
          .string "(head != ((void *)0))"
.L_428c5d:
          .string "(t != ((void *)0))"
.L_428c70:
          .string "(Segments != ((void *)0))"
.L_428c8a:
          .string "(Params != ((void *)0))"
.L_428ca2:
          .string "(Curve != ((void *)0))"
.L_428cb9:
          .string "(InCurve != ((void *)0))"
.L_428cd2:
          .string "(InGamma != ((void *)0))"
.L_428ceb:
          .string "(X != ((void *)0))"
.L_428cfe:
          .string "(Y != ((void *)0))"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428d20:
          .string "cmsEstimateGamma"
          .zero 15
.L_428d40:
          .string "cmsEvalToneCurve16"
          .zero 13
.L_428d60:
          .string "cmsEvalToneCurveFloat"
          .zero 10
.L_428d80:
          .string "cmsGetToneCurveParametricType"
          .zero 2
.L_428da0:
          .string "cmsIsToneCurveMultisegment"
          .zero 5
.L_428dc0:
          .string "cmsIsToneCurveDescending"
          .zero 7
.L_428de0:
          .string "cmsIsToneCurveMonotonic"
          .zero 8
.L_428e00:
          .string "cmsIsToneCurveLinear"
          .zero 11
.L_428e20:
          .string "cmsReverseToneCurve"
          .zero 12
.L_428e40:
          .string "cmsReverseToneCurveEx"
          .zero 10
.L_428e60:
          .string "cmsJoinToneCurve"
          .zero 15
.L_428e80:
          .string "cmsFreeToneCurveTriple"
          .zero 9
.L_428ea0:
          .string "cmsBuildParametricToneCurve"
          .zero 4
.L_428ec0:
          .string "cmsBuildSegmentedToneCurve"
          .zero 5
.L_428ee0:
          .string "cmsGetToneCurveEstimatedTable"
          .zero 2
.L_428f00:
          .string "cmsGetToneCurveEstimatedTableEntries"
          .zero 11
.L_428f30:
          .string "DupPluginCurvesList"
          .zero 12
.L_428f50:
          .string "_cmsAllocCurvesPluginChunk"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428f70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x80
          .byte 0x44
.L_428f78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xf0
          .byte 0x80
          .byte 0xc4
.L_428f80:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_428f88:
          .zero 8
.L_428f90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_428f98:
          .byte 0x2d
          .byte 0x43
          .byte 0x1c
          .byte 0xeb
          .byte 0xe2
          .byte 0x36
          .byte 0x1a
          .byte 0x3f
.L_428fa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_428fa8:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
.L_428fb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_428fb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_428fc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_428fc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_428fd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_428fd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3f
.L_428fe0:
          .byte 0xec
          .byte 0x51
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0xb1
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ff0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429000:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_429010:

            add BYTE PTR [RAX],AL
            cmp BYTE PTR [RDI],0
            add BYTE PTR [RAX],AL
            rol BYTE PTR [RAX],0
            movabs AL,BYTE PTR [-4611685191646183360]
            add DIL,DIL
            jg .L_42906f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429030:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RDX
            mov ECX,1
            mov RSI,R12
            sub RSP,80
.L_429046:

            mov RDI,QWORD PTR [RDX+8]
            mov RBX,RSP
            mov RDX,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_410260

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_4290e0

            lea ECX,DWORD PTR [RAX-1]
.L_42906f:

            pxor XMM0,XMM0
            mov RDX,RBX
            lea RAX,QWORD PTR [RBX+RCX*4+4]
            nop
            nop
            nop
            nop
            nop
.L_429080:

            addss XMM0,DWORD PTR [RDX]
            add RDX,4
            cmp RDX,RAX
            jne .L_429080

            ucomiss XMM0,DWORD PTR [RBP+16]
            jbe .L_4290bc

            movss DWORD PTR [RBP+16],XMM0
            add RCX,1
            xor EAX,EAX
            nop
            nop
.L_4290a0:

            movzx EDX,WORD PTR [R12+RAX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [RBP+RAX*4+20],XMM0
            add RAX,1
            cmp RCX,RAX
            jne .L_4290a0
.L_4290bc:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_4290f3

            add RSP,80
.L_4290d5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4290e0:

            pxor XMM0,XMM0
            ucomiss XMM0,DWORD PTR [RBP+16]
            jbe .L_4290bc

            mov DWORD PTR [RBP+16],0
            jmp .L_4290bc
.L_4290f3:

            call __stack_chk_fail@PLT
.L_4290f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429100:

            push R15
            push R14
            mov ECX,1
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            mov RSI,RDI
            sub RSP,232
.L_42911f:

            mov RDI,QWORD PTR [RBX]
            lea R12,QWORD PTR [RSP+16]
            lea R14,QWORD PTR [RSP+144]
            lea R13,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov RDX,R12
            lea R15,QWORD PTR [RSP+176]
            call .L_410260

            mov RDI,QWORD PTR [RBX+8]
            mov RDX,R14
            mov ECX,1
            mov RSI,R12
            call .L_410260

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,R14
            mov ECX,1
            mov RDX,R13
            lea R14,QWORD PTR [RSP+112]
            call .L_410260

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RBX+8]
            mov ECX,1
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov RDX,R15
            mov RSI,R13
            mov QWORD PTR [RSP+96],RAX
            movaps XMMWORD PTR [RSP+80],XMM0
            call .L_410260

            mov ECX,1
            mov RDX,R14
            mov RSI,R15
            mov RDI,QWORD PTR [RBX+16]
            call .L_410260

            mov RSI,R13
            mov RDI,R12
            call .L_40c030

            lea RDI,QWORD PTR [RSP+80]
            mov RSI,R14
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40c030

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM1
            jbe .L_4291fc

            ucomisd XMM2,XMM0
            ja .L_429218

            ucomisd XMM0,XMM2
            ja .L_429218
.L_4291fc:

            ucomisd XMM1,XMM2
            ja .L_429250

            ucomisd XMM0,QWORD PTR [RIP+.L_429df8]
            jp .L_429288

            jne .L_429288

            ucomisd XMM1,XMM2
            ja .L_429262

            nop
            nop
            nop
            nop
.L_429218:

            xor EAX,EAX
            mov WORD PTR [RBP],AX
.L_42921e:

            mov RCX,QWORD PTR [RSP+216]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_429294

            add RSP,232
.L_42923d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429250:

            ucomisd XMM2,XMM0
            ja .L_429262

            ucomisd XMM0,QWORD PTR [RIP+.L_429df8]
            jp .L_429288

            jne .L_429288
.L_429262:

            subsd XMM1,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_429de8]
            addsd XMM1,QWORD PTR [RIP+.L_429df0]
            movd EAX,XMM1
            sar EAX,16
            mov WORD PTR [RBP],AX
            jmp .L_42921e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429288:

            divsd XMM1,XMM0
            ucomisd XMM1,XMM2
            jbe .L_429218

            jmp .L_429262
.L_429294:

            call __stack_chk_fail@PLT
.L_429299:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4292a0:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,6200
.L_4292b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+6184],RAX
            xor EAX,EAX
            cmp ESI,254
            mov RDX,QWORD PTR [RSP+6256]
            mov R11,QWORD PTR [RSP+6264]
            ja .L_429410

            mov EBX,ESI
            xor ESI,ESI
            mov R14,RDI
            mov RBP,R8
            mov R12,R9
            mov QWORD PTR [RSP+24],R11
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+12],ECX
            call .L_413990

            test RAX,RAX
            mov R13,RAX
            je .L_429410

            test EBX,EBX
            mov ECX,DWORD PTR [RSP+12]
            mov RDX,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            je .L_429418

            lea EAX,DWORD PTR [RBX-1]
            lea RDI,QWORD PTR [RSP+2080]
            lea R10,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+4128]
            lea R8,QWORD PTR [RSP+1056]
            mov DWORD PTR [RSP+12],ECX
            lea RSI,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_429358:

            mov RCX,QWORD PTR [R12+RAX*2]
            movsd XMM0,QWORD PTR [R11+RAX*2]
            movsd QWORD PTR [R9+RAX*2],XMM0
            mov QWORD PTR [RDI+RAX*2],RCX
            mov ECX,DWORD PTR [RDX+RAX*1]
            mov DWORD PTR [R10+RAX*1],ECX
            mov ECX,DWORD PTR [RBP+RAX*1]
            mov DWORD PTR [R8+RAX*1],ECX
            add RAX,4
            cmp RSI,RAX
            jne .L_429358

            mov ECX,DWORD PTR [RSP+12]
.L_429388:

            mov RDX,QWORD PTR [RIP+.L_429e00]
            mov EAX,EBX
            lea ESI,DWORD PTR [RBX+1]
            mov QWORD PTR [RSP+RAX*8+2080],R13
            mov DWORD PTR [RSP+RAX*4+32],0
            mov DWORD PTR [RSP+RAX*4+1056],1
            mov QWORD PTR [RSP+RAX*8+4128],RDX
            sub RSP,8
.L_4293bb:

            mov RDX,RDI
            mov EAX,DWORD PTR [RSP+6280]
            mov RDI,R14
            push RAX
            push RCX
            mov RCX,R10
            push R15
            push 0
            push 0
            call .L_4105f0

            add RSP,48
            mov RDI,R13
            mov RBX,RAX
            call .L_403eb0
.L_4293e7:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+6184]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42943a

            add RSP,6200
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_429410:

            xor EBX,EBX
            jmp .L_4293e7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429418:

            lea RDI,QWORD PTR [RSP+2080]
            lea R10,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+4128]
            lea R8,QWORD PTR [RSP+1056]
            jmp .L_429388
.L_42943a:

            call __stack_chk_fail@PLT
.L_42943f:

            nop
.L_429440:

            push R15
            push R14
            mov R15D,ESI
            push R13
            push R12
            mov ESI,EDX
            push RBP
            push RBX
            mov EDX,4587556
            mov R12,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+96],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSP+176]
            push RAX
            push QWORD PTR [RSP+176]
            push R9
            mov R9,R8
            mov R8,RCX
            mov ECX,4849688
            call .L_4292a0

            add RSP,32
.L_429490:

            test RAX,RAX
            je .L_4295c8

            mov EDX,4
            mov ESI,R15D
            mov RDI,R12
            mov RBP,RAX
            call .L_426010

            test RAX,RAX
            mov RBX,RAX
            je .L_4295c0

            test R15D,R15D
            je .L_429575

            pxor XMM5,XMM5
            lea EAX,DWORD PTR [R15-1]
            lea R14,QWORD PTR [RSP+32]
            xor R13D,R13D
            cvtsi2sd XMM5,RAX
            add RAX,1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+24],RAX
            movsd QWORD PTR [RSP+16],XMM5
            nop
.L_4294f0:

            pxor XMM0,XMM0
            mov EAX,R13D
            mov RSI,QWORD PTR [RSP+24]
            pxor XMM3,XMM3
            mov ECX,1
            mov RDX,R14
            mov RDI,RBP
            mov QWORD PTR [RSP+64],0
            cvtsi2sd XMM0,RAX
            mov DWORD PTR [RSP+72],0
            mulsd XMM0,QWORD PTR [RIP+.L_429e08]
            divsd XMM0,QWORD PTR [RSP+16]
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RSP+76],XMM3
            call .L_410260

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_429e00]
            divsd XMM0,QWORD PTR [RIP+.L_429e08]
            pxor XMM4,XMM4
            subsd XMM1,XMM0
            cvtsd2ss XMM4,XMM1
            movss DWORD PTR [RBX+R13*4],XMM4
            add R13,1
            cmp QWORD PTR [RSP+8],R13
            jne .L_4294f0
.L_429575:

            mov ESI,R15D
            mov RDX,RBX
            mov RDI,R12
            call .L_427600

            mov RDI,RBP
            mov R13,RAX
            call .L_40fdf0

            mov RSI,RBX
            mov RDI,R12
            call .L_426070
.L_429599:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_4295cd

            add RSP,104
.L_4295b0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4295c0:

            mov RDI,RBP
            call .L_40fdf0
.L_4295c8:

            xor R13D,R13D
            jmp .L_429599
.L_4295cd:

            call __stack_chk_fail@PLT
.L_4295d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4295e0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,R8
            sub RSP,40
.L_4295f9:

            mov RDI,QWORD PTR [R8]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+16],R9
            call .L_403540

            cmp EAX,1129142603
            jne .L_429700

            sub EBP,1
            lea R15,QWORD PTR [RBP*8]
            mov DWORD PTR [RSP+28],EBP
            lea R12,QWORD PTR [RBX+R15*1]
            mov RDI,QWORD PTR [R12]
            call .L_403540

            cmp EAX,1129142603
            jne .L_429700

            mov RDI,QWORD PTR [R12]
            call .L_403560

            cmp EAX,1886549106
            jne .L_429700

            mov ESI,DWORD PTR [RSP+104]
            mov R8,RBX
            mov RDI,R13
            push RSI
.L_42965c:

            push QWORD PTR [RSP+104]
            mov ESI,R14D
            mov R9,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+44]
            call .L_429440

            test RAX,RAX
            mov RBX,RAX
            pop RCX
            pop RSI
            je .L_429700

            mov EDX,DWORD PTR [RSP+104]
            mov RCX,QWORD PTR [RSP+8]
            shl RBP,2
            mov R8,R12
            mov ESI,R14D
            mov RDI,R13
            push RDX
            add R15,QWORD PTR [RSP+104]
            add RCX,RBP
            mov EDX,1
            push R15
            mov RAX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RAX+RBP*1]
            call .L_429440

            mov R12,RAX
            test R12,R12
            pop RAX
            pop RDX
.L_4296c0:

            je .L_429718

            mov ECX,R14D
            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_4287f0

            mov RDI,RBX
            mov RBP,RAX
            call .L_427870

            mov RDI,R12
            call .L_427870

            test RBP,RBP
            je .L_429700

            mov RDI,RBP
            call .L_428520

            test EAX,EAX
            jne .L_429702

            mov RDI,RBP
            call .L_427870

            nop
.L_429700:

            xor EBP,EBP
.L_429702:

            add RSP,40
.L_429706:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429718:

            mov RDI,RBX
            xor EBP,EBP
            call .L_427870

            jmp .L_429702
.L_429724:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429730:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea EBX,DWORD PTR [R9-1]
            pxor XMM0,XMM0
            mov EBP,R9D
            sub RSP,6248
.L_42974f:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+6232],RAX
            xor EAX,EAX
            cmp EBX,254
            mov R14,QWORD PTR [RSP+6304]
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            ja .L_429a18

            mov R15,RSI
            xor ESI,ESI
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],RDX
            call .L_413990

            test RAX,RAX
            mov R12,RAX
            je .L_429a30

            mov RDI,R14
            call .L_42e620

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+24]
            jne .L_4299f0

            mov RAX,QWORD PTR [RIP+.L_429e10]
            movsd XMM1,QWORD PTR [RIP+.L_429e00]
            mov QWORD PTR [RSP+72],RAX
.L_4297d8:

            lea RDI,QWORD PTR [RBX*4+4]
            lea R10,QWORD PTR [RSP+80]
            lea RBX,QWORD PTR [RSP+2128]
            lea R9,QWORD PTR [RSP+4176]
            lea R11,QWORD PTR [RSP+1104]
            xor EAX,EAX
            nop
.L_429800:

            mov RSI,QWORD PTR [R15+RAX*2]
            movsd XMM0,QWORD PTR [R8+RAX*2]
            movsd QWORD PTR [R9+RAX*2],XMM0
            mov QWORD PTR [RBX+RAX*2],RSI
            mov ESI,DWORD PTR [RDX+RAX*1]
            mov DWORD PTR [R10+RAX*1],ESI
            mov ESI,DWORD PTR [RCX+RAX*1]
            mov DWORD PTR [R11+RAX*1],ESI
            add RAX,4
            cmp RDI,RAX
            jne .L_429800

            mov EAX,EBP
            mov RDI,R14
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],R11
            movsd QWORD PTR [RSP+RAX*8+4176],XMM1
            mov QWORD PTR [RSP+RAX*8+2128],R12
            mov DWORD PTR [RSP+RAX*4+80],0
            mov DWORD PTR [RSP+RAX*4+1104],1
            call .L_403540

            mov R15D,EAX
            mov EDI,EAX
            call .L_40d760

            mov EDI,R15D
            mov ESI,1024
            mov DWORD PTR [RSP+8],EAX
            call .L_40d9d0

            mov ECX,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+44],EAX
            sub RSP,8
.L_42988f:

            push 64
            push 4849688
            lea ESI,DWORD PTR [RBP+1]
            mov RDX,RBX
            mov RDI,R13
            xor EBX,EBX
            lea R15D,DWORD PTR [RCX*8+2]
            push R15
            push 0
            push 0
            mov R11,QWORD PTR [RSP+64]
            mov R10,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            mov R8,R11
            mov RCX,R10
            call .L_4105f0

            mov QWORD PTR [RSP+96],RAX
            add RSP,40
            mov R9D,1
            push 64
.L_4298da:

            mov R8D,R15D
            mov RCX,R14
            mov EDX,4849688
            mov RSI,R12
            mov RDI,R13
            call .L_410e00

            mov RCX,R12
            mov EDX,R15D
            mov RDI,R13
            mov R9D,1
            mov R8D,4849688
            mov RSI,R14
            mov QWORD PTR [RSP+72],RAX
            mov DWORD PTR [RSP],64
            call .L_410e00

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+80],RAX
            pop RDX
.L_429924:

            pop RCX
.L_429925:

            test RDI,RDI
            je .L_4299a0

            cmp QWORD PTR [RSP+56],0
            je .L_429a08

            test RAX,RAX
            je .L_429a08

            mov EDX,1
            mov ESI,3
            mov RDI,R13
            call .L_430f40

            test RAX,RAX
            mov RBX,RAX
            je .L_429993

            mov EDX,DWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RSP+44]
            xor R8D,R8D
            mov ECX,1
            mov RDI,R13
            call .L_430b00

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBX
            mov RBP,RAX
            call .L_431280

            test EAX,EAX
            jne .L_429a38

            mov RDI,RBX
            xor EBX,EBX
            call .L_431080
.L_429993:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            jne .L_429a0a

            nop
            nop
            nop
.L_4299a0:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_4299af

            call .L_40fdf0
.L_4299af:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_4299be

            call .L_40fdf0
.L_4299be:

            mov RDI,R12
            call .L_403eb0
.L_4299c6:

            mov RDX,QWORD PTR [RSP+6232]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_429a53

            add RSP,6248
.L_4299e3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4299f0:

            movsd XMM1,QWORD PTR [RIP+.L_429e00]
            movsd QWORD PTR [RSP+72],XMM1
            jmp .L_4297d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429a08:

            xor EBX,EBX
.L_429a0a:

            call .L_40fdf0

            jmp .L_4299a0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429a18:

            lea RDX,QWORD PTR [RIP+.L_429da8]
            mov ECX,R9D
            mov ESI,2
            xor EBX,EBX
            call .L_426320

            jmp .L_4299c6
.L_429a30:

            xor EBX,EBX
            jmp .L_4299c6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429a38:

            lea RDX,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RIP+.L_429100]
            xor ECX,ECX
            mov RDI,RBP
            call .L_42fba0

            jmp .L_429993
.L_429a53:

            call __stack_chk_fail@PLT
.L_429a58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429a60:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,136
.L_429a70:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_402de0

            mov RDI,RBX
            mov RBP,RAX
            call .L_403560

            cmp EAX,1886549106
            je .L_429ac0
.L_429a97:

            pxor XMM0,XMM0
.L_429a9b:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_429b8a

            add RSP,136
.L_429ab6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429ac0:

            mov EDX,1
            mov ESI,4
            mov RDI,RBX
            call .L_40b3b0

            mov R13D,EAX
            shr EAX,3
            xor ESI,ESI
            and EAX,15
            mov RDI,RBP
            mov DWORD PTR [RSP+48],0
            mov DWORD PTR [RSP+32],EAX
            call .L_413990

            test RAX,RAX
            mov R12,RAX
            je .L_429a97

            sub RSP,8
            xor R9D,R9D
            mov EDX,655386
            push 320
            mov R8D,R13D
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,RBP
            call .L_410e00

            mov RDI,R12
            mov QWORD PTR [RSP+56],RAX
            call .L_403eb0

            pop RAX
            pop RDX
            cmp QWORD PTR [RSP+40],0
            je .L_429a97

            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_429030]
            movabs RAX,317827579910
            mov RSI,RSP
            mov EDI,3
            mov QWORD PTR [RSP],RAX
            mov DWORD PTR [RSP+8],74
            call .L_4300d0

            test EAX,EAX
            jne .L_429b71

            mov DWORD PTR [RSP+48],0
.L_429b71:

            mov RDI,QWORD PTR [RSP+40]
            call .L_40fdf0

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSP+48]
            jmp .L_429a9b
.L_429b8a:

            call __stack_chk_fail@PLT
.L_429b8f:

            nop
.L_429b90:

            push RBX
            pxor XMM4,XMM4
            mov RBX,RDI
            sub RSP,80
.L_429b9c:

            movsd XMM5,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM4,XMM5
            ja .L_429cd0

            movsd XMM6,QWORD PTR [RIP+.L_429e08]
            ucomisd XMM5,XMM6
            jbe .L_429bcc

            movsd QWORD PTR [RDI],XMM6
.L_429bcc:

            movsd XMM5,QWORD PTR [RBX+8]
            ucomisd XMM1,XMM5
            jbe .L_429c20
.L_429bd7:

            ucomisd XMM5,XMM4
            jp .L_429c40

            jne .L_429c40

            movsd XMM0,QWORD PTR [RBX+16]
            mov EAX,1
            cmpltsd XMM0,XMM4
            andpd XMM3,XMM0
            andnpd XMM0,XMM2
            orpd XMM3,XMM0
            movsd QWORD PTR [RBX+16],XMM3
.L_429bff:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_429d9c

            add RSP,80
.L_429c17:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429c20:

            ucomisd XMM5,XMM0
            ja .L_429bd7

            movsd XMM6,QWORD PTR [RBX+16]
            ucomisd XMM3,XMM6
            ja .L_429bd7

            ucomisd XMM6,XMM2
            ja .L_429bd7

            jmp .L_429cbf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429c40:

            lea RDI,QWORD PTR [RSP+48]
            mov RSI,RBX
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call .L_40bd70

            movsd XMM5,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM6,XMM5
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM4
            divsd XMM6,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jb .L_429cf0

            movsd XMM4,QWORD PTR [RIP+.L_429e18]
            ucomisd XMM4,XMM5
            jbe .L_429cf0
.L_429cb1:

            movsd QWORD PTR [RBX+8],XMM0
            mulsd XMM0,XMM6
            movsd QWORD PTR [RBX+16],XMM0
.L_429cbf:

            mov EAX,1
            jmp .L_429bff
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429cd0:

            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI],0
            jmp .L_429bff
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429cf0:

            movsd XMM4,QWORD PTR [RIP+.L_429e20]
            ucomisd XMM5,XMM4
            jb .L_429d0c

            movsd XMM7,QWORD PTR [RIP+.L_429e28]
            ucomisd XMM7,XMM5
            jae .L_429cb1
.L_429d0c:

            ucomisd XMM5,QWORD PTR [RIP+.L_429e18]
            movsd XMM0,QWORD PTR [RIP+.L_429e30]
            jb .L_429d38

            ucomisd XMM0,XMM5
            jbe .L_429d38

            movsd QWORD PTR [RBX+16],XMM2
            divsd XMM2,XMM6
            movsd QWORD PTR [RBX+8],XMM2
            jmp .L_429cbf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429d38:

            ucomisd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_429e38]
            jb .L_429d60

            ucomisd XMM0,XMM5
            jbe .L_429d60

            movsd QWORD PTR [RBX+8],XMM1
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+16],XMM1
            jmp .L_429cbf
          .byte 0x90
.L_429d60:

            ucomisd XMM5,XMM0
            jb .L_429d80

            ucomisd XMM4,XMM5
            jbe .L_429d80

            movsd QWORD PTR [RBX+16],XMM3
            divsd XMM3,XMM6
            movsd QWORD PTR [RBX+8],XMM3
            jmp .L_429cbf
          .byte 0x90
.L_429d80:

            lea RDX,QWORD PTR [RIP+.L_429dda]
            xor EAX,EAX
            mov ESI,2
            xor EDI,EDI
            call .L_426320

            xor EAX,EAX
            jmp .L_429bff
.L_429d9c:

            call __stack_chk_fail@PLT
.L_429da1:
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429da8:
          .string "Wrong position of PCS. 1..255 expected, %d found."
.L_429dda:

            outsb DX,BYTE PTR [RSI]
            jbe .L_429e3f
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x6e
          .byte 0x67
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_429de8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_429df0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_429df8:
          .zero 8
.L_429e00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_429e08:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_429e10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_429e18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_429e20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x73
          .byte 0x40
.L_429e28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_429e30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x60
          .byte 0x40
.L_429e38:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AH
            insb BYTE PTR [RDI],DX
.L_429e3f:

            movzx ECX,WORD PTR [RDI]
            mov R8,QWORD PTR [RDX+120]
            mov EAX,DWORD PTR [RDX+52]
            cmp CX,-1
            je .L_429ea0
# WARNING: found overlapping blocks at address 29c00
.set .L_429e40, . - 16

            imul ECX,EAX
            lea EDX,DWORD PTR [RCX+32767]
            movsxd RAX,EDX
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,EDX
            sar EDX,31
            sar EAX,15
            sub EAX,EDX
            add EAX,ECX
            mov ECX,EAX
            movzx EAX,AX
            sar ECX,16
            movsxd RCX,ECX
            movzx EDX,WORD PTR [R8+RCX*2+2]
            movzx ECX,WORD PTR [R8+RCX*2]
            sub EDX,ECX
            imul EAX,EDX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [RSI],AX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429ea0:

            mov ECX,EAX
            movzx EAX,WORD PTR [R8+RCX*2]
            mov WORD PTR [RSI],AX
            ret 
.L_429eab:

            nop
            nop
            nop
            nop
            nop
.L_429eb0:

            movzx EDI,WORD PTR [RDI]
            mov R10D,DWORD PTR [RDX+84]
            mov R8,QWORD PTR [RDX+120]
            mov ECX,EDI
            imul EDI,DWORD PTR [RDX+52]
            lea EAX,DWORD PTR [RDI+32767]
            mov R9D,EDI
            movsxd RDI,EAX
            imul RDI,RDI,-2147450879
            shr RDI,32
            add EDI,EAX
            sar EAX,31
            sar EDI,15
            sub EDI,EAX
            xor EAX,EAX
            add EDI,R9D
            mov R9D,EDI
            movzx EDI,DI
            sar R9D,16
            mov R11D,R9D
            imul R11D,R10D
            cmp CX,-1
            setne AL
            add R9D,EAX
            mov EAX,DWORD PTR [RDX+16]
            imul R9D,R10D
            test EAX,EAX
            je .L_429f4e

            lea R10D,DWORD PTR [RAX-1]
            xor EDX,EDX
            add R10,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f20:

            lea ECX,DWORD PTR [R11+RDX*1]
            lea EAX,DWORD PTR [R9+RDX*1]
            movzx ECX,WORD PTR [R8+RCX*2]
            movzx EAX,WORD PTR [R8+RAX*2]
            sub EAX,ECX
            imul EAX,EDI
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [RSI+RDX*2],AX
            add RDX,1
            cmp R10,RDX
            jne .L_429f20
.L_429f4e:

            ret 
.L_429f50:

            push R13
            push R12
            push RBP
            push RBX
.L_429f56:

            movzx EAX,WORD PTR [RDI]
            movzx EDI,WORD PTR [RDI+2]
            mov EBX,DWORD PTR [RDX+56]
            mov R12D,DWORD PTR [RDX+88]
            mov R11D,DWORD PTR [RDX+16]
            mov RCX,QWORD PTR [RDX+120]
            mov R10D,EAX
            imul EAX,DWORD PTR [RDX+52]
            imul EBX,EDI
            mov EDX,DWORD PTR [RDX+84]
            lea EBP,DWORD PTR [RBX+32767]
            lea R8D,DWORD PTR [RAX+32767]
            mov R9D,EAX
            movsxd RAX,R8D
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,R8D
            sar R8D,31
            sar EAX,15
            sub EAX,R8D
            add EAX,R9D
            mov R9D,EDI
            movsxd RDI,EBP
            imul RDI,RDI,-2147450879
            movzx R8D,AX
            sar EAX,16
            imul EAX,R12D
            shr RDI,32
            add EDI,EBP
            sar EBP,31
            add R12D,EAX
            sar EDI,15
            sub EDI,EBP
            add EDI,EBX
            mov EBX,EDI
            sar EBX,16
            cmp R10W,-1
            cmove R12D,EAX
            imul EBX,EDX
            add EDX,EBX
            cmp R9W,-1
            cmove EDX,EBX
            test R11D,R11D
            jle .L_42a09c

            mov R9D,EDX
            lea EDX,DWORD PTR [R11-1]
            mov R10D,EBX
            movzx EDI,DI
            lea RBP,QWORD PTR [RDX+RDX*1+2]
            lea EDX,DWORD PTR [RAX+RBX*1]
            movsxd RDX,EDX
            lea RBX,QWORD PTR [RCX+RDX*2]
            lea EDX,DWORD PTR [RAX+R9*1]
            lea EAX,DWORD PTR [R10+R12*1]
            add R12D,R9D
            cdqe 
            movsxd R12,R12D
            movsxd RDX,EDX
            lea R10,QWORD PTR [RCX+RAX*2]
            lea R9,QWORD PTR [RCX+R12*2]
            lea R11,QWORD PTR [RCX+RDX*2]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
.L_42a038:

            movzx R13D,WORD PTR [RBX+RDX*1]
            movzx ECX,WORD PTR [R10+RDX*1]
            movzx EAX,WORD PTR [R11+RDX*1]
            movzx R12D,WORD PTR [R9+RDX*1]
            sub ECX,R13D
            imul ECX,R8D
            add ECX,32768
            sar ECX,16
            add ECX,R13D
            movzx R13D,AX
            sub R12D,R13D
            imul R12D,R8D
            add R12D,32768
            sar R12D,16
            add EAX,R12D
            movzx R12D,CX
            movzx EAX,AX
            sub EAX,R12D
            imul EAX,EDI
            add EAX,32768
            sar EAX,16
            add EAX,ECX
            mov WORD PTR [RSI+RDX*1],AX
            add RDX,2
            cmp RDX,RBP
            jne .L_42a038
.L_42a09c:

            pop RBX
.L_42a09d:

            pop RBP
            pop R12
            pop R13
            ret 
.L_42a0a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a0b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42a0ba:

            movzx R8D,WORD PTR [RDI]
            mov R9D,DWORD PTR [RDX+52]
            movzx R10D,WORD PTR [RDI+2]
            mov EBX,DWORD PTR [RDX+16]
            mov RCX,QWORD PTR [RDX+120]
            imul R9D,R8D
            mov R12D,R8D
            mov R14D,R10D
            lea EAX,DWORD PTR [R9+32767]
            movsxd R8,EAX
            imul R8,R8,-2147450879
            shr R8,32
            add R8D,EAX
            sar EAX,31
            sar R8D,15
            sub R8D,EAX
            mov EAX,DWORD PTR [RDX+56]
            add R8D,R9D
            movzx R11D,R8W
            sar R8D,16
            imul EAX,R10D
            lea R9D,DWORD PTR [RAX+32767]
            movsxd R10,R9D
            imul R10,R10,-2147450879
            shr R10,32
            add R10D,R9D
            sar R9D,31
            sar R10D,15
            sub R10D,R9D
            add R10D,EAX
            movzx EAX,WORD PTR [RDI+4]
            mov R9D,R10D
            sar R9D,16
            mov EBP,EAX
            imul EAX,DWORD PTR [RDX+60]
            lea R13D,DWORD PTR [RAX+32767]
            mov EDI,EAX
            movsxd RAX,R13D
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,R13D
            sar R13D,31
            sar EAX,15
            sub EAX,R13D
            mov R13D,DWORD PTR [RDX+92]
            add EAX,EDI
            mov EDI,EAX
            movzx EAX,AX
            imul R8D,R13D
            sar EDI,16
            mov DWORD PTR [RSP-28],EAX
            mov EAX,DWORD PTR [RDX+84]
            add R13D,R8D
            cmp R12W,-1
            mov R12D,DWORD PTR [RDX+88]
            cmove R13D,R8D
            imul R9D,R12D
            add R12D,R9D
            cmp R14W,-1
            cmove R12D,R9D
            imul EDI,EAX
            add EAX,EDI
            cmp BP,-1
            cmove EAX,EDI
            test EBX,EBX
            jle .L_42a326

            sub EBX,1
            lea EBP,DWORD PTR [R8+R9*1]
            add R8D,R12D
            lea RBX,QWORD PTR [RBX+RBX*1+2]
            lea EDX,DWORD PTR [R13+R12*1]
            add R9D,R13D
            movzx R10D,R10W
            mov QWORD PTR [RSP-24],RBX
            lea EBX,DWORD PTR [RDI+RBP*1]
            add EBP,EAX
            movsxd RBP,EBP
            movsxd RBX,EBX
            lea R13,QWORD PTR [RCX+RBP*2]
            lea R14,QWORD PTR [RCX+RBX*2]
            lea EBX,DWORD PTR [RDI+R8*1]
            add R8D,EAX
            movsxd R8,R8D
            lea RBP,QWORD PTR [RCX+R8*2]
            lea R8D,DWORD PTR [RDI+R9*1]
            add R9D,EAX
            add EDI,EDX
            add EAX,EDX
            movsxd R9,R9D
            movsxd RDI,EDI
            cdqe 
            movsxd RBX,EBX
            lea R15,QWORD PTR [RCX+R9*2]
            lea RDI,QWORD PTR [RCX+RDI*2]
            movsxd R8,R8D
            lea RAX,QWORD PTR [RCX+RAX*2]
            lea R12,QWORD PTR [RCX+RBX*2]
            lea RBX,QWORD PTR [RCX+R8*2]
            mov QWORD PTR [RSP-8],RDI
            xor R9D,R9D
            mov RDI,R15
            mov QWORD PTR [RSP-16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a238:

            movzx R8D,WORD PTR [R14+R9*1]
            movzx EDX,WORD PTR [RBX+R9*1]
            movzx R15D,WORD PTR [R13+R9*1]
            movzx ECX,WORD PTR [R12+R9*1]
            sub EDX,R8D
            mov EAX,R8D
            mov R8D,EDX
            movzx EDX,WORD PTR [RDI+R9*1]
            imul R8D,R11D
            add R8D,32768
            sar R8D,16
            add R8D,EAX
            movzx EAX,R15W
            sub EDX,EAX
            mov EAX,EDX
            mov RDX,QWORD PTR [RSP-8]
            imul EAX,R11D
            movzx EDX,WORD PTR [RDX+R9*1]
            add EAX,32768
            sar EAX,16
            add EAX,R15D
            movzx R15D,CX
            sub EDX,R15D
            imul EDX,R11D
            add EDX,32768
            sar EDX,16
            add ECX,EDX
            movzx EDX,R8W
            movzx ECX,CX
            sub ECX,EDX
            imul ECX,R10D
            add ECX,32768
            sar ECX,16
            add R8D,ECX
            mov RCX,QWORD PTR [RSP-16]
            movzx EDX,WORD PTR [RCX+R9*1]
            movzx ECX,WORD PTR [RBP+R9*1]
            sub EDX,ECX
            movzx ECX,AX
            imul EDX,R11D
            add EDX,32768
            sar EDX,16
            add DX,WORD PTR [RBP+R9*1]
            movzx EDX,DX
            sub EDX,ECX
            imul EDX,R10D
            add EDX,32768
            sar EDX,16
            add EAX,EDX
            movzx EDX,R8W
            movzx EAX,AX
            sub EAX,EDX
            imul EAX,DWORD PTR [RSP-28]
            add EAX,32768
            sar EAX,16
            add R8D,EAX
            mov WORD PTR [RSI+R9*1],R8W
            add R9,2
            cmp R9,QWORD PTR [RSP-24]
            jne .L_42a238
.L_42a326:

            pop RBX
.L_42a327:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a331:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a340:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            push RBP
            push RBX
.L_42a34d:

            movzx R8D,WORD PTR [RDI]
            mov ECX,DWORD PTR [RDX+52]
            movsxd R12,DWORD PTR [RDX+92]
            mov R11D,DWORD PTR [RDX+16]
            imul ECX,R8D
            mov EBP,R8D
            lea EAX,DWORD PTR [RCX+32767]
            movsxd R8,EAX
            imul R8,R8,-2147450879
            shr R8,32
            add R8D,EAX
            sar EAX,31
            sar R8D,15
            sub R8D,EAX
            add R8D,ECX
            movzx ECX,WORD PTR [RDI+2]
            movzx EDI,WORD PTR [RDI+4]
            mov R10D,ECX
            imul ECX,DWORD PTR [RDX+56]
            lea EAX,DWORD PTR [RCX+32767]
            mov R9D,ECX
            movsxd RCX,EAX
            imul RCX,RCX,-2147450879
            shr RCX,32
            add ECX,EAX
            sar EAX,31
            sar ECX,15
            sub ECX,EAX
            mov EAX,DWORD PTR [RDX+60]
            add ECX,R9D
            mov R9D,EDI
            mov R13D,ECX
            movzx ECX,CX
            imul EAX,EDI
            sar R13D,16
            lea EBX,DWORD PTR [RAX+32767]
            movsxd RDI,EBX
            imul RDI,RDI,-2147450879
            shr RDI,32
            add EDI,EBX
            sar EBX,31
            sar EDI,15
            sub EDI,EBX
            movzx EBX,R8W
            sar R8D,16
            add EDI,EAX
            mov EAX,EDI
            movzx EDI,DI
            imul R8D,R12D
            sar EAX,16
            cmp BP,-1
            movsxd RBP,DWORD PTR [RDX+88]
            cmove R12,R14
            imul R13D,EBP
            cmp R10W,-1
            movsxd R10,DWORD PTR [RDX+84]
            cmove RBP,R14
            imul EAX,R10D
            cmp R9W,-1
            cmove R10,R14
            add R8D,R13D
            add EAX,R8D
            mov R8,QWORD PTR [RDX+120]
            cmp EBX,ECX
            cdqe 
            lea RAX,QWORD PTR [R8+RAX*2]
            jl .L_42a4f0

            cmp ECX,EDI
            jl .L_42a640

            add EBP,R12D
            add R10D,EBP
            test R11D,R11D
            je .L_42a4e2

            lea R9D,DWORD PTR [R11-1]
            movsxd R8,R12D
            movsxd RDX,EBP
            movsxd R10,R10D
            lea RBP,QWORD PTR [RAX+R8*2]
            lea R11,QWORD PTR [RAX+RDX*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R12,QWORD PTR [R9+R9*1+2]
            mov QWORD PTR [RSP-8],RAX
            xor R9D,R9D
.L_42a480:

            mov RAX,QWORD PTR [RSP-8]
            movzx EDX,WORD PTR [RBP+R9*1]
            movzx R14D,WORD PTR [R11+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx R15D,WORD PTR [RAX+R9*1]
            mov EAX,EDX
            sub R8D,R14D
            imul R8D,EDI
            sub EAX,R15D
            mov R13D,R15D
            mov R15D,EAX
            mov EAX,R14D
            sub EAX,EDX
            mov EDX,EAX
            imul R15D,EBX
            imul EDX,ECX
            add EDX,R15D
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EDX,R13D
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R12,R9
            jne .L_42a480
.L_42a4e2:

            pop RBX
.L_42a4e3:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a4f0:

            cmp EBX,EDI
            jl .L_42a598

            add R12D,EBP
            add R10D,R12D
            test R11D,R11D
            je .L_42a4e2

            lea R8D,DWORD PTR [R11-1]
            movsxd RDX,R10D
            movsxd R12,R12D
            lea R14,QWORD PTR [RAX+RBP*2]
            lea R13,QWORD PTR [RAX+RDX*2]
            xor R10D,R10D
            lea R15,QWORD PTR [R8+R8*1+2]
            mov QWORD PTR [RSP-8],R15
            lea R15,QWORD PTR [RAX+R12*2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a530:

            movzx EBP,WORD PTR [R15+R10*1]
            movzx EDX,WORD PTR [R14+R10*1]
            movzx R12D,WORD PTR [RAX+R10*1]
            movzx R8D,WORD PTR [R13+R10*1]
            mov R11D,EBP
            sub R11D,EDX
            sub EDX,R12D
            sub R8D,EBP
            imul EDX,ECX
            mov R9D,R12D
            imul R11D,EBX
            imul R8D,EDI
            add R11D,EDX
            lea R8D,DWORD PTR [R11+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add R9D,EDX
            mov WORD PTR [RSI+R10*1],R9W
            add R10,2
            cmp QWORD PTR [RSP-8],R10
            jne .L_42a530

            pop RBX
.L_42a58a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a598:

            lea EDX,DWORD PTR [RBP+R10*1]
            add R12D,EDX
            cmp ECX,EDI
            jl .L_42a778

            test R11D,R11D
            je .L_42a4e2

            lea R8D,DWORD PTR [R11-1]
            movsxd R12,R12D
            movsxd RDX,EDX
            lea R12,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+RDX*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
.L_42a5d8:

            movzx R8D,WORD PTR [R10+R9*1]
            movzx EDX,WORD PTR [R12+R9*1]
            mov RAX,QWORD PTR [RSP-8]
            movzx R15D,WORD PTR [R11+R9*1]
            movzx EBP,WORD PTR [RAX+R9*1]
            sub EDX,R8D
            imul EDX,EBX
            mov EAX,R15D
            sub R8D,R15D
            imul R8D,EDI
            mov R14D,EDX
            movzx EDX,BP
            sub EAX,EDX
            mov EDX,EAX
            imul EDX,ECX
            add EDX,R14D
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EBP,EDX
            mov WORD PTR [RSI+R9*1],BP
            add R9,2
            cmp R13,R9
            jne .L_42a5d8

            pop RBX
.L_42a636:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a640:

            lea EDX,DWORD PTR [R12+R10*1]
            add EBP,EDX
            cmp EBX,EDI
            jg .L_42a6e0

            test R11D,R11D
            je .L_42a4e2

            lea R8D,DWORD PTR [R11-1]
            movsxd RDX,EDX
            movsxd RBP,EBP
            lea R12,QWORD PTR [RAX+RDX*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            nop
            nop
            nop
.L_42a678:

            movzx R15D,WORD PTR [R12+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx EDX,WORD PTR [R11+R9*1]
            movzx EBP,WORD PTR [RAX+R9*1]
            mov R14D,R15D
            sub R14D,R8D
            sub EDX,R15D
            imul R14D,EBX
            imul EDX,ECX
            add EDX,R14D
            movzx R14D,BP
            sub R8D,R14D
            imul R8D,EDI
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add EDX,EBP
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R13,R9
            jne .L_42a678

            pop RBX
.L_42a6cf:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a6e0:

            test R11D,R11D
            je .L_42a4e2

            lea R8D,DWORD PTR [R11-1]
            movsxd RBP,EBP
            movsxd RDX,EDX
            lea R12,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RBP*2]
            lea R10,QWORD PTR [RAX+RDX*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            mov QWORD PTR [RSP-8],RAX
            nop
            nop
            nop
            nop
.L_42a710:

            mov RAX,QWORD PTR [RSP-8]
            movzx R14D,WORD PTR [R12+R9*1]
            movzx EDX,WORD PTR [R10+R9*1]
            movzx EBP,WORD PTR [R11+R9*1]
            movzx R15D,WORD PTR [RAX+R9*1]
            mov EAX,R14D
            sub EBP,EDX
            sub EDX,R14D
            imul EBP,ECX
            sub EAX,R15D
            mov R8D,R15D
            mov R15D,EAX
            imul R15D,EBX
            imul EDX,EDI
            add EBP,R15D
            lea EBP,DWORD PTR [RBP+RDX*1+32769]
            mov EDX,EBP
            sar EDX,16
            add EDX,EBP
            sar EDX,16
            add EDX,R8D
            mov WORD PTR [RSI+R9*1],DX
            add R9,2
            cmp R13,R9
            jne .L_42a710

            pop RBX
.L_42a76a:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a778:

            test R11D,R11D
            je .L_42a4e2

            lea R8D,DWORD PTR [R11-1]
            movsxd R12,R12D
            movsxd RDX,EDX
            lea RBP,QWORD PTR [RAX+R12*2]
            lea R11,QWORD PTR [RAX+RDX*2]
            lea R10,QWORD PTR [RAX+R10*2]
            lea R13,QWORD PTR [R8+R8*1+2]
            xor R9D,R9D
            nop
.L_42a7a0:

            movzx EDX,WORD PTR [R11+R9*1]
            movzx R8D,WORD PTR [R10+R9*1]
            movzx R14D,WORD PTR [RBP+R9*1]
            movzx R12D,WORD PTR [RAX+R9*1]
            sub R14D,EDX
            sub EDX,R8D
            imul R14D,EBX
            imul EDX,ECX
            add EDX,R14D
            movzx R14D,R12W
            sub R8D,R14D
            imul R8D,EDI
            lea R8D,DWORD PTR [RDX+R8*1+32769]
            mov EDX,R8D
            sar EDX,16
            add EDX,R8D
            sar EDX,16
            add R12D,EDX
            mov WORD PTR [RSI+R9*1],R12W
            add R9,2
            cmp R13,R9
            jne .L_42a7a0

            pop RBX
.L_42a7f6:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a800:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,632
.L_42a811:

            movzx R9D,WORD PTR [RDI+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+616],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI]
            mov QWORD PTR [RSP+56],RSI
            mov R10D,R9D
            mov R12D,EAX
            imul EAX,DWORD PTR [RDX+52]
            lea ECX,DWORD PTR [RAX+32767]
            mov ESI,EAX
            movsxd RAX,ECX
            imul RAX,RAX,-2147450879
            shr RAX,32
            add EAX,ECX
            sar ECX,31
            sar EAX,15
            sub EAX,ECX
            add EAX,ESI
            movzx ESI,WORD PTR [RDI+2]
            movzx R15D,AX
            mov DWORD PTR [RSP+36],R15D
            mov EBP,ESI
            imul ESI,DWORD PTR [RDX+56]
            lea ECX,DWORD PTR [RSI+32767]
            mov R8D,ESI
            movsxd RSI,ECX
            imul RSI,RSI,-2147450879
            shr RSI,32
            add ESI,ECX
            sar ECX,31
            sar ESI,15
            sub ESI,ECX
            mov ECX,DWORD PTR [RDX+60]
            add ESI,R8D
            imul ECX,R9D
            lea R8D,DWORD PTR [RCX+32767]
            movsxd R9,R8D
            imul R9,R9,-2147450879
            shr R9,32
            add R9D,R8D
            sar R8D,31
            sar R9D,15
            sub R9D,R8D
            add R9D,ECX
            movzx ECX,WORD PTR [RDI+6]
            mov EDI,DWORD PTR [RDX+64]
            mov EBX,R9D
            movzx R13D,R9W
            mov R9D,DWORD PTR [RDX+96]
            mov DWORD PTR [RSP+48],R13D
            imul EDI,ECX
            mov R8D,ECX
            lea R11D,DWORD PTR [RDI+32767]
            movsxd RCX,R11D
            imul RCX,RCX,-2147450879
            shr RCX,32
            add ECX,R11D
            sar R11D,31
            sar ECX,15
            sub ECX,R11D
            sar EAX,16
            sar EBX,16
            imul EAX,R9D
            add ECX,EDI
            mov EDI,ESI
            mov R11D,ECX
            sar EDI,16
            sar R11D,16
            add R9D,EAX
            cmp R12W,-1
            cmove R9D,EAX
            cdqe 
            mov DWORD PTR [RSP+64],R9D
            mov R9D,DWORD PTR [RDX+92]
            imul EDI,R9D
            add R9D,EDI
            cmp BP,-1
            mov R14D,EDI
            cmove R9D,EDI
            mov EDI,DWORD PTR [RDX+88]
            imul EBX,EDI
            add EDI,EBX
            cmp R10W,-1
            mov DWORD PTR [RSP+12],EBX
            cmove EDI,EBX
            mov R15D,EDI
            mov DWORD PTR [RSP+16],EDI
            mov EDI,DWORD PTR [RDX+84]
            imul R11D,EDI
            add EDI,R11D
            cmp R8W,-1
            cmove EDI,R11D
            mov EBP,EDI
            mov DWORD PTR [RSP+28],EDI
            mov RDI,QWORD PTR [RDX+120]
            lea R8,QWORD PTR [RDI+RAX*2]
            mov EAX,DWORD PTR [RDX+16]
            mov QWORD PTR [RSP+40],RDI
            test EAX,EAX
            mov DWORD PTR [RSP+52],EAX
            je .L_42ac2f

            movzx ESI,SI
            movzx ECX,CX
            lea R12D,DWORD PTR [R14+RBX*1]
            cmp ESI,R13D
            lea R10,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP+80],R14D
            setge BYTE PTR [RSP+33]
            cmp R13D,ECX
            movzx EDX,BYTE PTR [RSP+33]
            setge BYTE PTR [RSP+34]
            movzx EBX,BYTE PTR [RSP+34]
            lea EDI,DWORD PTR [R11+R12*1]
            mov DWORD PTR [RSP+68],R12D
            mov QWORD PTR [RSP+72],R10
            add EAX,EDI
            sub R12D,EDI
            mov DWORD PTR [RSP+20],EAX
            mov DWORD PTR [RSP+84],R12D
            mov EAX,EDI
            and EDX,EBX
            mov EBX,R15D
            mov BYTE PTR [RSP+32],DL
            mov EDX,R14D
            sub EDX,EDI
            add EDX,R15D
            mov R15D,R9D
            add EDX,EBP
            sub R15D,EDI
            mov DWORD PTR [RSP+92],EDX
            lea EDX,DWORD PTR [R14+R11*1]
            add R15D,EBX
            add R15D,EBP
            mov R14D,R13D
            sub EDX,EDI
            mov DWORD PTR [RSP+24],R15D
            add EDX,EBX
            mov DWORD PTR [RSP+88],EDX
            jmp .L_42aaba
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42aa20:

            mov R15D,DWORD PTR [RSP+12]
            lea EBP,DWORD PTR [R15+R11*1]
            mov R15D,DWORD PTR [RSP+24]
            sub EBP,EDI
            add EBP,R9D
            lea R12D,DWORD PTR [R15+RAX*1]
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,R11D
            movzx R12D,WORD PTR [R8+R12*2]
            sub EBP,EDI
            add EBP,R9D
            add EBP,DWORD PTR [RSP+16]
            mov R15D,R13D
            sub R15D,EBX
            add EBP,EAX
            mov EBX,R15D
            movzx EBP,WORD PTR [R8+RBP*2]
            imul EBX,ESI
            sub R12D,EBP
            sub EBP,R13D
            imul EBP,R14D
            imul R12D,ECX
            add EBX,EBP
            add R12D,EBX
.L_42aa75:

            lea EBX,DWORD PTR [R12+32767]
            movsxd R13,EBX
            imul R13,R13,-2147450879
            shr R13,32
            add R13D,EBX
            sar EBX,31
            sar R13D,15
            sub R13D,EBX
            lea EBX,DWORD PTR [R12+R13*1+32768]
            sar EBX,16
            add EDX,EBX
.L_42aaa5:

            mov WORD PTR [R10],DX
            add EAX,1
            add R10,2
            cmp DWORD PTR [RSP+20],EAX
            je .L_42ac60
.L_42aaba:

            mov EDX,EAX
            cmp BYTE PTR [RSP+32],0
            movzx EBX,WORD PTR [R8+RDX*2]
            mov EDX,EBX
            jne .L_42aa20

            cmp ESI,ECX
            setge BPL
            cmp R14D,ECX
            setle R12B
            test BPL,BPL
            je .L_42ab40

            test R12B,R12B
            je .L_42ab40

            mov R15D,DWORD PTR [RSP+12]
            lea EBP,DWORD PTR [R15+R11*1]
            sub R15D,EDI
            sub EBP,EDI
            add EBP,R9D
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,R15D
            mov R15D,DWORD PTR [RSP+24]
            add EBP,R9D
            add EBP,DWORD PTR [RSP+28]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,R13D
            sub R15D,EBX
            movzx EBP,WORD PTR [R8+RBP*2]
            mov EBX,R15D
            imul EBX,ESI
            sub EBP,R12D
            sub R12D,R13D
            imul EBP,R14D
            imul R12D,ECX
            add EBP,EBX
            add R12D,EBP
            jmp .L_42aa75
.L_42ab40:

            cmp ESI,ECX
            setle R13B
            jg .L_42aeb0

            cmp BYTE PTR [RSP+33],0
            je .L_42aeb0

            mov EBP,DWORD PTR [RSP+12]
            mov R15D,DWORD PTR [RSP+28]
            sub EBP,EDI
            add EBP,R9D
            add EBP,R15D
            add EBP,EAX
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,DWORD PTR [RSP+84]
            add EBP,R15D
            mov R15D,DWORD PTR [RSP+24]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            sub EBP,R13D
            sub R13D,R12D
            sub R12D,EBX
            imul R13D,ESI
            imul EBP,R14D
            imul R12D,ECX
            add EBP,R13D
            lea R13D,DWORD PTR [RBP+R12*1]
.L_42aba8:

            lea EBP,DWORD PTR [R13+32767]
            movsxd RBX,EBP
            imul RBX,RBX,-2147450879
            shr RBX,32
            add EBX,EBP
            sar EBP,31
            sar EBX,15
            sub EBX,EBP
            lea EBX,DWORD PTR [R13+RBX*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_42aaa5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42abe0:

            mov EAX,DWORD PTR [RSP+52]
            mov R15,QWORD PTR [RSP+40]
            xor ECX,ECX
            mov EDI,DWORD PTR [RSP+36]
            mov R8,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            sub EAX,1
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac08:

            movzx EDX,WORD PTR [R9+RCX*1]
            movzx EAX,WORD PTR [R15+RCX*1]
            sub EAX,EDX
            imul EAX,EDI
            add EAX,32768
            shr EAX,16
            add EAX,EDX
            mov WORD PTR [R8+RCX*1],AX
            add RCX,2
            cmp RSI,RCX
            jne .L_42ac08
.L_42ac2f:

            mov RAX,QWORD PTR [RSP+616]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b1e2

            add RSP,632
.L_42ac4d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ac60:

            mov R14D,DWORD PTR [RSP+80]
            mov EBP,DWORD PTR [RSP+16]
            lea R15,QWORD PTR [RSP+352]
            mov R13D,DWORD PTR [RSP+28]
            movsxd RDX,DWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+20],EAX
            mov R8D,R14D
            mov QWORD PTR [RSP+40],R15
            sub R8D,EDI
            add R8D,EBP
            lea R10,QWORD PTR [RBX+RDX*2]
            mov RBX,R15
            add R8D,R13D
            mov EDX,EDI
            mov R15D,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],R8D
            mov R8D,DWORD PTR [RSP+68]
            sub R8D,EDI
            mov DWORD PTR [RSP+64],R8D
            mov R8D,R9D
            sub R8D,EDI
            add R8D,EBP
            add R8D,R13D
            mov DWORD PTR [RSP+24],R8D
            lea R8D,DWORD PTR [R14+R11*1]
            sub R8D,EDI
            add R8D,EBP
            mov DWORD PTR [RSP+68],R8D
            jmp .L_42ad7c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ace0:

            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RAX+R11*1]
            mov EAX,DWORD PTR [RSP+24]
            sub R12D,EDI
            add R12D,R9D
            lea R13D,DWORD PTR [RAX+RDX*1]
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,R11D
            movzx R13D,WORD PTR [R10+R13*2]
            sub R12D,EDI
            add R12D,R9D
            add R12D,DWORD PTR [RSP+16]
            mov EAX,R14D
            sub EAX,EBP
            add R12D,EDX
            mov EBP,EAX
            movzx R12D,WORD PTR [R10+R12*2]
            imul EBP,ESI
            sub R13D,R12D
            sub R12D,R14D
            imul R12D,R15D
            imul R13D,ECX
            add EBP,R12D
            add R13D,EBP
.L_42ad37:

            lea EBP,DWORD PTR [R13+32767]
            movsxd R14,EBP
            imul R14,R14,-2147450879
            shr R14,32
            add R14D,EBP
            sar EBP,31
            sar R14D,15
            sub R14D,EBP
            lea EBP,DWORD PTR [R13+R14*1+32768]
            sar EBP,16
            add R8D,EBP
.L_42ad67:

            mov WORD PTR [RBX],R8W
            add EDX,1
            add RBX,2
            cmp EDX,DWORD PTR [RSP+20]
            je .L_42abe0
.L_42ad7c:

            mov R8D,EDX
            cmp BYTE PTR [RSP+32],0
            movzx EBP,WORD PTR [R10+R8*2]
            mov R8D,EBP
            jne .L_42ace0

            cmp ESI,ECX
            setge R12B
            cmp R15D,ECX
            setle R13B
            test R12B,R12B
            je .L_42ae08

            test R13B,R13B
            je .L_42ae08

            mov EAX,DWORD PTR [RSP+12]
            lea R12D,DWORD PTR [RAX+R11*1]
            sub EAX,EDI
            sub R12D,EDI
            add R12D,R9D
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,EAX
            mov EAX,DWORD PTR [RSP+24]
            add R12D,R9D
            add R12D,DWORD PTR [RSP+28]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,R14D
            sub EAX,EBP
            movzx R12D,WORD PTR [R10+R12*2]
            mov EBP,EAX
            imul EBP,ESI
            sub R12D,R13D
            sub R13D,R14D
            imul R12D,R15D
            imul R13D,ECX
            add R12D,EBP
            add R13D,R12D
            jmp .L_42ad37
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ae08:

            cmp ESI,ECX
            setle R14B
            jg .L_42af20

            cmp BYTE PTR [RSP+33],0
            je .L_42af20

            mov R12D,DWORD PTR [RSP+12]
            mov EAX,DWORD PTR [RSP+28]
            sub R12D,EDI
            add R12D,R9D
            add R12D,EAX
            add R12D,EDX
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,DWORD PTR [RSP+64]
            add R12D,EAX
            mov EAX,DWORD PTR [RSP+24]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBP
            imul R14D,ESI
            imul R12D,R15D
            imul R13D,ECX
            add R12D,R14D
            lea R14D,DWORD PTR [R12+R13*1]
.L_42ae72:

            lea R12D,DWORD PTR [R14+32767]
            movsxd RBP,R12D
            imul RBP,RBP,-2147450879
            shr RBP,32
            add EBP,R12D
            sar R12D,31
            sar EBP,15
            sub EBP,R12D
            lea EBP,DWORD PTR [R14+RBP*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_42ad67
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42aeb0:

            cmp ESI,R14D
            setle BYTE PTR [RSP+35]
            test BPL,BPL
            movzx R15D,BYTE PTR [RSP+35]
            je .L_42b028

            test R15B,R15B
            je .L_42b028

            mov R15D,DWORD PTR [RSP+88]
            mov EBP,R11D
            sub EBP,EDI
            add EBP,R9D
            add EBP,DWORD PTR [RSP+16]
            lea R12D,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R12D,WORD PTR [R8+R12*2]
            lea R13D,DWORD PTR [R15+RAX*1]
            add EBP,EAX
            movzx EBP,WORD PTR [R8+RBP*2]
            movzx R13D,WORD PTR [R8+R13*2]
            sub R13D,EBP
            sub EBP,R12D
            sub R12D,EBX
            imul EBP,ESI
            imul R12D,R14D
            imul R13D,ECX
            add EBP,R12D
            add R13D,EBP
            jmp .L_42aba8
          .byte 0x66
          .byte 0x90
.L_42af20:

            cmp ESI,R15D
            setle BYTE PTR [RSP+35]
            test R12B,R12B
            movzx EAX,BYTE PTR [RSP+35]
            je .L_42af90

            test AL,AL
            je .L_42af90

            mov EAX,DWORD PTR [RSP+68]
            mov R12D,R11D
            sub R12D,EDI
            add R12D,R9D
            add R12D,DWORD PTR [RSP+16]
            lea R13D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R10+R13*2]
            lea R14D,DWORD PTR [RAX+RDX*1]
            add R12D,EDX
            movzx R12D,WORD PTR [R10+R12*2]
            movzx R14D,WORD PTR [R10+R14*2]
            sub R14D,R12D
            sub R12D,R13D
            sub R13D,EBP
            imul R12D,ESI
            imul R13D,R15D
            imul R14D,ECX
            add R12D,R13D
            add R14D,R12D
            jmp .L_42ae72
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42af90:

            test R14B,R14B
            je .L_42b150

            cmp BYTE PTR [RSP+34],0
            je .L_42b150

            mov EAX,DWORD PTR [RSP+80]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+68]
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R14D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            mov EAX,R14D
            sub EAX,EBP
            mov EBP,EAX
            sub R12D,R13D
            sub R13D,R14D
            imul EBP,R15D
            imul R12D,ESI
            imul R13D,ECX
            add R12D,EBP
            lea EBP,DWORD PTR [R12+R13*1]
            lea R12D,DWORD PTR [RBP+32767]
            movsxd R13,R12D
            imul R13,R13,-2147450879
            shr R13,32
            add R13D,R12D
            sar R12D,31
            sar R13D,15
            sub R13D,R12D
            lea EBP,DWORD PTR [RBP+R13*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_42ad67
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b028:

            test R13B,R13B
            je .L_42b0c0

            cmp BYTE PTR [RSP+34],0
            je .L_42b0c0

            mov R15D,DWORD PTR [RSP+92]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+88]
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            mov R15D,R13D
            sub R15D,EBX
            mov EBX,R15D
            sub EBP,R12D
            sub R12D,R13D
            imul EBX,R14D
            imul EBP,ESI
            imul R12D,ECX
            add EBP,EBX
            lea EBX,DWORD PTR [RBP+R12*1]
            lea EBP,DWORD PTR [RBX+32767]
            movsxd R12,EBP
            imul R12,R12,-2147450879
            shr R12,32
            add R12D,EBP
            sar EBP,31
            sar R12D,15
            sub R12D,EBP
            lea EBX,DWORD PTR [RBX+R12*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_42aaa5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b0c0:

            test R12B,R12B
            je .L_42aaa5

            cmp BYTE PTR [RSP+35],0
            je .L_42aaa5

            mov R15D,DWORD PTR [RSP+92]
            lea EBP,DWORD PTR [R15+RAX*1]
            mov R15D,DWORD PTR [RSP+24]
            movzx R13D,WORD PTR [R8+RBP*2]
            mov EBP,DWORD PTR [RSP+84]
            add EBP,DWORD PTR [RSP+28]
            add EBP,EAX
            movzx R12D,WORD PTR [R8+RBP*2]
            lea EBP,DWORD PTR [R15+RAX*1]
            movzx EBP,WORD PTR [R8+RBP*2]
            sub EBP,R13D
            sub R13D,R12D
            sub R12D,EBX
            imul EBP,ESI
            imul R13D,R14D
            imul R12D,ECX
            add R13D,EBP
            lea EBP,DWORD PTR [R13+R12*1]
            lea R12D,DWORD PTR [RBP+32767]
            movsxd RBX,R12D
            imul RBX,RBX,-2147450879
            shr RBX,32
            add EBX,R12D
            sar R12D,31
            sar EBX,15
            sub EBX,R12D
            lea EBX,DWORD PTR [RBP+RBX*1+32768]
            sar EBX,16
            add EDX,EBX
            jmp .L_42aaa5
          .byte 0x66
          .byte 0x90
.L_42b150:

            test R13B,R13B
            je .L_42ad67

            cmp BYTE PTR [RSP+35],0
            je .L_42ad67

            mov EAX,DWORD PTR [RSP+80]
            lea R12D,DWORD PTR [RAX+RDX*1]
            mov EAX,DWORD PTR [RSP+24]
            movzx R14D,WORD PTR [R10+R12*2]
            mov R12D,DWORD PTR [RSP+64]
            add R12D,DWORD PTR [RSP+28]
            add R12D,EDX
            movzx R13D,WORD PTR [R10+R12*2]
            lea R12D,DWORD PTR [RAX+RDX*1]
            movzx R12D,WORD PTR [R10+R12*2]
            sub R12D,R14D
            sub R14D,R13D
            sub R13D,EBP
            imul R12D,ESI
            imul R14D,R15D
            imul R13D,ECX
            add R14D,R12D
            lea R12D,DWORD PTR [R14+R13*1]
            lea R13D,DWORD PTR [R12+32767]
            movsxd RBP,R13D
            imul RBP,RBP,-2147450879
            shr RBP,32
            add EBP,R13D
            sar R13D,31
            sar EBP,15
            sub EBP,R13D
            lea EBP,DWORD PTR [R12+RBP*1+32768]
            sar EBP,16
            add R8D,EBP
            jmp .L_42ad67
.L_42b1e2:

            call __stack_chk_fail@PLT
.L_42b1e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b1f0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea RCX,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_42b20b:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movdqu XMM0,XMMWORD PTR [R14]
            lea R8,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [R14+100]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,RCX
            mov R15D,EBX
            imul EBX,DWORD PTR [RDX+52]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov RSI,R12
            movdqu XMM0,XMMWORD PTR [R14+16]
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movaps XMMWORD PTR [RSP+48],XMM0
            movsxd RBX,EAX
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+32]
            shr RBX,32
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            movaps XMMWORD PTR [RSP+64],XMM0
            sub EBX,EAX
            add EBX,EDX
            mov EAX,EBX
            movdqu XMM0,XMMWORD PTR [R14+48]
            sar EAX,16
            mov RDX,QWORD PTR [R14+128]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [R14+64]
            mov QWORD PTR [RSP+160],RDX
            mov EDX,EAX
            movaps XMMWORD PTR [RSP+96],XMM0
            imul EDX,R9D
            movdqu XMM0,XMMWORD PTR [R14+80]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+152],RDX
            mov RDX,R8
            mov DWORD PTR [RSP+24],R9D
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call .L_42a800

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,R8
            mov RDI,RCX
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_42a800

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_42b3a0

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
.L_42b378:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_42b378
.L_42b3a0:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b3c5

            add RSP,712
.L_42b3ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b3c5:

            call __stack_chk_fail@PLT
.L_42b3ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42b3d0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea R8,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_42b3eb:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R15D,EBX
            mov R9D,DWORD PTR [R14+104]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R8
            mov RSI,R12
            imul EBX,DWORD PTR [RDX+52]
            movdqu XMM0,XMMWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+48],XMM0
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movdqu XMM0,XMMWORD PTR [R14+32]
            movsxd RBX,EAX
            movaps XMMWORD PTR [RSP+64],XMM0
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+48]
            shr RBX,32
            movaps XMMWORD PTR [RSP+80],XMM0
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            sub EBX,EAX
            movdqu XMM0,XMMWORD PTR [R14+64]
            add EBX,EDX
            mov RDX,QWORD PTR [R14+128]
            mov EAX,EBX
            movaps XMMWORD PTR [RSP+96],XMM0
            sar EAX,16
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov EDX,DWORD PTR [R14+72]
            mov DWORD PTR [RSP+28],EAX
            mov DWORD PTR [RSP+100],EDX
            mov EDX,EAX
            mov DWORD PTR [RSP+24],R9D
            imul EDX,R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            call .L_42b1f0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_42b1f0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_42b588

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
.L_42b560:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_42b560
.L_42b588:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b5ad

            add RSP,712
.L_42b5a2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b5ad:

            call __stack_chk_fail@PLT
.L_42b5b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b5c0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            lea R8,QWORD PTR [RDI+2]
            push RBP
            push RBX
            mov R13,RSI
            sub RSP,712
.L_42b5db:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R15D,EBX
            mov R9D,DWORD PTR [R14+108]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R8
            mov RSI,R12
            imul EBX,DWORD PTR [RDX+52]
            movdqu XMM0,XMMWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+48],XMM0
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movdqu XMM0,XMMWORD PTR [R14+32]
            movsxd RBX,EAX
            movaps XMMWORD PTR [RSP+64],XMM0
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+48]
            shr RBX,32
            movaps XMMWORD PTR [RSP+80],XMM0
            add EBX,EAX
            sar EAX,31
            sar EBX,15
            sub EBX,EAX
            movdqu XMM0,XMMWORD PTR [R14+64]
            add EBX,EDX
            mov RDX,QWORD PTR [R14+128]
            mov EAX,EBX
            movaps XMMWORD PTR [RSP+96],XMM0
            sar EAX,16
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R14+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov RDX,QWORD PTR [R14+72]
            mov DWORD PTR [RSP+28],EAX
            mov QWORD PTR [RSP+100],RDX
            mov EDX,EAX
            mov DWORD PTR [RSP+24],R9D
            imul EDX,R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            call .L_42b3d0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_42b3d0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_42b778

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
.L_42b750:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_42b750
.L_42b778:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b79d

            add RSP,712
.L_42b792:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b79d:

            call __stack_chk_fail@PLT
.L_42b7a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b7b0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            sub RSP,712
.L_42b7c7:

            movzx EBX,WORD PTR [RDI]
            mov RBP,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+696],RAX
            xor EAX,EAX
            movdqu XMM0,XMMWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [R14+112]
            mov R8,QWORD PTR [R14+72]
            lea R12,QWORD PTR [RSP+176]
            mov R15D,EBX
            imul EBX,DWORD PTR [RDX+52]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+100],R8
            lea R8,QWORD PTR [RDI+2]
            mov RDI,R8
            movdqu XMM0,XMMWORD PTR [R14+16]
            lea EAX,DWORD PTR [RBX+32767]
            mov EDX,EBX
            movaps XMMWORD PTR [RSP+48],XMM0
            movsxd RBX,EAX
            imul RBX,RBX,-2147450879
            movdqu XMM0,XMMWORD PTR [R14+32]
            shr RBX,32
            add EBX,EAX
            sar EAX,31
            movaps XMMWORD PTR [RSP+64],XMM0
            sar EBX,15
            sub EBX,EAX
            add EBX,EDX
            movdqu XMM0,XMMWORD PTR [R14+48]
            mov EAX,EBX
            mov RDX,QWORD PTR [R14+128]
            sar EAX,16
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [R14+80]
            mov QWORD PTR [RSP+160],RDX
            mov EDX,EAX
            movaps XMMWORD PTR [RSP+112],XMM0
            imul EDX,R9D
            movdqu XMM0,XMMWORD PTR [R14+96]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBP+RDX*2]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R14+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [R14+56]
            movups XMMWORD PTR [RSP+84],XMM0
            mov ESI,DWORD PTR [R14+80]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RCX
            mov DWORD PTR [RSP+108],ESI
            mov RSI,R12
            mov DWORD PTR [RSP+28],EAX
            mov DWORD PTR [RSP+24],R9D
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],R8
            call .L_42b5c0

            mov EAX,DWORD PTR [RSP+28]
            xor EDX,EDX
            mov R9D,DWORD PTR [RSP+24]
            cmp R15W,-1
            mov RCX,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            setne DL
            add EAX,EDX
            imul EAX,R9D
            mov RDX,RCX
            mov RDI,R8
            cdqe 
            lea RAX,QWORD PTR [RBP+RAX*2]
            lea RBP,QWORD PTR [RSP+432]
            mov RSI,RBP
            mov QWORD PTR [RSP+152],RAX
            call .L_42b5c0

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_42b968

            sub EAX,1
            movzx EBX,BX
            xor EDX,EDX
            lea RSI,QWORD PTR [RAX+RAX*1+2]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b940:

            movzx ECX,WORD PTR [R12+RDX*1]
            movzx EAX,WORD PTR [RBP+RDX*1]
            sub EAX,ECX
            imul EAX,EBX
            add EAX,32768
            shr EAX,16
            add EAX,ECX
            mov WORD PTR [R13+RDX*1],AX
            add RDX,2
            cmp RSI,RDX
            jne .L_42b940
.L_42b968:

            mov RAX,QWORD PTR [RSP+696]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b98d

            add RSP,712
.L_42b982:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42b98d:

            call __stack_chk_fail@PLT
.L_42b992:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b9a0:

            pxor XMM1,XMM1
            mov RCX,QWORD PTR [RDX+120]
            movss XMM0,DWORD PTR [RDI]
            ucomiss XMM1,XMM0
            ja .L_42baa8

            ucomiss XMM0,XMM0
            jp .L_42baa8

            ucomiss XMM0,DWORD PTR [RIP+.L_42d4ec]
            jbe .L_42b9d8
.L_42b9c7:

            mov EAX,DWORD PTR [RDX+52]
            movss XMM0,DWORD PTR [RCX+RAX*4]
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b9d8:

            jp .L_42b9dc

            je .L_42b9c7
.L_42b9dc:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM1,XMM1
            movss XMM2,DWORD PTR [RIP+.L_42d500]
            movss XMM5,DWORD PTR [RIP+.L_42d4f0]
            movaps XMM4,XMM2
            cvtsi2ss XMM1,RAX
            mulss XMM0,XMM1
            movaps XMM3,XMM0
            movaps XMM1,XMM0
            andps XMM3,XMM2
            ucomiss XMM5,XMM3
            jbe .L_42ba39

            cvttss2si EAX,XMM0
            pxor XMM3,XMM3
            movss XMM6,DWORD PTR [RIP+.L_42d4ec]
            andnps XMM4,XMM0
            cvtsi2ss XMM3,EAX
            movaps XMM1,XMM3
            cmpnless XMM1,XMM0
            andps XMM1,XMM6
            subss XMM3,XMM1
            movaps XMM1,XMM3
            orps XMM1,XMM4
.L_42ba39:

            movaps XMM3,XMM0
            cvttss2si EDX,XMM1
            movaps XMM1,XMM0
            andps XMM3,XMM2
            ucomiss XMM5,XMM3
            jbe .L_42ba71

            cvttss2si EAX,XMM0
            pxor XMM3,XMM3
            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
            andnps XMM2,XMM0
            cvtsi2ss XMM3,EAX
            cmpnless XMM1,XMM3
            andps XMM1,XMM4
            addss XMM1,XMM3
            orps XMM1,XMM2
.L_42ba71:

            movsxd RAX,EDX
            movss XMM3,DWORD PTR [RCX+RAX*4]
            cvttss2si EAX,XMM1
            pxor XMM1,XMM1
            cvtsi2ss XMM1,EDX
            cdqe 
            movss XMM2,DWORD PTR [RCX+RAX*4]
            subss XMM2,XMM3
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM3
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42baa8:

            pxor XMM0,XMM0
            jmp .L_42b9dc
.L_42bab1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bac0:

            pxor XMM0,XMM0
            mov R8,QWORD PTR [RDX+120]
            movss XMM1,DWORD PTR [RDI]
            ucomiss XMM0,XMM1
            ja .L_42bbf0

            ucomiss XMM1,XMM1
            jp .L_42bbf0

            ucomiss XMM1,DWORD PTR [RIP+.L_42d4ec]
            jbe .L_42baf8
.L_42bae7:

            mov EAX,DWORD PTR [RDX+52]
            movss XMM0,DWORD PTR [R8+RAX*4]
            movss DWORD PTR [RSI],XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42baf8:

            jp .L_42bafc

            je .L_42bae7
.L_42bafc:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM0,XMM0
            movss XMM3,DWORD PTR [RIP+.L_42d500]
            movss XMM5,DWORD PTR [RIP+.L_42d4f0]
            movaps XMM4,XMM3
            cvtsi2ss XMM0,RAX
            mulss XMM0,XMM1
            movaps XMM2,XMM0
            movaps XMM1,XMM0
            andps XMM2,XMM3
            ucomiss XMM5,XMM2
            jbe .L_42bb59

            cvttss2si EAX,XMM0
            pxor XMM2,XMM2
            movss XMM6,DWORD PTR [RIP+.L_42d4ec]
            andnps XMM4,XMM0
            cvtsi2ss XMM2,EAX
            movaps XMM1,XMM2
            cmpnless XMM1,XMM0
            andps XMM1,XMM6
            subss XMM2,XMM1
            movaps XMM1,XMM2
            orps XMM1,XMM4
.L_42bb59:

            cvttss2si EDI,XMM1
            movaps XMM1,XMM0
            movaps XMM2,XMM0
            andps XMM1,XMM3
            ucomiss XMM5,XMM1
            jbe .L_42bb91

            cvttss2si EAX,XMM0
            pxor XMM1,XMM1
            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
            andnps XMM3,XMM0
            cvtsi2ss XMM1,EAX
            cmpnless XMM2,XMM1
            andps XMM2,XMM4
            addss XMM2,XMM1
            orps XMM2,XMM3
.L_42bb91:

            pxor XMM1,XMM1
            cvttss2si ECX,XMM2
            mov EAX,DWORD PTR [RDX+84]
            cvtsi2ss XMM1,EDI
            imul EDI,EAX
            imul ECX,EAX
            mov EAX,DWORD PTR [RDX+16]
            test EAX,EAX
            subss XMM0,XMM1
            movaps XMM1,XMM0
            je .L_42bbec

            lea R9D,DWORD PTR [RAX-1]
            xor EAX,EAX
            add R9,1
            nop
            nop
.L_42bbc0:

            lea EDX,DWORD PTR [RDI+RAX*1]
            movss XMM2,DWORD PTR [R8+RDX*4]
            lea EDX,DWORD PTR [RCX+RAX*1]
            movss XMM0,DWORD PTR [R8+RDX*4]
            subss XMM0,XMM2
            mulss XMM0,XMM1
            addss XMM0,XMM2
            movss DWORD PTR [RSI+RAX*4],XMM0
            add RAX,1
            cmp R9,RAX
            jne .L_42bbc0
.L_42bbec:

            ret 
          .byte 0x66
          .byte 0x90
.L_42bbf0:

            pxor XMM1,XMM1
            jmp .L_42bafc
.L_42bbf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bc00:

            push RBX
.L_42bc01:

            pxor XMM4,XMM4
            mov R8,RDX
            mov R9,QWORD PTR [RDX+120]
            mov R10D,DWORD PTR [RDX+16]
            movss XMM5,DWORD PTR [RDI]
            ucomiss XMM4,XMM5
            ja .L_42bd70

            ucomiss XMM5,XMM5
            jp .L_42bd70

            movss XMM6,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM0,XMM6
            minss XMM0,XMM5
.L_42bc35:

            mov EAX,DWORD PTR [R8+52]
            pxor XMM2,XMM2
            movss XMM3,DWORD PTR [RDI+4]
            cvtsi2ss XMM2,RAX
            mulss XMM2,XMM0
            pxor XMM0,XMM0
            ucomiss XMM0,XMM3
            ja .L_42bc60

            ucomiss XMM3,XMM3
            jp .L_42bc60

            movaps XMM0,XMM6
            minss XMM0,XMM3
.L_42bc60:

            mov EAX,DWORD PTR [R8+56]
            pxor XMM4,XMM4
            pxor XMM1,XMM1
            mov EDI,DWORD PTR [R8+88]
            movsd XMM7,QWORD PTR [RIP+.L_42d510]
            cvtsi2ss XMM4,RAX
            cvtss2sd XMM1,XMM2
            addsd XMM1,XMM7
            movq RDX,XMM1
            sar EDX,16
            mov ECX,EDX
            imul ECX,EDI
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            add EDI,ECX
            cvtsi2ss XMM0,EDX
            mov EDX,DWORD PTR [R8+84]
            subss XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM7
            movq RAX,XMM0
            pxor XMM0,XMM0
            sar EAX,16
            cvtsi2ss XMM0,EAX
            ucomiss XMM5,XMM6
            cmovae EDI,ECX
            imul EAX,EDX
            add EDX,EAX
            ucomiss XMM3,XMM6
            mov EBX,EDX
            subss XMM4,XMM0
            cmovae EBX,EAX
            test R10D,R10D
            jle .L_42bd68

            lea EDX,DWORD PTR [R10-1]
            lea R11,QWORD PTR [RDX*4+4]
            lea EDX,DWORD PTR [RCX+RAX*1]
            add EAX,EDI
            add EDI,EBX
            cdqe 
            movsxd RDX,EDX
            movsxd RDI,EDI
            lea R10,QWORD PTR [R9+RDX*4]
            lea EDX,DWORD PTR [RCX+RBX*1]
            lea RCX,QWORD PTR [R9+RAX*4]
            xor EAX,EAX
            movsxd RDX,EDX
            lea R8,QWORD PTR [R9+RDX*4]
            lea RDX,QWORD PTR [R9+RDI*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd20:

            movss XMM0,DWORD PTR [R10+RAX*1]
            movss XMM1,DWORD PTR [RCX+RAX*1]
            subss XMM1,XMM0
            movss XMM3,DWORD PTR [R8+RAX*1]
            mulss XMM1,XMM2
            addss XMM1,XMM0
            movss XMM0,DWORD PTR [RDX+RAX*1]
            subss XMM0,XMM3
            mulss XMM0,XMM2
            addss XMM0,XMM3
            subss XMM0,XMM1
            mulss XMM0,XMM4
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,R11
            jne .L_42bd20
.L_42bd68:

            pop RBX
.L_42bd69:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bd70:

            pxor XMM0,XMM0
            movss XMM6,DWORD PTR [RIP+.L_42d4ec]
            jmp .L_42bc35
.L_42bd81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bd90:

            push R13
            pxor XMM4,XMM4
            push R12
            push RBP
            push RBX
.L_42bd9a:

            mov R8,QWORD PTR [RDX+120]
            mov R9D,DWORD PTR [RDX+16]
            movss XMM6,DWORD PTR [RDI]
            ucomiss XMM4,XMM6
            ja .L_42bfe8

            ucomiss XMM6,XMM6
            jp .L_42bfe8

            movss XMM1,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM0,XMM1
            minss XMM0,XMM6
.L_42bdc7:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM2,XMM2
            movss XMM7,DWORD PTR [RDI+4]
            ucomiss XMM4,XMM7
            cvtsi2ss XMM2,RAX
            mulss XMM2,XMM0
            pxor XMM0,XMM0
            ja .L_42bdf5

            ucomiss XMM7,XMM7
            jp .L_42bff9

            movaps XMM0,XMM1
            minss XMM0,XMM7
.L_42bdf5:

            mov EAX,DWORD PTR [RDX+56]
            pxor XMM3,XMM3
            movss XMM5,DWORD PTR [RDI+8]
            ucomiss XMM4,XMM5
            cvtsi2ss XMM3,RAX
            mulss XMM3,XMM0
            ja .L_42be1b

            ucomiss XMM5,XMM5
            jp .L_42be1b

            movaps XMM4,XMM1
            minss XMM4,XMM5
.L_42be1b:

            mov EAX,DWORD PTR [RDX+60]
            pxor XMM0,XMM0
            movsd XMM8,QWORD PTR [RIP+.L_42d510]
            mov R13D,DWORD PTR [RDX+92]
            mov R10D,DWORD PTR [RDX+88]
            cvtsi2ss XMM0,RAX
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,XMM8
            movq RDI,XMM0
            pxor XMM0,XMM0
            sar EDI,16
            cvtsi2ss XMM0,EDI
            imul EDI,R13D
            add R13D,EDI
            subss XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,XMM8
            movd ECX,XMM0
            pxor XMM0,XMM0
            sar ECX,16
            cvtsi2ss XMM0,ECX
            mov EAX,ECX
            mov ECX,DWORD PTR [RDX+84]
            subss XMM3,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM8
            movq R12,XMM0
            pxor XMM0,XMM0
            sar R12D,16
            ucomiss XMM6,XMM1
            cvtsi2ss XMM0,R12D
            cmovae R13D,EDI
            imul EAX,R10D
            add R10D,EAX
            ucomiss XMM7,XMM1
            cmovae R10D,EAX
            imul R12D,ECX
            subss XMM4,XMM0
            add ECX,R12D
            ucomiss XMM5,XMM1
            cmovae ECX,R12D
            test R9D,R9D
            jle .L_42bfdc

            lea R11D,DWORD PTR [RDI+RAX*1]
            lea EDX,DWORD PTR [RAX+R13*1]
            lea EAX,DWORD PTR [R9-1]
            add EDI,R10D
            add R13D,R10D
            lea RBP,QWORD PTR [RAX*4+4]
            lea EAX,DWORD PTR [R12+R11*1]
            cdqe 
            lea RBX,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+R11*1]
            cdqe 
            lea R11,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+RDI*1]
            add EDI,ECX
            movsxd RDI,EDI
            cdqe 
            lea R9,QWORD PTR [R8+RDI*4]
            lea R10,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+RDX*1]
            cdqe 
            lea RDI,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+RDX*1]
            cdqe 
            lea RDX,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [R12+R13*1]
            cdqe 
            lea R12,QWORD PTR [R8+RAX*4]
            lea EAX,DWORD PTR [RCX+R13*1]
            cdqe 
            lea RCX,QWORD PTR [R8+RAX*4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bf48:

            movss XMM1,DWORD PTR [RBX+RAX*1]
            movss XMM5,DWORD PTR [R11+RAX*1]
            movss XMM6,DWORD PTR [RDI+RAX*1]
            movss XMM0,DWORD PTR [RDX+RAX*1]
            subss XMM6,XMM1
            subss XMM0,XMM5
            movss XMM8,DWORD PTR [R10+RAX*1]
            movss XMM7,DWORD PTR [R9+RAX*1]
            mulss XMM6,XMM2
            mulss XMM0,XMM2
            addss XMM6,XMM1
            movss XMM1,DWORD PTR [R12+RAX*1]
            addss XMM5,XMM0
            movss XMM0,DWORD PTR [RCX+RAX*1]
            subss XMM1,XMM8
            subss XMM0,XMM7
            mulss XMM1,XMM2
            mulss XMM0,XMM2
            addss XMM1,XMM8
            addss XMM0,XMM7
            subss XMM1,XMM6
            subss XMM0,XMM5
            mulss XMM1,XMM3
            mulss XMM0,XMM3
            addss XMM1,XMM6
            addss XMM0,XMM5
            subss XMM0,XMM1
            mulss XMM0,XMM4
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,RBP
            jne .L_42bf48
.L_42bfdc:

            pop RBX
.L_42bfdd:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bfe8:

            pxor XMM0,XMM0
            movss XMM1,DWORD PTR [RIP+.L_42d4ec]
            jmp .L_42bdc7
.L_42bff9:

            pxor XMM0,XMM0
            jmp .L_42bdf5
.L_42c002:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c010:

            push R15
            pxor XMM7,XMM7
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42c01e:

            mov RCX,QWORD PTR [RDX+120]
            mov EBX,DWORD PTR [RDX+16]
            movss XMM8,DWORD PTR [RDI]
            ucomiss XMM7,XMM8
            ja .L_42c3f8

            ucomiss XMM8,XMM8
            jp .L_42c3f8

            movss XMM1,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM0,XMM1
            minss XMM0,XMM8
.L_42c04e:

            mov EAX,DWORD PTR [RDX+52]
            pxor XMM4,XMM4
            movss XMM3,DWORD PTR [RDI+4]
            ucomiss XMM7,XMM3
            cvtsi2ss XMM4,RAX
            mulss XMM4,XMM0
            pxor XMM0,XMM0
            ja .L_42c07c

            ucomiss XMM3,XMM3
            jp .L_42c412

            movaps XMM0,XMM1
            minss XMM0,XMM3
.L_42c07c:

            mov EAX,DWORD PTR [RDX+56]
            pxor XMM5,XMM5
            movss XMM2,DWORD PTR [RDI+8]
            ucomiss XMM7,XMM2
            cvtsi2ss XMM5,RAX
            mulss XMM5,XMM0
            pxor XMM0,XMM0
            ja .L_42c0aa

            ucomiss XMM2,XMM2
            jp .L_42c409

            movaps XMM0,XMM1
            minss XMM0,XMM2
.L_42c0aa:

            mov EAX,DWORD PTR [RDX+60]
            pxor XMM6,XMM6
            movsd XMM9,QWORD PTR [RIP+.L_42d510]
            mov R9D,DWORD PTR [RDX+92]
            mov R13D,DWORD PTR [RDX+88]
            mov R11D,DWORD PTR [RDX+84]
            cvtsi2ss XMM6,RAX
            mulss XMM6,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM4
            addsd XMM0,XMM9
            movq R12,XMM0
            pxor XMM0,XMM0
            sar R12D,16
            cvtsi2ss XMM0,R12D
            imul R12D,R9D
            add R9D,R12D
            subss XMM4,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM5
            addsd XMM0,XMM9
            movq RDI,XMM0
            pxor XMM0,XMM0
            sar EDI,16
            cvtsi2ss XMM0,EDI
            subss XMM5,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM6
            addsd XMM0,XMM9
            movq R8,XMM0
            pxor XMM0,XMM0
            sar R8D,16
            ucomiss XMM8,XMM1
            cvtsi2ss XMM0,R8D
            cmovae R9D,R12D
            imul EDI,R13D
            add R13D,EDI
            ucomiss XMM3,XMM1
            mov R10D,R13D
            cmovae R10D,EDI
            imul R8D,R11D
            subss XMM6,XMM0
            add R11D,R8D
            ucomiss XMM2,XMM1
            cmovae R11D,R8D
            test EBX,EBX
            jle .L_42c3a0

            lea R13D,DWORD PTR [R12+R10*1]
            lea R15D,DWORD PTR [R12+RDI*1]
            add R12D,R8D
            xor EDX,EDX
            lea R14D,DWORD PTR [R13+R11*1]
            lea R13D,DWORD PTR [R12+R10*1]
            lea EAX,DWORD PTR [R8+R15*1]
            mov DWORD PTR [RSP-4],R14D
            lea R14D,DWORD PTR [R9+R10*1]
            mov DWORD PTR [RSP-8],R13D
            lea R13D,DWORD PTR [R8+R9*1]
            cdqe 
            add R14D,R11D
            lea RBP,QWORD PTR [RCX+RAX*4]
            xor EAX,EAX
            add R13D,R10D
            mov R12D,R14D
            jmp .L_42c223
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c1b0:

            ucomiss XMM5,XMM6
            jb .L_42c22e

            lea R10D,DWORD PTR [RDI+R8*1]
            add R10D,R9D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R13+RAX*1]
            movaps XMM3,XMM1
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM0
            movaps XMM2,XMM8
            movsxd R10,R10D
            subss XMM2,XMM1
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM1,XMM8
.L_42c1f7:

            mulss XMM3,XMM4
            add EAX,1
            mulss XMM2,XMM5
            mulss XMM1,XMM6
            addss XMM0,XMM3
            addss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [RSI+RDX*1],XMM0
            add RDX,4
            cmp EBX,EAX
            je .L_42c3a0
.L_42c223:

            ucomiss XMM4,XMM5
            movss XMM0,DWORD PTR [RBP+RDX*1]
            jae .L_42c1b0
.L_42c22e:

            ucomiss XMM4,XMM6
            jb .L_42c288

            ucomiss XMM6,XMM5
            jb .L_42c288

            lea R10D,DWORD PTR [RDI+R8*1]
            add R10D,R9D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [RDI+R9*1]
            movaps XMM3,XMM8
            add R10D,R11D
            add R10D,EAX
            subss XMM3,XMM0
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM1
            subss XMM1,XMM8
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c288:

            ucomiss XMM6,XMM4
            jb .L_42c2e0

            ucomiss XMM4,XMM5
            jb .L_42c2e0

            lea R10D,DWORD PTR [RDI+R9*1]
            add R10D,R11D
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R15+R11*1]
            movaps XMM3,XMM8
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM1
            movsxd R10,R10D
            subss XMM1,XMM0
            movss XMM2,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM8
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c2e0:

            ucomiss XMM5,XMM4
            jb .L_42c330

            ucomiss XMM4,XMM6
            jb .L_42c330

            lea R10D,DWORD PTR [R13+RAX*1]
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            mov R10D,DWORD PTR [RSP-8]
            movaps XMM3,XMM8
            add R10D,EAX
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R12+RAX*1]
            subss XMM3,XMM2
            movsxd R10,R10D
            subss XMM2,XMM0
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM1,XMM8
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c330:

            ucomiss XMM5,XMM6
            jb .L_42c33a

            ucomiss XMM6,XMM4
            jae .L_42c3b0
.L_42c33a:

            ucomiss XMM6,XMM5
            jb .L_42c388

            ucomiss XMM5,XMM4
            jb .L_42c388

            mov R10D,DWORD PTR [RSP-4]
            add R10D,EAX
            movsxd R10,R10D
            movss XMM2,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R14+RAX*1]
            movsxd R10,R10D
            movss XMM3,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R15+R11*1]
            subss XMM3,XMM2
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            subss XMM2,XMM1
            subss XMM1,XMM0
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c388:

            pxor XMM1,XMM1
            pxor XMM2,XMM2
            pxor XMM3,XMM3
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c3a0:

            pop RBX
.L_42c3a1:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c3b0:

            mov R10D,DWORD PTR [RSP-4]
            add R10D,EAX
            movsxd R10,R10D
            movss XMM1,DWORD PTR [RCX+R10*4]
            lea R10D,DWORD PTR [R14+RAX*1]
            movsxd R10,R10D
            movss XMM3,DWORD PTR [RCX+R10*4]
            mov R10D,DWORD PTR [RSP-8]
            subss XMM3,XMM1
            add R10D,EAX
            movsxd R10,R10D
            movss XMM8,DWORD PTR [RCX+R10*4]
            movaps XMM2,XMM8
            subss XMM1,XMM8
            subss XMM2,XMM0
            jmp .L_42c1f7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c3f8:

            pxor XMM0,XMM0
            movss XMM1,DWORD PTR [RIP+.L_42d4ec]
            jmp .L_42c04e
.L_42c409:

            pxor XMM0,XMM0
            jmp .L_42c0aa
.L_42c412:

            pxor XMM0,XMM0
            jmp .L_42c07c
.L_42c41b:

            nop
            nop
            nop
            nop
            nop
.L_42c420:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42c43b:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM2,RAX
            mov EAX,DWORD PTR [RDX+96]
            ja .L_42c4b0

            ucomiss XMM1,XMM1
            jp .L_42c4b0

            movss XMM3,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM10,XMM1
            ucomiss XMM1,XMM3
            jbe .L_42c4bd

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM2,XMM0
            movaps XMM10,XMM2
            jmp .L_42c4f6
          .byte 0x90
.L_42c4b0:

            pxor XMM10,XMM10
            movss XMM3,DWORD PTR [RIP+.L_42d4ec]
.L_42c4bd:

            mulss XMM10,XMM2
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM10
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM3
            cmovae EAX,EDX
            subss XMM10,XMM0
.L_42c4f6:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+12],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov QWORD PTR [RSP+144],RDX
            mov RDX,QWORD PTR [RBX+56]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+68],RDX
            mov EDX,DWORD PTR [RBX+64]
            movdqu XMM0,XMMWORD PTR [RBX+64]
            mov DWORD PTR [RSP+76],EDX
            movsxd RDX,EBP
            movaps XMMWORD PTR [RSP+80],XMM0
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            call .L_42c010

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+12]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_42c010

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_42c610

            sub EAX,1
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_42c5e8:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM10
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_42c5e8
.L_42c610:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42c635

            add RSP,1208
.L_42c62a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42c635:

            call __stack_chk_fail@PLT
.L_42c63a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c640:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42c65b:

            pxor XMM2,XMM2
            movss XMM1,DWORD PTR [RDI]
            mov R15,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            mov ECX,DWORD PTR [RDX+100]
            ucomiss XMM0,XMM1
            movss XMM3,DWORD PTR [RIP+.L_42d4ec]
            cvtsi2ss XMM2,RAX
            ja .L_42c6d3

            ucomiss XMM1,XMM1
            jp .L_42c6d3

            ucomiss XMM1,XMM3
            jbe .L_42c6d0

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,ECX
            xor ECX,ECX
            subss XMM2,XMM0
            jmp .L_42c70c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c6d0:

            movaps XMM0,XMM1
.L_42c6d3:

            mulss XMM0,XMM2
            mov EAX,0
            pxor XMM2,XMM2
            cvtss2sd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM2
            pxor XMM2,XMM2
            sar EBP,16
            cvtsi2ss XMM2,EBP
            imul EBP,ECX
            ucomiss XMM1,XMM3
            cmovae ECX,EAX
            subss XMM0,XMM2
            movaps XMM2,XMM0
.L_42c70c:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea R14,QWORD PTR [RDI+4]
            lea R12,QWORD PTR [RSP+160]
            mov RAX,QWORD PTR [RBX+128]
            mov DWORD PTR [RSP+8],ECX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R12
            mov RDI,R14
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RAX
            movsxd RAX,EBP
            movdqu XMM0,XMMWORD PTR [RBX+16]
            lea RAX,QWORD PTR [R15+RAX*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov RDX,RAX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            mov QWORD PTR [RSP],RAX
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_42c420

            mov RDI,R14
            mov ECX,DWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP]
            add EBP,ECX
            movsxd RBP,EBP
            lea RDX,QWORD PTR [R15+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov QWORD PTR [RSP+136],RDX
            mov RSI,RBP
            mov RDX,RAX
            call .L_42c420

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_42c828

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
.L_42c800:

            movss XMM1,DWORD PTR [R12+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R13+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_42c800
.L_42c828:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42c84d

            add RSP,1208
.L_42c842:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42c84d:

            call __stack_chk_fail@PLT
.L_42c852:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c860:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42c87b:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            mov EAX,DWORD PTR [RDX+104]
            ja .L_42c8f0

            ucomiss XMM1,XMM1
            jp .L_42c8f0

            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_42c8fc

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_42c932
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c8f0:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
.L_42c8fc:

            mulss XMM2,XMM3
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM4
            cmovae EAX,EDX
            subss XMM2,XMM0
.L_42c932:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+8],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RDX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RBX+72]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov DWORD PTR [RSP+84],EDX
            movsxd RDX,EBP
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_42c640

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_42c640

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_42ca57

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
.L_42ca30:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_42ca30
.L_42ca57:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ca7c

            add RSP,1208
.L_42ca71:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42ca7c:

            call __stack_chk_fail@PLT
.L_42ca81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ca90:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1208
.L_42caab:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov R14,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1192],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            mov EAX,DWORD PTR [RDX+108]
            ja .L_42cb20

            ucomiss XMM1,XMM1
            jp .L_42cb20

            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_42cb2c

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            xor EAX,EAX
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_42cb62
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42cb20:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
.L_42cb2c:

            mulss XMM2,XMM3
            mov EDX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,EAX
            ucomiss XMM1,XMM4
            cmovae EAX,EDX
            subss XMM2,XMM0
.L_42cb62:

            movdqu XMM0,XMMWORD PTR [RBX]
            lea RCX,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RDI+4]
            mov RDX,QWORD PTR [RBX+128]
            lea R15,QWORD PTR [RSP+160]
            mov DWORD PTR [RSP+8],EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R15
            mov RDI,R13
            mov QWORD PTR [RSP],RCX
            movss DWORD PTR [RSP+12],XMM2
            mov QWORD PTR [RSP+144],RDX
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov RDX,QWORD PTR [RBX+72]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+84],RDX
            movsxd RDX,EBP
            lea RDX,QWORD PTR [R14+RDX*4]
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+136],RDX
            mov RDX,RCX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+68],XMM0
            call .L_42c860

            mov RDI,R13
            mov EAX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
            add EBP,EAX
            mov RDX,RCX
            movsxd RBP,EBP
            lea RAX,QWORD PTR [R14+RBP*4]
            lea RBP,QWORD PTR [RSP+672]
            mov RSI,RBP
            mov QWORD PTR [RSP+136],RAX
            call .L_42c860

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_42cc87

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
.L_42cc60:

            movss XMM1,DWORD PTR [R15+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R12+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_42cc60
.L_42cc87:

            mov RAX,QWORD PTR [RSP+1192]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ccac

            add RSP,1208
.L_42cca1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42ccac:

            call __stack_chk_fail@PLT
.L_42ccb1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ccc0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,1224
.L_42ccdb:

            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RDI]
            mov RCX,QWORD PTR [RDX+120]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1208],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+52]
            mov R15D,DWORD PTR [RDX+112]
            ucomiss XMM0,XMM1
            cvtsi2ss XMM3,RAX
            ja .L_42cd50

            ucomiss XMM1,XMM1
            jp .L_42cd50

            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
            movaps XMM2,XMM1
            ucomiss XMM1,XMM4
            jbe .L_42cd5c

            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM3
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,R15D
            xor R15D,R15D
            subss XMM3,XMM0
            movaps XMM2,XMM3
            jmp .L_42cd94
.L_42cd50:

            pxor XMM2,XMM2
            movss XMM4,DWORD PTR [RIP+.L_42d4ec]
.L_42cd5c:

            mulss XMM2,XMM3
            mov EAX,0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_42d510]
            movq RBP,XMM0
            pxor XMM0,XMM0
            sar EBP,16
            cvtsi2ss XMM0,EBP
            imul EBP,R15D
            ucomiss XMM1,XMM4
            cmovae R15D,EAX
            subss XMM2,XMM0
.L_42cd94:

            movdqu XMM0,XMMWORD PTR [RBX]
            movsxd RDX,EBP
            lea R14,QWORD PTR [RDI+4]
            mov RAX,QWORD PTR [RBX+128]
            mov ESI,DWORD PTR [RBX+80]
            lea RDX,QWORD PTR [RCX+RDX*4]
            movaps XMMWORD PTR [RSP+32],XMM0
            mov R8,QWORD PTR [RBX+72]
            lea R12,QWORD PTR [RSP+176]
            mov RDI,R14
            movss DWORD PTR [RSP+28],XMM2
            add EBP,R15D
            movsxd RBP,EBP
            mov QWORD PTR [RSP+160],RAX
            lea RAX,QWORD PTR [RSP+32]
            movdqu XMM0,XMMWORD PTR [RBX+16]
            mov DWORD PTR [RSP+108],ESI
            mov RSI,R12
            mov QWORD PTR [RSP+100],R8
            movaps XMMWORD PTR [RSP+48],XMM0
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP+8],RAX
            movdqu XMM0,XMMWORD PTR [RBX+32]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+48]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+80]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+96]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBX+112]
            movaps XMMWORD PTR [RSP+144],XMM0
            mov QWORD PTR [RSP+152],RDX
            mov RDX,RAX
            movdqu XMM0,XMMWORD PTR [RBX+56]
            movups XMMWORD PTR [RSP+84],XMM0
            call .L_42ca90

            mov RDI,R14
            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RCX+RBP*4]
            lea RBP,QWORD PTR [RSP+688]
            mov QWORD PTR [RSP+152],RDX
            mov RSI,RBP
            mov RDX,RAX
            call .L_42ca90

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_42cec0

            sub EAX,1
            movss XMM2,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ce98:

            movss XMM1,DWORD PTR [R12+RAX*1]
            movss XMM0,DWORD PTR [RBP+RAX*1]
            subss XMM0,XMM1
            mulss XMM0,XMM2
            addss XMM0,XMM1
            movss DWORD PTR [R13+RAX*1],XMM0
            add RAX,4
            cmp RDX,RAX
            jne .L_42ce98
.L_42cec0:

            mov RAX,QWORD PTR [RSP+1208]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42cee5

            add RSP,1224
.L_42ceda:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42cee5:

            call __stack_chk_fail@PLT
.L_42ceea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42cef0:

            test RDI,RDI
            push RBX
            je .L_42cf29

            test RSI,RSI
            mov RBX,RDI
            je .L_42cf20

            mov RSI,QWORD PTR [RSI+56]
            test RSI,RSI
            je .L_42cf48
.L_42cf07:

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,8
            call .L_4261e0

            mov QWORD PTR [RBX+56],RAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cf20:

            lea RSI,QWORD PTR [RIP+.L_641d50]
            jmp .L_42cf07
.L_42cf29:

            lea RCX,QWORD PTR [RIP+.L_42d470]
            lea RSI,QWORD PTR [RIP+.L_42d402]
            lea RDI,QWORD PTR [RIP+.L_42d40d]
            mov EDX,43
            call __assert_fail@PLT
.L_42cf48:

            lea RCX,QWORD PTR [RIP+.L_42d470]
            lea RSI,QWORD PTR [RIP+.L_42d402]
            lea RDI,QWORD PTR [RIP+.L_42d422]
            mov EDX,54
            call __assert_fail@PLT
.L_42cf67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cf70:

            push RBX
            mov RBX,RSI
            mov ESI,5
            call .L_406d40

            test RBX,RBX
            je .L_42cf98

            mov RDX,QWORD PTR [RBX+24]
            mov QWORD PTR [RAX],RDX
            mov EAX,1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cf98:

            mov QWORD PTR [RAX],0
            mov EAX,1
            pop RBX
            ret 
.L_42cfa6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42cfb0:

            push RBX
            mov RBX,RSI
            mov ESI,5
            sub RSP,16
.L_42cfbd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_406d40

            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+128],0
            test RAX,RAX
            je .L_42d020

            mov EDX,DWORD PTR [RBX+8]
            mov ESI,DWORD PTR [RBX+16]
            mov EDI,DWORD PTR [RBX+12]
            call RAX

            test RAX,RAX
            mov QWORD PTR [RBX+128],RAX
            je .L_42d020
.L_42cffc:

            test RAX,RAX
            setne AL
            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            movzx EAX,AL
            jne .L_42d23f

            add RSP,16
.L_42d01d:

            pop RBX
            ret 
          .byte 0x90
.L_42d020:

            mov EDX,DWORD PTR [RBX+12]
            mov ESI,DWORD PTR [RBX+8]
            mov ECX,DWORD PTR [RBX+16]
            mov QWORD PTR [RSP],0
            cmp EDX,3
            jbe .L_42d050

            xor EAX,EAX
            cmp ECX,127
            jbe .L_42d050
.L_42d03d:

            mov QWORD PTR [RBX+128],RAX
            jmp .L_42cffc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d050:

            mov R8D,ESI
            and R8D,1
            cmp EDX,8
            ja .L_42d090

            lea RDI,QWORD PTR [RIP+.L_42d440]
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d070:

            cmp ECX,1
            je .L_42d1ea

            test R8D,R8D
            je .L_42d1ff

            lea RAX,QWORD PTR [RIP+.L_42bac0]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
.L_42d090:

            mov RAX,QWORD PTR [RSP]
            jmp .L_42d03d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d0a0:

            test R8D,R8D
            je .L_42d185

            lea RAX,QWORD PTR [RIP+.L_42ccc0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d0c0:

            test R8D,R8D
            je .L_42d1ca

            lea RAX,QWORD PTR [RIP+.L_42ca90]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d0e0:

            and ESI,256
            je .L_42d1a5

            test R8D,R8D
            je .L_42d21f

            lea RAX,QWORD PTR [RIP+.L_42bd90]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d108:

            test R8D,R8D
            je .L_42d175

            lea RAX,QWORD PTR [RIP+.L_42c640]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d120:

            test R8D,R8D
            je .L_42d1ba

            lea RAX,QWORD PTR [RIP+.L_42c420]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d140:

            test R8D,R8D
            je .L_42d1da

            lea RAX,QWORD PTR [RIP+.L_42c860]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d160:

            test R8D,R8D
            je .L_42d195

            lea RAX,QWORD PTR [RIP+.L_42bc00]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d175:

            lea RAX,QWORD PTR [RIP+.L_42b1f0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d185:

            lea RAX,QWORD PTR [RIP+.L_42b7b0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d195:

            lea RAX,QWORD PTR [RIP+.L_429f50]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1a5:

            test R8D,R8D
            je .L_42d20f

            lea RAX,QWORD PTR [RIP+.L_42c010]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1ba:

            lea RAX,QWORD PTR [RIP+.L_42a800]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1ca:

            lea RAX,QWORD PTR [RIP+.L_42b5c0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1da:

            lea RAX,QWORD PTR [RIP+.L_42b3d0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1ea:

            test R8D,R8D
            je .L_42d22f

            lea RAX,QWORD PTR [RIP+.L_42b9a0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d1ff:

            lea RAX,QWORD PTR [RIP+.L_429eb0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d20f:

            lea RAX,QWORD PTR [RIP+.L_42a340]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d21f:

            lea RAX,QWORD PTR [RIP+.L_42a0b0]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d22f:

            lea RAX,QWORD PTR [RIP+.L_433250-37904]
            mov QWORD PTR [RSP],RAX
            jmp .L_42d090
.L_42d23f:

            call __stack_chk_fail@PLT
.L_42d244:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d250:

            push R15
            push R14
            mov R14D,EDX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_42d264:

            cmp EDX,8
            jg .L_42d340

            mov R13,RSI
            mov ESI,136
            mov R12D,ECX
            mov R15,R8
            mov DWORD PTR [RSP+12],R9D
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_42d32a

            mov R9D,DWORD PTR [RSP+12]
            test R14D,R14D
            mov DWORD PTR [RAX+12],R14D
            mov EDI,R12D
            mov DWORD PTR [RAX+16],R12D
            mov QWORD PTR [RAX+120],R15
            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],R9D
            jle .L_42d2d6

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_42d2b8:

            mov EDX,DWORD PTR [R13+RAX*4]
            mov DWORD PTR [RBX+RAX*4+20],EDX
            mov ECX,DWORD PTR [R13+RAX*4]
            lea ESI,DWORD PTR [RCX-1]
            mov DWORD PTR [RBX+RAX*4+52],ESI
            add RAX,1
            cmp R14D,EAX
            jg .L_42d2b8
.L_42d2d6:

            cmp R14D,1
            mov DWORD PTR [RBX+84],R12D
            jle .L_42d31b

            movsxd RCX,R14D
            lea ESI,DWORD PTR [R14-2]
            lea RDX,QWORD PTR [RBX+88]
            shl RCX,2
            lea RAX,QWORD PTR [R13+RCX*1]
            lea RCX,QWORD PTR [R13+RCX*1-4]
            shl RSI,2
            sub RCX,RSI
            jmp .L_42d30c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d308:

            add RDX,4
.L_42d30c:

            imul EDI,DWORD PTR [RAX-4]
            sub RAX,4
            cmp RAX,RCX
            mov DWORD PTR [RDX],EDI
            jne .L_42d308
.L_42d31b:

            mov RSI,RBX
            mov RDI,RBP
            call .L_42cfb0

            test EAX,EAX
            je .L_42d35f
.L_42d32a:

            add RSP,24
.L_42d32e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d340:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_42d490]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_426320

            jmp .L_42d32a
.L_42d35f:

            lea RDX,QWORD PTR [RIP+.L_42d4c0]
            mov R8D,R12D
            mov ECX,R14D
            mov ESI,8
            mov RDI,RBP
            call .L_426320

            mov RSI,RBX
            mov RDI,RBP
            xor EBX,EBX
            call .L_426070

            jmp .L_42d32a
.L_42d388:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d390:

            sub RSP,56
.L_42d394:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_42d250

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_42d3e0

            add RSP,56
.L_42d3df:

            ret 
.L_42d3e0:

            call __stack_chk_fail@PLT
.L_42d3e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d3f0:

            test RDI,RDI
            je .L_42d400

            mov RSI,RDI
            mov RDI,QWORD PTR [RDI]
            jmp .L_426070
.L_42d400:

            ret 
.L_42d402:
          .string "cmsintrp.c"
.L_42d40d:
          .string "(ctx != ((void *)0))"
.L_42d422:
          .string "(from != ((void *)0))"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d440:
          .long .L_42d090-.L_42d440
          .long .L_42d070-.L_42d440
          .long .L_42d160-.L_42d440
          .long .L_42d0e0-.L_42d440
          .long .L_42d120-.L_42d440
          .long .L_42d108-.L_42d440
          .long .L_42d140-.L_42d440
          .long .L_42d0c0-.L_42d440
          .long .L_42d0a0-.L_42d440
          .zero 12
.L_42d470:
          .string "_cmsAllocInterpPluginChunk"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d490:
          .string "Too many input channels (%d channels, max=%d)"
          .zero 2
.L_42d4c0:
          .string "Unsupported interpolation (%d->%d channels)"
.L_42d4ec:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_42d4f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_42d500:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d510:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d520:

            cmp ESI,1
            je .L_42d568

            jb .L_42d558

            cmp ESI,2
            je .L_42d540

            cmp ESI,3
            jne .L_42d550

            mov ESI,1668313716
            jmp .L_404240
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d540:

            mov ESI,1684890724
            jmp .L_404240
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d550:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d558:

            mov ESI,1684370275
            jmp .L_404240
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d568:

            mov ESI,1684893284
            jmp .L_404240
.L_42d572:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d580:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RDI,RBX
            mov ESI,1918392666
            sub RSP,8
.L_42d598:

            call .L_404240

            mov RDI,RBX
            mov ESI,1733843290
            mov R12,RAX
            call .L_404240

            mov RDI,RBX
            mov ESI,1649957210
            mov RBP,RAX
            call .L_404240

            test R12,R12
            mov RBX,RAX
            sete DL
            test RBP,RBP
            sete AL
            or DL,AL
            jne .L_42d5d5

            test RBX,RBX
            jne .L_42d5e8
.L_42d5d5:

            add RSP,8
.L_42d5d9:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d5e8:

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,R13
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [R12]
            call .L_431e00

            lea RDI,QWORD PTR [R13+24]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [R12+8]
            call .L_431e00

            movsd XMM0,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [R13+48]
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBP+16]
            call .L_431e00

            add RSP,8
.L_42d637:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42d643:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d650:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_42d659:

            call .L_431470

            test RAX,RAX
            je .L_42d6b7

            mov RBX,RAX
            jmp .L_42d680
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d670:

            mov RDI,RBX
            call .L_430e50

            test RAX,RAX
            mov RBX,RAX
            je .L_42d6b7
.L_42d680:

            mov RDI,RBX
            call .L_430e30

            cmp EAX,1668052340
            jne .L_42d670

            mov RAX,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBP+56]
            mov RSI,QWORD PTR [RAX+8]
            or DWORD PTR [RSI+8],256
            call .L_42cfb0

            mov RDI,RBX
            call .L_430e50

            test RAX,RAX
            mov RBX,RAX
            jne .L_42d680
.L_42d6b7:

            add RSP,8
.L_42d6bb:

            pop RBX
            pop RBP
            ret 
.L_42d6be:

            nop
            nop
.L_42d6c0:

            sub RSP,8
            call .L_404240

            test RAX,RAX
            je .L_42d6e0

            mov RDI,RAX
            add RSP,8
            jmp .L_411ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d6e0:

            xor EAX,EAX
            add RSP,8
            ret 
.L_42d6e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d6f0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_42d6f7:

            je .L_42d76d

            mov R12,RSI
            mov RBX,RDI
            mov ESI,2004119668
            mov RDI,R12
            call .L_404240

            test RAX,RAX
            mov RBP,RAX
            je .L_42d74f

            mov RDI,R12
            call .L_403580

            cmp EAX,67108863
            jbe .L_42d740
.L_42d723:

            movdqu XMM0,XMMWORD PTR [RBP]
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            pop RBX
.L_42d739:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d740:

            mov RDI,R12
            call .L_403560

            cmp EAX,1835955314
            jne .L_42d723
.L_42d74f:

            call .L_40de30

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
.L_42d76d:

            lea RCX,QWORD PTR [RIP+.L_42eb10]
            lea RSI,QWORD PTR [RIP+.L_42eabd]
            lea RDI,QWORD PTR [RIP+.L_42eac6]
            mov EDX,68
            call __assert_fail@PLT
.L_42d78c:

            nop
            nop
            nop
            nop
.L_42d790:

            push RBP
            push RBX
            sub RSP,8
.L_42d796:

            test RDI,RDI
            je .L_42d850

            mov RBP,RSI
            mov RBX,RDI
            mov ESI,1667785060
            mov RDI,RBP
            call .L_404240

            test RAX,RAX
            je .L_42d7f0

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movups XMMWORD PTR [RBX+48],XMM0
            mov RAX,QWORD PTR [RAX+64]
            mov QWORD PTR [RBX+64],RAX
.L_42d7e1:

            add RSP,8
.L_42d7e5:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d7f0:

            mov RDI,RBX
            call .L_431fa0

            mov RDI,RBP
            call .L_403580

            cmp EAX,67108863
            ja .L_42d7e1

            mov RDI,RBP
            call .L_403560

            cmp EAX,1835955314
            jne .L_42d7e1

            mov RDI,RBP
            mov ESI,2004119668
            call .L_404240

            test RAX,RAX
            mov RBP,RAX
            je .L_42d846

            call .L_40de30

            add RSP,8
.L_42d834:

            mov RDX,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            mov RCX,RAX
            xor ESI,ESI
            jmp .L_40e220
.L_42d846:

            mov RDI,RBX
            call .L_431fa0

            jmp .L_42d7e1
.L_42d850:

            lea RCX,QWORD PTR [RIP+.L_42eb00]
            lea RSI,QWORD PTR [RIP+.L_42eabd]
            lea RDI,QWORD PTR [RIP+.L_42eac6]
            mov EDX,98
            call __assert_fail@PLT
.L_42d86f:

            nop
.L_42d870:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            movsxd RBP,ESI
            sub RSP,136
.L_42d883:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_402de0

            mov RDI,RBX
            mov R12,RAX
            call .L_403560

            cmp EAX,1852662636
            je .L_42daa8

            cmp EBP,3
            ja .L_42d903

            lea RAX,QWORD PTR [RIP+.L_42ebe0]
            mov RDI,RBX
            mov R13D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_42ebd0]
            mov EBP,DWORD PTR [RAX+RBP*4]
            mov ESI,EBP
            call .L_402eb0

            test EAX,EAX
            jne .L_42dc50

            mov ESI,R13D
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            mov EAX,1093812784
            mov RDI,RBX
            cmove R13D,EAX
            mov ESI,R13D
            call .L_402eb0

            test EAX,EAX
            jne .L_42dbe0
.L_42d903:

            mov RDI,RBX
            call .L_403540

            cmp EAX,1196573017
            mov RDI,RBX
            je .L_42db20

            lea R12,QWORD PTR [RSP+48]
            call .L_402de0

            mov RSI,RBX
            mov RDI,R12
            mov R13,RAX
            call .L_42d580

            test EAX,EAX
            je .L_42da7a

            lea RDX,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RIP+.L_42ebf0]
            mov RAX,R12
.L_42d949:

            movsd XMM1,QWORD PTR [RAX]
            add RAX,24
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-24],XMM1
            movsd XMM1,QWORD PTR [RAX-16]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-16],XMM1
            movsd XMM1,QWORD PTR [RAX-8]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RDX
            jne .L_42d949

            mov ESI,1918128707
            mov RDI,RBX
            call .L_404240

            mov ESI,1733579331
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_404240

            mov ESI,1649693251
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            call .L_404240

            cmp QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+32],RAX
            je .L_42da7a

            cmp QWORD PTR [RSP+24],0
            je .L_42da7a

            test RAX,RAX
            je .L_42da7a

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42da7a

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,3
            mov RDI,R13
            call .L_430680

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da72

            xor R8D,R8D
            mov RCX,R12
            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da72

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            jne .L_42da7c

            mov RDI,R13
            call .L_430600

            jmp .L_42daff
          .byte 0x66
          .byte 0x90
.L_42da60:

            mov RDI,RBX
            call .L_427870
.L_42da68:

            mov RDI,QWORD PTR [RSP+8]
            call .L_427870
.L_42da72:

            mov RDI,RBP
            call .L_431080
.L_42da7a:

            xor EBP,EBP
.L_42da7c:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_42ddc7

            add RSP,136
.L_42da9a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42daa8:

            mov RDI,RBX
            mov ESI,1852009522
            call .L_404240

            test RAX,RAX
            mov RBX,RAX
            je .L_42da7a

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42ddba

            mov ESI,1
            mov RDI,RBX
            call .L_412560
.L_42dae2:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da72
.L_42daf7:

            mov RDI,R12
            call .L_430460
.L_42daff:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42da7c

            jmp .L_42da72
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42db20:

            call .L_402de0

            mov ESI,1800688195
            mov RDI,RBX
            mov R12,RAX
            call .L_404240

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_42da7a

            mov EDX,3
            mov ESI,1
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42da68

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            je .L_42dcd0

            lea RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R12
            call .L_430680

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da68

            lea RCX,QWORD PTR [RIP+.L_42eb90]
            xor R8D,R8D
            mov EDX,1
            mov ESI,3
            mov RDI,R12
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42da7c

            jmp .L_42da68
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dbe0:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404240

            test RAX,RAX
            mov RBP,RAX
            je .L_42da7a

            mov ESI,R13D
            mov RDI,RBX
            call .L_404590

            mov RDI,RBP
            mov R13D,EAX
            call .L_431160

            cmp R13D,1835430962
            mov RBP,RAX
            jne .L_42da7c

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            jne .L_42da7c

            mov RDI,RBX
            call .L_403540

            cmp EAX,1281450528
            jne .L_42daf7

            mov RDI,R12
            call .L_430490

            jmp .L_42dae2
.L_42dc50:

            mov RDI,RBX
            call .L_402de0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404240

            mov RDI,RAX
            call .L_431160

            mov RDI,RBX
            mov RBP,RAX
            call .L_403540

            mov RDI,RBX
            mov R12D,EAX
            call .L_403520

            test RBP,RBP
            mov EBX,EAX
            je .L_42da7a

            cmp R12D,1281450528
            je .L_42dd78

            cmp R12D,1482250784
            je .L_42ddb0
.L_42dca8:

            cmp EBX,1281450528
            je .L_42dda0

            cmp EBX,1482250784
            jne .L_42da7c

            mov RDI,R13
            call .L_430500

            jmp .L_42daff
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dcd0:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,2
            mov RDI,R12
            mov DWORD PTR [RSP+16],2155905152
            call .L_4274b0

            test RAX,RAX
            mov RBX,RAX
            je .L_42da68

            mov RAX,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RIP+.L_42eb70]
            xor R8D,R8D
            mov EDX,1
            mov ESI,3
            mov RDI,R12
            mov QWORD PTR [RSP+56],RBX
            mov QWORD PTR [RSP+64],RBX
            mov QWORD PTR [RSP+48],RAX
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da60

            lea RDX,QWORD PTR [RSP+48]
            mov ESI,3
            mov RDI,R12
            call .L_430680

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42da60

            mov RDI,RBX
            call .L_427870

            jmp .L_42da7c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dd78:

            mov RDI,R13
            call .L_430530
.L_42dd80:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42dca8

            jmp .L_42da72
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dda0:

            mov RDI,R13
            call .L_4304c0

            jmp .L_42daff
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ddb0:

            mov RDI,R13
            call .L_430570

            jmp .L_42dd80
.L_42ddba:

            mov RDI,RBX
            call .L_4121b0

            jmp .L_42da7c
.L_42ddc7:

            call __stack_chk_fail@PLT
.L_42ddcc:

            nop
            nop
            nop
            nop
.L_42ddd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,ESI
            mov RBX,RDI
            sub RSP,216
.L_42dde7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_402de0

            cmp EBP,3
            ja .L_42de57

            mov R13,RAX
            lea RAX,QWORD PTR [RIP+.L_42ebc0]
            mov RDI,RBX
            mov R12D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_42ebb0]
            mov EBP,DWORD PTR [RAX+RBP*4]
            mov ESI,EBP
            call .L_402eb0

            test EAX,EAX
            jne .L_42e020

            mov ESI,R12D
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            mov EAX,1110589744
            mov RDI,RBX
            cmove R12D,EAX
            mov ESI,R12D
            call .L_402eb0

            test EAX,EAX
            jne .L_42e200
.L_42de57:

            mov RDI,RBX
            call .L_403540

            cmp EAX,1196573017
            mov RDI,RBX
            je .L_42e0b8

            lea RBP,QWORD PTR [RSP+48]
            call .L_402de0

            mov RSI,RBX
            mov RDI,RBP
            mov R13,RAX
            call .L_42d580

            test EAX,EAX
            je .L_42e1d0

            lea R12,QWORD PTR [RSP+128]
            mov RDI,RBP
            mov RSI,R12
            call .L_432250

            test EAX,EAX
            je .L_42e1d0

            lea RDX,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RIP+.L_42ebf8]
            mov RAX,R12
.L_42deb8:

            movsd XMM1,QWORD PTR [RAX]
            add RAX,24
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-24],XMM1
            movsd XMM1,QWORD PTR [RAX-16]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-16],XMM1
            movsd XMM1,QWORD PTR [RAX-8]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RDX
            jne .L_42deb8

            mov ESI,1918128707
            mov RDI,RBX
            call .L_404240

            mov ESI,1733579331
            mov RDI,RBX
            mov R14,RAX
            call .L_404240

            mov ESI,1649693251
            mov RDI,RBX
            mov RBP,RAX
            call .L_404240

            test R14,R14
            mov R15,RAX
            sete DL
            test RBP,RBP
            sete AL
            or DL,AL
            jne .L_42e1d0

            test R15,R15
            je .L_42e1d0

            mov RDI,R14
            call .L_427ca0

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RAX
            call .L_427ca0

            mov RDI,R15
            mov QWORD PTR [RSP+24],RAX
            call .L_427ca0

            cmp QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+32],RAX
            je .L_42e1d0

            cmp QWORD PTR [RSP+24],0
            je .L_42e1d0

            test RAX,RAX
            je .L_42e1d0

            mov EDX,3
            mov ESI,3
            mov RDI,R13
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42e2a0

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            je .L_42e190
.L_42dfb0:

            xor R8D,R8D
            mov RCX,R12
            mov EDX,3
            mov ESI,3
            mov RDI,R13
            lea RBX,QWORD PTR [RSP+16]
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e1b8

            mov RDX,RBX
            mov ESI,3
            mov RDI,R13
            call .L_430680

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e1b8
.L_42e00d:

            mov RDI,RBX
            call .L_427890

            jmp .L_42e1d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e020:

            mov RDI,RBX
            call .L_402de0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404240

            mov RDI,RAX
            call .L_431160

            mov RDI,RBX
            mov RBP,RAX
            call .L_403520

            mov RDI,RBX
            mov R12D,EAX
            call .L_403540

            test RBP,RBP
            mov EBX,EAX
            je .L_42e1d0

            cmp R12D,1281450528
            je .L_42e2b0

            cmp R12D,1482250784
            je .L_42e308
.L_42e078:

            cmp EBX,1281450528
            je .L_42e2d8

            cmp EBX,1482250784
            jne .L_42e1d2

            mov RDI,R13
            call .L_430500
.L_42e098:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e1d2

            jmp .L_42e1c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e0b8:

            call .L_402de0

            mov ESI,1800688195
            mov RDI,RBX
            mov R12,RAX
            call .L_404240

            test RAX,RAX
            je .L_42e1d0

            mov RDI,RAX
            call .L_427ca0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_42e1d0

            mov EDX,1
            mov ESI,3
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42e17a

            mov RDI,RBX
            call .L_403520

            xor R8D,R8D
            cmp EAX,1281450528
            lea RCX,QWORD PTR [RIP+.L_42eb50]
            jne .L_42e126

            lea RCX,QWORD PTR [RIP+.L_42eb30]
.L_42e126:

            mov EDX,3
            mov ESI,1
            mov RDI,R12
            call .L_42f9a0

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e2e8

            lea RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R12
            call .L_430680

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e2e8
.L_42e17a:

            mov RDI,QWORD PTR [RSP+8]
            call .L_427870

            jmp .L_42e1d2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e190:

            mov RDI,R13
            lea RBX,QWORD PTR [RSP+16]
            call .L_430400

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42dfb0

            nop
            nop
            nop
.L_42e1b8:

            mov RDI,RBX
            call .L_427890
.L_42e1c0:

            mov RDI,RBP
            call .L_431080

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e1d0:

            xor EBP,EBP
.L_42e1d2:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_42e325

            add RSP,216
.L_42e1f3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42e200:

            mov ESI,R12D
            mov RDI,RBX
            call .L_404240

            test RAX,RAX
            mov RBP,RAX
            je .L_42e1d0

            mov ESI,R12D
            mov RDI,RBX
            call .L_404590

            mov RDI,RBP
            mov R12D,EAX
            call .L_431160

            test RAX,RAX
            mov RBP,RAX
            je .L_42e1d0

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            je .L_42e318
.L_42e244:

            cmp R12D,1835430962
            jne .L_42e1d2

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            jne .L_42e1d2

            mov RDI,R13
            call .L_430490

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e1c0

            mov RDI,RBX
            call .L_403540

            cmp EAX,1281450528
            jne .L_42e1d2

            mov RDI,R13
            call .L_430460

            jmp .L_42e098
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e2a0:

            lea RBX,QWORD PTR [RSP+16]
            jmp .L_42e00d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e2b0:

            mov RDI,R13
            call .L_430530
.L_42e2b8:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e078

            jmp .L_42e1c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e2d8:

            mov RDI,R13
            call .L_4304c0

            jmp .L_42e098
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e2e8:

            mov RDI,QWORD PTR [RSP+8]
            call .L_427870

            mov RDI,RBP
            xor EBP,EBP
            call .L_431080

            jmp .L_42e1d2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e308:

            mov RDI,R13
            call .L_430570

            jmp .L_42e2b8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e318:

            mov RDI,RBP
            call .L_42d650

            jmp .L_42e244
.L_42e325:

            call __stack_chk_fail@PLT
.L_42e32a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e330:

            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_42e340:

            call .L_402de0

            cmp EBP,3
            ja .L_42e570

            mov R12,RAX
            lea RAX,QWORD PTR [RIP+.L_42ebe0]
            mov RDI,RBX
            mov R13D,DWORD PTR [RAX+RBP*4]
            lea RAX,QWORD PTR [RIP+.L_42ebd0]
            mov EBP,DWORD PTR [RAX+RBP*4]
            call .L_403560

            cmp EAX,1852662636
            je .L_42e4e8

            mov ESI,EBP
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            jne .L_42e450

            mov ESI,1144144432
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            jne .L_42e580

            mov ESI,R13D
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            jne .L_42e3ca

            mov ESI,1093812784
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            je .L_42e570

            mov R13D,1093812784
.L_42e3ca:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404240

            test RAX,RAX
            je .L_42e570

            mov RDI,RAX
            call .L_431160

            test RAX,RAX
            mov RBP,RAX
            je .L_42e570

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            je .L_42e5f0
.L_42e405:

            mov ESI,R13D
            mov RDI,RBX
            call .L_404590

            cmp EAX,1835430962
            jne .L_42e572

            mov RDI,RBX
            call .L_403540

            cmp EAX,1281450528
            je .L_42e600
.L_42e42e:

            mov RDI,RBX
            call .L_403520

            cmp EAX,1281450528
            jne .L_42e572

            mov RDI,R12
            call .L_430460

            jmp .L_42e4c4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e450:

            mov RDI,RBX
            call .L_402de0

            mov ESI,EBP
            mov RDI,RBX
            mov R13,RAX
            call .L_404240

            mov RDI,RAX
            call .L_431160

            mov RDI,RBX
            mov RBP,RAX
            call .L_403520

            mov RDI,RBX
            mov R12D,EAX
            call .L_403540

            test RBP,RBP
            je .L_42e570

            cmp EAX,1281450528
            je .L_42e5a0

            cmp EAX,1482250784
            je .L_42e5e0
.L_42e4a2:

            cmp R12D,1281450528
            je .L_42e5d0

            cmp R12D,1482250784
            jne .L_42e572

            mov RDI,R13
            call .L_430500
.L_42e4c4:

            mov RDX,RAX
            mov ESI,1
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e572

            jmp .L_42e5bd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e4e8:

            mov ESI,1852009522
            mov RDI,RBX
            call .L_404240

            test RAX,RAX
            mov R13,RAX
            je .L_42e570

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call .L_430f40

            test RAX,RAX
            mov RBP,RAX
            je .L_42e560

            xor ESI,ESI
            mov RDI,R13
            call .L_412560

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            je .L_42e560

            mov RDI,RBX
            call .L_403540

            cmp EAX,1281450528
            jne .L_42e572

            mov RDI,R12
            call .L_430460

            mov ESI,1
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e572

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e560:

            mov RDI,RBP
            call .L_431080

            mov RDI,R13
            call .L_4121b0
.L_42e570:

            xor EBP,EBP
.L_42e572:

            add RSP,8
.L_42e576:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42e580:

            mov RDI,RBX
            mov ESI,1144144432
            call .L_404240

            add RSP,8
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_431160
          .byte 0x90
.L_42e5a0:

            mov RDI,R13
            call .L_430530
.L_42e5a8:

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e4a2
.L_42e5bd:

            mov RDI,RBP
            xor EBP,EBP
            call .L_431080

            jmp .L_42e572
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e5d0:

            mov RDI,R13
            call .L_4304c0

            jmp .L_42e4c4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e5e0:

            mov RDI,R13
            call .L_430570

            jmp .L_42e5a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e5f0:

            mov RDI,RBP
            call .L_42d650

            jmp .L_42e405
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e600:

            mov RDI,R12
            call .L_430490

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,RBP
            call .L_431280

            test EAX,EAX
            jne .L_42e42e

            jmp .L_42e5bd
.L_42e61f:

            nop
.L_42e620:

            push RBX
            mov RBX,RDI
            call .L_403540

            cmp EAX,1196573017
            je .L_42e650

            cmp EAX,1380401696
            jne .L_42e648

            mov ESI,1918392666
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            jne .L_42e660
.L_42e648:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e650:

            mov RDI,RBX
            mov ESI,1800688195
            pop RBX
            jmp .L_402eb0
          .byte 0x66
          .byte 0x90
.L_42e660:

            mov ESI,1733843290
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            je .L_42e648

            mov ESI,1649957210
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            je .L_42e648

            mov ESI,1918128707
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            je .L_42e648

            mov ESI,1733579331
            mov RDI,RBX
            call .L_402eb0

            test EAX,EAX
            je .L_42e648

            mov RDI,RBX
            mov ESI,1649693251
            call .L_402eb0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            pop RBX

            ret 
.L_42e6bb:

            nop
            nop
            nop
            nop
            nop
.L_42e6c0:

            push RBX
            mov RBX,RDI
            call .L_42e6f0

            test EAX,EAX
            je .L_42e6d8

            mov EAX,1
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e6d8:

            mov RDI,RBX
            pop RBX
            jmp .L_42e620
.L_42e6e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e6f0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            call .L_403560

            cmp EAX,1818848875
            je .L_42e7c0

            cmp R12D,1
            je .L_42e780

            jb .L_42e738

            cmp R12D,2
            jne .L_42e750

            xor EDX,EDX
            mov ESI,EBP
            mov RDI,RBX
            call .L_42e6c0

            mov EDX,EAX
            xor EAX,EAX
            test EDX,EDX
            jne .L_42e7a0
.L_42e72e:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e738:

            lea RAX,QWORD PTR [RIP+.L_42ebe0]
            mov RDI,RBX
            pop RBX
            mov ESI,DWORD PTR [RAX+RBP*4]
            pop RBP
            pop R12
            jmp .L_402eb0
          .byte 0x66
          .byte 0x90
.L_42e750:

            mov RDI,RBX
            call .L_402de0

            lea RDX,QWORD PTR [RIP+.L_42eadc]
            mov ECX,R12D
            mov RDI,RAX
            mov ESI,2
            xor EAX,EAX
            call .L_426320

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e780:

            lea RAX,QWORD PTR [RIP+.L_42ebc0]
            mov RDI,RBX
            pop RBX
            mov ESI,DWORD PTR [RAX+RBP*4]
            pop RBP
            pop R12
            jmp .L_402eb0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e7a0:

            mov EDX,1
            mov ESI,1
            mov RDI,RBX
            call .L_42e6c0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_42e72e
          .byte 0x90
.L_42e7c0:

            mov RDI,RBX
            call .L_403420

            cmp EAX,EBP
            sete AL
            pop RBX
            movzx EAX,AL
            pop RBP
            pop R12
            ret 
.L_42e7d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e7e0:

            push R14
            push R13
            mov ESI,1886610801
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            call .L_404240

            mov RDI,RBP
            mov RBX,RAX
            mov ESI,1886611812
            call .L_404240

            test RBX,RBX
            mov RBP,RAX
            jne .L_42e816

            test RAX,RAX
            je .L_42e8b0
.L_42e816:

            test RBX,RBX
            mov RDI,RBP
            je .L_42e82d

            test RBP,RBP
            mov RDI,RBX
            je .L_42e82d

            mov EAX,DWORD PTR [RBP]
            cmp DWORD PTR [RBX],EAX
            je .L_42e840
.L_42e82d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_412720
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e840:

            call .L_412720

            test RAX,RAX
            mov R13,RAX
            je .L_42e8b0

            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            je .L_42e89c

            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e860:

            mov RDX,QWORD PTR [RBP+16]
            mov EAX,R12D
            add R12D,1
            shl RAX,6
            movdqu XMM0,XMMWORD PTR [RDX+RAX*1+20]
            mov RDX,QWORD PTR [R13+16]
            movups XMMWORD PTR [RDX+RAX*1+20],XMM0
            mov RDX,QWORD PTR [RBP+16]
            mov R14,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RDX+RAX*1+56]
            add R14,RAX
            call .L_411ca0

            cmp DWORD PTR [RBX],R12D
            mov QWORD PTR [R14+56],RAX
            ja .L_42e860
.L_42e89c:

            pop RBX
.L_42e89d:

            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e8b0:

            xor R13D,R13D
            pop RBX
            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42e8bf:

            nop
.L_42e8c0:

            push RBP
            push RBX
            mov RDX,RSI
            mov RBP,RSI
            mov ESI,1886610801
            mov RBX,RDI
            sub RSP,8
            call .L_4045f0

            test EAX,EAX
            jne .L_42e8e8
.L_42e8dd:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e8e8:

            mov RDI,RBX
            call .L_403580

            mov EDX,EAX
            mov EAX,1
            cmp EDX,67108863
            jbe .L_42e8dd

            mov RDX,RBP
            mov RDI,RBX
            mov ESI,1886611812
            call .L_4045f0

            test EAX,EAX
            setne AL
            add RSP,8
            movzx EAX,AL
            pop RBX
            pop RBP
            ret 
.L_42e91e:

            nop
            nop
.L_42e920:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBX,ESI
            sub RSP,8
.L_42e933:

            call .L_4125e0

            test RAX,RAX
            mov R15,RAX
            je .L_42ea00

            test EBX,EBX
            je .L_42ea00

            lea R14D,DWORD PTR [RBX-1]
            xor R12D,R12D
            add R14,1
            shl R14,6
            jmp .L_42e9a5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e960:

            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RBX+16],EAX
.L_42e965:

            mov ESI,1684893284
            mov RDI,RBP
            add R12,64
            call .L_42d6c0

            mov ESI,1684890724
            mov RDI,RBP
            mov QWORD PTR [RBX+40],RAX
            call .L_42d6c0

            mov ESI,1684370275
            mov QWORD PTR [RBX+48],RAX
            mov RDI,RBP
            call .L_42d6c0

            add R13,8
            cmp R12,R14
            mov QWORD PTR [RBX+56],RAX
            je .L_42ea00
.L_42e9a5:

            mov RBX,QWORD PTR [R15+16]
            mov RBP,QWORD PTR [R13]
            add RBX,R12
            mov RDI,RBP
            lea RSI,QWORD PTR [RBX+8]
            call .L_4034b0

            lea RSI,QWORD PTR [RBX+20]
            mov RDI,RBP
            call .L_4034d0

            mov RDI,RBP
            call .L_403460

            mov RDI,RBP
            mov DWORD PTR [RBX],EAX
            call .L_403490

            mov ESI,1952801640
            mov DWORD PTR [RBX+4],EAX
            mov RDI,RBP
            call .L_404240

            test RAX,RAX
            jne .L_42e960

            mov DWORD PTR [RBX+16],0
            jmp .L_42e965
          .byte 0x90
.L_42ea00:

            add RSP,8
.L_42ea04:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42ea12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ea20:

            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDX
            mov R12,R8
            sub RSP,8
            call .L_42d520

            test RAX,RAX
            je .L_42ea60

            add RSP,8
            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_411e80
          .byte 0x66
          .byte 0x90
.L_42ea60:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42ea6d:

            nop
            nop
            nop
.L_42ea70:

            push R13
            push R12
            mov R13D,R9D
            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDX
            mov R12,R8
            sub RSP,8
            call .L_42d520

            test RAX,RAX
            je .L_42eab0

            add RSP,8
            mov R8D,R13D
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_411d60
          .byte 0x66
          .byte 0x90
.L_42eab0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42eabd:
          .string "cmsio1.c"
.L_42eac6:
          .string "(Dest != ((void *)0))"
.L_42eadc:
          .string "Unexpected direction (%d)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb00:
          .string "_cmsReadCHAD"
          .zero 3
.L_42eb10:
          .string "_cmsReadMediaWhitePoint"
          .zero 8
.L_42eb30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eb90:
          .byte 0x3
          .byte 0x84
          .byte 0x32
          .byte 0xd0
          .byte 0xd8
          .byte 0xda
          .byte 0xde
          .byte 0x3f
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x82
          .byte 0x22
          .byte 0xfe
          .byte 0x14
          .byte 0xaf
          .byte 0x65
          .byte 0xda
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ebb0:
          .byte 0x30
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x33
          .byte 0x44
          .byte 0x32
          .byte 0x42
.L_42ebc0:
          .byte 0x30
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x31
          .byte 0x41
          .byte 0x32
          .byte 0x42
.L_42ebd0:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x44
          .byte 0x33
          .byte 0x42
          .byte 0x32
          .byte 0x44
.L_42ebe0:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x32
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x31
          .byte 0x42
          .byte 0x32
          .byte 0x41
.L_42ebf0:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42ebf8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_42ec00:

            test EDX,EDX
            je .L_42ec82

            lea ECX,DWORD PTR [RDX-1]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_431d88]
            xor EDX,EDX
            movsd XMM3,QWORD PTR [RIP+.L_431d90]
            add RCX,1
            movsd XMM5,QWORD PTR [RIP+.L_431d98]
            mov R8D,4294967295
            movsd XMM4,QWORD PTR [RIP+.L_431da0]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ec40:

            pxor XMM0,XMM0
            xor EAX,EAX
            cvtss2sd XMM0,DWORD PTR [RDI+RDX*4]
            mulsd XMM0,XMM1
            addsd XMM0,XMM3
            ucomisd XMM2,XMM0
            jae .L_42ec75

            ucomisd XMM0,XMM1
            mov EAX,R8D
            jae .L_42ec75

            subsd XMM0,XMM5
            addsd XMM0,XMM4
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_42ec75:

            mov WORD PTR [RSI+RDX*2],AX
            add RDX,1
            cmp RCX,RDX
            jne .L_42ec40
.L_42ec82:

            ret 
.L_42ec84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ec90:

            push R13
            push R12
            push RBP
            push RBX
.L_42ec96:

            mov EAX,DWORD PTR [RDX+20]
            mov R13,QWORD PTR [RDX+48]
            test EAX,EAX
            je .L_42ed27

            mov EBX,DWORD PTR [RDX+16]
            lea R12D,DWORD PTR [RAX-1]
            mov RBP,QWORD PTR [R13+8]
            xor R11D,R11D
            xor R10D,R10D
            add R12,1
            lea EAX,DWORD PTR [RBX-1]
            lea R9,QWORD PTR [RDI+RAX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ecc8:

            test EBX,EBX
            pxor XMM1,XMM1
            je .L_42ed01

            mov R8,QWORD PTR [R13]
            pxor XMM1,XMM1
            mov EDX,R11D
            mov RAX,RDI
            nop
            nop
.L_42ece0:

            pxor XMM0,XMM0
            mov ECX,EDX
            add RAX,4
            add EDX,1
            cvtss2sd XMM0,DWORD PTR [RAX-4]
            cmp R9,RAX
            mulsd XMM0,QWORD PTR [R8+RCX*8]
            addsd XMM1,XMM0
            jne .L_42ece0
.L_42ed01:

            test RBP,RBP
            je .L_42ed0d

            addsd XMM1,QWORD PTR [RBP+R10*8]
.L_42ed0d:

            pxor XMM3,XMM3
            add R11D,EBX
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RSI+R10*4],XMM3
            add R10,1
            cmp R12,R10
            jne .L_42ecc8
.L_42ed27:

            pop RBX
.L_42ed28:

            pop RBP
            pop R12
            pop R13
            ret 
.L_42ed2e:

            nop
            nop
.L_42ed30:

            mov RAX,QWORD PTR [RDX+48]
            mov RDX,QWORD PTR [RAX+8]
            jmp QWORD PTR [RDX+128]
.L_42ed3e:

            nop
            nop
.L_42ed40:

            mov EAX,DWORD PTR [RDX]
            test EAX,EAX
            jle .L_42ed61

            sub EAX,1
            lea RCX,QWORD PTR [RAX+RAX*1+2]
            xor EAX,EAX
.L_42ed50:

            movzx EDX,WORD PTR [RDI+RAX*1]
            mov WORD PTR [RSI+RAX*1],DX
            add RAX,2
            cmp RAX,RCX
            jne .L_42ed50
.L_42ed61:

            mov EAX,1
            ret 
.L_42ed67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ed70:

            mov EAX,DWORD PTR [RDX+16]
            test EAX,EAX
            je .L_42eda6

            pxor XMM1,XMM1
            sub EAX,1
            lea RDX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ed90:

            movaps XMM0,XMM1
            maxss XMM0,DWORD PTR [RDI+RAX*1]
            movss DWORD PTR [RSI+RAX*1],XMM0
            add RAX,4
            cmp RAX,RDX
            jne .L_42ed90
.L_42eda6:

            ret 
.L_42eda8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42edb0:

            mov RCX,QWORD PTR [RDI]
            test RCX,RCX
            mov RDX,RCX
            jne .L_42edc3

            jmp .L_42ee05
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42edc0:

            mov RDX,RAX
.L_42edc3:

            mov RAX,QWORD PTR [RDX+56]
            test RAX,RAX
            jne .L_42edc0

            mov EAX,DWORD PTR [RCX+16]
            mov DWORD PTR [RDI+8],EAX
            mov EAX,DWORD PTR [RDX+20]
            mov DWORD PTR [RDI+12],EAX
            mov RAX,QWORD PTR [RCX+56]
            test RAX,RAX
            je .L_42ee05

            mov ESI,DWORD PTR [RAX+16]
            cmp DWORD PTR [RCX+20],ESI
            jne .L_42ee10

            mov RDX,RAX
            jmp .L_42edfc
          .byte 0x66
          .byte 0x90
.L_42edf0:

            mov ESI,DWORD PTR [RDX+20]
            cmp DWORD PTR [RAX+16],ESI
            jne .L_42ee10

            mov RDX,QWORD PTR [RDX+56]
.L_42edfc:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            jne .L_42edf0
.L_42ee05:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ee10:

            xor EAX,EAX
            ret 
.L_42ee13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee20:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            sub RSP,1048
.L_42ee37:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDX+8]
            mov R14,RSP
            test EAX,EAX
            je .L_42ee8f

            lea ECX,DWORD PTR [RAX-1]
            xor EDX,EDX
            mov R14,RSP
            movss XMM1,DWORD PTR [RIP+.L_431de8]
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee70:

            movzx EAX,WORD PTR [RDI+RDX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,XMM1
            movss DWORD PTR [R14+RDX*4],XMM0
            add RDX,1
            cmp RDX,RCX
            jne .L_42ee70
.L_42ee8f:

            mov R13,QWORD PTR [RBP]
            test R13,R13
            je .L_42ef10

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42eea0:

            mov R15D,EAX
            movsxd RDI,EAX
            mov RDX,R13
            xor R15D,1
            mov RAX,RDI
            movsxd RBX,R15D
            shl RAX,9
            shl RBX,9
            lea RDI,QWORD PTR [R14+RAX*1]
            add RBX,R14
            mov RSI,RBX
            call QWORD PTR [R13+24]

            mov R13,QWORD PTR [R13+56]
            mov EAX,R15D
            test R13,R13
            jne .L_42eea0
.L_42eed5:

            mov EDX,DWORD PTR [RBP+12]
            mov RSI,R12
            mov RDI,RBX
            call .L_42ec00

            mov RAX,QWORD PTR [RSP+1032]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42ef15

            add RSP,1048
.L_42eefd:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ef10:

            mov RBX,R14
            jmp .L_42eed5
.L_42ef15:

            call __stack_chk_fail@PLT
.L_42ef1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42ef20:

            mov EDX,DWORD PTR [RDX+16]
            mov RAX,RDI
            mov RDI,RSI
            mov RSI,RAX
            shl RDX,2
            jmp memmove@PLT
.L_42ef35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ef40:

            push R15
            push R14
            mov ECX,1024
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13,RSI
            mov RSI,RDI
            sub RSP,1048
.L_42ef5f:

            mov EDX,DWORD PTR [RDX+8]
            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            shl RDX,2
            call __memmove_chk@PLT

            mov R14,QWORD PTR [R12]
            test R14,R14
            je .L_42f000

            xor EDI,EDI
            nop
.L_42ef90:

            mov R15D,EDI
            shl RDI,9
            mov RDX,R14
            xor R15D,1
            add RDI,RBP
            movsxd RBX,R15D
            shl RBX,9
            add RBX,RBP
            mov RSI,RBX
            call QWORD PTR [R14+24]

            mov R14,QWORD PTR [R14+56]
            movsxd RDI,R15D
            test R14,R14
            jne .L_42ef90
.L_42efbe:

            mov EDX,DWORD PTR [R12+12]
            mov RSI,RBX
            mov RDI,R13
            shl RDX,2
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+1032]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f005

            add RSP,1048
.L_42efec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f000:

            mov RBX,RBP
            jmp .L_42efbe
.L_42f005:

            call __stack_chk_fail@PLT
.L_42f00a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42f010:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov ESI,16
            push RBP
            push RBX
            sub RSP,8
.L_42f026:

            mov R13,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            call .L_425fe0

            test RAX,RAX
            mov R12,RAX
            je .L_42f0e7

            mov ESI,DWORD PTR [R13]
            mov RDI,QWORD PTR [R14]
            mov EDX,8
            mov DWORD PTR [RAX],ESI
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R12+8],RAX
            je .L_42f0ce

            mov ECX,DWORD PTR [R12]
            test ECX,ECX
            je .L_42f0e7

            xor EBP,EBP
            jmp .L_42f079
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f070:

            add EBP,1
            cmp DWORD PTR [R12],EBP
            jbe .L_42f0e7
.L_42f079:

            mov EBX,EBP
            lea R15,QWORD PTR [RAX+RBX*8]
            mov RAX,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RAX+RBX*8]
            call .L_427900

            mov QWORD PTR [R15],RAX
            mov RAX,QWORD PTR [R12+8]
            cmp QWORD PTR [RAX+RBX*8],0
            jne .L_42f070

            test RAX,RAX
            je .L_42f0ce

            mov EDX,DWORD PTR [R12]
            test EDX,EDX
            je .L_42f0ce

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f0b0:

            mov EDX,EBX
            mov RDI,QWORD PTR [RAX+RDX*8]
            test RDI,RDI
            je .L_42f0c5

            call .L_427870

            mov RAX,QWORD PTR [R12+8]
.L_42f0c5:

            add EBX,1
            cmp DWORD PTR [R12],EBX
            ja .L_42f0b0
.L_42f0ce:

            mov RDI,QWORD PTR [R14]
            mov RSI,RAX
            call .L_426070

            mov RDI,QWORD PTR [R14]
            mov RSI,R12
            xor R12D,R12D
            call .L_426070
.L_42f0e7:

            add RSP,8
.L_42f0eb:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42f0f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f100:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_42f150

            mov RSI,QWORD PTR [RBP]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RSI,RSI
            je .L_42f126

            call .L_426070

            mov RDI,QWORD PTR [RBX]
.L_42f126:

            mov RSI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_42f137

            call .L_426070

            mov RDI,QWORD PTR [RBX]
.L_42f137:

            mov RSI,QWORD PTR [RBX+48]
            add RSP,8
            pop RBX
            pop RBP
            jmp .L_426070
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f150:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_42f157:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f160:

            push R12
            push RBP
            mov ESI,16
            push RBX
.L_42f169:

            mov RBX,RDI
            mov R12,QWORD PTR [RDI+48]
            mov RDI,QWORD PTR [RDI]
            call .L_425fe0

            test RAX,RAX
            mov RBP,RAX
            je .L_42f1ba

            mov EDX,DWORD PTR [RBX+16]
            mov RSI,QWORD PTR [R12]
            imul EDX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [RBX]
            shl EDX,3
            call .L_426090

            mov RSI,QWORD PTR [R12+8]
            mov QWORD PTR [RBP],RAX
            test RSI,RSI
            je .L_42f1ba

            mov EAX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [RBX]
            lea EDX,DWORD PTR [RAX*8]
            call .L_426090

            mov QWORD PTR [RBP+8],RAX
.L_42f1ba:

            mov RAX,RBP
            pop RBX
.L_42f1be:

            pop RBP
            pop R12
            ret 
.L_42f1c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f1d0:

            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_42f1d7:

            mov RBP,QWORD PTR [RDI+48]
            mov ESI,24
            mov RDI,QWORD PTR [RDI]
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_42f24b

            mov EAX,DWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP]
            mov RDI,QWORD PTR [R12]
            mov DWORD PTR [RBX+16],EAX
            mov EAX,DWORD PTR [RBP+20]
            test RSI,RSI
            mov DWORD PTR [RBX+20],EAX
            je .L_42f260

            mov EAX,DWORD PTR [RBP+20]
            mov EDX,DWORD PTR [RBP+16]
            test EAX,EAX
            jne .L_42f258

            add EDX,EDX
.L_42f215:

            call .L_426090

            test RAX,RAX
            mov R8,RAX
            mov QWORD PTR [RBX],RAX
            je .L_42f279

            mov RDI,QWORD PTR [R12]
.L_42f229:

            mov R9,QWORD PTR [RBP+8]
            mov ECX,DWORD PTR [R9+16]
            mov EDX,DWORD PTR [R9+12]
            lea RSI,QWORD PTR [R9+20]
            mov R9D,DWORD PTR [R9+8]
            call .L_42d250

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_42f268
.L_42f24b:

            mov RAX,RBX
            pop RBX
.L_42f24f:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f258:

            shl EDX,2
            jmp .L_42f215

            nop
            nop
            nop
.L_42f260:

            mov R8,QWORD PTR [RBX]
            jmp .L_42f229
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f268:

            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [R12]
            test RSI,RSI
            je .L_42f279

            call .L_426070
.L_42f279:

            mov RDI,QWORD PTR [R12]
            mov RSI,RBX
            xor EBX,EBX
            call .L_426070

            jmp .L_42f24b
.L_42f289:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f290:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_42f2d0

            mov RSI,QWORD PTR [RBP]
            mov RBX,RDI
            test RSI,RSI
            je .L_42f2b3

            mov RDI,QWORD PTR [RDI]
            call .L_426070
.L_42f2b3:

            mov RDI,QWORD PTR [RBP+8]
            call .L_42d3f0

            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBX]
            add RSP,8
            pop RBX
            pop RBP
            jmp .L_426070
          .byte 0x66
          .byte 0x90
.L_42f2d0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_42f2d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f2e0:

            push RBX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            mov RBX,RSI
            sub RSP,64
.L_42f2f0:

            cvtss2sd XMM0,DWORD PTR [RDI]
            lea RSI,QWORD PTR [RSP+32]
            mov RDX,RSP
            cvtss2sd XMM1,DWORD PTR [RDI+4]
            mulsd XMM0,QWORD PTR [RIP+.L_431da8]
            movsd XMM3,QWORD PTR [RIP+.L_431db0]
            movsd XMM2,QWORD PTR [RIP+.L_431db8]
            mulsd XMM1,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            pxor XMM0,XMM0
            subsd XMM1,XMM2
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            xor EDI,EDI
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            call .L_40b850

            movsd XMM1,QWORD PTR [RIP+.L_431dc0]
            movsd XMM0,QWORD PTR [RSP+32]
            pxor XMM4,XMM4
            divsd XMM0,XMM1
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            pxor XMM5,XMM5
            pxor XMM6,XMM6
            cvtsd2ss XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            divsd XMM0,XMM1
            movss DWORD PTR [RBX],XMM4
            cvtsd2ss XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            divsd XMM0,XMM1
            movss DWORD PTR [RBX+4],XMM5
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RBX+8],XMM6
            jne .L_42f3bc

            add RSP,64
.L_42f3ba:

            pop RBX
            ret 
.L_42f3bc:

            call __stack_chk_fail@PLT
.L_42f3c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f3d0:

            push RBX
            pxor XMM0,XMM0
            mov RBX,RSI
            sub RSP,64
.L_42f3dc:

            movsd XMM1,QWORD PTR [RIP+.L_431dc0]
            lea RDX,QWORD PTR [RSP+32]
            mov RSI,RSP
            cvtss2sd XMM0,DWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+4]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            xor EDI,EDI
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM0
            call .L_40b6e0

            movsd XMM0,QWORD PTR [RSP]
            pxor XMM3,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_431da8]
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_431db0]
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            cvtsd2ss XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_431db8]
            addsd XMM1,XMM0
            addsd XMM0,QWORD PTR [RSP+16]
            divsd XMM1,XMM2
            movss DWORD PTR [RBX],XMM3
            divsd XMM0,XMM2
            cvtsd2ss XMM4,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RBX+4],XMM4
            movss DWORD PTR [RBX+8],XMM5
            jne .L_42f4a8

            add RSP,64
.L_42f4a6:

            pop RBX
            ret 
.L_42f4a8:

            call __stack_chk_fail@PLT
.L_42f4ad:

            nop
            nop
            nop
.L_42f4b0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            sub RSP,528
.L_42f4be:

            mov R10,QWORD PTR [RDX+48]
            mov EDX,DWORD PTR [RDX+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            cmp EDX,128
            ja .L_42f57e

            cmp DWORD PTR [R12+20],128
            ja .L_42f5a2

            mov R9,RSP
            mov RBP,RSI
            lea RBX,QWORD PTR [RSP+256]
            mov RSI,R9
            call .L_42ec00

            mov RAX,QWORD PTR [R10+8]
            mov RSI,RBX
            mov RDI,R9
            mov RDX,RAX
            call QWORD PTR [RAX+128]

            mov EAX,DWORD PTR [R12+20]
            test EAX,EAX
            je .L_42f55f

            lea ECX,DWORD PTR [RAX-1]
            xor EDX,EDX
            movss XMM1,DWORD PTR [RIP+.L_431de8]
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f540:

            movzx EAX,WORD PTR [RBX+RDX*2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            divss XMM0,XMM1
            movss DWORD PTR [RBP+RDX*4],XMM0
            add RDX,1
            cmp RCX,RDX
            jne .L_42f540
.L_42f55f:

            mov RAX,QWORD PTR [RSP+520]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f59d

            add RSP,528
.L_42f579:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42f57e:

            lea RCX,QWORD PTR [RIP+.L_431d20]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431914]
            mov EDX,456
            call __assert_fail@PLT
.L_42f59d:

            call __stack_chk_fail@PLT
.L_42f5a2:

            lea RCX,QWORD PTR [RIP+.L_431d20]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431931]
            mov EDX,457
            call __assert_fail@PLT
.L_42f5c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f5d0:

            test RDI,RDI
            je .L_42f61c

            test ESI,ESI
            je .L_42f615

            lea EAX,DWORD PTR [RSI-1]
            mov ECX,DWORD PTR [RDI+RAX*4]
            mov RSI,RAX
            test ECX,ECX
            je .L_42f60a

            mov EAX,ECX
            mul ECX
            jno .L_42f606

            jmp .L_42f610
          .byte 0x66
          .byte 0x90
.L_42f5f0:

            lea EAX,DWORD PTR [RSI-1]
            mov EDX,DWORD PTR [RDI+RAX*4]
            mov RSI,RAX
            test EDX,EDX
            je .L_42f610

            imul ECX,EDX
            mov EAX,EDX
            mul ECX
            jo .L_42f610
.L_42f606:

            test ESI,ESI
            jne .L_42f5f0
.L_42f60a:

            mov EAX,ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f610:

            xor ECX,ECX
            mov EAX,ECX
            ret 
.L_42f615:

            mov ECX,1
            jmp .L_42f60a
.L_42f61c:

            lea RCX,QWORD PTR [RIP+.L_431d10]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_43194f]
            sub RSP,8

            mov EDX,471
            call __assert_fail@PLT
.L_42f63f:

            nop
.L_42f640:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_42f647:

            je .L_42f6ad

            mov RBP,QWORD PTR [RDI+48]
            mov R12,RDI
            test RBP,RBP
            je .L_42f6a8

            mov RSI,QWORD PTR [RBP+8]
            test RSI,RSI
            je .L_42f68c

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_42f68c

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f670:

            mov EAX,EBX
            mov RDI,QWORD PTR [RSI+RAX*8]
            test RDI,RDI
            je .L_42f684

            call .L_427870

            mov RSI,QWORD PTR [RBP+8]
.L_42f684:

            add EBX,1
            cmp DWORD PTR [RBP],EBX
            ja .L_42f670
.L_42f68c:

            mov RDI,QWORD PTR [R12]
            call .L_426070

            pop RBX
.L_42f696:

            mov RSI,RBP
            mov RDI,QWORD PTR [R12]
            pop RBP
            pop R12
            jmp .L_426070
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f6a8:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42f6ad:

            lea RCX,QWORD PTR [RIP+.L_431d70]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431965]
            mov EDX,192
            call __assert_fail@PLT
.L_42f6cc:

            nop
            nop
            nop
            nop
.L_42f6d0:

            test RDX,RDX
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42f6db:

            je .L_42f730

            mov RBP,QWORD PTR [RDX+48]
            test RBP,RBP
            je .L_42f727

            mov RDX,QWORD PTR [RBP+8]
            test RDX,RDX
            je .L_42f727

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_42f727

            mov R12,RDI
            mov R13,RSI
            xor EBX,EBX
            jmp .L_42f704
.L_42f700:

            mov RDX,QWORD PTR [RBP+8]
.L_42f704:

            mov EAX,EBX
            add EBX,1
            mov RDI,QWORD PTR [RDX+RAX*8]
            movss XMM0,DWORD PTR [R12+RAX*4]
            lea R14,QWORD PTR [R13+RAX*4]
            call .L_428730

            cmp DWORD PTR [RBP],EBX
            movss DWORD PTR [R14],XMM0
            ja .L_42f700
.L_42f727:

            pop RBX
.L_42f728:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42f730:

            lea RCX,QWORD PTR [RIP+.L_431d60]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431965]
            mov EDX,174
            call __assert_fail@PLT
.L_42f74f:

            nop
.L_42f750:

            push R15
            push R14
            mov R15D,EDX
            push R13
            push R12
            mov R14D,ECX
            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            mov R13,R8
            sub RSP,8
            mov R12,R9
            call .L_425fe0

            test RAX,RAX
            je .L_42f7a9

            mov RDX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],EBP
            mov DWORD PTR [RAX+12],EBP
            mov DWORD PTR [RAX+16],R15D
            mov DWORD PTR [RAX+20],R14D
            mov QWORD PTR [RAX+40],RDX
            mov RDX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX+24],R13
            mov QWORD PTR [RAX+32],R12
            mov QWORD PTR [RAX+48],RDX
.L_42f7a9:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42f7b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f7c0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            sub RSP,8
.L_42f7d0:

            call .L_425fe0

            test RAX,RAX
            je .L_42f814

            lea RDX,QWORD PTR [RIP+.L_42ef20]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1768189472
            mov DWORD PTR [RAX+12],1768189472
            mov DWORD PTR [RAX+16],EBP
            mov DWORD PTR [RAX+20],EBP
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_42f814:

            add RSP,8
.L_42f818:

            pop RBX
            pop RBP
            ret 
.L_42f81b:

            nop
            nop
            nop
            nop
            nop
.L_42f820:

            push RBX
            sub RSP,80
.L_42f825:

            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            mov RCX,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RCX,RCX
            je .L_42f8e0

            mov RAX,RCX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f860:

            mov RAX,QWORD PTR [RAX+56]
            add EDX,1
            test RAX,RAX
            jne .L_42f860

            cmp ESI,EDX
            je .L_42f890
.L_42f870:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42f90b

            add RSP,80
.L_42f888:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f890:

            lea RAX,QWORD PTR [RSP+96]
            test ESI,ESI
            mov DWORD PTR [RSP],16
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            je .L_42f901

            lea R10,QWORD PTR [RSP+96]
            mov R11,RAX
            mov R9D,16
            mov RAX,RCX
            xor EBX,EBX
            xor R8D,R8D
            xor EDX,EDX
.L_42f8c7:

            cmp R9D,47
            ja .L_42f910

            mov EDI,R9D
            mov R8D,1
            add R9D,8
            add RDI,R11
            jmp .L_42f91c
          .byte 0x90
.L_42f8e0:

            xor EAX,EAX
            test ESI,ESI
            jne .L_42f870

            lea RAX,QWORD PTR [RSP+96]
            mov DWORD PTR [RSP],16
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
.L_42f901:

            mov EAX,1
            jmp .L_42f870
.L_42f90b:

            call __stack_chk_fail@PLT
.L_42f910:

            mov RDI,R10
            mov EBX,1
            add R10,8
.L_42f91c:

            mov EDI,DWORD PTR [RDI]
            cmp DWORD PTR [RAX+8],EDI
            jne .L_42f978

            add EDX,1
            mov RAX,QWORD PTR [RAX+56]
            cmp ESI,EDX
            jne .L_42f8c7

            test R8B,R8B
            jne .L_42f988
.L_42f933:

            test BL,BL
            je .L_42f93c

            mov QWORD PTR [RSP+8],R10
.L_42f93c:

            mov EDI,DWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            xor EAX,EAX
.L_42f946:

            cmp EDI,47
            ja .L_42f97f

            mov ESI,EDI
            add EDI,8
            add RSI,R11
.L_42f953:

            mov RSI,QWORD PTR [RSI]
            test RSI,RSI
            je .L_42f95e

            mov QWORD PTR [RSI],RCX
.L_42f95e:

            add EAX,1
            mov RCX,QWORD PTR [RCX+56]
            cmp EAX,EDX
            jne .L_42f946

            mov EAX,1
            jmp .L_42f870
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f978:

            xor EAX,EAX
            jmp .L_42f870
.L_42f97f:

            mov RSI,R8
            add R8,8
            jmp .L_42f953
.L_42f988:

            mov DWORD PTR [RSP],R9D
            jmp .L_42f933
.L_42f98e:

            nop
            nop
.L_42f990:

            mov RAX,QWORD PTR [RDI+48]
            mov RAX,QWORD PTR [RAX+8]
            ret 
.L_42f999:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f9a0:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            imul R12D,EDX
            push RBP
            push RBX
            sub RSP,24
.L_42f9b5:

            test R12D,R12D
            je .L_42fb38

            mov R9D,4294967295
            mov R15D,EDX
            xor EDX,EDX
            mov EAX,R9D
            div R15D
            cmp EAX,R12D
            jbe .L_42fb38

            xor EDX,EDX
            mov EAX,R9D
            div ESI
            cmp EAX,R12D
            jbe .L_42fb38

            cmp ESI,R12D
            ja .L_42fb38

            cmp R15D,R12D
            ja .L_42fb38

            mov DWORD PTR [RSP+12],ESI
            mov ESI,64
            mov RBP,R8
            mov R13,RCX
            mov R14,RDI
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_42fb38

            mov DWORD PTR [RAX+16],R15D
            mov QWORD PTR [RAX],R14
            mov ESI,16
            mov DWORD PTR [RAX+8],1835103334
            mov DWORD PTR [RAX+12],1835103334
            mov RDI,R14
            mov EAX,DWORD PTR [RSP+12]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_42ec90]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_42f160]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_42f100]
            mov QWORD PTR [RBX+40],RAX
            call .L_425fe0

            test RAX,RAX
            mov R15,RAX
            je .L_42fb38

            mov EDX,8
            mov ESI,R12D
            mov RDI,R14
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            je .L_42fb2a

            lea EDX,DWORD PTR [R12-1]
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fab0:

            movsd XMM0,QWORD PTR [R13+RDX*1]
            movsd QWORD PTR [RAX+RDX*1],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_42fab0

            test RBP,RBP
            je .L_42fb14

            mov R13D,DWORD PTR [RSP+12]
            mov EDX,8
            mov RDI,R14
            mov ESI,R13D
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_42fb2a

            test R13D,R13D
            je .L_42fb14

            mov EDI,DWORD PTR [RSP+12]
            lea EDX,DWORD PTR [RDI-1]
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
.L_42fb00:

            movsd XMM0,QWORD PTR [RBP+RDX*1]
            movsd QWORD PTR [RAX+RDX*1],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_42fb00
.L_42fb14:

            mov QWORD PTR [RBX+48],R15
.L_42fb18:

            add RSP,24
.L_42fb1c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42fb2a:

            mov RDI,RBX
            call .L_42f100

            nop
            nop
            nop
            nop
            nop
            nop
.L_42fb38:

            xor EBX,EBX
            jmp .L_42fb18
.L_42fb3c:

            nop
            nop
            nop
            nop
.L_42fb40:

            pxor XMM1,XMM1
            sub EDI,1
            movsd XMM2,QWORD PTR [RIP+.L_431d88]
            xor EAX,EAX
            cvtsi2sd XMM1,EDI
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            pxor XMM1,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_431d90]
            ucomisd XMM1,XMM0
            jae .L_42fb95

            ucomisd XMM0,XMM2
            mov EAX,4294967295
            jae .L_42fb95

            subsd XMM0,QWORD PTR [RIP+.L_431d98]
            addsd XMM0,QWORD PTR [RIP+.L_431da0]
            movd EAX,XMM0
            sar EAX,16
            add AX,32767
.L_42fb95:

            ret 
.L_42fb97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fba0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,408
.L_42fbb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_42fbf5

            mov RBP,QWORD PTR [RDI+48]
            test RBP,RBP
            je .L_42fbf5

            mov RBX,QWORD PTR [RBP+8]
            mov R13,RSI
            mov R14,RDX
            mov R12D,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+12]
            lea EAX,DWORD PTR [R12-1]
            lea EDX,DWORD PTR [RSI-1]
            cmp EAX,126
            ja .L_42fbf5

            cmp EDX,7
            jbe .L_42fc20
.L_42fbf5:

            xor EAX,EAX
.L_42fbf7:

            mov RSI,QWORD PTR [RSP+392]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42fe20

            add RSP,408
.L_42fc15:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42fc20:

            lea R8,QWORD PTR [RSP+128]
            xor EAX,EAX
            mov R15D,ECX
            mov WORD PTR [RSP+112],AX
            mov ECX,32
            xor EAX,EAX
            mov RDI,R8
            pxor XMM0,XMM0

            rep stosq QWORD PTR [RDI]

            add RBX,20
            mov DWORD PTR [RSP+16],EDX
            mov QWORD PTR [RSP+8],R8
            mov RDI,RBX
            movaps XMMWORD PTR [RSP+96],XMM0
            call .L_42f5d0

            cmp EAX,0
            mov DWORD PTR [RSP+88],EAX
            je .L_42fbf5

            mov R8,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RSP+16]
            jle .L_42fe16

            mov EAX,R12D
            lea RCX,QWORD PTR [RSP+96]
            xor ESI,ESI
            add RAX,RAX
            pxor XMM3,XMM3
            mov QWORD PTR [RSP+80],RAX
            movsxd RAX,EDX
            mov EDX,EDX
            mov QWORD PTR [RSP+56],RAX
            sub RAX,RDX
            xor R10D,R10D
            mov R9,RAX
            movsd XMM2,QWORD PTR [RIP+.L_431d88]
            sub R9,1
            movsd XMM4,QWORD PTR [RIP+.L_431d90]
            mov QWORD PTR [RSP+48],RBP
            mov QWORD PTR [RSP+64],R13
            mov R11D,4294967295
            mov QWORD PTR [RSP+72],R14
            mov DWORD PTR [RSP+92],R15D
            mov R14D,R12D
            mov RBP,R9
            mov R13D,R10D
            mov R12,RSI
            mov R15,RCX
            nop
            nop
            nop
            nop
            nop
.L_42fce0:

            mov RDI,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RIP+.L_431da0]
            mov EAX,R13D
.L_42fcf0:

            mov ECX,DWORD PTR [RBX+RDI*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div ECX
            sub ECX,1
            cvtsi2sd XMM1,ECX
            cvtsi2sd XMM0,EDX
            xor EDX,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_42fd40

            ucomisd XMM0,XMM2
            mov EDX,R11D
            jae .L_42fd40

            subsd XMM0,QWORD PTR [RIP+.L_431d98]
            addsd XMM0,XMM5
            movq RDX,XMM0
            sar EDX,16
            add DX,32767
.L_42fd40:

            mov WORD PTR [R15+RDI*2],DX
            sub RDI,1
            cmp RBP,RDI
            jne .L_42fcf0

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42fd7a

            lea RSI,QWORD PTR [RDX+R12*1]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fd68:

            movzx EDX,WORD PTR [RSI+RAX*2]
            mov WORD PTR [R8+RAX*2],DX
            add RAX,1
            cmp R14D,EAX
            jg .L_42fd68
.L_42fd7a:

            mov DWORD PTR [RSP+44],R11D
            movsd QWORD PTR [RSP+32],XMM3
            mov RDX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+24],XMM4
            mov RSI,R8
            mov QWORD PTR [RSP+8],R8
            movsd QWORD PTR [RSP+16],XMM2
            mov RDI,R15
            mov RAX,QWORD PTR [RSP+64]
            call RAX

            test EAX,EAX
            je .L_42fbf5

            test DWORD PTR [RSP+92],16777216
            mov R8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+44]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jne .L_42fe02

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_42fe02

            lea RSI,QWORD PTR [RDX+R12*1]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fdf0:

            movzx EDX,WORD PTR [R8+RAX*2]
            mov WORD PTR [RSI+RAX*2],DX
            add RAX,1
            cmp R14D,EAX
            jg .L_42fdf0
.L_42fe02:

            add R13D,1
            add R12,QWORD PTR [RSP+80]
            cmp DWORD PTR [RSP+88],R13D
            jne .L_42fce0
.L_42fe16:

            mov EAX,1
            jmp .L_42fbf7
.L_42fe20:

            call __stack_chk_fail@PLT
.L_42fe25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe30:

            push R15
            push R14
            mov R8,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,680
.L_42fe44:

            mov R12,QWORD PTR [RDI+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+664],RAX
            xor EAX,EAX
            mov RBX,QWORD PTR [R12+8]
            mov EBP,DWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+12]
            lea EAX,DWORD PTR [RBP-1]
            cmp EAX,126
            ja .L_42fe78

            lea R13D,DWORD PTR [RSI-1]
            cmp R13D,7
            jbe .L_42fea8
.L_42fe78:

            xor EAX,EAX
.L_42fe7a:

            mov RSI,QWORD PTR [RSP+664]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4300c2

            add RSP,680
.L_42fe98:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fea8:

            add RBX,20
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP+16],RDX
            mov RDI,RBX
            mov QWORD PTR [RSP+8],R8
            call .L_42f5d0

            cmp EAX,0
            mov DWORD PTR [RSP+88],EAX
            je .L_42fe78

            mov R8,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            mov ECX,DWORD PTR [RSP+24]
            jle .L_4300b8

            mov EAX,EBP
            movsxd RSI,R13D
            lea R15,QWORD PTR [RSP+144]
            shl RAX,2
            mov QWORD PTR [RSP+56],RSI
            xor R11D,R11D
            mov QWORD PTR [RSP+80],RAX
            mov EAX,R13D
            xor R10D,R10D
            sub RSI,RAX
            pxor XMM4,XMM4
            mov R14,RSI
            pxor XMM3,XMM3
            sub R14,1
            movsd XMM2,QWORD PTR [RIP+.L_431d88]
            movsd XMM5,QWORD PTR [RIP+.L_431d90]
            lea R13,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+48],R12
            mov QWORD PTR [RSP+64],R8
            mov R12,R14
            mov R8,R15
            movss XMM6,DWORD PTR [RIP+.L_431dec]
            mov R15D,EBP
            mov R14D,R10D
            mov QWORD PTR [RSP+72],R9
            mov DWORD PTR [RSP+92],ECX
            mov RBP,R11
            nop
            nop
            nop
            nop
.L_42ff58:

            mov RDI,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RIP+.L_431da0]
            mov EAX,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ff70:

            mov ECX,DWORD PTR [RBX+RDI*4]
            xor EDX,EDX
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            div ECX
            sub ECX,1
            cvtsi2sd XMM0,ECX
            cvtsi2sd XMM1,EDX
            mulsd XMM1,XMM2
            divsd XMM1,XMM0
            movaps XMM0,XMM3
            addsd XMM1,XMM5
            ucomisd XMM4,XMM1
            jae .L_42ffd4

            ucomisd XMM1,XMM2
            movaps XMM0,XMM6
            jae .L_42ffd4

            subsd XMM1,QWORD PTR [RIP+.L_431d98]
            pxor XMM0,XMM0
            addsd XMM1,XMM7
            movq RDX,XMM1
            sar EDX,16
            add DX,32767
            movzx EDX,DX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            cvtsd2ss XMM0,XMM0
.L_42ffd4:

            movss DWORD PTR [R13+RDI*4],XMM0
            sub RDI,1
            cmp R12,RDI
            jne .L_42ff70

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_430014

            xor EAX,EAX
            add RDX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430000:

            movss XMM0,DWORD PTR [RDX+RAX*4]
            movss DWORD PTR [R8+RAX*4],XMM0
            add RAX,1
            cmp R15D,EAX
            jg .L_430000
.L_430014:

            movss DWORD PTR [RSP+44],XMM6
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,R8
            movss DWORD PTR [RSP+40],XMM3
            mov QWORD PTR [RSP+8],R8
            mov RDI,R13
            movsd QWORD PTR [RSP+32],XMM4
            mov RAX,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call RAX

            test EAX,EAX
            je .L_42fe78

            test DWORD PTR [RSP+92],16777216
            mov R8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movss XMM3,DWORD PTR [RSP+40]
            movss XMM6,DWORD PTR [RSP+44]
            jne .L_4300a4

            mov RAX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_4300a4

            xor EAX,EAX
            add RDX,RBP
.L_430090:

            movss XMM0,DWORD PTR [R8+RAX*4]
            movss DWORD PTR [RDX+RAX*4],XMM0
            add RAX,1
            cmp R15D,EAX
            jg .L_430090
.L_4300a4:

            add R14D,1
            add RBP,QWORD PTR [RSP+80]
            cmp DWORD PTR [RSP+88],R14D
            jne .L_42ff58
.L_4300b8:

            mov EAX,1
            jmp .L_42fe7a
.L_4300c2:

            call __stack_chk_fail@PLT
.L_4300c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4300d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp EDI,15
            jbe .L_430120
.L_4300f3:

            xor EAX,EAX
.L_4300f5:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_430244

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430120:

            mov R14,RSI
            mov R15D,EDI
            mov ESI,EDI
            mov RDI,R14
            mov RBX,RDX
            mov RBP,RCX
            call .L_42f5d0

            cmp EAX,0
            mov DWORD PTR [RSP+28],EAX
            je .L_4300f3

            jle .L_43023a

            lea R13,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RIP+.L_431d88]
            movsd XMM4,QWORD PTR [RIP+.L_431d90]
            sub R15D,1
            xor R12D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430168:

            cmp R15D,-1
            je .L_430201

            movsxd RCX,R15D
            mov EAX,R15D
            mov EDI,4294967295
            mov RSI,RCX
            pxor XMM3,XMM3
            sub RSI,RAX
            movsd XMM5,QWORD PTR [RIP+.L_431da0]
            sub RSI,1
            mov EAX,R12D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4301a0:

            mov R9D,DWORD PTR [R14+RCX*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div R9D
            sub R9D,1
            cvtsi2sd XMM1,R9D
            cvtsi2sd XMM0,EDX
            xor EDX,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jae .L_4301f2

            ucomisd XMM0,XMM2
            mov EDX,EDI
            jae .L_4301f2

            subsd XMM0,QWORD PTR [RIP+.L_431d98]
            addsd XMM0,XMM5
            movd EDX,XMM0
            sar EDX,16
            add DX,32767
.L_4301f2:

            mov WORD PTR [R13+RCX*2],DX
            sub RCX,1
            cmp RSI,RCX
            jne .L_4301a0
.L_430201:

            xor ESI,ESI
            movsd QWORD PTR [RSP+16],XMM4
            mov RDX,RBP
            movsd QWORD PTR [RSP+8],XMM2
            mov RDI,R13
            call RBX

            test EAX,EAX
            je .L_4300f3

            add R12D,1
            cmp DWORD PTR [RSP+28],R12D
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            jne .L_430168
.L_43023a:

            mov EAX,1
            jmp .L_4300f5
.L_430244:

            call __stack_chk_fail@PLT
.L_430249:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430250:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            cmp EDI,15
            jbe .L_4302a0
.L_430273:

            xor EAX,EAX
.L_430275:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4303ef

            add RSP,120
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4302a0:

            mov R14,RSI
            mov R15D,EDI
            mov ESI,EDI
            mov RDI,R14
            mov RBX,RDX
            mov RBP,RCX
            call .L_42f5d0

            cmp EAX,0
            mov DWORD PTR [RSP+28],EAX
            je .L_430273

            jle .L_4303e5

            pxor XMM4,XMM4
            lea R13,QWORD PTR [RSP+32]
            sub R15D,1
            movsd XMM2,QWORD PTR [RIP+.L_431d88]
            xor R12D,R12D
            movsd XMM5,QWORD PTR [RIP+.L_431d90]
            nop
            nop
            nop
.L_4302e8:

            cmp R15D,-1
            je .L_4303a0

            movsxd RSI,R15D
            mov EAX,R15D
            mov RDI,RSI
            pxor XMM3,XMM3
            sub RDI,RAX
            movsd XMM8,QWORD PTR [RIP+.L_431d98]
            movsd XMM7,QWORD PTR [RIP+.L_431da0]
            sub RDI,1
            mov EAX,R12D
            movss XMM6,DWORD PTR [RIP+.L_431dec]
            nop
            nop
            nop
            nop
            nop
            nop
.L_430328:

            mov R8D,DWORD PTR [R14+RSI*4]
            xor EDX,EDX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            div R8D
            sub R8D,1
            cvtsi2sd XMM1,R8D
            cvtsi2sd XMM0,EDX
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            movaps XMM1,XMM4
            addsd XMM0,XMM5
            ucomisd XMM3,XMM0
            jae .L_430390

            ucomisd XMM0,XMM2
            movaps XMM1,XMM6
            jae .L_430390

            subsd XMM0,XMM8
            pxor XMM1,XMM1
            addsd XMM0,XMM7
            movd EDX,XMM0
            pxor XMM0,XMM0
            sar EDX,16
            add DX,32767
            movzx EDX,DX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM2
            cvtsd2ss XMM1,XMM0
.L_430390:

            movss DWORD PTR [R13+RSI*4],XMM1
            sub RSI,1
            cmp RSI,RDI
            jne .L_430328
.L_4303a0:

            xor ESI,ESI
            movss DWORD PTR [RSP+24],XMM4
            mov RDX,RBP
            movsd QWORD PTR [RSP+16],XMM5
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM2
            call RBX

            test EAX,EAX
            je .L_430273

            add R12D,1
            cmp DWORD PTR [RSP+28],R12D
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movss XMM4,DWORD PTR [RSP+24]
            jne .L_4302e8
.L_4303e5:

            mov EAX,1
            jmp .L_430275
.L_4303ef:

            call __stack_chk_fail@PLT
.L_4303f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430400:

            push RBX

            mov ESI,64
            mov RBX,RDI
            call .L_425fe0

            test RAX,RAX
            je .L_430455

            lea RCX,QWORD PTR [RIP+.L_42f2e0]
            movabs RDX,12884901891
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],2016570400
            mov DWORD PTR [RAX+12],2016570400
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX+24],RCX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_430455:

            pop RBX

            ret 
.L_430457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430460:

            lea RCX,QWORD PTR [RIP+.L_431ca0]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_430489

            mov DWORD PTR [RAX+12],840971296
.L_430489:

            add RSP,8
            ret 
.L_43048e:

            nop
            nop
.L_430490:

            lea RCX,QWORD PTR [RIP+.L_431c40]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_4304b9

            mov DWORD PTR [RAX+12],874525216
.L_4304b9:

            add RSP,8
            ret 
.L_4304be:

            nop
            nop
.L_4304c0:

            lea R8,QWORD PTR [RIP+.L_431bb0]
            lea RCX,QWORD PTR [RIP+.L_431be0]
            sub RSP,8
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_4304ed

            mov DWORD PTR [RAX+12],1681026080
.L_4304ed:

            add RSP,8
            ret 
.L_4304f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430500:

            lea RCX,QWORD PTR [RIP+.L_431b60]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_430529

            mov DWORD PTR [RAX+12],1681029152
.L_430529:

            add RSP,8
            ret 
.L_43052e:

            nop
            nop
.L_430530:

            lea R8,QWORD PTR [RIP+.L_431ad0]
            lea RCX,QWORD PTR [RIP+.L_431b00]
            sub RSP,8
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_43055d

            mov DWORD PTR [RAX+12],1815241760
.L_43055d:

            add RSP,8
            ret 
.L_430562:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430570:

            lea RCX,QWORD PTR [RIP+.L_431a80]
            sub RSP,8
            xor R8D,R8D
            mov EDX,3
            mov ESI,3
            call .L_42f9a0

            test RAX,RAX
            je .L_430599

            mov DWORD PTR [RAX+12],2016568352
.L_430599:

            add RSP,8
            ret 
.L_43059e:

            nop
            nop
.L_4305a0:

            push RBP
            push RBX
            mov EBP,ESI
            mov ESI,64
            mov RBX,RDI
            sub RSP,8
.L_4305b0:

            call .L_425fe0

            test RAX,RAX
            je .L_4305f4

            lea RDX,QWORD PTR [RIP+.L_42ed70]
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1668050976
            mov DWORD PTR [RAX+12],1668050976
            mov DWORD PTR [RAX+16],EBP
            mov DWORD PTR [RAX+20],EBP
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_4305f4:

            add RSP,8
.L_4305f8:

            pop RBX
            pop RBP
            ret 
.L_4305fb:

            nop
            nop
            nop
            nop
            nop
.L_430600:

            push RBX

            mov ESI,64
            mov RBX,RDI
            call .L_425fe0

            test RAX,RAX
            je .L_430655

            lea RCX,QWORD PTR [RIP+.L_42f3d0]
            movabs RDX,12884901891
            mov QWORD PTR [RAX],RBX
            mov DWORD PTR [RAX+8],1815246880
            mov DWORD PTR [RAX+12],1815246880
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX+24],RCX
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
.L_430655:

            pop RBX

            ret 
.L_430657:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430660:

            push RBX
            mov RAX,QWORD PTR [RDI+40]
            mov RBX,RDI
            test RAX,RAX
            je .L_43066f

            call RAX
.L_43066f:

            mov RSI,RBX
            mov RDI,QWORD PTR [RBX]
            pop RBX
            jmp .L_426070
.L_43067b:

            nop
            nop
            nop
            nop
            nop
.L_430680:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EBX,ESI
            mov ESI,64
            sub RSP,24
.L_43069b:

            call .L_425fe0

            test RAX,RAX
            mov RBP,RAX
            je .L_430793

            mov QWORD PTR [RAX],R14
            mov DWORD PTR [RAX+8],1668707188
            mov ESI,16
            mov DWORD PTR [RAX+12],1668707188
            mov DWORD PTR [RAX+16],EBX
            mov RDI,R14
            mov DWORD PTR [RAX+20],EBX
            lea RAX,QWORD PTR [RIP+.L_42f6d0]
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+24],RAX
            lea RAX,QWORD PTR [RIP+.L_42f010]
            mov QWORD PTR [RBP+32],RAX
            lea RAX,QWORD PTR [RIP+.L_42f640]
            mov QWORD PTR [RBP+40],RAX
            call .L_425fe0

            test RAX,RAX
            mov R13,RAX
            je .L_430789

            mov QWORD PTR [RBP+48],RAX
            mov EDX,8
            mov DWORD PTR [RAX],EBX
            mov ESI,EBX
            mov RDI,R14
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R13+8],RAX
            je .L_430789

            test EBX,EBX
            je .L_430793

            lea EDX,DWORD PTR [RBX-1]
            xor R15D,R15D
            lea RDX,QWORD PTR [RDX*8+8]
            mov QWORD PTR [RSP+8],RDX
            jmp .L_430762
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430740:

            mov RDI,QWORD PTR [R12+R15*1]
            call .L_427900

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R13+8]
            cmp QWORD PTR [RAX+R15*1],0
            je .L_430789
.L_430757:

            add R15,8
            cmp QWORD PTR [RSP+8],R15
            je .L_430793
.L_430762:

            test R12,R12
            lea RBX,QWORD PTR [RAX+R15*1]
            jne .L_430740

            movsd XMM0,QWORD PTR [RIP+.L_431dc8]
            mov RDI,R14
            call .L_427850

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [R13+8]
            cmp QWORD PTR [RAX+R15*1],0
            jne .L_430757
.L_430789:

            mov RDI,RBP
            xor EBP,EBP
            call .L_430660
.L_430793:

            add RSP,24
.L_430797:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4307a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4307b0:

            sub RSP,8
            xor EDX,EDX
            call .L_430680

            test RAX,RAX
            je .L_4307c7

            mov DWORD PTR [RAX+12],1768189472
.L_4307c7:

            add RSP,8
            ret 
.L_4307cc:

            nop
            nop
            nop
            nop
.L_4307d0:

            push RBP
            push RBX
            xor EDX,EDX
            mov RBX,RDI
            mov ESI,258
            sub RSP,40
.L_4307e0:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4274b0

            xor EDX,EDX
            mov ESI,258
            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            mov RBP,RSP
            call .L_4274b0

            mov ESI,258
            xor EDX,EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call .L_4274b0

            xor ESI,ESI
            mov QWORD PTR [RSP+16],RAX
.L_430826:

            mov RAX,QWORD PTR [RBP+RSI*8]
            test RAX,RAX
            je .L_4308ab

            mov RDI,QWORD PTR [RAX+48]
            mov EAX,128
            mov RDX,RDI
            nop
            nop
            nop
            nop
.L_430840:

            mov ECX,EAX
            add EAX,65535
            add RDX,2
            sar ECX,8
            mov WORD PTR [RDX-2],CX
            cmp EAX,16842623
            jne .L_430840

            add RSI,1
            mov EAX,4294967295
            cmp RSI,3
            mov WORD PTR [RDI+514],AX
            jne .L_430826

            mov RDI,RBX
            mov RDX,RBP
            call .L_430680

            mov RDI,RBP
            mov RBX,RAX
            call .L_427890

            test RBX,RBX
            je .L_430891

            mov DWORD PTR [RBX+12],840971296
.L_430891:

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4308b7

            add RSP,40
.L_4308a8:

            pop RBX
            pop RBP
            ret 
.L_4308ab:

            mov RDI,RBP
            xor EBX,EBX
            call .L_427890

            jmp .L_430891
.L_4308b7:

            call __stack_chk_fail@PLT
.L_4308bc:

            nop
            nop
            nop
            nop
.L_4308c0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_4308c9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_431dd0]
            movsd XMM0,QWORD PTR [RIP+.L_431dc8]
            lea RBP,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
            call .L_427850

            mov RDX,RBP
            mov ESI,108
            mov RDI,RBX
            mov QWORD PTR [RSP+16],RAX
            call .L_427720

            mov RDX,RBP
            mov ESI,108
            mov RDI,RBX
            mov QWORD PTR [RSP+24],RAX
            call .L_427720

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,3
            mov RDI,RBX
            mov QWORD PTR [RSP+32],RAX
            call .L_430680

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43094f

            add RSP,56
.L_43094c:

            pop RBX
            pop RBP
            ret 
.L_43094f:

            call __stack_chk_fail@PLT
.L_430954:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430960:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_43096e:

            test RSI,RSI
            mov DWORD PTR [RSP+8],ECX
            je .L_430ad7

            cmp EDX,8
            mov RBP,RDI
            mov R12D,EDX
            ja .L_430ab8

            mov R13,RSI
            mov ESI,64
            mov R14,R8
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_430a93

            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],1668052340
            mov ESI,24
            mov DWORD PTR [RAX+12],1668052340
            mov DWORD PTR [RAX+16],R12D
            mov RDI,RBP
            mov EAX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_42f4b0]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_42f1d0]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_42f290]
            mov QWORD PTR [RBX+40],RAX
            call .L_425fe0

            test RAX,RAX
            mov R15,RAX
            je .L_430aa8

            mov QWORD PTR [RBX+48],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_42f5d0

            imul EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [R15+20],0
            test EAX,EAX
            mov DWORD PTR [R15+16],EAX
            je .L_430aa8

            mov EDX,2
            mov ESI,EAX
            mov RDI,RBP
            mov DWORD PTR [RSP+12],EAX
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            mov ECX,DWORD PTR [RSP+12]
            je .L_430aa8

            test R14,R14
            je .L_430a72

            lea EDX,DWORD PTR [RCX-1]
            lea RSI,QWORD PTR [RDX+RDX*1+2]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_430a60:

            movzx ECX,WORD PTR [R14+RDX*1]
            mov WORD PTR [RAX+RDX*1],CX
            add RDX,2
            cmp RSI,RDX
            jne .L_430a60
.L_430a72:

            mov ECX,DWORD PTR [RSP+8]
            xor R9D,R9D
            mov R8,RAX
            mov EDX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_42d250

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_430aa8
.L_430a93:

            add RSP,24
.L_430a97:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430aa8:

            mov RDI,RBX
            xor EBX,EBX
            call .L_430660

            jmp .L_430a93
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430ab8:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_4319b0]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_426320

            jmp .L_430a93
.L_430ad7:

            lea RCX,QWORD PTR [RIP+.L_431d40]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_43197a]
            mov EDX,560
            call __assert_fail@PLT
.L_430af6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430b00:

            sub RSP,56
.L_430b04:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_430960

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_430b50

            add RSP,56
.L_430b4f:

            ret 
.L_430b50:

            call __stack_chk_fail@PLT
.L_430b55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430b60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_430b6e:

            test RSI,RSI
            mov DWORD PTR [RSP+8],ECX
            je .L_430cdf

            cmp EDX,8
            mov RBP,RDI
            mov R12D,EDX
            ja .L_430cc0

            mov R13,RSI
            mov ESI,64
            mov R14,R8
            call .L_425fe0

            test RAX,RAX
            mov RBX,RAX
            je .L_430c98

            mov QWORD PTR [RAX],RBP
            mov DWORD PTR [RAX+8],1668052340
            mov ESI,24
            mov DWORD PTR [RAX+12],1668052340
            mov DWORD PTR [RAX+16],R12D
            mov RDI,RBP
            mov EAX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+20],EAX
            lea RAX,QWORD PTR [RIP+.L_42ed30]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_42f1d0]
            mov QWORD PTR [RBX+32],RAX
            lea RAX,QWORD PTR [RIP+.L_42f290]
            mov QWORD PTR [RBX+40],RAX
            call .L_425fe0

            test RAX,RAX
            mov R15,RAX
            je .L_430cb0

            mov QWORD PTR [RBX+48],RAX
            mov ESI,R12D
            mov RDI,R13
            call .L_42f5d0

            imul EAX,DWORD PTR [RSP+8]
            mov DWORD PTR [R15+20],1
            test EAX,EAX
            mov DWORD PTR [R15+16],EAX
            je .L_430cb0

            mov EDX,4
            mov ESI,EAX
            mov RDI,RBP
            mov DWORD PTR [RSP+12],EAX
            call .L_426010

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            mov ECX,DWORD PTR [RSP+12]
            je .L_430cb0

            test R14,R14
            je .L_430c74

            lea EDX,DWORD PTR [RCX-1]
            lea RCX,QWORD PTR [RDX*4+4]
            xor EDX,EDX
            nop
            nop
            nop
.L_430c60:

            movss XMM0,DWORD PTR [R14+RDX*1]
            movss DWORD PTR [RAX+RDX*1],XMM0
            add RDX,4
            cmp RCX,RDX
            jne .L_430c60
.L_430c74:

            mov ECX,DWORD PTR [RSP+8]
            mov R9D,1
            mov R8,RAX
            mov EDX,R12D
            mov RSI,R13
            mov RDI,RBP
            call .L_42d250

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_430cb0
.L_430c98:

            add RSP,24
.L_430c9c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430cb0:

            mov RDI,RBX
            xor EBX,EBX
            call .L_430660

            jmp .L_430c98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430cc0:

            mov ECX,EDX
            lea RDX,QWORD PTR [RIP+.L_4319b0]
            mov R8D,8
            mov ESI,2
            xor EAX,EAX
            xor EBX,EBX
            call .L_426320

            jmp .L_430c98
.L_430cdf:

            lea RCX,QWORD PTR [RIP+.L_431cf0]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_43197a]
            mov EDX,651
            call __assert_fail@PLT
.L_430cfe:

            nop
            nop
.L_430d00:

            sub RSP,56
.L_430d04:

            mov DWORD PTR [RSP],ESI
            mov DWORD PTR [RSP+4],ESI
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+12],ESI
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+24],ESI
            mov DWORD PTR [RSP+28],ESI
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_430b60

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_430d50

            add RSP,56
.L_430d4f:

            ret 
.L_430d50:

            call __stack_chk_fail@PLT
.L_430d55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430d60:

            push RBX
            mov EDX,ESI
            xor R8D,R8D
            mov ECX,EDX
            sub RSP,64
.L_430d6c:

            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movabs RAX,8589934594
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_430960

            test RAX,RAX
            mov RBX,RAX
            je .L_430dd1

            lea RDX,QWORD PTR [RSP+12]
            lea RSI,QWORD PTR [RIP+.L_42ed40]
            xor ECX,ECX
            mov RDI,RAX
            call .L_42fba0

            test EAX,EAX
            je .L_430df0

            mov DWORD PTR [RBX+12],1768189472
.L_430dd1:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_430dfc

            add RSP,64
.L_430de8:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430df0:

            mov RDI,RBX
            xor EBX,EBX
            call .L_430660

            jmp .L_430dd1
.L_430dfc:

            call __stack_chk_fail@PLT
.L_430e01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e10:

            mov EAX,DWORD PTR [RDI+16]
            ret 
.L_430e14:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e20:

            mov EAX,DWORD PTR [RDI+20]
            ret 
.L_430e24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e30:

            mov EAX,DWORD PTR [RDI+8]
            ret 
.L_430e34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e40:

            mov RAX,QWORD PTR [RDI+48]
            ret 
.L_430e45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e50:

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_430e55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e60:

            test RDI,RDI
            je .L_430f30

            push R15
            push R14
            mov ESI,64
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_430e7f:

            mov R12,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+40]
            mov RCX,QWORD PTR [RDI+32]
            mov R13,QWORD PTR [RDI+24]
            mov R14D,DWORD PTR [RDI+20]
            mov R15D,DWORD PTR [RDI+16]
            mov EBP,DWORD PTR [RDI+8]
            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RCX
            call .L_425fe0

            test RAX,RAX
            mov RDX,RAX
            je .L_430f28

            mov RCX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+12],EBP
            mov QWORD PTR [RAX],R12
            mov DWORD PTR [RAX+8],EBP
            mov DWORD PTR [RAX+16],R15D
            mov DWORD PTR [RAX+20],R14D
            mov QWORD PTR [RAX+32],RCX
            mov QWORD PTR [RAX+24],R13
            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RDX+48],0
            mov QWORD PTR [RDX+40],RAX
            mov EAX,DWORD PTR [RBX+12]
            mov DWORD PTR [RDX+12],EAX
            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_430f05

            mov QWORD PTR [RSP],RDX
            mov RDI,RBX
            call RAX

            mov RDX,QWORD PTR [RSP]
            test RAX,RAX
            mov QWORD PTR [RDX+48],RAX
            je .L_430f20
.L_430f05:

            add RSP,24
.L_430f09:

            mov RAX,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430f20:

            mov RDI,RDX
            call .L_430660
.L_430f28:

            xor EDX,EDX
            jmp .L_430f05
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430f30:

            xor EDX,EDX
            mov RAX,RDX
            ret 
.L_430f36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430f40:

            cmp ESI,15
            ja .L_430fe0

            cmp EDX,15
            ja .L_430fe0

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_430f59:

            mov EBX,ESI
            mov ESI,72
            mov EBP,EDX
            call .L_425fe0

            test RAX,RAX
            mov R8,RAX
            je .L_430fcb

            mov DWORD PTR [RAX+8],EBX
            mov DWORD PTR [RAX+12],EBP
            lea RAX,QWORD PTR [RIP+.L_42ee20]
            mov QWORD PTR [R8+48],0
            mov QWORD PTR [R8+40],0
            mov RDI,R8
            mov QWORD PTR [R8+24],RAX
            lea RAX,QWORD PTR [RIP+.L_42ef40]
            mov QWORD PTR [R8+16],R8
            mov QWORD PTR [R8+56],R12
            mov QWORD PTR [R8+32],RAX
            call .L_42edb0

            test EAX,EAX
            je .L_430fc0

            pop RBX
.L_430fb0:

            mov RAX,R8
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430fc0:

            mov RSI,R8
            mov RDI,R12
            call .L_426070
.L_430fcb:

            xor R8D,R8D
            pop RBX
            mov RAX,R8
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430fe0:

            xor R8D,R8D
            mov RAX,R8
            ret 
.L_430fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430ff0:

            test RDI,RDI
            je .L_430ffa

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_430ffa:

            lea RCX,QWORD PTR [RIP+.L_431a60]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431996]
            sub RSP,8
            mov EDX,1397
            call __assert_fail@PLT
.L_43101d:

            nop
            nop
            nop
.L_431020:

            test RDI,RDI
            je .L_431029

            mov EAX,DWORD PTR [RDI+8]
            ret 
.L_431029:

            lea RCX,QWORD PTR [RIP+.L_431a40]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431996]
            sub RSP,8
            mov EDX,1403
            call __assert_fail@PLT
.L_43104c:

            nop
            nop
            nop
            nop
.L_431050:

            test RDI,RDI
            je .L_431059

            mov EAX,DWORD PTR [RDI+12]
            ret 
.L_431059:

            lea RCX,QWORD PTR [RIP+.L_431a20]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431996]
            sub RSP,8
            mov EDX,1409
            call __assert_fail@PLT
.L_43107c:

            nop
            nop
            nop
            nop
.L_431080:

            test RDI,RDI
            je .L_4310e0

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_4310b1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4310a0:

            mov RBX,QWORD PTR [RDI+56]
            call .L_430660

            test RBX,RBX
            mov RDI,RBX
            jne .L_4310a0
.L_4310b1:

            mov RAX,QWORD PTR [RBP+40]
            mov RDI,QWORD PTR [RBP+56]
            test RAX,RAX
            je .L_4310c8

            mov RSI,QWORD PTR [RBP+16]
            call RAX

            mov RDI,QWORD PTR [RBP+56]
.L_4310c8:

            add RSP,8
            mov RSI,RBP
            pop RBX
            pop RBP
            jmp .L_426070
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4310e0:

            ret 
.L_4310e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4310f0:

            test RDX,RDX
            je .L_4310ff

            mov RAX,RDX
            mov RDX,QWORD PTR [RDX+16]
            jmp QWORD PTR [RAX+24]
.L_4310ff:

            lea RCX,QWORD PTR [RIP+.L_431a00]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431996]
            sub RSP,8
            mov EDX,1437
            call __assert_fail@PLT
.L_431122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431130:

            test RDX,RDX
            je .L_431138

            jmp QWORD PTR [RDX+32]
.L_431138:

            lea RCX,QWORD PTR [RIP+.L_4319e0]
            lea RSI,QWORD PTR [RIP+.L_43190b]
            lea RDI,QWORD PTR [RIP+.L_431996]
            sub RSP,8
            mov EDX,1445
            call __assert_fail@PLT
.L_43115b:

            nop
            nop
            nop
            nop
            nop
.L_431160:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_43116b:

            je .L_431264

            mov EDX,DWORD PTR [RDI+12]
            mov ESI,DWORD PTR [RDI+8]
            mov R12,RDI
            mov RDI,QWORD PTR [RDI+56]
            call .L_430f40

            test RAX,RAX
            mov R14,RAX
            je .L_431264

            mov RBX,QWORD PTR [R12]
            test RBX,RBX
            je .L_4311e1

            mov EBP,1
            xor R13D,R13D
            jmp .L_4311b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4311a8:

            mov QWORD PTR [R14],RAX
.L_4311ab:

            mov RBX,QWORD PTR [RBX+56]
            xor EBP,EBP
            mov R13,RAX
            test RBX,RBX
            je .L_4311e1
.L_4311b9:

            mov RDI,RBX
            call .L_430e60

            test RAX,RAX
            je .L_431240

            test EBP,EBP
            jne .L_4311a8

            test R13,R13
            je .L_4311ab

            mov QWORD PTR [R13+56],RAX
            mov RBX,QWORD PTR [RBX+56]
            xor EBP,EBP
            mov R13,RAX
            test RBX,RBX
            jne .L_4311b9
.L_4311e1:

            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R12+40]
            mov QWORD PTR [R14+24],RAX
            mov RAX,QWORD PTR [R12+32]
            mov QWORD PTR [R14+32],RAX
            mov RAX,QWORD PTR [R12+48]
            mov QWORD PTR [R14+40],RDX
            test RAX,RAX
            mov QWORD PTR [R14+48],RAX
            je .L_43121a

            mov RSI,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [R12+56]
            call RAX

            mov QWORD PTR [R14+16],RAX
.L_43121a:

            mov EAX,DWORD PTR [R12+64]
            mov RDI,R14
            mov DWORD PTR [R14+64],EAX
            call .L_42edb0

            test EAX,EAX
            je .L_431257

            pop RBX
.L_431230:

            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431240:

            mov RDI,R14
            xor R14D,R14D
            call .L_431080

            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_431257:

            mov RDI,QWORD PTR [R12+56]
            mov RSI,R14
            call .L_426070
.L_431264:

            xor R14D,R14D
            pop RBX
            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_431273:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431280:

            test RDI,RDI
            je .L_4312c0

            test RDX,RDX
            je .L_4312c0

            test ESI,ESI
            je .L_4312c8

            cmp ESI,1
            jne .L_4312c0

            mov RCX,QWORD PTR [RDI]
            test RCX,RCX
            jne .L_4312a3

            jmp .L_4312e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4312a0:

            mov RCX,RAX
.L_4312a3:

            mov RAX,QWORD PTR [RCX+56]
            test RAX,RAX
            jne .L_4312a0

            mov QWORD PTR [RCX+56],RDX
            mov QWORD PTR [RDX+56],0
            jmp .L_42edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4312c0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4312c8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [RDI],RDX
.L_4312d2:

            jmp .L_42edb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4312e0:

            mov QWORD PTR [RDI],RDX
            jmp .L_4312d2
.L_4312e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4312f0:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            je .L_431370

            test ESI,ESI
            push RBX
.L_4312fb:

            je .L_431348

            cmp ESI,1
            jne .L_431388

            xor ESI,ESI
            jmp .L_431316
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431310:

            mov RSI,RAX
            mov RAX,RCX
.L_431316:

            mov RCX,QWORD PTR [RAX+56]
            test RCX,RCX
            jne .L_431310

            test RSI,RSI
            je .L_431390

            test RDX,RDX
            mov QWORD PTR [RSI+56],0
            mov RBX,RDI
            jne .L_43135f
.L_431334:

            mov RDI,RAX
            call .L_430660

            mov RDI,RBX
            pop RBX
.L_431340:

            jmp .L_42edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431348:

            mov RCX,QWORD PTR [RAX+56]
            mov QWORD PTR [RDI],RCX
            mov QWORD PTR [RAX+56],0
.L_431357:

            test RDX,RDX
            mov RBX,RDI
            je .L_431334
.L_43135f:

            mov RDI,RBX
            mov QWORD PTR [RDX],RAX
            pop RBX
            jmp .L_42edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431370:

            test RDX,RDX
            je .L_431380

            mov QWORD PTR [RDX],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431380:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431388:

            xor EAX,EAX
            jmp .L_431357
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431390:

            mov QWORD PTR [RDI],0
            jmp .L_431357
.L_431399:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4313a0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_4313a9:

            cmp QWORD PTR [RDI],0
            mov RBX,QWORD PTR [RSI]
            je .L_431440

            test RBX,RBX
            je .L_43140d

            nop
            nop
            nop
            nop
            nop
.L_4313c0:

            mov RDI,RBX
            call .L_430e60

            test RAX,RAX
            je .L_431430

            mov RCX,QWORD PTR [RBP]
            test RCX,RCX
            jne .L_4313e3

            jmp .L_431420
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4313e0:

            mov RCX,RDX
.L_4313e3:

            mov RDX,QWORD PTR [RCX+56]
            test RDX,RDX
            jne .L_4313e0

            mov QWORD PTR [RCX+56],RAX
            mov RDI,RBP
            mov QWORD PTR [RAX+56],0
            call .L_42edb0

            test EAX,EAX
            je .L_431430
.L_431404:

            mov RBX,QWORD PTR [RBX+56]
            test RBX,RBX
            jne .L_4313c0
.L_43140d:

            add RSP,8
.L_431411:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_42edb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431420:

            mov QWORD PTR [RBP],RAX
            mov RDI,RBP
            call .L_42edb0

            test EAX,EAX
            jne .L_431404
.L_431430:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431440:

            test RBX,RBX
            jne .L_4313c0

            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+8],EAX
            mov EAX,DWORD PTR [RSI+12]
            mov DWORD PTR [RDI+12],EAX
            jmp .L_43140d
.L_431457:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431460:

            mov EAX,DWORD PTR [RDI+64]
            mov DWORD PTR [RDI+64],ESI
            ret 
.L_431467:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431470:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_431474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431480:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            jne .L_431493

            jmp .L_4314a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431490:

            mov RAX,RDX
.L_431493:

            mov RDX,QWORD PTR [RAX+56]
            test RDX,RDX
            jne .L_431490

            ret 
          .byte 0x66
          .byte 0x90
.L_4314a0:

            ret 
.L_4314a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4314b0:

            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            test RDX,RDX
            je .L_4314d0

            nop
            nop
            nop
            nop
            nop
            nop
.L_4314c0:

            mov RDX,QWORD PTR [RDX+56]
            add EAX,1
            test RDX,RDX
            jne .L_4314c0

            ret 
          .byte 0x66
          .byte 0x90
.L_4314d0:

            ret 
.L_4314d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4314e0:

            mov QWORD PTR [RDI+24],RSI
            mov QWORD PTR [RDI+48],R8
            mov QWORD PTR [RDI+40],RCX
            mov QWORD PTR [RDI+16],RDX
            ret 
.L_4314f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431500:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,264
.L_431514:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+8]
            mov QWORD PTR [RSP+8],RSI
            lea ECX,DWORD PTR [RAX-3]
            cmp ECX,1
            jbe .L_431568
.L_431537:

            xor EAX,EAX
.L_431539:

            mov RSI,QWORD PTR [RSP+248]
            xor RSI,QWORD PTR FS:[40]
            jne .L_431906

            add RSP,264
.L_431557:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431568:

            cmp DWORD PTR [R14+12],3
            jne .L_431537

            test RDX,RDX
            mov R12,RDI
            je .L_4318c8

            movss XMM0,DWORD PTR [RDX]
            movss DWORD PTR [RSP+64],XMM0
            movss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RSP+68],XMM0
            movss XMM0,DWORD PTR [RDX+8]
            movss DWORD PTR [RSP+72],XMM0
.L_43159b:

            cmp EAX,4
            je .L_4318b0

            mov DWORD PTR [RSP+76],0
.L_4315ac:

            movsd XMM7,QWORD PTR [RIP+.L_431dd8]
            lea RAX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+44],30
            movss XMM1,DWORD PTR [RIP+.L_431df0]
            movsd QWORD PTR [RSP],XMM7
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4315e0:

            movss DWORD PTR [RSP+16],XMM1
            mov RDX,R14
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R13
            call QWORD PTR [R14+32]

            movss XMM2,DWORD PTR [R12]
            subss XMM2,DWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [R12+4]
            subss XMM0,DWORD PTR [RSP+52]
            pxor XMM6,XMM6
            pxor XMM5,XMM5
            movss XMM1,DWORD PTR [RSP+16]
            mulss XMM2,XMM2
            mulss XMM0,XMM0
            addss XMM2,XMM6
            addss XMM2,XMM0
            movss XMM0,DWORD PTR [R12+8]
            subss XMM0,DWORD PTR [RSP+56]
            mulss XMM0,XMM0
            addss XMM0,XMM2
            ucomiss XMM5,XMM0
            sqrtss XMM2,XMM0
            ja .L_4318e4
.L_43164e:

            pxor XMM7,XMM7
            cvtss2sd XMM7,XMM2
            ucomisd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM7
            jae .L_431895

            mov EDX,DWORD PTR [R14+8]
            test EDX,EDX
            je .L_43168a

            xor EAX,EAX
.L_431671:

            mov RCX,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [R13+RAX*4]
            movss DWORD PTR [RCX+RAX*4],XMM0
            add RAX,1
            cmp EDX,EAX
            ja .L_431671
.L_43168a:

            pxor XMM7,XMM7
            ucomiss XMM7,XMM2
            jae .L_431895

            lea RAX,QWORD PTR [RSP+96]
            lea RBP,QWORD PTR [RSP+80]
            lea R15,QWORD PTR [RSP+176]
            xor EBX,EBX
            mov QWORD PTR [RSP+16],RAX
.L_4316b0:

            movss XMM0,DWORD PTR [RSP+64]
            pxor XMM2,XMM2
            movss DWORD PTR [RSP+80],XMM0
            movss XMM0,DWORD PTR [RSP+68]
            movss DWORD PTR [RSP+84],XMM0
            movss XMM0,DWORD PTR [RSP+72]
            movss DWORD PTR [RSP+88],XMM0
            movss XMM0,DWORD PTR [RSP+76]
            movss DWORD PTR [RSP+92],XMM0
            movsd XMM5,QWORD PTR [RIP+.L_431de0]
            movss XMM0,DWORD PTR [RBP+RBX*4]
            cvtss2sd XMM2,XMM0
            ucomisd XMM5,XMM2
            jbe .L_4318a0

            addss XMM0,XMM1
            movss DWORD PTR [RBP+RBX*4],XMM0
.L_43170a:

            movss DWORD PTR [RSP],XMM1
            mov RDX,R14
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call QWORD PTR [R14+32]

            movss XMM4,DWORD PTR [RSP+48]
            movss XMM0,DWORD PTR [RSP+96]
            subss XMM0,XMM4
            movss XMM1,DWORD PTR [RSP]
            movss XMM3,DWORD PTR [RSP+52]
            movss XMM2,DWORD PTR [RSP+56]
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8],XMM0
            movss XMM0,DWORD PTR [RSP+100]
            subss XMM0,XMM3
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8+24],XMM0
            movss XMM0,DWORD PTR [RSP+104]
            subss XMM0,XMM2
            divss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R15+RBX*8+48],XMM0
            add RBX,1
            cmp RBX,3
            jne .L_4316b0

            subss XMM4,DWORD PTR [R12]
            lea RDX,QWORD PTR [RSP+144]
            lea RDI,QWORD PTR [RSP+112]
            subss XMM3,DWORD PTR [R12+4]
            mov RSI,R15
            subss XMM2,DWORD PTR [R12+8]
            cvtss2sd XMM4,XMM4
            cvtss2sd XMM3,XMM3
            cvtss2sd XMM2,XMM2
            movsd QWORD PTR [RSP+144],XMM4
            movsd QWORD PTR [RSP+152],XMM3
            movsd QWORD PTR [RSP+160],XMM2
            call .L_432460

            test EAX,EAX
            je .L_431537

            pxor XMM2,XMM2
            movss XMM0,DWORD PTR [RSP+64]
            pxor XMM3,XMM3
            mov RAX,R13
            pxor XMM6,XMM6
            lea RDX,QWORD PTR [R13+12]
            cvtsd2ss XMM2,QWORD PTR [RSP+112]
            subss XMM0,XMM2
            movss XMM2,DWORD PTR [RSP+68]
            cvtsd2ss XMM3,QWORD PTR [RSP+120]
            subss XMM2,XMM3
            pxor XMM3,XMM3
            movss XMM1,DWORD PTR [RSP]
            cvtsd2ss XMM3,QWORD PTR [RSP+128]
            ucomiss XMM6,XMM0
            movss DWORD PTR [RSP+68],XMM2
            movss XMM2,DWORD PTR [RSP+72]
            subss XMM2,XMM3
            movss DWORD PTR [RSP+64],XMM0
            movss DWORD PTR [RSP+72],XMM2
            ja .L_431870
.L_43184b:

            ucomiss XMM0,DWORD PTR [RIP+.L_431dec]
            jbe .L_43185a

            mov DWORD PTR [RAX],1065353216
.L_43185a:

            add RAX,4
            cmp RDX,RAX
            je .L_43187f
.L_431863:

            pxor XMM6,XMM6
            movss XMM0,DWORD PTR [RAX]
            ucomiss XMM6,XMM0
            jbe .L_43184b
.L_431870:

            mov DWORD PTR [RAX],0
            add RAX,4
            cmp RDX,RAX
            jne .L_431863
.L_43187f:

            sub DWORD PTR [RSP+44],1
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM5
            jne .L_4315e0
.L_431895:

            mov EAX,1
            jmp .L_431539
          .byte 0x90
.L_4318a0:

            subss XMM0,XMM1
            movss DWORD PTR [RBP+RBX*4],XMM0
            jmp .L_43170a
          .byte 0x90
.L_4318b0:

            movss XMM0,DWORD PTR [R12+12]
            movss DWORD PTR [RSP+76],XMM0
            jmp .L_4315ac
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4318c8:

            movabs RSI,4510805389542529434
            mov DWORD PTR [RSP+72],1050253722
            mov QWORD PTR [RSP+64],RSI
            jmp .L_43159b
.L_4318e4:

            movss DWORD PTR [RSP+24],XMM1
            movss DWORD PTR [RSP+16],XMM2
            call sqrtf@PLT

            movss XMM1,DWORD PTR [RSP+24]
            movss XMM2,DWORD PTR [RSP+16]
            jmp .L_43164e
.L_431906:

            call __stack_chk_fail@PLT
.L_43190b:
          .string "cmslut.c"
.L_431914:
          .string "(mpe ->InputChannels <= 128)"
.L_431931:
          .string "(mpe ->OutputChannels <= 128)"
.L_43194f:
          .string "(Dims != ((void *)0))"
.L_431965:
          .string "(mpe != ((void *)0))"
.L_43197a:
          .string "(clutPoints != ((void *)0))"
.L_431996:
          .string "(lut != ((void *)0))"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4319b0:
          .string "Too many input channels (%d channels, max=%d)"
          .byte 0x66
          .byte 0x90
.L_4319e0:
          .string "cmsPipelineEvalFloat"
          .zero 11
.L_431a00:
          .string "cmsPipelineEval16"
          .zero 14
.L_431a20:
          .string "cmsPipelineOutputChannels"
          .zero 6
.L_431a40:
          .string "cmsPipelineInputChannels"
          .zero 7
.L_431a60:
          .string "cmsGetPipelineContextID"
          .zero 8
.L_431a80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ad0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431b00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431b60:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431bb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xe0
          .byte 0x3f
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431be0:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x70
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x70
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431c40:
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0x1f
          .byte 0xe0
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431ca0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431cf0:
          .string "cmsStageAllocCLutFloatGranular"
          .zero 1
.L_431d10:
          .string "CubeSize"
          .zero 7
.L_431d20:
          .string "EvaluateCLUTfloatIn16"
          .zero 10
.L_431d40:
          .string "cmsStageAllocCLut16bitGranular"
          .zero 1
.L_431d60:
          .string "EvaluateCurves"
          .zero 1
.L_431d70:
          .string "CurveSetElemTypeFree"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431d88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xef
          .byte 0x40
.L_431d90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_431d98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xff
          .byte 0xdf
          .byte 0x40
.L_431da0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x42
.L_431da8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_431db0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_431db8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_431dc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_431dc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_431dd0:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_431dd8:
          .byte 0x40
          .byte 0x8c
          .byte 0xb5
          .byte 0x78
          .byte 0x1d
          .byte 0xaf
          .byte 0x15
          .byte 0x44
.L_431de0:
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xd9
          .byte 0xce
          .byte 0xf7
          .byte 0xef
          .byte 0x3f
.L_431de8:

            add BH,BH
          .byte 0x7f
          .byte 0x47
.L_431dec:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
.L_431df0:
          .byte 0x6f
          .byte 0x12
          .byte 0x83
          .byte 0x3a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_431e00:

            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd QWORD PTR [RDI+16],XMM2
            ret 
.L_431e0f:

            nop
.L_431e10:

            movsd XMM0,QWORD PTR [RSI]
            subsd XMM0,QWORD PTR [RDX]
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+8]
            subsd XMM0,QWORD PTR [RDX+8]
            movsd QWORD PTR [RDI+8],XMM0
            movsd XMM0,QWORD PTR [RSI+16]
            subsd XMM0,QWORD PTR [RDX+16]
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_431e3b:

            nop
            nop
            nop
            nop
            nop
.L_431e40:

            movsd XMM3,QWORD PTR [RDX+16]
            movsd XMM1,QWORD PTR [RSI+16]
            movsd XMM0,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM0,XMM3
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI],XMM0
            movsd XMM2,QWORD PTR [RDX]
            movsd XMM0,QWORD PTR [RSI]
            mulsd XMM1,XMM2
            mulsd XMM3,XMM0
            subsd XMM1,XMM3
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RSI+8]
            subsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_431e91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ea0:

            movsd XMM0,QWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RDI+8]
            mulsd XMM0,QWORD PTR [RSI]
            mulsd XMM1,QWORD PTR [RSI+8]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+16]
            mulsd XMM1,QWORD PTR [RSI+16]
            addsd XMM0,XMM1
            ret 
.L_431ec5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ed0:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            mulsd XMM1,XMM1
            mulsd XMM2,XMM2
            movsd XMM0,QWORD PTR [RDI+16]
            mulsd XMM0,XMM0
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_431f05

            movapd XMM0,XMM1
            ret 
.L_431f05:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_431f23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431f30:

            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            subsd XMM1,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RDI+16]
            subsd XMM2,QWORD PTR [RSI+8]
            subsd XMM0,QWORD PTR [RSI+16]
            mulsd XMM1,XMM1
            mulsd XMM2,XMM2
            mulsd XMM0,XMM0
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_431f73

            movapd XMM0,XMM1
            ret 
.L_431f73:

            sub RSP,24

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_431f91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431fa0:

            movsd XMM0,QWORD PTR [RIP+.L_4324f0]
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            movsd QWORD PTR [RDI],XMM0
            mov QWORD PTR [RDI+40],0
            mov QWORD PTR [RDI+48],0
            movsd QWORD PTR [RDI+32],XMM0
            mov QWORD PTR [RDI+56],0
            movsd QWORD PTR [RDI+64],XMM0
            ret 
.L_431fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ff0:

            sub RSP,88
.L_431ff4:

            lea RCX,QWORD PTR [RDI+72]
            movsd XMM0,QWORD PTR [RIP+.L_4324f0]
            mov QWORD PTR [RSP+8],0
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP],XMM0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            movsd QWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+56],0
            movq XMM2,QWORD PTR [RIP+.L_432510]
            movsd XMM1,QWORD PTR [RIP+.L_4324f8]
.L_43206a:

            xor EAX,EAX
            subsd XMM0,QWORD PTR [RDI+RAX*1]
            andpd XMM0,XMM2
            ucomisd XMM1,XMM0
            jbe .L_432099
.L_43207b:

            add RAX,8
            cmp RAX,24
            je .L_4320a0

            movsd XMM0,QWORD PTR [RDX+RAX*1]
            subsd XMM0,QWORD PTR [RDI+RAX*1]
            andpd XMM0,XMM2
            ucomisd XMM1,XMM0
            ja .L_43207b
.L_432099:

            xor EAX,EAX
            jmp .L_4320bd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4320a0:

            add RDI,24
            add RDX,24
            cmp RDI,RCX
            je .L_4320b8

            movsd XMM0,QWORD PTR [RDX]
            jmp .L_43206a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4320b8:

            mov EAX,1
.L_4320bd:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4320d2

            add RSP,88
.L_4320d1:

            ret 
.L_4320d2:

            call __stack_chk_fail@PLT
.L_4320d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4320e0:

            movsd XMM0,QWORD PTR [RSI]
            movsd XMM4,QWORD PTR [RSI+8]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSI+16]
            movsd XMM5,QWORD PTR [RDX+32]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM3
            mulsd XMM4,QWORD PTR [RDX+24]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+16],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+8],XMM2
            movsd QWORD PTR [RDI],XMM0
            movsd XMM0,QWORD PTR [RSI+24]
            movsd XMM4,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSI+40]
            movsd XMM5,QWORD PTR [RDX+32]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM3
            mulsd XMM4,QWORD PTR [RDX+24]
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+40],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+32],XMM2
            movsd QWORD PTR [RDI+24],XMM0
            movsd XMM0,QWORD PTR [RSI+48]
            movsd XMM4,QWORD PTR [RSI+56]
            movsd XMM3,QWORD PTR [RSI+64]
            movsd XMM1,QWORD PTR [RDX+16]
            movsd XMM2,QWORD PTR [RDX+40]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM4
            movsd XMM5,QWORD PTR [RDX+32]
            mulsd XMM5,XMM4
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+64]
            mulsd XMM4,QWORD PTR [RDX+24]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RDX+8]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX]
            addsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RDX+56]
            mulsd XMM5,XMM3
            mulsd XMM3,QWORD PTR [RDX+48]
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+64],XMM1
            addsd XMM2,XMM5
            addsd XMM0,XMM3
            movsd QWORD PTR [RDI+56],XMM2
            movsd QWORD PTR [RDI+48],XMM0
            ret 
.L_43224d:

            nop
            nop
            nop
.L_432250:

            movsd XMM9,QWORD PTR [RDI+32]
            xor EAX,EAX
            movsd XMM4,QWORD PTR [RDI+40]
            movsd XMM1,QWORD PTR [RDI+64]
            movapd XMM3,XMM9
            movsd XMM6,QWORD PTR [RDI+56]
            movapd XMM0,XMM4
            mulsd XMM3,XMM1
            movsd XMM8,QWORD PTR [RDI+48]
            movapd XMM2,XMM4
            mulsd XMM0,XMM6
            mulsd XMM2,XMM8
            movsd XMM7,QWORD PTR [RDI+8]
            movsd XMM10,QWORD PTR [RDI+16]
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RDI+24]
            movapd XMM11,XMM7
            movapd XMM5,XMM0
            mulsd XMM0,XMM6
            movsd XMM12,QWORD PTR [RIP+.L_432500]
            mulsd XMM5,XMM1
            subsd XMM2,XMM5
            movapd XMM5,XMM9
            mulsd XMM5,XMM8
            mulsd XMM11,XMM2
            subsd XMM0,XMM5
            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RDI]
            mulsd XMM0,XMM3
            addsd XMM0,XMM11
            movapd XMM11,XMM10
            mulsd XMM11,XMM5
            addsd XMM0,XMM11
            movapd XMM11,XMM0
            andpd XMM11,XMMWORD PTR [RIP+.L_432510]
            ucomisd XMM12,XMM11
            ja .L_4323cf

            divsd XMM3,XMM0
            mov EAX,1
            mulsd XMM7,XMM1
            mulsd XMM9,XMM10
            divsd XMM2,XMM0
            movsd QWORD PTR [RSI],XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM10
            divsd XMM5,XMM0
            subsd XMM3,XMM7
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+8],XMM3
            movapd XMM3,XMM4
            movsd XMM7,QWORD PTR [RDI+8]
            movsd QWORD PTR [RSI+24],XMM2
            mulsd XMM3,XMM7
            subsd XMM3,XMM9
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+16],XMM3
            movsd XMM2,QWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+16]
            mulsd XMM1,XMM2
            mulsd XMM8,XMM3
            mulsd XMM4,XMM2
            mulsd XMM6,XMM2
            subsd XMM1,XMM8
            divsd XMM1,XMM0
            movsd QWORD PTR [RSI+32],XMM1
            movsd XMM8,QWORD PTR [RDI+24]
            movsd QWORD PTR [RSI+48],XMM5
            mulsd XMM3,XMM8
            subsd XMM3,XMM4
            divsd XMM3,XMM0
            movsd QWORD PTR [RSI+40],XMM3
            movsd XMM3,QWORD PTR [RDI+48]
            mulsd XMM2,QWORD PTR [RDI+32]
            mulsd XMM3,XMM7
            mulsd XMM7,XMM8
            subsd XMM3,XMM6
            subsd XMM2,XMM7
            movapd XMM1,XMM3
            divsd XMM2,XMM0
            divsd XMM1,XMM0
            movsd QWORD PTR [RSI+64],XMM2
            movsd QWORD PTR [RSI+56],XMM1
.L_4323cf:

            ret 
.L_4323d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4323e0:

            movsd XMM1,QWORD PTR [RSI]
            movsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM1,QWORD PTR [RDX]
            movsd XMM3,QWORD PTR [RSI+8]
            movsd XMM2,QWORD PTR [RDX+16]
            mulsd XMM3,XMM0
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSI+16]
            mulsd XMM3,XMM2
            addsd XMM1,XMM3
            movsd QWORD PTR [RDI],XMM1
            movsd XMM3,QWORD PTR [RDX]
            mulsd XMM0,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RSI+24]
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSI+40]
            mulsd XMM0,XMM2
            addsd XMM1,XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd XMM0,QWORD PTR [RSI+56]
            mulsd XMM3,QWORD PTR [RSI+48]
            mulsd XMM0,QWORD PTR [RDX+8]
            mulsd XMM2,QWORD PTR [RSI+64]
            addsd XMM0,XMM3
            addsd XMM0,XMM2
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_43245a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_432460:

            sub RSP,168

            mov R8,RDI
            movdqu XMM0,XMMWORD PTR [RSI]
            lea RCX,QWORD PTR [RSP+80]
            mov RDI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP],XMM0
            mov RAX,QWORD PTR [RSI+64]
            movdqu XMM0,XMMWORD PTR [RSI+16]
            mov QWORD PTR [RSP+64],RAX
            movaps XMMWORD PTR [RSP+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+48]
            mov RSI,RCX
            movaps XMMWORD PTR [RSP+48],XMM0
            call .L_432250

            test EAX,EAX
            je .L_4324cd

            mov RDI,R8
            call .L_4323e0

            mov EAX,1
.L_4324cd:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4324e8

            add RSP,168

            ret 
.L_4324e8:

            call __stack_chk_fail@PLT
.L_4324ed:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4324f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4324f8:
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0xf0
          .byte 0x3e
.L_432500:
          .byte 0x2d
          .byte 0x43
          .byte 0x1c
          .byte 0xeb
          .byte 0xe2
          .byte 0x36
          .byte 0x1a
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432510:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432520:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_432530:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_402de0

            xor ESI,ESI
            mov RDI,RAX
            mov R12,RAX
            call .L_413990

            movsd XMM0,QWORD PTR [RIP+.L_433138]
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+88],RAX
            mov RBX,RAX
            movabs RAX,4294967297
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+72],RBP
            mov QWORD PTR [RSP+80],RBP
            movsd QWORD PTR [RSP+40],XMM0
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            movsd QWORD PTR [RSP+48],XMM0
            mov DWORD PTR [RSP+16],1
            lea RDX,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+56],XMM0
            mov DWORD PTR [RSP+20],R13D
            mov RCX,RSP
            mov QWORD PTR [RSP+24],RAX
            sub RSP,8
.L_4325c2:

            mov ESI,4
            push 320
            mov RDI,R12
            push 4849688
            push 4849688
            push 0
            push 0
            lea R9,QWORD PTR [RSP+80]
            lea R8,QWORD PTR [RSP+64]
            call .L_4105f0

            add RSP,48
            mov RDI,RBX
            mov RBP,RAX
            call .L_403eb0

            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            jne .L_432619

            add RSP,120
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_432619:

            call __stack_chk_fail@PLT
.L_43261e:

            nop
            nop
.L_432620:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,88
.L_432637:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_402de0

            xor EDX,EDX
            mov ESI,R12D
            mov RDI,RBP
            mov R13,RAX
            call .L_42e6c0

            test EAX,EAX
            jne .L_4326a0
.L_432660:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX],0
.L_432679:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4327b1

            add RSP,88
.L_432691:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4326a0:

            xor EDX,EDX
            mov ESI,2
            mov RDI,RBP
            call .L_40b3b0

            mov RDI,RBP
            mov R14D,EAX
            call .L_403540

            lea RCX,QWORD PTR [RSP+4]
            lea RDX,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov EDI,EAX
            call .L_40d300

            test EAX,EAX
            je .L_432660

            mov EAX,R14D
            shr EAX,3
            and EAX,15
            cmp EAX,DWORD PTR [RSP+4]
            jne .L_432660

            xor ESI,ESI
            mov RDI,R13
            call .L_413880

            test RAX,RAX
            mov R15,RAX
            je .L_432660

            sub RSP,8
.L_4326fa:

            mov EDX,R14D
            mov RSI,RBP
            push 320
            mov R9D,R12D
            mov R8D,4849688
            mov RCX,RAX
            mov RDI,R13
            call .L_410e00

            mov RDI,R15
            mov RBP,RAX
            call .L_403eb0

            test RBP,RBP
            pop RAX
            pop RDX
            je .L_432660

            lea R12,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,1
            mov RDI,RBP
            mov RDX,R12
            call .L_410260

            movsd XMM0,QWORD PTR [RIP+.L_433140]
            mov QWORD PTR [RSP+32],0
            movsd XMM1,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],0
            ucomisd XMM1,XMM0
            jbe .L_432775

            movsd QWORD PTR [RSP+16],XMM0
.L_432775:

            mov RDI,RBP
            call .L_40fdf0

            lea RSI,QWORD PTR [RSP+48]
            xor EDI,EDI
            mov RDX,R12
            call .L_40b850

            test RBX,RBX
            mov EAX,1
            je .L_432679

            mov RDX,QWORD PTR [RSP+64]
            movdqa XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RBX+16],RDX
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_432679
.L_4327b1:

            call __stack_chk_fail@PLT
.L_4327b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4327c0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            mov RBP,RSI
            sub RSP,96
.L_4327d4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_403560

            cmp EAX,1818848875
            sete CL
            cmp EAX,1633842036
            sete DL
            or CL,DL
            jne .L_43280a

            cmp EAX,1852662636
            je .L_43280a

            cmp R12D,2
            jbe .L_432840
.L_43280a:

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX],0
.L_432823:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4329b8

            add RSP,96
.L_43283b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_432840:

            mov RDI,RBP
            call .L_403580

            cmp EAX,67108863
            jbe .L_432858

            test R12D,4294967293
            je .L_432870
.L_432858:

            cmp R12D,1
            je .L_4328a8
.L_43285e:

            mov RDX,RBX
            mov ESI,R12D
            mov RDI,RBP
            call .L_432620

            jmp .L_432823
          .byte 0x66
          .byte 0x90
.L_432870:

            mov RDI,RBP
            call .L_42e620

            test EAX,EAX
            jne .L_4328f7

            mov RAX,QWORD PTR [RIP+.L_433148]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RIP+.L_433150]
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RIP+.L_433158]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            jmp .L_432823
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4328a8:

            mov RDI,RBP
            call .L_403560

            cmp EAX,1886549106
            jne .L_43285e

            mov RDI,RBP
            call .L_403540

            cmp EAX,1129142603
            jne .L_43285e

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call .L_42e6c0

            test EAX,EAX
            jne .L_43290c

            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+8],0
            mov EAX,1
            mov QWORD PTR [RBX],0
            jmp .L_432823
.L_4328f7:

            mov RDX,RBX
            mov ESI,1
            mov RDI,RBP
            call .L_432620

            jmp .L_432823
.L_43290c:

            xor ESI,ESI
            mov RDI,RBP
            call .L_432520

            test RAX,RAX
            mov RBP,RAX
            je .L_43280a

            lea R12,QWORD PTR [RSP+32]
            mov RSI,RSP
            mov ECX,1
            mov RDI,RAX
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+8],0
            mov RDX,R12
            mov QWORD PTR [RSP],0
            call .L_410260

            movsd XMM0,QWORD PTR [RIP+.L_433140]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM1,XMM0
            jbe .L_43296e

            movsd QWORD PTR [RSP+32],XMM0
.L_43296e:

            mov RDI,RBP
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+40],0
            call .L_40fdf0

            lea RSI,QWORD PTR [RSP+64]
            xor EDI,EDI
            mov RDX,R12
            call .L_40b850

            test RBX,RBX
            je .L_4329bd

            mov RAX,QWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov QWORD PTR [RBX+16],RAX
            mov EAX,1
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_432823
.L_4329b8:

            call __stack_chk_fail@PLT
.L_4329bd:

            mov EAX,1
            jmp .L_432823
.L_4329c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4329d0:

            push R15
            push R14
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RBX,RSI
            sub RSP,10568
.L_4329ed:

            mov DWORD PTR [RSP+16],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+10552],RAX
            xor EAX,EAX
            call .L_403560

            cmp EAX,1818848875
            sete CL
            cmp EAX,1633842036
            sete DL
            or CL,DL
            jne .L_432a2b

            cmp EAX,1852662636
            je .L_432a2b

            cmp DWORD PTR [RSP+16],2
            jbe .L_432a70
.L_432a2b:

            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+8],0
            xor EAX,EAX
            mov QWORD PTR [RBP],0
.L_432a45:

            mov RDI,QWORD PTR [RSP+10552]
            xor RDI,QWORD PTR FS:[40]
            jne .L_43311f

            add RSP,10568
.L_432a63:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_432a70:

            mov RDI,RBX
            call .L_403580

            cmp EAX,67108863
            mov RDI,RBX
            jbe .L_432a90

            test DWORD PTR [RSP+16],4294967293
            je .L_432f9c
.L_432a90:

            call .L_403540

            mov ESI,DWORD PTR [RSP+16]
            mov EDX,1
            mov RDI,RBX
            mov R13D,EAX
            call .L_42e6f0

            test EAX,EAX
            je .L_432c20

            cmp R13D,1196573017
            setne DL
            cmp R13D,1380401696
            setne AL
            test DL,AL
            je .L_432ad6

            cmp R13D,1129142603
            jne .L_432c20
.L_432ad6:

            cmp DWORD PTR [RSP+16],1
            je .L_432c37

            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
.L_432afc:

            mov ESI,DWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_432520

            mov R12,RAX
            xor EAX,EAX
            test R12,R12
            je .L_432a45

            lea RAX,QWORD PTR [RSP+96]
            xor R15D,R15D
            lea R13,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RIP+.L_433160]
            lea RBX,QWORD PTR [RSP+304]
            mov QWORD PTR [RSP+8],RAX
            lea R14,QWORD PTR [RSP+2352]
            jmp .L_432bdd
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432b50:

            movsd XMM7,QWORD PTR [RIP+.L_433140]
            minsd XMM7,XMM0
            movapd XMM0,XMM7
.L_432b60:

            movsd QWORD PTR [RSP+136],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            ucomisd XMM1,XMM0
            ja .L_432c70

            movsd XMM6,QWORD PTR [RIP+.L_433140]
            minsd XMM6,XMM0
            movapd XMM0,XMM6
.L_432b89:

            mov RDX,QWORD PTR [RSP+8]
            mov ECX,1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+144],XMM0
            call .L_410260

            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RBX+R15*8],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [R14+R15*8],XMM0
            add R15,1
            cmp R15,256
            je .L_432c80
.L_432bdd:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R15D
            mulsd XMM0,QWORD PTR [RIP+.L_433188]
            divsd XMM0,QWORD PTR [RIP+.L_433190]
            movsd QWORD PTR [RSP+128],XMM0
            movsd XMM0,QWORD PTR [RSP+72]
            ucomisd XMM1,XMM0
            jbe .L_432b50

            movapd XMM0,XMM1
            jmp .L_432b60
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c20:

            mov EDX,DWORD PTR [RSP+16]
            mov ECX,R12D
            mov RSI,RBX
            mov RDI,RBP
            call .L_4327c0

            jmp .L_432a45
.L_432c37:

            lea R13,QWORD PTR [RSP+128]
            mov ECX,R12D
            mov EDX,1
            mov RSI,RBX
            mov RDI,R13
            call .L_4327c0

            test EAX,EAX
            je .L_432a45

            lea RSI,QWORD PTR [RSP+64]
            mov RDX,R13
            xor EDI,EDI
            call .L_40b6e0

            jmp .L_432afc
          .byte 0x66
          .byte 0x90
.L_432c70:

            movapd XMM0,XMM1
            jmp .L_432b89
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c80:

            lea RAX,QWORD PTR [R14+2032]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432c90:

            movsd XMM0,QWORD PTR [RAX]
            sub RAX,8
            minsd XMM0,QWORD PTR [RAX+16]
            movsd QWORD PTR [RAX+8],XMM0
            cmp R14,RAX
            jne .L_432c90

            movsd XMM1,QWORD PTR [RSP+2352]
            movsd XMM2,QWORD PTR [RSP+4392]
            ucomisd XMM2,XMM1
            jbe .L_432fd0

            xor EDX,EDX
            cmp DWORD PTR [RSP+16],1
            subsd XMM2,XMM1
            movapd XMM0,XMM1
            je .L_432ff2
.L_432cd8:

            lea RCX,QWORD PTR [RSP+4400]
            jmp .L_432cee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432ce8:

            movsd XMM0,QWORD PTR [R14+RDX*1]
.L_432cee:

            subsd XMM0,XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RCX+RDX*1],XMM0
            add RDX,8
            cmp RDX,2048
            jne .L_432ce8

            cmp DWORD PTR [RSP+16],1
            je .L_433079

            movsd XMM2,QWORD PTR [RIP+.L_433178]
            movsd XMM1,QWORD PTR [RIP+.L_433180]
.L_432d23:

            xor EAX,EAX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432d30:

            movsd XMM0,QWORD PTR [RCX+RAX*1]
            ucomisd XMM0,XMM1
            jb .L_432d5e

            ucomisd XMM2,XMM0
            jbe .L_432d5e

            movsd XMM3,QWORD PTR [RBX+RAX*1]
            movsxd RSI,EDX
            add EDX,1
            movsd QWORD PTR [RSP+RSI*8+8496],XMM0
            movsd QWORD PTR [RSP+RSI*8+6448],XMM3
.L_432d5e:

            add RAX,8
            cmp RAX,2048
            jne .L_432d30

            cmp EDX,2
            jle .L_432fd0

            cmp EDX,3
            pxor XMM4,XMM4
            je .L_432f56

            lea EAX,DWORD PTR [RDX-1]
            pxor XMM4,XMM4
            pxor XMM9,XMM9
            lea RSI,QWORD PTR [RSP+6448]
            pxor XMM8,XMM8
            lea RCX,QWORD PTR [RSP+8496]
            pxor XMM7,XMM7
            lea RDI,QWORD PTR [RAX*8+8]
            pxor XMM10,XMM10
            xor EAX,EAX
            pxor XMM5,XMM5
            pxor XMM3,XMM3
            pxor XMM6,XMM6
.L_432dc0:

            movsd XMM0,QWORD PTR [RSI+RAX*1]
            movsd XMM2,QWORD PTR [RCX+RAX*1]
            add RAX,8
            movapd XMM1,XMM0
            cmp RDI,RAX
            addsd XMM7,XMM2
            mulsd XMM2,XMM0
            mulsd XMM1,XMM0
            addsd XMM6,XMM0
            addsd XMM8,XMM2
            addsd XMM3,XMM1
            mulsd XMM1,XMM0
            addsd XMM5,XMM1
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            addsd XMM10,XMM1
            addsd XMM9,XMM0
            jne .L_432dc0

            pxor XMM0,XMM0
            lea RBX,QWORD PTR [RSP+224]
            movsd QWORD PTR [RSP+56],XMM4
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+48],XMM9
            movapd XMM1,XMM6
            mov RDI,RBX
            cvtsi2sd XMM0,EDX
            lea R14,QWORD PTR [RSP+160]
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            call .L_431e00

            movsd XMM6,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RBX+24]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM6
            movapd XMM2,XMM5
            movapd XMM1,XMM3
            call .L_431e00

            movsd XMM10,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+48]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM10
            movapd XMM1,XMM5
            movapd XMM0,XMM3
            call .L_431e00

            movsd XMM9,QWORD PTR [RSP+48]
            mov RDI,R14
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movapd XMM2,XMM9
            movapd XMM1,XMM8
            movapd XMM0,XMM7
            call .L_431e00

            lea RDI,QWORD PTR [RSP+192]
            mov RDX,R14
            mov RSI,RBX
            call .L_432460

            test EAX,EAX
            movsd XMM4,QWORD PTR [RSP+56]
            je .L_432f56

            movsd XMM1,QWORD PTR [RSP+208]
            movsd XMM5,QWORD PTR [RIP+.L_4331a8]
            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP+200]
            movsd XMM0,QWORD PTR [RSP+192]
            andpd XMM3,XMMWORD PTR [RIP+.L_4331b0]
            ucomisd XMM5,XMM3
            jbe .L_43308e

            xorpd XMM0,XMMWORD PTR [RIP+.L_4331c0]
            movsd XMM1,QWORD PTR [RIP+.L_433140]
            divsd XMM0,XMM2
            ucomisd XMM1,XMM0
            ja .L_432f56

            ucomisd XMM0,XMM4
            jbe .L_4330ff
.L_432f56:

            movsd QWORD PTR [RSP+128],XMM4
.L_432f5f:

            movsd XMM0,QWORD PTR [RSP+72]
            mov RDX,R13
            mov RSI,RBP
            xor EDI,EDI
            movsd QWORD PTR [RSP+136],XMM0
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+144],XMM0
            call .L_40b850

            mov RDI,R12
            call .L_40fdf0

            mov EAX,1
            jmp .L_432a45
.L_432f9c:

            call .L_42e620

            test EAX,EAX
            jne .L_432fdd

            mov RAX,QWORD PTR [RIP+.L_433148]
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RIP+.L_433150]
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_433158]
            mov QWORD PTR [RBP+16],RAX
            mov EAX,1
            jmp .L_432a45
.L_432fd0:

            mov RDI,R12
            call .L_40fdf0

            jmp .L_432a2b
.L_432fdd:

            mov RDX,RBP
            mov ESI,1
            mov RDI,RBX
            call .L_432620

            jmp .L_432a45
.L_432ff2:

            movsd XMM3,QWORD PTR [RIP+.L_433198]
            mov EAX,1
            movq XMM5,QWORD PTR [RIP+.L_4331b0]
            xor ECX,ECX
            mulsd XMM3,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_4331a0]
            addsd XMM3,XMM1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433020:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM3,XMM0
            jae .L_43303c

            subsd XMM0,QWORD PTR [R14+RDX*1]
            andpd XMM0,XMM5
            ucomisd XMM4,XMM0
            cmovbe EAX,ECX
.L_43303c:

            add RDX,8
            cmp RDX,2048
            jne .L_433020

            xor EDX,EDX
            test EAX,EAX
            movapd XMM0,XMM1
            je .L_432cd8

            lea RDX,QWORD PTR [RSP+64]
            mov RSI,RBP
            xor EDI,EDI
            mov DWORD PTR [RSP],EAX
            call .L_40b850

            mov RDI,R12
            call .L_40fdf0

            mov EAX,DWORD PTR [RSP]
            jmp .L_432a45
.L_433079:

            movsd XMM2,QWORD PTR [RIP+.L_433168]
            movsd XMM1,QWORD PTR [RIP+.L_433170]
            jmp .L_432d23
.L_43308e:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_4331a0]
            mulsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            subsd XMM0,XMM3
            ucomisd XMM4,XMM0
            jae .L_432f56

            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM0,XMM2
            addsd XMM1,XMM1
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_433140]
            ucomisd XMM0,XMM1
            ja .L_433116

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            ja .L_432f56
.L_4330ff:

            ucomisd XMM4,XMM0
            jbe .L_433124

            mov QWORD PTR [RSP+128],0
            jmp .L_432f5f
.L_433116:

            movapd XMM4,XMM1
            jmp .L_432f56
.L_43311f:

            call __stack_chk_fail@PLT
.L_433124:

            movsd QWORD PTR [RSP+128],XMM0
            jmp .L_432f5f
.L_433132:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433138:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_433140:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x40
.L_433148:
          .byte 0xbc
          .byte 0x79
          .byte 0xaa
          .byte 0x43
          .byte 0x6e
          .byte 0x86
          .byte 0x6b
          .byte 0x3f
.L_433150:
          .byte 0xf0
          .byte 0xb8
          .byte 0x4d
          .byte 0x5d
          .byte 0x9e
          .byte 0x73
          .byte 0x6c
          .byte 0x3f
.L_433158:
          .byte 0xa6
          .byte 0xf2
          .byte 0x76
          .byte 0x84
          .byte 0xd3
          .byte 0x82
          .byte 0x67
          .byte 0x3f
.L_433160:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0xc0
.L_433168:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_433170:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
.L_433178:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_433180:
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0x9e
          .byte 0x3f
.L_433188:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_433190:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_433198:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xc9
          .byte 0x3f
.L_4331a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_4331a8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4331b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4331c0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4331d0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_63dd30]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_63dd38]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 3008

            test RBP,RBP
            je .L_433226

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433210:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_433210
.L_433226:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_433235:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433240:

            ret 
.L_433242:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_433250:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_433254:
          .string "rb"
.L_433257:
          .string "malloc error!"
.L_433265:
          .string "read error!"
          .zero 7
.L_433278:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_63dd30:
          .quad .L_402100
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_63dd38:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_63dd40:
          .quad .L_4233e0
          .quad .L_423160
          .quad .L_423490
          .quad .L_423170
          .quad .L_423190
          .quad .L_4231b0
          .quad .L_4233f0
          .quad .L_423460
          .quad .L_4231d0
          .quad .L_4231f0
          .quad .L_423560
          .quad .L_423500
          .quad .L_4233f0
          .quad .L_4234e0
          .quad .L_4234c0
          .quad .L_423210
          .quad .L_423260
          .quad .L_423440
          .quad .L_423400
          .quad .L_4232c0
          .quad .L_4232d0
          .quad .L_423320
          .quad .L_423420
          .quad .L_423370
          .quad .L_423410
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 32
.L_63e1a0:
          .zero 8
.L_63e1a8:
          .zero 16
          .quad .L_641b00
          .quad .L_63ea20
          .quad .L_63ea40
          .quad .L_641b20
          .quad .L_641d48
          .quad .L_641d38
          .quad .L_641c88
          .quad .L_641cf0
          .quad .L_641ce8
          .quad .L_641d28
          .quad .L_641cf8
          .quad .L_641d18
          .quad .L_641cd8
          .quad .L_641ae0
          .zero 56
.L_63e260:
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a9b0
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40ab00
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40aa80
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40abb0
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409a00
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409bb0
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_40a1b0
          .zero 16
.L_63e2e0:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40b020
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40af90
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a630
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40aec0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_4096b0
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409850
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_40a3f0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408ad0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b10
          .byte 0x89
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b30
          .byte 0x9
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408af0
          .byte 0x19
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4085f0
          .byte 0x99
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_408670
          .byte 0x1a
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4086f0
          .byte 0x19
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408790
          .byte 0x99
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4088e0
          .byte 0x99
          .byte 0x40
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408950
          .byte 0x99
          .byte 0x44
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408a30
          .byte 0x99
          .byte 0x4
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4089c0
          .byte 0x19
          .byte 0x4
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408800
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408740
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408890
          .byte 0x99
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408900
          .byte 0x99
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4089e0
          .byte 0x99
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408970
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4087b0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408190
          .byte 0x31
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408220
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408330
          .byte 0x21
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408390
          .byte 0x21
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408400
          .byte 0x21
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408460
          .byte 0x21
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4084c0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_4094c0
          .byte 0x1
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_408050
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b50
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b80
          .byte 0x8a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b90
          .byte 0xa
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b60
          .byte 0xa
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408b70
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408820
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408840
          .byte 0x1a
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408860
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408a50
          .byte 0x9a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408a70
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408a90
          .byte 0x9a
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408ab0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408520
          .byte 0x22
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408550
          .byte 0x22
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_408580
          .byte 0x22
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4085b0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4082b0
          .byte 0x32
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4082f0
          .byte 0x2
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .quad .L_4080f0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .quad .L_4095b0
          .zero 16
.L_63e660:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a700
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a7c0
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a860
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40a900
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_409170
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_409310
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .quad .L_409d50
          .zero 16
.L_63e6e0:
          .byte 0x18
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40ae30
          .byte 0x18
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40ace0
          .byte 0x1c
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40ad70
          .byte 0x1c
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x80
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .quad .L_40ac20
          .byte 0x8
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407ff0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408d90
          .byte 0x4
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_408f80
          .byte 0x2
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0xf8
          .byte 0x77
          .byte 0x1f
          .byte 0x0
          .quad .L_409f60
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407cd0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407cf0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407d10
          .byte 0x9
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407d30
          .byte 0x11
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407ca0
          .byte 0x19
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407ba0
          .byte 0x99
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407c00
          .byte 0x1a
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_407c60
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407a90
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407b70
          .byte 0x99
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ac0
          .byte 0x99
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407b30
          .byte 0x99
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407b00
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407930
          .byte 0x21
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407970
          .byte 0x21
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_4079d0
          .byte 0x21
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407a10
          .byte 0x21
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407a50
          .byte 0x1
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_407890
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .quad .L_408ba0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f70
          .byte 0xa
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f90
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407fb0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407fd0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ef0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e00
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f10
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f50
          .byte 0x9a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407f30
          .byte 0x22
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e30
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e60
          .byte 0x22
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407e90
          .byte 0x22
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .quad .L_407ec0
          .byte 0x2
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .quad .L_407d50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .quad .L_408c90
.L_63e990:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
.L_63e998:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_63e9a0:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x0
.L_63e9a8:
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x80
          .byte 0x0
          .byte 0x0
.L_63e9b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
.L_63e9b8:
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63e9c0:
          .byte 0xd0
          .byte 0xb3
          .byte 0x59
          .byte 0xf5
          .byte 0xb9
          .byte 0xda
          .byte 0xee
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x84
          .byte 0xd
          .byte 0x4f
          .byte 0xaf
          .byte 0x94
          .byte 0x65
          .byte 0xea
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63e9e0:
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea20:
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_63ea60:
          .byte 0x30
          .byte 0x42
          .byte 0x32
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f40
          .quad .L_63ead0
.L_63ead0:
          .string "1B2A"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f40
          .quad .L_63eb40
.L_63eb40:
          .string "2B2A"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x42
          .byte 0x41
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f40
          .quad .L_63ebb0
.L_63ebb0:
          .string "0A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63ec20
.L_63ec20:
          .string "1A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63ec90
.L_63ec90:
          .string "2A2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63ed00
.L_63ed00:
          .string "ZYXr"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414ef0
          .quad .L_63ed70
.L_63ed70:
          .string "ZYXg"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414ef0
          .quad .L_63ede0
.L_63ede0:
          .string "ZYXb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414ef0
          .quad .L_63ee50
.L_63ee50:
          .string "CRTr"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417ad0
          .quad .L_63eec0
.L_63eec0:
          .string "CRTg"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417ad0
          .quad .L_63ef30
.L_63ef30:
          .string "CRTb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417ad0
          .quad .L_63efa0
.L_63efa0:
          .string "tlac"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f010
.L_63f010:
          .string "grat"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f080
.L_63f080:
          .string "dahc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x33
          .byte 0x66
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f0f0
.L_63f0f0:
          .string "mrhc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x72
          .byte 0x68
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f160
.L_63f160:
          .string "orlc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f1d0
.L_63f1d0:
          .string "trlc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f240
.L_63f240:
          .string "tolc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x72
          .byte 0x6c
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f2b0
.L_63f2b0:
          .string "trpc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f00
          .quad .L_63f320
.L_63f320:
          .string "mitd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x69
          .byte 0x74
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f390
.L_63f390:
          .string "dnmd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f20
          .quad .L_63f400
.L_63f400:
          .string "ddmd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f20
          .quad .L_63f470
.L_63f470:
          .string "tmag"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63f4e0
.L_63f4e0:
          .string "CRTk"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417ad0
          .quad .L_63f550
.L_63f550:
          .string "imul"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f5c0
.L_63f5c0:
          .string "tpkb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f630
.L_63f630:
          .string "tptw"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x5a
          .byte 0x59
          .byte 0x58
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f6a0
.L_63f6a0:
          .string "2lcn"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x6c
          .byte 0x63
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f710
.L_63f710:
          .string "0erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63f780
.L_63f780:
          .string "1erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63f7f0
.L_63f7f0:
          .string "2erp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x20
          .byte 0x41
          .byte 0x42
          .byte 0x6d
          .byte 0x31
          .byte 0x74
          .byte 0x66
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f70
          .quad .L_63f860
.L_63f860:
          .string "csed"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f20
          .quad .L_63f8d0
.L_63f8d0:
          .string "qesp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x65
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f940
.L_63f940:
          .string "hcet"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63f9b0
.L_63f9b0:
          .string "siic"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fa20
.L_63fa20:
          .string "0gir"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fa90
.L_63fa90:
          .string "2gir"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x67
          .byte 0x69
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fb00
.L_63fb00:
          .string "saem"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x61
          .byte 0x65
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fb70
.L_63fb70:
          .string "0dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fbe0
.L_63fbe0:
          .string "1dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fc50
.L_63fc50:
          .string "2dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fcc0
.L_63fcc0:
          .string "3dsp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fd30
.L_63fd30:
          .string "s2sp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fda0
.L_63fda0:
          .string "i2sp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fe10
.L_63fe10:
          .string "deuv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x74
          .byte 0x78
          .byte 0x65
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_414f20
          .quad .L_63fe80
.L_63fe80:
          .string " dfb"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x64
          .byte 0x66
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63fef0
.L_63fef0:
          .string "idrc"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x64
          .byte 0x72
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63ff60
.L_63ff60:
          .string "0B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_63ffd0
.L_63ffd0:
          .string "1B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640040
.L_640040:
          .string "2B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6400b0
.L_6400b0:
          .string "3B2D"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640120
.L_640120:
          .string "0D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640190
.L_640190:
          .string "1D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640200
.L_640200:
          .string "2D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640270
.L_640270:
          .string "3D2B"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6402e0
.L_6402e0:
          .string "drcs"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640350
.L_640350:
          .string "weiv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x65
          .byte 0x69
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6403c0
.L_6403c0:
          .string "nrcs"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x72
          .byte 0x63
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640430
.L_640430:
          .string "tgcv"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x67
          .byte 0x63
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6404a0
.L_6404a0:
          .string "atem"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x63
          .byte 0x69
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640510
.L_640510:
          .string "disp"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x69
          .byte 0x73
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640580
.L_640580:
          .string "mcsd"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x75
          .byte 0x6c
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_6405f0
.L_6405f0:
          .string "stra"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x33
          .byte 0x66
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_640660:
          .byte 0x6d
          .byte 0x72
          .byte 0x68
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_415fb0
          .quad .L_41c320
          .quad .L_4162c0
          .quad .L_4151d0
          .zero 16
          .quad .L_6406a0
.L_6406a0:
          .string "orlc"
          .zero 3
          .quad .L_415dd0
          .quad .L_415340
          .quad .L_4162b0
          .quad .L_4151e0
          .zero 16
          .quad .L_6406e0
.L_6406e0:
          .string "23fs"
          .zero 3
          .quad .L_415980
          .quad .L_4153a0
          .quad .L_416290
          .quad .L_4151f0
          .zero 16
          .quad .L_640720
.L_640720:
          .string "23fu"
          .zero 3
          .quad .L_415780
          .quad .L_417610
          .quad .L_4162a0
          .quad .L_415200
          .zero 16
          .quad .L_640760
.L_640760:
          .string "txet"
          .zero 3
          .quad .L_417180
          .quad .L_416d00
          .quad .L_416c00
          .quad .L_415ea0
          .zero 16
          .quad .L_6407a0
.L_6407a0:
          .string "csed"
          .zero 3
          .quad .L_416f60
          .quad .L_418940
          .quad .L_41d080
          .quad .L_41d160
          .zero 16
          .quad .L_6407e0
.L_6407e0:
          .string "vruc"
          .zero 3
          .quad .L_4174c0
          .quad .L_41b9a0
          .quad .L_4152d0
          .quad .L_416a80
          .zero 16
          .quad .L_640820
.L_640820:
          .string "arap"
          .zero 3
          .quad .L_418270
          .quad .L_415870
          .quad .L_41d090
          .quad .L_41d170
          .zero 16
          .quad .L_640860
.L_640860:
          .string "mitd"
          .zero 3
          .quad .L_417420
          .quad .L_4173c0
          .quad .L_416260
          .quad .L_415230
          .zero 16
          .quad .L_6408a0
.L_6408a0:
          .string "1tfm"
          .zero 3
          .quad .L_41ab20
          .quad .L_417b10
          .quad .L_416400
          .quad .L_4163f0
          .zero 16
          .quad .L_6408e0
.L_6408e0:
          .string "2tfm"
          .zero 3
          .quad .L_41a670
          .quad .L_419860
          .quad .L_41d0b0
          .quad .L_41d110
          .zero 16
          .quad .L_640920
.L_640920:
          .string "trlc"
          .zero 3
          .quad .L_417280
          .quad .L_418580
          .quad .L_417270
          .quad .L_417260
          .zero 16
          .quad .L_640960
.L_640960:
          .string "2lcn"
          .zero 3
          .quad .L_418680
          .quad .L_41b7e0
          .quad .L_41d0d0
          .quad .L_41d150
          .zero 16
          .quad .L_6409a0
.L_6409a0:
          .string "culm"
          .zero 3
          .quad .L_4192f0
          .quad .L_418ca0
          .quad .L_41d0a0
          .quad .L_41d100
          .zero 16
          .quad .L_6409e0
.L_6409e0:
          .string "qesp"
          .zero 3
          .quad .L_4196d0
          .quad .L_41c200
          .quad .L_416150
          .quad .L_416140
          .zero 16
          .quad .L_640a20
.L_640a20:
          .string " gis"
          .zero 3
          .quad .L_416cb0
          .quad .L_415330
          .quad .L_416250
          .quad .L_415210
          .zero 16
          .quad .L_640a60
.L_640a60:
          .string "saem"
          .zero 3
          .quad .L_418390
          .quad .L_419e00
          .quad .L_416270
          .quad .L_415240
          .zero 16
          .quad .L_640aa0
.L_640aa0:
          .string "atad"
          .zero 3
          .quad .L_416c10
          .quad .L_4152e0
          .quad .L_416240
          .quad .L_415220
          .zero 16
          .quad .L_640ae0
.L_640ae0:
          .string " BAm"
          .zero 3
          .quad .L_41be90
          .quad .L_41c4a0
          .quad .L_41d0c0
          .quad .L_41d140
          .zero 16
          .quad .L_640b20
.L_640b20:
          .string " ABm"
          .zero 3
          .quad .L_41bc00
          .quad .L_41c900
          .quad .L_41cd40
          .quad .L_41d120
          .zero 16
          .quad .L_640b60
.L_640b60:
          .string " dfb"
          .zero 3
          .quad .L_416da0
          .quad .L_41b520
          .quad .L_416bb0
          .quad .L_416a30
          .zero 16
          .quad .L_640ba0
.L_640ba0:
          .string "idrc"
          .zero 3
          .quad .L_41b3f0
          .quad .L_41aa80
          .quad .L_41cd50
          .quad .L_41d0f0
          .zero 16
          .quad .L_640be0
.L_640be0:
          .string "tepm"
          .zero 3
          .quad .L_416a90
          .quad .L_4176f0
          .quad .L_41d070
          .quad .L_41d180
          .zero 16
          .quad .L_640c20
.L_640c20:
          .string "nrcs"
          .zero 3
          .quad .L_415eb0
          .quad .L_418150
          .quad .L_416230
          .quad .L_415250
          .zero 16
          .quad .L_640c60
.L_640c60:
          .string "weiv"
          .zero 3
          .quad .L_416350
          .quad .L_419da0
          .quad .L_416280
          .quad .L_415260
          .zero 16
          .quad .L_640ca0
.L_640ca0:
          .string " ZYX"
          .zero 3
          .quad .L_4162e0
          .quad .L_4162d0
          .quad .L_416220
          .quad .L_4151c0
          .zero 16
          .quad .L_640ce0
.L_640ce0:
          .byte 0xb8
          .byte 0x5
          .byte 0xa5
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4162e0
          .quad .L_4162d0
          .quad .L_416220
          .quad .L_4151c0
          .zero 16
          .quad .L_640d20
.L_640d20:
          .byte 0x0
          .byte 0xee
          .byte 0x78
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174c0
          .quad .L_41b9a0
          .quad .L_4152d0
          .quad .L_416a80
          .zero 16
          .quad .L_640d60
.L_640d60:
          .string "disp"
          .zero 3
          .quad .L_416160
          .quad .L_41d010
          .quad .L_41d0e0
          .quad .L_41d130
          .zero 16
          .quad .L_640da0
.L_640da0:
          .string "tcid"
          .zero 3
          .quad .L_41af20
          .quad .L_418eb0
          .quad .L_415dc0
          .quad .L_415db0
          .zero 16
          .quad .L_640de0
.L_640de0:
          .string "tgcv"
          .zero 3
          .quad .L_415a30
          .quad .L_415400
          .quad .L_415270
          .quad .L_415100
          .zero 24
.L_640e20:
          .byte 0x53
          .byte 0x43
          .byte 0x41
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_640e60
.L_640e60:
          .string "SCAe"
          .zero 51
          .quad .L_640ea0
.L_640ea0:
          .string "tsvc"
          .zero 3
          .quad .L_4168c0
          .quad .L_41cf90
          .quad .L_4168b0
          .quad .L_4166a0
          .zero 16
          .quad .L_640ee0
.L_640ee0:
          .string "ftam"
          .zero 3
          .quad .L_4166b0
          .quad .L_416410
          .quad .L_4168b0
          .quad .L_4166a0
          .zero 16
          .quad .L_640f20
.L_640f20:
          .string "tulc"
          .zero 3
          .quad .L_416500
          .quad .L_418470
          .quad .L_4168b0
          .quad .L_4166a0
          .zero 24
.L_640f60:
          .quad .L_41e8f0
          .quad .L_640f70
.L_640f70:
          .quad .L_41ff80
          .quad .L_640f80
.L_640f80:
          .quad .L_41ff20
          .quad .L_640f90
.L_640f90:
          .quad .L_41ed00
          .zero 8
.L_640fa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_424bd0
          .quad .L_6410b8
.L_6410b8:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_424bd0
          .quad .L_6411d0
.L_6411d0:
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_424bd0
          .quad .L_6412e8
.L_6412e8:
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x62
          .byte 0x73
          .byte 0x6f
          .byte 0x6c
          .byte 0x75
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_424bd0
          .quad .L_641400
.L_641400:
          .string "\n"
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4253b0
          .quad .L_641518
.L_641518:
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4253b0
          .quad .L_641630
.L_641630:
          .string ""
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4253b0
          .quad .L_641748
.L_641748:
          .string "\r"
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x65
          .byte 0x70
          .byte 0x74
          .byte 0x75
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425000
          .quad .L_641860
.L_641860:
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x65
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6c
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425000
          .quad .L_641978
.L_641978:
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x6c
          .byte 0x61
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425000
          .zero 24
.L_641aa0:
          .quad .L_425cc0
          .quad .L_425da0
          .quad .L_425ca0
          .quad .L_425c90
.L_641ac0:
          .quad .L_425b10
          .zero 24
.L_641ae0:
          .quad .L_425cc0
          .quad .L_425da0
          .quad .L_425ca0
          .quad .L_425c90
.L_641b00:
          .quad .L_425b10
          .zero 24
.L_641b20:
          .quad .L_425b60
          .quad .L_425be0
.L_641b30:
          .quad .L_425b40
          .quad .L_425b20
.L_641b40:
          .quad .L_425c20
          .quad .L_425b80
          .zero 16
.L_641b60:
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x67
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_641c18:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_641c20:
          .zero 32
.L_641c40:
          .zero 32
.L_641c60:
          .zero 40
.L_641c88:
          .zero 8
.L_641c90:
          .zero 8
.L_641c98:
          .zero 8
.L_641ca0:
          .zero 8
.L_641ca8:
          .zero 8
.L_641cb0:
          .zero 16
.L_641cc0:
          .zero 24
.L_641cd8:
          .zero 8
.L_641ce0:
          .zero 8
.L_641ce8:
          .zero 8
.L_641cf0:
          .zero 8
.L_641cf8:
          .zero 8
.L_641d00:
          .zero 8
.L_641d08:
          .zero 8
.L_641d10:
          .zero 8
.L_641d18:
          .zero 8
.L_641d20:
          .zero 8
.L_641d28:
          .zero 8
.L_641d30:
          .zero 8
.L_641d38:
          .zero 8
.L_641d40:
          .zero 8
.L_641d48:
          .zero 8
.L_641d50:
          .zero 8
#===================================
# end section .bss
#===================================
