#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4018a4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_44f3ad]
            call fopen@PLT

            test RAX,RAX
            je .L_401928

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_40194f

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401932

            mov RSI,RBP
            mov RDI,R12
            call .L_401ad0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401922:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401928:

            mov EDI,1
            call exit@PLT
.L_401932:

            lea RSI,QWORD PTR [RIP+.L_44f3bf]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_40194f:

            lea RSI,QWORD PTR [RIP+.L_44f3b0]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_40196c:

            nop
            nop
            nop
            nop
.L_4019a0:

            ret 
.L_4019a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4019b0:

            push RBP
            mov EAX,OFFSET .L_65fcd0
            cmp RAX,OFFSET .L_65fcd0
            mov RBP,RSP
            je .L_4019d8

            mov EAX,0
            test RAX,RAX
            je .L_4019d8

            pop RBP
            mov EDI,OFFSET .L_65fcd0
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019d8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4019e0:

            mov ESI,OFFSET .L_65fcd0
            push RBP
            sub RSI,OFFSET .L_65fcd0
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401a18

            mov EAX,0
            test RAX,RAX
            je .L_401a18

            pop RBP
            mov EDI,OFFSET .L_65fcd0
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401a18:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a50:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_4019e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401a60:

            push RBX
.L_401a61:

            mov RAX,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RAX]
            call strdup@PLT

            mov ESI,47
            mov RDI,RAX
            mov RBX,RAX
            call strrchr@PLT

            test RAX,RAX
            je .L_401aa8

            lea RDI,QWORD PTR [RIP+.L_44f384]
            mov RSI,RBX
            mov EDX,1
            mov BYTE PTR [RAX],0
            call setenv@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
.L_401aa3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401aa8:

            lea RSI,QWORD PTR [RIP+.L_44f38d]
            lea RDI,QWORD PTR [RIP+.L_44f384]
            mov EDX,1
            call setenv@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_401acc:

            nop
            nop
            nop
            nop
.L_401ad0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            lea RDI,QWORD PTR [RSI+1]
            mov R12,RSI
            sub RSP,32
.L_401ae6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call malloc@PLT

            mov RDX,R12
            mov RBX,RAX
            mov RSI,RBP
            mov RDI,RAX
            call memcpy@PLT

            mov ESI,10
            mov RDI,RBX
            mov BYTE PTR [RBX+R12*1],0
            call strchr@PLT

            test RAX,RAX
            je .L_401c30

            lea RBP,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],0
            mov ESI,10
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_401c30

            mov BYTE PTR [RAX],0
            mov RDI,RBX
            call .L_403670

            test RAX,RAX
            mov R14,RAX
            je .L_401c30

            mov RDI,RBP
            call .L_403670

            test RAX,RAX
            mov RBP,RAX
            je .L_401cf0

            mov RCX,QWORD PTR [RIP+.L_44f3d0]
            lea RAX,QWORD PTR [R13+1]
            lea RDI,QWORD PTR [RIP+.L_44f38f]
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RCX
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_401c60

            mov RDX,RAX
            sub RDX,RBX
            add RDX,26
            cmp RDX,R12
            ja .L_401c60

            mov RAX,QWORD PTR [R13+11]
            mov R12,RSP
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [R13+19]
            lea R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
.L_401bde:

            sub RSP,8
.L_401be2:

            mov R9,R13
            mov R8,R12
            push 0
.L_401bea:

            mov EDX,1
            xor ECX,ECX
            mov RSI,RBP
            mov RDI,R14
            call .L_409430

            pop RAX
            pop RDX
.L_401bfe:

            mov RDI,RBX
            call free@PLT

            mov RDI,R14
            call .L_4024b0

            mov RDI,RBP
.L_401c11:

            call .L_4024b0

            call .L_404a50

            mov RDI,RAX
            call .L_407360

            call .L_40cfc0

            jmp .L_401c38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401c30:

            mov RDI,RBX
            call free@PLT
.L_401c38:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_401d00

            add RSP,32
.L_401c52:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401c60:

            lea RDI,QWORD PTR [RIP+.L_44f39a]
            mov ECX,10
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_401cc0

            mov RDX,RAX
            sub RDX,RBX
            add RDX,34
            cmp RDX,R12
            ja .L_401cc0

            mov RAX,QWORD PTR [R13+11]
            sub RSP,8
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [R13+19]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R13+27]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+24]
            push RAX
            lea R9,QWORD PTR [RSP+24]
            lea R8,QWORD PTR [RSP+16]
            jmp .L_401bea
          .byte 0x66
          .byte 0x90
.L_401cc0:

            lea R13,QWORD PTR [RSP+8]
            mov R12,RSP
            lea RSI,QWORD PTR [RIP+.L_44f3a5]
            mov RDI,RAX
            mov RDX,R12
            xor EAX,EAX
            mov RCX,R13
            call sscanf@PLT

            cmp EAX,2
            je .L_401bde

            jmp .L_401bfe
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401cf0:

            mov RDI,RBX
            call free@PLT

            mov RDI,R14
            jmp .L_401c11
.L_401d00:

            call __stack_chk_fail@PLT
.L_401d05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401d10:

            push R14
            push R13
            lea R14,QWORD PTR [RDI+16]
            push R12
            push RBP
            test RSI,RSI
            push RBX
            mov EAX,DWORD PTR [RDI+65560]
            cmove RSI,R14
            test EAX,EAX
            jne .L_401d49

            movsxd RBX,DWORD PTR [RDI+65556]
            mov RAX,RSI
            mov R13,RDI
            sub RAX,R14
            sub RBX,RAX
            cmp RBX,32767
            jbe .L_401d58
.L_401d49:

            pop RBX
            mov RAX,RSI
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401d58:

            mov RDX,RBX
            mov RDI,R14
            mov R12D,65536
            call memmove@PLT

            mov R8,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [R13]
            sub R12,RBX
            lea RSI,QWORD PTR [R14+RBX*1]
            mov DWORD PTR [R13+65556],EBX
            mov RCX,R12
            mov EDX,1
            call .L_407230

            cmp R12,RAX
            mov RBP,RAX
            jbe .L_401db0

            movsxd RDX,DWORD PTR [R13+65556]
            lea RAX,QWORD PTR [R13+RAX*1]
            mov DWORD PTR [R13+65560],1
            mov BYTE PTR [RDX+RAX*1+16],0
.L_401db0:

            movzx EAX,BYTE PTR [R13+16]
            xor EDX,EDX
            mov R12,R14
            mov RBX,R14
            test AL,AL
            je .L_401ea3
.L_401dc5:

            cmp AL,92
            jne .L_401e83

            movzx EDX,BYTE PTR [RBX+1]
            cmp DL,10
            je .L_401ddf

            cmp DL,13
            jne .L_401e83
.L_401ddf:

            call __ctype_b_loc@PLT

            add RBX,2
            mov RCX,QWORD PTR [RAX]
            jmp .L_401df4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401df0:

            add RBX,1
.L_401df4:

            movsx RDX,BYTE PTR [RBX]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_401df0

            nop
            nop
            nop
            nop
            nop
            nop
.L_401e08:

            cmp AL,35
            je .L_401e14

            jmp .L_401dc5
          .byte 0x66
          .byte 0x90
.L_401e10:

            cmp AL,10
            je .L_401e1f
.L_401e14:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_401e10
.L_401e1f:

            movsx RDX,AL
            test BYTE PTR [RCX+RDX*2+1],32
            je .L_401e42

            nop
            nop
            nop
            nop
            nop
            nop
.L_401e30:

            add RBX,1
            movsx RDX,BYTE PTR [RBX]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_401e30
.L_401e42:

            test AL,AL
            je .L_401e50

            movzx EAX,BYTE PTR [RBX]
            jmp .L_401e08
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401e50:

            mov RDI,QWORD PTR [R13]
            mov ESI,4294967294
            call .L_404af0

            mov RDI,QWORD PTR [R13]
            lea RDX,QWORD PTR [RIP+.L_4036df]
            mov ESI,1
            xor EAX,EAX
            call .L_404c10

            xor ESI,ESI
            pop RBX
.L_401e78:

            mov RAX,RSI
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_401e83:

            add R12,1
            mov BYTE PTR [R12-1],AL
            movzx EAX,BYTE PTR [RBX+1]
            lea RDX,QWORD PTR [RBX+1]
            test AL,AL
            je .L_401ea0

            mov RBX,RDX
            jmp .L_401dc5
.L_401ea0:

            sub EDX,R12D
.L_401ea3:

            mov BYTE PTR [R12],0
            sub EBP,EDX
            mov RSI,R14
            add DWORD PTR [R13+65556],EBP
            jmp .L_401d49
.L_401eb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401ec0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,65568
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RDI
            mov EDI,1
            mov R13,R9
            sub RSP,65624
.L_401ee7:

            mov QWORD PTR [RSP+32],RCX
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+48],R9
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+65608],RAX
            xor EAX,EAX
            call calloc@PLT

            xor ESI,ESI
            mov QWORD PTR [RAX+8],RBP
            mov QWORD PTR [RAX],R12
            mov RDI,RAX
            mov RBX,RAX
            call .L_401d10

            test R13,R13
            mov R14,RAX
            je .L_401f32

            mov DWORD PTR [R13],0
.L_401f32:

            mov RDI,QWORD PTR [RSP+32]
            call strlen@PLT

            test R14,R14
            mov DWORD PTR [RSP+44],EAX
            mov BYTE PTR [RSP+64],116
            je .L_40228a

            lea RAX,QWORD PTR [RSP+64]
            movzx EDX,BYTE PTR [R14]
            xor EBP,EBP
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RSP+65]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
.L_401f70:

            test DL,DL
            je .L_402013

            mov RSI,R14
            mov RDI,RBX
            call .L_401d10

            mov R13,RAX
            call __ctype_b_loc@PLT

            mov R12,RAX
            mov RDX,QWORD PTR [RAX]
            jmp .L_401f9c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401f98:

            add R13,1
.L_401f9c:

            movsx RAX,BYTE PTR [R13]
            test BYTE PTR [RDX+RAX*2+1],32
            jne .L_401f98

            mov RSI,R13
            mov RDI,RBX
            call .L_401d10

            test RAX,RAX
            mov R14,RAX
            je .L_40228a

            movsx RDX,BYTE PTR [RAX]
            cmp DL,35
            je .L_402064

            cmp DL,60
            je .L_4020b0

            test EBP,EBP
            jne .L_402110

            test DL,DL
            je .L_402013

            mov RCX,QWORD PTR [R12]
            movsx RAX,DL
            test BYTE PTR [RCX+RAX*2+1],32
            je .L_402007

            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401ff8:

            movsx RAX,DL
            test BYTE PTR [RCX+RAX*2+1],32
            jne .L_401f70
.L_402007:

            add R14,1
            movzx EDX,BYTE PTR [R14]
            test DL,DL
            jne .L_401ff8
.L_402013:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],25
            je .L_402291
.L_402021:

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RSP+24]
.L_40202e:

            mov RDI,QWORD PTR [RSP+65608]
            xor RDI,QWORD PTR FS:[40]
            jne .L_402327

            add RSP,65624
.L_40204c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402060:

            cmp AL,10
            je .L_402070
.L_402064:

            add R14,1
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            jne .L_402060
.L_402070:

            mov RSI,R14
            mov RDI,RBX
            call .L_401d10

            test RAX,RAX
            mov R14,RAX
            je .L_40228a

            movzx EDX,BYTE PTR [RAX]
            cmp DL,10
            jne .L_402097

            movzx EDX,BYTE PTR [RAX+1]
            add R14,1
.L_402097:

            cmp DL,13
            jne .L_401f70

            movzx EDX,BYTE PTR [R14+1]
            add R14,1
            jmp .L_401f70
          .byte 0x66
          .byte 0x90
.L_4020b0:

            test EBP,EBP
            jne .L_402013

            movsxd R12,DWORD PTR [RSP+44]
            lea R13,QWORD PTR [RAX+1]
            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R13
            mov RDX,R12
            call strncmp@PLT

            test EAX,EAX
            jne .L_402250

            cmp BYTE PTR [R14+R12*1+1],62
            jne .L_402250

            cmp QWORD PTR [RSP+48],0
            lea R14,QWORD PTR [R13+R12*1+1]
            je .L_4020fd

            mov RAX,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX],1
.L_4020fd:

            movzx EDX,BYTE PTR [R14]
            mov EBP,1
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402110:

            cmp DL,43
            jne .L_40211e

            movsx RDX,BYTE PTR [RAX+1]
            add R14,1
.L_40211e:

            test DL,DL
            je .L_402310

            mov RSI,QWORD PTR [R12]
            mov R13,R14
            mov ECX,1
            test BYTE PTR [RSI+RDX*2+1],32
            je .L_402147

            jmp .L_40231d
          .byte 0x66
          .byte 0x90
.L_402140:

            test BYTE PTR [RSI+RAX*2+1],32
            jne .L_40215d
.L_402147:

            add R13,1
            movsx RAX,BYTE PTR [R13]
            movsxd RDX,ECX
            add ECX,1
            mov R8D,ECX
            test AL,AL
            jne .L_402140
.L_40215d:

            mov RDI,QWORD PTR [RSP+8]
            mov ECX,65536
            mov RSI,R14
            mov DWORD PTR [RSP+40],R8D
            call __strncpy_chk@PLT

            movsxd R8,DWORD PTR [RSP+40]
            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_44f380-310415]
            mov RDI,QWORD PTR [RSP+16]
            mov BYTE PTR [RSP+R8*1+64],0
            call .L_4043f0

            test RAX,RAX
            je .L_4021b2

            lea RDI,QWORD PTR [RIP+.L_4036f7]
            mov RSI,RAX
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4021d8
.L_4021b2:

            mov RDX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            call .L_4043f0

            test EAX,EAX
            je .L_4021d8

            movzx EDX,BYTE PTR [R13]
.L_4021cd:

            mov R14,R13
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4021d8:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_403700]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_402228

            mov R14,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_403707]
            mov RDI,R14
            call .L_4043f0

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_40370e]
            mov RDI,R14
            call .L_4043f0

            test EAX,EAX
            je .L_40229c

            nop
            nop
            nop
.L_402228:

            mov RDI,QWORD PTR [RSP+8]
            mov R14,R13
            call .L_4043a0

            mov RDI,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RDI],RAX
            movzx EDX,BYTE PTR [R13]
            jmp .L_401f70
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402250:

            movzx EDX,BYTE PTR [R14+1]
            cmp DL,10
            je .L_4021cd

            test DL,DL
            mov R14,R13
            jne .L_402279

            jmp .L_4021cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402270:

            cmp DL,10
            je .L_401f70
.L_402279:

            add R14,1
            movzx EDX,BYTE PTR [R14]
            test DL,DL
            jne .L_402270

            jmp .L_401f70
.L_40228a:

            xor EAX,EAX
            jmp .L_40202e
.L_402291:

            mov DWORD PTR [RAX],0
            jmp .L_402021
.L_40229c:

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_403715]
            call .L_4043f0

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_403718]
            call .L_4043f0

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_40371b]
            call .L_4043f0

            test EAX,EAX
            jne .L_402228

            mov RSI,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_40371f]
            call .L_4043f0

            jmp .L_402228
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402310:

            mov R8D,EBP
            mov R13,R14
            xor EDX,EDX
            jmp .L_40215d
.L_40231d:

            mov R8D,EBP
            xor EDX,EDX
            jmp .L_40215d
.L_402327:

            call __stack_chk_fail@PLT
.L_40232c:

            nop
            nop
            nop
            nop
.L_402330:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov EDX,1075
            mov RBX,RCX
            mov R13,R8
            sub RSP,1112
.L_402352:

            lea RBP,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov RSI,RCX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1096],RAX
            xor EAX,EAX
            mov RDI,RBP
            call strncpy@PLT

            mov RDI,RBX
            mov BYTE PTR [RSP+1091],0
            call .L_40d570

            test RAX,RAX
            mov R15,RAX
            je .L_4023e0

            mov QWORD PTR [R12],RAX
            jmp .L_4023a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4023a0:

            mov R15,RAX
.L_4023a3:

            mov RAX,QWORD PTR [R15]
            test RAX,RAX
            jne .L_4023a0

            mov DWORD PTR [R13],1
.L_4023b3:

            mov RCX,QWORD PTR [RSP+1096]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_402492

            add RSP,1112
.L_4023d4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4023e0:

            mov ESI,58
            mov RDI,RBP
            call strrchr@PLT

            test RAX,RAX
            je .L_402480

            lea RCX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [RIP+.L_403722]
            mov RSI,RBP
            mov BYTE PTR [RAX],0
            mov RDI,R14
            mov QWORD PTR [RSP+8],RCX
            call .L_4042f0

            test RAX,RAX
            mov RBP,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_4023b3

            mov RSI,QWORD PTR [RSP]
            mov R9,R13
            mov R8,R12
            mov RDX,RAX
            mov RDI,R14
            call .L_401ec0

            mov RSI,RBP
            mov RDI,R14
            mov R15,RAX
            call .L_407280

            call __errno_location@PLT

            cmp DWORD PTR [RAX],25
            je .L_402478
.L_40244e:

            test R15,R15
            je .L_4023b3

            cmp R12,R15
            je .L_4023b3

            mov RSI,QWORD PTR [R12]
            mov RDI,RBX
            call .L_40d600

            jmp .L_4023b3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402478:

            mov DWORD PTR [RAX],0
            jmp .L_40244e
.L_402480:

            mov ESI,4294967293
            mov RDI,R14
            call .L_404af0

            jmp .L_4023b3
.L_402492:

            call __stack_chk_fail@PLT
.L_402497:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024a0:

            jmp .L_402330
.L_4024a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024b0:

            test RDI,RDI
            je .L_402530

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4024be:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_4024e0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4024d0:

            mov RBP,QWORD PTR [RDI]
            call .L_403c60

            test RBP,RBP
            mov RDI,RBP
            jne .L_4024d0
.L_4024e0:

            mov RDI,QWORD PTR [RBX+464]
            test RDI,RDI
            je .L_4024f1

            call .L_403c60
.L_4024f1:

            mov RDI,QWORD PTR [RBX+480]
            test RDI,RDI
            je .L_402502

            call .L_403c60
.L_402502:

            mov RDI,QWORD PTR [RBX+520]
            test RDI,RDI
            je .L_402513

            call .L_403c60
.L_402513:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_402521

            call .L_403c60
.L_402521:

            mov RAX,QWORD PTR [RBX+112]
            add RSP,8
.L_402529:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
.L_402530:

            ret 
.L_402532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402540:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_402551:

            mov DWORD PTR [RDI],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RSP+32],0
            mov DWORD PTR [RSP+20],0
            jle .L_4026f0

            mov RDI,QWORD PTR [RDX]
            mov EBP,ESI
            mov R12,RDX
            call .L_4043a0

            cmp EBP,1
            mov R13,RAX
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_4028e1

            lea EAX,DWORD PTR [RBP-2]
            lea R14,QWORD PTR [R12+8]
            lea RBP,QWORD PTR [RIP+.L_403725]
            lea R15,QWORD PTR [RIP+.L_40372b]
            lea R12,QWORD PTR [R12+RAX*8+16]
            lea RAX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4025f7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4025d8:

            mov RAX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
.L_4025e5:

            add R14,8
            cmp R14,R12
            je .L_4026a8

            mov R13,QWORD PTR [RSP+40]
.L_4025f7:

            mov RDI,QWORD PTR [R14]
            call .L_4043a0

            mov RSI,QWORD PTR [RSP+40]
            mov QWORD PTR [R13],RAX
            mov RDX,RBP
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_4025d8

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,R15
            mov RDI,RBX
            mov DWORD PTR [RSP+20],0
            call .L_4043f0

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBX
            mov RDX,QWORD PTR [RAX]
            call .L_402330

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_402840

            mov ESI,DWORD PTR [RSP+20]
            test ESI,ESI
            jne .L_4025e5
.L_402661:

            mov RDI,RBX
            mov ESI,4294967294
            call .L_404af0

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            jne .L_4026d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402680:

            xor EAX,EAX
.L_402682:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4030d2

            add RSP,72
.L_40269a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4026a8:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_403725]
            mov RDI,RBX
            call .L_4043f0
.L_4026bc:

            mov EBP,DWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP+32]
            test EBP,EBP
            je .L_402708
.L_4026c7:

            test RDI,RDI
            je .L_402680

            nop
            nop
            nop
            nop
.L_4026d0:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+40],RAX
            call .L_403c60

            mov RDI,QWORD PTR [RSP+40]
            test RDI,RDI
            mov QWORD PTR [RSP+32],RDI
            jne .L_4026d0

            jmp .L_402680
            nop
            nop
.L_4026f0:

            mov ESI,4294967295
            call .L_404af0

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402708:

            lea RDX,QWORD PTR [RIP+.L_44f380-310415]
            mov RSI,RDI
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            mov R13,RAX
            je .L_402950

            mov RSI,QWORD PTR [RIP+.L_65dbe0]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_40284a

            lea R12,QWORD PTR [RIP+.L_65dbf8]
            jmp .L_402761
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402748:

            mov RSI,QWORD PTR [R12]
            add EBP,1
            add R12,24
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_40284a
.L_402761:

            mov RDI,R13
            call strcmp@PLT

            test EAX,EAX
            jne .L_402748

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037db]
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            jne .L_40281f

            lea RDX,QWORD PTR [RIP+.L_403722]
            lea RSI,QWORD PTR [RIP+.L_403731]
            mov RDI,RBX
            mov R14,QWORD PTR [RSP+40]
            call .L_4042f0

            test RAX,RAX
            mov R12,RAX
            je .L_402803

            lea R15,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RIP+.L_40373e]
            mov R8,R14
            xor R9D,R9D
            mov RDX,RAX
            mov RDI,RBX
            mov RSI,R15
            call .L_401ec0

            xor ECX,ECX
            mov R14,RAX
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            call .L_407250

            mov R8,R14
            mov RSI,R15
            mov RDI,RBX
            xor R9D,R9D
            mov RCX,R13
            mov RDX,R12
            call .L_401ec0

            mov RSI,R12
            mov RDI,RBX
            mov R14,RAX
            call .L_407280
.L_402803:

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            test EDX,EDX
            je .L_402814

            mov DWORD PTR [RAX],0
.L_402814:

            mov DWORD PTR [RBX],0
            mov QWORD PTR [RSP+40],R14
.L_40281f:

            movsxd RBP,EBP
            lea RAX,QWORD PTR [RIP+.L_65dbe0]
            xor EDI,EDI
            lea RDX,QWORD PTR [RBP+RBP*2]
            mov R15,QWORD PTR [RAX+RDX*8+8]
            call R15

            test RAX,RAX
            mov R14,RAX
            jne .L_402861
.L_402840:

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_40284a:

            mov RDI,RBX
            mov ESI,4294967291
            call .L_404af0

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_402861:

            mov RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX],RBX
            mov RDX,RAX
            mov QWORD PTR [RAX+312],0
            mov DWORD PTR [RAX+512],0
            mov RDI,RBX
            mov QWORD PTR [RAX+504],0
            mov DWORD PTR [RAX+516],7695973
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+464],0
            mov DWORD PTR [RAX+472],0
            mov QWORD PTR [RAX+480],0
            mov DWORD PTR [RAX+488],0
            call .L_408480

            test EAX,EAX
            je .L_402967
.L_4028d4:

            mov RDI,R14
            call .L_4024b0

            jmp .L_402680
.L_4028e1:

            lea RDX,QWORD PTR [RIP+.L_403725]
            mov RSI,RAX
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_4026bc

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40372b]
            mov RDI,RBX
            mov DWORD PTR [RSP+20],0
            call .L_4043f0

            mov RDX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RSP+20]
            mov RCX,RAX
            mov RDI,RBX
            call .L_402330

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_402840

            mov ECX,DWORD PTR [RSP+20]
            test ECX,ECX
            jne .L_4026bc

            jmp .L_402661
.L_402950:

            mov RDI,RBX
            mov ESI,4294967292
            call .L_404af0

            mov RDI,QWORD PTR [RSP+32]
            jmp .L_4026c7
.L_402967:

            mov RSI,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [R14+176]
            lea RDX,QWORD PTR [R14+128]
            mov RDI,RBX
            call .L_44a6f0

            test EAX,EAX
            mov EBP,EAX
            je .L_4029a3

            lea RDX,QWORD PTR [RIP+.L_4037e8]
            mov ESI,3
            mov RDI,RBX
            xor EAX,EAX
            call .L_404c10

            jmp .L_4028d4
.L_4029a3:

            movsd XMM0,QWORD PTR [R14+128]
            pxor XMM6,XMM6
            movsd QWORD PTR [R14+296],XMM0
            movsd XMM0,QWORD PTR [R14+176]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            movsd QWORD PTR [R14+288],XMM0
            ja .L_4034b6
.L_4029d9:

            movsd QWORD PTR [R14+168],XMM1
            movapd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [R14+160],XMM0
            movsd QWORD PTR [RSP],XMM0
            call tan@PLT

            movsd QWORD PTR [R14+184],XMM0
            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [R14+192],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            movapd XMM3,XMM0
            movapd XMM1,XMM0
            pxor XMM6,XMM6
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_403820]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM0,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
            ja .L_403497
.L_402a5d:

            divsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [R14+200],XMM1
            mulsd XMM1,XMM1
            movsd QWORD PTR [R14+208],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_403828]
            pxor XMM4,XMM4
            subsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM1,XMM4
            movsd QWORD PTR [R14+232],XMM1
            jp .L_402ab4

            movsd XMM3,QWORD PTR [RIP+.L_403818]
            je .L_402ac0
.L_402ab4:

            movsd XMM3,QWORD PTR [RIP+.L_403828]
            divsd XMM3,XMM1
.L_402ac0:

            movsd QWORD PTR [R14+256],XMM3
            movsd XMM4,QWORD PTR [RIP+.L_403828]
            pxor XMM5,XMM5
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_403828]
            ucomisd XMM0,XMM5
            movsd QWORD PTR [R14+240],XMM0
            jp .L_402afa

            je .L_402e39
.L_402afa:

            movsd XMM5,QWORD PTR [RIP+.L_403828]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
.L_402b0a:

            mulsd XMM2,QWORD PTR [RIP+.L_403830]
            movsd QWORD PTR [R14+264],XMM0
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM2
            call tan@PLT

            mulsd XMM0,XMM0
            pxor XMM6,XMM6
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM6
            movsd QWORD PTR [R14+248],XMM0
            jp .L_402b4b

            je .L_402e2c
.L_402b4b:

            movsd XMM6,QWORD PTR [RIP+.L_403828]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
.L_402b5b:

            movsd XMM7,QWORD PTR [RIP+.L_403828]
            movsd QWORD PTR [R14+272],XMM0
            subsd XMM7,XMM1
            movsd XMM0,QWORD PTR [R14+128]
            movsd XMM4,QWORD PTR [RIP+.L_403828]
            movsd XMM2,QWORD PTR [RIP+.L_403828]
            movapd XMM1,XMM7
            pxor XMM7,XMM7
            mulsd XMM1,XMM0
            divsd XMM4,XMM1
            movsd QWORD PTR [R14+136],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_403828]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+152],XMM4
            movsd QWORD PTR [R14+144],XMM1
            movsd XMM1,QWORD PTR [R14+176]
            subsd XMM2,XMM1
            ucomisd XMM2,XMM7
            movsd QWORD PTR [R14+216],XMM2
            jp .L_402be2

            je .L_402e58
.L_402be2:

            movsd XMM5,QWORD PTR [RIP+.L_403828]
            cmp DWORD PTR [R14+400],1
            divsd XMM5,XMM2
            movsd QWORD PTR [R14+224],XMM5
            je .L_402e8b
.L_402c05:

            pxor XMM5,XMM5
            mov RSI,QWORD PTR [RSP+32]
            ucomisd XMM1,XMM5
            jp .L_402e6a

            jne .L_402e6a
.L_402c1e:

            lea RDX,QWORD PTR [RIP+.L_40374c]
            mov RDI,RBX
            mov DWORD PTR [R14+308],EBP
            call .L_4043f0

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_403752]
            mov DWORD PTR [R14+304],EAX
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            mov DWORD PTR [R14+476],EAX
            je .L_402c6e

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40375e]
            mov RDI,RBX
            call .L_4043f0
.L_402c6e:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40376a]
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            mov DWORD PTR [R14+512],EAX
            je .L_402ccd

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_403774]
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RIP+.L_403858]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [R14+504],XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_403860]
            ucomisd XMM1,XMM0
            jbe .L_4030c0
.L_402ccd:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40377e]
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            je .L_402d64

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40377e]
            mov RDI,RBX
            call .L_4043f0

            mov RDI,RAX
            mov RBP,RAX
            call strlen@PLT

            cmp RAX,3
            jne .L_402e46

            movsx ESI,BYTE PTR [RBP]
            lea RDI,QWORD PTR [RIP+.L_403784]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            movsx ESI,BYTE PTR [RBP+1]
            lea RDI,QWORD PTR [RIP+.L_403784]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            movsx ESI,BYTE PTR [RBP+2]
            lea RDI,QWORD PTR [RIP+.L_403784]
            call strchr@PLT

            test RAX,RAX
            je .L_402e46

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [R14+516],EAX
.L_402d64:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40378b]
            mov RDI,RBX
            call .L_4043f0

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_403792]
            mov RDI,RBX
            mov QWORD PTR [R14+328],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_403799]
            mov RDI,RBX
            mov QWORD PTR [R14+336],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_40379e]
            mov RDI,RBX
            mov QWORD PTR [R14+344],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037a3]
            mov QWORD PTR [R14+352],RAX
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_402f30

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037a8]
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [R14+360],RAX
.L_402e07:

            pxor XMM3,XMM3
            ucomisd XMM3,QWORD PTR [R14+360]
            jb .L_402f5a

            mov ESI,4294967265
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_402e2c:

            movsd XMM0,QWORD PTR [RIP+.L_403818]
            jmp .L_402b5b
.L_402e39:

            movsd XMM0,QWORD PTR [RIP+.L_403818]
            jmp .L_402b0a
.L_402e46:

            mov ESI,4294967249
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_402e58:

            mov ESI,4294967290
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_402e6a:

            lea RDX,QWORD PTR [RIP+.L_403746]
            mov RDI,RBX
            xor EBP,EBP
            call .L_4043f0

            test EAX,EAX
            mov RSI,QWORD PTR [RSP+32]
            setne BPL
            jmp .L_402c1e
.L_402e8b:

            pxor XMM4,XMM4
            ucomisd XMM4,QWORD PTR [R14+408]
            jp .L_402c05

            jne .L_402c05

            pxor XMM5,XMM5
            ucomisd XMM5,QWORD PTR [R14+416]
            jp .L_402c05

            jne .L_402c05

            pxor XMM6,XMM6
            mov EDX,0
            ucomisd XMM6,QWORD PTR [R14+424]
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_402c05

            ucomisd XMM0,QWORD PTR [RIP+.L_403838]
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_402c05

            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_44f380-310080]
            ucomisd XMM4,XMM0
            ja .L_403400

            movsd XMM2,QWORD PTR [RIP+.L_403850]
            ucomisd XMM2,XMM0
            seta AL
.L_402f18:

            test AL,AL
            je .L_402c05

            mov DWORD PTR [R14+400],4
            jmp .L_402c05
.L_402f30:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037ad]
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            jne .L_403410

            mov RAX,QWORD PTR [RIP+.L_403828]
            mov QWORD PTR [R14+360],RAX
.L_402f5a:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037b3]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_4043f0

            test RAX,RAX
            mov R13,RAX
            je .L_402fe7

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor R12D,R12D
            lea RBP,QWORD PTR [RIP+.L_65ea40]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            jne .L_402fbe

            jmp .L_4030ae
          .byte 0x90
.L_402fa0:

            mov RAX,R12
            add R12,1
            shl RAX,5
            mov RSI,QWORD PTR [RBP+RAX*1]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_4030ae
.L_402fbe:

            mov RDI,R13
            mov DWORD PTR [RSP],R12D
            call strcmp@PLT

            test EAX,EAX
            jne .L_402fa0

            movsxd RAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_65ea20]
            shl RAX,5
            mov RAX,QWORD PTR [RDX+RAX*1+8]
            mov QWORD PTR [RSP+24],RAX
.L_402fe7:

            cmp QWORD PTR [RSP+24],0
            je .L_40345b
.L_402ff3:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+24]
            call .L_415ac0

            mov RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [R14+368],XMM0
            cmp BYTE PTR [RDI],47
            je .L_403430

            movapd XMM1,XMM0
.L_40301d:

            pxor XMM6,XMM6
            ucomisd XMM6,XMM1
            jae .L_403287

            movsd XMM0,QWORD PTR [RIP+.L_403828]
            divsd XMM0,XMM1
            movsd QWORD PTR [R14+376],XMM0
.L_403040:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037c4]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_4043f0

            test RAX,RAX
            mov R13,RAX
            je .L_4030f0

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor R12D,R12D
            lea RBP,QWORD PTR [RIP+.L_65ea40]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            je .L_4030ae
.L_403084:

            mov RDI,R13
            mov DWORD PTR [RSP],R12D
            call strcmp@PLT

            test EAX,EAX
            je .L_4030d7

            mov RAX,R12
            add R12,1
            shl RAX,5
            mov RSI,QWORD PTR [RBP+RAX*1]
            test RSI,RSI
            mov QWORD PTR [RSP+24],RSI
            jne .L_403084
.L_4030ae:

            mov ESI,4294967289
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_4030c0:

            mov ESI,4294967282
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_4030d2:

            call __stack_chk_fail@PLT
.L_4030d7:

            movsxd RAX,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_65ea20]
            shl RAX,5
            mov RAX,QWORD PTR [RDX+RAX*1+8]
            mov QWORD PTR [RSP+24],RAX
.L_4030f0:

            cmp QWORD PTR [RSP+24],0
            je .L_4033a2
.L_4030fc:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+24]
            call .L_415ac0

            mov RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [R14+384],XMM0
            cmp BYTE PTR [RDI],47
            je .L_4032d9

            movapd XMM1,XMM0
.L_403126:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM1
            jae .L_403287

            movsd XMM0,QWORD PTR [RIP+.L_403828]
            divsd XMM0,XMM1
            movsd QWORD PTR [R14+392],XMM0
.L_403149:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037d7]
            mov RDI,RBX
            mov QWORD PTR [RSP+24],0
            call .L_4043f0

            test RAX,RAX
            mov RBP,RAX
            je .L_403304

            mov RSI,QWORD PTR [RIP+.L_65ee00]
            mov QWORD PTR [RSP+48],0
            test RSI,RSI
            je .L_403299

            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_65ee00]
            jmp .L_4031b8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4031a0:

            add R13,1
            mov RAX,R13
            shl RAX,4
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_403299
.L_4031b8:

            mov RDI,RBP
            mov DWORD PTR [RSP],R13D
            call strcmp@PLT

            test EAX,EAX
            jne .L_4031a0

            movsxd RAX,DWORD PTR [RSP]
            shl RAX,4
            mov RAX,QWORD PTR [R12+RAX*1+8]
            test RAX,RAX
            je .L_403299

            mov RBP,RAX
.L_4031e1:

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_449f20

            movsd QWORD PTR [R14+496],XMM0
.L_4031f7:

            mov ESI,408
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            mov QWORD PTR [R14+24],RAX
            je .L_403243

            movsd XMM0,QWORD PTR [RIP+.L_403828]
            subsd XMM0,QWORD PTR [R14+176]
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RIP+.L_403828]
            mov RDI,QWORD PTR [R14+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R14+128]
            call .L_4128a0
.L_403243:

            mov RAX,QWORD PTR [R14+464]
            mov R13,QWORD PTR [R14+480]
            mov RDI,R14
            mov R12,QWORD PTR [R14+520]
            mov RBP,QWORD PTR [R14+24]
            mov QWORD PTR [RSP],RAX
            call R15

            test RAX,RAX
            je .L_403314

            cmp DWORD PTR [RBX],0
            je .L_402682

            mov RDI,RAX
            call .L_4024b0

            xor EAX,EAX
            jmp .L_402682
.L_403287:

            mov ESI,4294967245
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_403299:

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            mov RDI,RBX
            call .L_449f20

            pxor XMM4,XMM4
            ucomisd XMM0,XMM4
            jp .L_4033ed

            jne .L_4033ed

            cmp BYTE PTR [RBP],48
            je .L_4033ed
.L_4032c7:

            mov ESI,4294967250
            mov RDI,RBX
            call .L_404af0

            jmp .L_4028d4
.L_4032d9:

            add RDI,1
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RDI
            call .L_415ac0

            movsd XMM1,QWORD PTR [R14+384]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+384],XMM1
            jmp .L_403126
.L_403304:

            mov QWORD PTR [R14+496],0
            jmp .L_4031f7
.L_403314:

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_403344
.L_40331e:

            mov RDX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+40],RDX
            call .L_403c60

            mov RDI,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            test RDI,RDI
            mov QWORD PTR [RSP+32],RDI
            jne .L_40331e
.L_403344:

            mov RDI,QWORD PTR [RSP]
            test RDI,RDI
            je .L_40335a

            mov QWORD PTR [RSP],RAX
            call .L_403c60

            mov RAX,QWORD PTR [RSP]
.L_40335a:

            test R13,R13
            je .L_40336f

            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            call .L_403c60

            mov RAX,QWORD PTR [RSP]
.L_40336f:

            test R12,R12
            je .L_403384

            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            call .L_403c60

            mov RAX,QWORD PTR [RSP]
.L_403384:

            test RBP,RBP
            je .L_402680

            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_403c60

            mov RAX,QWORD PTR [RSP]
            jmp .L_402682
.L_4033a2:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_44f380-310196]
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            jne .L_4030fc

            movsd XMM0,QWORD PTR [R14+368]
            movsd QWORD PTR [R14+384],XMM0
            movsd XMM0,QWORD PTR [R14+376]
            movsd QWORD PTR [R14+392],XMM0
            jmp .L_403149
.L_4033ed:

            mov RAX,QWORD PTR [RSP+48]
            cmp BYTE PTR [RAX],0
            je .L_4031e1

            jmp .L_4032c7
.L_403400:

            ucomisd XMM0,QWORD PTR [RIP+.L_403848]
            seta AL
            jmp .L_402f18
.L_403410:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037b0]
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [R14+360],RAX
            jmp .L_402e07
.L_403430:

            add RDI,1
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RDI
            call .L_415ac0

            movsd XMM1,QWORD PTR [R14+368]
            divsd XMM1,XMM0
            movsd QWORD PTR [R14+368],XMM1
            jmp .L_40301d
.L_40345b:

            mov RSI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4037ba]
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            jne .L_402ff3

            mov RAX,QWORD PTR [RIP+.L_403828]
            mov QWORD PTR [R14+376],RAX
            mov QWORD PTR [R14+368],RAX
            jmp .L_403040
.L_403497:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [R14+160]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_402a5d
.L_4034b6:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_4029d9
.L_4034ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4034d0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,1616
.L_4034e4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1608],RAX
            xor EAX,EAX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call .L_403c30

            mov RSI,R12
            mov RBP,RAX
            mov RDI,RAX
            call strcpy@PLT

            movzx EDX,BYTE PTR [RBP]
            test DL,DL
            je .L_403654

            xor EDI,EDI
            xor ECX,ECX
            xor ESI,ESI
            jmp .L_403585
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403530:

            cmp DL,43
            jne .L_403600

            test ECX,ECX
            je .L_403610

            cmp BYTE PTR [RAX-1],0
            je .L_403610

            test EDI,EDI
            je .L_403602
.L_403553:

            mov EDX,ECX
            sub EDX,EDI
            cmp ESI,199
            movsxd RDX,EDX
            mov BYTE PTR [RBP+RDX*1],0
            je .L_403624
.L_40356b:

            movsxd RDX,ESI
            add RAX,1
            add ESI,1
            mov QWORD PTR [RSP+RDX*8],RAX
            xor EDI,EDI
.L_40357b:

            movzx EDX,BYTE PTR [RAX]
            add ECX,1
            test DL,DL
            je .L_4035b7
.L_403585:

            cmp DL,32
            je .L_403594

            jg .L_403530

            sub EDX,9
            cmp DL,1
            ja .L_403600
.L_403594:

            test ECX,ECX
            je .L_4035a6

            cmp BYTE PTR [RAX-1],0
            je .L_4035a6

            test ESI,ESI
            jne .L_403638
.L_4035a6:

            mov BYTE PTR [RAX],0
            add RAX,1
            movzx EDX,BYTE PTR [RAX]
            add ECX,1
            test DL,DL
            jne .L_403585
.L_4035b7:

            sub ECX,EDI
            movsxd RCX,ECX
            add RCX,RBP
.L_4035bf:

            mov RDI,RBX
            mov BYTE PTR [RCX],0
            mov RDX,RSP
            call .L_402540

            mov RBX,RAX
.L_4035d0:

            mov RDI,RBP
            call .L_403c60

            mov RAX,RBX
            mov RBX,QWORD PTR [RSP+1608]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40365e

            add RSP,1616
.L_4035f5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403600:

            xor EDI,EDI
.L_403602:

            add RAX,1
            jmp .L_40357b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403610:

            test EDI,EDI
            jne .L_403553

            cmp ESI,199
            jne .L_40356b
.L_403624:

            mov RDI,RBX
            mov ESI,4294967252
            xor EBX,EBX
            call .L_404af0

            jmp .L_4035d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403638:

            lea EDX,DWORD PTR [RSI-1]
            movsxd RDX,EDX
            cmp QWORD PTR [RSP+RDX*8],RAX
            je .L_4035a6

            add EDI,1
            add RAX,1
            jmp .L_40357b
.L_403654:

            mov RCX,RBP
            xor ESI,ESI
            jmp .L_4035bf
.L_40365e:

            call __stack_chk_fail@PLT
.L_403663:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403670:

            push RBX
            mov RBX,RDI
            call .L_404a50

            mov RSI,RBX
            mov RDI,RAX
            pop RBX
            jmp .L_4034d0
.L_403685:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403690:

            push RBP
            push RBX
            mov RBP,RSI
            mov EBX,EDI
            sub RSP,8
            call .L_404a50

            add RSP,8
            mov RDX,RBP
            mov ESI,EBX
            pop RBX
            pop RBP
            mov RDI,RAX
            jmp .L_402540
.L_4036b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4036c0:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],RSI
            mov QWORD PTR [RDI+112],RDX
            mov RSI,RCX
            mov EDI,1
            call .L_403c70

            mov QWORD PTR [RBX+32],RAX
            pop RBX
            ret 
.L_4036df:

            imul EBP,DWORD PTR [RSI+105],1768300660
            insb BYTE PTR [RDI],DX
            and BYTE PTR GS:[RDI+RBP*2+111],DH
            and BYTE PTR [RDX+105],AH
            add BYTE PTR [EBX+112],DH
            jb .L_403764
          .byte 0x6a
          .byte 0x0
.L_4036f7:
          .string "pipeline"
.L_403700:

            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            jo .L_403778
          .byte 0x3d
          .byte 0x0
.L_403707:
          .string "tdatum"
.L_40370e:

            je .L_403775
          .byte 0x6c
          .byte 0x6c
          .byte 0x70
          .byte 0x73
          .byte 0x0
.L_403715:

            je .L_403778
          .zero 1
.L_403718:
          .string "tb"
.L_40371b:
          .string "trf"
.L_40371f:
          .string "tf"
.L_403722:
          .string "rt"
.L_403725:
          .string "tinit"
.L_40372b:
          .string "sinit"
.L_403731:
          .string "proj_def.dat"
.L_40373e:
          .string "general"
.L_403746:
          .string "bgeoc"
.L_40374c:
          .string "bover"
.L_403752:
          .string "tgeoidgrids"
.L_40375e:
          .byte 0x73
          .byte 0x67
          .byte 0x65
          .byte 0x6f
          .byte 0x69
          .byte 0x64
.L_403764:

            jb .L_4037d0
          .byte 0x64
          .byte 0x73
          .byte 0x0
.L_40376a:
          .string "tlon_wrap"
.L_403774:
          .byte 0x72
.L_403775:

            insb BYTE PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
.L_403778:

            pop RDI
            ja .L_4037ed
          .byte 0x61
          .byte 0x70
          .byte 0x0
.L_40377e:
          .string "saxis"
.L_403784:

            ja .L_4037f5
          .byte 0x73
          .byte 0x75
          .byte 0x64
          .byte 0x0
.L_40378b:
          .string "rlon_0"
.L_403792:
          .string "rlat_0"
.L_403799:
          .string "dx_0"
.L_40379e:
          .string "dy_0"
.L_4037a3:

            je .L_403810
          .byte 0x5f
          .byte 0x30
          .byte 0x0
.L_4037a8:
          .string "dk_0"
.L_4037ad:
          .string "tk"
.L_4037b0:
          .string "dk"
.L_4037b3:
          .string "sunits"
.L_4037ba:

            jae .L_403830
          .byte 0x6f
          .byte 0x5f
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x0
.L_4037c4:
          .string "svunits"
# WARNING: found overlapping blocks at address 3596
# WARNING: found overlapping blocks at address 3598

            jae 13844
            je 13839
.L_4037d0:

            pop RDI
            insd DWORD PTR [RDI],DX
            je .L_40383a
          .byte 0x72
          .byte 0x0
.L_4037d7:
          .string "spm"
.L_4037db:
          .string "bno_defs"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4037e8:
          .byte 0x70
          .byte 0x6a
          .byte 0x5f
          .byte 0x69
          .byte 0x6e
.L_4037ed:

            imul ESI,DWORD PTR [RDI+RBX*2+99],540702836
.L_4037f5:

            jne .L_40386b
          .byte 0x74
          .byte 0x20
          .byte 0x73
          .byte 0x70
          .byte 0x65
          .byte 0x63
          .byte 0x69
          .byte 0x66
          .byte 0x79
          .byte 0x20
          .byte 0x65
          .byte 0x6c
          .byte 0x6c
          .byte 0x69
          .byte 0x70
          .byte 0x73
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x73
.L_403810:

            jo .L_40387a

            jb .L_40387a
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_403818:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_403820:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_403828:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_403830:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_403836:

            loopne OFFSET .L_403877
.L_403838:

            add BYTE PTR [RAX],AL
.L_40383a:

            add BYTE PTR [RAX-90],AL
            push RSP
            pop RAX
            sbb DWORD PTR [R8],1804661244
            jnp .L_403887
.L_403848:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0xbd
.L_403850:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0x3d
.L_403858:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0x4f
          .byte 0x40
.L_403860:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40386b:

            add BYTE PTR [RAX],AL
          .zero 3
.L_403870:

            lea RAX,QWORD PTR [RIP+.L_65dbe0]
.L_403877:

            ret 
.L_403878:
          .byte 0xf
          .byte 0x1f
.L_40387a:

            test BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_403880:

            lea RAX,QWORD PTR [RIP+.L_65d260]
.L_403887:

            ret 
.L_403888:
          .string "aea"
.L_40388c:
          .string "aeqd"
.L_403891:
          .string "airy"
.L_403896:
          .string "aitoff"
.L_40389d:
          .string "alsk"
.L_4038a2:
          .string "apian"
.L_4038a8:
          .string "august"
.L_4038af:
          .string "bacon"
.L_4038b5:
          .string "bipc"
.L_4038ba:
          .string "boggs"
.L_4038c0:
          .string "bonne"
.L_4038c6:
          .string "calcofi"
.L_4038ce:
          .string "cart"
.L_4038d3:
          .string "cass"
.L_4038d8:
          .string "cc"
.L_4038db:
          .string "cea"
.L_4038df:
          .string "chamb"
.L_4038e5:
          .string "collg"
.L_4038eb:
          .string "comill"
.L_4038f2:
          .string "crast"
.L_4038f8:
          .string "denoy"
.L_4038fe:
          .string "eck1"
.L_403903:
          .string "eck2"
.L_403908:
          .string "eck3"
.L_40390d:
          .string "eck4"
.L_403912:
          .string "eck5"
.L_403917:
          .string "eck6"
.L_40391c:
          .string "eqc"
.L_403920:
          .string "eqdc"
.L_403925:
          .string "euler"
.L_40392b:
          .string "etmerc"
.L_403932:
          .string "fahey"
.L_403938:
          .string "fouc"
.L_40393d:
          .string "fouc_s"
.L_403944:
          .string "gall"
.L_403949:
          .string "geocent"
.L_403951:

            outsd DX,DWORD PTR GS:[ESI]
            jae .L_403956
.L_403956:

            imul EBP,DWORD PTR [ESI+115],1852244024
            pop RDI
            jae .L_4039ca
          .byte 0x6e
          .byte 0x75
          .byte 0x0
.L_403964:
          .string "gnom"
.L_403969:
          .string "goode"
.L_40396f:
          .string "gs48"
.L_403974:
          .string "gs50"
.L_403979:
          .string "hammer"
.L_403980:
          .string "hatano"
.L_403987:
          .string "healpix"
.L_40398f:
          .string "rhealpix"
.L_403998:
          .string "helmert"
.L_4039a0:
          .string "hgridshift"
.L_4039ab:
          .string "horner"
.L_4039b2:
          .string "igh"
.L_4039b6:
          .string "imw_p"
.L_4039bc:
          .string "isea"
.L_4039c1:
          .string "kav5"
.L_4039c6:

            imul ESP,DWORD PTR [RCX+118],55
.L_4039ca:

            add BYTE PTR [RBX+114],CH
            outsd DX,DWORD PTR [RSI]
            jbe .L_403a31
          .byte 0x6b
          .byte 0x0
.L_4039d2:
          .string "labrd"
.L_4039d8:
          .string "laea"
.L_4039dd:
          .string "lagrng"
.L_4039e4:
          .string "larr"
.L_4039e9:
          .string "lask"
.L_4039ee:
          .string "lonlat"
.L_4039f5:
          .string "latlon"
.L_4039fc:
          .string "latlong"
.L_403a04:
          .string "longlat"
.L_403a0c:
          .string "lcc"
.L_403a10:
          .string "lcca"
.L_403a15:
          .string "leac"
.L_403a1a:
          .string "lee_os"
.L_403a21:
          .string "loxim"
.L_403a27:
          .string "lsat"
.L_403a2c:
          .byte 0x6d
          .byte 0x62
          .byte 0x74
          .byte 0x5f
          .byte 0x73
.L_403a31:

            add BYTE PTR [RBP+98],CH
            je .L_403a95

            jo .L_403aac

            add BYTE PTR [RBP+98],CH
            je .L_403aa4
          .byte 0x70
          .byte 0x70
          .byte 0x0
.L_403a41:
          .string "mbtfpq"
.L_403a48:
          .string "mbtfps"
.L_403a4f:

            insd DWORD PTR [RDI],DX
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x0
.L_403a54:
          .string "mil_os"
.L_403a5b:
          .string "mill"
.L_403a60:

            insd DWORD PTR [RDI],DX
            imul ESI,DWORD PTR [RBX+114],7171955
.L_403a68:

            insd DWORD PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            add BYTE PTR [RBP+111],CH
            insb BYTE PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR GS:[RSI]
            jae .L_403ae1

            jns .L_403a78
.L_403a78:

            insd DWORD PTR [RDI],DX
            jne .L_403aed

            xor DWORD PTR FS:[RAX],EAX
.L_403a7e:

            insd DWORD PTR [RDI],DX
            jne .L_403af3

            xor AL,BYTE PTR FS:[RAX]
.L_403a84:
          .string "murd3"
.L_403a8a:
          .string "natearth"
.L_403a93:
          .byte 0x6e
          .byte 0x61
.L_403a95:

            je .L_403afc
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x68
          .byte 0x32
          .byte 0x0
.L_403a9d:

            outsb DX,BYTE PTR [RSI]
            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            add BYTE PTR [RSI+101],CH
.L_403aa4:

            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            pop RDI
            push 1667853824
.L_403aac:

            outsd DX,DWORD PTR [RSI]
            insb BYTE PTR [RDI],DX
            add BYTE PTR [RSI+115],CH
            jo .L_403b18

            jb .L_403ab5
.L_403ab5:

            outsb DX,BYTE PTR [RSI]
          .byte 0x7a
          .byte 0x6d

            add BYTE PTR [EDI+98],CH
            pop RDI
            je .L_403b31
          .byte 0x61
          .byte 0x6e
          .byte 0x0
.L_403ac2:
          .string "ocea"
.L_403ac7:
          .string "oea"
.L_403acb:

            outsd DX,DWORD PTR [RSI]
            insd DWORD PTR [RDI],DX
            jb .L_403b33
          .zero 1
.L_403ad1:
          .string "ortel"
.L_403ad7:

            outsd DX,DWORD PTR [RSI]
            jb .L_403b4e

            push 1668284527
            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
.L_403ae1:

            imul ESP,DWORD PTR [RBX],1953784176
          .byte 0x65
          .byte 0x72
          .byte 0x73

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
.L_403aed:

            add BYTE PTR [RAX+105],DH
          .byte 0x70
          .byte 0x65

            insb BYTE PTR [RDI],DX
.L_403af3:

            imul EBP,DWORD PTR [RSI+101],1819242496
            jns .L_403afc
.L_403afc:

            jo .L_403b73

            je .L_403b70

            xor DWORD PTR [RAX],EAX
.L_403b02:

            jo .L_403b79
          .byte 0x74
          .byte 0x70
          .byte 0x32
          .byte 0x0
.L_403b08:
          .string "putp3"
.L_403b0e:
          .string "putp3p"
.L_403b15:
          .byte 0x70
          .byte 0x75
          .byte 0x74
.L_403b18:

            jo .L_403b4e
          .byte 0x70
          .byte 0x0
.L_403b1c:
          .string "putp5"
.L_403b22:

            jo .L_403b99
          .byte 0x74
          .byte 0x70
          .byte 0x35

            jo .L_403b29
.L_403b29:

            jo .L_403ba0
          .byte 0x74
          .byte 0x70

            add BYTE PTR SS:[RAX+117],DH
.L_403b31:

            je .L_403ba3
.L_403b33:

            jo .L_403b36
.L_403b36:

            jno .L_403bad
          .byte 0x61
          .byte 0x5f
          .byte 0x61
          .byte 0x75
          .byte 0x74
          .byte 0x0
.L_403b3e:

            jno .L_403bb3
          .byte 0x63
          .byte 0x0
.L_403b42:

            jb .L_403bb3
          .byte 0x62
          .byte 0x69
          .byte 0x6e
          .byte 0x0
.L_403b48:
          .string "rouss"
# WARNING: found overlapping blocks at address 391a
# WARNING: found overlapping blocks at address 391c

.L_403b4e:

            jb .L_403bc0
          .byte 0x6f
          .byte 0x6c
          .byte 0x79
          .byte 0x0
.L_403b54:
          .string "sch"
# WARNING: found overlapping blocks at address 3926

            jae 14739
            outsb DX,BYTE PTR [RSI]
          .byte 0x75
          .byte 0x0
.L_403b5d:
          .string "somerc"
# WARNING: found overlapping blocks at address 392f
# WARNING: found overlapping blocks at address 3930
.L_403b64:
          .string "stere"
.L_403b6a:

            jae .L_403be0
          .byte 0x65
          .byte 0x72
          .byte 0x65
          .byte 0x61
.L_403b70:

            add BYTE PTR [RDI+115],AH
.L_403b73:

            je .L_403be2

            jb .L_403bdb
          .zero 1
.L_403b79:

            je .L_403bde
          .byte 0x63
          .byte 0x0
.L_403b7d:

            je .L_403be2
          .byte 0x65
          .byte 0x61
          .byte 0x0
.L_403b82:
          .string "times"
.L_403b88:
          .string "tissot"
.L_403b8f:
          .string "tmerc"
# WARNING: found overlapping blocks at address 3960
# WARNING: found overlapping blocks at address 3964

            je 14807
            jno .L_403bfe
# WARNING: found overlapping blocks at address 3969
.set .L_403b99, . - 1

            add BYTE PTR [RAX+RSI*2+101],DH
            jb .L_403c13
# WARNING: found overlapping blocks at address 396a

.L_403ba0:

            add BYTE PTR [RBP+110],DH
.L_403ba3:

            imul ESI,DWORD PTR [RBX+RIZ*2+111],1919252078
            je .L_403bad
.L_403bad:

            jne .L_403c1f
          .byte 0x73
          .byte 0x0
.L_403bb1:
          .byte 0x75
          .byte 0x72
.L_403bb3:

            insd DWORD PTR [RDI],DX
            xor EAX,1836217600
          .byte 0x66
          .byte 0x70
          .byte 0x73

            add BYTE PTR [RBP+116],DH
.L_403bbf:

            insd DWORD PTR [RDI],DX
.L_403bc0:

            add BYTE PTR [RSI+97],DH
            outsb DX,BYTE PTR [RSI]
            add BYTE PTR FS:[ESI+97],DH
            outsb DX,BYTE PTR [RSI]
            xor AL,BYTE PTR FS:[EAX]
.L_403bce:
          .string "vandg3"
# WARNING: found overlapping blocks at address 39a0

.L_403bd5:
          .byte 0x76
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x67
          .byte 0x34
.L_403bdb:

            add BYTE PTR [RSI+105],DH
.L_403bde:

            je .L_403c4b
.L_403be0:

            xor DWORD PTR [RAX],EAX
.L_403be2:

            jbe .L_403c4b

            jb .L_403c4f
          .byte 0x64
          .byte 0x73

            push 7628393
.L_403bed:
          .string "wag1"
# WARNING: found overlapping blocks at address 39bf

.L_403bf2:
          .string "wag2"
# WARNING: found overlapping blocks at address 39c4

.L_403bf7:

            ja .L_403c5a

            xor EAX,DWORD PTR [EAX]
.L_403bfc:

            ja .L_403c5f
.L_403bfe:

            xor AL,0
.L_403c01:
          .string "wag5"
.L_403c06:
          .string "wag6"
.L_403c0b:
          .string "wag7"
.L_403c10:
          .byte 0x77
          .byte 0x65
          .byte 0x72
.L_403c13:

            outsb DX,BYTE PTR GS:[RSI]
            add BYTE PTR [RDI+105],DH
            outsb DX,BYTE PTR [RSI]
            imul ESI,DWORD PTR [RCX],0
.L_403c1c:
          .string "wink2"
# WARNING: found overlapping blocks at address 39ee
# WARNING: found overlapping blocks at address 39ef
.set .L_403c1f, . - 3

.L_403c22:

            ja .L_403c8d

            outsb DX,BYTE PTR [RSI]
          .byte 0x74
          .byte 0x72

            imul EAX,DWORD PTR [RAX],8396559
            add BYTE PTR [RAX],AL
          .zero 1
.L_403c30:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            call __errno_location@PLT

            mov RDI,RBP
            mov RBX,RAX
            mov R12D,DWORD PTR [RAX]
            call malloc@PLT
          .byte 0x48
.L_403c4b:

            test EAX,EAX
            je .L_403c5a
.L_403c4f:

            test R12D,R12D
            jne .L_403c5a

            mov DWORD PTR [RBX],0
.L_403c5a:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_403c5f:

            nop
.L_403c60:

            jmp free@PLT
.L_403c65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c70:

            push RBX
            mov RBX,RDI
            imul RBX,RSI
            mov RDI,RBX
            call .L_403c30

            test RAX,RAX
            mov RCX,RAX
            je .L_403c98

            mov RDX,RBX
            xor ESI,ESI
.L_403c8d:

            mov RDI,RAX
            call memset@PLT

            mov RCX,RAX
.L_403c98:

            mov RAX,RCX
            pop RBX
            ret 
.L_403c9d:

            nop
            nop
            nop
.L_403ca0:

            test RDI,RDI
            je .L_403cb8

            sub RSP,8
            call free@PLT

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403cb8:

            xor EAX,EAX
            ret 
.L_403cbb:

            nop
            nop
            nop
            nop
            nop
.L_403cc0:

            test RDI,RDI
            je .L_403ce8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_403cde

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call free@PLT

            mov RDI,RBX
            pop RBX
.L_403cde:

            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403ce8:

            ret 
.L_403cea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_403cf0:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,1112
.L_403d0a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1096],RAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+16],R8
            setne DL
            test R8,R8
            setne AL
            and DL,AL
            mov BYTE PTR [RSP+11],DL
            je .L_403d3d

            mov BYTE PTR [RCX],0
.L_403d3d:

            movzx R13D,BYTE PTR [RBX]
            cmp R13B,126
            je .L_403e30

            lea RDI,QWORD PTR [RIP+.L_40439e]
            movsx ESI,R13B
            mov R12,RBX
            call strchr@PLT

            test RAX,RAX
            je .L_403fd0
.L_403d67:

            mov RDX,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call .L_407220

            test RAX,RAX
            mov R13,RAX
            je .L_403ec8

            cmp BYTE PTR [RSP+11],0
            jne .L_403e08
.L_403d89:

            call __errno_location@PLT

            mov DWORD PTR [RAX],0
.L_403d94:

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            je .L_403df0
.L_403d9b:

            lea R9,QWORD PTR [RIP+.L_40434e]
.L_403da2:

            lea RDX,QWORD PTR [RIP+.L_404378]
            mov R8,R12
            mov RCX,RBX
            mov ESI,2
            mov RDI,RBP
            xor EAX,EAX
            call .L_404c10
.L_403dbe:

            mov RCX,QWORD PTR [RSP+1096]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R13
            jne .L_4041bd

            add RSP,1112
.L_403ddf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403df0:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            test ESI,ESI
            je .L_403d9b

            mov RDI,RBP
            call .L_404af0

            jmp .L_403d9b
            nop
            nop
            nop
.L_403e08:

            mov R15,QWORD PTR [RSP+16]
            mov RSI,R12
            mov RDI,R14
            mov RDX,R15
            call strncpy@PLT

            mov BYTE PTR [R14+R15*1-1],0
            jmp .L_403d89
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403e30:

            movsx ESI,BYTE PTR [RBX+1]
            lea RDI,QWORD PTR [RIP+.L_40439e]
            call strchr@PLT

            test RAX,RAX
            je .L_403ff0

            lea RDI,QWORD PTR [RIP+.L_404358]
            call getenv@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_404130

            mov RDI,RAX
            call strlen@PLT

            mov RDI,RBX
            mov R13,RAX
            call strlen@PLT

            lea RAX,QWORD PTR [R13+RAX*1+2]
            cmp RAX,1025
            ja .L_404130

            lea R12,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [R13+1]
            mov RSI,R15
            mov ECX,1025
            mov RDI,R12
            call __memcpy_chk@PLT

            lea EDI,DWORD PTR [R13+1]
            movsxd RAX,R13D
            lea RSI,QWORD PTR [RBX+1]
            mov BYTE PTR [RSP+RAX*1+64],47
            movsxd RDI,EDI
            mov BYTE PTR [RSP+RDI*1+64],0
            add RDI,R12
            call strcpy@PLT

            jmp .L_403d67
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403ec8:

            mov EAX,DWORD PTR [RIP+.L_65fd18]
            test EAX,EAX
            mov DWORD PTR [RSP+12],EAX
            jle .L_404060

            mov RAX,QWORD PTR [RIP+.L_65fd10]
            mov RDI,RBX
            xor R15D,R15D
            mov QWORD PTR [RSP+24],RAX
            call strlen@PLT

            lea RCX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+40],R12
            mov QWORD PTR [RSP+56],R13
            mov QWORD PTR [RSP+48],R14
            mov R13,QWORD PTR [RSP+24]
            mov R12,R15
            mov QWORD PTR [RSP+32],RCX
            mov QWORD PTR [RSP+24],RBP
            mov R14,RAX
            jmp .L_403f2e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403f20:

            cmp DWORD PTR [RSP+12],EBP
            jle .L_4040f8
.L_403f2a:

            add R12,1
.L_403f2e:

            mov R15,QWORD PTR [R13+R12*8]
            lea EBP,DWORD PTR [R12+1]
            mov RDI,R15
            call strlen@PLT

            lea RAX,QWORD PTR [R14+RAX*1+2]
            cmp RAX,1025
            ja .L_403f20

            sub RSP,8
.L_403f51:

            mov R8,R15
            lea RCX,QWORD PTR [RIP+.L_44f380-307223]
            push RBX
            mov R15,QWORD PTR [RSP+48]
            mov R9D,47
            mov EDX,1025
            mov ESI,1
            xor EAX,EAX
            mov RDI,R15
            call __sprintf_chk@PLT

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+40]
            mov RSI,R15
            call .L_407220

            test RAX,RAX
            pop RCX
            pop RSI
            jne .L_4040a0

            mov EAX,DWORD PTR [RIP+.L_65fd18]
            cmp EAX,EBP
            mov DWORD PTR [RSP+12],EAX
            jle .L_404050

            mov RDI,RBX
            mov R13,QWORD PTR [RIP+.L_65fd10]
            call strlen@PLT

            mov QWORD PTR [RSP+40],R15
            mov R14,RAX
            jmp .L_403f2a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fd0:

            cmp R13B,46
            jne .L_403ff0

            movsx ESI,BYTE PTR [RBX+1]
            lea RDI,QWORD PTR [RIP+.L_40439e]
            call strchr@PLT

            test RAX,RAX
            jne .L_403d67

            nop
.L_403ff0:

            lea RDI,QWORD PTR [RIP+.L_40435d]
            mov ECX,2
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4040d0

            cmp BYTE PTR [RBX+1],58
            je .L_4040d0
.L_404018:

            mov RAX,QWORD PTR [RIP+.L_65fd20]
            test RAX,RAX
            je .L_404138

            mov RDI,RBX
            call RAX

            test RAX,RAX
            je .L_404138

            mov RDI,RBX
            call QWORD PTR [RIP+.L_65fd20]

            mov R12,RAX
            jmp .L_403d67
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404050:

            mov R13,QWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            nop
.L_404060:

            mov EDX,DWORD PTR [RBP]
            test EDX,EDX
            jne .L_4041c2

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea R9,QWORD PTR [RIP+.L_404347]
            test ESI,ESI
            je .L_403da2

            mov RDI,RBP
            mov QWORD PTR [RSP],R9
            call .L_404af0

            mov R9,QWORD PTR [RSP]
            jmp .L_403da2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040a0:

            cmp BYTE PTR [RSP+11],0
            mov R12,RAX
            mov RBP,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RSP+48]
            jne .L_404110
.L_4040b4:

            call __errno_location@PLT

            mov R13,R12
            mov DWORD PTR [RAX],0
            mov R12,QWORD PTR [RSP+32]
            jmp .L_403d94
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4040d0:

            movsx ESI,BYTE PTR [RBX+2]
            lea RDI,QWORD PTR [RIP+.L_40439e]
            mov R12,RBX
            call strchr@PLT

            test RAX,RAX
            jne .L_403d67

            jmp .L_404018
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040f8:

            mov R12,QWORD PTR [RSP+40]
            mov R13,QWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+24]
            jmp .L_404060
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404110:

            mov R15,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R14
            mov RDX,R15
            call strncpy@PLT

            mov BYTE PTR [R14+R15*1-1],0
            jmp .L_4040b4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404130:

            xor R13D,R13D
            jmp .L_403dbe
.L_404138:

            lea RDI,QWORD PTR [RIP+.L_404360]
            call getenv@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_4041ae

            mov RDI,RAX
            call strlen@PLT

            mov R12,RAX
.L_404157:

            mov RDI,RBX
            call strlen@PLT

            mov R13,RAX
            lea RAX,QWORD PTR [R12+RAX*1+2]
            cmp RAX,1025
            ja .L_404130

            lea R12,QWORD PTR [RSP+64]
            mov RSI,R15
            mov EDX,1025
            mov RDI,R12
            call __stpcpy_chk@PLT

            sub RAX,R12
            mov RSI,RBX
            movsxd RDX,EAX
            add EAX,1
            cdqe 
            mov BYTE PTR [RSP+RDX*1+64],47
            lea RDX,QWORD PTR [R13+1]
            lea RDI,QWORD PTR [R12+RAX*1]
            mov BYTE PTR [RSP+RAX*1+64],0
            call memcpy@PLT

            jmp .L_403d67
.L_4041ae:

            mov R12D,21
            lea R15,QWORD PTR [RIP+.L_404331]
            jmp .L_404157
.L_4041bd:

            call __stack_chk_fail@PLT
.L_4041c2:

            lea R9,QWORD PTR [RIP+.L_404347]
            jmp .L_403da2
.L_4041ce:

            nop
            nop
.L_4041d0:

            mov QWORD PTR [RIP+.L_65fd20],RDI
            ret 
.L_4041d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4041e0:

            mov EAX,DWORD PTR [RIP+.L_65fd18]
            push R14
            push R13
            mov R13D,EDI
            push R12
            mov R12,RSI
            push RBP
            push RBX
.L_4041f4:

            test EAX,EAX
            jle .L_404250

            mov RAX,QWORD PTR [RIP+.L_65fd10]
            test RAX,RAX
            je .L_404250

            xor EBX,EBX
            jmp .L_404217
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404210:

            mov RAX,QWORD PTR [RIP+.L_65fd10]
.L_404217:

            mov RDI,QWORD PTR [RAX+RBX*8]
            call .L_403c60

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RIP+.L_65fd18],EAX
            jg .L_404210

            mov RDI,QWORD PTR [RIP+.L_65fd10]
            call .L_403c60

            mov DWORD PTR [RIP+.L_65fd18],0
            mov QWORD PTR [RIP+.L_65fd10],0
.L_404250:

            test R13D,R13D
            jle .L_4042b7

            movsxd RDI,R13D
            xor EBX,EBX
            shl RDI,3
            call .L_403c30

            mov RBP,RAX
            mov QWORD PTR [RIP+.L_65fd10],RAX
            lea EAX,DWORD PTR [R13-1]
            lea R14,QWORD PTR [RAX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404280:

            mov RDI,QWORD PTR [R12+RBX*1]
            add RBP,RBX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call .L_403c30

            mov QWORD PTR [RBP],RAX
            mov RBP,QWORD PTR [RIP+.L_65fd10]
            mov RSI,QWORD PTR [R12+RBX*1]
            mov RDI,QWORD PTR [RBP+RBX*1]
            add RBX,8
            call strcpy@PLT

            cmp R14,RBX
            jne .L_404280
.L_4042b7:

            pop RBX
.L_4042b8:

            mov DWORD PTR [RIP+.L_65fd18],R13D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4042c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042d0:

            mov RAX,QWORD PTR [RIP+.L_65fd10]
            ret 
.L_4042d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042e0:

            mov EAX,DWORD PTR [RIP+.L_65fd18]
            ret 
.L_4042e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4042f0:

            xor R8D,R8D
            xor ECX,ECX
            jmp .L_403cf0
.L_4042fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_404300:

            push RBX
            mov R8,RCX
            mov RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_404370]
            mov RBX,RDI
            call .L_403cf0

            xor EDX,EDX
            test RAX,RAX
            je .L_40432d

            mov RSI,RAX
            mov RDI,RBX
            call .L_407280

            mov EDX,1
.L_40432d:

            mov EAX,EDX
            pop RBX
            ret 
.L_404331:
          .string "/usr/local/share/proj"
.L_404347:
          .string "failed"
.L_40434e:

            jae .L_4043c5
          .byte 0x63
          .byte 0x63
          .byte 0x65
          .byte 0x65
          .byte 0x64
          .byte 0x65
          .byte 0x64
          .byte 0x0
.L_404358:

            add BYTE PTR [R14],R13B
            add BYTE PTR CS:[RAX+82],DL
            pop RDI
            add BYTE PTR [RIP+.L_65fea8+624781881],SPL
            jae .L_404370
# WARNING: found overlapping blocks at address 412d
.set .L_40435d, . - 19

# WARNING: found overlapping blocks at address 4130
.set .L_404360, . - 16

.L_404370:

            jb .L_4043d4
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404378:
          .string "pj_open_lib(%s): call fopen(%s) - %s\n"
.L_40439e:
          .string "/"
.L_4043a0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403c30

            test RAX,RAX
            mov RBX,RAX
            je .L_4043e2

            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            cmp BYTE PTR [RBP],43
            lea RDI,QWORD PTR [RBX+.L_4043dd]
# WARNING: found overlapping blocks at address 4195
.set .L_4043c5, . - 15

.L_4043d4:

            sete AL
            add RBP,RAX
            mov RSI,RBP
.L_4043dd:

            call strcpy@PLT
.L_4043e2:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_4043ec:

            nop
            nop
            nop
            nop
.L_4043f0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_404401:

            test RDI,RDI
            mov QWORD PTR [RSP],RDI
            je .L_404590
.L_40440e:

            lea R12,QWORD PTR [RDX+1]
            movzx R14D,BYTE PTR [RDX]
            mov RDI,R12
            call strlen@PLT

            test R15,R15
            mov R13D,EAX
            mov EBP,EAX
            je .L_40445c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404430:

            lea RBX,QWORD PTR [R15+9]
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call strncmp@PLT

            test EAX,EAX
            jne .L_404454

            movzx EAX,BYTE PTR [R15+R13*1+9]
            test AL,AL
            je .L_4044c0

            cmp AL,61
            je .L_4044c0
.L_404454:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_404430
.L_40445c:

            xor EDI,EDI
            cmp R14B,116
            jne .L_404480
.L_404464:

            mov EAX,EDI
            and EAX,1
.L_404469:

            add RSP,24
.L_40446d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404480:

            sub R14D,98
            cmp R14B,17
            ja .L_4045be

            lea RDX,QWORD PTR [RIP+.L_404614]
            movzx R14D,R14B
            movsxd RAX,DWORD PTR [RDX+R14*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4044a8:

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4044c0:

            cmp R14B,116
            je .L_4045e5

            lea RDI,QWORD PTR [RBX+RBP*1]
            or BYTE PTR [R15+8],1
            xor EAX,EAX
            cmp BYTE PTR [RDI],61
            sete AL
            sub R14D,98
            add RDI,RAX
            cmp R14B,17
            ja .L_4045be

            lea RDX,QWORD PTR [RIP+.L_40465c]
            movzx R14D,R14B
            movsxd RAX,DWORD PTR [RDX+R14*4]
            add RAX,RDX
            jmp RAX
.L_404500:

            mov RAX,RDI
            jmp .L_404469
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404510:

            mov RSI,RDI
            mov RDI,QWORD PTR [RSP]
            xor EDX,EDX
            call .L_449f20

            movq RAX,XMM0
            jmp .L_404469
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404530:

            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            mov EAX,EAX
            jmp .L_404469
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404548:

            call .L_415c60

            movq RAX,XMM0
            jmp .L_404469
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404560:

            movzx EAX,BYTE PTR [RDI]
            cmp AL,84
            je .L_4045b4

            jg .L_4045a8

            test AL,AL
            je .L_4045b4

            cmp AL,70
            je .L_4044a8
.L_404575:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4294967288
            call .L_404af0

            xor EAX,EAX
            jmp .L_404469
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404590:

            mov QWORD PTR [RSP+8],RDX
            call .L_404a50

            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP],RAX
            jmp .L_40440e
.L_4045a8:

            cmp AL,102
            je .L_4044a8

            cmp AL,116
            jne .L_404575
.L_4045b4:

            mov EAX,1
            jmp .L_404469
.L_4045be:

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_4045f0]
            mov EDX,35
            mov ESI,1
            call fwrite@PLT

            mov EDI,1
            call exit@PLT
.L_4045e5:

            mov EDI,1
            jmp .L_404464
.L_4045ef:
          .byte 0x90
.L_4045f0:
          .string "invalid request to pj_param, fatal\n"
.L_404614:
          .long .L_4044a8-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4044a8-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4044a8-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4045be-.L_404614
          .long .L_4044a8-.L_404614
          .long .L_4044a8-.L_404614
.L_40465c:
          .long .L_404560-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_404548-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_404530-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_4045be-.L_40465c
          .long .L_404510-.L_40465c
          .long .L_404500-.L_40465c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_4046b0:

            lea RAX,QWORD PTR [RIP+.L_65ea20]
            ret 
.L_4046b8:
          .string "km"
.L_4046bb:
          .string "1000."
.L_4046c1:
          .string "Kilometer"
.L_4046cb:
          .string "m"
.L_4046cd:
          .string "1."
.L_4046d0:
          .string "Meter"
.L_4046d6:
          .string "dm"
.L_4046d9:
          .string "1/10"
.L_4046de:
          .string "Decimeter"
.L_4046e8:
          .string "cm"
.L_4046eb:
          .string "1/100"
.L_4046f1:
          .string "Centimeter"
.L_4046fc:
          .string "mm"
.L_4046ff:
          .string "1/1000"
.L_404706:
          .string "Millimeter"
.L_404711:
          .string "kmi"
.L_404715:
          .string "1852.0"
.L_40471c:
          .string "International Nautical Mile"
.L_404738:
          .string "in"
.L_40473b:
          .string "0.0254"
.L_404742:
          .string "International Inch"
.L_404755:
          .string "ft"
.L_404758:
          .string "0.3048"
.L_40475f:
          .string "International Foot"
# WARNING: found overlapping blocks at address 4540

.L_404772:

            jns .L_4047d8

            add BYTE PTR [RAX],DH
            cmp DWORD PTR CS:[RCX],ESI
            xor AL,52
            add BYTE PTR [RCX+110],CL
          .byte 0x74
          .byte 0x65

            jb .L_4047f0
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x59
          .byte 0x61
          .byte 0x72
          .byte 0x64
          .byte 0x0
.L_40478f:

            insd DWORD PTR [RDI],DX
            imul EAX,DWORD PTR [RAX],959460913
            xor ESI,DWORD PTR CS:[RSP+RSI*1]
            add BYTE PTR [RCX+110],CL
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x4d
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_4047b6:
          .string "fath"
.L_4047bb:
          .string "1.8288"
.L_4047c2:
          .string "International Fathom"
.L_4047d7:
          .byte 0x63
.L_4047d8:

            push 774910464
            xor DWORD PTR [RCX],ESI
            cmp BYTE PTR SS:[RAX],AL
.L_4047e2:

            outsb DX,BYTE PTR [RSI]
            je .L_40484b
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
.L_4047f0:

            push 7235937
.L_4047f6:

            insb BYTE PTR [RDI],DX
            imul EBP,DWORD PTR [RSI+107],841887744
            xor BYTE PTR [RCX],DH
            xor DWORD PTR [RSI],ESI
            cmp BYTE PTR [RAX],AL
.L_404804:
          .string "International Link"
# WARNING: found overlapping blocks at address 45d8
# WARNING: found overlapping blocks at address 45da
.L_404817:
          .string "us-in"
.L_40481d:
          .string "1./39.37"
.L_404826:
          .string "U.S. Surveyor\'s Inch"
.L_40483b:
          .string "us-ft"
.L_404841:

            xor BYTE PTR [RSI],CH
            xor ESI,DWORD PTR [RAX]
            xor AL,56
          .byte 0x30
          .byte 0x30
          .byte 0x36
          .byte 0x30
.L_40484b:

            cmp DWORD PTR [RSI],ESI
            xor BYTE PTR [RCX],DH
            xor DH,BYTE PTR [RCX]
            cmp DWORD PTR [RAX],EAX
.L_404853:

            push RBP
            push RBX
          .byte 0x2e
          .byte 0x20
          .byte 0x53
          .byte 0x75
          .byte 0x72
          .byte 0x76
          .byte 0x65
          .byte 0x79
          .byte 0x6f
          .byte 0x72
          .byte 0x27
          .byte 0x73
          .byte 0x20

            outsd DX,DWORD PTR [RSI]
            outsd DX,DWORD PTR [RSI]
            je .L_404868
.L_404868:

            jne .L_4048dd

            sub EAX,805332089
            cmp DWORD PTR CS:[RCX],ESI
            xor AL,52
            xor BYTE PTR [RCX],DH
            cmp BYTE PTR [RDX],DH
.L_404878:

            cmp BYTE PTR [RAX],BH
            xor BYTE PTR [RBX],DH
            xor EAX,777322552
            push RBX
          .byte 0x2e
          .byte 0x20
          .byte 0x53
          .byte 0x75
          .byte 0x72
          .byte 0x76

            jns .L_4048fb
          .byte 0x72
          .byte 0x27
          .byte 0x73
          .byte 0x20
          .byte 0x59
          .byte 0x61
          .byte 0x72
          .byte 0x64
          .byte 0x0
.L_404895:
          .string "us-ch"
.L_40489b:
          .string "20.11684023368047"
.L_4048ad:
          .string "U.S. Surveyor\'s Chain"
# WARNING: found overlapping blocks at address 4689
# WARNING: found overlapping blocks at address 468b
# WARNING: found overlapping blocks at address 468d
.L_4048c3:
          .string "us-mi"
.L_4048c9:

            xor DWORD PTR [RSI],ESI
            xor BYTE PTR [RCX],BH
            xor ESI,DWORD PTR CS:[RDI+RSI*1]
            xor DH,BYTE PTR [RCX]
            cmp BYTE PTR [RSI],DH
            cmp DWORD PTR [RSP+RSI*1],ESI
            xor ESI,DWORD PTR [RDI]
            add BYTE PTR [RBP+46],DL
.L_4048dd:

            push RBX
            and BYTE PTR CS:[RBX+117],DL
.L_4048e2:

            jb .L_40495a
          .byte 0x65
          .byte 0x79
          .byte 0x6f
          .byte 0x72
          .byte 0x27
          .byte 0x73
          .byte 0x20
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x74

            and BYTE PTR GS:[RBP+105],CL
            insb BYTE PTR [RDI],DX
            add BYTE PTR GS:[RCX+110],CH
          .byte 0x64
.L_4048fb:

            sub EAX,805332089
            cmp DWORD PTR CS:[RCX],ESI
            xor AL,51
            cmp DWORD PTR [RIP+.L_65fea8+1222278549],ESI
            outsb DX,BYTE PTR [RSI]
            imul ESP,DWORD PTR FS:[RCX+110],1918982432
            add BYTE PTR FS:[RCX+110],CH
            sub EAX,805336166
            xor ESI,DWORD PTR CS:[RAX]
            xor AL,55
            cmp DWORD PTR [RAX],EDI
            xor AL,49
            add BYTE PTR [RCX+110],CL
            imul ESP,DWORD PTR FS:[RCX+110],1869563424
            je .L_404934
.L_404934:

            imul EBP,DWORD PTR [RSI+100],6841133
.L_40493b:

            xor DH,BYTE PTR [RAX]
            xor DWORD PTR CS:[RCX],ESI
            cmp DWORD PTR SS:[RIP+1224750640],ESI
            outsb DX,BYTE PTR [RSI]
            imul ESP,DWORD PTR FS:[RCX+110],1634222880
            imul EBP,DWORD PTR [RSI],521088614
            test BYTE PTR [RAX],AL
.L_40495a:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
.L_404960:

            sub RSP,8
            call .L_40d340

            mov EAX,DWORD PTR [RIP+.L_65fd40]
            test EAX,EAX
            je .L_404980

            add RSP,8
            jmp .L_40d3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404980:

            mov RAX,OFFSET .L_404bd0
            mov QWORD PTR [RIP+.L_65fd60],0
            mov QWORD PTR [RIP+.L_65fd70],0
            mov QWORD PTR [RIP+.L_65fd68],RAX
            call .L_407210

            lea RDI,QWORD PTR [RIP+.L_404b55]
            mov QWORD PTR [RIP+.L_65fd78],RAX
            call getenv@PLT

            test RAX,RAX
            je .L_4049ea

            lea RDI,QWORD PTR [RIP+.L_404b55]
            call getenv@PLT

            xor ESI,ESI
            mov EDX,10
            mov RDI,RAX
            call strtol@PLT

            test EAX,EAX
            jg .L_404a00

            mov DWORD PTR [RIP+.L_65fd64],3
.L_4049ea:

            mov DWORD PTR [RIP+.L_65fd40],1
            add RSP,8
.L_4049f8:

            jmp .L_40d3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404a00:

            lea RDI,QWORD PTR [RIP+.L_404b55]
            call getenv@PLT

            mov EDX,10
            xor ESI,ESI
            mov RDI,RAX
            call strtol@PLT

            mov DWORD PTR [RIP+.L_65fd64],EAX
            jmp .L_4049ea
.L_404a23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a30:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_404a34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a40:

            mov QWORD PTR [RDI],RSI
            ret 
.L_404a44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a50:

            mov EAX,DWORD PTR [RIP+.L_65fd40]
            test EAX,EAX
            je .L_404a68

            lea RAX,QWORD PTR [RIP+.L_65fd60]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a68:

            sub RSP,8
            call .L_404960

            lea RAX,QWORD PTR [RIP+.L_65fd60]
            add RSP,8
            ret 
.L_404a7d:

            nop
            nop
            nop
.L_404a80:

            sub RSP,24
.L_404a84:

            mov EDI,32
            call malloc@PLT

            mov EDX,DWORD PTR [RIP+.L_65fd40]
            test EDX,EDX
            jne .L_404aa7

            mov QWORD PTR [RSP+8],RAX
            call .L_404960

            mov RAX,QWORD PTR [RSP+8]
.L_404aa7:

            movdqa XMM0,XMMWORD PTR [RIP+.L_65fd60]
            movups XMMWORD PTR [RAX],XMM0
            mov DWORD PTR [RAX],0
            movdqa XMM0,XMMWORD PTR [RIP+.L_65fd70]
            movups XMMWORD PTR [RAX+16],XMM0
            add RSP,24
.L_404ac8:

            ret 
.L_404ac9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ad0:

            jmp free@PLT
.L_404ad5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404ae0:

            mov EAX,DWORD PTR [RDI]
            ret 
.L_404ae3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404af0:

            test ESI,ESI
            mov DWORD PTR [RDI],ESI
            je .L_404afc

            mov DWORD PTR [RIP+.L_65fe9c],ESI
.L_404afc:

            ret 
.L_404afe:

            nop
            nop
.L_404b00:

            mov DWORD PTR [RDI+4],ESI
            ret 
.L_404b04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b10:

            mov QWORD PTR [RDI+8],RSI
            ret 
.L_404b15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b20:

            mov QWORD PTR [RDI+16],RSI
            ret 
.L_404b25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b30:

            mov RAX,QWORD PTR [RDI+16]
            ret 
.L_404b35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b40:

            mov QWORD PTR [RDI+24],RSI
            ret 
.L_404b45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b50:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_404b55:
          .string "PROJ_DEBUG"
.L_404b60:

            push R14
            push R13
            mov R14,RCX
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_404b6e:

            mov EDI,100000
            mov R12D,ESI
            mov R13,RDX
            call malloc@PLT

            test RAX,RAX
            je .L_404bc0

            mov RBX,RAX
            mov R8,R14
            mov RCX,R13
            mov EDX,100000
            mov ESI,1
            mov RDI,RAX
            call __vsprintf_chk@PLT

            mov RDI,QWORD PTR [RBP+16]
            mov RDX,RBX
            mov ESI,R12D
            call QWORD PTR [RBP+8]

            mov RDI,RBX
            pop RBX
.L_404baf:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404bc0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_404bc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404bd0:

            mov RDI,QWORD PTR [RIP+stderr]
            mov RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_404cca]
            mov ESI,1
            xor EAX,EAX
            jmp __fprintf_chk@PLT
.L_404bed:

            nop
            nop
            nop
.L_404bf0:

            cmp DWORD PTR [RDI+4],ESI
            jge .L_404c00

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c00:

            jmp .L_404b60
.L_404c05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c10:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_404c61

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_404c61:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp DWORD PTR [RDI+4],ESI
            jge .L_404c90
.L_404c76:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_404cc5

            add RSP,216

            ret 
          .byte 0x66
          .byte 0x90
.L_404c90:

            lea RAX,QWORD PTR [RSP+224]
            cmp ESI,DWORD PTR [RDI+4]
            mov DWORD PTR [RSP],24
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            jg .L_404c76

            mov RCX,RSP
            call .L_404b60

            jmp .L_404c76
.L_404cc5:

            call __stack_chk_fail@PLT
.L_404cca:

            and EAX,1711278707
            nop
.L_404cd0:

            test EDX,EDX
            jne .L_404dd0

            movsd XMM2,QWORD PTR [RIP+.L_4060d8]
            ucomisd XMM1,XMM2
            jbe .L_404fa0

            movsd XMM4,QWORD PTR [RIP+.L_4060b8]
            ucomisd XMM4,XMM0
            ja .L_405058

            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
            xor R8D,R8D
            movapd XMM5,XMM3
.L_404d0b:

            ucomisd XMM0,XMM4
            pxor XMM4,XMM4
            jb .L_404d1f

            ucomisd XMM4,XMM0
            ja .L_4050d0
.L_404d1f:

            ucomisd XMM0,XMM4
            jb .L_404d31

            ucomisd XMM3,XMM0
            mov R9D,2
            ja .L_404d3f
.L_404d31:

            movsd XMM2,QWORD PTR [RIP+.L_4060c8]
            mov R9D,3
.L_404d3f:

            test R8D,R8D
            jne .L_404fdf
.L_404d48:

            mov ECX,R9D
            lea RAX,QWORD PTR [RIP+.L_65ece0]
            sub ECX,EDI
            add ECX,3
            cmp ECX,6
            ja .L_404d6e
.L_404d5c:

            lea RSI,QWORD PTR [RIP+.L_406020]
            movsxd RCX,DWORD PTR [RSI+RCX*4]
            shl RCX,5
            add RAX,RCX
.L_404d6e:

            subsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RAX]
            subsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RAX+8]
            test EDX,EDX
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RAX+16]
            mulsd XMM5,XMM1
            mulsd XMM1,QWORD PTR [RAX+24]
            addsd XMM2,XMM4
            addsd XMM0,XMM4
            addsd XMM2,XMM5
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4060e0]
            je .L_404dc2

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R9D
            mulsd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_4060c8]
.L_404dc2:

            addsd XMM0,XMM2
            addsd XMM1,XMM3
.L_404dca:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404dd0:

            movsd XMM4,QWORD PTR [RIP+.L_4060d8]
            ucomisd XMM1,XMM4
            jbe .L_404ea8

            pxor XMM5,XMM5
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
            cvtsi2sd XMM5,EDI
            mulsd XMM5,XMM3
            subsd XMM6,XMM5
            movapd XMM2,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_4060c8]
            movapd XMM5,XMM6
            xorpd XMM5,XMMWORD PTR [RIP+.L_4061a0]
            subsd XMM5,XMM4
            movapd XMM4,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_4060e8]
            movapd XMM7,XMM4
            subsd XMM7,XMM5
            ucomisd XMM1,XMM7
            jae .L_405000
.L_404e38:

            addsd XMM4,XMM5
            ucomisd XMM1,XMM4
            jbe .L_404e5c

            movsd XMM7,QWORD PTR [RIP+.L_4060f0]
            addsd XMM7,XMM6
            subsd XMM7,XMM5
            ucomisd XMM1,XMM7
            jae .L_4050c0
.L_404e5c:

            ucomisd XMM4,XMM1
            jb .L_404e7b

            addsd XMM6,QWORD PTR [RIP+.L_4060f0]
            lea EAX,DWORD PTR [RDI+3]
            addsd XMM5,XMM6
            ucomisd XMM1,XMM5
            ja .L_40501d
.L_404e7b:

            mov ECX,3
.L_404e80:

            mov EAX,ECX
            lea RCX,QWORD PTR [RIP+.L_406020]
            mov R9D,EDI
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            lea RCX,QWORD PTR [RIP+.L_65ece0]
            shl RAX,5
            add RAX,RCX
            jmp .L_405047
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ea8:

            movsd XMM2,QWORD PTR [RIP+.L_4060d0]
            ucomisd XMM2,XMM1
            jbe .L_404dca

            pxor XMM5,XMM5
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
            cvtsi2sd XMM5,ESI
            mulsd XMM5,XMM3
            subsd XMM6,XMM5
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_4060e8]
            subsd XMM2,QWORD PTR [RIP+.L_4060c8]
            addsd XMM4,XMM6
            movapd XMM7,XMM4
            addsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jb .L_404f21

            movapd XMM7,XMM6
            lea EAX,DWORD PTR [RSI+1]
            xorpd XMM7,XMMWORD PTR [RIP+.L_4061a0]
            subsd XMM7,QWORD PTR [RIP+.L_4060f0]
            addsd XMM7,XMM5
            ucomisd XMM1,XMM7
            ja .L_405083
.L_404f21:

            subsd XMM4,XMM5
            ucomisd XMM4,XMM1
            jbe .L_404f4d

            movapd XMM7,XMM6
            xorpd XMM7,XMMWORD PTR [RIP+.L_4061a0]
            subsd XMM7,QWORD PTR [RIP+.L_4060f0]
            addsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jae .L_405080
.L_404f4d:

            ucomisd XMM1,XMM4
            jb .L_404f74

            xorpd XMM6,XMMWORD PTR [RIP+.L_4061a0]
            lea EAX,DWORD PTR [RSI+3]
            subsd XMM6,QWORD PTR [RIP+.L_4060f0]
            subsd XMM6,XMM5
            ucomisd XMM6,XMM1
            ja .L_405083
.L_404f74:

            mov EDI,3
.L_404f79:

            lea RAX,QWORD PTR [RIP+.L_406020]
            lea RCX,QWORD PTR [RIP+.L_65ece0]
            mov R9D,ESI
            movsxd RAX,DWORD PTR [RAX+RDI*4]
            shl RAX,5
            add RAX,RCX
            jmp .L_4050af
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404fa0:

            movsd XMM3,QWORD PTR [RIP+.L_4060d0]
            ucomisd XMM3,XMM1
            jbe .L_404dca

            movsd XMM4,QWORD PTR [RIP+.L_4060b8]
            ucomisd XMM4,XMM0
            jbe .L_4050e3

            movapd XMM5,XMM4
            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [RIP+.L_4060e0]
            xor R9D,R9D
            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
.L_404fdf:

            sub ESI,R9D
            lea RAX,QWORD PTR [RIP+.L_65ece0]
            lea ECX,DWORD PTR [RSI+3]
            cmp ECX,6
            ja .L_404d6e

            jmp .L_404d5c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405000:

            movsd XMM7,QWORD PTR [RIP+.L_4060f0]
            lea EAX,DWORD PTR [RDI+1]
            addsd XMM7,XMM6
            subsd XMM7,XMM5
            ucomisd XMM7,XMM1
            jbe .L_404e38
.L_40501d:

            mov ECX,EAX
            sar ECX,31
            shr ECX,30
            add EAX,ECX
            and EAX,3
            sub EAX,ECX
            sub EDI,EAX
            mov R9D,EAX
            lea RAX,QWORD PTR [RIP+.L_65ece0]
            lea ECX,DWORD PTR [RDI+3]
            mov EDI,R9D
            cmp ECX,6
            jbe .L_404e80
.L_405047:

            movapd XMM5,XMM3
            pxor XMM4,XMM4
            jmp .L_404d6e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405058:

            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
            xor R9D,R9D
            movsd XMM2,QWORD PTR [RIP+.L_4060e0]
            movapd XMM5,XMM3
            pxor XMM4,XMM4
            jmp .L_404d48
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405080:

            lea EAX,DWORD PTR [RSI+2]
.L_405083:

            mov ECX,EAX
            sar ECX,31
            shr ECX,30
            add EAX,ECX
            and EAX,3
            sub EAX,ECX
            mov EDI,EAX
            mov R9D,EAX
            lea RAX,QWORD PTR [RIP+.L_65ece0]
            sub EDI,ESI
            mov ESI,R9D
            add EDI,3
            cmp EDI,6
            jbe .L_404f79
.L_4050af:

            movsd XMM5,QWORD PTR [RIP+.L_4060b8]
            pxor XMM4,XMM4
            jmp .L_404d6e
.L_4050c0:

            lea EAX,DWORD PTR [RDI+2]
            jmp .L_40501d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4050d0:

            movsd XMM2,QWORD PTR [RIP+.L_4060d0]
            mov R9D,1
            jmp .L_404d3f
.L_4050e3:

            mov R8D,1
            movapd XMM5,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_4060c0]
            jmp .L_404d0b
.L_4050fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405100:

            test RDI,RDI
            je .L_405138

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_405130

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            test RDI,RDI
            je .L_405124

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_405124:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_405130:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405138:

            xor EAX,EAX
            ret 
.L_40513b:

            nop
            nop
            nop
            nop
            nop
.L_405140:

            jmp .L_405100
.L_405142:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405150:

            sub RSP,24
.L_405154:

            movapd XMM3,XMM1
            movq XMM6,QWORD PTR [RIP+.L_4061b0]
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4060d8]
            andpd XMM3,XMM6
            ucomisd XMM1,XMM3
            jae .L_405290

            movsd XMM2,QWORD PTR [RIP+.L_4060c0]
            ucomisd XMM2,XMM3
            ja .L_4051b0

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            ucomisd XMM4,XMM0
            jbe .L_405338
.L_40519a:

            movsd XMM2,QWORD PTR [RIP+.L_406108]
            add RSP,24
.L_4051a6:

            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4051b0:

            movapd XMM8,XMM0
            movsd XMM9,QWORD PTR [RIP+.L_406120]
            addsd XMM8,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_406128]
            movsd XMM11,QWORD PTR [RIP+.L_406130]
            movsd XMM7,QWORD PTR [RIP+.L_4060f8]
            divsd XMM8,XMM9
            addsd XMM8,XMM5
            movapd XMM10,XMM8
            movapd XMM1,XMM8
            andpd XMM10,XMM6
            ucomisd XMM11,XMM10
            ja .L_4052d8
.L_405200:

            movsd XMM8,QWORD PTR [RIP+.L_406138]
            movsd XMM6,QWORD PTR [RIP+.L_4060c8]
            ucomisd XMM1,XMM8
            jb .L_4052c0
.L_40521c:

            mulsd XMM3,XMM8
            subsd XMM0,XMM6
            movapd XMM1,XMM7
            divsd XMM3,XMM9
            movapd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM5,XMM3
            ucomisd XMM4,XMM0
            divsd XMM2,XMM5
            movapd XMM3,XMM5
            addsd XMM2,XMM6
            jbe .L_405318
.L_405250:

            mulsd XMM3,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            divsd XMM3,QWORD PTR [RIP+.L_406140]
            subsd XMM7,XMM3
            movapd XMM0,XMM7
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
.L_405283:

            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405290:

            mulsd XMM4,QWORD PTR [RIP+.L_406110]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_406118]
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_4052c0:

            mulsd XMM1,XMM2
            subsd XMM1,XMM6
            movapd XMM6,XMM1
            jmp .L_40521c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4052d8:

            cvttsd2si RAX,XMM8
            pxor XMM10,XMM10
            andnpd XMM6,XMM8
            cvtsi2sd XMM10,RAX
            movapd XMM12,XMM10
            cmpnlesd XMM12,XMM8
            movapd XMM1,XMM12
            andpd XMM1,XMM7
            subsd XMM10,XMM1
            movapd XMM1,XMM10
            orpd XMM1,XMM6
            jmp .L_405200
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405318:

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_406100]
            ja .L_405250

            pxor XMM1,XMM1
            jmp .L_405250
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405338:

            ucomisd XMM0,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_4060b8]
            ja .L_40519a

            pxor XMM1,XMM1
            jmp .L_40519a
.L_405353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405360:

            sub RSP,72
.L_405364:

            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movq XMM4,QWORD PTR [RIP+.L_4061b0]
            movapd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_406148]
            movsd XMM3,QWORD PTR [RSP+16]
            andpd XMM2,XMM4
            ucomisd XMM6,XMM2
            jb .L_4053c8

            movsd XMM1,QWORD PTR [RIP+.L_406150]
            movsd XMM5,QWORD PTR [RSP+24]
            add RSP,72
.L_4053bb:

            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4053c8:

            movsd XMM8,QWORD PTR [RIP+.L_4060f8]
            andpd XMM0,XMM4
            movapd XMM7,XMM8
            pxor XMM6,XMM6
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_406140]
            mulsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM7,XMM0
            ja .L_4054f3
.L_4053fc:

            movapd XMM5,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_406128]
            movsd XMM10,QWORD PTR [RIP+.L_406130]
            addsd XMM5,XMM3
            divsd XMM5,QWORD PTR [RIP+.L_406120]
            addsd XMM5,XMM2
            movapd XMM9,XMM5
            movapd XMM0,XMM5
            andpd XMM9,XMM4
            ucomisd XMM10,XMM9
            ja .L_405498
.L_405436:

            ucomisd XMM0,QWORD PTR [RIP+.L_406138]
            movsd XMM5,QWORD PTR [RIP+.L_4060c8]
            jb .L_405480
.L_405448:

            subsd XMM3,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_4060d8]
            ucomisd XMM1,XMM6
            mulsd XMM3,XMM7
            addsd XMM5,XMM3
            jbe .L_4054d8
.L_405462:

            subsd XMM2,XMM7
            add RSP,72
.L_40546a:

            movapd XMM1,XMM2
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405480:

            mulsd XMM0,QWORD PTR [RIP+.L_4060c0]
            subsd XMM0,XMM5
            movapd XMM5,XMM0
            jmp .L_405448
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405498:

            cvttsd2si RAX,XMM5
            pxor XMM9,XMM9
            andnpd XMM4,XMM5
            cvtsi2sd XMM9,RAX
            movapd XMM11,XMM9
            cmpnlesd XMM11,XMM5
            movapd XMM0,XMM11
            andpd XMM0,XMM8
            subsd XMM9,XMM0
            movapd XMM0,XMM9
            orpd XMM0,XMM4
            jmp .L_405436
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4054d8:

            ucomisd XMM6,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_4060d0]
            ja .L_405462

            pxor XMM0,XMM0
            jmp .L_405462
.L_4054f3:

            movsd QWORD PTR [RSP+56],XMM6
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM4,XMMWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            jmp .L_4053fc
.L_405546:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405550:

            jmp .L_405360
.L_405555:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405560:

            push RBX
            mov RBX,QWORD PTR [RDI+32]
            call .L_405360

            mov ESI,DWORD PTR [RBX+4]
            mov EDI,DWORD PTR [RBX]
            xor EDX,EDX
            pop RBX
            jmp .L_404cd0
.L_405577:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405580:

            lea EDX,DWORD PTR [RDI-1]
            mov RAX,RSI
            shl RDX,4
            lea RDX,QWORD PTR [RSI+RDX*1+16]
            nop
.L_405590:

            ucomisd XMM0,QWORD PTR [RAX]
            jp .L_4055a5

            jne .L_4055a5

            ucomisd XMM1,QWORD PTR [RAX+8]
            jp .L_4055a5

            je .L_405668
.L_4055a5:

            add RAX,16
            cmp RDX,RAX
            jne .L_405590

            movsd XMM6,QWORD PTR [RSI]
            xor R8D,R8D
            movsd XMM3,QWORD PTR [RSI+8]
            mov ECX,1
            mov R9D,1
            nop
            nop
            nop
.L_4055c8:

            mov EAX,ECX
            movapd XMM5,XMM3
            cdq 
            idiv EDI
            movsxd RDX,EDX
            shl RDX,4
            add RDX,RSI
            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM4,QWORD PTR [RDX]
            minsd XMM5,XMM2
            ucomisd XMM1,XMM5
            jbe .L_405620

            movapd XMM5,XMM3
            maxsd XMM5,XMM2
            ucomisd XMM5,XMM1
            jb .L_405620

            ucomisd XMM2,XMM3
            setp AL
            cmovne EAX,R9D
            ucomisd XMM6,XMM4
            jbe .L_405640

            ucomisd XMM6,XMM0
            jb .L_405620

            test AL,AL
            jne .L_405670

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405620:

            add ECX,1
            movapd XMM3,XMM2
            cmp EDI,ECX
            movapd XMM6,XMM4
            jne .L_4055c8
.L_40562f:

            mov EAX,R8D
            and EAX,1
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405640:

            ucomisd XMM4,XMM0
            jb .L_405620

            test AL,AL
            je .L_405620

            ucomisd XMM4,XMM6
            jp .L_405652

            je .L_40569a
.L_405652:

            movapd XMM5,XMM1
            movapd XMM7,XMM4
            subsd XMM5,XMM3
            subsd XMM7,XMM6
            jmp .L_405680
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405668:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_405670:

            movapd XMM5,XMM4
            movapd XMM7,XMM1
            subsd XMM5,XMM6
            subsd XMM7,XMM3
.L_405680:

            mulsd XMM5,XMM7
            movapd XMM7,XMM2
            subsd XMM7,XMM3
            divsd XMM5,XMM7
            addsd XMM6,XMM5
            ucomisd XMM6,XMM0
            jb .L_405620
.L_40569a:

            add ECX,1
            add R8D,1
            cmp EDI,ECX
            movapd XMM3,XMM2
            movapd XMM6,XMM4
            jne .L_4055c8

            jmp .L_40562f
.L_4056b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4056c0:

            sub RSP,312
.L_4056c7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+296],RAX
            xor EAX,EAX
            test EDI,EDI
            je .L_405860

            pxor XMM2,XMM2
            mov EDI,12
            movsd XMM7,QWORD PTR [RIP+.L_4060c0]
            movsd XMM6,QWORD PTR [RIP+.L_406120]
            cvtsi2sd XMM2,ESI
            mov RSI,RSP
            movsd XMM5,QWORD PTR [RIP+.L_4060e8]
            movsd XMM8,QWORD PTR [RIP+.L_406160]
            movsd XMM9,QWORD PTR [RIP+.L_406168]
            movsd XMM4,QWORD PTR [RIP+.L_406158]
            movsd QWORD PTR [RSP+8],XMM8
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+72],XMM8
            movsd QWORD PTR [RSP+88],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_406178]
            movsd QWORD PTR [RSP],XMM4
            movapd XMM3,XMM2
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+56],XMM9
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP+104],XMM8
            movsd QWORD PTR [RSP+120],XMM8
            movsd QWORD PTR [RSP+168],XMM8
            subsd XMM3,XMM6
            subsd XMM3,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4060f8]
            addsd XMM2,XMM3
            mulsd XMM2,XMM7
            subsd XMM2,XMM6
            addsd XMM2,XMM5
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_406170]
            movsd QWORD PTR [RSP+80],XMM2
            movsd QWORD PTR [RSP+96],XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EDX
            addsd XMM3,XMM2
            mulsd XMM2,XMM7
            mulsd XMM3,XMM7
            subsd XMM2,XMM6
            subsd XMM3,XMM6
            subsd XMM2,XMM5
            addsd XMM3,XMM5
            movsd QWORD PTR [RSP+144],XMM2
            movsd QWORD PTR [RSP+160],XMM2
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+128],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_406180]
            movsd QWORD PTR [RSP+136],XMM3
            movsd QWORD PTR [RSP+152],XMM3
            movsd QWORD PTR [RSP+176],XMM4
            movsd QWORD PTR [RSP+184],XMM8
            call .L_405580
.L_40583f:

            mov RCX,QWORD PTR [RSP+296]
            xor RCX,QWORD PTR FS:[40]
            jne .L_405881

            add RSP,312
.L_405859:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405860:

            mov RDI,RSP
            lea RSI,QWORD PTR [RIP+.L_405f00]
            mov ECX,36

            rep movsq 

            mov RSI,RSP
            mov EDI,18
            call .L_405580

            jmp .L_40583f
.L_405881:

            call __stack_chk_fail@PLT
.L_405886:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405890:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967281
            call .L_404af0

            movsd XMM0,QWORD PTR [RIP+.L_406188]
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_4058b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4058c0:

            push RBX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_4056c0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_405900

            add RSP,16
            movapd XMM0,XMM3
            pop RBX
            movapd XMM1,XMM2
            jmp .L_405150
          .byte 0x90
.L_405900:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_405890
.L_40590a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405910:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_40591b:

            mov RAX,QWORD PTR [RDI+32]
            mov EDI,1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            mov EBP,DWORD PTR [RAX+4]
            mov EBX,DWORD PTR [RAX]
            mov EDX,EBP
            mov ESI,EBX
            call .L_4056c0

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_405970

            movapd XMM1,XMM3
            mov ESI,EBP
            movapd XMM0,XMM2
            mov EDI,EBX
            mov EDX,1
            call .L_404cd0

            add RSP,16
.L_405966:

            pop RBX
            pop RBP
            pop R12
            jmp .L_405150
          .byte 0x90
.L_405970:

            add RSP,16
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            jmp .L_405890
.L_405980:

            push RBX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            xor EDI,EDI
            sub RSP,16
.L_40598e:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_4056c0

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_4059e8

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            call .L_405150

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            mov RDI,QWORD PTR [RAX+16]
            call .L_44a3e0

            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
.L_4059d9:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4059e8:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_405890
.L_4059f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405a00:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_405a0b:

            mov RAX,QWORD PTR [RDI+32]
            mov EDI,1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            mov R12D,DWORD PTR [RAX+4]
            mov EBP,DWORD PTR [RAX]
            mov EDX,R12D
            mov ESI,EBP
            call .L_4056c0

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_405a90

            movapd XMM0,XMM2
            mov ESI,R12D
            movapd XMM1,XMM3
            mov EDI,EBP
            mov EDX,1
            call .L_404cd0

            call .L_405150

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            mov RDI,QWORD PTR [RAX+16]
            call .L_44a3e0

            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
.L_405a79:

            movapd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405a90:

            add RSP,16
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_405890
.L_405aa0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_405aa9:

            mov RBP,QWORD PTR [RDI+32]
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4060f8]
            movsd XMM1,QWORD PTR [RBX+168]
            subsd XMM2,QWORD PTR [RBX+176]
            call .L_44d3b0

            divsd XMM0,QWORD PTR [RBP+8]
            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_4061b0]
            ucomisd XMM1,QWORD PTR [RIP+.L_4060f8]
            jbe .L_405afc

            pxor XMM1,XMM1
            ucomisd XMM0,XMM1
            jbe .L_405b10

            movsd XMM0,QWORD PTR [RIP+.L_4060f8]
.L_405afc:

            add RSP,8
.L_405b00:

            pop RBX
            pop RBP
            jmp asin@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405b10:

            ucomisd XMM1,XMM0
            ja .L_405b20

            pxor XMM0,XMM0
            jmp .L_405afc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405b20:

            movsd XMM0,QWORD PTR [RIP+.L_406100]
            jmp .L_405afc
.L_405b2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405b30:

            push RBX
            sub RSP,16
            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call .L_405aa0

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            call .L_405360

            mov ESI,DWORD PTR [RBX+4]
            mov EDI,DWORD PTR [RBX]
            add RSP,16
            pop RBX
            xor EDX,EDX
            jmp .L_404cd0
.L_405b6c:

            nop
            nop
            nop
            nop
.L_405b70:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call .L_405aa0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            jmp .L_405360
.L_405b9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405ba0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_405bb3:

            call .L_403c70

            test RAX,RAX
            je .L_405c90

            pxor XMM3,XMM3
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_405c00

            jne .L_405c00

            lea RAX,QWORD PTR [RIP+.L_405550]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4058c0]
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_405bf6:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405c00:

            movsd QWORD PTR [RSP],XMM3
            call .L_44a350

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP+16],RAX
            movsd XMM0,QWORD PTR [RIP+.L_4060f8]
            call .L_44d3b0

            movsd QWORD PTR [RBP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_406190]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_405c9e
.L_405c4f:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_405b70]
            movsd XMM4,QWORD PTR [RIP+.L_4060f8]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405980]
            divsd XMM4,XMM1
            mov QWORD PTR [RBX+48],RAX
            movsd QWORD PTR [RBX+128],XMM1
            mov RAX,RBX
            movsd QWORD PTR [RBX+144],XMM4
            add RSP,24
.L_405c8c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_405c90:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_405100
.L_405c9e:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_405c4f
.L_405cbb:

            nop
            nop
            nop
            nop
            nop
.L_405cc0:

            test RDI,RDI
            je .L_405cd0

            jmp .L_405ba0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405cd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_405cfe

            lea RDX,QWORD PTR [RIP+.L_405140]
            lea RCX,QWORD PTR [RIP+.L_406080]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_405cfe:

            add RSP,8
            ret 
.L_405d03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405d10:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_405d23:

            call .L_403c70

            test RAX,RAX
            je .L_405db5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_406096]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4060a4]
            mov DWORD PTR [RBP],EAX
            call .L_4043f0

            cmp DWORD PTR [RBP],3
            mov DWORD PTR [RBP+4],EAX
            ja .L_405da8

            cmp EAX,3
            ja .L_405da8

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_405dc8

            jne .L_405dc8

            lea RAX,QWORD PTR [RIP+.L_405560]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405910]
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_405d9d:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405da8:

            mov ESI,4294967249
            mov RDI,RBX
            call .L_415fe0
.L_405db5:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_405100
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405dc8:

            movsd QWORD PTR [RSP],XMM3
            call .L_44a350

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            mov QWORD PTR [RBP+16],RAX
            movsd XMM0,QWORD PTR [RIP+.L_4060f8]
            call .L_44d3b0

            movsd QWORD PTR [RBP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_406190]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_405e57
.L_405e17:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_405b30]
            movsd XMM4,QWORD PTR [RIP+.L_4060f8]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405a00]
            divsd XMM4,XMM1
            mov QWORD PTR [RBX+48],RAX
            movsd QWORD PTR [RBX+128],XMM1
            mov RAX,RBX
            movsd QWORD PTR [RBX+144],XMM4
            add RSP,24
.L_405e54:

            pop RBX
            pop RBP
            ret 
.L_405e57:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_405e17
.L_405e74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405e80:

            test RDI,RDI
            je .L_405e90

            jmp .L_405d10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405e90:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_405ebe

            lea RDX,QWORD PTR [RIP+.L_405140]
            lea RCX,QWORD PTR [RIP+.L_406040]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_405ebe:

            add RSP,8
            ret 
.L_405ec3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ed0:

            xor EAX,EAX
            ret 
.L_405ed3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ee0:

            xor EAX,EAX
            ret 
.L_405ee3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405f00:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
          .byte 0x1d
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_406020:
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406040:
          .string "rHEALPix\n\tSph., Ellps.\n\tnorth_square= south_square="
          .zero 12
.L_406080:
          .string "HEALPix\n\tSph., Ellps."
.L_406096:
          .string "inorth_square"
.L_4060a4:
          .string "isouth_square"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4060b8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_4060c0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4060c8:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
.L_4060d0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_4060d8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_4060e0:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
.L_4060e8:
          .byte 0x16
          .byte 0x56
          .byte 0xe7
          .byte 0x9e
          .byte 0xaf
          .byte 0x3
          .byte 0xd2
          .byte 0x3c
.L_4060f0:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0xf
          .byte 0x40
.L_4060f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_406100:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_406108:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_406110:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_406118:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x22
          .byte 0x40
.L_406120:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_406128:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_406130:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_406138:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_406140:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_406148:
          .byte 0xde
          .byte 0x68
          .byte 0x4f
          .byte 0xd0
          .byte 0xed
          .byte 0x59
          .byte 0xe7
          .byte 0x3f
.L_406150:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0xf2
          .byte 0x3f
.L_406158:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_406160:
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_406168:
          .byte 0xd4
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0x40
.L_406170:
          .byte 0x1a
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_406178:
          .byte 0x21
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_406180:
          .byte 0xd4
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x2
          .byte 0xc0
.L_406188:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_406190:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4061a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4061b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4061c0:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_406520]
            mulsd XMM3,XMM1
            movapd XMM4,XMM3
            mulsd XMM2,XMM3
            movapd XMM5,XMM3
            mulsd XMM4,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_406528]
            mulsd XMM5,XMM4
            mulsd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_406558]
            mulsd XMM5,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_406530]
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_406538]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_406540]
            mulsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_406548]
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_406550]
            addsd XMM2,XMM5
            mulsd XMM2,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_406560]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_406568]
            mulsd XMM1,XMM2
            ret 
.L_406255:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406260:

            test RDI,RDI
            je .L_406270

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406270:

            ret 
.L_406272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406280:

            sub RSP,24
.L_406284:

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44f380-298512]
            ucomisd XMM1,XMM0
            ja .L_406418

            movsd XMM2,QWORD PTR [RIP+.L_406578]
            movapd XMM0,XMM1
            cmpnltsd XMM0,XMM2
            andpd XMM1,XMM0
            andnpd XMM0,XMM2
            orpd XMM1,XMM0
.L_4062b8:

            movapd XMM6,XMM1
            mov EAX,100
            movsd XMM15,QWORD PTR [RIP+.L_406548]
            movsd XMM14,QWORD PTR [RIP+.L_406550]
            movsd XMM13,QWORD PTR [RIP+.L_406558]
            movsd XMM12,QWORD PTR [RIP+.L_406560]
            movsd XMM7,QWORD PTR [RIP+.L_406568]
            movsd XMM11,QWORD PTR [RIP+.L_406580]
            movsd XMM10,QWORD PTR [RIP+.L_44f380-298488]
            movq XMM9,QWORD PTR [RIP+.L_4065b0]
            movsd XMM8,QWORD PTR [RIP+.L_44f380-298464]
            jmp .L_406321
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406318:

            sub EAX,1
            je .L_406428
.L_406321:

            movapd XMM2,XMM6
            movsd XMM5,QWORD PTR [RIP+.L_406590]
            mulsd XMM2,XMM6
            movapd XMM3,XMM2
            movapd XMM0,XMM2
            mulsd XMM3,XMM2
            mulsd XMM0,XMM15
            movapd XMM4,XMM3
            mulsd XMM5,XMM3
            subsd XMM0,XMM14
            mulsd XMM4,XMM13
            addsd XMM0,XMM4
            movapd XMM4,XMM2
            mulsd XMM4,XMM11
            mulsd XMM0,XMM3
            subsd XMM4,XMM10
            addsd XMM0,XMM12
            addsd XMM4,XMM5
            mulsd XMM0,XMM2
            mulsd XMM3,XMM4
            addsd XMM0,XMM7
            addsd XMM3,QWORD PTR [RIP+.L_44f380-298472]
            mulsd XMM0,XMM6
            mulsd XMM2,XMM3
            subsd XMM0,XMM1
            addsd XMM2,XMM7
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            andpd XMM0,XMM9
            ucomisd XMM8,XMM0
            jbe .L_406318
.L_4063af:

            movapd XMM1,XMM6
            movsd XMM2,QWORD PTR [RIP+.L_406520]
            mulsd XMM1,XMM6
            movsd XMM7,QWORD PTR [RSP]
            movapd XMM0,XMM1
            mulsd XMM2,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_406528]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_406530]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_406538]
            mulsd XMM0,XMM1
            movapd XMM1,XMM6
            addsd XMM0,QWORD PTR [RIP+.L_406540]
            add RSP,24
.L_406408:

            divsd XMM7,XMM0
            movapd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406418:

            movapd XMM1,XMM0
            jmp .L_4062b8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406428:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM6
            call .L_404af0

            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4063af
.L_406446:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406450:

            test RDI,RDI
            je .L_406480

            lea RAX,QWORD PTR [RIP+.L_406280]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4061c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406480:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4064ae

            lea RDX,QWORD PTR [RIP+.L_406260]
            lea RCX,QWORD PTR [RIP+.L_406500]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4064ae:

            add RSP,8
            ret 
.L_4064b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4064c0:

            lea RDX,QWORD PTR [RIP+.L_406280]
            lea RCX,QWORD PTR [RIP+.L_4061c0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4064e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4064f0:

            xor EAX,EAX
            ret 
.L_4064f3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406500:
          .string "Natural Earth\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406520:

            hlt 
          .byte 0xa5
          .byte 0xb7
          .byte 0x3f
          .byte 0x17
          .byte 0xd
          .byte 0x59
          .byte 0xbf
.L_406528:
          .byte 0x3d
          .byte 0x60
          .byte 0x1e
          .byte 0x32
          .byte 0xe5
          .byte 0x43
          .byte 0x70
          .byte 0x3f
.L_406530:
          .byte 0x41
          .byte 0x45
          .byte 0xd5
          .byte 0xaf
          .byte 0x74
          .byte 0x3e
          .byte 0x8c
          .byte 0x3f
.L_406538:
          .byte 0xd6
          .byte 0x1f
          .byte 0x61
          .byte 0x18
          .byte 0xb0
          .byte 0xe4
          .byte 0xc0
          .byte 0x3f
.L_406540:
          .byte 0x6
          .byte 0x12
          .byte 0x14
          .byte 0x3f
          .byte 0xc6
          .byte 0xdc
          .byte 0xeb
          .byte 0x3f
.L_406548:
          .byte 0xed
          .byte 0x9d
          .byte 0xd1
          .byte 0x56
          .byte 0x25
          .byte 0x91
          .byte 0x9d
          .byte 0x3f
.L_406550:
          .byte 0xda
          .byte 0xac
          .byte 0xfa
          .byte 0x5c
          .byte 0x6d
          .byte 0xc5
          .byte 0xa6
          .byte 0x3f
.L_406558:
          .byte 0xdb
          .byte 0xc3
          .byte 0x5e
          .byte 0x28
          .byte 0x60
          .byte 0x3b
          .byte 0x78
          .byte 0xbf
.L_406560:
          .byte 0xf7
          .byte 0x1
          .byte 0x48
          .byte 0x6d
          .byte 0xe2
          .byte 0xe4
          .byte 0x8e
          .byte 0x3f
.L_406568:

            in AL,154
            add BL,BYTE PTR [RCX-633343971]
            add BYTE PTR [RDI+RCX*4+1073136166],DH
.L_406578:

            fiadd DWORD PTR [RAX]
            mov AH,143
            ret 49142
.L_406580:
          .byte 0xd5
          .byte 0xe8
          .byte 0xd5
          .byte 0x0
          .byte 0xa5
.L_406585:

            movabs EAX,DWORD PTR [-1387195154342920240]
            sar DWORD PTR [RDI],CL
.L_406590:

            cmpsd DWORD PTR [RSI],DWORD PTR [RDI]
            rcr DWORD PTR ES:[RBX],210
            test AL,176
            mov EDI,3522560377
            test EAX,2503976747
            jns .L_406585
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4065b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4065c0:

            movapd XMM2,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_406920]
            mulsd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_406930]
            movapd XMM4,XMM2
            mulsd XMM3,XMM2
            movapd XMM5,XMM2
            mulsd XMM4,XMM2
            subsd XMM3,QWORD PTR [RIP+.L_406928]
            mulsd XMM6,XMM4
            mulsd XMM5,XMM4
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_406938]
            mulsd XMM6,XMM5
            mulsd XMM5,XMM5
            addsd XMM3,XMM6
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_406940]
            mulsd XMM5,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_406950]
            addsd XMM5,QWORD PTR [RIP+.L_406948]
            subsd XMM2,QWORD PTR [RIP+.L_406958]
            addsd XMM3,XMM5
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_406960]
            mulsd XMM3,XMM4
            mulsd XMM4,XMM4
            addsd XMM2,XMM3
            mulsd XMM2,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_406968]
            mulsd XMM1,XMM2
            ret 
.L_406665:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406670:

            test RDI,RDI
            je .L_406680

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406680:

            ret 
.L_406682:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406690:

            sub RSP,24
.L_406694:

            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_406970]
            ucomisd XMM1,XMM0
            ja .L_406820

            movsd XMM2,QWORD PTR [RIP+.L_44f380-297480]
            movapd XMM0,XMM1
            cmpnltsd XMM0,XMM2
            andpd XMM1,XMM0
            andnpd XMM0,XMM2
            orpd XMM1,XMM0
.L_4066c8:

            movapd XMM6,XMM1
            mov EAX,100
            movsd XMM15,QWORD PTR [RIP+.L_406950]
            movsd XMM14,QWORD PTR [RIP+.L_406958]
            movsd XMM13,QWORD PTR [RIP+.L_406960]
            movsd XMM7,QWORD PTR [RIP+.L_406968]
            movsd XMM12,QWORD PTR [RIP+.L_44f380-297472]
            movsd XMM11,QWORD PTR [RIP+.L_406988]
            movsd XMM10,QWORD PTR [RIP+.L_406990]
            movq XMM9,QWORD PTR [RIP+.L_4069a0]
            movsd XMM8,QWORD PTR [RIP+.L_406998]
            jmp .L_406731
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406728:

            sub EAX,1
            je .L_406830
.L_406731:

            movapd XMM2,XMM6
            mulsd XMM2,XMM6
            movapd XMM4,XMM2
            movapd XMM0,XMM2
            mulsd XMM4,XMM2
            mulsd XMM0,XMM15
            mulsd XMM2,XMM12
            movapd XMM5,XMM4
            subsd XMM0,XMM14
            movapd XMM3,XMM4
            mulsd XMM5,XMM13
            subsd XMM2,XMM11
            mulsd XMM3,XMM4
            mulsd XMM4,XMM10
            addsd XMM0,XMM5
            addsd XMM2,XMM4
            mulsd XMM0,XMM3
            mulsd XMM2,XMM3
            addsd XMM0,XMM7
            addsd XMM2,XMM7
            mulsd XMM0,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            andpd XMM0,XMM9
            ucomisd XMM8,XMM0
            jbe .L_406728
.L_4067a3:

            movapd XMM1,XMM6
            movsd XMM0,QWORD PTR [RIP+.L_406920]
            mulsd XMM1,XMM6
            movsd XMM7,QWORD PTR [RSP]
            movapd XMM3,XMM1
            mulsd XMM0,XMM1
            movapd XMM2,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_406940]
            subsd XMM0,QWORD PTR [RIP+.L_406928]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RIP+.L_406930]
            addsd XMM1,QWORD PTR [RIP+.L_406948]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_406938]
            add RSP,24
.L_4067fc:

            mulsd XMM3,XMM2
            mulsd XMM2,XMM2
            addsd XMM0,XMM3
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            movapd XMM1,XMM6
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406820:

            movapd XMM1,XMM0
            jmp .L_4066c8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406830:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM6
            call .L_404af0

            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4067a3
.L_40684e:

            nop
            nop
.L_406850:

            test RDI,RDI
            je .L_406880

            lea RAX,QWORD PTR [RIP+.L_406690]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4065c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406880:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4068ae

            lea RDX,QWORD PTR [RIP+.L_406670]
            lea RCX,QWORD PTR [RIP+.L_406900]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4068ae:

            add RSP,8
            ret 
.L_4068b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068c0:

            lea RDX,QWORD PTR [RIP+.L_406690]
            lea RCX,QWORD PTR [RIP+.L_4065c0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4068e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068f0:

            xor EAX,EAX
            ret 
.L_4068f3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406900:
          .string "Natural Earth 2\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406920:
          .byte 0xe2
          .byte 0x6
          .byte 0x7c
          .byte 0x7e
          .byte 0x18
          .byte 0x21
          .byte 0xac
          .byte 0x3f
.L_406928:
          .byte 0x3d
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x1d
          .byte 0xa7
          .byte 0x3f
.L_406930:
          .byte 0x6f
          .byte 0x47
          .byte 0x38
          .byte 0x2d
          .byte 0x78
          .byte 0xd1
          .byte 0x97
          .byte 0xbf
.L_406938:
          .byte 0xaf
          .byte 0x8
          .byte 0xfe
          .byte 0xb7
          .byte 0x92
          .byte 0x1d
          .byte 0x6b
          .byte 0x3f
.L_406940:

            jg .L_406972
          .byte 0xf0
          .byte 0xdc
          .byte 0x7b
          .byte 0xb8
          .byte 0xc0
          .byte 0xbf
.L_406948:

            xchg EBP,EAX
            int1 
          .byte 0xef
          .byte 0x33
          .byte 0x2e
          .byte 0x1c
          .byte 0xeb
          .byte 0x3f
.L_406950:
          .byte 0xf0
          .byte 0xdc
          .byte 0x7b
          .byte 0xb8
          .byte 0xe4
          .byte 0xb8
          .byte 0x93
          .byte 0x3f
.L_406958:
          .byte 0xe1
          .byte 0x7a
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x9a
          .byte 0x3f
.L_406960:
          .byte 0x2a
          .byte 0xe3
          .byte 0xdf
          .byte 0x67
          .byte 0x5c
          .byte 0x38
          .byte 0x70
          .byte 0xbf
.L_406968:
          .byte 0x71
          .byte 0xc9
          .byte 0x71
          .byte 0xa7
          .byte 0x74
          .byte 0x30
          .byte 0xf0
          .byte 0x3f
.L_406970:

            xor BYTE PTR [RDI],CL
.L_406972:

            pop RBP
            xchg BYTE PTR [RCX+RCX*8+.L_65fea8+248136014],AH
            pop RBP
            xchg BYTE PTR [RCX+RCX*8+.L_65fea8+1332003150],AH
            stosb BYTE PTR [RDI]
          .byte 0x7d
          .byte 0x3a
          .byte 0x1e
          .byte 0xcb
          .byte 0x3f
.L_406988:
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xce
          .byte 0x3f
.L_406990:
          .byte 0x24
          .byte 0xd1
          .byte 0xcb
          .byte 0x28
          .byte 0x96
          .byte 0x5b
          .byte 0xaa
          .byte 0xbf
.L_406998:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
.L_4069a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4069b0:

            jmp .L_403ca0
.L_4069b5:
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4069c0:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd XMM3,QWORD PTR [RDI+144]
            movsd XMM2,QWORD PTR [RIP+.L_4070d0]
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_4070b8]
            mulsd XMM0,QWORD PTR [RIP+.L_4070c0]
            subsd XMM1,QWORD PTR [RIP+.L_4070d8]
            mulsd XMM0,QWORD PTR [RIP+.L_4070c8]
            mulsd XMM1,QWORD PTR [RIP+.L_4070e0]
            subsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_4070e8]
            movapd XMM0,XMM2
            movapd XMM4,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_4070f0]
            subsd XMM4,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4070f8]
            movsd QWORD PTR [RSP],XMM4
            call tan@PLT

            call log@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4070f0]
            mulsd XMM0,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RIP+.L_4070f8]
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov DWORD PTR [RBX+304],1
            movapd XMM5,XMM0
            subsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_407108]
            subsd XMM5,QWORD PTR [RIP+.L_407100]
            movsd XMM0,QWORD PTR [RIP+.L_407118]
            divsd XMM2,QWORD PTR [RIP+.L_407110]
            mulsd XMM1,XMM5
            addsd XMM1,XMM2
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP]
            add RSP,16

            pop RBX
            ret 
.L_406ab3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ac0:

            sub RSP,40
.L_406ac4:

            movapd XMM2,XMM0
            movq XMM3,QWORD PTR [RIP+.L_407160]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_407120]
            andpd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_407128]
            ucomisd XMM3,XMM0
            jae .L_406c30

            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RDI+328]
            mov QWORD PTR [RSP+16],RDI
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4070f0]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4070f8]
            call tan@PLT

            call log@PLT

            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM3,QWORD PTR [RIP+.L_407100]
            movq XMM4,QWORD PTR [RIP+.L_407170]
            addsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RIP+.L_407108]
            xorpd XMM2,XMM4
            subsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_407130]
            mulsd XMM2,QWORD PTR [RIP+.L_4070c8]
            mulsd XMM2,QWORD PTR [RIP+.L_4070e8]
            addsd XMM0,XMM2
            xorpd XMM0,XMM4
            call exp@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_407120]
            movsd XMM1,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_407140]
            mov RAX,QWORD PTR [RIP+.L_407138]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4070b8]
            mov QWORD PTR [RDI+128],RAX
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            movapd XMM3,XMM2
            subsd XMM2,XMM1
            subsd XMM3,QWORD PTR [RIP+.L_4070d0]
            movapd XMM1,XMM2
            mulsd XMM1,XMM4
            mulsd XMM3,XMM4
            mulsd XMM1,QWORD PTR [RIP+.L_407150]
            mulsd XMM3,QWORD PTR [RIP+.L_407148]
            divsd XMM1,QWORD PTR [RIP+.L_4070e8]
            divsd XMM3,QWORD PTR [RIP+.L_4070c8]
            addsd XMM1,QWORD PTR [RIP+.L_4070d8]
            add RSP,40
.L_406c22:

            subsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406c30:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,40
            movapd XMM1,XMM0
            ret 
.L_406c47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406c50:

            push RBX
            movapd XMM2,XMM0
            mov RBX,RDI
            sub RSP,32
.L_406c5c:

            movsd XMM3,QWORD PTR [RDI+144]
            movsd XMM0,QWORD PTR [RIP+.L_4070d0]
            divsd XMM2,XMM3
            movapd XMM4,XMM0
            divsd XMM1,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_4070b8]
            mulsd XMM2,QWORD PTR [RIP+.L_4070c0]
            subsd XMM1,QWORD PTR [RIP+.L_4070d8]
            mulsd XMM2,QWORD PTR [RIP+.L_4070c8]
            mulsd XMM1,QWORD PTR [RIP+.L_4070e0]
            subsd XMM4,XMM2
            movsd XMM2,QWORD PTR [RDI+168]
            mulsd XMM1,QWORD PTR [RIP+.L_4070e8]
            movapd XMM5,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            subsd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_407158]
            movsd QWORD PTR [RSP+8],XMM5
            call .L_44d4b0

            call log@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM4
            call .L_44d4b0

            call log@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_44d4b0

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mov DWORD PTR [RBX+304],1
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM3,XMM0
            subsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RIP+.L_407108]
            divsd XMM0,QWORD PTR [RIP+.L_407110]
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_407118]
            add RSP,32
.L_406d7c:

            pop RBX
            subsd XMM0,XMM3
            ret 
.L_406d82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406d90:

            push RBX
            movapd XMM3,XMM1
            movapd XMM5,XMM0
            mov RBX,RDI
            sub RSP,48
.L_406da0:

            movapd XMM0,XMM3
            movq XMM1,QWORD PTR [RIP+.L_407160]
            andpd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_407120]
            andpd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_407128]
            ucomisd XMM1,XMM0
            jae .L_406f50

            movsd XMM2,QWORD PTR [RDI+328]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call .L_44d4b0

            call log@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_407158]
            movsd XMM0,QWORD PTR [RIP+.L_4070d0]
            call .L_44d4b0

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RSP+24]
            addsd XMM2,XMM5
            movq XMM5,QWORD PTR [RIP+.L_407170]
            subsd XMM4,XMM6
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+16],XMM1
            xorpd XMM2,XMM5
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_407108]
            mulsd XMM2,XMM4
            subsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_407130]
            mulsd XMM0,QWORD PTR [RIP+.L_4070c8]
            mulsd XMM0,QWORD PTR [RIP+.L_4070e8]
            subsd XMM0,XMM6
            xorpd XMM0,XMM5
            call exp@PLT

            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_44cf90

            movapd XMM4,XMM0
            mov RAX,QWORD PTR [RIP+.L_407138]
            movapd XMM1,XMM0
            mov QWORD PTR [RBX+344],0
            subsd XMM4,QWORD PTR [RIP+.L_4070d0]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RIP+.L_407140]
            mov QWORD PTR [RBX+128],RAX
            subsd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_4070b8]
            mov QWORD PTR [RBX+352],0
            mulsd XMM4,XMM5
            mulsd XMM1,XMM5
            mulsd XMM4,QWORD PTR [RIP+.L_407148]
            mulsd XMM1,QWORD PTR [RIP+.L_407150]
            divsd XMM4,QWORD PTR [RIP+.L_4070c8]
            divsd XMM1,QWORD PTR [RIP+.L_4070e8]
            subsd XMM2,XMM4
            movapd XMM0,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_4070d8]
            add RSP,48
.L_406f48:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406f50:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM2,XMM2
            add RSP,48
            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_406f6c:

            nop
            nop
            nop
            nop
.L_406f70:

            test RDI,RDI
            je .L_406fd0

            pxor XMM0,XMM0
            mov QWORD PTR [RDI+32],0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_406f8d

            je .L_406fb0
.L_406f8d:

            lea RAX,QWORD PTR [RIP+.L_406c50]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_406d90]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406fb0:

            lea RAX,QWORD PTR [RIP+.L_4069c0]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_406ac0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406fd0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_406ffe

            lea RDX,QWORD PTR [RIP+.L_4069b0]
            lea RCX,QWORD PTR [RIP+.L_407080]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_406ffe:

            add RSP,8
            ret 
.L_407003:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407010:

            pxor XMM0,XMM0
            mov RAX,RDI
            mov QWORD PTR [RDI+32],0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_407048

            jne .L_407048

            lea RDX,QWORD PTR [RIP+.L_4069c0]
            lea RCX,QWORD PTR [RIP+.L_406ac0]
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407048:

            lea RSI,QWORD PTR [RIP+.L_406c50]
            mov QWORD PTR [RAX+48],RSI
            lea RSI,QWORD PTR [RIP+.L_406d90]
            mov QWORD PTR [RAX+40],RSI
            ret 
.L_40705f:

            nop
.L_407060:

            xor EAX,EAX
            ret 
.L_407063:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407080:
          .string "Cal Coop Ocean Fish Invest Lines/Stations\n\tCyl, Sph&Ell"
.L_4070b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
.L_4070c0:
          .byte 0xf5
          .byte 0x61
          .byte 0xb7
          .byte 0x3
          .byte 0x71
          .byte 0x98
          .byte 0x6c
          .byte 0x3f
.L_4070c8:
          .byte 0xab
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_4070d0:
          .byte 0x96
          .byte 0x90
          .byte 0x3a
          .byte 0x61
          .byte 0xad
          .byte 0x12
          .byte 0xe3
          .byte 0x3f
.L_4070d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_4070e0:
          .byte 0xa3
          .byte 0x96
          .byte 0xcf
          .byte 0x57
          .byte 0x4b
          .byte 0x10
          .byte 0x53
          .byte 0x3f
.L_4070e8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdf
          .byte 0x3f
.L_4070f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4070f8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_407100:
          .byte 0x3a
          .byte 0xf5
          .byte 0xb6
          .byte 0x7c
          .byte 0x6f
          .byte 0x50
          .byte 0xe4
          .byte 0x3f
.L_407108:
          .byte 0x1c
          .byte 0x33
          .byte 0x90
          .byte 0x45
          .byte 0xa7
          .byte 0x79
          .byte 0xe2
          .byte 0x3f
.L_407110:
          .byte 0xaa
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xdb
          .byte 0x3f
.L_407118:
          .byte 0x2
          .byte 0xcb
          .byte 0xa2
          .byte 0x5a
          .byte 0x6d
          .byte 0xea
          .byte 0x0
          .byte 0xc0
.L_407120:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_407128:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_407130:
          .byte 0x2
          .byte 0xcb
          .byte 0xa2
          .byte 0x5a
          .byte 0x6d
          .byte 0xea
          .byte 0x0
          .byte 0x40
.L_407138:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_407140:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_407148:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_407150:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
.L_407158:
          .byte 0xad
          .byte 0xd6
          .byte 0xc1
          .byte 0x2e
          .byte 0xac
          .byte 0xf6
          .byte 0xe1
          .byte 0x3f
.L_407160:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407170:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_407180:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            call fclose@PLT

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_407196:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071a0:

            mov RDI,QWORD PTR [RDI+8]
            jmp ftell@PLT
.L_4071a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071b0:

            mov RDI,QWORD PTR [RDI+8]
            jmp fseek@PLT
.L_4071b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071c0:

            mov RCX,QWORD PTR [RCX+8]
            jmp fread@PLT
.L_4071c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071d0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RSI
            mov RSI,RDX
            sub RSP,8
            call fopen@PLT

            test RAX,RAX
            je .L_407208

            mov RBX,RAX
            mov EDI,16
            call malloc@PLT

            mov QWORD PTR [RAX+8],RBX
            mov QWORD PTR [RAX],RBP
.L_4071fd:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407208:

            xor EAX,EAX
            jmp .L_4071fd
.L_40720c:

            nop
            nop
            nop
            nop
.L_407210:

            lea RAX,QWORD PTR [RIP+.L_65edc0]
            ret 
.L_407218:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407220:

            mov RAX,QWORD PTR [RDI+24]
            jmp QWORD PTR [RAX]
.L_407226:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407230:

            mov RAX,QWORD PTR [RDI+24]
            mov R9,RSI
            mov RSI,RDX
            mov RDI,R9
            mov RDX,RCX
            mov RCX,R8
            mov RAX,QWORD PTR [RAX+8]
            jmp RAX
.L_407249:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407250:

            mov RAX,QWORD PTR [RDI+24]
            mov R8,RSI
            mov RSI,RDX
            mov RDI,R8
            mov EDX,ECX
            mov RAX,QWORD PTR [RAX+16]
            jmp RAX
.L_407265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407270:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RSI
            mov RAX,QWORD PTR [RAX+24]
            jmp RAX
.L_40727d:

            nop
            nop
            nop
.L_407280:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RSI
            mov RAX,QWORD PTR [RAX+32]
            jmp RAX
.L_40728d:

            nop
            nop
            nop
.L_407290:

            push R15
            push R14
            movsxd R15,EDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RCX
            sub RSP,8
.L_4072aa:

            mov RAX,QWORD PTR [RDI+24]
            mov RDI,RCX
            call QWORD PTR [RAX+24]

            mov BYTE PTR [RBX+R15*1-1],0
            mov R12,RAX
            mov RAX,QWORD PTR [R13+24]
            lea EDX,DWORD PTR [R15-1]
            mov RCX,RBP
            mov ESI,1
            mov RDI,RBX
            movsxd RDX,EDX
            call QWORD PTR [RAX+8]

            test RAX,RAX
            je .L_407350

            cmp R15,RAX
            mov R14,R15
            ja .L_407328
.L_4072e3:

            cmp R14D,2
            jle .L_407313

            cmp BYTE PTR [RBX],10
            je .L_407358

            lea EDX,DWORD PTR [R14-3]
            mov EAX,1
            add RDX,1
            jmp .L_40730b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407300:

            add RAX,1
            cmp BYTE PTR [RBX+RAX*1-1],10
            je .L_407330
.L_40730b:

            cmp RDX,RAX
            movsxd RCX,EAX
            jne .L_407300
.L_407313:

            add RSP,8
.L_407317:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
.L_407328:

            mov BYTE PTR [RBX+RAX*1],0
            jmp .L_4072e3
          .byte 0x66
          .byte 0x90
.L_407330:

            add R12,RCX
.L_407333:

            mov BYTE PTR [RBX+RAX*1],0
            mov RAX,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [R12+1]
            xor EDX,EDX
            mov RDI,RBP
            call QWORD PTR [RAX+16]

            jmp .L_407313
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407350:

            xor EBX,EBX
            jmp .L_407313
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407358:

            mov EAX,1
            jmp .L_407333
.L_40735f:

            nop
.L_407360:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40736a:

            mov RBX,QWORD PTR [RIP+.L_65fd80]
            test RBX,RBX
            je .L_4073db

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407380:

            mov EAX,DWORD PTR [RBX+40]
            mov R13,QWORD PTR [RBX+56]
            test EAX,EAX
            mov QWORD PTR [RIP+.L_65fd80],R13
            jle .L_4073ba

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073a0:

            mov RAX,QWORD PTR [RBX+48]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R12*1+48]
            add R12,72
            call free@PLT

            cmp DWORD PTR [RBX+40],EBP
            jg .L_4073a0
.L_4073ba:

            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,R13
            call free@PLT

            test R13,R13
            jne .L_407380
.L_4073db:

            add RSP,8
.L_4073df:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4073e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073f0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RSI
            call .L_40d340

            mov RBX,QWORD PTR [RIP+.L_65fd80]
            test RBX,RBX
            jne .L_407419

            jmp .L_407438
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407410:

            mov RBX,QWORD PTR [RBX+56]
            test RBX,RBX
            je .L_407438
.L_407419:

            mov RDI,QWORD PTR [RBX]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_407410
.L_407428:

            call .L_40d3e0
.L_40742d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407438:

            call .L_40d3e0

            mov RSI,RBP
            mov RDI,R12
            call .L_44e1c0

            test RAX,RAX
            mov RBX,RAX
            je .L_40742d

            call .L_40d340

            mov RAX,QWORD PTR [RIP+.L_65fd80]
            mov QWORD PTR [RIP+.L_65fd80],RBX
            mov QWORD PTR [RBX+56],RAX
            jmp .L_407428
.L_407469:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407470:

            push RBX
            sub RSP,16
.L_407475:

            mov R9D,DWORD PTR [RSI+40]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test R9D,R9D
            jle .L_407578

            mov RAX,QWORD PTR [RSI+48]
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4074a0:

            test EDX,EDX
            mov RBX,RAX
            movsd XMM3,QWORD PTR [RAX+40]
            jne .L_407518

            ucomisd XMM3,XMM2
            ja .L_407520
.L_4074b2:

            movsd XMM3,QWORD PTR [RAX]
            ucomisd XMM3,XMM0
            ja .L_407520

            ucomisd XMM0,QWORD PTR [RAX+16]
            ja .L_407520

            movsd XMM3,QWORD PTR [RAX+8]
            ucomisd XMM3,XMM1
            ja .L_407520

            ucomisd XMM1,QWORD PTR [RAX+24]
            ja .L_407520

            cmp DWORD PTR [RAX+64],-1
            je .L_407520
.L_4074db:

            cmp R9D,ESI
            je .L_407530

            test R8,R8
            je .L_4074ef

            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [R8],XMM0
.L_4074ef:

            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_407550
.L_4074f8:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40758d

            add RSP,16
.L_407510:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407518:

            ucomisd XMM2,XMM3
            jbe .L_4074b2

            nop
            nop
.L_407520:

            add ESI,1
            add RAX,72
            cmp ESI,R9D
            jne .L_4074a0
.L_407530:

            test R8,R8
            je .L_40753c

            mov QWORD PTR [R8],0
.L_40753c:

            xor EAX,EAX
            test RCX,RCX
            je .L_4074f8

            pxor XMM0,XMM0
            movups XMMWORD PTR [RCX],XMM0
            movups XMMWORD PTR [RCX+16],XMM0
            jmp .L_4074f8
.L_407550:

            mov RSI,QWORD PTR [RBX+48]
            lea RDX,QWORD PTR [RSP+4]
            mov DWORD PTR [RSP+4],0
            call .L_40d010

            cmp DWORD PTR [RSP+4],1
            je .L_407581

            mov RAX,QWORD PTR [RBX+56]
            jmp .L_4074f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407578:

            xor ESI,ESI
            xor EBX,EBX
            jmp .L_4074db
.L_407581:

            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+56],RAX
            jmp .L_4074f8
.L_40758d:

            call __stack_chk_fail@PLT
.L_407592:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4075a0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14D,ESI
            push RBP
            push RBX
            sub RSP,56
.L_4075b4:

            cmp QWORD PTR [R15+528],0
            mov RDI,QWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDX
            je .L_407968
.L_4075ca:

            cmp QWORD PTR [RSP+24],0
            mov DWORD PTR [RDI],0
            jle .L_4077fe

            movsxd RCX,ECX
            mov RBP,R9
            mov RBX,R8
            lea R13,QWORD PTR [RCX*8]
            xor R12D,R12D
.L_4075f0:

            mov RDX,QWORD PTR [R15+592]
            movsd XMM7,QWORD PTR [RBP]
            movsd XMM6,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM7
            test RDX,RDX
            movsd QWORD PTR [RSP],XMM6
            je .L_407640

            movsd XMM0,QWORD PTR [R15+600]
            ucomisd XMM0,XMM6
            ja .L_407640

            ucomisd XMM6,QWORD PTR [R15+616]
            ja .L_407640

            movsd XMM0,QWORD PTR [R15+608]
            ucomisd XMM0,XMM7
            ja .L_407640

            ucomisd XMM7,XMM0
            jbe .L_407689

            nop
.L_407640:

            mov RSI,QWORD PTR [R15+528]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [R15+600]
            lea R8,QWORD PTR [R15+632]
            movsd XMM2,QWORD PTR [R15+536]
            movsd XMM0,QWORD PTR [RSP]
            mov EDX,1
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_407470

            test RAX,RAX
            mov RDX,RAX
            mov QWORD PTR [R15+592],RAX
            je .L_407859
.L_407689:

            cmp QWORD PTR [RDX+48],0
            jne .L_4079ac

            mov RSI,QWORD PTR [RDX+32]
            cmp QWORD PTR [RSI+120],0
            je .L_4078c0
.L_4076a3:

            movsd XMM0,QWORD PTR [RSP]
            mov EDI,R14D
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_407ab0

            ucomisd XMM0,QWORD PTR [RIP+.L_407a98]
            movapd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM1
            ja .L_407880

            pxor XMM4,XMM4
            movsd XMM2,QWORD PTR [R15+536]
            ucomisd XMM2,XMM4
            jp .L_4076e7

            je .L_4078e8
.L_4076e7:

            mov RDX,QWORD PTR [R15+544]
            test RDX,RDX
            je .L_407810

            movsd XMM0,QWORD PTR [R15+552]
            movsd XMM5,QWORD PTR [RSP]
            ucomisd XMM0,XMM5
            ja .L_407810

            ucomisd XMM5,QWORD PTR [R15+568]
            ja .L_407810

            movsd XMM0,QWORD PTR [R15+560]
            movsd XMM4,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM4
            ja .L_407810

            ucomisd XMM4,XMM0
            ja .L_407810

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407748:

            cmp QWORD PTR [RDX+48],0
            jne .L_4079cb

            mov RSI,QWORD PTR [RDX+32]
            cmp QWORD PTR [RSI+120],0
            je .L_407930
.L_407762:

            movsd XMM0,QWORD PTR [RSP]
            mov EDI,R14D
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            call .L_407ab0

            ucomisd XMM0,QWORD PTR [RIP+.L_407a98]
            movsd XMM3,QWORD PTR [RSP+32]
            ja .L_407900

            movsd XMM5,QWORD PTR [R15+584]
            movsd XMM2,QWORD PTR [R15+536]
            movsd XMM4,QWORD PTR [R15+632]
            subsd XMM2,XMM5
            subsd XMM4,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_407aa8]
            divsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM5,XMM2
            mulsd XMM4,XMM2
            mulsd XMM3,XMM2
            mulsd XMM1,XMM5
            mulsd XMM5,XMM0
            addsd XMM4,XMM1
            addsd XMM3,XMM5
            movsd QWORD PTR [RBP],XMM4
            movsd QWORD PTR [RBX],XMM3
.L_4077e9:

            add R12,1
            add RBP,R13
            add RBX,R13
            cmp R12,QWORD PTR [RSP+24]
            jne .L_4075f0
.L_4077fe:

            add RSP,56
.L_407802:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_407810:

            mov RSI,QWORD PTR [R15+528]
            mov RDI,QWORD PTR [R15]
            lea RCX,QWORD PTR [R15+552]
            lea R8,QWORD PTR [R15+584]
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            xor EDX,EDX
            movsd QWORD PTR [RSP+32],XMM3
            call .L_407470

            test RAX,RAX
            mov RDX,RAX
            mov QWORD PTR [R15+544],RAX
            movsd XMM3,QWORD PTR [RSP+32]
            jne .L_407748
.L_407859:

            mov RDI,QWORD PTR [R15]
            mov ESI,4294967258
            call .L_404af0

            mov EAX,4294967258
.L_40786b:

            add RSP,56
.L_40786f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407880:

            mov RDI,QWORD PTR [R15]
            cmp DWORD PTR [RDI+4],1
            jle .L_4077e9

            movsd XMM1,QWORD PTR [RIP+.L_407aa0]
            movsd XMM0,QWORD PTR [RBX]
            mulsd XMM0,XMM1
.L_40789d:

            mulsd XMM1,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_407a10]
            mov ESI,2
            mov EAX,2
            call .L_404c10

            jmp .L_4077e9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4078c0:

            mov RDI,QWORD PTR [R15]
            mov RSI,RDX
            mov QWORD PTR [RSP+16],RDX
            call .L_40afa0

            test EAX,EAX
            je .L_407859

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RDX+32]
            jmp .L_4076a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4078e8:

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM4
            movsd QWORD PTR [RBX],XMM0
            jmp .L_4077e9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407900:

            mov RDI,QWORD PTR [R15]
            cmp DWORD PTR [RDI+4],1
            jle .L_4077e9

            movsd XMM0,QWORD PTR [RIP+.L_407aa0]
            movsd XMM1,QWORD PTR [RIP+.L_407aa0]
            mulsd XMM0,QWORD PTR [RBX]
            jmp .L_40789d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407930:

            mov RDI,QWORD PTR [R15]
            mov RSI,RDX
            movsd QWORD PTR [RSP+40],XMM3
            mov QWORD PTR [RSP+32],RDX
            call .L_40afa0

            test EAX,EAX
            je .L_407859

            mov RDX,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RDX+32]
            jmp .L_407762
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407968:

            mov RSI,QWORD PTR [R15+520]
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            mov DWORD PTR [RSP],ECX
            call .L_4073f0

            test RAX,RAX
            mov QWORD PTR [R15+528],RAX
            je .L_4079a2

            mov RDI,QWORD PTR [R15]
            mov ECX,DWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            jmp .L_4075ca
.L_4079a2:

            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            jmp .L_40786b
.L_4079ac:

            lea RCX,QWORD PTR [RIP+.L_407a80]
            lea RSI,QWORD PTR [RIP+.L_4079ea]
            lea RDI,QWORD PTR [RIP+.L_4079fb]
            mov EDX,147
            call __assert_fail@PLT
.L_4079cb:

            lea RCX,QWORD PTR [RIP+.L_407a80]
            lea RSI,QWORD PTR [RIP+.L_4079ea]
            lea RDI,QWORD PTR [RIP+.L_4079fb]
            mov EDX,196
            call __assert_fail@PLT
.L_4079ea:
          .string "pj_gridcatalog.c"
.L_4079fb:
          .string "gi->child == NULL"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407a10:
          .string "pj_apply_gridshift(): failed to find a grid shift table for\n                      location (%.7fdW,%.7fdN)"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407a80:
          .string "pj_gc_apply_gridshift"
          .byte 0x66
          .byte 0x90
.L_407a98:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_407aa0:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_407aa8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_407ab0:

            ucomisd XMM0,QWORD PTR [RIP+.L_407d78]
            jbe .L_407ac0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407ac0:

            push RBP
            push RBX
            mov EBP,EDI
            movapd XMM6,XMM1
            mov RBX,RSI
            sub RSP,40
.L_407acf:

            movsd QWORD PTR [RSP+8],XMM0
            subsd XMM0,QWORD PTR [RSI+80]
            subsd XMM6,QWORD PTR [RSI+88]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,QWORD PTR [RIP+.L_407d80]
            movsd QWORD PTR [RSP],XMM6
            call .L_449e30

            addsd XMM0,QWORD PTR [RIP+.L_407d80]
            movsd XMM1,QWORD PTR [RSP]
            mov RDI,RBX
            movsd QWORD PTR [RSP+24],XMM0
            call .L_407db0

            test EBP,EBP
            movapd XMM3,XMM0
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            je .L_407c30

            ucomisd XMM0,QWORD PTR [RIP+.L_407d78]
            ja .L_407c46

            movsd XMM3,QWORD PTR [RSP+24]
            mov EBP,10
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM3,XMM0
            subsd XMM2,XMM1
            jmp .L_407b8c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407b60:

            andpd XMM0,XMMWORD PTR [RIP+.L_407da0]
            ucomisd XMM0,QWORD PTR [RIP+.L_407d88]
            jbe .L_407ca8

            andpd XMM1,XMMWORD PTR [RIP+.L_407da0]
            ucomisd XMM1,QWORD PTR [RIP+.L_407d88]
            jbe .L_407ca8
.L_407b8c:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call .L_407db0

            ucomisd XMM0,QWORD PTR [RIP+.L_407d78]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            ja .L_407c58

            movapd XMM7,XMM3
            sub EBP,1
            addsd XMM1,XMM2
            subsd XMM7,XMM0
            subsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM7
            subsd XMM0,QWORD PTR [RSP+24]
            subsd XMM2,XMM1
            subsd XMM3,XMM0
            jne .L_407b60

            lea RDI,QWORD PTR [RIP+.L_407cce]
            call getenv@PLT

            test RAX,RAX
            je .L_407c1c

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_407d40]
            mov EDX,48
            mov ESI,1
            call fwrite@PLT
.L_407c1c:

            movsd XMM3,QWORD PTR [RIP+.L_407d90]
            movapd XMM2,XMM3
            jmp .L_407c46
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c30:

            ucomisd XMM0,QWORD PTR [RIP+.L_407d78]
            ja .L_407c46

            subsd XMM4,XMM0
            addsd XMM2,XMM5
            movapd XMM3,XMM4
.L_407c46:

            add RSP,40
.L_407c4a:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407c58:

            lea RDI,QWORD PTR [RIP+.L_407cce]
            movsd QWORD PTR [RSP],XMM3
            call getenv@PLT

            test RAX,RAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_407ca8

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_407ce0]
            mov EDX,89
            mov ESI,1
            call fwrite@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407ca8:

            addsd XMM3,QWORD PTR [RBX+80]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM3
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            addsd XMM2,QWORD PTR [RBX+88]
            jmp .L_407c46
.L_407cce:
          .string "PROJ_DEBUG"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ce0:
          .string "Inverse grid shift iteration failed, presumably at grid edge.\nUsing first approximation.\n"
          .zero 6
.L_407d40:
          .string "Inverse grid shift iterator failed to converge.\n"
# WARNING: found overlapping blocks at address 7b16
# WARNING: found overlapping blocks at address 7b1a
# WARNING: found overlapping blocks at address 7b28
# WARNING: found overlapping blocks at address 7b2a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d78:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_407d80:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_407d88:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_407d90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407da0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407db0:

            divsd XMM0,QWORD PTR [RDI+96]
            movq XMM3,QWORD PTR [RIP+.L_408070]
            movsd XMM6,QWORD PTR [RIP+.L_408050]
            movapd XMM5,XMM3
.L_407dc9:

            movapd XMM4,XMM0
            movapd XMM2,XMM0
            andpd XMM4,XMM3
            ucomisd XMM6,XMM4
            jbe .L_407e0e

            cvttsd2si RAX,XMM0
            pxor XMM4,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_408048]
            andnpd XMM5,XMM0
            cvtsi2sd XMM4,RAX
            movapd XMM2,XMM4
            cmpnlesd XMM2,XMM0
            andpd XMM2,XMM7
            subsd XMM4,XMM2
            movapd XMM2,XMM4
            orpd XMM2,XMM5
.L_407e0e:

            divsd XMM1,QWORD PTR [RDI+104]
            cvttsd2si EAX,XMM2
            movapd XMM4,XMM1
            movapd XMM2,XMM1
            andpd XMM4,XMM3
            ucomisd XMM6,XMM4
            jbe .L_407e5c

            cvttsd2si RDX,XMM1
            pxor XMM4,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_408048]
            andnpd XMM3,XMM1
            cvtsi2sd XMM4,RDX
            movapd XMM2,XMM4
            cmpnlesd XMM2,XMM1
            andpd XMM2,XMM5
            subsd XMM4,XMM2
            movapd XMM2,XMM4
            orpd XMM2,XMM3
.L_407e5c:

            pxor XMM3,XMM3
            test EAX,EAX
            cvtsi2sd XMM3,EAX
            subsd XMM0,XMM3
            js .L_407ee8

            lea EDX,DWORD PTR [RAX+1]
            cmp DWORD PTR [RDI+112],EDX
            jle .L_407ed0
.L_407e74:

            cvttsd2si EDX,XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EDX
            test EDX,EDX
            subsd XMM1,XMM2
            js .L_408008

            lea ECX,DWORD PTR [RDX+1]
            cmp DWORD PTR [RDI+116],ECX
            jg .L_407f08

            jne .L_407ed6

            movsd XMM2,QWORD PTR [RIP+.L_408068]
            ucomisd XMM2,XMM1
            jbe .L_407ed6

            pxor XMM3,XMM3
            movapd XMM6,XMM0
            sub EDX,1
            movapd XMM4,XMM0
            pxor XMM2,XMM2
            mulsd XMM6,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_408048]
            movapd XMM1,XMM3
            jmp .L_407f28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ed0:

            je .L_407fe0
.L_407ed6:

            movsd XMM0,QWORD PTR [RIP+.L_408060]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ee8:

            cmp EAX,-1
            jne .L_407ed6

            ucomisd XMM0,QWORD PTR [RIP+.L_408058]
            jbe .L_407ed6

            xor EAX,EAX
            pxor XMM0,XMM0
            jmp .L_407e74
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407f08:

            movsd XMM3,QWORD PTR [RIP+.L_408048]
            movapd XMM4,XMM1
            movapd XMM6,XMM0
            movapd XMM2,XMM3
            mulsd XMM4,XMM0
            subsd XMM2,XMM1
            mulsd XMM6,XMM2
.L_407f28:

            mov ECX,DWORD PTR [RDI+112]
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            pxor XMM5,XMM5
            imul EDX,ECX
            mulsd XMM1,XMM3
            mulsd XMM3,XMM2
            add EAX,EDX
            mov RDX,QWORD PTR [RDI+120]
            cdqe 
            pxor XMM2,XMM2
            lea R8,QWORD PTR [RAX+1]
            lea RDI,QWORD PTR [RDX+RAX*8]
            movsxd RAX,ECX
            lea RSI,QWORD PTR [RDX+R8*8]
            add RAX,R8
            cvtss2sd XMM2,DWORD PTR [RDI+4]
            lea RCX,QWORD PTR [RDX+RAX*8]
            lea RAX,QWORD PTR [RDX+RAX*8-8]
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM2,XMM3
            cvtss2sd XMM5,DWORD PTR [RCX+4]
            mulsd XMM0,XMM6
            mulsd XMM5,XMM4
            addsd XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RAX+4]
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI]
            addsd XMM2,XMM5
            mulsd XMM0,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RSI]
            mulsd XMM3,XMM6
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX]
            mulsd XMM1,XMM3
            addsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM4,XMM1
            movapd XMM1,XMM2
            addsd XMM0,XMM4
            ret 
          .byte 0x66
          .byte 0x90
.L_407fe0:

            movsd XMM3,QWORD PTR [RIP+.L_408068]
            ucomisd XMM3,XMM0
            jbe .L_407ed6

            sub EAX,1
            movsd XMM0,QWORD PTR [RIP+.L_408048]
            jmp .L_407e74
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408008:

            cmp EDX,-1
            jne .L_407ed6

            ucomisd XMM1,QWORD PTR [RIP+.L_408058]
            jbe .L_407ed6

            pxor XMM1,XMM1
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_408048]
            xor EDX,EDX
            movapd XMM6,XMM0
            mulsd XMM4,XMM1
            movapd XMM2,XMM3
            jmp .L_407f28
.L_408042:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408048:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_408050:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_408058:
          .byte 0x28
          .byte 0xa0
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x3f
.L_408060:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_408068:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
.L_408070:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408080:

            lea RAX,QWORD PTR [RIP+.L_65eee0]
            ret 
.L_408088:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408090:

            lea RAX,QWORD PTR [RIP+.L_65ee00]
            ret 
.L_408098:
          .string "greenwich"
.L_4080a2:
          .string "0dE"
.L_4080a6:
          .string "lisbon"
.L_4080ad:
          .string "9d07\'54.862\"W"
.L_4080bb:
          .string "paris"
.L_4080c1:
          .string "2d20\'14.025\"E"
.L_4080cf:
          .string "bogota"
.L_4080d6:
          .string "74d04\'51.3\"W"
.L_4080e3:
          .string "madrid"
.L_4080ea:
          .string "3d41\'16.58\"W"
.L_4080f7:
          .string "rome"
.L_4080fc:
          .string "12d27\'8.4\"E"
.L_408108:
          .string "bern"
.L_40810d:
          .string "7d26\'22.5\"E"
.L_408119:
          .string "jakarta"
.L_408121:
          .string "106d48\'27.79\"E"
.L_408130:
          .string "ferro"
.L_408136:
          .string "17d40\'W"
.L_40813e:
          .string "brussels"
.L_408147:
          .string "4d22\'4.71\"E"
.L_408153:

            jae .L_4081c9
          .byte 0x6f
          .byte 0x63
          .byte 0x6b
          .byte 0x68
          .byte 0x6f
          .byte 0x6c
          .byte 0x6d
          .byte 0x0
.L_40815d:
          .string "18d3\'29.8\"E"
.L_408169:
          .string "athens"
.L_408170:
          .string "23d42\'58.815\"E"
.L_40817f:
          .string "oslo"
.L_408184:
          .string "10d43\'22.5\"E"
.L_408191:
          .string "WGS84"
.L_408197:
          .string "towgs84=0,0,0"
.L_4081a5:
          .zero 1
.L_4081a6:
          .string "GGRS87"
.L_4081ad:
          .byte 0x74
          .byte 0x6f
          .byte 0x77
          .byte 0x67
          .byte 0x73
          .byte 0x38
          .byte 0x34
          .byte 0x3d
          .byte 0x2d
          .byte 0x31
          .byte 0x39
          .byte 0x39
          .byte 0x2e
          .byte 0x38
          .byte 0x37
          .byte 0x2c
          .byte 0x37
          .byte 0x34
          .byte 0x2e
          .byte 0x37
          .byte 0x39
          .byte 0x2c
          .byte 0x32
          .byte 0x34
          .byte 0x36
          .byte 0x2e
          .byte 0x36
          .byte 0x32
.L_4081c9:

            add BYTE PTR [RDI+82],AL
            push RBX
            cmp BYTE PTR [RAX],DH
            add BYTE PTR [RSI+65],CL
            cmp BYTE PTR [RBX],R14B
            add BYTE PTR [RSI+111],CL
            jb .L_40824e

            push 1701658975
            jb .L_40824a
          .byte 0x63
          .byte 0x61
          .byte 0x6e
          .byte 0x5f
          .byte 0x44
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x6d
          .byte 0x5f
          .byte 0x31
          .byte 0x39
          .byte 0x38
          .byte 0x33
          .byte 0x0
.L_4081f0:
          .string "NAD27"
.L_4081f6:
          .string "clrk66"
.L_4081fd:
          .string "North_American_Datum_1927"
.L_408217:
          .string "potsdam"
.L_40821f:
          .string "bessel"
.L_408226:
          .string "Potsdam Rauenberg 1950 DHDN"
.L_408242:
          .byte 0x63
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x68
          .byte 0x61
          .byte 0x67
          .byte 0x65
.L_40824a:

            add BYTE PTR [RDI+RBP*2+119],DH
.L_40824e:

            jae .L_408289
          .byte 0x34
          .byte 0x3d
          .byte 0x2d
          .byte 0x32
          .byte 0x36
          .byte 0x33
          .byte 0x2e
          .byte 0x30
          .byte 0x2c
          .byte 0x36
          .byte 0x2e
          .byte 0x30
          .byte 0x2c
          .byte 0x34
          .byte 0x33
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0x0
.L_408264:
          .string "clrk80ign"
.L_40826e:
          .string "Carthage 1934 Tunisia"
.L_408284:

            push 1634562661
.L_408289:

            outsb DX,BYTE PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            jae .L_4082f8
          .byte 0x6f
          .byte 0x67
          .byte 0x65
          .byte 0x6c
          .byte 0x0
.L_408292:
          .string "Hermannskogel"
.L_4082a0:
          .string "ire65"
.L_4082a6:
          .string "mod_airy"
.L_4082af:
          .string "Ireland 1965"
.L_4082bc:

            outsb DX,BYTE PTR [RSI]
            jp .L_408326
          .byte 0x64
          .byte 0x34
          .byte 0x39
          .byte 0x0
.L_4082c3:
          .string "intl"
.L_4082c8:
          .string "OSGB36"
.L_4082cf:
          .string "airy"
.L_4082d4:
          .string "Airy 1830"
          .byte 0x66
          .byte 0x90
.L_4082e0:
          .byte 0x47
          .byte 0x72
          .byte 0x65
          .byte 0x65
          .byte 0x6b
          .byte 0x5f
          .byte 0x47
          .byte 0x65
          .byte 0x6f
          .byte 0x64
          .byte 0x65
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0x5f
          .byte 0x52
          .byte 0x65
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x65
          .byte 0x6e
          .byte 0x63
          .byte 0x65
.L_4082f8:

            pop RDI
            push RBX
            jns .L_40836f

            je .L_408363
          .byte 0x6d
          .byte 0x5f
          .byte 0x31
          .byte 0x39
          .byte 0x38
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408308:
          .byte 0x6e
          .byte 0x61
          .byte 0x64
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x73
          .byte 0x3d
          .byte 0x40
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x75
          .byte 0x73
          .byte 0x2c
          .byte 0x40
          .byte 0x61
          .byte 0x6c
          .byte 0x61
          .byte 0x73
          .byte 0x6b
          .byte 0x61
          .byte 0x2c
          .byte 0x40
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x32
          .byte 0x5f
.L_408326:

            xor BYTE PTR [RSI],CH
            jae .L_40838d
          .byte 0x2c
          .byte 0x40
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x31
          .byte 0x5f
          .byte 0x63
          .byte 0x61
          .byte 0x6e
          .byte 0x2e
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408340:
          .byte 0x74
          .byte 0x6f

            ja .L_4083ab
          .byte 0x73
          .byte 0x38
          .byte 0x34
          .byte 0x3d
          .byte 0x35
          .byte 0x39
          .byte 0x38
          .byte 0x2e
          .byte 0x31
          .byte 0x2c
          .byte 0x37
          .byte 0x33
          .byte 0x2e
          .byte 0x37
          .byte 0x2c
          .byte 0x34
          .byte 0x31
          .byte 0x38
          .byte 0x2e
          .byte 0x32
          .byte 0x2c
          .byte 0x30
          .byte 0x2e
          .byte 0x32
          .byte 0x30
          .byte 0x32
          .byte 0x2c
          .byte 0x30
          .byte 0x2e
          .byte 0x30
          .byte 0x34
.L_408363:

            xor EAX,775040300
            xor AL,53
            xor EAX,925775404
.L_40836f:

            add BYTE PTR [RDI+RBP*2+119],DH
            jae .L_4083ae

            xor AL,61
            xor EAX,858666807
            xor DH,BYTE PTR [RSI]
            sub AL,57
            xor BYTE PTR [RSI],CH
            xor DWORD PTR [RDX],ESI
            cmp DWORD PTR [RSP+RSI*1],EBP
            xor EBP,DWORD PTR SS:[RSI]
            cmp DWORD PTR [RCX],ESI
.L_40838d:

            cmp DWORD PTR [RSI*1+926101806],EBP
            sub AL,49
            xor AL,55
            xor AL,44
            xor EAX,926495278
            sub AL,50
            xor AL,50
            xor ESI,DWORD PTR [RDX]
            add BYTE PTR [RDI+RBP*2+119],DH
.L_4083ab:

            jae .L_4083e6
.L_4083ae:

            xor AL,61
            xor AL,56
            xor CH,BYTE PTR [RSI]
            xor EAX,757870643
            xor DWORD PTR [RBX],ESI
            xor BYTE PTR [RSI],CH
            xor EAX,892089913
            xor AL,46
            xor EAX,757872437
            xor DWORD PTR [RSI],EBP
            xor BYTE PTR [RDX+RSI*1],DH
            sub AL,45
            xor BYTE PTR [RSI],CH
            xor DH,BYTE PTR [RCX]
            xor AL,44
            sub EAX,859188784
            xor DWORD PTR [RAX+RDI*1],EBP
            xor DWORD PTR CS:[RIP],ESI
.L_4083e6:

            add BYTE PTR [RAX],AL
.L_4083e8:
          .string "towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993"
          .zero 5
.L_408420:
          .string "New Zealand Geodetic Datum 1949"
.L_408440:
          .string "towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894"
# WARNING: found overlapping blocks at address 8216

            nop
.L_408480:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_408494:

            mov DWORD PTR [RDX+400],0
            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RIP+.L_408844]
            mov QWORD PTR [RSP],RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RCX
            xor ECX,ECX
            call .L_4043f0

            test RAX,RAX
            je .L_408569

            test R14,R14
            mov R12,RAX
            je .L_408710

            mov RBX,QWORD PTR [R14]
            test RBX,RBX
            jne .L_4084eb

            jmp .L_408720
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4084e8:

            mov RBX,RAX
.L_4084eb:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_4084e8
.L_4084f3:

            mov RSI,QWORD PTR [RIP+.L_65eee0]
            xor R15D,R15D
            lea R13,QWORD PTR [RIP+.L_65eee0]
            test RSI,RSI
            jne .L_408529

            jmp .L_4085c0
          .byte 0x66
          .byte 0x90
.L_408510:

            add R15,1
            mov RAX,R15
            shl RAX,5
            mov RSI,QWORD PTR [R13+RAX*1]
            test RSI,RSI
            je .L_4085c0
.L_408529:

            mov RDI,R12
            movsxd RBP,R15D
            call strcmp@PLT

            test EAX,EAX
            jne .L_408510

            mov RAX,RBP
            shl RAX,5
            mov RSI,QWORD PTR [R13+RAX*1+16]
            test RSI,RSI
            je .L_408552

            cmp BYTE PTR [RSI],0
            jne .L_4085d8
.L_408552:

            shl RBP,5
            mov RDI,QWORD PTR [R13+RBP*1+8]
            test RDI,RDI
            je .L_408569
.L_408560:

            cmp BYTE PTR [RDI],0
            jne .L_408630
.L_408569:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_40884b]
            mov RSI,R14
            call .L_4043f0

            test RAX,RAX
            je .L_408640

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],3
            xor EAX,EAX
.L_408596:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40883f

            add RSP,136
.L_4085b1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4085c0:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4294967287
            call .L_404af0

            mov EAX,1
            jmp .L_408596
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4085d8:

            lea RDI,QWORD PTR [RSP+22]
            lea R12,QWORD PTR [RSP+16]
            mov EAX,15731
            mov EDX,93
            shl RBP,5
            mov DWORD PTR [RSP+16],1886153829
            mov WORD PTR [RSP+20],AX
            mov BYTE PTR [RSP+22],0
            call strncpy@PLT

            mov RDI,R12
            mov BYTE PTR [RSP+115],0
            call .L_4043a0

            mov RDI,QWORD PTR [R13+RBP*1+8]
            mov QWORD PTR [RBX],RAX
            mov RBX,RAX
            test RDI,RDI
            jne .L_408560

            jmp .L_408569
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408630:

            call .L_4043a0

            mov QWORD PTR [RBX],RAX
            jmp .L_408569
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408640:

            mov RBX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_408855]
            mov RSI,R14
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            je .L_408728

            mov R15,QWORD PTR [RSP+8]
            mov RDI,RAX
            mov DWORD PTR [R15+400],3
            call strdup@PLT

            lea RDX,QWORD PTR [RIP+.L_40885e]
            mov QWORD PTR [R15+520],RAX
            mov RSI,R14
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            je .L_408708

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_44e120

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+536],XMM0
            xor EAX,EAX
            jmp .L_408596
.L_4086b5:

            divsd XMM0,QWORD PTR [RIP+.L_408878]
            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],2
            movsd XMM4,QWORD PTR [RIP+.L_408870]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            addsd XMM0,QWORD PTR [RIP+.L_408880]
            movsd QWORD PTR [RAX+432],XMM1
            movsd QWORD PTR [RAX+440],XMM2
            movsd QWORD PTR [RAX+448],XMM3
            movsd QWORD PTR [RAX+456],XMM0
.L_408708:

            xor EAX,EAX
            jmp .L_408596
          .byte 0x90
.L_408710:

            xor EBX,EBX
            jmp .L_4084f3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408720:

            mov RBX,R14
            jmp .L_4084f3
.L_408728:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_408864]
            mov RSI,R14
            call .L_4043f0

            test RAX,RAX
            mov RBX,RAX
            je .L_408708

            mov RCX,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            xor EBP,EBP
            movups XMMWORD PTR [RCX+408],XMM0
            mov QWORD PTR [RCX+456],0
            movups XMMWORD PTR [RCX+424],XMM0
            movups XMMWORD PTR [RCX+440],XMM0
            nop
            nop
.L_408770:

            cmp BYTE PTR [RBX],0
            je .L_4087c0

            cmp EBP,7
            je .L_4087c0

            mov RDI,RBX
            call .L_415c60

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+RBP*8+408],XMM0
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_4087ab

            jmp .L_4087af
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4087a0:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_4087af
.L_4087ab:

            cmp AL,44
            jne .L_4087a0
.L_4087af:

            cmp AL,44
            sete AL
            add RBP,1
            movzx EAX,AL
            add RBX,RAX
            jmp .L_408770
.L_4087c0:

            mov RAX,QWORD PTR [RSP+8]
            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RAX+432]
            movsd XMM2,QWORD PTR [RAX+440]
            ucomisd XMM1,XMM4
            movsd XMM3,QWORD PTR [RAX+448]
            movsd XMM0,QWORD PTR [RAX+456]
            jp .L_4086b5

            jne .L_4086b5

            ucomisd XMM2,XMM4
            jp .L_4086b5

            jne .L_4086b5

            ucomisd XMM3,XMM4
            jp .L_4086b5

            jne .L_4086b5

            ucomisd XMM0,XMM4
            jp .L_4086b5

            jne .L_4086b5

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+400],1
            xor EAX,EAX
            jmp .L_408596
.L_40883f:

            call __stack_chk_fail@PLT
.L_408844:
          .string "sdatum"
.L_40884b:
          .string "snadgrids"
.L_408855:
          .string "scatalog"
.L_40885e:
          .string "sdate"
.L_408864:

            jae .L_4088da
          .byte 0x6f
          .byte 0x77
          .byte 0x67

            jae .L_4088a3
          .byte 0x34
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408870:
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_408878:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x2e
          .byte 0x41
.L_408880:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408890:

            push R15
            pxor XMM3,XMM3
            push R14
            push R13
            mov R14,RCX
            push R12
            push RBP
            mov R12,RDI
.L_4088a3:

            push RBX
            movapd XMM2,XMM0
            movsxd RBP,ESI
            mov RBX,RDX
            mov R13,R8
            sub RSP,88
.L_4088b5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM1,XMM3
            jp .L_408990

            jne .L_408990
.L_4088d5:

            lea RDI,QWORD PTR [RSP+16]
.L_4088da:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mov QWORD PTR [RSP],RDI
            call .L_40a5e0

            test RAX,RAX
            jne .L_4089c2

            test R12,R12
            jle .L_4089b8

            shl RBP,3
            mov DWORD PTR [RSP+8],0
            xor R15D,R15D
            nop
            nop
            nop
            nop
.L_408910:

            movsd XMM1,QWORD PTR [RBX]
            ucomisd XMM1,QWORD PTR [RIP+.L_40a590]
            ja .L_408955

            mov RDI,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R13]
            movsd XMM0,QWORD PTR [R14]
            mov RCX,R13
            mov RDX,R14
            mov RSI,RBX
            call .L_40a6b0

            test RAX,RAX
            je .L_408955

            mov RAX,QWORD PTR [RIP+.L_40a598]
            mov DWORD PTR [RSP+8],4294967282
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [RBX],RAX
.L_408955:

            add R15D,1
            add RBX,RBP
            add R13,RBP
            add R14,RBP
            cmp R15D,R12D
            jne .L_408910
.L_408967:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_4089e9

            add RSP,88
.L_40897f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408990:

            movsd XMM0,QWORD PTR [RIP+.L_40a588]
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4089cc
.L_4089a6:

            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            jmp .L_4088d5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4089b8:

            mov DWORD PTR [RSP+8],0
            jmp .L_408967
.L_4089c2:

            mov DWORD PTR [RSP+8],4294967251
            jmp .L_408967
.L_4089cc:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_4089a6
.L_4089e9:

            call __stack_chk_fail@PLT
.L_4089ee:

            nop
            nop
.L_4089f0:

            push R15
            pxor XMM3,XMM3
            push R14
            push R13
            mov R15,RDI
            push R12
            push RBP
            mov R12,RCX
            push RBX
            movapd XMM2,XMM0
            movsxd RBP,ESI
            mov RBX,RDX
            mov R14,R8
            sub RSP,88
.L_408a15:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            ucomisd XMM1,XMM3
            jp .L_408ac0

            jne .L_408ac0
.L_408a35:

            lea RDI,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mov QWORD PTR [RSP],RDI
            call .L_40a5e0

            test RAX,RAX
            jne .L_408ae3

            shl RBP,3
            xor R13D,R13D
            test R15,R15
            jle .L_408a9d
.L_408a60:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RIP+.L_40a590]
            ja .L_408a8b

            mov RDI,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R14]
            movsd XMM1,QWORD PTR [R12]
            mov RCX,R14
            mov RDX,RBX
            mov RSI,R12
            call .L_40a8d0
.L_408a8b:

            add R13D,1
            add RBX,RBP
            add R14,RBP
            add R12,RBP
            cmp R13D,R15D
            jne .L_408a60
.L_408a9d:

            xor EAX,EAX
.L_408a9f:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_408b07

            add RSP,88
.L_408ab3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_408ac0:

            movsd XMM0,QWORD PTR [RIP+.L_40a588]
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_408aea
.L_408ad6:

            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            jmp .L_408a35
.L_408ae3:

            mov EAX,4294967251
            jmp .L_408a9f
.L_408aea:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_408ad6
.L_408b07:

            call __stack_chk_fail@PLT
.L_408b0c:

            nop
            nop
            nop
            nop
.L_408b10:

            mov EAX,DWORD PTR [RDI+400]
            cmp EAX,DWORD PTR [RSI+400]
            je .L_408b28
.L_408b1e:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408b28:

            movsd XMM0,QWORD PTR [RDI+296]
            ucomisd XMM0,QWORD PTR [RSI+296]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+288]
            pxor XMM1,XMM1
            subsd XMM0,QWORD PTR [RSI+288]
            ucomisd XMM1,XMM0
            ja .L_408b80

            ucomisd XMM0,QWORD PTR [RIP+.L_40a5a8]
            ja .L_408b1e
.L_408b60:

            cmp EAX,1
            je .L_408c60

            cmp EAX,2
            je .L_408b90

            cmp EAX,3
            je .L_408cc0
.L_408b77:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408b80:

            movsd XMM1,QWORD PTR [RIP+.L_40a5a0]
            ucomisd XMM1,XMM0
            jbe .L_408b60

            jmp .L_408b1e
.L_408b90:

            movsd XMM0,QWORD PTR [RDI+408]
            ucomisd XMM0,QWORD PTR [RSI+408]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+416]
            ucomisd XMM0,QWORD PTR [RSI+416]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+424]
            ucomisd XMM0,QWORD PTR [RSI+424]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+432]
            ucomisd XMM0,QWORD PTR [RSI+432]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+440]
            ucomisd XMM0,QWORD PTR [RSI+440]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+448]
            ucomisd XMM0,QWORD PTR [RSI+448]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+456]
            ucomisd XMM0,QWORD PTR [RSI+456]
            jp .L_408b1e

            je .L_408b77

            jmp .L_408b1e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408c60:

            movsd XMM0,QWORD PTR [RDI+408]
            ucomisd XMM0,QWORD PTR [RSI+408]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+416]
            ucomisd XMM0,QWORD PTR [RSI+416]
            jp .L_408b1e

            jne .L_408b1e

            movsd XMM0,QWORD PTR [RDI+424]
            ucomisd XMM0,QWORD PTR [RSI+424]
            jp .L_408b1e

            je .L_408b77

            jmp .L_408b1e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408cc0:

            push RBP
.L_408cc1:

            push RBX
            mov RBX,RSI
            lea RDX,QWORD PTR [RIP+.L_40a3cc]
            sub RSP,8
.L_408cd0:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_40a3cc]
            mov RBP,RAX
            call .L_4043f0

            test RBP,RBP
            je .L_408d0b

            test RAX,RAX
            je .L_408d0b

            mov RSI,RAX
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_408d14
.L_408d0b:

            xor EAX,EAX
.L_408d0d:

            add RSP,8
.L_408d11:

            pop RBX
            pop RBP
            ret 
.L_408d14:

            mov EAX,1
            jmp .L_408d0d
.L_408d1b:

            nop
            nop
            nop
            nop
            nop
.L_408d20:

            mov R11D,DWORD PTR [RDI+400]
            test R11D,R11D
            je .L_408d38

            mov R10D,DWORD PTR [RSI+400]
            test R10D,R10D
            jne .L_408d40
.L_408d38:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d40:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,R9
            mov RBX,R8
            mov R12,RDX
            sub RSP,56
.L_408d5d:

            mov DWORD PTR [RSP+12],ECX
            call .L_408b10

            test EAX,EAX
            jne .L_408e20

            xor R14D,R14D
            cmp QWORD PTR [RSP+112],0
            movsd XMM0,QWORD PTR [R13+296]
            movsd XMM1,QWORD PTR [R13+288]
            movsd XMM3,QWORD PTR [R15+296]
            movsd XMM2,QWORD PTR [R15+288]
            je .L_409100
.L_408da1:

            cmp DWORD PTR [R13+400],3
            je .L_409070

            mov EDX,DWORD PTR [R15+400]
            cmp EDX,3
            jne .L_408dcb

            movsd XMM2,QWORD PTR [RIP+.L_40a5b8]
            movsd XMM3,QWORD PTR [RIP+.L_40a5b0]
.L_408dcb:

            ucomisd XMM2,XMM1
            mov ECX,1
            setp AL
            cmovne EAX,ECX
            test AL,AL
            jne .L_408e38

            ucomisd XMM3,XMM0
            setp AL
            cmovne EAX,ECX
            test AL,AL
            jne .L_408e38
.L_408dec:

            mov EAX,DWORD PTR [R13+400]
            sub EAX,1
            cmp EAX,1
            jbe .L_408e38

            sub EDX,1
            cmp EDX,1
            jbe .L_408e38
.L_408e03:

            cmp DWORD PTR [R15+400],3
            je .L_4092a0
.L_408e11:

            test R14D,R14D
            je .L_408e20

            mov RDI,QWORD PTR [RSP+112]
            call .L_403c60
.L_408e20:

            xor EAX,EAX
.L_408e22:

            add RSP,56
.L_408e26:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408e38:

            mov R9,QWORD PTR [R13]
            mov R8,QWORD PTR [RSP+112]
            mov RCX,RBP
            mov ESI,DWORD PTR [RSP+12]
            mov RDX,RBX
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            mov QWORD PTR [RSP+16],R9
            call .L_408890

            mov R9,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            mov DWORD PTR [R9],EAX
            mov RAX,QWORD PTR [R13]
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_408ec0

            jle .L_408ea0
.L_408e85:

            test R14D,R14D
            je .L_408e22

            mov RDI,QWORD PTR [RSP+112]
            call .L_403c60

            mov RAX,QWORD PTR [R13]
            mov EAX,DWORD PTR [RAX]
            jmp .L_408e22
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ea0:

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov R10D,DWORD PTR [RCX+RDX*4]
            test R10D,R10D
            je .L_408e85

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408ec0:

            mov EDX,DWORD PTR [R13+400]
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,1
            jbe .L_408f40
.L_408ecf:

            mov EAX,DWORD PTR [R15+400]
            mov R13,QWORD PTR [R15]
            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,1
            jbe .L_409170
.L_408ee5:

            mov R8,QWORD PTR [RSP+112]
            mov ESI,DWORD PTR [RSP+12]
            mov RCX,RBP
            movapd XMM1,XMM2
            mov RDX,RBX
            movapd XMM0,XMM3
            mov RDI,R12
            call .L_4089f0

            mov DWORD PTR [R13],EAX
            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_408e03

            jle .L_409300
.L_408f1c:

            test R14D,R14D
            je .L_408e22

            mov RDI,QWORD PTR [RSP+112]
            call .L_403c60

            mov RAX,QWORD PTR [R15]
            mov EAX,DWORD PTR [RAX]
            jmp .L_408e22
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f40:

            cmp EDX,1
            je .L_4093b2

            test R12,R12
            jle .L_40903f

            movsxd RSI,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_40a590]
            mov EDI,R12D
            xor ECX,ECX
            xor EDX,EDX
            shl RSI,3
.L_408f6a:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM0,XMM5
            ja .L_409031

            mov R10,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [R13+448]
            movapd XMM4,XMM0
            movsd XMM10,QWORD PTR [RBP+RDX*1]
            movsd XMM9,QWORD PTR [R10+RDX*1]
            mulsd XMM4,XMM7
            movsd XMM1,QWORD PTR [R13+432]
            movapd XMM11,XMM9
            movsd XMM6,QWORD PTR [R13+440]
            mulsd XMM11,XMM1
            addsd XMM4,XMM10
            mulsd XMM1,XMM10
            mulsd XMM7,XMM10
            movsd XMM8,QWORD PTR [R13+456]
            subsd XMM4,XMM11
            movapd XMM11,XMM6
            mulsd XMM6,XMM9
            mulsd XMM11,XMM0
            subsd XMM0,XMM7
            mulsd XMM4,XMM8
            subsd XMM1,XMM11
            addsd XMM0,XMM6
            addsd XMM4,QWORD PTR [R13+416]
            addsd XMM1,XMM9
            mulsd XMM0,XMM8
            mulsd XMM1,XMM8
            addsd XMM0,QWORD PTR [R13+408]
            addsd XMM1,QWORD PTR [R13+424]
            movsd QWORD PTR [RBX+RDX*1],XMM0
            movsd QWORD PTR [RBP+RDX*1],XMM4
            movsd QWORD PTR [R10+RDX*1],XMM1
.L_409031:

            add ECX,1
            add RDX,RSI
            cmp ECX,EDI
            jne .L_408f6a
.L_40903f:

            cmp EAX,0
            je .L_408ecf

            jg .L_408e85

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov R9D,DWORD PTR [RCX+RDX*4]
            test R9D,R9D
            jne .L_408ecf

            jmp .L_408e85
          .byte 0x66
          .byte 0x90
.L_409070:

            movsd QWORD PTR [RSP+24],XMM3
            sub RSP,8
.L_40907a:

            mov RDX,R12
            movsd QWORD PTR [RSP+24],XMM2
            push QWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+28]
            xor ESI,ESI
            mov R9,RBP
            mov R8,RBX
            mov RDI,R13
            call .L_44f120

            mov RAX,QWORD PTR [R13]
            pop RDX
            pop RCX
.L_4090a1:

            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            je .L_4090d8

            jg .L_408e85

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov R11D,DWORD PTR [RCX+RDX*4]
            test R11D,R11D
            je .L_408e85

            nop
            nop
            nop
.L_4090d8:

            mov EDX,DWORD PTR [R15+400]
            cmp EDX,3
            je .L_409395

            movsd XMM0,QWORD PTR [RIP+.L_40a5b0]
            movsd XMM1,QWORD PTR [RIP+.L_40a5b8]
            jmp .L_408dcb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409100:

            lea R14D,DWORD PTR [R12*8]
            movsd QWORD PTR [RSP+40],XMM1
            imul R14D,DWORD PTR [RSP+12]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsxd R14,R14D
            mov RDI,R14
            call .L_403c30

            mov RDX,R14
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+112],RAX
            mov R14D,1
            call memset@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_408da1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409170:

            cmp EAX,1
            je .L_40931e

            test R12,R12
            jle .L_40926d

            movsxd RCX,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_40a590]
            mov ESI,R12D
            xor EDX,EDX
            xor EAX,EAX
            shl RCX,3
.L_40919a:

            movsd XMM0,QWORD PTR [RBX+RAX*1]
            ucomisd XMM0,XMM5
            ja .L_40925f

            movsd XMM1,QWORD PTR [RBP+RAX*1]
            mov RDI,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [R15+456]
            subsd XMM0,QWORD PTR [R15+408]
            subsd XMM1,QWORD PTR [R15+416]
            movsd XMM7,QWORD PTR [R15+440]
            movsd XMM4,QWORD PTR [RDI+RAX*1]
            subsd XMM4,QWORD PTR [R15+424]
            divsd XMM0,XMM6
            divsd XMM1,XMM6
            divsd XMM4,XMM6
            movsd XMM6,QWORD PTR [R15+448]
            mulsd XMM6,XMM1
            mulsd XMM7,XMM4
            addsd XMM6,XMM0
            subsd XMM6,XMM7
            movapd XMM7,XMM1
            movsd QWORD PTR [RBX+RAX*1],XMM6
            movsd XMM6,QWORD PTR [R15+448]
            mulsd XMM6,XMM0
            subsd XMM7,XMM6
            movapd XMM6,XMM7
            movsd XMM7,QWORD PTR [R15+432]
            mulsd XMM7,XMM4
            addsd XMM6,XMM7
            movsd QWORD PTR [RBP+RAX*1],XMM6
            mulsd XMM0,QWORD PTR [R15+440]
            mulsd XMM1,QWORD PTR [R15+432]
            subsd XMM0,XMM1
            addsd XMM0,XMM4
            movsd QWORD PTR [RDI+RAX*1],XMM0
.L_40925f:

            add EDX,1
            add RAX,RCX
            cmp EDX,ESI
            jne .L_40919a
.L_40926d:

            mov EAX,DWORD PTR [R13]
            cmp EAX,0
            je .L_408ee5

            jg .L_408f1c

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov R8D,DWORD PTR [RCX+RDX*4]
            test R8D,R8D
            jne .L_408ee5

            jmp .L_408f1c
.L_4092a0:

            sub RSP,8
.L_4092a4:

            mov ESI,1
            mov R9,RBP
            push QWORD PTR [RSP+120]
            mov ECX,DWORD PTR [RSP+28]
            mov R8,RBX
            mov RDX,R12
            mov RDI,R15
            call .L_44f120

            mov RAX,QWORD PTR [R15]
            pop RCX
            pop RSI
            mov EAX,DWORD PTR [RAX]
            cmp EAX,0
            je .L_408e11

            jg .L_408f1c

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov EDX,DWORD PTR [RCX+RDX*4]
            test EDX,EDX
            jne .L_408e11

            jmp .L_408f1c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409300:

            mov EDX,EAX
            lea RCX,QWORD PTR [RIP+.L_40a4c0]
            neg EDX
            movsxd RDX,EDX
            mov EDI,DWORD PTR [RCX+RDX*4]
            test EDI,EDI
            jne .L_408e03

            jmp .L_408f1c
.L_40931e:

            test R12,R12
            jle .L_40926d

            movsxd RCX,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_40a590]
            mov ESI,R12D
            xor EDX,EDX
            xor EAX,EAX
            shl RCX,3
            nop
.L_409340:

            movsd XMM0,QWORD PTR [RBX+RAX*1]
            ucomisd XMM0,XMM5
            ja .L_409386

            subsd XMM0,QWORD PTR [R15+408]
            mov RDI,QWORD PTR [RSP+112]
            movsd QWORD PTR [RBX+RAX*1],XMM0
            movsd XMM0,QWORD PTR [RBP+RAX*1]
            subsd XMM0,QWORD PTR [R15+416]
            movsd QWORD PTR [RBP+RAX*1],XMM0
            movsd XMM0,QWORD PTR [RDI+RAX*1]
            subsd XMM0,QWORD PTR [R15+424]
            movsd QWORD PTR [RDI+RAX*1],XMM0
.L_409386:

            add EDX,1
            add RAX,RCX
            cmp EDX,ESI
            jne .L_409340

            jmp .L_40926d
.L_409395:

            movsd XMM3,QWORD PTR [RIP+.L_40a5b0]
            movsd XMM2,QWORD PTR [RIP+.L_40a5b8]
            movapd XMM0,XMM3
            movapd XMM1,XMM2
            jmp .L_408dec
.L_4093b2:

            test R12,R12
            jle .L_40903f

            movsxd RSI,DWORD PTR [RSP+12]
            movsd XMM5,QWORD PTR [RIP+.L_40a590]
            mov EDI,R12D
            xor ECX,ECX
            xor EDX,EDX
            shl RSI,3
            nop
            nop
            nop
            nop
            nop
.L_4093d8:

            movsd XMM0,QWORD PTR [RBX+RDX*1]
            ucomisd XMM0,XMM5
            ja .L_409420

            addsd XMM0,QWORD PTR [R13+408]
            mov R10,QWORD PTR [RSP+112]
            movsd QWORD PTR [RBX+RDX*1],XMM0
            movsd XMM0,QWORD PTR [RBP+RDX*1]
            addsd XMM0,QWORD PTR [R13+416]
            movsd QWORD PTR [RBP+RDX*1],XMM0
            movsd XMM0,QWORD PTR [R10+RDX*1]
            addsd XMM0,QWORD PTR [R13+424]
            movsd QWORD PTR [R10+RDX*1],XMM0
.L_409420:

            add ECX,1
            add RDX,RSI
            cmp ECX,EDI
            jne .L_4093d8

            jmp .L_40903f
.L_40942f:

            nop
.L_409430:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14,R8
            push RBP
            push RBX
            lea R8,QWORD PTR [RDI+516]
            mov RBX,RDI
            mov R13,RSI
            mov RBP,RDX
            sub RSP,168
.L_409457:

            mov R9,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RIP+.L_40a3d6]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            test ECX,ECX
            mov RSI,R8
            mov DWORD PTR [R9],0
            mov R12,QWORD PTR [RSP+224]
            mov DWORD PTR [RAX],0
            mov EAX,1
            cmovne EAX,ECX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov DWORD PTR [RSP+4],EAX
            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4098b0
.L_4094b1:

            movsd XMM0,QWORD PTR [RBX+384]
            mov ESI,DWORD PTR [RBX+316]
            ucomisd XMM0,QWORD PTR [RIP+.L_40a588]
            jp .L_4094cf

            je .L_409790
.L_4094cf:

            test R12,R12
            je .L_409ec0

            test RBP,RBP
            jle .L_409514

            movsxd RAX,DWORD PTR [RSP+4]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R12
            jmp .L_409500
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4094f8:

            movsd XMM0,QWORD PTR [RBX+384]
.L_409500:

            mulsd XMM0,QWORD PTR [RAX]
            add RDX,1
            movsd QWORD PTR [RAX],XMM0
            add RAX,RCX
            cmp RBP,RDX
            jne .L_4094f8
.L_409514:

            test ESI,ESI
            jne .L_4097a1
.L_40951c:

            mov EDI,DWORD PTR [RBX+312]
            test EDI,EDI
            jne .L_409842

            cmp QWORD PTR [RBX+64],0
            je .L_409d80

            test R12,R12
            je .L_409ec8

            test RBP,RBP
            jle .L_4096c8

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            xor R8D,R8D
            mov QWORD PTR [RSP+32],R13
            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov R13,R12
            mov RBP,RBX
            mov QWORD PTR [RSP+40],R14
            mov RBX,R14
            mov QWORD PTR [RSP+48],R15
            lea R9,QWORD PTR [RAX*8]
            mov R14,R15
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+24],RAX
            mov R12,R8
            mov R15,R9
            nop
            nop
            nop
.L_409598:

            movsd XMM0,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [R14]
            ucomisd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+136],XMM1
            movsd XMM1,QWORD PTR [R13]
            movsd QWORD PTR [RSP+144],XMM1
            ja .L_409671

            movsd QWORD PTR [RSP+128],XMM0
            lea RDI,QWORD PTR [RSP+64]
            sub RSP,8
.L_4095d7:

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            mov RSI,RBP
            push QWORD PTR [RSP+152]
            call .L_44c4b0

            mov RSI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RSP+112]
            add RSP,32
.L_40960e:

            mov R10D,DWORD PTR [RSI]
            test R10D,R10D
            je .L_409662

            lea ESI,DWORD PTR [R10-33]
            cmp ESI,1
            jbe .L_409652

            lea ESI,DWORD PTR [R10+44]
            cmp ESI,44
            ja .L_409760

            cmp QWORD PTR [RSP+8],1
            je .L_409760

            mov ESI,R10D
            lea RAX,QWORD PTR [RIP+.L_40a4c0]
            neg ESI
            movsxd RSI,ESI
            mov ESI,DWORD PTR [RAX+RSI*4]
            test ESI,ESI
            je .L_409760
.L_409652:

            movsd XMM0,QWORD PTR [RIP+.L_40a598]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
.L_409662:

            movsd QWORD PTR [RBX],XMM3
            movsd QWORD PTR [R14],XMM1
            movsd QWORD PTR [R13],XMM0
.L_409671:

            add R12,1
            add RBX,R15
            add R14,R15
            add R13,R15
            cmp QWORD PTR [RSP+8],R12
            jne .L_409598

            mov RBX,RBP
            mov R13,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+16]
.L_4096ab:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+496]
            jp .L_409871

            jne .L_409871

            nop
            nop
            nop
            nop
            nop
.L_4096c8:

            mov EDX,DWORD PTR [RBX+476]
            test R12,R12
            setne BYTE PTR [RSP+8]
            movzx EAX,BYTE PTR [RSP+8]
            test EDX,EDX
            je .L_40971d

            test AL,AL
            je .L_40971d

            push R12
.L_4096e5:

            push R15
            lea RCX,QWORD PTR [RBX+488]
            push R14
            mov EAX,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RBX+480]
            lea RSI,QWORD PTR [RIP+.L_40a3da]
            xor R8D,R8D
            mov R9,RBP
            mov RDI,RBX
            push RAX
            call .L_40d740

            add RSP,32
            test EAX,EAX
            jne .L_409e90
.L_40971d:

            sub RSP,8
            mov R9,R15
            mov R8,R14
            push R12
            mov ECX,DWORD PTR [RSP+20]
            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            call .L_408d20

            test EAX,EAX
            mov R10D,EAX
            pop R9
            pop R11
            je .L_4099c8

            mov RAX,QWORD PTR [RBX]
            mov R10D,DWORD PTR [RAX]
            test R10D,R10D
            je .L_409bc8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409760:

            mov RSI,QWORD PTR [RSP+152]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_40a381

            add RSP,168
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409790:

            test ESI,ESI
            je .L_40951c

            test R12,R12
            je .L_409ec8
.L_4097a1:

            movsd XMM4,QWORD PTR [RIP+.L_40a588]
            ucomisd XMM4,QWORD PTR [RBX+368]
            jp .L_4097b5

            je .L_409812
.L_4097b5:

            test RBP,RBP
            jle .L_409812

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_4097d8:

            movsd XMM0,QWORD PTR [R14+RAX*1]
            ucomisd XMM0,XMM2
            ja .L_409806

            mulsd XMM0,QWORD PTR [RBX+368]
            movsd QWORD PTR [R14+RAX*1],XMM0
            movsd XMM0,QWORD PTR [R15+RAX*1]
            mulsd XMM0,QWORD PTR [RBX+368]
            movsd QWORD PTR [R15+RAX*1],XMM0
.L_409806:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jne .L_4097d8
.L_409812:

            mov ESI,DWORD PTR [RSP+4]
            movsd XMM1,QWORD PTR [RBX+288]
            movsd XMM0,QWORD PTR [RBX+296]
            mov R8,R12
            mov RCX,R15
            mov RDX,R14
            mov RDI,RBP
            call .L_4089f0

            test EAX,EAX
            mov R10D,EAX
            jne .L_409760
.L_409842:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+496]
            jp .L_409856

            je .L_4096c8
.L_409856:

            test RBP,RBP
            jle .L_4096c8

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            mov QWORD PTR [RSP+24],RAX
.L_409871:

            mov RCX,QWORD PTR [RSP+24]
            mov RAX,R14
            xor EDX,EDX
            shl RCX,3
            nop
.L_409880:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_409896

            addsd XMM0,QWORD PTR [RBX+496]
            movsd QWORD PTR [RAX],XMM0
.L_409896:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jg .L_409880

            jmp .L_4096c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4098b0:

            test RDX,RDX
            jle .L_4094b1

            movsxd RAX,DWORD PTR [RSP+4]
            movq XMM2,QWORD PTR [RIP+.L_40a5d0]
            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_40a420]
            movapd XMM5,XMM2
            xor ECX,ECX
            movapd XMM4,XMM2
            xor EDI,EDI
            lea R10,QWORD PTR [RAX*8]
.L_4098e5:

            test R12,R12
            movsd XMM0,QWORD PTR [R14+RCX*1]
            movsd XMM3,QWORD PTR [R15+RCX*1]
            je .L_4098fc

            movsd XMM1,QWORD PTR [R12+RCX*1]
.L_4098fc:

            mov EDX,1
            movzx EAX,BYTE PTR [R8+RDX*1-1]
            sub EAX,100
            cmp AL,19
            ja .L_40994e
.L_40990e:

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RSI+RAX*4]
            add RAX,RSI
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409920:

            xorpd XMM0,XMM5
.L_409924:

            movsd QWORD PTR [R15+RCX*1],XMM0
.L_40992a:

            cmp RDX,3
            je .L_409980
.L_409930:

            cmp EDX,1
            je .L_40a309

            movapd XMM0,XMM1
.L_40993d:

            add RDX,1
            movzx EAX,BYTE PTR [R8+RDX*1-1]
            sub EAX,100
            cmp AL,19
            jbe .L_40990e
.L_40994e:

            mov ESI,4294967249
            mov RDI,R9
            call .L_404af0

            mov R10D,4294967249
            jmp .L_409760
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409970:

            xorpd XMM0,XMM4
.L_409974:

            cmp RDX,3
            movsd QWORD PTR [R14+RCX*1],XMM0
            jne .L_409930
.L_409980:

            add RDI,1
            add RCX,R10
            cmp RBP,RDI
            jne .L_4098e5

            jmp .L_4094b1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409998:

            test R12,R12
            je .L_40992a

            xorpd XMM0,XMM2
            movsd QWORD PTR [R12+RCX*1],XMM0
            jmp .L_40992a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4099b0:

            test R12,R12
            je .L_40992a

            movsd QWORD PTR [R12+RCX*1],XMM0
            jmp .L_40992a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4099c8:

            mov R8D,DWORD PTR [R13+476]
            test R8D,R8D
            je .L_409a28

            cmp BYTE PTR [RSP+8],0
            je .L_409a28

            mov DWORD PTR [RSP+16],EAX
            push R12
.L_4099e1:

            lea RCX,QWORD PTR [R13+488]
            push R15
            push R14
            lea RDX,QWORD PTR [R13+480]
            mov EAX,DWORD PTR [RSP+28]
            lea RSI,QWORD PTR [RIP+.L_40a3da]
            mov R9,RBP
            mov R8D,1
            mov RDI,R13
            push RAX
            call .L_40d740

            add RSP,32
.L_409a14:

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+16]
            jne .L_409bc8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409a28:

            pxor XMM5,XMM5
            ucomisd XMM5,QWORD PTR [R13+496]
            jp .L_409a39

            je .L_409a83
.L_409a39:

            test RBP,RBP
            jle .L_409a83

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R14
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409a60:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_409a77

            subsd XMM0,QWORD PTR [R13+496]
            movsd QWORD PTR [RAX],XMM0
.L_409a77:

            add RDX,1
            add RAX,RCX
            cmp RBP,RDX
            jne .L_409a60
.L_409a83:

            mov EDI,DWORD PTR [R13+316]
            test EDI,EDI
            je .L_409bd8

            test R12,R12
            je .L_40a368

            mov ESI,DWORD PTR [RSP+4]
            movsd XMM1,QWORD PTR [R13+288]
            movsd XMM0,QWORD PTR [R13+296]
            mov R8,R12
            mov RCX,R15
            mov RDX,R14
            mov RDI,RBP
            mov DWORD PTR [RSP+16],R10D
            call .L_408890

            movsd XMM4,QWORD PTR [RIP+.L_40a588]
            mov R10D,DWORD PTR [RSP+16]
            ucomisd XMM4,QWORD PTR [R13+376]
            jp .L_409ae5

            je .L_409eff
.L_409ae5:

            test RBP,RBP
            jle .L_40a2cc

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            mov RCX,R15
            xor EDX,EDX
            mov QWORD PTR [RSP+24],RAX
            lea RSI,QWORD PTR [RAX*8]
            mov RAX,R14
.L_409b10:

            movsd XMM0,QWORD PTR [RAX]
            ucomisd XMM0,XMM2
            ja .L_409b38

            mulsd XMM0,QWORD PTR [R13+376]
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,QWORD PTR [R13+376]
            movsd QWORD PTR [RCX],XMM0
.L_409b38:

            add RDX,1
            add RAX,RSI
            add RCX,RSI
            cmp RBP,RDX
            jne .L_409b10
.L_409b47:

            movsd XMM5,QWORD PTR [RIP+.L_40a588]
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            jp .L_409b67

            je .L_409f31
.L_409b67:

            mov RAX,QWORD PTR [RSP+24]
            xor EDX,EDX
            lea RCX,QWORD PTR [RAX*8]
            mov RAX,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409b80:

            movsd XMM0,QWORD PTR [RAX]
            add RDX,1
            mulsd XMM0,QWORD PTR [R13+392]
            movsd QWORD PTR [RAX],XMM0
            add RAX,RCX
            cmp RBP,RDX
            jg .L_409b80

            lea RDI,QWORD PTR [RIP+.L_40a3d6]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_409760

            mov RDI,QWORD PTR [R13]
            jmp .L_409f66
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409bc8:

            mov RAX,QWORD PTR [R13]
            mov R10D,DWORD PTR [RAX]
            jmp .L_409760
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409bd8:

            mov ESI,DWORD PTR [R13+312]
            test ESI,ESI
            jne .L_409ef0

            cmp QWORD PTR [R13+56],0
            je .L_40a195

            test R12,R12
            je .L_40a386

            test RBP,RBP
            jle .L_40a2cc

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            mov RCX,R14
            xor EBX,EBX
            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov RBP,R13
            mov QWORD PTR [RSP+40],R14
            mov R13,R15
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],R12
            lea R9,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R12
            mov DWORD PTR [RSP+32],R10D
            mov R12,RBX
            mov R15,RCX
            mov R14,R9
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409c60:

            movsd XMM0,QWORD PTR [R15]
            movsd XMM1,QWORD PTR [R13]
            ucomisd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+136],XMM1
            movsd XMM1,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+144],XMM1
            ja .L_409d3d

            movsd QWORD PTR [RSP+128],XMM0
            lea RDI,QWORD PTR [RSP+96]
            sub RSP,8
.L_409c9f:

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            mov RSI,RBP
            push QWORD PTR [RSP+152]
            call .L_44c220

            mov RSI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+144]
            add RSP,32
.L_409cdf:

            mov ESI,DWORD PTR [RSI]
            test ESI,ESI
            je .L_409d2e

            lea EDI,DWORD PTR [RSI-33]
            cmp EDI,1
            jbe .L_409d1e

            lea EDI,DWORD PTR [RSI+44]
            cmp EDI,44
            ja .L_40a312

            cmp QWORD PTR [RSP+8],1
            je .L_40a312

            mov EDI,ESI
            lea RAX,QWORD PTR [RIP+.L_40a4c0]
            neg EDI
            movsxd RDI,EDI
            mov ECX,DWORD PTR [RAX+RDI*4]
            test ECX,ECX
            je .L_40a312
.L_409d1e:

            movsd XMM0,QWORD PTR [RIP+.L_40a598]
            movapd XMM1,XMM0
            movapd XMM3,XMM0
.L_409d2e:

            movsd QWORD PTR [R15],XMM3
            movsd QWORD PTR [R13],XMM1
            movsd QWORD PTR [RBX],XMM0
.L_409d3d:

            add R12,1
            add R15,R14
            add R13,R14
            add RBX,R14
            cmp QWORD PTR [RSP+8],R12
            jne .L_409c60

            mov R13,RBP
            mov R10D,DWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            jmp .L_409b47
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409d80:

            cmp QWORD PTR [RBX+48],0
            je .L_40a38e

            test RBP,RBP
            jle .L_4096c8

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            mov RCX,R15
            xor EDX,EDX
            mov QWORD PTR [RSP+16],R13
            movsd QWORD PTR [RSP+8],XMM2
            mov QWORD PTR [RSP+32],R14
            mov QWORD PTR [RSP+40],R15
            mov QWORD PTR [RSP+48],R12
            mov R15,RBX
            mov R12,RCX
            lea RSI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov RBX,RAX
            mov R14,RDX
            mov R13,RSI
            nop
.L_409de0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RSP+8]
            ja .L_409e55

            movsd XMM1,QWORD PTR [R12]
            mov RDI,R15
            call .L_44c050

            mov RDI,QWORD PTR [R15]
            mov R10D,DWORD PTR [RDI]
            test R10D,R10D
            je .L_409e4b

            lea EDI,DWORD PTR [R10-33]
            cmp EDI,1
            jbe .L_409e3f

            lea EDI,DWORD PTR [R10+44]
            cmp EDI,44
            ja .L_409760

            cmp RBP,1
            je .L_409760

            mov EDI,R10D
            lea RAX,QWORD PTR [RIP+.L_40a4c0]
            neg EDI
            movsxd RDI,EDI
            mov ECX,DWORD PTR [RAX+RDI*4]
            test ECX,ECX
            je .L_409760
.L_409e3f:

            movsd XMM1,QWORD PTR [RIP+.L_40a598]
            movapd XMM0,XMM1
.L_409e4b:

            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [R12],XMM1
.L_409e55:

            add R14,1
            add RBX,R13
            add R12,R13
            cmp RBP,R14
            jne .L_409de0

            mov RBX,R15
            mov R13,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+32]
            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4096ab
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409e90:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40a381

            mov RDI,QWORD PTR [RBX]
            add RSP,168
.L_409eb1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_404ae0
.L_409ec0:

            test ESI,ESI
            je .L_40951c
.L_409ec8:

            mov RDI,RBX
.L_409ecb:

            call .L_404a30

            mov ESI,4294967251
            mov RDI,RAX
            call .L_404af0

            mov R10D,4294967251
            jmp .L_409760
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409ef0:

            mov EAX,DWORD PTR [R13+512]
            test EAX,EAX
            jne .L_40a080
.L_409eff:

            movsd XMM5,QWORD PTR [RIP+.L_40a588]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_409f31

            cmp BYTE PTR [RSP+8],0
            jne .L_40a17d
.L_409f31:

            lea RDI,QWORD PTR [RIP+.L_40a3d6]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_409760

            test RBP,RBP
            mov RDI,QWORD PTR [R13]
            jle .L_409760

            movsxd RAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RSP+24],RAX
.L_409f66:

            movq XMM3,QWORD PTR [RIP+.L_40a5d0]
            mov R13,QWORD PTR [RSP+24]
            test R12,R12
            pxor XMM2,XMM2
            lea RSI,QWORD PTR [RIP+.L_40a470]
            movapd XMM5,XMM3
            sete BL
            movapd XMM4,XMM3
            shl R13,3
            xor ECX,ECX
            xor R11D,R11D
.L_409f95:

            test R12,R12
            movsd XMM0,QWORD PTR [R14+RCX*1]
            movsd XMM1,QWORD PTR [R15+RCX*1]
            je .L_409fac

            movsd XMM2,QWORD PTR [R12+RCX*1]
.L_409fac:

            movapd XMM8,XMM2
            movapd XMM7,XMM1
            movapd XMM6,XMM0
            xor EAX,EAX
            xorpd XMM8,XMM3
            xorpd XMM7,XMM5
            xorpd XMM6,XMM4
.L_409fc8:

            cmp EAX,2
            mov EDX,EAX
            jne .L_409fd3

            test BL,BL
            jne .L_40a010
.L_409fd3:

            test RAX,RAX
            je .L_40a31a

            cmp EDX,1
            mov R9,R12
            cmove R9,R15
.L_409fe6:

            movzx EDX,BYTE PTR [R8+RAX*1]
            sub EDX,100
            cmp DL,19
            ja .L_40a168

            movzx EDX,DL
            movsxd RDX,DWORD PTR [RSI+RDX*4]
            add RDX,RSI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a008:

            movsd QWORD PTR [R9+RCX*1],XMM6
            nop
            nop
.L_40a010:

            add RAX,1
            cmp RAX,3
            jne .L_409fc8

            add R11,1
            add RCX,R13
            cmp RBP,R11
            jg .L_409f95

            jmp .L_409760
          .byte 0x90
.L_40a030:

            movsd QWORD PTR [R9+RCX*1],XMM2
            jmp .L_40a010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a040:

            movsd QWORD PTR [R9+RCX*1],XMM7
            jmp .L_40a010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a050:

            movsd QWORD PTR [R9+RCX*1],XMM1
            jmp .L_40a010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a060:

            movsd QWORD PTR [R9+RCX*1],XMM0
            jmp .L_40a010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a070:

            movsd QWORD PTR [R9+RCX*1],XMM8
            jmp .L_40a010
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a080:

            test RBP,RBP
            jle .L_40a32a

            movsxd RAX,DWORD PTR [RSP+4]
            mov RBX,R14
            mov QWORD PTR [RSP+48],R14
            mov QWORD PTR [RSP+56],R12
            mov R14,RBP
            mov DWORD PTR [RSP+40],R10D
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            movsd XMM3,QWORD PTR [RIP+.L_40a5c0]
            lea RDX,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RBP,RAX
            mov R12,RDX
            jmp .L_40a0e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a0d0:

            add RBP,1
            add RBX,R12
            cmp R14,RBP
            je .L_40a2f5
.L_40a0e0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,XMM2
            ja .L_40a0d0

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call fmod@PLT

            movsd XMM1,QWORD PTR [R13+504]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RSP+32]
            subsd XMM4,QWORD PTR [RIP+.L_40a5c8]
            ucomisd XMM4,XMM0
            jbe .L_40a13a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a130:

            addsd XMM0,XMM3
            ucomisd XMM4,XMM0
            ja .L_40a130
.L_40a13a:

            addsd XMM1,QWORD PTR [RIP+.L_40a5c8]
            ucomisd XMM0,XMM1
            jbe .L_40a15a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a150:

            subsd XMM0,XMM3
            ucomisd XMM0,XMM1
            ja .L_40a150
.L_40a15a:

            movsd QWORD PTR [RBX],XMM0
            jmp .L_40a0d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a168:

            mov ESI,4294967249
            call .L_404af0

            mov R10D,4294967249
            jmp .L_409760
.L_40a17d:

            test RBP,RBP
            jle .L_409760

            movsxd RAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_409b67
.L_40a195:

            test RBP,RBP
            jle .L_40a32a

            movsxd RAX,DWORD PTR [RSP+4]
            movsd XMM2,QWORD PTR [RIP+.L_40a590]
            mov RCX,R15
            xor EBX,EBX
            mov QWORD PTR [RSP+40],R14
            movsd QWORD PTR [RSP+16],XMM2
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],R12
            mov R15,R13
            mov R12,RBX
            mov DWORD PTR [RSP+32],R10D
            lea RSI,QWORD PTR [RAX*8]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            mov R13,RCX
            mov RBX,RAX
            mov R14,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a1f0:

            movsd XMM0,QWORD PTR [RBX]
            ucomisd XMM0,QWORD PTR [RSP+16]
            ja .L_40a267

            movsd XMM1,QWORD PTR [R13]
            mov RDI,R15
            call .L_44be30

            mov RDI,QWORD PTR [R15]
            mov EDI,DWORD PTR [RDI]
            test EDI,EDI
            je .L_40a25d

            lea R8D,DWORD PTR [RDI-33]
            cmp R8D,1
            jbe .L_40a251

            lea R8D,DWORD PTR [RDI+44]
            cmp R8D,44
            ja .L_40a322

            cmp RBP,1
            je .L_40a322

            mov R8D,EDI
            lea RAX,QWORD PTR [RIP+.L_40a4c0]
            neg R8D
            movsxd R8,R8D
            mov EDX,DWORD PTR [RAX+R8*4]
            test EDX,EDX
            je .L_40a322
.L_40a251:

            movsd XMM1,QWORD PTR [RIP+.L_40a598]
            movapd XMM0,XMM1
.L_40a25d:

            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [R13],XMM1
.L_40a267:

            add R12,1
            add RBX,R14
            add R13,R14
            cmp RBP,R12
            jne .L_40a1f0

            mov R13,R15
            mov R10D,DWORD PTR [RSP+32]
            mov R14,QWORD PTR [RSP+40]
            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
.L_40a291:

            movsd XMM4,QWORD PTR [RIP+.L_40a588]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM4,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_409f31

            cmp BYTE PTR [RSP+8],0
            je .L_409f31

            jmp .L_409b67
.L_40a2cc:

            movsd XMM5,QWORD PTR [RIP+.L_40a588]
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            jp .L_409760

            jne .L_409760

            jmp .L_409f31
.L_40a2f5:

            mov RBP,R14
            mov R10D,DWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            jmp .L_40a291
.L_40a309:

            movapd XMM0,XMM3
            jmp .L_40993d
.L_40a312:

            mov R10D,ESI
            jmp .L_409760
.L_40a31a:

            mov R9,R14
            jmp .L_409fe6
.L_40a322:

            mov R10D,EDI
            jmp .L_409760
.L_40a32a:

            movsd XMM5,QWORD PTR [RIP+.L_40a588]
            mov EDX,1
            lea R8,QWORD PTR [R13+516]
            ucomisd XMM5,QWORD PTR [R13+384]
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_409f31

            cmp BYTE PTR [RSP+8],0
            je .L_409f31

            xor R10D,R10D
            jmp .L_409760
.L_40a368:

            mov RDI,QWORD PTR [R13]
            mov ESI,4294967251
            call .L_404af0

            mov R10D,4294967251
            jmp .L_409760
.L_40a381:

            call __stack_chk_fail@PLT
.L_40a386:

            mov RDI,R13
            jmp .L_409ecb
.L_40a38e:

            mov RDI,RBX
            call .L_404a30

            mov ESI,4294967279
            mov RDI,RAX
            call .L_404af0

            mov RDI,RBX
            call .L_404a30

            lea RDX,QWORD PTR [RIP+.L_40a3e8]
            mov RDI,RAX
            mov ESI,1
            xor EAX,EAX
            call .L_404c10

            mov R10D,4294967279
            jmp .L_409760
.L_40a3cc:
          .string "snadgrids"
.L_40a3d6:
          .byte 0x65
          .byte 0x6e
          .byte 0x75
          .byte 0x0
.L_40a3da:
          .string "sgeoidgrids"
          .byte 0x66
          .byte 0x90
.L_40a3e8:
          .string "pj_transform(): source projection not invertable"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a420:
          .long .L_409998-.L_40a420
          .long .L_409974-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_409924-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_409920-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_4099b0-.L_40a420
          .long .L_40994e-.L_40a420
          .long .L_409970-.L_40a420
.L_40a470:
          .long .L_40a070-.L_40a470
          .long .L_40a060-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a050-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a040-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a030-.L_40a470
          .long .L_40a168-.L_40a470
          .long .L_40a008-.L_40a470
.L_40a4c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a588:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40a590:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_40a598:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_40a5a0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0xbd
.L_40a5a8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xcb
          .byte 0x3d
.L_40a5b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xa6
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_40a5b8:
          .byte 0xf0
          .byte 0x94
          .byte 0xfe
          .byte 0xf1
          .byte 0x90
          .byte 0x6b
          .byte 0x7b
          .byte 0x3f
.L_40a5c0:

            sbb BYTE PTR [RIP+.L_65fea8+567671650],CH
            sbb DWORD PTR [RAX+24],EAX
            sub EAX,OFFSET .L_65fea8+567671658
# WARNING: found overlapping blocks at address a398
.set .L_40a5c8, . - 6

          .byte 0x9
          .byte 0x40
.L_40a5d0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_40a5e0:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            jae .L_40a658

            ucomisd XMM2,XMM1
            jae .L_40a640

            ucomisd XMM1,XMM0
            mov EAX,16
            ja .L_40a636

            movsd QWORD PTR [RDI],XMM0
            mulsd XMM0,XMM0
            xor EAX,EAX
            movsd QWORD PTR [RDI+8],XMM1
            mulsd XMM1,XMM1
            movapd XMM2,XMM0
            movsd QWORD PTR [RDI+16],XMM0
            movsd QWORD PTR [RDI+24],XMM1
            subsd XMM2,XMM1
            movapd XMM3,XMM2
            divsd XMM2,XMM1
            divsd XMM3,XMM0
            movsd QWORD PTR [RDI+40],XMM2
            movsd QWORD PTR [RDI+32],XMM3
.L_40a636:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a640:

            mov EAX,8
            mov RDX,RAX
            or RDX,16
            ucomisd XMM1,XMM0
            cmova RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a658:

            ucomisd XMM2,XMM1
            jae .L_40a678

            ucomisd XMM1,XMM0
            mov EDX,4
            mov EAX,20
            cmovbe RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a678:

            mov EAX,12
            mov RDX,RAX
            or RDX,16
            ucomisd XMM1,XMM0
            cmova RAX,RDX
            ret 
.L_40a68d:

            nop
            nop
            nop
.L_40a690:

            movsd XMM0,QWORD PTR [RDI]
            movsd QWORD PTR [RSI],XMM0
            movsd XMM0,QWORD PTR [RDI+8]
            movsd QWORD PTR [RDX],XMM0
            ret 
.L_40a6a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a6b0:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RSI
            movapd XMM4,XMM0
            mov RBX,RDI
            sub RSP,88
.L_40a6c7:

            mov R12,RDX
            movsd XMM0,QWORD PTR [RIP+.L_40ae40]
            ucomisd XMM0,XMM4
            jbe .L_40a7e0

            ucomisd XMM4,QWORD PTR [RIP+.L_40ae48]
            jbe .L_40a820

            movsd XMM7,QWORD PTR [RIP+.L_40ae30]
            movsd XMM3,QWORD PTR [RIP+.L_40ae28]
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_40ae38]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM7
.L_40a712:

            ucomisd XMM1,QWORD PTR [RIP+.L_40ae60]
            jbe .L_40a724

            subsd XMM1,QWORD PTR [RIP+.L_40ae68]
.L_40a724:

            mulsd XMM0,QWORD PTR [RBX+32]
            movapd XMM5,XMM3
            pxor XMM4,XMM4
            movsd XMM6,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+24],XMM6
            subsd XMM5,XMM0
            ucomisd XMM4,XMM5
            sqrtsd XMM7,XMM5
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM7
            ja .L_40a89d
.L_40a757:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            xor EAX,EAX
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM4,XMM0
            movsd QWORD PTR [RBP],XMM4
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [R12],XMM0
            subsd XMM3,QWORD PTR [RBX+32]
            mulsd XMM3,XMM1
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [R13],XMM2
            add RSP,88
.L_40a7d6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a7e0:

            ucomisd XMM4,QWORD PTR [RIP+.L_40ae50]
            jbe .L_40a840
.L_40a7ea:

            movsd XMM0,QWORD PTR [RIP+.L_40ae58]
            ucomisd XMM0,XMM4
            jbe .L_40a82a

            movsd XMM3,QWORD PTR [RIP+.L_40ae28]
            movsd XMM5,QWORD PTR [RIP+.L_40ae30]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            jmp .L_40a712
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a820:

            ucomisd XMM4,QWORD PTR [RIP+.L_40ae50]
            ja .L_40a7ea
.L_40a82a:

            add RSP,88
.L_40a82e:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a840:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_40ae28]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,XMM6
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_40a712
.L_40a89d:

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_40a757
.L_40a8cb:

            nop
            nop
            nop
            nop
            nop
.L_40a8d0:

            movapd XMM3,XMM1
            push R13
            movapd XMM1,XMM0
            push R12
            movapd XMM4,XMM0
            push RBP
            mulsd XMM1,XMM0
            movapd XMM0,XMM3
            pxor XMM6,XMM6
            push RBX
            mulsd XMM0,XMM3
            mov RBX,RDI
            mov R13,RSI
            sub RSP,104
.L_40a8fc:

            mov R12,RCX
            addsd XMM1,XMM0
            ucomisd XMM6,XMM1
            sqrtsd XMM8,XMM1
            ja .L_40aced
.L_40a912:

            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            ja .L_40ad4f
.L_40a92c:

            movapd XMM1,XMM8
            movsd XMM0,QWORD PTR [RIP+.L_40ae70]
            divsd XMM1,QWORD PTR [RBX]
            ucomisd XMM0,XMM1
            jbe .L_40ab58

            movapd XMM1,XMM5
            mov QWORD PTR [RDX],0
            divsd XMM1,QWORD PTR [RBX]
            ucomisd XMM0,XMM1
            ja .L_40ab00
.L_40a960:

            movapd XMM7,XMM8
            movsd XMM10,QWORD PTR [RIP+.L_40ae78]
            movsd XMM11,QWORD PTR [RBX+32]
            divsd XMM7,XMM5
            movapd XMM0,XMM10
            movapd XMM9,XMM2
            subsd XMM0,XMM11
            mulsd XMM0,XMM11
            divsd XMM9,XMM5
            mulsd XMM0,XMM7
            movsd XMM5,QWORD PTR [RIP+.L_40ae28]
            movapd XMM4,XMM5
            mulsd XMM0,XMM7
            subsd XMM4,XMM0
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            movapd XMM0,XMM4
            ja .L_40adad
.L_40a9bb:

            movapd XMM4,XMM5
            movapd XMM3,XMM5
            xor EBP,EBP
            divsd XMM4,XMM1
            subsd XMM3,XMM11
            mulsd XMM3,XMM7
            mulsd XMM3,XMM4
            mulsd XMM4,XMM9
            jmp .L_40aa77
.L_40a9e0:

            mulsd XMM1,QWORD PTR [RBX+32]
            movapd XMM13,XMM5
            divsd XMM1,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,XMM7
            mulsd XMM0,XMM7
            subsd XMM13,XMM0
            ucomisd XMM6,XMM13
            sqrtsd XMM11,XMM13
            movapd XMM0,XMM13
            ja .L_40ac57
.L_40aa1d:

            movapd XMM0,XMM5
            movapd XMM14,XMM5
            divsd XMM0,XMM11
            subsd XMM14,XMM1
            movapd XMM1,XMM14
            mulsd XMM1,XMM7
            mulsd XMM1,XMM0
            mulsd XMM0,XMM9
            mulsd XMM4,XMM1
            mulsd XMM3,XMM0
            subsd XMM3,XMM4
            mulsd XMM3,XMM3
            ucomisd XMM3,QWORD PTR [RIP+.L_40ae80]
            jbe .L_40ab30

            cmp EBP,30
            je .L_40ab30

            movsd XMM11,QWORD PTR [RBX+32]
            movapd XMM3,XMM1
            movapd XMM4,XMM0
.L_40aa77:

            mulsd XMM11,XMM4
            movapd XMM0,XMM5
            add EBP,1
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM11,XMM4
            subsd XMM0,XMM11
            ucomisd XMM6,XMM0
            sqrtsd XMM12,XMM0
            movapd XMM11,XMM0
            ja .L_40abaa
.L_40aaa5:

            divsd XMM1,XMM12
            movapd XMM0,XMM3
            movapd XMM12,XMM4
            mulsd XMM0,XMM8
            mulsd XMM12,XMM2
            mulsd XMM11,XMM1
            addsd XMM0,XMM12
            subsd XMM0,XMM11
            movsd QWORD PTR [R12],XMM0
            addsd XMM0,XMM1
            ucomisd XMM0,XMM6
            jp .L_40a9e0

            jne .L_40a9e0

            mov QWORD PTR [R13],0
            add RSP,104
.L_40aaf2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ab00:

            mov RAX,QWORD PTR [RIP+.L_40ae50]
            mov QWORD PTR [R13],RAX
            movsd XMM0,QWORD PTR [RBX+8]
            xorpd XMM0,XMMWORD PTR [RIP+.L_40ae90]
            movsd QWORD PTR [R12],XMM0
            add RSP,104
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ab30:

            andpd XMM1,XMMWORD PTR [RIP+.L_40aea0]
            divsd XMM0,XMM1
            call atan@PLT

            movsd QWORD PTR [R13],XMM0
            add RSP,104
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ab58:

            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+40],XMM6
            movapd XMM0,XMM3
            mov QWORD PTR [RSP+32],RDX
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM8
            call atan2@PLT

            mov RDX,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RDX],XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_40a960
.L_40abaa:

            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM12
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,XMM4
            movapd XMM11,XMM5
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            mulsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            subsd XMM11,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40aaa5
.L_40ac57:

            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM11
            call sqrt@PLT

            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM9,QWORD PTR [RSP+40]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM11,QWORD PTR [RSP+8]
            jmp .L_40aa1d
.L_40aced:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM6
            mov QWORD PTR [RSP+48],RDX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40a912
.L_40ad4f:

            movsd QWORD PTR [RSP+56],XMM6
            mov QWORD PTR [RSP+48],RDX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM8
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_40a92c
.L_40adad:

            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM11,QWORD PTR [RBX+32]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_40a9bb
.L_40ae23:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40ae30:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
.L_40ae38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_40ae40:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_40ae48:

            hlt 
          .byte 0xcf
          .byte 0xb1
          .byte 0x6d
          .byte 0x6a
          .byte 0x28
          .byte 0xf9
          .byte 0xbf
.L_40ae50:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_40ae58:

            hlt 
          .byte 0xcf
          .byte 0xb1
          .byte 0x6d
          .byte 0x6a
          .byte 0x28
          .byte 0xf9
          .byte 0x3f
.L_40ae60:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_40ae68:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_40ae70:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_40ae78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_40ae80:
          .byte 0xa7
          .byte 0x8e
          .byte 0xa8
          .byte 0x99
          .byte 0xc2
          .byte 0x57
          .byte 0xf3
          .byte 0x3a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ae90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aea0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_40aeb0:

            test RDI,RDI
            je .L_40af28

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            jmp .L_40aed1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40aec8:

            mov RBX,QWORD PTR [RBX+40]
            test RBX,RBX
            je .L_40af18
.L_40aed1:

            mov RDI,QWORD PTR [RBX+32]
            mov EDX,8
            mov RSI,RBP
            call strncmp@PLT

            test EAX,EAX
            je .L_40af08

            mov RDI,QWORD PTR [RBX+48]
            test RDI,RDI
            je .L_40aec8

            mov RSI,RBP
            call .L_40aeb0

            test RAX,RAX
            je .L_40aec8

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af08:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af18:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40af28:

            xor EAX,EAX
            ret 
.L_40af2b:

            nop
            nop
            nop
            nop
            nop
.L_40af30:

            test RSI,RSI
            je .L_40af90

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40af3c:

            mov RBX,RSI
            mov RSI,QWORD PTR [RSI+48]
            test RSI,RSI
            je .L_40af5c
.L_40af48:

            mov R12,QWORD PTR [RSI+40]
            mov RDI,RBP
            call .L_40af30

            test R12,R12
            mov RSI,R12
            jne .L_40af48
.L_40af5c:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_40af6a

            call .L_44e970
.L_40af6a:

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_40af80

            call free@PLT
.L_40af80:

            mov RDI,RBX
            pop RBX
.L_40af84:

            pop RBP
            pop R12
            jmp .L_403c60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40af90:

            ret 
.L_40af92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40afa0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            xor EBP,EBP
            sub RSP,168
.L_40afb3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_40aff2

            cmp QWORD PTR [RSI+32],0
            mov RBX,RSI
            je .L_40aff2

            mov R12,RDI
            call .L_40d340

            mov RAX,QWORD PTR [RBX+32]
            cmp QWORD PTR [RAX+120],0
            je .L_40b020
.L_40afe8:

            mov EBP,1
            call .L_40d3e0
.L_40aff2:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_40b6a2

            add RSP,168
.L_40b012:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b020:

            movdqu XMM0,XMMWORD PTR [RAX]
            lea RDI,QWORD PTR [RIP+.L_40cc74]
            mov R8,QWORD PTR [RBX+16]
            mov ECX,7
            lea RBP,QWORD PTR [RSP+16]
            movaps XMMWORD PTR [RSP+16],XMM0
            mov RSI,R8
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+64]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+80]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movaps XMMWORD PTR [RSP+128],XMM0

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_40b3d0

            lea RDI,QWORD PTR [RIP+.L_40cc7e]
            mov ECX,8
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_40b420

            lea RDI,QWORD PTR [RIP+.L_40cc86]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            je .L_40b1f0

            lea RDI,QWORD PTR [RIP+.L_40cc8b]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            je .L_40b460

            lea RDI,QWORD PTR [RIP+.L_40cca7]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BPL
            sbb BPL,0
            movsx EBP,BPL
            test EBP,EBP
            jne .L_40b450

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RDI,R12
            mov R14D,DWORD PTR [RAX+112]
            mov R15D,DWORD PTR [RAX+116]
            call .L_4042f0

            test RAX,RAX
            mov R13,RAX
            je .L_40b3b0

            imul R14D,R15D
            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            movsxd R15,R14D
            call .L_407250

            lea RDI,QWORD PTR [R15*4]
            call .L_403c30

            test RAX,RAX
            mov QWORD PTR [RSP+136],RAX
            je .L_40b3b0

            mov R8,R13
            mov RCX,R15
            mov EDX,4
            mov RSI,RAX
            mov RDI,R12
            call .L_407230

            cmp R15,RAX
            jne .L_40b65f

            test R14D,R14D
            mov RAX,QWORD PTR [RSP+136]
            jle .L_40b38e

            lea EDX,DWORD PTR [R14-1]
            lea RSI,QWORD PTR [RAX+RDX*4+4]
.L_40b1be:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+3]
            add RAX,4
            mov BYTE PTR [RAX-4],CL
            mov BYTE PTR [RAX-1],DL
            movzx ECX,BYTE PTR [RAX-2]
            movzx EDX,BYTE PTR [RAX-3]
            mov BYTE PTR [RAX-3],CL
            mov BYTE PTR [RAX-2],DL
            cmp RSI,RAX
            jne .L_40b1be

            jmp .L_40b38e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b1f0:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RDI,R12
            call .L_4042f0

            test RAX,RAX
            mov R13,RAX
            je .L_40b3b0

            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_407250

            mov RAX,QWORD PTR [RBX+32]
            movsxd RDI,DWORD PTR [RAX+112]
            shl RDI,4
            call .L_403c30

            mov R14,RAX
            mov RAX,QWORD PTR [RBX+32]
            mov EDI,DWORD PTR [RAX+112]
            imul EDI,DWORD PTR [RAX+116]
            movsxd RDI,EDI
            shl RDI,3
            call .L_403c30

            test RAX,RAX
            mov QWORD PTR [RSP+136],RAX
            je .L_40b3b0

            test R14,R14
            je .L_40b3b0

            mov RAX,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RAX+116]
            test ECX,ECX
            jle .L_40b386

            mov ECX,DWORD PTR [RAX+112]
            movsd XMM0,QWORD PTR [RIP+.L_40cf28]
            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b288:

            add ECX,ECX
            mov EDX,8
            mov RSI,R14
            movsxd RCX,ECX
            mov RDI,R12
            mov R8,R13
            movsd QWORD PTR [RSP+8],XMM0
            call .L_407230

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
            lea EDX,DWORD PTR [RCX+RCX*1]
            movsxd RSI,EDX
            cmp RAX,RSI
            jne .L_40b638

            test EDX,EDX
            movsd XMM0,QWORD PTR [RSP+8]
            jle .L_40b306

            lea EAX,DWORD PTR [RDX-1]
            mov RDI,R14
            lea R9,QWORD PTR [R14+RAX*8+8]
.L_40b2d1:

            lea RAX,QWORD PTR [RDI+7]
            lea R8,QWORD PTR [RDI+3]
            mov RDX,RDI
.L_40b2dc:

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RAX]
            sub RAX,1
            add RDX,1
            mov BYTE PTR [RDX-1],SIL
            mov BYTE PTR [RAX+1],CL
            cmp R8,RAX
            jne .L_40b2dc

            add RDI,8
            cmp R9,RDI
            jne .L_40b2d1

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
.L_40b306:

            test ECX,ECX
            jle .L_40b378

            mov EDX,R15D
            mov RSI,QWORD PTR [RSP+136]
            movsxd RAX,ECX
            imul EDX,ECX
            movsxd RDX,EDX
            add RDX,RAX
            shl RDX,3
            lea RAX,QWORD PTR [RSI+RDX*1-4]
            lea RSI,QWORD PTR [RSI+RDX*1-12]
            lea EDX,DWORD PTR [RCX-1]
            shl RDX,3
            sub RSI,RDX
            mov RDX,R14
            nop
            nop
            nop
            nop
.L_40b340:

            movsd XMM1,QWORD PTR [RDX]
            add RDX,16
            sub RAX,8
            pxor XMM2,XMM2
            mulsd XMM1,XMM0
            pxor XMM3,XMM3
            cvtsd2ss XMM2,XMM1
            movsd XMM1,QWORD PTR [RDX-8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RAX+8],XMM2
            movss DWORD PTR [RAX+4],XMM3
            cmp RAX,RSI
            jne .L_40b340
.L_40b378:

            add R15D,1
            cmp DWORD PTR [RDI+116],R15D
            jg .L_40b288
.L_40b386:

            mov RDI,R14
            call .L_403c60
.L_40b38e:

            mov RSI,R13
.L_40b391:

            mov RDI,R12
            call .L_407280

            mov RAX,QWORD PTR [RBX+32]
            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RAX+120],RDX
            jmp .L_40afe8
          .byte 0x66
          .byte 0x90
.L_40b3b0:

            mov ESI,4294967258
            mov RDI,R12
            xor EBP,EBP
            call .L_404af0

            call .L_40d3e0

            jmp .L_40aff2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b3d0:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RDI,R12
            call .L_4042f0

            test RAX,RAX
            mov R13,RAX
            je .L_40b3b0

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_44e560
.L_40b3f9:

            mov RSI,R13
            mov RDI,R12
            mov EBP,EAX
            call .L_407280

            mov RAX,QWORD PTR [RBX+32]
            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RAX+120],RDX
            call .L_40d3e0

            jmp .L_40aff2
.L_40b420:

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RDI,R12
            call .L_4042f0

            test RAX,RAX
            mov R13,RAX
            je .L_40b3b0

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_44e700

            jmp .L_40b3f9
          .byte 0x90
.L_40b450:

            call .L_40d3e0

            xor EBP,EBP
            jmp .L_40aff2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b460:

            lea RDX,QWORD PTR [RIP+.L_40cc90]
            mov RCX,RAX
            mov ESI,3
            xor EAX,EAX
            mov RDI,R12
            call .L_404c10

            mov RSI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RDI,R12
            call .L_4042f0

            test RAX,RAX
            mov R14,RAX
            je .L_40b3b0

            movsxd RDX,DWORD PTR [RBX+24]
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_407250

            mov RAX,QWORD PTR [RBX+32]
            movsxd RDI,DWORD PTR [RAX+112]
            shl RDI,4
            call .L_403c30

            mov R13,RAX
            mov RAX,QWORD PTR [RBX+32]
            mov EDI,DWORD PTR [RAX+112]
            imul EDI,DWORD PTR [RAX+116]
            movsxd RDI,EDI
            shl RDI,3
            call .L_403c30

            test R13,R13
            mov QWORD PTR [RSP+136],RAX
            je .L_40b3b0

            test RAX,RAX
            je .L_40b3b0

            mov RAX,QWORD PTR [RBX+32]
            mov EDX,DWORD PTR [RAX+116]
            test EDX,EDX
            jle .L_40b5df

            mov ECX,DWORD PTR [RAX+112]
            movsd XMM1,QWORD PTR [RIP+.L_40cf28]
            xor R15D,R15D
            nop
            nop
            nop
            nop
            nop
.L_40b510:

            shl ECX,2
            mov EDX,4
            mov RSI,R13
            movsxd RCX,ECX
            mov RDI,R12
            mov R8,R14
            movsd QWORD PTR [RSP+8],XMM1
            call .L_407230

            mov RDI,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RDI+112]
            lea EDX,DWORD PTR [RCX*4]
            movsxd RSI,EDX
            cmp RAX,RSI
            jne .L_40b676

            mov EAX,DWORD PTR [RBX+28]
            test EAX,EAX
            jne .L_40b5f0
.L_40b55a:

            test ECX,ECX
            jle .L_40b5d1

            mov EDX,R15D
            mov RSI,QWORD PTR [RSP+136]
            movsxd RAX,ECX
            imul EDX,ECX
            movsxd RDX,EDX
            add RDX,RAX
            shl RDX,3
            lea RAX,QWORD PTR [RSI+RDX*1-4]
            lea RSI,QWORD PTR [RSI+RDX*1-12]
            lea EDX,DWORD PTR [RCX-1]
            shl RDX,3
            sub RSI,RDX
            mov RDX,R13
.L_40b590:

            pxor XMM0,XMM0
            sub RAX,8
            add RDX,16
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDX-16]
            mulsd XMM0,XMM1
            cvtsd2ss XMM4,XMM0
            pxor XMM0,XMM0
            movss DWORD PTR [RAX+8],XMM4
            cvtss2sd XMM0,DWORD PTR [RDX-12]
            mulsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RAX+4],XMM5
            cmp RAX,RSI
            jne .L_40b590
.L_40b5d1:

            add R15D,1
            cmp DWORD PTR [RDI+116],R15D
            jg .L_40b510
.L_40b5df:

            mov RDI,R13
            call .L_403c60

            mov RSI,R14
            jmp .L_40b391
          .byte 0x90
.L_40b5f0:

            test EDX,EDX
            jle .L_40b55a

            lea EAX,DWORD PTR [RDX-1]
            lea RSI,QWORD PTR [R13+RAX*4+4]
            mov RAX,R13
            nop
            nop
            nop
            nop
            nop
.L_40b608:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+3]
            add RAX,4
            mov BYTE PTR [RAX-4],CL
            mov BYTE PTR [RAX-1],DL
            movzx ECX,BYTE PTR [RAX-2]
            movzx EDX,BYTE PTR [RAX-3]
            mov BYTE PTR [RAX-3],CL
            mov BYTE PTR [RAX-2],DL
            cmp RAX,RSI
            jne .L_40b608

            mov RDI,QWORD PTR [RBX+32]
            mov ECX,DWORD PTR [RDI+112]
            jmp .L_40b55a
.L_40b638:

            mov RDI,R14
            call .L_403c60

            mov RDI,QWORD PTR [RSP+136]
            call .L_403c60

            mov ESI,4294967258
            mov RDI,R12
            call .L_404af0

            jmp .L_40aff2
.L_40b65f:

            mov RDI,QWORD PTR [RSP+136]
            call .L_403c60

            call .L_40d3e0

            jmp .L_40aff2
.L_40b676:

            mov RDI,R13
            call .L_403c60

            mov RDI,QWORD PTR [RSP+136]
            call .L_403c60

            mov ESI,4294967258
            mov RDI,R12
            call .L_404af0

            call .L_40d3e0

            jmp .L_40aff2
.L_40b6a2:

            call __stack_chk_fail@PLT
.L_40b6a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b6b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,1464
.L_40b6c7:

            mov DWORD PTR [RIP+.L_65fe9c],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1448],RAX
            xor EAX,EAX
            call __errno_location@PLT

            mov EDI,56
            mov DWORD PTR [RAX],0
            mov DWORD PTR [RBP],0
            call .L_403c30

            pxor XMM0,XMM0
            mov RBX,RAX
            mov RDI,R13
            mov QWORD PTR [RAX+48],0
            lea R14,QWORD PTR [RSP+416]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            call strdup@PLT

            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_40ccab]
            mov EDX,1025
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],RAX
            mov DWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            call __strcpy_chk@PLT

            lea RDX,QWORD PTR [RIP+.L_40cc7b]
            mov RSI,R14
            mov RDI,RBP
            call .L_4042f0

            test RAX,RAX
            je .L_40bc08

            mov RDI,R14
            lea R14,QWORD PTR [RSP+80]
            mov R12,RAX
            call strdup@PLT

            mov R8,R12
            mov QWORD PTR [RBX+8],RAX
            mov ECX,1
            mov EDX,160
            mov RSI,R14
            mov RDI,RBP
            call .L_407230

            cmp RAX,1
            je .L_40b7bb

            mov DWORD PTR [RBP],0
.L_40b7bb:

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBP
            call .L_407250

            lea RDI,QWORD PTR [RIP+.L_40ccb3]
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b828

            lea RSI,QWORD PTR [R14+96]
            lea RDI,QWORD PTR [RIP+.L_40ccba]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b828

            lea RSI,QWORD PTR [R14+144]
            lea RDI,QWORD PTR [RIP+.L_40ccc1]
            mov ECX,16

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40bdc0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b828:

            lea RDI,QWORD PTR [RIP+.L_40ccd2]
            mov ECX,8
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40bba0
.L_40b846:

            mov RDI,R13
            call strlen@PLT

            cmp RAX,4
            jbe .L_40bc40

            lea RDX,QWORD PTR [R13+RAX*1-3]
            lea R15,QWORD PTR [RIP+.L_40cca7]
            mov ECX,4
            mov RSI,RDX
            mov RDI,R15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b898

            lea RDI,QWORD PTR [RIP+.L_40ccf1]
            mov ECX,4
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40bc40
.L_40b898:

            lea R13,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,40
            mov RDI,RBP
            mov RSI,R13
            call .L_407230

            cmp RAX,1
            lea R8,QWORD PTR [R13+32]
            jne .L_40bbf1
.L_40b8c6:

            lea RAX,QWORD PTR [R13+7]
            lea RDI,QWORD PTR [R13+3]
            mov RDX,R13
.L_40b8d1:

            movzx ECX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RAX]
            sub RAX,1
            add RDX,1
            mov BYTE PTR [RDX-1],SIL
            mov BYTE PTR [RAX+1],CL
            cmp RAX,RDI
            jne .L_40b8d1

            add R13,8
            cmp R13,R8
            jne .L_40b8c6

            movzx EAX,BYTE PTR [RSP+272]
            movzx EDX,BYTE PTR [RSP+275]
            movsd XMM0,QWORD PTR [RSP+248]
            mov RCX,QWORD PTR [RSP+248]
            movsd XMM1,QWORD PTR [RIP+.L_40cf48]
            mov R14,QWORD PTR [RSP+256]
            mov R13,QWORD PTR [RSP+264]
            mov BYTE PTR [RSP+275],AL
            movzx EAX,BYTE PTR [RSP+273]
            mov BYTE PTR [RSP+272],DL
            movzx EDX,BYTE PTR [RSP+274]
            ucomisd XMM1,XMM0
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+72],R14
            mov BYTE PTR [RSP+274],AL
            movzx EAX,BYTE PTR [RSP+276]
            mov BYTE PTR [RSP+273],DL
            movzx EDX,BYTE PTR [RSP+279]
            mov QWORD PTR [RSP+64],R13
            mov BYTE PTR [RSP+279],AL
            movzx EAX,BYTE PTR [RSP+277]
            mov BYTE PTR [RSP+276],DL
            movzx EDX,BYTE PTR [RSP+278]
            mov BYTE PTR [RSP+278],AL
            mov RAX,QWORD PTR [RSP+240]
            mov BYTE PTR [RSP+277],DL
            mov QWORD PTR [RSP+56],RAX
            ja .L_40bda0

            movsd XMM4,QWORD PTR [RIP+.L_40cf50]
            ucomisd XMM0,XMM4
            ja .L_40bda0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM2,QWORD PTR [RIP+.L_40cf58]
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM2,XMM1
            ja .L_40bda0

            ucomisd XMM1,QWORD PTR [RIP+.L_40cf60]
            ja .L_40bda0

            mov R11D,DWORD PTR [RSP+272]
            mov R10D,DWORD PTR [RSP+276]
            mov EDI,128
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            mov DWORD PTR [RSP+24],R11D
            movsd QWORD PTR [RSP+40],XMM4
            mov DWORD PTR [RSP+16],R10D
            call .L_403c30

            movsd XMM0,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RIP+.L_40cf68]
            mov R11D,DWORD PTR [RSP+24]
            movdqa XMM2,XMMWORD PTR [RIP+.L_44f380-271312]
            mov R9,RAX
            ucomisd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],R13
            movups XMMWORD PTR [RAX],XMM2
            movabs RAX,2338606709420007524
            mov DWORD PTR [R9+24],1701603654
            mov BYTE PTR [R9+28],0
            movsd QWORD PTR [R9+80],XMM0
            movsd QWORD PTR [R9+88],XMM1
            movsd XMM2,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],R14
            movsd XMM3,QWORD PTR [RSP+8]
            mov QWORD PTR [R9+16],RAX
            movsd QWORD PTR [R9+96],XMM2
            mov DWORD PTR [R9+112],R10D
            mov DWORD PTR [R9+116],R11D
            movsd QWORD PTR [R9+104],XMM3
            jb .L_40bac1

            movsd XMM4,QWORD PTR [RSP+40]
            subsd XMM0,XMM4
            movsd QWORD PTR [R9+80],XMM0
.L_40bac1:

            ucomisd XMM0,QWORD PTR [RIP+.L_40cf70]
            jb .L_40bae6

            pxor XMM4,XMM4
            cvtsi2sd XMM4,R10D
            mulsd XMM4,XMM2
            addsd XMM4,XMM0
            ucomisd XMM4,XMM5
            ja .L_40cad8
.L_40bae6:

            mov ECX,R10D
            mov R8D,R11D
.L_40baec:

            pxor XMM4,XMM4
            sub R11D,1
            sub R10D,1
            lea RDX,QWORD PTR [RIP+.L_40ce90]
            mov ESI,3
            mov RDI,RBP
            mov EAX,4
            mov QWORD PTR [RSP+8],R9
            cvtsi2sd XMM4,R11D
            mulsd XMM3,XMM4
            pxor XMM4,XMM4
            cvtsi2sd XMM4,R10D
            addsd XMM3,XMM1
            mulsd XMM2,XMM4
            addsd XMM2,XMM0
            call .L_404c10

            movsd XMM0,QWORD PTR [RIP+.L_40cf38]
            mov R9,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mov QWORD PTR [R9+120],0
            mulsd XMM1,QWORD PTR [R9+80]
            movsd QWORD PTR [R9+80],XMM1
            movsd XMM1,QWORD PTR [R9+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R9+88],XMM1
            movsd XMM1,QWORD PTR [R9+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R9+104]
            movsd QWORD PTR [R9+96],XMM1
            movsd QWORD PTR [R9+104],XMM0
            mov QWORD PTR [RBX+32],R9
            mov DWORD PTR [RBX+24],40
            mov QWORD PTR [RBX+16],R15
            jmp .L_40bcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bba0:

            lea RSI,QWORD PTR [R14+48]
            lea RDI,QWORD PTR [RIP+.L_40ccdb]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R10B
            sbb R10B,0
            movsx R15D,R10B
            test R15D,R15D
            jne .L_40b846

            lea R13,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RDI,RBP
            mov RSI,R13
            call .L_407230

            cmp RAX,1
            je .L_40c288
.L_40bbf1:

            mov ESI,4294967258
            mov RDI,RBP
            call .L_404af0

            jmp .L_40bcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc08:

            mov DWORD PTR [RBP],0
.L_40bc0f:

            mov RCX,QWORD PTR [RSP+1448]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40cbf7

            add RSP,1464
.L_40bc30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bc40:

            lea RDI,QWORD PTR [RIP+.L_40ccf5]
            mov RSI,R14
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RSI,R12
            mov RDI,RBP
            seta AL
            sbb AL,0
            test AL,AL
            je .L_40bd10

            call .L_44e610

            test RAX,RAX
            je .L_40c268

            mov R9D,DWORD PTR [RAX+116]
            mov R8D,DWORD PTR [RAX+112]
            lea RCX,QWORD PTR [RIP+.L_40cc74]
            pxor XMM3,XMM3
            mov QWORD PTR [RBX+32],RAX
            pxor XMM2,XMM2
            mov QWORD PTR [RBX+16],RCX
            lea EDX,DWORD PTR [R9-1]
            movsd XMM4,QWORD PTR [RAX+88]
            movsd XMM0,QWORD PTR [RAX+80]
            mov RCX,RAX
            cvtsi2sd XMM3,EDX
            lea EDX,DWORD PTR [R8-1]
            movsd XMM1,QWORD PTR [RIP+.L_40cf78]
            mov ESI,2
            cvtsi2sd XMM2,EDX
            lea RDX,QWORD PTR [RIP+.L_40cef8]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RAX+104]
            mulsd XMM2,QWORD PTR [RAX+96]
            mov EAX,4
            addsd XMM3,XMM4
            addsd XMM2,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            call .L_404c10

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bcf8:

            mov RSI,R12
            mov RDI,RBP
            call .L_407280

            jmp .L_40bc0f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bd10:

            call .L_44e7c0

            mov R9D,DWORD PTR [RAX+116]
            mov R8D,DWORD PTR [RAX+112]
            lea RCX,QWORD PTR [RIP+.L_40cc7e]
            pxor XMM3,XMM3
            mov QWORD PTR [RBX+32],RAX
            pxor XMM2,XMM2
            mov QWORD PTR [RBX+16],RCX
            lea EDX,DWORD PTR [R9-1]
            movsd XMM4,QWORD PTR [RAX+88]
            movsd XMM0,QWORD PTR [RAX+80]
            mov RCX,RAX
            cvtsi2sd XMM3,EDX
            lea EDX,DWORD PTR [R8-1]
            movsd XMM1,QWORD PTR [RIP+.L_40cf78]
            mov ESI,2
            cvtsi2sd XMM2,EDX
            lea RDX,QWORD PTR [RIP+.L_40cec0]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RAX+104]
            mulsd XMM2,QWORD PTR [RAX+96]
            mov EAX,4
            addsd XMM3,XMM4
            addsd XMM2,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            call .L_404c10

            jmp .L_40bcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bda0:

            lea RDX,QWORD PTR [RIP+.L_40ce28]
.L_40bda7:

            mov ESI,1
            mov RDI,RBP
            xor EAX,EAX
            call .L_404c10

            jmp .L_40bbf1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bdc0:

            lea RSI,QWORD PTR [RSP+240]
            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RDI,RBP
            call .L_407230

            cmp RAX,1
            jne .L_40bbf1

            movzx EAX,BYTE PTR [RSP+248]
            movzx EDX,BYTE PTR [RSP+251]
            mov BYTE PTR [RSP+251],AL
            mov BYTE PTR [RSP+248],DL
            movzx EAX,BYTE PTR [RSP+249]
            movzx EDX,BYTE PTR [RSP+250]
            mov BYTE PTR [RSP+250],AL
            mov BYTE PTR [RSP+249],DL
            movzx EAX,BYTE PTR [RSP+264]
            movzx EDX,BYTE PTR [RSP+271]
            mov BYTE PTR [RSP+271],AL
            mov BYTE PTR [RSP+264],DL
            movzx EAX,BYTE PTR [RSP+265]
            movzx EDX,BYTE PTR [RSP+270]
            mov BYTE PTR [RSP+270],AL
            mov BYTE PTR [RSP+265],DL
            movzx EAX,BYTE PTR [RSP+266]
            movzx EDX,BYTE PTR [RSP+269]
            mov BYTE PTR [RSP+269],AL
            mov BYTE PTR [RSP+266],DL
            movzx EAX,BYTE PTR [RSP+267]
            movzx EDX,BYTE PTR [RSP+268]
            mov BYTE PTR [RSP+268],AL
            mov BYTE PTR [RSP+267],DL
            movzx EAX,BYTE PTR [RSP+280]
            movzx EDX,BYTE PTR [RSP+287]
            mov BYTE PTR [RSP+287],AL
            mov BYTE PTR [RSP+280],DL
            movzx EAX,BYTE PTR [RSP+281]
            movzx EDX,BYTE PTR [RSP+286]
            mov BYTE PTR [RSP+286],AL
            mov BYTE PTR [RSP+281],DL
            movzx EAX,BYTE PTR [RSP+282]
            movzx EDX,BYTE PTR [RSP+285]
            mov BYTE PTR [RSP+285],AL
            mov BYTE PTR [RSP+282],DL
            movzx EAX,BYTE PTR [RSP+283]
            movzx EDX,BYTE PTR [RSP+284]
            mov BYTE PTR [RSP+284],AL
            mov BYTE PTR [RSP+283],DL
            movzx EAX,BYTE PTR [RSP+296]
            movzx EDX,BYTE PTR [RSP+303]
            mov BYTE PTR [RSP+303],AL
            mov BYTE PTR [RSP+296],DL
            movzx EAX,BYTE PTR [RSP+297]
            movzx EDX,BYTE PTR [RSP+302]
            mov BYTE PTR [RSP+302],AL
            mov BYTE PTR [RSP+297],DL
            movzx EAX,BYTE PTR [RSP+298]
            movzx EDX,BYTE PTR [RSP+301]
            mov BYTE PTR [RSP+301],AL
            mov BYTE PTR [RSP+298],DL
            movzx EAX,BYTE PTR [RSP+299]
            movzx EDX,BYTE PTR [RSP+300]
            mov BYTE PTR [RSP+300],AL
            mov BYTE PTR [RSP+299],DL
            movzx EAX,BYTE PTR [RSP+312]
            movzx EDX,BYTE PTR [RSP+319]
            mov BYTE PTR [RSP+319],AL
            mov BYTE PTR [RSP+312],DL
            movzx EAX,BYTE PTR [RSP+313]
            movzx EDX,BYTE PTR [RSP+318]
            mov BYTE PTR [RSP+318],AL
            mov BYTE PTR [RSP+313],DL
            movzx EAX,BYTE PTR [RSP+314]
            movzx EDX,BYTE PTR [RSP+317]
            mov BYTE PTR [RSP+317],AL
            mov BYTE PTR [RSP+314],DL
            movzx EAX,BYTE PTR [RSP+315]
            movzx EDX,BYTE PTR [RSP+316]
            mov BYTE PTR [RSP+316],AL
            mov BYTE PTR [RSP+315],DL
            movzx EAX,BYTE PTR [RSP+328]
            movzx EDX,BYTE PTR [RSP+335]
            mov BYTE PTR [RSP+335],AL
            mov BYTE PTR [RSP+328],DL
            movzx EAX,BYTE PTR [RSP+329]
            movzx EDX,BYTE PTR [RSP+334]
            mov BYTE PTR [RSP+334],AL
            mov BYTE PTR [RSP+329],DL
            movzx EAX,BYTE PTR [RSP+330]
            movzx EDX,BYTE PTR [RSP+333]
            mov BYTE PTR [RSP+333],AL
            mov BYTE PTR [RSP+330],DL
            movzx EAX,BYTE PTR [RSP+331]
            movzx EDX,BYTE PTR [RSP+332]
            mov BYTE PTR [RSP+332],AL
            mov BYTE PTR [RSP+331],DL
            movzx EAX,BYTE PTR [RSP+344]
            movzx EDX,BYTE PTR [RSP+351]
            mov BYTE PTR [RSP+351],AL
            mov BYTE PTR [RSP+344],DL
            movzx EAX,BYTE PTR [RSP+345]
            movzx EDX,BYTE PTR [RSP+350]
            mov BYTE PTR [RSP+350],AL
            mov BYTE PTR [RSP+345],DL
            movzx EAX,BYTE PTR [RSP+346]
            movzx EDX,BYTE PTR [RSP+349]
            cmp DWORD PTR [RSP+248],12
            mov BYTE PTR [RSP+346],DL
            mov BYTE PTR [RSP+349],AL
            movzx EDX,BYTE PTR [RSP+348]
            movzx EAX,BYTE PTR [RSP+347]
            mov BYTE PTR [RSP+347],DL
            mov BYTE PTR [RSP+348],AL
            lea RDX,QWORD PTR [RIP+.L_40cd18]
            jne .L_40bda7

            mov EDI,128
            call .L_403c30

            movdqa XMM0,XMMWORD PTR [RIP+.L_40cfa0]
            lea RDX,QWORD PTR [RIP+.L_40cd50]
            mov DWORD PTR [RAX+16],1701603654
            mov BYTE PTR [RAX+20],0
            mov R13,RAX
            movups XMMWORD PTR [RAX],XMM0
            mov ESI,3
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP+312]
            movq XMM5,QWORD PTR [RIP+.L_40cf80]
            movapd XMM0,XMM2
            movq XMM8,QWORD PTR [RIP+.L_40cf90]
            xorpd XMM0,XMM5
            movsd QWORD PTR [RAX+80],XMM0
            movsd XMM1,QWORD PTR [RSP+264]
            movsd QWORD PTR [RAX+88],XMM1
            movsd XMM4,QWORD PTR [RSP+296]
            movsd XMM6,QWORD PTR [RSP+344]
            subsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+280]
            movsd QWORD PTR [RAX+96],XMM6
            xorpd XMM4,XMM5
            movsd XMM7,QWORD PTR [RSP+328]
            andpd XMM2,XMM8
            movsd QWORD PTR [RAX+104],XMM7
            divsd XMM2,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_40cf30]
            addsd XMM2,XMM6
            cvttsd2si ECX,XMM2
            movapd XMM2,XMM3
            subsd XMM2,XMM1
            andpd XMM2,XMM8
            divsd XMM2,XMM7
            add ECX,1
            mov DWORD PTR [RAX+112],ECX
            addsd XMM2,XMM6
            cvttsd2si R8D,XMM2
            movapd XMM2,XMM4
            add R8D,1
            mov DWORD PTR [RAX+116],R8D
            mov EAX,4
            call .L_404c10

            movsd XMM0,QWORD PTR [RIP+.L_40cf38]
            mov QWORD PTR [R13+120],0
            movsd XMM1,QWORD PTR [R13+80]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,XMM0
            movsd QWORD PTR [R13+80],XMM1
            movsd XMM1,QWORD PTR [R13+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R13+88],XMM1
            movsd XMM1,QWORD PTR [R13+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R13+104]
            movsd QWORD PTR [R13+96],XMM1
            movsd QWORD PTR [R13+104],XMM0
            mov QWORD PTR [RBX+32],R13
            call .L_407270

            mov DWORD PTR [RBX+24],EAX
            lea RAX,QWORD PTR [RIP+.L_40cc86]
            mov QWORD PTR [RBX+16],RAX
            jmp .L_40bcf8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c268:

            lea RDX,QWORD PTR [RIP+.L_40ccff]
            mov ESI,2
            mov RDI,RBP
            call .L_404c10

            jmp .L_40bcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c288:

            movzx EDX,BYTE PTR [RSP+248]
            xor R14D,R14D
            cmp DL,11
            je .L_40c52e

            movzx EAX,BYTE PTR [RSP+251]
            mov BYTE PTR [RSP+251],DL
            mov R14D,1
            movzx EDX,BYTE PTR [RSP+250]
            mov BYTE PTR [RSP+248],AL
            movzx EAX,BYTE PTR [RSP+249]
            mov BYTE PTR [RSP+249],DL
            movzx EDX,BYTE PTR [RSP+267]
            mov BYTE PTR [RSP+250],AL
            movzx EAX,BYTE PTR [RSP+264]
            mov BYTE PTR [RSP+264],DL
            movzx EDX,BYTE PTR [RSP+266]
            mov BYTE PTR [RSP+267],AL
            movzx EAX,BYTE PTR [RSP+265]
            mov BYTE PTR [RSP+265],DL
            movzx EDX,BYTE PTR [RSP+283]
            mov BYTE PTR [RSP+266],AL
            movzx EAX,BYTE PTR [RSP+280]
            mov BYTE PTR [RSP+280],DL
            movzx EDX,BYTE PTR [RSP+282]
            mov BYTE PTR [RSP+283],AL
            movzx EAX,BYTE PTR [RSP+281]
            mov BYTE PTR [RSP+281],DL
            movzx EDX,BYTE PTR [RSP+367]
            mov BYTE PTR [RSP+282],AL
            movzx EAX,BYTE PTR [RSP+360]
            mov BYTE PTR [RSP+360],DL
            movzx EDX,BYTE PTR [RSP+366]
            mov BYTE PTR [RSP+367],AL
            movzx EAX,BYTE PTR [RSP+361]
            mov BYTE PTR [RSP+361],DL
            mov BYTE PTR [RSP+366],AL
            movzx EAX,BYTE PTR [RSP+362]
            movzx EDX,BYTE PTR [RSP+365]
            mov BYTE PTR [RSP+365],AL
            movzx EAX,BYTE PTR [RSP+363]
            mov BYTE PTR [RSP+362],DL
            movzx EDX,BYTE PTR [RSP+364]
            mov BYTE PTR [RSP+364],AL
            movzx EAX,BYTE PTR [RSP+376]
            mov BYTE PTR [RSP+363],DL
            movzx EDX,BYTE PTR [RSP+383]
            mov BYTE PTR [RSP+383],AL
            movzx EAX,BYTE PTR [RSP+377]
            mov BYTE PTR [RSP+376],DL
            movzx EDX,BYTE PTR [RSP+382]
            mov BYTE PTR [RSP+382],AL
            movzx EAX,BYTE PTR [RSP+378]
            mov BYTE PTR [RSP+377],DL
            movzx EDX,BYTE PTR [RSP+381]
            mov BYTE PTR [RSP+381],AL
            movzx EAX,BYTE PTR [RSP+379]
            mov BYTE PTR [RSP+378],DL
            movzx EDX,BYTE PTR [RSP+380]
            mov BYTE PTR [RSP+380],AL
            movzx EAX,BYTE PTR [RSP+392]
            mov BYTE PTR [RSP+379],DL
            movzx EDX,BYTE PTR [RSP+399]
            mov BYTE PTR [RSP+399],AL
            movzx EAX,BYTE PTR [RSP+393]
            mov BYTE PTR [RSP+392],DL
            movzx EDX,BYTE PTR [RSP+398]
            mov BYTE PTR [RSP+398],AL
            movzx EAX,BYTE PTR [RSP+394]
            mov BYTE PTR [RSP+393],DL
            movzx EDX,BYTE PTR [RSP+397]
            mov BYTE PTR [RSP+397],AL
            movzx EAX,BYTE PTR [RSP+395]
            mov BYTE PTR [RSP+394],DL
            movzx EDX,BYTE PTR [RSP+396]
            mov BYTE PTR [RSP+396],AL
            movzx EAX,BYTE PTR [RSP+408]
            mov BYTE PTR [RSP+395],DL
            movzx EDX,BYTE PTR [RSP+415]
            mov BYTE PTR [RSP+415],AL
            movzx EAX,BYTE PTR [RSP+409]
            mov BYTE PTR [RSP+408],DL
            movzx EDX,BYTE PTR [RSP+414]
            mov BYTE PTR [RSP+414],AL
            movzx EAX,BYTE PTR [RSP+410]
            mov BYTE PTR [RSP+409],DL
            movzx EDX,BYTE PTR [RSP+413]
            mov BYTE PTR [RSP+413],AL
            movzx EAX,BYTE PTR [RSP+411]
            mov BYTE PTR [RSP+410],DL
            movzx EDX,BYTE PTR [RSP+412]
            mov BYTE PTR [RSP+412],AL
            mov BYTE PTR [RSP+411],DL
.L_40c52e:

            mov EAX,DWORD PTR [RSP+280]
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            jle .L_40bcf8
.L_40c541:

            mov R8,R12
            mov ECX,1
            mov EDX,176
            mov RSI,R13
            mov RDI,RBP
            call .L_407230

            cmp RAX,1
            jne .L_40bbf1

            lea RDI,QWORD PTR [RIP+.L_40cce3]
            mov ECX,8
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40bbf1

            test R14D,R14D
            je .L_40c896

            movzx EAX,BYTE PTR [RSP+312]
            movzx EDX,BYTE PTR [RSP+319]
            mov BYTE PTR [RSP+319],AL
            mov BYTE PTR [RSP+312],DL
            movzx EAX,BYTE PTR [RSP+313]
            movzx EDX,BYTE PTR [RSP+318]
            mov BYTE PTR [RSP+318],AL
            mov BYTE PTR [RSP+313],DL
            movzx EAX,BYTE PTR [RSP+314]
            movzx EDX,BYTE PTR [RSP+317]
            mov BYTE PTR [RSP+317],AL
            mov BYTE PTR [RSP+314],DL
            movzx EAX,BYTE PTR [RSP+315]
            movzx EDX,BYTE PTR [RSP+316]
            mov BYTE PTR [RSP+316],AL
            mov BYTE PTR [RSP+315],DL
            movzx EAX,BYTE PTR [RSP+328]
            movzx EDX,BYTE PTR [RSP+335]
            mov BYTE PTR [RSP+335],AL
            mov BYTE PTR [RSP+328],DL
            movzx EAX,BYTE PTR [RSP+329]
            movzx EDX,BYTE PTR [RSP+334]
            mov BYTE PTR [RSP+334],AL
            mov BYTE PTR [RSP+329],DL
            movzx EAX,BYTE PTR [RSP+330]
            movzx EDX,BYTE PTR [RSP+333]
            mov BYTE PTR [RSP+333],AL
            mov BYTE PTR [RSP+330],DL
            movzx EAX,BYTE PTR [RSP+331]
            movzx EDX,BYTE PTR [RSP+332]
            mov BYTE PTR [RSP+332],AL
            mov BYTE PTR [RSP+331],DL
            movzx EAX,BYTE PTR [RSP+344]
            movzx EDX,BYTE PTR [RSP+351]
            mov BYTE PTR [RSP+351],AL
            mov BYTE PTR [RSP+344],DL
            movzx EAX,BYTE PTR [RSP+345]
            movzx EDX,BYTE PTR [RSP+350]
            mov BYTE PTR [RSP+350],AL
            mov BYTE PTR [RSP+345],DL
            movzx EAX,BYTE PTR [RSP+346]
            movzx EDX,BYTE PTR [RSP+349]
            mov BYTE PTR [RSP+349],AL
            mov BYTE PTR [RSP+346],DL
            movzx EAX,BYTE PTR [RSP+347]
            movzx EDX,BYTE PTR [RSP+348]
            mov BYTE PTR [RSP+348],AL
            mov BYTE PTR [RSP+347],DL
            movzx EAX,BYTE PTR [RSP+360]
            movzx EDX,BYTE PTR [RSP+367]
            mov BYTE PTR [RSP+367],AL
            mov BYTE PTR [RSP+360],DL
            movzx EAX,BYTE PTR [RSP+361]
            movzx EDX,BYTE PTR [RSP+366]
            mov BYTE PTR [RSP+366],AL
            mov BYTE PTR [RSP+361],DL
            movzx EAX,BYTE PTR [RSP+362]
            movzx EDX,BYTE PTR [RSP+365]
            mov BYTE PTR [RSP+365],AL
            mov BYTE PTR [RSP+362],DL
            movzx EAX,BYTE PTR [RSP+363]
            movzx EDX,BYTE PTR [RSP+364]
            mov BYTE PTR [RSP+364],AL
            mov BYTE PTR [RSP+363],DL
            movzx EAX,BYTE PTR [RSP+376]
            movzx EDX,BYTE PTR [RSP+383]
            mov BYTE PTR [RSP+383],AL
            mov BYTE PTR [RSP+376],DL
            movzx EAX,BYTE PTR [RSP+377]
            movzx EDX,BYTE PTR [RSP+382]
            mov BYTE PTR [RSP+382],AL
            mov BYTE PTR [RSP+377],DL
            movzx EAX,BYTE PTR [RSP+378]
            movzx EDX,BYTE PTR [RSP+381]
            mov BYTE PTR [RSP+381],AL
            mov BYTE PTR [RSP+378],DL
            movzx EAX,BYTE PTR [RSP+379]
            movzx EDX,BYTE PTR [RSP+380]
            mov BYTE PTR [RSP+380],AL
            mov BYTE PTR [RSP+379],DL
            movzx EAX,BYTE PTR [RSP+392]
            movzx EDX,BYTE PTR [RSP+399]
            mov BYTE PTR [RSP+399],AL
            mov BYTE PTR [RSP+392],DL
            movzx EAX,BYTE PTR [RSP+393]
            movzx EDX,BYTE PTR [RSP+398]
            mov BYTE PTR [RSP+398],AL
            mov BYTE PTR [RSP+393],DL
            movzx EAX,BYTE PTR [RSP+394]
            movzx EDX,BYTE PTR [RSP+397]
            mov BYTE PTR [RSP+397],AL
            mov BYTE PTR [RSP+394],DL
            movzx EAX,BYTE PTR [RSP+395]
            movzx EDX,BYTE PTR [RSP+396]
            mov BYTE PTR [RSP+396],AL
            mov BYTE PTR [RSP+395],DL
            movzx EAX,BYTE PTR [RSP+408]
            movzx EDX,BYTE PTR [RSP+411]
            mov BYTE PTR [RSP+411],AL
            mov BYTE PTR [RSP+408],DL
            movzx EAX,BYTE PTR [RSP+409]
            movzx EDX,BYTE PTR [RSP+410]
            mov BYTE PTR [RSP+410],AL
            mov BYTE PTR [RSP+409],DL
.L_40c896:

            mov EDI,128
            call .L_403c30

            lea RSI,QWORD PTR [R13+8]
            mov EDX,8
            mov RDI,RAX
            call strncpy@PLT

            mov BYTE PTR [RAX+8],0
            lea RDX,QWORD PTR [RIP+.L_40cd80]
            mov RCX,RAX
            movsd XMM2,QWORD PTR [RSP+360]
            mov QWORD PTR [RSP+16],RAX
            mov ESI,3
            mov RDI,RBP
            movapd XMM0,XMM2
            xorpd XMM0,XMMWORD PTR [RIP+.L_40cf80]
            movsd QWORD PTR [RAX+80],XMM0
            movsd XMM1,QWORD PTR [RSP+312]
            movsd QWORD PTR [RAX+88],XMM1
            movsd XMM5,QWORD PTR [RSP+344]
            movsd XMM6,QWORD PTR [RSP+392]
            subsd XMM2,XMM5
            movsd XMM3,QWORD PTR [RSP+328]
            movsd QWORD PTR [RAX+96],XMM6
            xorpd XMM5,XMMWORD PTR [RIP+.L_40cf80]
            movsd XMM4,QWORD PTR [RSP+376]
            andpd XMM2,XMMWORD PTR [RIP+.L_40cf90]
            movsd QWORD PTR [RAX+104],XMM4
            divsd XMM2,XMM6
            addsd XMM2,QWORD PTR [RIP+.L_40cf30]
            cvttsd2si R8D,XMM2
            movapd XMM2,XMM3
            subsd XMM2,XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_40cf90]
            add R8D,1
            divsd XMM2,XMM4
            mov DWORD PTR [RAX+112],R8D
            movsd XMM4,QWORD PTR [RIP+.L_40cf40]
            divsd XMM0,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_40cf30]
            cvttsd2si R9D,XMM2
            movapd XMM2,XMM5
            divsd XMM1,XMM4
            add R9D,1
            mov DWORD PTR [RAX+116],R9D
            mov EAX,4
            divsd XMM3,XMM4
            divsd XMM2,XMM4
            call .L_404c10

            movsd XMM0,QWORD PTR [RIP+.L_40cf28]
            mov R10,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            mov R8D,DWORD PTR [R10+112]
            mov R9D,DWORD PTR [R10+116]
            mulsd XMM1,QWORD PTR [R10+80]
            mov EAX,R8D
            imul EAX,R9D
            movsd QWORD PTR [R10+80],XMM1
            movsd XMM1,QWORD PTR [R10+88]
            mulsd XMM1,XMM0
            movsd QWORD PTR [R10+88],XMM1
            movsd XMM1,QWORD PTR [R10+96]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [R10+104]
            movsd QWORD PTR [R10+96],XMM1
            movsd QWORD PTR [R10+104],XMM0
            mov ECX,DWORD PTR [RSP+408]
            cmp EAX,ECX
            mov DWORD PTR [RSP+16],ECX
            jne .L_40cc05

            test R15D,R15D
            mov QWORD PTR [R10+120],0
            jne .L_40cb3d

            lea RAX,QWORD PTR [RIP+.L_40cc8b]
            mov RSI,R12
            mov RDI,RBP
            mov DWORD PTR [RBX+28],R14D
            mov QWORD PTR [RBX+32],R10
            mov QWORD PTR [RBX+16],RAX
            call .L_407270

            lea RSI,QWORD PTR [R13+24]
            lea RDI,QWORD PTR [RIP+.L_40ccec]
            mov DWORD PTR [RBX+24],EAX
            mov ECX,4
            mov R9,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40caa3
.L_40ca59:

            lea RCX,QWORD PTR [R13+24]
            mov RDI,RBX
            mov QWORD PTR [RSP+32],R9
            mov RSI,RCX
            mov QWORD PTR [RSP+24],RCX
            call .L_40aeb0

            test RAX,RAX
            mov RCX,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            je .L_40cc38

            mov RDX,QWORD PTR [RAX+48]
            test RDX,RDX
            jne .L_40ca96

            jmp .L_40cbfc
.L_40ca93:

            mov RDX,RAX
.L_40ca96:

            mov RAX,QWORD PTR [RDX+40]
            test RAX,RAX
            jne .L_40ca93
.L_40ca9f:

            mov QWORD PTR [RDX+40],R9
.L_40caa3:

            mov EDX,DWORD PTR [RSP+16]
            mov ECX,1
            mov RSI,R12
            mov RDI,RBP
            add R15D,1
            shl EDX,4
            movsxd RDX,EDX
            call .L_407250

            cmp R15D,DWORD PTR [RSP+8]
            jne .L_40c541

            jmp .L_40bcf8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cad8:

            lea RDX,QWORD PTR [RIP+.L_40ce58]
            mov ESI,2
            mov RDI,RBP
            xor EAX,EAX
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R11D
            movsd QWORD PTR [RSP+24],XMM3
            mov QWORD PTR [RSP+8],R9
            movsd QWORD PTR [RSP+16],XMM2
            call .L_404c10

            mov R9,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [R9+88]
            mov R8D,DWORD PTR [R9+116]
            movsd XMM0,QWORD PTR [R9+80]
            mov ECX,DWORD PTR [R9+112]
            jmp .L_40baec
.L_40cb3d:

            mov EDI,56
            mov QWORD PTR [RSP+32],R10
            call .L_403c30

            mov R9,RAX
            mov ECX,14
            xor EAX,EAX
            mov RDI,R9
            mov QWORD PTR [RSP+24],R9

            rep stosd DWORD PTR [RDI]

            mov RDI,QWORD PTR [RBX]
            call strdup@PLT

            mov R9,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+8]
            mov QWORD PTR [R9],RAX
            call strdup@PLT

            mov R9,QWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP+32]
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [R9+8],RAX
            lea RAX,QWORD PTR [RIP+.L_40cc8b]
            mov QWORD PTR [R9+32],R10
            mov QWORD PTR [R9+40],0
            mov DWORD PTR [R9+28],R14D
            mov QWORD PTR [R9+16],RAX
            call .L_407270

            mov R9,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [RIP+.L_40ccec]
            mov EDX,4
            mov DWORD PTR [R9+24],EAX
            call strncmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_40ca59

            cmp RBX,R9
            je .L_40caa3

            mov RDX,RBX
            jmp .L_40cbe9
.L_40cbe6:

            mov RDX,RAX
.L_40cbe9:

            mov RAX,QWORD PTR [RDX+40]
            test RAX,RAX
            jne .L_40cbe6

            jmp .L_40ca9f
.L_40cbf7:

            call __stack_chk_fail@PLT
.L_40cbfc:

            mov QWORD PTR [RAX+48],R9
            jmp .L_40caa3
.L_40cc05:

            sub RSP,8
.L_40cc09:

            lea RDX,QWORD PTR [RIP+.L_40cdb0]
            mov ESI,1
            push RAX
            mov ECX,DWORD PTR [RSP+32]
            xor EAX,EAX
            mov RDI,RBP
            call .L_404c10

            mov ESI,4294967258
            mov RDI,RBP
            call .L_404af0

            pop RAX
            pop RDX
            jmp .L_40bcf8
.L_40cc38:

            mov R8,QWORD PTR [R9+32]
            lea RDX,QWORD PTR [RIP+.L_40cde8]
            mov ESI,1
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R9
            call .L_404c10

            mov RAX,RBX
            mov R9,QWORD PTR [RSP+24]
            jmp .L_40cc62
.L_40cc5f:

            mov RAX,RDX
.L_40cc62:

            mov RDX,QWORD PTR [RAX+40]
            test RDX,RDX
            jne .L_40cc5f

            mov QWORD PTR [RAX+40],R9
            jmp .L_40caa3
.L_40cc74:
          .string "ctable"
.L_40cc7b:
          .string "rb"
.L_40cc7e:
          .string "ctable2"
.L_40cc86:
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x31
          .byte 0x0
.L_40cc8b:
          .byte 0x6e
          .byte 0x74
          .byte 0x76
          .byte 0x32
          .byte 0x0
.L_40cc90:
          .string "NTv2 - loading grid %s"
.L_40cca7:
          .byte 0x67
          .byte 0x74
          .byte 0x78
          .byte 0x0
.L_40ccab:
          .string "missing"
.L_40ccb3:
          .string "HEADER"
.L_40ccba:
          .string "W GRID"
.L_40ccc1:
          .string "TO      NAD83   "
.L_40ccd2:
          .string "NUM_OREC"
.L_40ccdb:
          .string "GS_TYPE"
.L_40cce3:
          .string "SUB_NAME"
.L_40ccec:
          .byte 0x4e
          .byte 0x4f
          .byte 0x4e
          .byte 0x45
          .byte 0x0
.L_40ccf1:
          .byte 0x47
          .byte 0x54
          .byte 0x58
          .byte 0x0
.L_40ccf5:
          .string "CTABLE V2"
.L_40ccff:
          .string "CTABLE ct is NULL."
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cd18:
          .string "NTv1 grid shift file has wrong record count, corrupt?"
          .zero 2
.L_40cd50:
          .string "NTv1 %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)"
          .zero 6
.L_40cd80:
          .string "NTv2 %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
          .zero 2
.L_40cdb0:
          .string "GS_COUNT(%d) does not match expected cells (%dx%d=%d)\n"
          .zero 1
.L_40cde8:
          .string "pj_gridinfo_init_ntv2(): failed to find parent %8.8s for %s.\n"
          .zero 2
.L_40ce28:
          .string "gtx file header has invalid extents, corrupt?"
          .zero 2
.L_40ce58:
          .string "This GTX spans the dateline!  This will cause problems."
.L_40ce90:
          .string "GTX %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)"
          .zero 7
.L_40cec0:
          .string "Ctable2 %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
          .zero 7
.L_40cef8:
          .string "Ctable %s %dx%d: LL=(%.9g,%.9g) UR=(%.9g,%.9g)\n"
.L_40cf28:
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_40cf30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_40cf38:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_40cf40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xac
          .byte 0x40
.L_40cf48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0xc0
.L_40cf50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_40cf58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0xc0
.L_40cf60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_40cf68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_40cf70:
          .zero 8
.L_40cf78:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_40cf80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cf90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cfa0:
          .byte 0x4e
          .byte 0x54
          .byte 0x76
          .byte 0x31

            and BYTE PTR [RDI+114],AL
            imul ESP,DWORD PTR [RAX+RIZ*1+83],1952868712
            and BYTE PTR [RDI+84],AL
          .byte 0x58
          .byte 0x20
          .byte 0x56
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x47
          .byte 0x72
          .byte 0x69
.L_40cfc0:

            push RBX
            mov RBX,QWORD PTR [RIP+.L_65fd88]
            test RBX,RBX
            je .L_40cfff

            nop
            nop
            nop
.L_40cfd0:

            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RIP+.L_65fd88],RAX
            call .L_404a50

            mov RSI,RBX
            mov RDI,RAX
            call .L_40af30

            mov RBX,QWORD PTR [RIP+.L_65fd88]
            test RBX,RBX
            jne .L_40cfd0
.L_40cfff:

            pop RBX
            ret 
.L_40d001:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d010:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,1080
.L_40d027:

            mov DWORD PTR [RIP+.L_65fe9c],0
            mov DWORD PTR [RDX],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP],RSI
            call .L_40d340

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_40d2dc

            lea RBP,QWORD PTR [RSP+32]
            xor R13D,R13D
            xor EBX,EBX
            nop
            nop
            nop
.L_40d070:

            cmp AL,64
            mov RSI,QWORD PTR [RSP]
            jne .L_40d2b0

            add RSI,1
            movzx R14D,BYTE PTR [RSI]
            mov DWORD PTR [RSP+28],0
            cmp R14B,44
            je .L_40d2d0
.L_40d096:

            test R14B,R14B
            je .L_40d2d0

            lea RAX,QWORD PTR [RSI+1]
            xor R15D,R15D
            jmp .L_40d0b6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d0b0:

            cmp R14B,44
            je .L_40d0cb
.L_40d0b6:

            movzx R14D,BYTE PTR [RAX]
            add R15,1
            mov QWORD PTR [RSP],RAX
            add RAX,1
            test R14B,R14B
            jne .L_40d0b0
.L_40d0cb:

            cmp R15,1023
            ja .L_40d268
.L_40d0d8:

            mov RDX,R15
            mov ECX,1024
            mov RDI,RBP
            call __strncpy_chk@PLT

            xor EAX,EAX
            cmp R14B,44
            mov BYTE PTR [RSP+R15*1+32],0
            sete AL
            add QWORD PTR [RSP],RAX
            mov R15,QWORD PTR [RIP+.L_65fd88]
.L_40d102:

            xor R14D,R14D
            test R15,R15
            je .L_40d212

            nop
            nop
.L_40d110:

            mov RDI,QWORD PTR [R15]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_40d16c
.L_40d11f:

            cmp QWORD PTR [R15+32],0
            je .L_40d240

            movsxd RAX,DWORD PTR [R12]
            lea EDX,DWORD PTR [R13-2]
            cmp EAX,EDX
            jge .L_40d180
.L_40d136:

            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [R12],EDX
            mov QWORD PTR [RBX+RAX*8],R15
            mov QWORD PTR [RBX+RAX*8+8],0
            mov R15,QWORD PTR [R15+40]
            test R15,R15
            je .L_40d248

            mov RDI,QWORD PTR [R15]
            mov RSI,RBP
            mov R14D,1
            call strcmp@PLT

            test EAX,EAX
            je .L_40d11f
.L_40d16c:

            mov RAX,QWORD PTR [R15+40]
            test RAX,RAX
            je .L_40d1e0

            mov R15,RAX
            jmp .L_40d110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d180:

            add R13D,20
            movsxd R14,R13D
            shl R14,3
            mov RDI,R14
            call .L_403c30

            test RBX,RBX
            mov R8,RAX
            je .L_40d1d0

            lea RDX,QWORD PTR [R14-160]
            mov RSI,RBX
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call memcpy@PLT

            mov RDI,RBX
            call .L_403c60

            mov R8,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [R12]
            mov RBX,R8
            jmp .L_40d136
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d1d0:

            movsxd RAX,DWORD PTR [R12]
            mov RBX,R8
            jmp .L_40d136
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d1e0:

            test R14D,R14D
            jne .L_40d248

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            call .L_40b6b0

            test RAX,RAX
            je .L_40d2e5

            mov QWORD PTR [R15+40],RAX
            mov R15,QWORD PTR [RIP+.L_65fd88]
            xor R14D,R14D
            test R15,R15
            jne .L_40d110
.L_40d212:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            call .L_40b6b0

            test RAX,RAX
            mov R15,RAX
            je .L_40d2e5

            mov QWORD PTR [RIP+.L_65fd88],R15
            jmp .L_40d102
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d240:

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            jne .L_40d268
.L_40d248:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RIP+.L_65fe9c],0
            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            jne .L_40d070
.L_40d261:

            call .L_40d3e0

            jmp .L_40d286
.L_40d268:

            mov RDI,RBX
            xor EBX,EBX
            call .L_403c60

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,4294967258
            call .L_404af0

            call .L_40d3e0
.L_40d286:

            mov RCX,QWORD PTR [RSP+1064]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_40d2e0

            add RSP,1080
.L_40d2a3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40d2b0:

            movzx R14D,BYTE PTR [RSI]
            mov DWORD PTR [RSP+28],1
            cmp R14B,44
            jne .L_40d096

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d2d0:

            mov QWORD PTR [RSP],RSI
            xor R15D,R15D
            jmp .L_40d0d8
.L_40d2dc:

            xor EBX,EBX
            jmp .L_40d261
.L_40d2e0:

            call __stack_chk_fail@PLT
.L_40d2e5:

            lea RCX,QWORD PTR [RIP+.L_40d320]
            lea RSI,QWORD PTR [RIP+.L_40d304]
            lea RDI,QWORD PTR [RIP+.L_40d312]
            mov EDX,136
            call __assert_fail@PLT
.L_40d304:

            jo .L_40d370

            pop RDI
            jb .L_40d373
          .byte 0x64
          .byte 0x6c
          .byte 0x69
          .byte 0x73
          .byte 0x74
          .byte 0x2e
          .byte 0x63
          .byte 0x0
.L_40d312:
          .string "FALSE"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d320:

            jo .L_40d38c

            pop RDI
            jb .L_40d38f
          .byte 0x64
          .byte 0x6c
          .byte 0x69
          .byte 0x73
          .byte 0x74
          .byte 0x5f
          .byte 0x6d
          .byte 0x65
          .byte 0x72
          .byte 0x67
          .byte 0x65
          .byte 0x5f
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d340:

            push RBX
            sub RSP,16
.L_40d345:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RIP+.L_65fda0]
            test EAX,EAX
            jne .L_40d3aa

            lea RBX,QWORD PTR [RSP+4]
            lea RDI,QWORD PTR [RIP+.L_65fe00]
            call pthread_mutex_lock@PLT
.L_40d370:

            mov RDI,RBX
.L_40d373:

            call pthread_mutexattr_init@PLT

            mov ESI,1
            mov RDI,RBX
            call pthread_mutexattr_settype@PLT

            lea RDI,QWORD PTR [RIP+.L_65fdc0]
.L_40d38c:

            mov RSI,RBX
.L_40d38f:

            call pthread_mutex_init@PLT

            lea RDI,QWORD PTR [RIP+.L_65fe00]
            mov DWORD PTR [RIP+.L_65fda0],1
            call pthread_mutex_unlock@PLT
.L_40d3aa:

            lea RDI,QWORD PTR [RIP+.L_65fdc0]
            call pthread_mutex_lock@PLT

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40d3cc

            add RSP,16
.L_40d3ca:

            pop RBX
            ret 
.L_40d3cc:

            call __stack_chk_fail@PLT
.L_40d3d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d3e0:

            lea RDI,QWORD PTR [RIP+.L_65fdc0]
            jmp pthread_mutex_unlock@PLT
.L_40d3ec:

            nop
            nop
            nop
            nop
.L_40d3f0:

            ret 
.L_40d3f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d400:

            push R14
            push R13
            xor R13D,R13D
            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_40d40e:

            je .L_40d48e

            lea RBX,QWORD PTR [RDI+9]
            mov RBP,RDI
            mov RDI,RBX
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403c30

            lea RDI,QWORD PTR [RAX+9]
            mov R13,RAX
            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            mov RSI,RBX
            mov R14,R13
            call strcpy@PLT

            jmp .L_40d485
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d450:

            lea R12,QWORD PTR [RBP+9]
            mov RDI,R12
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+16]
            call .L_403c30

            lea RDI,QWORD PTR [RAX+9]
            mov RBX,RAX
            mov BYTE PTR [RAX+8],0
            mov QWORD PTR [RAX],0
            mov RSI,R12
            call strcpy@PLT

            mov QWORD PTR [R14],RBX
            mov R14,RBX
.L_40d485:

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_40d450
.L_40d48e:

            pop RBX
.L_40d48f:

            mov RAX,R13
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40d49a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40d4a0:

            mov EDX,DWORD PTR [RIP+.L_65fe38]
            test EDX,EDX
            jle .L_40d568

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40d4b8:

            call .L_40d340

            mov EAX,DWORD PTR [RIP+.L_65fe3c]
            test EAX,EAX
            jle .L_40d514

            xor R12D,R12D
            xor R13D,R13D
            nop
            nop
            nop
.L_40d4d0:

            mov RAX,QWORD PTR [RIP+.L_65fe28]
            mov RBX,QWORD PTR [RAX+R12*1]
            mov RAX,QWORD PTR [RIP+.L_65fe30]
            mov RDI,QWORD PTR [RAX+R12*1]
            call .L_403c60

            test RBX,RBX
            je .L_40d503
.L_40d4f0:

            mov RBP,QWORD PTR [RBX]
            mov RDI,RBX
            call .L_403c60

            test RBP,RBP
            mov RBX,RBP
            jne .L_40d4f0
.L_40d503:

            add R13D,1
            add R12,8
            cmp DWORD PTR [RIP+.L_65fe3c],R13D
            jg .L_40d4d0
.L_40d514:

            mov RDI,QWORD PTR [RIP+.L_65fe30]
            call .L_403c60

            mov RDI,QWORD PTR [RIP+.L_65fe28]
            call .L_403c60

            mov DWORD PTR [RIP+.L_65fe3c],0
            mov DWORD PTR [RIP+.L_65fe38],0
            mov QWORD PTR [RIP+.L_65fe30],0
            mov QWORD PTR [RIP+.L_65fe28],0
            add RSP,8
.L_40d55a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40d3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d568:

            ret 
.L_40d56a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40d570:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            xor EBP,EBP
            push RBX
            sub RSP,16
.L_40d581:

            call .L_40d340
.L_40d586:

            mov R12D,DWORD PTR [RIP+.L_65fe3c]
            cmp R12D,EBP
            jle .L_40d5bc

            mov R14,QWORD PTR [RIP+.L_65fe30]
            movsxd RBX,EBP
            shl RBX,3
.L_40d5a0:

            mov RSI,QWORD PTR [R14+RBX*1]
            mov RDI,R13
            add EBP,1
            call strcmp@PLT

            test EAX,EAX
            je .L_40d5e0

            add RBX,8
            cmp R12D,EBP
            jne .L_40d5a0
.L_40d5bc:

            xor EAX,EAX
.L_40d5be:

            mov QWORD PTR [RSP+8],RAX
            call .L_40d3e0

            mov RAX,QWORD PTR [RSP+8]
            add RSP,16
.L_40d5d1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d5e0:

            mov RAX,QWORD PTR [RIP+.L_65fe28]
            mov RDI,QWORD PTR [RAX+RBX*1]
            call .L_40d400

            test RAX,RAX
            je .L_40d586

            jmp .L_40d5be
.L_40d5f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d600:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
.L_40d610:

            call .L_40d340

            movsxd RBX,DWORD PTR [RIP+.L_65fe3c]
            cmp EBX,DWORD PTR [RIP+.L_65fe38]
            je .L_40d690
.L_40d624:

            mov RDI,R12
            call strlen@PLT

            mov RDX,QWORD PTR [RIP+.L_65fe30]
            lea RDI,QWORD PTR [RAX+1]
            lea RBX,QWORD PTR [RDX+RBX*8]
            call .L_403c30

            mov QWORD PTR [RBX],RAX
            movsxd RAX,DWORD PTR [RIP+.L_65fe3c]
            mov RSI,R12
            mov RDX,QWORD PTR [RIP+.L_65fe30]
            mov RDI,QWORD PTR [RDX+RAX*8]
            lea RBX,QWORD PTR [RAX*8]
            call strcpy@PLT

            add RBX,QWORD PTR [RIP+.L_65fe28]
            mov RDI,RBP
            call .L_40d400

            add DWORD PTR [RIP+.L_65fe3c],1
            mov QWORD PTR [RBX],RAX
            add RSP,8
.L_40d682:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_40d3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d690:

            lea EDI,DWORD PTR [RBX+RBX*1+15]
            mov DWORD PTR [RIP+.L_65fe38],EDI
            movsxd RDI,EDI
            shl RDI,3
            call .L_403c30

            mov RBX,QWORD PTR [RIP+.L_65fe30]
            mov R13,RAX
            test RBX,RBX
            je .L_40d6d3

            movsxd RAX,DWORD PTR [RIP+.L_65fe3c]
            test EAX,EAX
            je .L_40d6d3

            lea RDX,QWORD PTR [RAX*8]
            mov RSI,RBX
            mov RDI,R13
            call memcpy@PLT
.L_40d6d3:

            mov RDI,RBX
            call .L_403c60

            movsxd RDI,DWORD PTR [RIP+.L_65fe38]
            mov QWORD PTR [RIP+.L_65fe30],R13
            shl RDI,3
            call .L_403c30

            mov RBX,QWORD PTR [RIP+.L_65fe28]
            mov R13,RAX
            test RBX,RBX
            je .L_40d71f

            movsxd RAX,DWORD PTR [RIP+.L_65fe3c]
            test EAX,EAX
            je .L_40d71f

            lea RDX,QWORD PTR [RAX*8]
            mov RSI,RBX
            mov RDI,R13
            call memcpy@PLT
.L_40d71f:

            mov RDI,RBX
            call .L_403c60

            mov QWORD PTR [RIP+.L_65fe28],R13
            movsxd RBX,DWORD PTR [RIP+.L_65fe3c]
            jmp .L_40d624
.L_40d73a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40d740:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            sub RSP,3144
.L_40d754:

            mov R12,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3128],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],RDI
            mov DWORD PTR [RSP+124],R8D
            test R12,R12
            mov QWORD PTR [RSP+8],R9
            mov R14,QWORD PTR [RSP+3208]
            mov R15,QWORD PTR [RSP+3216]
            mov RBP,QWORD PTR [RSP+3224]
            mov RDI,QWORD PTR [RDI]
            je .L_40de65

            mov R8D,DWORD PTR [RCX]
            test R8D,R8D
            je .L_40dec7
.L_40d7a9:

            cmp QWORD PTR [RSP+8],0
            mov DWORD PTR [RDI],0
            jle .L_40db75

            movsxd RAX,DWORD PTR [RSP+3200]
            movsd XMM9,QWORD PTR [RIP+.L_44f380-267264]
            movsd XMM6,QWORD PTR [RIP+.L_40df90]
            mov QWORD PTR [RSP],RBP
            movq XMM5,QWORD PTR [RIP+.L_40dfc0]
            xor R8D,R8D
            shl RAX,3
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
.L_40d7f0:

            movsd XMM4,QWORD PTR [R14]
            movsd XMM3,QWORD PTR [R15]
            ucomisd XMM4,XMM4
            jp .L_40dbb2

            ucomisd XMM3,XMM3
            jp .L_40dbb2

            mov ESI,DWORD PTR [R13]
            test ESI,ESI
            jle .L_40dbb2

            movapd XMM0,XMM9
            movsd XMM8,QWORD PTR [RIP+.L_40df98]
            movsd XMM7,QWORD PTR [RIP+.L_40dfa0]
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d838:

            mov RSI,QWORD PTR [R12+RBP*8]
            mov RBX,QWORD PTR [RSI+32]
            movsd XMM1,QWORD PTR [RBX+88]
            ucomisd XMM1,XMM3
            ja .L_40db40

            movsd XMM10,QWORD PTR [RBX+80]
            ucomisd XMM10,XMM4
            ja .L_40db40

            mov EAX,DWORD PTR [RBX+116]
            pxor XMM2,XMM2
            sub EAX,1
            cvtsi2sd XMM2,EAX
            mulsd XMM2,QWORD PTR [RBX+104]
            addsd XMM1,XMM2
            ucomisd XMM3,XMM1
            ja .L_40db40

            mov EAX,DWORD PTR [RBX+112]
            pxor XMM1,XMM1
            sub EAX,1
            cvtsi2sd XMM1,EAX
            mulsd XMM1,QWORD PTR [RBX+96]
            addsd XMM10,XMM1
            ucomisd XMM4,XMM10
            ja .L_40db40

            mov RCX,QWORD PTR [RSI+48]
            test RCX,RCX
            jne .L_40d904

            jmp .L_40d91f
          .byte 0x90
.L_40d8b0:

            movsd XMM2,QWORD PTR [RAX+80]
            ucomisd XMM2,XMM4
            ja .L_40d916

            mov EDI,DWORD PTR [RAX+116]
            pxor XMM1,XMM1
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM1,ECX
            mulsd XMM1,QWORD PTR [RAX+104]
            addsd XMM0,XMM1
            ucomisd XMM3,XMM0
            ja .L_40d916

            mov EDI,DWORD PTR [RAX+112]
            pxor XMM0,XMM0
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM0,ECX
            mulsd XMM0,QWORD PTR [RAX+96]
            addsd XMM2,XMM0
            ucomisd XMM4,XMM2
            ja .L_40d916

            mov RCX,QWORD PTR [RDX+48]
            mov RSI,RDX
            mov RBX,RAX
            test RCX,RCX
            je .L_40d91f
.L_40d904:

            mov RDX,RCX
.L_40d907:

            mov RAX,QWORD PTR [RDX+32]
            movsd XMM0,QWORD PTR [RAX+88]
            ucomisd XMM0,XMM3
            jbe .L_40d8b0
.L_40d916:

            mov RDX,QWORD PTR [RDX+40]
            test RDX,RDX
            jne .L_40d907
.L_40d91f:

            mov RCX,QWORD PTR [RBX+120]
            test RCX,RCX
            je .L_40dd0e
.L_40d92c:

            movapd XMM2,XMM4
            movapd XMM1,XMM3
            movapd XMM12,XMM5
            subsd XMM2,QWORD PTR [RBX+80]
            movapd XMM0,XMM8
            subsd XMM1,QWORD PTR [RBX+88]
            divsd XMM2,QWORD PTR [RBX+96]
            divsd XMM1,QWORD PTR [RBX+104]
            movapd XMM10,XMM2
            movapd XMM11,XMM2
            andpd XMM10,XMM5
            ucomisd XMM6,XMM10
            jbe .L_40d9a3

            cvttsd2si RAX,XMM2
            pxor XMM10,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_40df98]
            andnpd XMM12,XMM2
            cvtsi2sd XMM10,RAX
            movapd XMM11,XMM10
            cmpnlesd XMM11,XMM2
            andpd XMM11,XMM0
            subsd XMM10,XMM11
            movapd XMM11,XMM10
            orpd XMM11,XMM12
.L_40d9a3:

            movapd XMM10,XMM1
            cvttsd2si R9D,XMM11
            movapd XMM12,XMM5
            andpd XMM10,XMM5
            movapd XMM11,XMM1
            ucomisd XMM6,XMM10
            jbe .L_40d9f6

            cvttsd2si RAX,XMM1
            pxor XMM10,XMM10
            andnpd XMM12,XMM1
            cvtsi2sd XMM10,RAX
            movapd XMM11,XMM10
            cmpnlesd XMM11,XMM1
            andpd XMM11,XMM0
            subsd XMM10,XMM11
            movapd XMM11,XMM10
            orpd XMM11,XMM12
.L_40d9f6:

            pxor XMM10,XMM10
            cvttsd2si EDX,XMM11
            mov EDI,DWORD PTR [RBX+112]
            lea ESI,DWORD PTR [R9+1]
            mov R10D,DWORD PTR [RBX+116]
            pxor XMM11,XMM11
            cvtsi2sd XMM10,R9D
            pxor XMM12,XMM12
            lea EAX,DWORD PTR [RDI-1]
            cmp EDI,ESI
            lea R11D,DWORD PTR [R10-1]
            cmovle ESI,EAX
            lea EAX,DWORD PTR [RDX+1]
            cmp R10D,EAX
            subsd XMM2,XMM10
            pxor XMM10,XMM10
            cmovle EAX,R11D
            cvtsi2sd XMM10,EDX
            imul EDX,EDI
            imul EDI,EAX
            lea EAX,DWORD PTR [RDX+R9*1]
            add EDX,ESI
            movsxd RDX,EDX
            cdqe 
            cvtss2sd XMM12,DWORD PTR [RCX+RDX*4]
            cvtss2sd XMM11,DWORD PTR [RCX+RAX*4]
            lea EAX,DWORD PTR [RDI+R9*1]
            mulsd XMM12,XMM2
            cdqe 
            subsd XMM1,XMM10
            movapd XMM10,XMM0
            subsd XMM10,XMM2
            subsd XMM0,XMM1
            mulsd XMM11,XMM10
            mulsd XMM11,XMM0
            mulsd XMM0,XMM12
            addsd XMM0,XMM11
            pxor XMM11,XMM11
            cvtss2sd XMM11,DWORD PTR [RCX+RAX*4]
            lea EAX,DWORD PTR [RDI+RSI*1]
            mulsd XMM10,XMM11
            cdqe 
            mulsd XMM10,XMM1
            addsd XMM10,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RCX+RAX*4]
            mulsd XMM0,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,XMM10
            ucomisd XMM0,XMM7
            ja .L_40dba0

            movsd XMM1,QWORD PTR [RIP+.L_40dfa8]
            ucomisd XMM1,XMM0
            ja .L_40dba0

            ucomisd XMM0,QWORD PTR [RIP+.L_40dfb0]
            jp .L_40daef

            je .L_40dba0
.L_40daef:

            mov EDX,DWORD PTR [RSP+124]
            mov RAX,QWORD PTR [RSP]
            test EDX,EDX
            movsd XMM1,QWORD PTR [RAX]
            je .L_40dd9c

            subsd XMM1,XMM0
            movsd QWORD PTR [RAX],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dfb8]
            ucomisd XMM0,XMM1
            jbe .L_40ddba
.L_40db1d:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            jle .L_40dbb2

            nop
            nop
            nop
            nop
            nop
            nop
.L_40db30:

            add RBP,1
            jmp .L_40d838
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40db40:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            jg .L_40db30

            movsd XMM1,QWORD PTR [RIP+.L_40dfb8]
.L_40db51:

            ucomisd XMM0,XMM1
            ja .L_40dbb2

            mov RAX,QWORD PTR [RSP+24]
            add R8,1
            add QWORD PTR [RSP],RAX
            add R15,RAX
            add R14,RAX
            cmp QWORD PTR [RSP+8],R8
            jne .L_40d7f0
.L_40db75:

            xor EAX,EAX
.L_40db77:

            mov RDI,QWORD PTR [RSP+3128]
            xor RDI,QWORD PTR FS:[40]
            jne .L_40dec2

            add RSP,3144
.L_40db95:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40dba0:

            lea EAX,DWORD PTR [RBP+1]
            cmp DWORD PTR [R13],EAX
            movapd XMM0,XMM9
            jg .L_40db30
.L_40dbb2:

            movsd XMM1,QWORD PTR [RIP+.L_44f380-267256]
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [R14]
            lea RDX,QWORD PTR [RIP+.L_40dee0]
            mov ESI,2
            mulsd XMM0,XMM1
            mov RDI,QWORD PTR [RAX]
            mov EAX,2
            mulsd XMM1,QWORD PTR [R15]
            lea R15,QWORD PTR [RSP+128]
            call .L_404c10

            mov ECX,DWORD PTR [R13]
            mov BYTE PTR [RSP+128],0
            test ECX,ECX
            jle .L_40dcd9

            xor R14D,R14D
            lea R15,QWORD PTR [RSP+128]
            lea RBP,QWORD PTR [RIP+.L_40df78]
            jmp .L_40dc43
.L_40dc16:

            lea RCX,QWORD PTR [RIP+.L_40df6b]
            xor EAX,EAX
            mov EDX,3000
            mov ESI,1
            mov RDI,R15
            add R14D,1
            call __sprintf_chk@PLT

            add R12,8
            cmp DWORD PTR [R13],R14D
            jle .L_40dcd9
.L_40dc43:

            mov RBX,R15
.L_40dc46:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40dc46

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            mov RAX,QWORD PTR [R12]
            sbb RBX,3
            sub RBX,R15
            mov R8,QWORD PTR [RAX]
            mov RDI,R8
            mov QWORD PTR [RSP],R8
            call strlen@PLT

            add RAX,RBX
            mov R8,QWORD PTR [RSP]
            cmp RAX,2900
            ja .L_40de3c

            test R14D,R14D
            je .L_40dc16

            lea RDI,QWORD PTR [R15+RBX*1]
            xor EAX,EAX
            mov RCX,RBP
            mov RDX,-1
            mov ESI,1
            add R14D,1
            call __sprintf_chk@PLT

            add R12,8
            cmp DWORD PTR [R13],R14D
            jg .L_40dc43
.L_40dcd9:

            mov RBX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_40df7c]
            xor EAX,EAX
            mov RCX,R15
            mov ESI,2
            mov RDI,QWORD PTR [RBX]
            call .L_404c10

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967248
            call .L_404af0

            mov EAX,4294967248
            jmp .L_40db77
.L_40dd0e:

            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+112],R8
            movsd QWORD PTR [RSP+88],XMM6
            movaps XMMWORD PTR [RSP+96],XMM5
            mov QWORD PTR [RSP+32],RSI
            movsd QWORD PTR [RSP+80],XMM9
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            call .L_404a30

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RAX
            call .L_40afa0

            test EAX,EAX
            je .L_40de49

            mov RCX,QWORD PTR [RBX+120]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            mov R8,QWORD PTR [RSP+112]
            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+88]
            movapd XMM5,XMMWORD PTR [RSP+96]
            jmp .L_40d92c
.L_40dd9c:

            addsd XMM1,XMM0
            mov RAX,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_40dfb8]
            ucomisd XMM0,XMM1
            ja .L_40db1d
.L_40ddba:

            mov EAX,DWORD PTR [RIP+.L_65fe40]
            lea EDX,DWORD PTR [RAX+1]
            cmp EAX,19
            mov DWORD PTR [RIP+.L_65fe40],EDX
            jg .L_40db51

            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_40df4d]
            mov RCX,RBX
            mov ESI,3
            mov QWORD PTR [RSP+80],R8
            movsd QWORD PTR [RSP+56],XMM6
            movaps XMMWORD PTR [RSP+64],XMM5
            mov RDI,QWORD PTR [RAX]
            xor EAX,EAX
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM0
            call .L_404c10

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM5,XMMWORD PTR [RSP+64]
            jmp .L_40db51
.L_40de3c:

            mov DWORD PTR [R15+RBX*1],3026478
            jmp .L_40dcd9
.L_40de49:

            mov RAX,QWORD PTR [RSP+16]
            mov ESI,4294967258
            mov RDI,QWORD PTR [RAX]
            call .L_404af0

            mov EAX,4294967258
            jmp .L_40db77
.L_40de65:

            mov RAX,QWORD PTR [RSP+16]
            mov RBX,RDX
            mov RDX,RSI
            mov RCX,QWORD PTR [RAX+16]
            mov RSI,RCX
            mov QWORD PTR [RSP],RCX
            call .L_4043f0

            mov RDI,QWORD PTR [RSP+16]
            mov R12,RAX
            call .L_404a30

            mov RSI,R12
            mov RDI,RAX
            mov RDX,R13
            call .L_40d010

            mov R12,RAX
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+16]
            test R12,R12
            mov RDI,QWORD PTR [RAX]
            je .L_40debb

            mov R9D,DWORD PTR [R13]
            test R9D,R9D
            jne .L_40d7a9
.L_40debb:

            mov EAX,DWORD PTR [RDI]
            jmp .L_40db77
.L_40dec2:

            call __stack_chk_fail@PLT
.L_40dec7:

            mov ESI,4294967258
            call .L_404af0

            mov EAX,4294967258
            jmp .L_40db77
.L_40dedb:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40dee0:
          .string "pj_apply_vgridshift(): failed to find a grid shift table for\n                       location (%.7fdW,%.7fdN)"
.L_40df4d:
          .string "pj_apply_gridshift(): used %s"
.L_40df6b:

            and BYTE PTR [RAX],AH
            and BYTE PTR [RDX+RSI*2+105],DH
            cmp AH,BYTE PTR FS:[RAX]
            and EAX,623640691
            jae .L_40df7c
# WARNING: found overlapping blocks at address dd48
.set .L_40df78, . - 4

.L_40df7c:

            and EAX,9437299
.L_40df81:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,DH
            jg .L_40df81
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_40df90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_40df98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_40dfa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_40dfa8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0xc0
.L_40dfb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0xe2
          .byte 0x38
          .byte 0x56
          .byte 0xc0
.L_40dfb8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_40dfc0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dfd0:

            movapd XMM2,XMM0
            test RDI,RDI
            addsd XMM2,XMM1
            movsd QWORD PTR [RSP-24],XMM2
            movsd XMM2,QWORD PTR [RSP-24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RSP-16],XMM2
            movsd XMM2,QWORD PTR [RSP-24]
            movsd XMM3,QWORD PTR [RSP-16]
            subsd XMM2,XMM3
            movsd QWORD PTR [RSP-8],XMM2
            movsd XMM2,QWORD PTR [RSP-16]
            subsd XMM2,XMM0
            movsd QWORD PTR [RSP-16],XMM2
            movsd XMM0,QWORD PTR [RSP-8]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP-8],XMM0
            je .L_40e045

            movsd XMM0,QWORD PTR [RSP-16]
            movsd XMM1,QWORD PTR [RSP-8]
            addsd XMM0,XMM1
            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [RDI],XMM0
.L_40e045:

            movsd XMM0,QWORD PTR [RSP-24]
            ret 
.L_40e04c:

            nop
            nop
            nop
            nop
.L_40e050:

            movapd XMM6,XMM1
            lea EAX,DWORD PTR [RDX+RDI*1]
            movapd XMM2,XMM1
            cmp EDX,5
            subsd XMM6,XMM0
            cdqe 
            addsd XMM2,XMM0
            lea RAX,QWORD PTR [RSI+RAX*8]
            addsd XMM6,XMM6
            mulsd XMM6,XMM2
            jne .L_40e0e0

            movsd XMM4,QWORD PTR [RAX-8]
            mov EDX,2
            sub RAX,8
.L_40e084:

            sub EDX,1
            pxor XMM5,XMM5
            not RDX
            shl RDX,4
            add RDX,RAX
            nop
            nop
            nop
.L_40e098:

            movapd XMM3,XMM6
            movapd XMM2,XMM6
            sub RAX,16
            mulsd XMM3,XMM4
            subsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RAX+8]
            cmp RAX,RDX
            addsd XMM5,XMM3
            mulsd XMM2,XMM5
            subsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RAX]
            addsd XMM4,XMM2
            jne .L_40e098

            test EDI,EDI
            jne .L_40e0f0

            subsd XMM4,XMM5
            movapd XMM0,XMM4
            mulsd XMM0,XMM1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e0e0:

            mov EDX,3
            pxor XMM4,XMM4
            jmp .L_40e084
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e0f0:

            addsd XMM0,XMM0
            mulsd XMM0,XMM1
            mulsd XMM0,XMM4
            ret 
.L_40e0fd:

            nop
            nop
            nop
.L_40e100:

            movsd XMM2,QWORD PTR [RIP+.L_415938]
            add RDI,120
            add RSI,8
            mov EDX,3
            xor R8D,R8D
.L_40e118:

            movsxd RAX,R8D
            cmp EDX,-1
            mulsd XMM2,XMM0
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RCX+8]
            movsd XMM1,QWORD PTR [RCX]
            je .L_40e14a

            mov R9D,EDX
            lea RCX,QWORD PTR [RCX+R9*8+16]
.L_40e138:

            mulsd XMM1,XMM0
            add RAX,8
            cmp RAX,RCX
            addsd XMM1,QWORD PTR [RAX-8]
            jne .L_40e138
.L_40e14a:

            mulsd XMM1,XMM2
            lea R8D,DWORD PTR [R8+RDX*1+2]
            sub EDX,1
            add RSI,8
            movsd QWORD PTR [RSI-8],XMM1
            cmp EDX,-2
            jne .L_40e118

            ret 
.L_40e166:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e170:

            movsd XMM2,QWORD PTR [RIP+.L_415938]
            add RDI,240
            mov EDX,4
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e190:

            movsxd RAX,R8D
            cmp EDX,-1
            lea RCX,QWORD PTR [RDI+RAX*8]
            lea RAX,QWORD PTR [RCX+8]
            movsd XMM1,QWORD PTR [RCX]
            je .L_40e1c2

            mov R9D,EDX
            lea RCX,QWORD PTR [RCX+R9*8+16]
            nop
            nop
            nop
            nop
.L_40e1b0:

            mulsd XMM1,XMM0
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RAX,RCX
            jne .L_40e1b0
.L_40e1c2:

            mulsd XMM1,XMM2
            lea R8D,DWORD PTR [R8+RDX*1+2]
            sub EDX,1
            add RSI,8
            mulsd XMM2,XMM0
            movsd QWORD PTR [RSI-8],XMM1
            cmp EDX,-2
            jne .L_40e190

            ret 
.L_40e1e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e1f0:

            movapd XMM3,XMM0
            lea R9,QWORD PTR [RIP+.L_4153e0]
            movapd XMM2,XMM0
            add RDI,8
            mulsd XMM3,XMM0
            mov EDX,5
            xor ECX,ECX
            movsd XMM1,QWORD PTR [RIP+.L_415940]
            movsd XMM4,QWORD PTR [RIP+.L_415948]
            nop
            nop
.L_40e220:

            mov R8D,EDX
            sar R8D,1
            je .L_40e24e

            movsxd RAX,ECX
            lea R10D,DWORD PTR [R8-1]
            lea RSI,QWORD PTR [R9+RAX*8]
            lea RAX,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RSI+R10*8+16]
.L_40e23c:

            mulsd XMM1,XMM3
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RSI,RAX
            jne .L_40e23c
.L_40e24e:

            mulsd XMM1,XMM2
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [R8+RCX*1+2]
            mulsd XMM2,XMM0
            divsd XMM1,XMM4
            movsd QWORD PTR [RDI-8],XMM1
            cmp EDX,-1
            je .L_40e290

            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM4,QWORD PTR [R9+RAX*8]
            movsxd RAX,ECX
            movsd XMM1,QWORD PTR [R9+RAX*8]
            jmp .L_40e220
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e290:

            ret 
.L_40e292:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e2a0:

            movapd XMM3,XMM0
            lea R9,QWORD PTR [RIP+.L_4152a0]
            movapd XMM2,XMM0
            add RDI,8
            mulsd XMM3,XMM0
            mov EDX,5
            xor ECX,ECX
            movsd XMM1,QWORD PTR [RIP+.L_415938]
            movsd XMM4,QWORD PTR [RIP+.L_415948]
            nop
            nop
.L_40e2d0:

            mov R8D,EDX
            sar R8D,1
            je .L_40e2fe

            movsxd RAX,ECX
            lea R10D,DWORD PTR [R8-1]
            lea RSI,QWORD PTR [R9+RAX*8]
            lea RAX,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RSI+R10*8+16]
.L_40e2ec:

            mulsd XMM1,XMM3
            add RAX,8
            addsd XMM1,QWORD PTR [RAX-8]
            cmp RSI,RAX
            jne .L_40e2ec
.L_40e2fe:

            mulsd XMM1,XMM2
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [R8+RCX*1+2]
            mulsd XMM2,XMM0
            divsd XMM1,XMM4
            movsd QWORD PTR [RDI-8],XMM1
            cmp EDX,-1
            je .L_40e340

            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM4,QWORD PTR [R9+RAX*8]
            movsxd RAX,ECX
            movsd XMM1,QWORD PTR [R9+RAX*8]
            jmp .L_40e2d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e340:

            ret 
.L_40e342:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e350:

            mov RAX,RDI
            sub RSP,24
.L_40e357:

            movsd XMM1,QWORD PTR [RAX+8]
            mov RDI,RSP
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RDX
            xor EDX,EDX
            call .L_40dfd0

            lea RDI,QWORD PTR [RAX+8]
            movsd XMM1,QWORD PTR [RAX]
            call .L_40dfd0

            ucomisd XMM0,QWORD PTR [RIP+.L_415930]
            movsd QWORD PTR [RAX],XMM0
            jp .L_40e391

            je .L_40e3b8
.L_40e391:

            movsd XMM0,QWORD PTR [RAX+8]
            addsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RAX+8],XMM0
.L_40e3a0:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e3c3

            add RSP,24
.L_40e3b4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e3b8:

            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM0
            jmp .L_40e3a0
.L_40e3c3:

            call __stack_chk_fail@PLT
.L_40e3c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e3d0:

            sub RSP,40
            pxor XMM3,XMM3
            movsd XMM1,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RSI]
            movapd XMM0,XMM1
            mulsd XMM2,XMM2
            mulsd XMM0,XMM1
            addsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40e413
.L_40e3fa:

            divsd XMM1,XMM2
            movsd QWORD PTR [RDI],XMM1
            movsd XMM0,QWORD PTR [RSI]
            divsd XMM0,XMM2
            movsd QWORD PTR [RSI],XMM0
            add RSP,40
            ret 
.L_40e413:

            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+16],RDI
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RDI]
            jmp .L_40e3fa
.L_40e43e:

            nop
            nop
.L_40e440:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_40e448:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call fmod@PLT

            movsd XMM4,QWORD PTR [RIP+.L_415950]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            jb .L_40e598

            addsd XMM2,QWORD PTR [RIP+.L_415958]
            movsd XMM6,QWORD PTR [RIP+.L_415960]
            movsd QWORD PTR [RSP],XMM6
.L_40e49e:

            xorpd XMM3,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            movapd XMM0,XMM3
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_415950]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            jb .L_40e578

            addsd XMM0,QWORD PTR [RIP+.L_415958]
.L_40e4dd:

            movapd XMM1,XMM2
            lea RDI,QWORD PTR [RSP+16]
            call .L_40dfd0

            movsd XMM1,QWORD PTR [RIP+.L_415958]
            call fmod@PLT

            movsd XMM6,QWORD PTR [RIP+.L_415950]
            ucomisd XMM6,XMM0
            jb .L_40e560

            addsd XMM0,QWORD PTR [RIP+.L_415958]
.L_40e50e:

            ucomisd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            jp .L_40e53a

            jne .L_40e53a

            pxor XMM2,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_415950]
            cmpnltsd XMM2,XMM1
            andpd XMM0,XMM2
            andnpd XMM2,XMM5
            orpd XMM0,XMM2
.L_40e53a:

            mov RDI,RBX
            call .L_40dfd0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40e5bc

            add RSP,32
.L_40e556:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e560:

            movsd XMM6,QWORD PTR [RSP]
            ucomisd XMM6,XMM0
            jae .L_40e50e

            subsd XMM0,QWORD PTR [RIP+.L_415958]
            jmp .L_40e50e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e578:

            movsd XMM7,QWORD PTR [RSP]
            ucomisd XMM7,XMM0
            jae .L_40e4dd

            subsd XMM0,QWORD PTR [RIP+.L_415958]
            jmp .L_40e4dd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e598:

            movsd XMM4,QWORD PTR [RIP+.L_415960]
            ucomisd XMM4,XMM0
            movsd QWORD PTR [RSP],XMM4
            jae .L_40e49e

            subsd XMM2,QWORD PTR [RIP+.L_415958]
            jmp .L_40e49e
.L_40e5bc:

            call __stack_chk_fail@PLT
.L_40e5c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e5d0:

            sub RSP,24
.L_40e5d4:

            movsd QWORD PTR [RSP],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            call fmod@PLT

            movsd XMM4,QWORD PTR [RIP+.L_415950]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM4,XMM0
            jb .L_40e6a0

            addsd XMM2,QWORD PTR [RIP+.L_415958]
.L_40e609:

            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            movsd QWORD PTR [RSP],XMM2
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_415950]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM5,XMM0
            jb .L_40e680

            addsd XMM3,QWORD PTR [RIP+.L_415958]
.L_40e63e:

            movapd XMM1,XMM3
            movapd XMM0,XMM2
            xor EDI,EDI
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_40e440

            pxor XMM1,XMM1
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM2
            jae .L_40e6e0
.L_40e66d:

            ucomisd XMM1,XMM3
            jae .L_40e6c0
.L_40e673:

            xor EAX,EAX
            add RSP,24
.L_40e679:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e680:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM0,XMM3
            jae .L_40e63e

            subsd XMM3,QWORD PTR [RIP+.L_415958]
            jmp .L_40e63e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e6a0:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM0,XMM2
            jae .L_40e609

            subsd XMM2,QWORD PTR [RIP+.L_415958]
            jmp .L_40e609
          .byte 0x90
.L_40e6c0:

            ucomisd XMM2,XMM1
            jbe .L_40e673

            xor EAX,EAX
            ucomisd XMM1,XMM0
            seta AL
            add RSP,24
.L_40e6d3:

            neg EAX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e6e0:

            ucomisd XMM3,XMM1
            jbe .L_40e66d

            ucomisd XMM0,XMM1
            mov EAX,1
            jbe .L_40e66d

            add RSP,24
            ret 
.L_40e6fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40e700:

            sub RSP,24
.L_40e704:

            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415968]
            call fmod@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_415968]
            movapd XMM0,XMM3
            call fmod@PLT

            pxor XMM1,XMM1
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM0,XMM1
            jb .L_40e780

            movsd XMM3,QWORD PTR [RIP+.L_415958]
            xor EAX,EAX
            ucomisd XMM3,XMM0
            jbe .L_40e780
.L_40e752:

            ucomisd XMM2,XMM1
            jb .L_40e766

            movsd XMM0,QWORD PTR [RIP+.L_415958]
            ucomisd XMM0,XMM2
            ja .L_40e779
.L_40e766:

            movsd XMM0,QWORD PTR [RIP+.L_415970]
            xor EDX,EDX
            ucomisd XMM0,XMM2
            setbe DL
            sub EAX,EDX
.L_40e779:

            add RSP,24
.L_40e77d:

            ret 
          .byte 0x66
          .byte 0x90
.L_40e780:

            movsd XMM3,QWORD PTR [RIP+.L_415970]
            xor EAX,EAX
            ucomisd XMM3,XMM0
            setbe AL
            jmp .L_40e752
.L_40e793:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e7a0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RSI
            sub RSP,32
.L_40e7ae:

            movsd XMM1,QWORD PTR [RIP+.L_415958]
            movsd QWORD PTR [RSP+8],XMM0
            call fmod@PLT

            movapd XMM2,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_415920]
            divsd XMM2,QWORD PTR [RIP+.L_415978]
            movsd XMM5,QWORD PTR [RIP+.L_415988]
            addsd XMM2,QWORD PTR [RIP+.L_415980]
            movapd XMM3,XMM2
            movapd XMM1,XMM2
            andpd XMM3,XMM4
            ucomisd XMM5,XMM3
            jbe .L_40e82e

            cvttsd2si RAX,XMM2
            pxor XMM3,XMM3
            movsd XMM5,QWORD PTR [RIP+.L_415938]
            andnpd XMM4,XMM2
            cvtsi2sd XMM3,RAX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM2
            movapd XMM1,XMM7
            andpd XMM1,XMM5
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM4
.L_40e82e:

            cvttsd2si EBX,XMM1
            pxor XMM1,XMM1
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            imul EAX,EBX,90
            and EBX,3
            cvtsi2sd XMM1,EAX
            subsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_65fe80]
            call sincos@PLT

            cmp EBX,1
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            je .L_40e8f0

            jb .L_40e8e0

            cmp EBX,2
            je .L_40e8c0

            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [R12],XMM1
            movsd QWORD PTR [RBP],XMM0
.L_40e88a:

            pxor XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM0
            jp .L_40e89c

            je .L_40e8b6
.L_40e89c:

            movsd XMM1,QWORD PTR [R12]
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            addsd XMM0,QWORD PTR [RBP]
            movsd QWORD PTR [RBP],XMM0
.L_40e8b6:

            add RSP,32
.L_40e8ba:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_40e8c0:

            movq XMM2,QWORD PTR [RIP+.L_415910]
            xorpd XMM0,XMM2
            xorpd XMM1,XMM2
            movsd QWORD PTR [R12],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_40e88a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e8e0:

            movsd QWORD PTR [R12],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_40e88a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e8f0:

            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [R12],XMM1
            movsd QWORD PTR [RBP],XMM0
            jmp .L_40e88a
.L_40e905:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40e910:

            movapd XMM2,XMM0
            sub RSP,24
.L_40e918:

            movapd XMM0,XMM1
            movapd XMM3,XMM2
            movq XMM1,QWORD PTR [RIP+.L_415920]
            movsd XMM4,QWORD PTR [RIP+.L_65fe80]
            andpd XMM3,XMM1
            andpd XMM1,XMM0
            movsd QWORD PTR [RSP],XMM4
            ucomisd XMM3,XMM1
            jbe .L_40e978

            pxor XMM1,XMM1
            ucomisd XMM1,XMM2
            jbe .L_40e9f0

            xorpd XMM2,XMMWORD PTR [RIP+.L_415910]
            movapd XMM1,XMM2
            call atan2@PLT

            divsd XMM0,QWORD PTR [RSP]
            subsd XMM0,QWORD PTR [RIP+.L_415978]
            add RSP,24
.L_40e973:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e978:

            pxor XMM5,XMM5
            ucomisd XMM5,XMM0
            jbe .L_40e9d0

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
            call atan2@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM2,XMM5
            divsd XMM1,QWORD PTR [RSP]
            jae .L_40ea0a

            movsd XMM0,QWORD PTR [RIP+.L_415950]
            jmp .L_40ea0a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e9d0:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            call atan2@PLT

            divsd XMM0,QWORD PTR [RSP]
            add RSP,24
.L_40e9e6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e9f0:

            movapd XMM1,XMM2
            call atan2@PLT

            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415978]
            divsd XMM1,QWORD PTR [RSP]
.L_40ea0a:

            subsd XMM0,XMM1
            add RSP,24
            ret 
.L_40ea13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ea20:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_415920]
            movsd QWORD PTR [RSP-8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415990]
            movsd XMM2,QWORD PTR [RSP-8]
            ucomisd XMM1,XMM2
            jbe .L_40ea70

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP-8]
            subsd XMM3,XMM2
            subsd XMM1,XMM3
.L_40ea58:

            movsd QWORD PTR [RSP-8],XMM1
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP-8]
            ja .L_40ea80

            ret 
.L_40ea70:

            movsd XMM1,QWORD PTR [RSP-8]
            jmp .L_40ea58
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ea80:

            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            ret 
.L_40ea89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ea90:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            movapd XMM5,XMM0
            mov RBX,RDI
            sub RSP,120
.L_40eaa4:

            movsd XMM0,QWORD PTR [RSI]
            movapd XMM6,XMM5
            movsd XMM7,QWORD PTR [RIP+.L_65fe78]
            movsd QWORD PTR [RDI+24],XMM0
            andpd XMM6,XMMWORD PTR [RIP+.L_415920]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSI+8]
            mov EAX,EDX
            or EAX,33408
            test EDX,EDX
            mov EDX,35723
            movsd QWORD PTR [RDI+32],XMM0
            cmove EAX,EDX
            movsd XMM0,QWORD PTR [RSI+48]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RDI+72],XMM0
            movsd XMM0,QWORD PTR [RSI+56]
            movsd QWORD PTR [RDI+80],XMM0
            movsd XMM0,QWORD PTR [RSI+16]
            mov DWORD PTR [RDI+504],EAX
            movsd QWORD PTR [RDI+40],XMM3
            pxor XMM3,XMM3
            movsd QWORD PTR [RDI+88],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415978]
            movsd QWORD PTR [RDI+8],XMM1
            cmpnltsd XMM0,XMM6
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+48],XMM4
            andpd XMM5,XMM0
            andnpd XMM0,XMM7
            orpd XMM5,XMM0
            ucomisd XMM5,XMM3
            movsd QWORD PTR [RDI],XMM5
            jp .L_40f0b0

            pxor XMM0,XMM0
            jne .L_40f0b0
.L_40eb5f:

            lea R13,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+16],XMM3
            mov RSI,R13
            mov RDI,R12
            call .L_40e7a0

            movsd XMM0,QWORD PTR [RSP+96]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+96],XMM0
            call .L_40e3d0

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM4,QWORD PTR [RIP+.L_415938]
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            maxsd XMM1,QWORD PTR [RIP+.L_65fe70]
            mulsd XMM0,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+88],XMM1
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_40f0ca
.L_40ebdd:

            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+136],XMM2
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+48]
            mulsd XMM0,XMM5
            movapd XMM6,XMM2
            movsd QWORD PTR [RBX+96],XMM1
            mulsd XMM6,XMM2
            mulsd XMM0,XMM0
            addsd XMM0,XMM6
            ucomisd XMM3,XMM0
            sqrtsd XMM6,XMM0
            ja .L_40f143
.L_40ec1a:

            mulsd XMM1,XMM5
            movsd QWORD PTR [RBX+104],XMM6
            ucomisd XMM5,XMM3
            movsd QWORD PTR [RBX+120],XMM5
            movsd QWORD PTR [RBX+160],XMM1
            jp .L_40ec3c

            je .L_40ef40
.L_40ec3c:

            mulsd XMM2,QWORD PTR [RSP+88]
.L_40ec42:

            movsd QWORD PTR [RBX+168],XMM2
            lea RSI,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBX+120]
            movsd QWORD PTR [RBX+128],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40e3d0

            movsd XMM2,QWORD PTR [RBX+104]
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM2,XMM2
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+112],XMM2
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_40f104

            movapd XMM5,XMM2
.L_40eca7:

            addsd XMM1,XMM4
            mov ESI,DWORD PTR [RBX+504]
            test SIL,1
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM5
            divsd XMM2,XMM0
            je .L_40edf3

            movapd XMM1,XMM2
            lea R11,QWORD PTR [RBX+240]
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            mov RDI,R11
            movsd QWORD PTR [RSP+40],XMM2
            mulsd XMM1,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_4159a8]
            addsd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4159b0]
            mulsd XMM0,XMM1
            movapd XMM1,XMM4
            subsd XMM1,XMM2
            addsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4159b8]
            addsd XMM0,XMM2
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+176],XMM0
            movapd XMM0,XMM2
            call .L_40e1f0

            movsd XMM5,QWORD PTR [RBX+128]
            mov RSI,R11
            movsd XMM6,QWORD PTR [RBX+120]
            mov EDX,6
            movapd XMM1,XMM5
            mov EDI,1
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            call .L_40e050

            lea RSI,QWORD PTR [RSP+64]
            lea RDI,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM8,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RBX+504]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM0,XMM6
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+200],XMM8
            movapd XMM8,XMM5
            mulsd XMM0,XMM7
            mulsd XMM8,XMM1
            mulsd XMM5,XMM7
            mulsd XMM6,XMM1
            movsd XMM3,QWORD PTR [RSP+56]
            addsd XMM0,XMM8
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            subsd XMM5,XMM6
            movsd QWORD PTR [RBX+144],XMM0
            movsd QWORD PTR [RBX+152],XMM5
.L_40edf3:

            test SIL,2
            jne .L_40f008
.L_40edfd:

            test SIL,4
            je .L_40ee9f

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_4159c0]
            addsd XMM4,XMM2
            lea R11,QWORD PTR [RBX+352]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM1,XMM2
            mov RDI,R11
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_4159c8]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_4159d0]
            mulsd XMM0,XMM1
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_4159b8]
            subsd XMM3,XMM2
            divsd XMM3,XMM4
            movsd QWORD PTR [RBX+184],XMM3
            call .L_40e2a0

            movsd XMM1,QWORD PTR [RBX+128]
            mov RSI,R11
            movsd XMM0,QWORD PTR [RBX+120]
            mov EDX,6
            mov EDI,1
            call .L_40e050

            mov ESI,DWORD PTR [RBX+504]
            movsd QWORD PTR [RBX+208],XMM0
            movsd XMM2,QWORD PTR [RSP+16]
.L_40ee9f:

            test SIL,8
            jne .L_40ef60
.L_40eea9:

            and ESI,16
            je .L_40ef08

            lea R10,QWORD PTR [RBX+456]
            movapd XMM0,XMM2
            mov RDI,RBP
            mov RSI,R10
            call .L_40e170

            movsd XMM0,QWORD PTR [RBX+24]
            mov EDX,6
            movsd XMM1,QWORD PTR [RBX+128]
            mov RSI,R10
            mulsd XMM0,XMM0
            xor EDI,EDI
            mulsd XMM0,QWORD PTR [RBX+104]
            mulsd XMM0,QWORD PTR [RBX+96]
            mulsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBX+224],XMM0
            movsd XMM0,QWORD PTR [RBX+120]
            call .L_40e050

            movsd QWORD PTR [RBX+232],XMM0
.L_40ef08:

            movsd XMM7,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX+64],XMM7
            movsd QWORD PTR [RBX+56],XMM7
            jne .L_40f181

            add RSP,120
.L_40ef30:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef40:

            ucomisd XMM2,XMM3
            jp .L_40ec3c

            jne .L_40ec3c

            movapd XMM2,XMM4
            jmp .L_40ec42
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef60:

            lea R10,QWORD PTR [RBX+408]
            movapd XMM0,XMM2
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM2
            mov RSI,R10
            call .L_40e100

            movsd XMM0,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RBP+80]
            movsd XMM1,QWORD PTR [RBX+96]
            lea RDX,QWORD PTR [RBP+120]
            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+72]
            nop
            nop
            nop
.L_40efa8:

            mulsd XMM0,XMM2
            add RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_40efa8

            mulsd XMM0,XMM1
            mov RSI,R10
            mov EDX,5
            movsd XMM1,QWORD PTR [RBX+128]
            mov EDI,1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RBX+192],XMM0
            movsd XMM0,QWORD PTR [RBX+120]
            call .L_40e050

            mov ESI,DWORD PTR [RBX+504]
            movsd QWORD PTR [RBX+216],XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_40eea9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f008:

            movapd XMM5,XMM2
            lea RDI,QWORD PTR [RBX+304]
            movapd XMM1,XMM2
            lea R10,QWORD PTR [RIP+.L_415340]
            mulsd XMM5,XMM2
            mov EDX,5
            xor ECX,ECX
            movsd XMM6,QWORD PTR [RIP+.L_415998]
            movsd XMM0,QWORD PTR [RIP+.L_4159a0]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f040:

            mov R9D,EDX
            sar R9D,1
            je .L_40f06e

            movsxd RAX,ECX
            lea R11D,DWORD PTR [R9-1]
            lea R8,QWORD PTR [R10+RAX*8]
            lea RAX,QWORD PTR [R8+8]
            lea R8,QWORD PTR [R8+R11*8+16]
.L_40f05c:

            mulsd XMM0,XMM5
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp R8,RAX
            jne .L_40f05c
.L_40f06e:

            mulsd XMM0,XMM1
            sub EDX,1
            add RDI,8
            lea ECX,DWORD PTR [RCX+R9*1+2]
            mulsd XMM1,XMM2
            divsd XMM0,XMM6
            movsd QWORD PTR [RDI-8],XMM0
            cmp EDX,-1
            je .L_40edfd

            movsxd RAX,ECX
            movsd XMM0,QWORD PTR [R10+RAX*8]
            mov EAX,EDX
            sar EAX,1
            lea EAX,DWORD PTR [RCX+RAX*1+1]
            cdqe 
            movsd XMM6,QWORD PTR [R10+RAX*8]
            jmp .L_40f040
          .byte 0x90
.L_40f0b0:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call .L_40ea20

            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_40eb5f
.L_40f0ca:

            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_40ebdd
.L_40f104:

            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            jmp .L_40eca7
.L_40f143:

            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RBX+96]
            movsd XMM2,QWORD PTR [RBX+48]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_40ec1a
.L_40f181:

            call __stack_chk_fail@PLT
.L_40f186:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f190:

            movapd XMM12,XMM0
            push R15
            push R14
            push R13
            mov R15,RSI
            push R12
            push RBP
            mulsd XMM12,XMM0
            push RBX
            movapd XMM14,XMM1
            movapd XMM8,XMM0
            mov R13,RDX
            sub RSP,120
.L_40f1b8:

            movapd XMM15,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_4159a8]
            mov R14,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+8],XMM6
            pxor XMM6,XMM6
            addsd XMM1,XMM12
            movsd XMM13,QWORD PTR [RIP+.L_4159b8]
            movsd XMM9,QWORD PTR [RIP+.L_415938]
            mov RBP,RCX
            mov QWORD PTR [RSP+24],RDI
            mov RDI,R14
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM11,XMM2
            mov RBX,R8
            mulsd XMM1,XMM12
            movapd XMM10,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov R12,R9
            addsd XMM1,QWORD PTR [RIP+.L_4159b0]
            mulsd XMM1,XMM12
            addsd XMM1,XMM6
            mulsd XMM1,XMM13
            addsd XMM1,XMM0
            movapd XMM0,XMM9
            subsd XMM0,XMM8
            movapd XMM5,XMM1
            divsd XMM5,XMM0
            movapd XMM0,XMM8
            call .L_40e1f0

            lea R11,QWORD PTR [RSP+48]
            mov RDI,R11
            movsd XMM0,QWORD PTR [RIP+.L_4159c0]
            mulsd XMM0,XMM12
            subsd XMM0,QWORD PTR [RIP+.L_4159c8]
            mulsd XMM0,XMM12
            subsd XMM0,QWORD PTR [RIP+.L_4159d0]
            mulsd XMM0,XMM12
            addsd XMM6,XMM0
            movapd XMM0,XMM8
            addsd XMM0,XMM9
            mulsd XMM13,XMM6
            subsd XMM13,XMM8
            divsd XMM13,XMM0
            movapd XMM0,XMM8
            call .L_40e2a0

            movapd XMM8,XMM5
            test R15,R15
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM8,XMM13
            addsd XMM13,XMM9
            addsd XMM9,XMM5
            je .L_40f4e0

            movapd XMM1,XMM2
            movapd XMM0,XMM15
            mov RSI,R14
            mov EDX,6
            mov EDI,1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call .L_40e050

            movapd XMM1,XMM10
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM11
            mov EDX,6
            mov EDI,1
            call .L_40e050

            movsd XMM6,QWORD PTR [RSP+8]
            mov EDX,6
            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R11
            subsd XMM6,XMM0
            movapd XMM0,XMM14
            movapd XMM1,XMM2
            mov EDI,1
            addsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM0,XMM9
            movsd QWORD PTR [R15],XMM0
            movapd XMM0,XMM15
            call .L_40e050

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM1,XMM10
            movapd XMM0,XMM11
            mov EDX,6
            mov EDI,1
            call .L_40e050

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+32]
            subsd XMM3,XMM0
            mulsd XMM14,XMM8
            mulsd XMM9,XMM6
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM13,XMM3
            subsd XMM9,XMM13
            addsd XMM14,XMM9
.L_40f3b7:

            test RBP,RBP
            je .L_40f3c2

            movsd QWORD PTR [RBP],XMM8
.L_40f3c2:

            movapd XMM3,XMM15
            movapd XMM0,XMM2
            movapd XMM1,XMM2
            test RBX,RBX
            mulsd XMM3,XMM10
            mulsd XMM0,XMM11
            mulsd XMM1,XMM10
            mulsd XMM3,XMM7
            mulsd XMM0,XMM4
            subsd XMM3,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM14
            subsd XMM3,XMM0
            movsd QWORD PTR [R13],XMM3
            jne .L_40f430

            test R12,R12
            jne .L_40f430
.L_40f407:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40f574

            add RSP,120
.L_40f41f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f430:

            movsd XMM0,QWORD PTR [RSP+176]
            mov RAX,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+176]
            test RBX,RBX
            subsd XMM0,QWORD PTR [RSP+184]
            movapd XMM3,XMM15
            addsd XMM12,QWORD PTR [RSP+184]
            mulsd XMM3,XMM11
            mulsd XMM0,QWORD PTR [RAX]
            addsd XMM3,XMM1
            mulsd XMM12,XMM0
            movapd XMM0,XMM7
            addsd XMM0,XMM4
            divsd XMM12,XMM0
            je .L_40f4b1

            movapd XMM0,XMM15
            test R12,R12
            mulsd XMM2,XMM14
            mulsd XMM0,XMM12
            subsd XMM0,XMM2
            mulsd XMM0,XMM11
            divsd XMM0,XMM4
            addsd XMM0,XMM3
            movsd QWORD PTR [RBX],XMM0
            je .L_40f407
.L_40f4b1:

            mulsd XMM12,XMM11
            mulsd XMM14,XMM10
            subsd XMM12,XMM14
            movapd XMM5,XMM12
            mulsd XMM5,XMM15
            divsd XMM5,XMM7
            subsd XMM3,XMM5
            movsd QWORD PTR [R12],XMM3
            jmp .L_40f407
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f4e0:

            mov EAX,8
.L_40f4e5:

            movsd XMM1,QWORD PTR [R11+RAX*1]
            movsd XMM0,QWORD PTR [R14+RAX*1]
            mulsd XMM1,XMM13
            mulsd XMM0,XMM9
            subsd XMM0,XMM1
            movsd QWORD PTR [R11+RAX*1],XMM0
            add RAX,8
            cmp RAX,56
            jne .L_40f4e5

            movapd XMM1,XMM2
            movapd XMM0,XMM15
            mov EDX,6
            mov RSI,R11
            mov EDI,1
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM14,XMM8
            movsd QWORD PTR [RSP+8],XMM2
            call .L_40e050

            movapd XMM9,XMM0
            mov EDX,6
            movapd XMM1,XMM10
            mov EDI,1
            movapd XMM0,XMM11
            call .L_40e050

            subsd XMM9,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM14,XMM9
            jmp .L_40f3b7
.L_40f574:

            call __stack_chk_fail@PLT
.L_40f579:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f580:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,600
.L_40f594:

            mov RAX,QWORD PTR [RSP+680]
            mov QWORD PTR [RSP+120],RCX
            movsd QWORD PTR [RSP+8],XMM0
            mov RCX,QWORD PTR [RSP+656]
            mov QWORD PTR [RSP+112],RDX
            movsd QWORD PTR [RSP+32],XMM2
            mov RDX,QWORD PTR [RSP+664]
            movapd XMM0,XMM1
            mov QWORD PTR [RSP+80],RAX
            movapd XMM1,XMM3
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+584],RAX
            xor EAX,EAX
            cmp RSI,1
            mov RDI,QWORD PTR [RSP+672]
            mov QWORD PTR [RSP+144],RSI
            sbb EBX,EBX
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+128],R9
            not EBX
            mov QWORD PTR [RSP+152],RCX
            mov QWORD PTR [RSP+160],RDX
            and EBX,1025
            mov QWORD PTR [RSP+168],RDI
            mov QWORD PTR [RSP+368],0
            mov EAX,EBX
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+424],0
            or EAX,4101
            test RCX,RCX
            mov QWORD PTR [RSP+432],0
            cmovne EBX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP+456],0
            mov QWORD PTR [RSP+464],0
            jne .L_410048

            test RDI,RDI
            jne .L_410048
.L_40f68c:

            mov EAX,EBX
            lea RDI,QWORD PTR [RSP+384]
            or EAX,16400
            cmp QWORD PTR [RSP+80],0
            cmovne EBX,EAX
            call .L_40e440

            pxor XMM8,XMM8
            ucomisd XMM0,XMM8
            jb .L_4100c8

            movsd XMM5,QWORD PTR [RIP+.L_415938]
            mov DWORD PTR [RSP+88],1
            movsd QWORD PTR [RSP],XMM5
            movapd XMM4,XMM5
.L_40f6d2:

            ucomisd XMM0,XMM8
            jp .L_410378

            pxor XMM1,XMM1
            jne .L_410378
.L_40f6e7:

            mulsd XMM1,XMM4
            mulsd XMM4,QWORD PTR [RSP+384]
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+48],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415960]
            subsd XMM1,XMM6
            subsd XMM1,XMM4
            ucomisd XMM1,XMM8
            jp .L_4103c0

            pxor XMM0,XMM0
            jne .L_4103c0
.L_40f723:

            movsd XMM7,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+448]
            lea RDI,QWORD PTR [RSP+440]
            movsd XMM5,QWORD PTR [RIP+.L_65fe80]
            ucomisd XMM7,QWORD PTR [RIP+.L_415978]
            mulsd XMM5,XMM7
            movsd QWORD PTR [RSP+384],XMM0
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+64],XMM5
            jbe .L_410020

            call .L_40e7a0

            movq XMM6,QWORD PTR [RIP+.L_415910]
            movsd XMM0,QWORD PTR [RSP+448]
            movaps XMMWORD PTR [RSP+16],XMM6
            xorpd XMM0,XMM6
            movsd XMM8,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+448],XMM0
.L_40f798:

            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM0,QWORD PTR [RIP+.L_415978]
            jbe .L_40f7be

            movsd XMM4,QWORD PTR [RIP+.L_65fe78]
            movsd QWORD PTR [RSP+8],XMM4
.L_40f7be:

            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM8
            jp .L_410398

            pxor XMM1,XMM1
            jne .L_410398
.L_40f7d9:

            movsd XMM0,QWORD PTR [RSP+32]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM0,QWORD PTR [RIP+.L_415978]
            jbe .L_40f7ff

            movsd XMM7,QWORD PTR [RIP+.L_65fe78]
            movsd QWORD PTR [RSP+32],XMM7
.L_40f7ff:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,XMM8
            jp .L_410110

            mov R15D,1
            pxor XMM2,XMM2
            jne .L_410110
.L_40f820:

            ucomisd XMM8,XMM1
            ja .L_4100f0

            movapd XMM7,XMMWORD PTR [RSP+16]
            mov EAX,R15D
            neg EAX
            mov DWORD PTR [RSP+212],4294967295
            xorpd XMM1,XMM7
            mov DWORD PTR [RSP+208],EAX
            xorpd XMM2,XMM7
.L_40f850:

            lea R13,QWORD PTR [RSP+400]
            lea R12,QWORD PTR [RSP+392]
            movsd QWORD PTR [RSP+56],XMM8
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+40],XMM2
            call .L_40e7a0

            movsd XMM0,QWORD PTR [RSP+392]
            mov RSI,R13
            mov RDI,R12
            lea R13,QWORD PTR [RSP+416]
            lea R12,QWORD PTR [RSP+408]
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+392],XMM0
            call .L_40e3d0

            movsd XMM6,QWORD PTR [RIP+.L_65fe70]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+400]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+40]
            maxsd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+400],XMM0
            movapd XMM0,XMM2
            call .L_40e7a0

            movsd XMM0,QWORD PTR [RSP+408]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+408],XMM0
            call .L_40e3d0

            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+416]
            xorpd XMM5,XMM0
            maxsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+400]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM5,XMM4
            movapd XMM3,XMM5
            movsd XMM8,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+416],XMM2
            jbe .L_40ffe8

            ucomisd XMM4,XMM2
            jp .L_40f98a

            jne .L_40f98a

            movsd XMM2,QWORD PTR [RSP+408]
            cmpnltsd XMM2,XMM8
            andpd XMM3,XMM2
            andnpd XMM2,XMM0
            orpd XMM3,XMM2
            movsd QWORD PTR [RSP+408],XMM3
.L_40f98a:

            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+104],XMM5
            ja .L_411aa5
.L_40f9b1:

            movsd XMM0,QWORD PTR [RSP+408]
            mulsd XMM0,XMM0
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+136],XMM6
            ja .L_411a81
.L_40f9df:

            mov EAX,EBX
            movsd XMM4,QWORD PTR [RSP+440]
            and EAX,8192
            movsd XMM2,QWORD PTR [RSP+392]
            ucomisd XMM1,QWORD PTR [RIP+.L_4159e8]
            mov DWORD PTR [RSP+40],EAX
            jp .L_40fd68

            jne .L_40fd68
.L_40fa10:

            movsd XMM3,QWORD PTR [RSP+448]
            movsd XMM6,QWORD PTR [RSP+416]
            movsd QWORD PTR [RSP+456],XMM3
            mulsd XMM3,QWORD PTR [RSP+400]
            movsd XMM5,QWORD PTR [RSP+408]
            movapd XMM7,XMM6
            movsd QWORD PTR [RSP+464],XMM4
            movapd XMM4,XMM6
            mulsd XMM7,XMM2
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+176],XMM5
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+96],XMM6
            movapd XMM0,XMM3
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+184],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM8
            addsd XMM1,XMM4
            subsd XMM0,XMM7
            maxsd XMM0,XMM8
            call atan2@PLT

            mov R10D,DWORD PTR [RSP+40]
            movapd XMM9,XMM0
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+56]
            test R10D,R10D
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM3,QWORD PTR [RSP+184]
            jne .L_410058

            xor R9D,R9D
            xor R8D,R8D
.L_40fadb:

            movsd QWORD PTR [RSP+56],XMM8
            lea RDX,QWORD PTR [RSP+432]
            lea RSI,QWORD PTR [RSP+424]
            sub RSP,8
.L_40faf6:

            movapd XMM1,XMM9
            lea R12,QWORD PTR [RSP+536]
            lea RDI,QWORD PTR [RBP+32]
            xor ECX,ECX
            push R12
            push QWORD PTR [RSP+432]
            push QWORD PTR [RSP+424]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RBP+40]
            movsd QWORD PTR [RSP+64],XMM9
            call .L_40f190

            add RSP,32
.L_40fb40:

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+56]
            ucomisd XMM7,XMM9
            ja .L_40fb6e

            movsd XMM0,QWORD PTR [RSP+432]
            ucomisd XMM0,XMM8
            jb .L_4109e8
.L_40fb6e:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4159f0]
            ucomisd XMM0,XMM9
            ja .L_4103e0

            movsd XMM1,QWORD PTR [RSP+432]
            movsd XMM2,QWORD PTR [RSP+424]
.L_40fb99:

            movsd XMM0,QWORD PTR [RBP+48]
            mov R13D,EBX
            mov ECX,1
            movsd XMM5,QWORD PTR [RSP]
            and R13D,16384
            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+32],XMM8
            mulsd XMM0,XMM2
            movapd XMM2,XMM9
            pxor XMM10,XMM10
            movsd QWORD PTR [RSP+8],XMM5
            divsd XMM2,QWORD PTR [RIP+.L_65fe80]
            movsd QWORD PTR [RSP+432],XMM1
            movsd QWORD PTR [RSP+424],XMM0
            pxor XMM9,XMM9
            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM3,QWORD PTR [RSP+456]
            movsd XMM11,QWORD PTR [RIP+.L_4159e0]
.L_40fc0b:

            mov R14D,EBX
            pxor XMM6,XMM6
            and R14D,1024
            je .L_40fc24

            addsd XMM6,QWORD PTR [RSP+424]
.L_40fc24:

            and EBX,4096
            pxor XMM7,XMM7
            je .L_40fc39

            addsd XMM7,QWORD PTR [RSP+432]
.L_40fc39:

            mov R12D,DWORD PTR [RSP+88]
            pxor XMM5,XMM5
            imul R12D,R15D
            test R13D,R13D
            jne .L_410180
.L_40fc4f:

            cmp R15D,-1
            je .L_410070
.L_40fc59:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RSP+112]
            cmp QWORD PTR [RSP+72],0
            pxor XMM1,XMM1
            cvtsi2sd XMM0,R12D
            cvtsi2sd XMM1,DWORD PTR [RSP+208]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+456],XMM3
            mulsd XMM4,XMM0
            movsd QWORD PTR [RAX],XMM4
            mov RAX,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RAX],XMM3
            je .L_40fcb2

            mulsd XMM0,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RAX],XMM0
.L_40fcb2:

            mov RAX,QWORD PTR [RSP+128]
            test RAX,RAX
            je .L_40fcc9

            mulsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX],XMM1
.L_40fcc9:

            test R14D,R14D
            je .L_40fcda

            mov RAX,QWORD PTR [RSP+144]
            movsd QWORD PTR [RAX],XMM6
.L_40fcda:

            test EBX,EBX
            je .L_40fcea

            mov RAX,QWORD PTR [RSP+152]
            movsd QWORD PTR [RAX],XMM7
.L_40fcea:

            mov EAX,DWORD PTR [RSP+40]
            test EAX,EAX
            je .L_40fd26

            mov RAX,QWORD PTR [RSP+160]
            test RAX,RAX
            je .L_40fd0c

            movsd XMM0,QWORD PTR [RSP+368]
            movsd QWORD PTR [RAX],XMM0
.L_40fd0c:

            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_40fd26

            movsd XMM0,QWORD PTR [RSP+376]
            movsd QWORD PTR [RAX],XMM0
.L_40fd26:

            test R13D,R13D
            je .L_40fd34

            mov RAX,QWORD PTR [RSP+80]
            movsd QWORD PTR [RAX],XMM5
.L_40fd34:

            mov RAX,QWORD PTR [RSP+584]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_4125bb

            add RSP,600
.L_40fd56:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fd68:

            ucomisd XMM4,XMM8
            jp .L_40fd75

            je .L_40fa10
.L_40fd75:

            ucomisd XMM2,XMM8
            movsd QWORD PTR [RSP+8],XMM8
            jp .L_40fdb9

            jne .L_40fdb9
.L_40fd85:

            movsd XMM0,QWORD PTR [RBP+8]
            ucomisd XMM8,XMM0
            jae .L_410710

            mulsd XMM0,QWORD PTR [RIP+.L_415960]
            movsd XMM1,QWORD PTR [RSP+384]
            ucomisd XMM1,XMM0
            jae .L_410710

            movsd XMM4,QWORD PTR [RSP+440]
.L_40fdb9:

            movsd XMM12,QWORD PTR [RSP+416]
            mov QWORD PTR [RSP+472],0
            movsd XMM5,QWORD PTR [RSP+408]
            mov QWORD PTR [RSP+488],0
            movsd XMM9,QWORD PTR [RSP+400]
            movapd XMM10,XMM12
            movapd XMM11,XMM5
            mov QWORD PTR [RSP+496],0
            mulsd XMM10,XMM9
            movapd XMM7,XMM5
            mulsd XMM11,XMM2
            movapd XMM14,XMM12
            mulsd XMM7,XMM9
            mov QWORD PTR [RSP+504],0
            movsd XMM3,QWORD PTR [RSP+448]
            movapd XMM0,XMM10
            mulsd XMM14,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            addsd XMM0,XMM11
            movapd XMM6,XMM7
            movapd XMM3,XMM7
            subsd XMM6,XMM14
            addsd XMM3,XMM14
            ucomisd XMM0,XMM8
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+96],XMM3
            jb .L_4103f8

            movsd XMM0,QWORD PTR [RIP+.L_415980]
            ucomisd XMM0,XMM6
            jbe .L_4103f8

            movsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM1,XMM12
            ucomisd XMM0,XMM1
            jbe .L_4103f8

            movapd XMM0,XMM5
            movapd XMM1,XMM12
            addsd XMM0,XMM2
            addsd XMM1,XMM9
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RBP+32]
            addsd XMM0,QWORD PTR [RSP]
            ucomisd XMM8,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            ja .L_4124b7
.L_40fed7:

            movsd XMM0,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+200],XMM7
            mov R13D,1
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+256],XMM2
            movsd XMM7,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM4
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            divsd XMM7,XMM0
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            movapd XMM0,XMM7
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+360]
            movsd XMM3,QWORD PTR [RSP+352]
            movsd XMM12,QWORD PTR [RSP+176]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+256]
            jmp .L_41040c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ffe8:

            movsd XMM2,QWORD PTR [RSP+408]
            andpd XMM2,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM5,XMM2
            jp .L_40f98a

            jne .L_40f98a

            movsd QWORD PTR [RSP+416],XMM4
            jmp .L_40f98a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410020:

            movsd XMM0,QWORD PTR [RSP+48]
            call .L_40e7a0

            movq XMM4,QWORD PTR [RIP+.L_415910]
            movsd XMM8,QWORD PTR [RSP+40]
            movaps XMMWORD PTR [RSP+16],XMM4
            jmp .L_40f798
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410048:

            or EBX,8197
            jmp .L_40f68c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410058:

            lea R9,QWORD PTR [RSP+376]
            lea R8,QWORD PTR [RSP+368]
            jmp .L_40fadb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410070:

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            je .L_41009c

            movsd XMM0,QWORD PTR [RSP+368]
            movsd XMM1,QWORD PTR [RSP+376]
            movsd QWORD PTR [RSP+376],XMM0
            movsd QWORD PTR [RSP+368],XMM1
.L_41009c:

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM3,XMM0
            jmp .L_40fc59
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4100c8:

            movsd XMM6,QWORD PTR [RIP+.L_415938]
            mov DWORD PTR [RSP+88],4294967295
            movsd XMM4,QWORD PTR [RIP+.L_415940]
            movsd QWORD PTR [RSP],XMM6
            jmp .L_40f6d2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4100f0:

            mov DWORD PTR [RSP+208],R15D
            mov DWORD PTR [RSP+212],1
            jmp .L_40f850
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410110:

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+8],XMM1
            call .L_40ea20

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM8,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movapd XMM3,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            andpd XMM3,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM3,XMM0
            jbe .L_41282a

            movapd XMM0,XMM1
            neg DWORD PTR [RSP+88]
            mov R15D,4294967295
            movapd XMM1,XMM2
            movapd XMM2,XMM0
            jmp .L_40f820
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410180:

            movsd XMM5,QWORD PTR [RSP+400]
            mulsd XMM3,XMM3
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RSP+392]
            mulsd XMM4,XMM4
            addsd XMM3,XMM4
            ucomisd XMM8,XMM3
            sqrtsd XMM1,XMM3
            ja .L_4120ce
.L_4101b1:

            ucomisd XMM1,XMM8
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_4101d8

            ucomisd XMM5,XMM8
            setp AL
            cmove EDX,EAX
            test DL,DL
            jne .L_410548
.L_4101d8:

            movsd QWORD PTR [RSP+16],XMM8
.L_4101df:

            test ECX,ECX
            jne .L_410290

            ucomisd XMM11,QWORD PTR [RSP]
            jbe .L_41024f

            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+88],XMM8
            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM6
            call sincos@PLT

            movsd XMM11,QWORD PTR [RSP+360]
            movsd XMM10,QWORD PTR [RSP+352]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+88]
.L_41024f:

            ucomisd XMM10,QWORD PTR [RIP+.L_415a40]
            jbe .L_410290

            movsd XMM3,QWORD PTR [RSP+408]
            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM1,XMM3
            movsd XMM4,QWORD PTR [RIP+.L_415a38]
            subsd XMM1,XMM0
            ucomisd XMM4,XMM1
            ja .L_411645

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410290:

            movsd XMM13,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+456]
            movapd XMM0,XMM13
            movsd XMM3,QWORD PTR [RSP+464]
            movapd XMM1,XMM5
            mulsd XMM0,XMM4
            mulsd XMM5,XMM4
            mulsd XMM1,XMM3
            mulsd XMM3,XMM13
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            addsd XMM1,XMM3
            ucomisd XMM0,XMM8
            jp .L_410300

            jne .L_410300

            ucomisd XMM8,XMM1
            jbe .L_410300

            mulsd XMM4,QWORD PTR [RIP+.L_65fe70]
            movsd XMM1,QWORD PTR [RIP+.L_415940]
            movapd XMM0,XMM4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410300:

            movsd QWORD PTR [RSP+64],XMM8
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call atan2@PLT

            movsd XMM8,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP]
.L_410335:

            mov EAX,DWORD PTR [RSP+212]
            pxor XMM5,XMM5
            mulsd XMM0,QWORD PTR [RBP+56]
            movsd XMM3,QWORD PTR [RSP+456]
            imul EAX,R12D
            movsd XMM4,QWORD PTR [RSP+464]
            cvtsi2sd XMM5,EAX
            addsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            addsd XMM5,XMM8
            jmp .L_40fc4f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410378:

            movsd QWORD PTR [RSP+16],XMM8
            call .L_40ea20

            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            jmp .L_40f6e7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410398:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM8
            call .L_40ea20

            movsd XMM8,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            jmp .L_40f7d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4103c0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM8
            call .L_40ea20

            movsd XMM8,QWORD PTR [RSP+16]
            jmp .L_40f723
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4103e0:

            pxor XMM2,XMM2
            pxor XMM1,XMM1
            pxor XMM9,XMM9
            jmp .L_40fb99
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4103f8:

            movsd XMM3,QWORD PTR [RSP+32]
            xor R13D,R13D
            movapd XMM6,XMM4
            movsd QWORD PTR [RSP+48],XMM8
.L_41040c:

            movapd XMM0,XMM12
            movapd XMM13,XMM6
            movapd XMM1,XMM14
            mulsd XMM0,XMM6
            mulsd XMM13,XMM6
            ucomisd XMM3,XMM8
            movsd XMM15,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+472],XMM0
            mulsd XMM1,XMM13
            jb .L_410810

            addsd XMM15,XMM3
            divsd XMM1,XMM15
            addsd XMM1,QWORD PTR [RSP+56]
.L_410453:

            movsd QWORD PTR [RSP+488],XMM1
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM15,XMM0
            ja .L_41216a
.L_410478:

            movapd XMM1,XMM10
            test R13D,R13D
            mulsd XMM1,XMM3
            addsd XMM1,XMM11
            je .L_410830

            movsd XMM0,QWORD PTR [RBP+64]
            ucomisd XMM0,XMM15
            jbe .L_410830

            mulsd XMM9,XMM6
            ucomisd XMM3,XMM8
            movsd QWORD PTR [RSP+496],XMM9
            jb .L_4116da

            addsd XMM3,QWORD PTR [RSP]
            divsd XMM13,XMM3
.L_4104c3:

            lea RAX,QWORD PTR [RSP+496]
            lea RSI,QWORD PTR [RSP+504]
            movsd QWORD PTR [RSP+176],XMM8
            movsd QWORD PTR [RSP+96],XMM1
            mov RDI,RAX
            movsd QWORD PTR [RSP+32],XMM15
            mulsd XMM7,XMM13
            movsd XMM12,QWORD PTR [RSP+56]
            subsd XMM12,XMM7
            movsd QWORD PTR [RSP+504],XMM12
            call .L_40e3d0

            movsd XMM15,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+96]
            movapd XMM0,XMM15
            call atan2@PLT

            movsd XMM1,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM8,QWORD PTR [RSP+176]
            jmp .L_410869
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410548:

            movsd XMM0,QWORD PTR [RSP+392]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+496],XMM0
            movsd XMM0,QWORD PTR [RSP+456]
            mulsd XMM4,XMM1
            mulsd XMM0,QWORD PTR [RSP+400]
            mulsd XMM4,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+504],XMM0
            movsd XMM0,QWORD PTR [RSP+408]
            movsd QWORD PTR [RSP+512],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+416]
            movsd QWORD PTR [RSP+520],XMM0
            movsd XMM0,QWORD PTR [RSP]
            addsd XMM0,XMM4
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_4123fb
.L_4105c4:

            addsd XMM3,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+504]
            lea RDI,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+184],XMM8
            mov DWORD PTR [RSP+136],ECX
            movsd QWORD PTR [RSP+176],XMM2
            movsd QWORD PTR [RSP+104],XMM10
            movsd QWORD PTR [RSP+96],XMM11
            movsd QWORD PTR [RSP+88],XMM9
            addsd XMM3,XMM3
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM6
            addsd XMM3,XMM4
            divsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RBP]
            mulsd XMM3,XMM3
            movsd QWORD PTR [RSP+48],XMM4
            mulsd XMM1,XMM3
            mulsd XMM5,XMM1
            mulsd XMM5,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+16],XMM5
            call .L_40e3d0

            lea RSI,QWORD PTR [RSP+520]
            lea RDI,QWORD PTR [RSP+512]
            call .L_40e3d0

            lea R10,QWORD PTR [RSP+528]
            movsd XMM0,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov RSI,R10
            call .L_40e170

            movsd XMM1,QWORD PTR [RSP+504]
            mov EDX,6
            movsd XMM0,QWORD PTR [RSP+496]
            mov RSI,R10
            xor EDI,EDI
            call .L_40e050

            movsd XMM1,QWORD PTR [RSP+520]
            mov EDX,6
            movapd XMM12,XMM0
            xor EDI,EDI
            movsd XMM0,QWORD PTR [RSP+512]
            call .L_40e050

            subsd XMM0,XMM12
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+64]
            mov ECX,DWORD PTR [RSP+136]
            movsd XMM9,QWORD PTR [RSP+88]
            movsd XMM11,QWORD PTR [RSP+96]
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+176]
            movsd XMM8,QWORD PTR [RSP+184]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_4101df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410710:

            movsd XMM1,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RSP+360]
            movsd XMM5,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+352]
            movsd XMM0,QWORD PTR [RBP]
            mov QWORD PTR [RSP+456],0
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM8
            divsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RSP+424],XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBP+48]
            mov R9D,DWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+352]
            mulsd XMM0,QWORD PTR [RSP+360]
            test R9D,R9D
            movsd XMM9,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+432],XMM0
            je .L_4107c7

            movsd QWORD PTR [RSP+376],XMM2
            movsd QWORD PTR [RSP+368],XMM2
.L_4107c7:

            movsd XMM6,QWORD PTR [RSP]
            mov R13D,EBX
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+48]
            and R13D,16384
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+32],XMM6
            divsd XMM2,XMM1
            movapd XMM4,XMM6
            movsd QWORD PTR [RSP+8],XMM8
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4159e0]
            jmp .L_40fc0b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410810:

            subsd XMM15,XMM3
            divsd XMM1,XMM15
            movsd XMM15,QWORD PTR [RSP+96]
            subsd XMM15,XMM1
            movapd XMM1,XMM15
            jmp .L_410453
.L_410830:

            movsd XMM0,QWORD PTR [RBP+40]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM0,QWORD PTR [RIP+.L_4159f8]
            ja .L_410852

            ucomisd XMM1,XMM8
            jb .L_411798
.L_410852:

            movsd XMM4,QWORD PTR [RIP+.L_415940]
            movsd XMM1,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+96],XMM4
.L_410869:

            ucomisd XMM8,XMM1
            jb .L_410a20

            movsd XMM4,QWORD PTR [RSP]
            mov QWORD PTR [RSP+488],0
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+472],XMM4
.L_410892:

            test R13D,R13D
            movsd QWORD PTR [RSP+464],XMM4
            movsd QWORD PTR [RSP+456],XMM3
            jne .L_4108b0

            movsd QWORD PTR [RSP+48],XMM8
.L_4108b0:

            movsd XMM7,QWORD PTR [RSP+96]
            ucomisd XMM7,XMM8
            jb .L_410a60

            movsd QWORD PTR [RSP+104],XMM3
            movapd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+360]
            movsd XMM1,QWORD PTR [RBP+48]
            lea RSI,QWORD PTR [RSP+352]
            divsd XMM7,XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+136],XMM8
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+504]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+424],XMM0
            movapd XMM0,XMM7
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            mov R8D,DWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RSP+352]
            test R8D,R8D
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM0,XMM3
            movsd XMM8,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+104]
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+360]
            movsd QWORD PTR [RSP+432],XMM0
            je .L_41099d

            movsd QWORD PTR [RSP+376],XMM2
            movsd QWORD PTR [RSP+368],XMM2
.L_41099d:

            movsd XMM0,QWORD PTR [RSP+48]
            mov R13D,EBX
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+96]
            and R13D,16384
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd XMM9,QWORD PTR [RSP+64]
            divsd XMM2,QWORD PTR [RIP+.L_65fe80]
            divsd XMM9,XMM0
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4159e0]
            jmp .L_40fc0b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4109e8:

            movsd XMM2,QWORD PTR [RSP+392]
            ucomisd XMM2,XMM8
            jp .L_4109fe

            je .L_4115f0
.L_4109fe:

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+440]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_40fdb9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410a20:

            lea RAX,QWORD PTR [RSP+488]
            lea RDI,QWORD PTR [RSP+472]
            movsd QWORD PTR [RSP+32],XMM8
            mov RSI,RAX
            call .L_40e3d0

            movsd XMM4,QWORD PTR [RSP+472]
            movsd XMM3,QWORD PTR [RSP+488]
            movsd XMM8,QWORD PTR [RSP+32]
            jmp .L_410892
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410a60:

            mov EDI,DWORD PTR [RIP+.L_65fe90]
            movsd XMM7,QWORD PTR [RIP+.L_65fe70]
            lea RAX,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+176],XMM7
            test EDI,EDI
            mov QWORD PTR [RSP+336],RAX
            je .L_411ea4

            lea RAX,QWORD PTR [RBP+80]
            movsd QWORD PTR [RSP+32],XMM4
            xor ECX,ECX
            movsd XMM2,QWORD PTR [RSP+176]
            lea R12,QWORD PTR [RSP+528]
            mov QWORD PTR [RSP+296],RAX
            lea RAX,QWORD PTR [RSP+504]
            lea R14,QWORD PTR [RBP+120]
            movsd XMM4,QWORD PTR [RIP+.L_415940]
            mov DWORD PTR [RSP+344],R15D
            mov QWORD PTR [RSP+320],RAX
            lea RAX,QWORD PTR [RSP+496]
            movsd QWORD PTR [RSP+192],XMM2
            movsd XMM7,QWORD PTR [RSP]
            mov DWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+312],RAX
            lea RAX,QWORD PTR [RSP+512]
            movsd QWORD PTR [RSP+200],XMM4
            movsd QWORD PTR [RSP+216],XMM7
            xor R13D,R13D
            mov R15D,ECX
            mov QWORD PTR [RSP+328],RAX
            lea RAX,QWORD PTR [RSP+488]
            mov DWORD PTR [RSP+348],EBX
            mov QWORD PTR [RSP+304],RAX
            nop
            nop
            nop
            nop
.L_410b40:

            movsd XMM4,QWORD PTR [RSP+440]
            mov EDX,0
            mov EBX,DWORD PTR [RIP+.L_65fe94]
            movsd XMM5,QWORD PTR [RSP+448]
            mov QWORD PTR [RSP+488],0
            movsd QWORD PTR [RSP+232],XMM4
            mov QWORD PTR [RSP+496],0
            mov QWORD PTR [RSP+504],0
            movsd XMM4,QWORD PTR [RSP+392]
            mov QWORD PTR [RSP+512],0
            movsd QWORD PTR [RSP+224],XMM5
            mov QWORD PTR [RSP+520],0
            ucomisd XMM4,XMM8
            movsd XMM6,QWORD PTR [RSP+416]
            movsd XMM5,QWORD PTR [RSP+400]
            movsd QWORD PTR [RSP+56],XMM6
            setnp AL
            movsd XMM1,QWORD PTR [RSP+408]
            cmovne EAX,EDX
            movsd QWORD PTR [RSP+48],XMM5
            test AL,AL
            je .L_410c07

            ucomisd XMM3,XMM8
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_410c07

            movsd XMM3,QWORD PTR [RIP+.L_65fe70]
            xorpd XMM3,XMMWORD PTR [RSP+16]
.L_410c07:

            movapd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+48]
            mulsd XMM0,XMM3
            mulsd XMM6,XMM5
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+64],XMM6
            movapd XMM2,XMM5
            mulsd XMM2,XMM5
            addsd XMM0,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP+240],XMM7
            ja .L_411e02
.L_410c4d:

            movsd XMM5,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+312]
            movsd XMM2,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+304]
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+256],XMM8
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+184],XMM1
            movsd QWORD PTR [RSP+488],XMM4
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+248],XMM5
            movsd QWORD PTR [RSP+496],XMM2
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+264],XMM3
            call .L_40e3d0

            movsd XMM4,QWORD PTR [RSP+96]
            movapd XMM6,XMMWORD PTR [RSP+16]
            xorpd XMM6,XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+184]
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+256]
            ucomisd XMM6,QWORD PTR [RSP+48]
            jp .L_410d03

            movsd XMM3,QWORD PTR [RSP+264]
            je .L_4112f0
.L_410d03:

            movsd XMM3,QWORD PTR [RSP+64]
            divsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM3
.L_410d15:

            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM3,XMM2
            ucomisd XMM0,XMM7
            mulsd XMM3,XMM2
            jbe .L_411358

            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM5,XMM6
            subsd XMM6,XMM7
            addsd XMM5,XMM7
            movapd XMM0,XMM6
            mulsd XMM0,XMM5
.L_410d47:

            addsd XMM0,XMM3
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_411e4a
.L_410d5a:

            divsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM3
.L_410d66:

            movsd XMM7,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+328]
            movsd XMM3,QWORD PTR [RSP+64]
            mulsd XMM7,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+320]
            movsd QWORD PTR [RSP+272],XMM4
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+280],XMM2
            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+504],XMM1
            movsd QWORD PTR [RSP+264],XMM3
            movsd QWORD PTR [RSP+184],XMM7
            movsd QWORD PTR [RSP+512],XMM7
            call .L_40e3d0

            movsd XMM0,QWORD PTR [RSP+496]
            movsd XMM6,QWORD PTR [RSP+488]
            movsd XMM7,QWORD PTR [RSP+504]
            movapd XMM9,XMM0
            movsd XMM5,QWORD PTR [RSP+512]
            mulsd XMM0,XMM7
            movapd XMM1,XMM6
            mulsd XMM9,XMM5
            mulsd XMM5,XMM6
            mulsd XMM1,XMM7
            movsd XMM8,QWORD PTR [RSP+96]
            subsd XMM0,XMM5
            movsd QWORD PTR [RSP+256],XMM8
            addsd XMM1,XMM9
            maxsd XMM0,XMM8
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+280]
            movsd XMM5,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+264]
            movsd XMM7,QWORD PTR [RSP+184]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+96],XMM0
            movapd XMM0,XMM2
            mulsd XMM1,XMM7
            mulsd XMM0,XMM3
            mulsd XMM5,XMM3
            mulsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+256]
            subsd XMM0,XMM1
            movsd XMM7,QWORD PTR [RSP+224]
            movsd XMM6,QWORD PTR [RSP+232]
            addsd XMM2,XMM5
            movapd XMM3,XMM7
            movapd XMM1,XMM6
            maxsd XMM0,XMM8
            mulsd XMM3,XMM2
            mulsd XMM2,XMM6
            mulsd XMM1,XMM0
            mulsd XMM0,XMM7
            addsd XMM1,XMM3
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM9,QWORD PTR [RSP+240]
            movsd QWORD PTR [RSP+248],XMM0
            mulsd XMM9,XMM9
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+256]
            movsd XMM4,QWORD PTR [RSP+272]
            mulsd XMM9,QWORD PTR [RBP+32]
            addsd XMM0,XMM9
            ucomisd XMM8,XMM0
            sqrtsd XMM1,XMM0
            ja .L_411db6
.L_410f0a:

            addsd XMM1,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM4
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM9
            divsd XMM9,XMM0
            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+280],XMM9
            call .L_40e100

            movsd XMM6,QWORD PTR [RSP+504]
            mov EDX,5
            movsd XMM1,QWORD PTR [RSP+512]
            mov RSI,R12
            movapd XMM0,XMM6
            mov EDI,1
            movsd QWORD PTR [RSP+240],XMM1
            movsd QWORD PTR [RSP+256],XMM6
            call .L_40e050

            movsd XMM4,QWORD PTR [RSP+488]
            mov EDX,5
            movapd XMM7,XMM0
            mov EDI,1
            movsd XMM1,QWORD PTR [RSP+496]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+272],XMM4
            movsd QWORD PTR [RSP+264],XMM1
            call .L_40e050

            movsd XMM1,QWORD PTR [RBP+8]
            subsd XMM7,XMM0
            mov RAX,QWORD PTR [RSP+296]
            movsd XMM4,QWORD PTR [RSP+224]
            movapd XMM2,XMM1
            movsd XMM8,QWORD PTR [RSP+232]
            xorpd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBP+72]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411000:

            mulsd XMM1,XMM9
            add RAX,8
            cmp RAX,R14
            addsd XMM1,QWORD PTR [RAX-8]
            jne .L_411000

            mulsd XMM1,XMM2
            addsd XMM7,QWORD PTR [RSP+96]
            cmp EBX,R13D
            movsd XMM10,QWORD PTR [RSP+248]
            mulsd XMM1,QWORD PTR [RSP+64]
            movapd XMM5,XMM1
            pxor XMM1,XMM1
            mulsd XMM5,XMM7
            movsd QWORD PTR [RSP+64],XMM5
            addsd XMM10,XMM5
            jbe .L_411077

            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM8
            jp .L_4113b8

            jne .L_4113b8

            movsd XMM1,QWORD PTR [RIP+.L_415a28]
            mulsd XMM1,QWORD PTR [RBP+16]
            mulsd XMM1,QWORD PTR [RSP+104]
            divsd XMM1,XMM4
.L_411077:

            mov ESI,DWORD PTR [RSP+288]
            test ESI,ESI
            jne .L_4114c0

            movapd XMM3,XMM10
            test R15D,R15D
            andpd XMM3,XMMWORD PTR [RIP+.L_415920]
            movsd XMM0,QWORD PTR [RSP]
            je .L_4110a5

            movsd XMM0,QWORD PTR [RIP+.L_4159d8]
.L_4110a5:

            movsd XMM2,QWORD PTR [RIP+.L_65fe68]
            mulsd XMM0,XMM2
            ucomisd XMM3,XMM0
            jb .L_4114c0

            ucomisd XMM10,XMM8
            jbe .L_411378

            cmp EBX,R13D
            movsd XMM0,QWORD PTR [RSP+464]
            movsd XMM4,QWORD PTR [RSP+456]
            jb .L_411320

            movsd XMM6,QWORD PTR [RSP+200]
            movapd XMM5,XMM4
            divsd XMM6,QWORD PTR [RSP+192]
            divsd XMM5,XMM0
            ucomisd XMM5,XMM6
            ja .L_411320

            ucomisd XMM8,XMM10
            ja .L_411608
.L_411110:

            cmp EBX,R13D
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            jbe .L_4111d9

            ucomisd XMM1,XMM8
            jbe .L_4111d9

            xorpd XMM10,XMMWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+184],XMM8
            divsd XMM10,XMM1
            movapd XMM0,XMM10
            movsd QWORD PTR [RSP+224],XMM10
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM1,QWORD PTR [RSP+456]
            movsd XMM6,QWORD PTR [RSP+352]
            movapd XMM0,XMM4
            movsd XMM5,QWORD PTR [RSP+360]
            movapd XMM7,XMM1
            mulsd XMM0,XMM6
            movsd XMM8,QWORD PTR [RSP+184]
            mulsd XMM7,XMM5
            addsd XMM0,XMM7
            ucomisd XMM0,XMM8
            jbe .L_4111d9

            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM7,QWORD PTR [RIP+.L_65fe88]
            andpd XMM10,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM7,XMM10
            ja .L_411a20
.L_4111d9:

            movsd XMM0,QWORD PTR [RSP+176]
            lea RSI,QWORD PTR [RSP+456]
            lea RDI,QWORD PTR [RSP+464]
            movsd XMM6,QWORD PTR [RSP+216]
            addsd XMM0,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+48],XMM8
            addsd XMM6,QWORD PTR [RSP+200]
            mulsd XMM0,QWORD PTR [RIP+.L_415980]
            movsd QWORD PTR [RSP+464],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415980]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+456],XMM0
            call .L_40e3d0

            movsd XMM1,QWORD PTR [RSP+464]
            movsd XMM0,QWORD PTR [RSP+176]
            movsd XMM2,QWORD PTR [RSP+456]
            subsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+216]
            movsd XMM3,QWORD PTR [RIP+.L_65fe50]
            subsd XMM4,XMM2
            movsd XMM8,QWORD PTR [RSP+48]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            addsd XMM0,XMM4
            ucomisd XMM3,XMM0
            ja .L_411340

            subsd XMM1,QWORD PTR [RSP+192]
            xor EAX,EAX
            subsd XMM2,QWORD PTR [RSP+200]
            andpd XMM1,XMMWORD PTR [RIP+.L_415920]
            addsd XMM1,XMM2
            ucomisd XMM3,XMM1
            seta AL
            xor R15D,R15D
            mov DWORD PTR [RSP+288],EAX
.L_4112c1:

            add R13D,1
            cmp DWORD PTR [RIP+.L_65fe90],R13D
            jbe .L_4114c0

            movsd XMM4,QWORD PTR [RSP+464]
            movsd XMM3,QWORD PTR [RSP+456]
            movsd QWORD PTR [RSP+32],XMM4
            jmp .L_410b40

            nop
.L_4112f0:

            movapd XMM5,XMM1
            andpd XMM5,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM5,XMM0
            jp .L_410d15

            jne .L_410d15

            andpd XMM3,XMMWORD PTR [RIP+.L_415920]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_410d66
          .byte 0x90
.L_411320:

            movsd QWORD PTR [RSP+200],XMM4
            movsd QWORD PTR [RSP+192],XMM0
            jmp .L_411110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
.L_411340:

            mov DWORD PTR [RSP+288],1
            xor R15D,R15D
            jmp .L_4112c1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411358:

            movapd XMM5,XMM1
            movapd XMM0,XMM4
            addsd XMM5,XMM4
            subsd XMM0,XMM1
            mulsd XMM0,XMM5
            jmp .L_410d47
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411378:

            ucomisd XMM8,XMM10
            jbe .L_411110

            cmp EBX,R13D
            movsd XMM0,QWORD PTR [RSP+464]
            movsd XMM4,QWORD PTR [RSP+456]
            jae .L_411600
.L_41139e:

            movsd QWORD PTR [RSP+216],XMM4
            movsd QWORD PTR [RSP+176],XMM0
            jmp .L_411110
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4113b8:

            movsd QWORD PTR [RSP+232],XMM8
            lea RDX,QWORD PTR [RSP+520]
            sub RSP,8
.L_4113ce:

            movsd QWORD PTR [RSP+232],XMM10
            push R12
            push QWORD PTR [RSP+72]
            push QWORD PTR [RSP+72]
.L_4113e2:

            xor R9D,R9D
            xor R8D,R8D
            mov RDI,QWORD PTR [RSP+368]
            xor ECX,ECX
            xor ESI,ESI
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+296]
            movsd XMM2,QWORD PTR [RSP+304]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM6,QWORD PTR [RSP+272]
            movsd XMM5,QWORD PTR [RSP+288]
            movsd XMM0,QWORD PTR [RSP+312]
            call .L_40f190

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM4,QWORD PTR [RSP+520]
            divsd XMM1,QWORD PTR [RSP+216]
            movsd QWORD PTR [RSP+304],XMM4
            movsd XMM2,QWORD PTR [RSP+528]
            movsd XMM3,QWORD PTR [RSP+536]
            movsd XMM4,QWORD PTR [RSP+544]
            movsd QWORD PTR [RSP+296],XMM2
            movsd QWORD PTR [RSP+288],XMM3
            mulsd XMM1,QWORD PTR [RSP+552]
            movsd QWORD PTR [RSP+272],XMM4
            add RSP,32
.L_4114a4:

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            jmp .L_411077
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4114c0:

            mov R15D,DWORD PTR [RSP+344]
            mov EBX,DWORD PTR [RSP+348]
            movsd XMM9,QWORD PTR [RSP+280]
.L_4114d9:

            mov ECX,DWORD PTR [RSP+40]
            test ECX,ECX
            jne .L_411630

            xor R9D,R9D
            xor R8D,R8D
.L_4114eb:

            movsd QWORD PTR [RSP+16],XMM8
            lea RDX,QWORD PTR [RSP+432]
            lea RSI,QWORD PTR [RSP+424]
            sub RSP,8
.L_411506:

            movapd XMM0,XMM9
            push R12
            xor ECX,ECX
            mov R13D,EBX
            push QWORD PTR [RSP+432]
            push QWORD PTR [RSP+424]
.L_411520:

            mov RDI,QWORD PTR [RSP+368]
            movsd XMM2,QWORD PTR [RSP+304]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM6,QWORD PTR [RSP+272]
            movsd XMM5,QWORD PTR [RSP+288]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM3,QWORD PTR [RSP+296]
            call .L_40f190

            movsd XMM1,QWORD PTR [RSP+464]
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM2,QWORD PTR [RSP+128]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+456]
            divsd XMM2,QWORD PTR [RIP+.L_65fe80]
            movsd QWORD PTR [RSP+464],XMM1
            movsd QWORD PTR [RSP+456],XMM0
            add RSP,32
.L_4115ae:

            and R13D,16384
            movsd XMM8,QWORD PTR [RSP+16]
            jne .L_4116f0

            movsd XMM4,QWORD PTR [RSP+464]
            xor ECX,ECX
            movsd XMM3,QWORD PTR [RSP+456]
            pxor XMM10,XMM10
            movsd XMM11,QWORD PTR [RIP+.L_4159e0]
            pxor XMM9,XMM9
            jmp .L_40fc0b
          .byte 0x66
          .byte 0x90
.L_4115f0:

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM5
            jmp .L_40fd85
.L_411600:

            movapd XMM5,XMM4
            divsd XMM5,XMM0
.L_411608:

            movsd XMM6,QWORD PTR [RSP+216]
            divsd XMM6,QWORD PTR [RSP+176]
            ucomisd XMM6,XMM5
            jbe .L_411110

            jmp .L_41139e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411630:

            lea R9,QWORD PTR [RSP+376]
            lea R8,QWORD PTR [RSP+368]
            jmp .L_4114eb
.L_411645:

            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM4,XMM3
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+400]
            movsd XMM9,QWORD PTR [RSP+416]
            addsd XMM5,XMM6
            mulsd XMM4,XMM0
            movsd QWORD PTR [RSP+88],XMM8
            addsd XMM9,XMM6
            movsd QWORD PTR [RSP+64],XMM2
            addsd XMM6,XMM10
            movsd QWORD PTR [RSP+56],XMM7
            movapd XMM1,XMM5
            mulsd XMM3,XMM5
            mulsd XMM0,XMM9
            mulsd XMM1,XMM9
            addsd XMM0,XMM3
            addsd XMM4,XMM1
            movapd XMM1,XMM6
            mulsd XMM0,XMM11
            mulsd XMM1,XMM4
            call atan2@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            addsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+88]
            jmp .L_410335
.L_4116da:

            movsd XMM13,QWORD PTR [RSP]
            subsd XMM13,XMM3
            jmp .L_4104c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4116f0:

            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+48],XMM8
            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+352]
            xor ECX,ECX
            movsd XMM10,QWORD PTR [RSP+360]
            movsd XMM3,QWORD PTR [RSP+440]
            movsd XMM1,QWORD PTR [RSP+448]
            movapd XMM11,XMM3
            mulsd XMM3,XMM10
            movapd XMM5,XMM1
            mulsd XMM1,XMM4
            mulsd XMM11,XMM4
            mulsd XMM5,XMM10
            movsd XMM4,QWORD PTR [RSP+464]
            addsd XMM1,XMM3
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+456]
            subsd XMM11,XMM5
            pxor XMM9,XMM9
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM10,XMM1
            jmp .L_40fc0b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411798:

            mulsd XMM0,QWORD PTR [RIP+.L_415a00]
            movapd XMM13,XMM9
            movsd XMM3,QWORD PTR [RIP+.L_65fe88]
            mulsd XMM13,XMM9
            movsd QWORD PTR [RSP+56],XMM3
            mulsd XMM0,XMM3
            mulsd XMM0,XMM13
            ucomisd XMM15,XMM0
            jae .L_410852

            movapd XMM7,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            xorpd XMM4,XMM7
            movsd QWORD PTR [RSP+248],XMM2
            xorpd XMM1,XMM7
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM13
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+224],XMM11
            movsd QWORD PTR [RSP+216],XMM10
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call atan2@PLT

            movsd XMM3,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RSP+240]
            movapd XMM15,XMM0
            movsd XMM12,QWORD PTR [RSP+176]
            ucomisd XMM3,XMM8
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM10,QWORD PTR [RSP+216]
            movsd XMM11,QWORD PTR [RSP+224]
            movsd XMM13,QWORD PTR [RSP+232]
            movsd XMM2,QWORD PTR [RSP+248]
            jb .L_411eec

            mulsd XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RBP+32]
            addsd XMM0,XMM2
            movapd XMM1,XMM2
            ucomisd XMM8,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4125c0
.L_4118d3:

            addsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,XMM9
            lea RAX,QWORD PTR [RBP+80]
            lea R14,QWORD PTR [RBP+120]
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            addsd XMM0,XMM1
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+72]
            nop
            nop
            nop
            nop
            nop
            nop
.L_411900:

            mulsd XMM0,XMM1
            add RAX,8
            cmp RAX,R14
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_411900

            mulsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RSP+56]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+184],XMM0
            movapd XMM0,XMM15
            mulsd XMM9,XMM2
            divsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RSP+96]
            divsd XMM2,XMM9
            movsd QWORD PTR [RSP+480],XMM0
            movsd QWORD PTR [RSP+32],XMM2
.L_411951:

            movsd XMM0,QWORD PTR [RIP+.L_65fe60]
            movsd XMM5,QWORD PTR [RSP+32]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            ucomisd XMM5,XMM0
            jbe .L_411ace

            movsd XMM5,QWORD PTR [RIP+.L_415940]
            movsd XMM2,QWORD PTR [RSP+480]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+56],XMM5
            subsd XMM1,QWORD PTR [RIP+.L_65fe48]
            ucomisd XMM2,XMM1
            jbe .L_411adc

            movsd XMM1,QWORD PTR [RBP+8]
            ucomisd XMM1,XMM8
            jb .L_4122ea

            movsd XMM0,QWORD PTR [RSP+480]
            ucomisd XMM0,XMM5
            jbe .L_412581

            movapd XMM7,XMMWORD PTR [RSP+16]
            xorpd XMM7,XMM0
            mulsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+472],XMM7
            subsd XMM6,XMM0
            ucomisd XMM8,XMM6
            sqrtsd XMM2,XMM6
            movapd XMM0,XMM6
            ja .L_4126bb
.L_4119f6:

            xorpd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+488],XMM2
            jmp .L_410869
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411a20:

            mulsd XMM1,XMM6
            lea RSI,QWORD PTR [RSP+456]
            lea RDI,QWORD PTR [RSP+464]
            mulsd XMM4,XMM5
            movsd QWORD PTR [RSP+464],XMM0
            xor R15D,R15D
            subsd XMM1,XMM4
            movsd QWORD PTR [RSP+456],XMM1
            call .L_40e3d0

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RIP+.L_415a30]
            movsd XMM8,QWORD PTR [RSP+184]
            ucomisd XMM2,XMM3
            setae R15B
            jmp .L_4112c1
.L_411a81:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_40f9df
.L_411aa5:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBP+32]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_40f9b1
.L_411ace:

            movsd XMM3,QWORD PTR [RIP+.L_415940]
            movsd QWORD PTR [RSP+56],XMM3
.L_411adc:

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+480]
            movapd XMM7,XMM2
            mulsd XMM0,XMM0
            mulsd XMM7,XMM2
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+176],XMM7
            movapd XMM2,XMM7
            addsd XMM1,XMM0
            ucomisd XMM2,XMM8
            subsd XMM1,QWORD PTR [RSP]
            movapd XMM7,XMM1
            divsd XMM7,QWORD PTR [RIP+.L_415a00]
            movsd QWORD PTR [RSP+192],XMM7
            jp .L_411b3a

            jne .L_411b3a

            ucomisd XMM8,XMM7
            jae .L_4123ed
.L_411b3a:

            movsd XMM4,QWORD PTR [RSP+192]
            mulsd XMM0,QWORD PTR [RSP+176]
            movapd XMM2,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_415a10]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM0
            movapd XMM7,XMM2
            movsd QWORD PTR [RSP+216],XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM7
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            addsd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM1,XMM2
            ucomisd XMM0,XMM8
            movsd QWORD PTR [RSP+200],XMM1
            jb .L_412354

            ucomisd XMM8,XMM1
            sqrtsd XMM2,XMM0
            ja .L_4122d4

            ucomisd XMM8,XMM0
            ja .L_4126e8
.L_411bb7:

            addsd XMM2,QWORD PTR [RSP+200]
            movsd XMM1,QWORD PTR [RIP+.L_415a18]
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+200],XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+200]
            movsd XMM8,QWORD PTR [RSP+240]
            movsd XMM12,QWORD PTR [RSP+224]
            ucomisd XMM8,XMM2
            movsd XMM14,QWORD PTR [RSP+232]
            jbe .L_411c34

            xorpd XMM0,XMMWORD PTR [RSP+16]
.L_411c34:

            ucomisd XMM0,XMM8
            jp .L_411c41

            pxor XMM1,XMM1
            je .L_411c4e
.L_411c41:

            movsd XMM1,QWORD PTR [RSP+216]
            divsd XMM1,XMM0
.L_411c4e:

            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+192]
            addsd XMM1,XMM0
.L_411c5f:

            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RSP+176]
            ucomisd XMM8,XMM0
            sqrtsd XMM3,XMM0
            ja .L_412651
.L_411c7f:

            ucomisd XMM8,XMM1
            ja .L_412299

            addsd XMM1,XMM3
.L_411c8e:

            movapd XMM2,XMM1
            addsd XMM3,XMM3
            subsd XMM2,QWORD PTR [RSP+176]
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+176],XMM4
            ja .L_412835
.L_411cc7:

            addsd XMM2,QWORD PTR [RSP+176]
            divsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM2,XMM1
.L_411cdd:

            movsd XMM0,QWORD PTR [RBP+8]
            ucomisd XMM0,XMM8
            jb .L_412280

            movsd XMM0,QWORD PTR [RSP+480]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            divsd XMM1,XMM2
            movapd XMM0,XMM1
.L_411d08:

            mulsd XMM0,QWORD PTR [RSP+184]
            lea RDI,QWORD PTR [RSP+360]
            lea RSI,QWORD PTR [RSP+352]
            movsd QWORD PTR [RSP+192],XMM8
            movsd QWORD PTR [RSP+176],XMM14
            movsd QWORD PTR [RSP+32],XMM12
            call sincos@PLT

            movsd XMM12,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+360]
            movapd XMM1,XMM12
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM14,QWORD PTR [RSP+176]
            mulsd XMM1,XMM0
            addsd XMM2,QWORD PTR [RSP+352]
            mulsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+472],XMM1
            mulsd XMM0,XMM14
            movsd QWORD PTR [RSP+96],XMM3
            movsd XMM8,QWORD PTR [RSP+192]
            divsd XMM0,XMM2
            subsd XMM6,XMM0
            movsd QWORD PTR [RSP+488],XMM6
            jmp .L_410869
.L_411db6:

            movsd QWORD PTR [RSP+240],XMM1
            movsd QWORD PTR [RSP+232],XMM9
            movsd QWORD PTR [RSP+224],XMM4
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+256]
            movsd XMM1,QWORD PTR [RSP+240]
            movsd XMM9,QWORD PTR [RSP+232]
            movsd XMM4,QWORD PTR [RSP+224]
            jmp .L_410f0a
.L_411e02:

            movsd QWORD PTR [RSP+248],XMM3
            movsd QWORD PTR [RSP+184],XMM8
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+248]
            movsd XMM8,QWORD PTR [RSP+184]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_410c4d
.L_411e4a:

            movsd QWORD PTR [RSP+264],XMM8
            movsd QWORD PTR [RSP+256],XMM3
            movsd QWORD PTR [RSP+184],XMM2
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+264]
            movsd XMM3,QWORD PTR [RSP+256]
            movsd XMM2,QWORD PTR [RSP+184]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_410d5a
.L_411ea4:

            movsd QWORD PTR [RSP+64],XMM8
            pxor XMM9,XMM9
            movsd QWORD PTR [RSP+240],XMM8
            lea R12,QWORD PTR [RSP+528]
            movsd QWORD PTR [RSP+256],XMM8
            movsd QWORD PTR [RSP+264],XMM8
            movsd QWORD PTR [RSP+272],XMM8
            movsd QWORD PTR [RSP+32],XMM8
            jmp .L_4114d9
.L_411eec:

            movapd XMM1,XMM10
            movsd QWORD PTR [RSP+224],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            subsd XMM1,XMM11
            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+216],XMM13
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+184],XMM10
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+176],XMM9
            movsd QWORD PTR [RSP+192],XMM5
            movsd QWORD PTR [RSP+32],XMM12
            call atan2@PLT

            movsd XMM9,QWORD PTR [RSP+176]
            lea RCX,QWORD PTR [RSP+520]
            movapd XMM2,XMMWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSP+512]
            sub RSP,8
.L_411f79:

            lea RDI,QWORD PTR [RBP+32]
            xor R9D,R9D
            lea R12,QWORD PTR [RSP+536]
            xorpd XMM2,XMM9
            xor R8D,R8D
            xor ESI,ESI
            push R12
            movapd XMM3,XMM2
            movsd XMM12,QWORD PTR [RSP+48]
            sub RSP,16

            movsd XMM1,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM12
            movapd XMM6,XMM12
            movsd QWORD PTR [RSP],XMM9
            addsd XMM1,XMM0
            movsd XMM7,QWORD PTR [RSP+168]
            movsd XMM5,QWORD PTR [RSP+224]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM2,QWORD PTR [RSP+272]
            movsd XMM0,QWORD PTR [RBP+40]
            movsd QWORD PTR [RSP+208],XMM9
            movsd QWORD PTR [RSP+64],XMM12
            call .L_40f190

            movsd XMM10,QWORD PTR [RSP+216]
            movsd XMM0,QWORD PTR [RSP+88]
            mulsd XMM10,QWORD PTR [RSP+552]
            movsd XMM1,QWORD PTR [RSP+544]
            mulsd XMM0,XMM10
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415a08]
            subsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+512],XMM0
            movsd XMM0,QWORD PTR [RSP+512]
            add RSP,32

            ucomisd XMM1,XMM0
            movsd XMM12,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+176]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM13,QWORD PTR [RSP+216]
            movsd XMM15,QWORD PTR [RSP+224]
            movsd XMM8,QWORD PTR [RSP+232]
            jbe .L_4122b3

            movsd XMM0,QWORD PTR [RSP+480]
            movsd XMM13,QWORD PTR [RSP+96]
            divsd XMM13,XMM0
.L_4120aa:

            movapd XMM4,XMM13
            divsd XMM4,XMM9
            divsd XMM15,XMM4
            movsd QWORD PTR [RSP+184],XMM4
            movsd QWORD PTR [RSP+32],XMM15
            jmp .L_411951
.L_4120ce:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+184],XMM8
            movsd QWORD PTR [RSP+176],XMM2
            mov DWORD PTR [RSP+136],ECX
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+96],XMM5
            movsd QWORD PTR [RSP+88],XMM10
            movsd QWORD PTR [RSP+64],XMM11
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+184]
            movsd XMM2,QWORD PTR [RSP+176]
            mov ECX,DWORD PTR [RSP+136]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM11,QWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_4101b1
.L_41216a:

            movsd QWORD PTR [RSP+288],XMM2
            movsd QWORD PTR [RSP+280],XMM8
            movsd QWORD PTR [RSP+272],XMM13
            movsd QWORD PTR [RSP+264],XMM4
            movsd QWORD PTR [RSP+256],XMM15
            movsd QWORD PTR [RSP+248],XMM3
            movsd QWORD PTR [RSP+240],XMM6
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM7
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+288]
            movsd XMM8,QWORD PTR [RSP+280]
            movsd XMM13,QWORD PTR [RSP+272]
            movsd XMM4,QWORD PTR [RSP+264]
            movsd XMM15,QWORD PTR [RSP+256]
            movsd XMM3,QWORD PTR [RSP+248]
            movsd XMM6,QWORD PTR [RSP+240]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM12,QWORD PTR [RSP+176]
            jmp .L_410478
.L_412280:

            movsd XMM0,QWORD PTR [RSP+32]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            divsd XMM0,XMM1
            jmp .L_411d08
.L_412299:

            movapd XMM0,XMM3
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+176]
            divsd XMM1,XMM0
            jmp .L_411c8e
.L_4122b3:

            movsd XMM0,QWORD PTR [RBP+8]
            xorpd XMM0,XMMWORD PTR [RSP+16]
            mulsd XMM0,XMM13
            movsd XMM13,QWORD PTR [RSP+56]
            mulsd XMM13,XMM0
            jmp .L_4120aa
.L_4122d4:

            ucomisd XMM8,XMM0
            ja .L_4127ae
.L_4122df:

            xorpd XMM2,XMMWORD PTR [RSP+16]
            jmp .L_411bb7
.L_4122ea:

            movsd XMM1,QWORD PTR [RSP+480]
            movsd XMM2,QWORD PTR [RSP+480]
            movsd XMM5,QWORD PTR [RSP+56]
            cmpltsd XMM0,XMM2
            andnpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jbe .L_41259c

            movsd QWORD PTR [RSP+488],XMM1
            mulsd XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM1
            ucomisd XMM8,XMM0
            sqrtsd XMM1,XMM0
            ja .L_412806
.L_41233a:

            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+472],XMM1
            movsd QWORD PTR [RSP+96],XMM3
            jmp .L_410869
.L_412354:

            ucomisd XMM0,QWORD PTR [RIP+.L_415a20]
            movapd XMM7,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+200]
            xorpd XMM1,XMM7
            xorpd XMM7,XMM0
            sqrtsd XMM3,XMM7
            ja .L_412740
.L_41237d:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+224],XMM8
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM12
            call atan2@PLT

            divsd XMM0,QWORD PTR [RIP+.L_4159f0]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+192]
            movsd XMM8,QWORD PTR [RSP+224]
            movapd XMM1,XMM5
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM12,QWORD PTR [RSP+200]
            addsd XMM1,XMM5
            mulsd XMM1,XMM0
            addsd XMM1,XMM5
            jmp .L_411c5f
.L_4123ed:

            movsd XMM2,QWORD PTR [RSP]
            pxor XMM1,XMM1
            jmp .L_411cdd
.L_4123fb:

            movsd QWORD PTR [RSP+200],XMM8
            mov DWORD PTR [RSP+184],ECX
            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+176],XMM1
            movsd QWORD PTR [RSP+136],XMM4
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+88],XMM11
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+16],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+200]
            movsd XMM2,QWORD PTR [RSP+192]
            mov ECX,DWORD PTR [RSP+184]
            movsd XMM1,QWORD PTR [RSP+176]
            movsd XMM4,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd XMM10,QWORD PTR [RSP+96]
            movsd XMM11,QWORD PTR [RSP+88]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_4105c4
.L_4124b7:

            movsd QWORD PTR [RSP+256],XMM2
            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM4
            movsd QWORD PTR [RSP+232],XMM11
            movsd QWORD PTR [RSP+224],XMM10
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM7
            movsd QWORD PTR [RSP+192],XMM9
            movsd QWORD PTR [RSP+184],XMM5
            movsd QWORD PTR [RSP+176],XMM12
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+256]
            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd XMM11,QWORD PTR [RSP+232]
            movsd XMM10,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM7,QWORD PTR [RSP+200]
            movsd XMM9,QWORD PTR [RSP+192]
            movsd XMM5,QWORD PTR [RSP+184]
            movsd XMM12,QWORD PTR [RSP+176]
            jmp .L_40fed7
.L_412581:

            movsd XMM7,QWORD PTR [RSP]
            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+472],XMM7
            movapd XMM1,XMM7
            jmp .L_4119f6
.L_41259c:

            movsd QWORD PTR [RSP+488],XMM0
            mulsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP]
            subsd XMM1,XMM0
            sqrtsd XMM1,XMM1
            jmp .L_41233a
.L_4125bb:

            call __stack_chk_fail@PLT
.L_4125c0:

            movsd QWORD PTR [RSP+224],XMM8
            movsd QWORD PTR [RSP+216],XMM2
            movsd QWORD PTR [RSP+200],XMM1
            movsd QWORD PTR [RSP+192],XMM15
            movsd QWORD PTR [RSP+184],XMM14
            movsd QWORD PTR [RSP+176],XMM9
            movsd QWORD PTR [RSP+32],XMM12
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RSP+224]
            movsd XMM2,QWORD PTR [RSP+216]
            movsd XMM1,QWORD PTR [RSP+200]
            movsd XMM15,QWORD PTR [RSP+192]
            movsd XMM14,QWORD PTR [RSP+184]
            movsd XMM9,QWORD PTR [RSP+176]
            movsd XMM12,QWORD PTR [RSP+32]
            jmp .L_4118d3
.L_412651:

            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM3
            movsd QWORD PTR [RSP+216],XMM1
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM3,QWORD PTR [RSP+224]
            movsd XMM1,QWORD PTR [RSP+216]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM12,QWORD PTR [RSP+192]
            jmp .L_411c7f
.L_4126bb:

            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+472]
            movsd XMM8,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_4119f6
.L_4126e8:

            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+240]
            movsd XMM14,QWORD PTR [RSP+232]
            movsd XMM12,QWORD PTR [RSP+224]
            jmp .L_411bb7
.L_412740:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+240],XMM8
            movsd QWORD PTR [RSP+232],XMM3
            movsd QWORD PTR [RSP+224],XMM1
            movsd QWORD PTR [RSP+216],XMM14
            movsd QWORD PTR [RSP+200],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+240]
            movsd XMM3,QWORD PTR [RSP+232]
            movsd XMM1,QWORD PTR [RSP+224]
            movsd XMM14,QWORD PTR [RSP+216]
            movsd XMM12,QWORD PTR [RSP+200]
            jmp .L_41237d
.L_4127ae:

            movsd QWORD PTR [RSP+248],XMM8
            movsd QWORD PTR [RSP+240],XMM2
            movsd QWORD PTR [RSP+232],XMM14
            movsd QWORD PTR [RSP+224],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+248]
            movsd XMM2,QWORD PTR [RSP+240]
            movsd XMM14,QWORD PTR [RSP+232]
            movsd XMM12,QWORD PTR [RSP+224]
            jmp .L_4122df
.L_412806:

            movsd QWORD PTR [RSP+96],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_41233a
.L_41282a:

            mov R15D,1
            jmp .L_40f820
.L_412835:

            movsd QWORD PTR [RSP+232],XMM8
            movsd QWORD PTR [RSP+224],XMM2
            movsd QWORD PTR [RSP+216],XMM1
            movsd QWORD PTR [RSP+200],XMM14
            movsd QWORD PTR [RSP+192],XMM12
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+232]
            movsd XMM2,QWORD PTR [RSP+224]
            movsd XMM1,QWORD PTR [RSP+216]
            movsd XMM14,QWORD PTR [RSP+200]
            movsd XMM12,QWORD PTR [RSP+192]
            jmp .L_411cc7
.L_41289f:

            nop
.L_4128a0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            movapd XMM2,XMM0
            sub RSP,120
.L_4128b1:

            mov EAX,DWORD PTR [RIP+.L_65fe98]
            test EAX,EAX
            je .L_412da1

            movsd XMM5,QWORD PTR [RIP+.L_65fe58]
            movsd QWORD PTR [RSP+16],XMM5
.L_4128cd:

            movsd XMM5,QWORD PTR [RIP+.L_415938]
            movsd XMM3,QWORD PTR [RIP+.L_4159e0]
            movapd XMM0,XMM5
            movsd QWORD PTR [RBX],XMM2
            subsd XMM3,XMM1
            movsd QWORD PTR [RBX+8],XMM1
            subsd XMM0,XMM1
            movapd XMM4,XMM3
            movapd XMM6,XMM0
            movsd QWORD PTR [RBX+16],XMM0
            mulsd XMM4,XMM1
            mulsd XMM6,XMM0
            mulsd XMM0,XMM2
            mulsd XMM2,XMM2
            movapd XMM7,XMM4
            movsd QWORD PTR [RBX+24],XMM4
            divsd XMM7,XMM6
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM2,XMM0
            pxor XMM6,XMM6
            mulsd XMM2,XMM0
            movsd QWORD PTR [RBX+32],XMM7
            movapd XMM7,XMM1
            ucomisd XMM4,XMM6
            divsd XMM7,XMM3
            movsd QWORD PTR [RBX+40],XMM7
            jp .L_412c0d

            jne .L_412c0d

            movq XMM3,QWORD PTR [RIP+.L_415920]
            movsd XMM7,QWORD PTR [RIP+.L_415980]
.L_412965:

            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM4,XMM5
            andpd XMM3,XMM1
            addsd XMM0,XMM2
            mulsd XMM1,XMM7
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RIP+.L_4159f8]
            mulsd XMM0,XMM7
            subsd XMM4,XMM1
            movsd QWORD PTR [RBX+56],XMM0
            movapd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_415a50]
            movapd XMM1,XMM4
            ucomisd XMM0,XMM3
            jbe .L_412bf6

            ucomisd XMM5,XMM4
            ja .L_412d3f
.L_4129ba:

            mulsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_412f4b
.L_4129cc:

            divsd XMM2,XMM1
            lea R9,QWORD PTR [RIP+.L_415880]
            mov EDI,1
            xor R8D,R8D
            mov ECX,5
            xor ESI,ESI
            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM0,QWORD PTR [RIP+.L_415a68]
            movsd QWORD PTR [RBX+64],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_415a60]
.L_412a00:

            divsd XMM0,XMM2
            sub ECX,1
            lea R8D,DWORD PTR [RSI+R8*1+2]
            cmp ECX,-1
            movsd QWORD PTR [RBX+RDI*8+64],XMM0
            je .L_412a65

            cmp ECX,EDI
            movsxd RAX,R8D
            mov ESI,EDI
            lea RDX,QWORD PTR [R9+RAX*8]
            cmovl ESI,ECX
            test ESI,ESI
            lea RAX,QWORD PTR [RDX+8]
            movsd XMM0,QWORD PTR [RDX]
            je .L_412a52

            lea R10D,DWORD PTR [RSI-1]
            lea RDX,QWORD PTR [RDX+R10*8+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_412a40:

            mulsd XMM0,XMM1
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp RDX,RAX
            jne .L_412a40
.L_412a52:

            lea EAX,DWORD PTR [RSI+R8*1+1]
            add RDI,1
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_412a00
.L_412a65:

            movsd XMM2,QWORD PTR [RIP+.L_415a60]
            lea R10,QWORD PTR [RIP+.L_415700]
            movsd XMM0,QWORD PTR [RIP+.L_4159f0]
            xor R9D,R9D
            xor EDI,EDI
            mov R11D,1
            mov EBP,5
.L_412a8c:

            movsxd RAX,R9D
            mov ESI,5
            xor EDX,EDX
            lea R8,QWORD PTR [RBX+RAX*8]
.L_412a9a:

            divsd XMM0,XMM2
            sub ESI,1
            add R9D,1
            cmp ESI,R11D
            lea EDI,DWORD PTR [RDX+RDI*1+2]
            movsd QWORD PTR [R8+120],XMM0
            jl .L_412b00

            mov EDX,EBP
            movsxd RAX,EDI
            sub EDX,ESI
            lea RCX,QWORD PTR [R10+RAX*8]
            cmp EDX,ESI
            cmovg EDX,ESI
            movsd XMM0,QWORD PTR [RCX]
            lea R12D,DWORD PTR [RDX-1]
            lea RAX,QWORD PTR [RCX+8]
            lea RCX,QWORD PTR [RCX+R12*8+16]
.L_412ad5:

            mulsd XMM0,XMM1
            add RAX,8
            addsd XMM0,QWORD PTR [RAX-8]
            cmp RCX,RAX
            jne .L_412ad5

            lea EAX,DWORD PTR [RDX+RDI*1+1]
            add R8,8
            cdqe 
            movsd XMM2,QWORD PTR [R10+RAX*8]
            jmp .L_412a9a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412b00:

            add R11D,1
            cmp R11D,6
            je .L_412b23

            movsxd RAX,EDI
            movsd XMM0,QWORD PTR [R10+RAX*8]
            lea EAX,DWORD PTR [RDI+1]
            cdqe 
            movsd XMM2,QWORD PTR [R10+RAX*8]
            jmp .L_412a8c
.L_412b23:

            movsd XMM2,QWORD PTR [RIP+.L_415a70]
            lea R9,QWORD PTR [RIP+.L_415480]
            movsd XMM0,QWORD PTR [RIP+.L_415a78]
            xor EDI,EDI
            xor ESI,ESI
            xor R10D,R10D
            mov EBP,7
            mov R12D,5
            nop
            nop
            nop
            nop
.L_412b50:

            movsxd RAX,EDI
            mov R8D,16
            mov ECX,5
            lea R11,QWORD PTR [RBX+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_412b68:

            divsd XMM0,XMM2
            mov EAX,EBP
            add EDI,1
            sub EAX,ECX
            sub ECX,1
            add ESI,EAX
            cmp ECX,R10D
            movsd QWORD PTR [R11+R8*1+224],XMM0
            jl .L_412bc8

            movsxd RAX,ESI
            mov R13D,R12D
            lea RDX,QWORD PTR [R9+RAX*8]
            sub R13D,ECX
            lea RAX,QWORD PTR [RDX+8]
            movsd XMM0,QWORD PTR [RDX]
            add RDX,R8
            nop
.L_412ba0:

            mulsd XMM0,XMM1
            add RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX-8]
            jne .L_412ba0

            lea EAX,DWORD PTR [RSI+R13*1+1]
            add R8,8
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_412b68
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412bc8:

            add R10D,1
            cmp R10D,6
            je .L_412beb

            movsxd RAX,ESI
            movsd XMM0,QWORD PTR [R9+RAX*8]
            lea EAX,DWORD PTR [RSI+1]
            cdqe 
            movsd XMM2,QWORD PTR [R9+RAX*8]
            jmp .L_412b50
.L_412beb:

            add RSP,120
.L_412bef:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_412bf6:

            ucomisd XMM5,XMM4
            ja .L_412d3b

            movsd XMM1,QWORD PTR [RIP+.L_415a58]
            jmp .L_4129cc
.L_412c0d:

            ucomisd XMM4,XMM6
            jbe .L_412ca8

            ucomisd XMM6,XMM4
            sqrtsd XMM7,XMM4
            movsd QWORD PTR [RSP+24],XMM7
            ja .L_412e7d
.L_412c2b:

            movq XMM3,QWORD PTR [RIP+.L_415920]
            movapd XMM7,XMM5
            movsd XMM0,QWORD PTR [RSP+24]
            andpd XMM0,XMM3
            movapd XMM1,XMM0
            subsd XMM7,XMM0
            addsd XMM1,XMM0
            divsd XMM1,XMM7
            movapd XMM0,XMM1
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            subsd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,XMM6
            jp .L_412d48

            jne .L_412d48
.L_412c85:

            ucomisd XMM6,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RIP+.L_415980]
            movsd XMM4,QWORD PTR [RBX+24]
            mulsd XMM1,XMM7
            jbe .L_412d13

            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
            jmp .L_412d13
.L_412ca8:

            movapd XMM0,XMM4
            ucomisd XMM4,QWORD PTR [RIP+.L_415a20]
            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            sqrtsd XMM1,XMM0
            ja .L_412eaf
.L_412cc6:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            call atan@PLT

            movq XMM3,QWORD PTR [RIP+.L_415920]
            movapd XMM1,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_415980]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
.L_412d13:

            andpd XMM4,XMM3
            movapd XMM0,XMM4
            sqrtsd XMM4,XMM4
            ucomisd XMM6,XMM0
            ja .L_412eee
.L_412d29:

            divsd XMM1,XMM4
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            jmp .L_412965
.L_412d3b:

            movapd XMM0,XMM3
.L_412d3f:

            mulsd XMM0,XMM1
            jmp .L_4129ba
.L_412d48:

            movsd XMM0,QWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+104]
            mulsd XMM1,XMM0
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            divsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_412c85
.L_412da1:

            mov RAX,QWORD PTR [RIP+.L_415a80]
            movsd QWORD PTR [RSP+24],XMM0
            mov DWORD PTR [RIP+.L_65fe94],20
            movsd XMM0,QWORD PTR [RIP+.L_415940]
            mov DWORD PTR [RIP+.L_65fe90],83
            movsd QWORD PTR [RSP+32],XMM1
            mov QWORD PTR [RIP+.L_65fe88],RAX
            mov RAX,QWORD PTR [RIP+.L_415a88]
            sqrtsd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM3
            mov QWORD PTR [RIP+.L_65fe70],RAX
            mov RAX,QWORD PTR [RIP+.L_415a90]
            mov QWORD PTR [RIP+.L_65fe68],RAX
            mov RAX,QWORD PTR [RIP+.L_415a98]
            mov QWORD PTR [RIP+.L_65fe60],RAX
            mov RAX,QWORD PTR [RIP+.L_415a48]
            mov QWORD PTR [RIP+.L_65fe58],RAX
            mov RAX,QWORD PTR [RIP+.L_415aa0]
            mov QWORD PTR [RIP+.L_65fe50],RAX
            mov RAX,QWORD PTR [RIP+.L_415aa8]
            mov QWORD PTR [RIP+.L_65fe48],RAX
            mov RAX,QWORD PTR [RIP+.L_415ab0]
            mov QWORD PTR [RIP+.L_65fe80],RAX
            call sqrt@PLT

            mov RAX,QWORD PTR [RIP+.L_415a48]
            movsd XMM3,QWORD PTR [RSP+8]
            mov DWORD PTR [RIP+.L_65fe98],1
            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RIP+.L_65fe78],XMM3
            mov QWORD PTR [RSP+16],RAX
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_4128cd
.L_412e7d:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_412c2b
.L_412eaf:

            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBX+24]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_412cc6
.L_412eee:

            movaps XMMWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_412d29
.L_412f4b:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4129cc
.L_412f6d:

            nop
            nop
            nop
.L_412f70:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,64
.L_412f81:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call fmod@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415950]
            ucomisd XMM0,XMM2
            jb .L_413030

            addsd XMM2,QWORD PTR [RIP+.L_415958]
.L_412fc8:

            pxor XMM0,XMM0
            ucomisd XMM2,XMM0
            jp .L_413050

            jne .L_413050
.L_412fd4:

            lea RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM2
            call .L_40e7a0

            movsd XMM4,QWORD PTR [RSP+48]
            mov EDX,R12D
            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,RBP
            movsd XMM2,QWORD PTR [RSP+24]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_40ea90

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41306a

            add RSP,64
.L_413029:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_413030:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM0,XMM2
            jae .L_412fc8

            subsd XMM2,QWORD PTR [RIP+.L_415958]
            jmp .L_412fc8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413050:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            call .L_40ea20

            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_412fd4
.L_41306a:

            call __stack_chk_fail@PLT
.L_41306f:

            nop
.L_413070:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBP,ESI
            xor EBX,EBX
            sub RSP,296
.L_413088:

            mov RSI,QWORD PTR [RSP+376]
            mov QWORD PTR [RSP+128],RDX
            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,QWORD PTR [RSP+352]
            mov R12,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RSP+368]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+136],RCX
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RSI
            xor ESI,ESI
            test RDX,RDX
            mov QWORD PTR [RSP+144],R8
            mov QWORD PTR [RSP+152],R9
            setne BL
            mov QWORD PTR [RSP+160],RAX
            mov QWORD PTR [RSP+168],RDI
            shl EBX,7
            mov EDX,EBX
            or EDX,264
            test RCX,RCX
            cmovne EBX,EDX
            mov EDX,EBX
            or DH,2
            test R8,R8
            cmovne EBX,EDX
            mov EDX,EBX
            or EDX,1025
            test R9,R9
            cmovne EBX,EDX
            mov EDX,EBX
            or EDX,4101
            test RAX,RAX
            cmovne EBX,EDX
            test R12,R12
            jne .L_413908

            test RDI,RDI
            jne .L_413908
.L_413146:

            mov EDX,EBX
            mov EAX,EBP
            or EDX,16400
            cmp QWORD PTR [RSP+48],0
            cmovne EBX,EDX
            mov EDX,DWORD PTR [R13+504]
            and EBX,EDX
            and EAX,1
            mov DWORD PTR [RSP+44],EAX
            je .L_413790

            movsd XMM0,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+272]
            lea RDI,QWORD PTR [RSP+264]
            movsd XMM3,QWORD PTR [RIP+.L_65fe80]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+32],XMM3
            call .L_40e7a0

            movsd XMM3,QWORD PTR [RIP+.L_415938]
            pxor XMM2,XMM2
            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM4,QWORD PTR [RSP+272]
            movsd XMM7,QWORD PTR [RSP+264]
            movsd XMM5,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [R13+128]
            movsd XMM10,QWORD PTR [R13+112]
.L_4131d9:

            movapd XMM3,XMM4
            movapd XMM0,XMM8
            mulsd XMM4,XMM8
            mulsd XMM3,XMM5
            mulsd XMM0,XMM7
            mulsd XMM5,XMM7
            addsd XMM3,XMM0
            subsd XMM4,XMM5
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM1,XMM3
            mulsd XMM1,XMM10
            addsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM1
            sqrtsd XMM5,XMM1
            movsd QWORD PTR [RSP+184],XMM5
            ja .L_413ff4
.L_41322b:

            test BH,52
            movsd QWORD PTR [RSP+72],XMM2
            jne .L_413aa0
.L_41323a:

            movsd XMM4,QWORD PTR [R13+104]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [R13+96]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+56],XMM0
            mulsd XMM0,XMM0
            mulsd XMM1,XMM1
            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM5,XMM0
            ja .L_414026

            movapd XMM1,XMM4
.L_413274:

            ucomisd XMM5,XMM2
            jp .L_41328a

            jne .L_41328a

            movsd XMM5,QWORD PTR [RIP+.L_65fe70]
            movsd QWORD PTR [RSP+8],XMM5
.L_41328a:

            mulsd XMM1,QWORD PTR [RSP+8]
            mov EAX,EBX
            movsd QWORD PTR [RSP+64],XMM2
            and EAX,1024
            mov DWORD PTR [RSP+88],EAX
            movsd QWORD PTR [RSP+176],XMM1
            je .L_4132e7

            mov EDI,DWORD PTR [RSP+44]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+64],XMM6
            test EDI,EDI
            je .L_4132e7

            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+72]
            mulsd XMM0,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+64],XMM0
.L_4132e7:

            mov EAX,EBX
            movsd QWORD PTR [RSP+80],XMM2
            and EAX,256
            mov DWORD PTR [RSP+96],EAX
            je .L_413560

            movsd XMM7,QWORD PTR [RSP+56]
            ucomisd XMM2,XMM7
            ja .L_413f40

            ucomisd XMM7,XMM2
            jp .L_41331a

            je .L_413db0
.L_41331a:

            movsd XMM6,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+80],XMM6
.L_413326:

            movsd XMM6,QWORD PTR [RSP+56]
            and EBP,32768
            lea R14,QWORD PTR [R13+408]
            movsd XMM7,QWORD PTR [RIP+.L_65fe80]
            mulsd XMM6,XMM3
            movsd QWORD PTR [RSP+104],XMM7
            jne .L_413dd8

            movsd XMM7,QWORD PTR [R13+160]
            movsd QWORD PTR [RSP+192],XMM2
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM7
            movsd XMM0,QWORD PTR [R13+168]
            movapd XMM8,XMM2
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP+120],XMM5
            mulsd XMM7,XMM2
            movsd QWORD PTR [RSP+112],XMM4
            mulsd XMM8,XMM0
            movsd QWORD PTR [RSP+80],XMM3
            mulsd XMM0,XMM6
            addsd XMM1,XMM8
            subsd XMM0,XMM7
            call atan2@PLT

            movsd XMM3,QWORD PTR [R13+192]
            mov EDX,5
            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R14
            movsd QWORD PTR [RSP+208],XMM3
            mov EDI,1
            movsd XMM3,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+200],XMM0
            movapd XMM0,XMM3
            call .L_40e050

            movsd XMM2,QWORD PTR [R13+216]
            movsd QWORD PTR [RSP+216],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            movsd XMM0,QWORD PTR [R13+8]
            movsd QWORD PTR [RSP+224],XMM2
            call fmod@PLT

            movsd XMM2,QWORD PTR [RIP+.L_415950]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RSP+80]
            ucomisd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RSP+192]
            jb .L_413fb0

            addsd XMM6,QWORD PTR [RIP+.L_415958]
.L_413450:

            movsd XMM0,QWORD PTR [RSP+216]
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            subsd XMM0,QWORD PTR [RSP+224]
            movsd QWORD PTR [RSP+232],XMM2
            movsd QWORD PTR [RSP+192],XMM6
            movsd QWORD PTR [RSP+120],XMM3
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+80],XMM4
            addsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+208]
            addsd XMM0,QWORD PTR [RSP+200]
            divsd XMM0,QWORD PTR [RSP+104]
            call fmod@PLT

            movsd XMM5,QWORD PTR [RIP+.L_415950]
            movsd XMM4,QWORD PTR [RSP+80]
            ucomisd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+120]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RSP+192]
            movsd XMM2,QWORD PTR [RSP+232]
            jb .L_413f88

            addsd XMM0,QWORD PTR [RIP+.L_415958]
.L_4134ef:

            addsd XMM0,XMM6
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+120],XMM3
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+104],XMM4
            call fmod@PLT

            movsd XMM3,QWORD PTR [RIP+.L_415950]
            movsd QWORD PTR [RSP+80],XMM0
            ucomisd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RSP+192]
            jb .L_413f58

            movsd XMM7,QWORD PTR [RIP+.L_415958]
            addsd XMM7,XMM0
            movsd QWORD PTR [RSP+80],XMM7
.L_413560:

            mov R15D,EBX
            movsd QWORD PTR [RSP+112],XMM2
            and R15D,128
            jne .L_413b18
.L_413576:

            mov EAX,EBX
            movsd QWORD PTR [RSP+120],XMM2
            and EAX,512
            mov DWORD PTR [RSP+104],EAX
            jne .L_413b58
.L_41358d:

            mov EBP,EBX
            mov R14D,EBX
            movsd QWORD PTR [RSP+200],XMM2
            and EBP,4096
            and R14D,8192
            test BH,48
            jne .L_413918

            movsd QWORD PTR [RSP+192],XMM2
            movsd QWORD PTR [RSP+72],XMM2
.L_4135c0:

            and EBX,16384
            pxor XMM0,XMM0
            movsd QWORD PTR [RSP+184],XMM2
            je .L_41368d

            movapd XMM0,XMM3
            lea RSI,QWORD PTR [R13+456]
            xor EDI,EDI
            movsd XMM1,QWORD PTR [RSP+8]
            mov EDX,6
            call .L_40e050

            movsd XMM4,QWORD PTR [R13+104]
            movsd XMM2,QWORD PTR [RSP+184]
            movapd XMM3,XMM0
            ucomisd XMM4,XMM2
            jp .L_413be8

            jne .L_413be8
.L_413619:

            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM1,QWORD PTR [R13+48]
            movapd XMM0,XMM6
            movsd XMM2,QWORD PTR [R13+40]
            movapd XMM4,XMM5
            mulsd XMM0,XMM1
            mulsd XMM1,XMM5
            mulsd XMM4,XMM2
            mulsd XMM2,XMM6
            subsd XMM0,XMM4
            addsd XMM1,XMM2
.L_413654:

            movsd XMM2,QWORD PTR [R13+80]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+8]
            subsd XMM3,QWORD PTR [R13+232]
            mulsd XMM3,QWORD PTR [R13+224]
            addsd XMM0,XMM3
.L_41368d:

            test R15D,R15D
            je .L_4136a4

            mov RAX,QWORD PTR [RSP+128]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd QWORD PTR [RAX],XMM3
.L_4136a4:

            mov ESI,DWORD PTR [RSP+96]
            test ESI,ESI
            je .L_4136be

            mov RAX,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RAX],XMM5
.L_4136be:

            mov ECX,DWORD PTR [RSP+104]
            test ECX,ECX
            je .L_4136d8

            mov RAX,QWORD PTR [RSP+144]
            movsd XMM3,QWORD PTR [RSP+120]
            movsd QWORD PTR [RAX],XMM3
.L_4136d8:

            mov EDX,DWORD PTR [RSP+88]
            test EDX,EDX
            je .L_4136f2

            mov RAX,QWORD PTR [RSP+152]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd QWORD PTR [RAX],XMM5
.L_4136f2:

            test EBP,EBP
            je .L_413708

            mov RAX,QWORD PTR [RSP+160]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd QWORD PTR [RAX],XMM6
.L_413708:

            test R14D,R14D
            je .L_41373b

            test R12,R12
            je .L_413721

            movsd XMM3,QWORD PTR [RSP+192]
            movsd QWORD PTR [R12],XMM3
.L_413721:

            mov RAX,QWORD PTR [RSP+168]
            test RAX,RAX
            je .L_41373b

            movsd XMM3,QWORD PTR [RSP+200]
            movsd QWORD PTR [RAX],XMM3
.L_41373b:

            test EBX,EBX
            je .L_413748

            mov RAX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RAX],XMM0
.L_413748:

            mov EAX,DWORD PTR [RSP+44]
            movsd XMM0,QWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_413764

            movsd XMM0,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RIP+.L_65fe80]
.L_413764:

            mov RAX,QWORD PTR [RSP+280]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4140c6

            add RSP,296
.L_413782:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413790:

            and DH,8
            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            je .L_413764

            movsd XMM6,QWORD PTR [RIP+.L_415938]
            lea R14,QWORD PTR [RSP+248]
            lea R15,QWORD PTR [RSP+240]
            movsd XMM7,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+24],XMM6
            addsd XMM6,QWORD PTR [R13+176]
            mov RSI,R15
            movsd QWORD PTR [RSP+64],XMM7
            mov RDI,R14
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM7,XMM6
            movsd QWORD PTR [RSP+72],XMM6
            divsd XMM4,XMM7
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [R13+152]
            lea RSI,QWORD PTR [R13+296]
            movsd XMM2,QWORD PTR [R13+144]
            mov EDX,6
            movsd XMM5,QWORD PTR [RSP+240]
            mov EDI,1
            movsd XMM0,QWORD PTR [RSP+248]
            movapd XMM1,XMM3
            movapd XMM6,XMM2
            mulsd XMM2,XMM5
            mulsd XMM6,XMM0
            mulsd XMM1,XMM5
            mulsd XMM0,XMM3
            subsd XMM1,XMM6
            addsd XMM0,XMM2
            call .L_40e050

            movapd XMM6,XMM0
            mov RSI,R15
            movsd XMM5,QWORD PTR [R13+200]
            mov RDI,R14
            xorpd XMM6,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [RSP+80],XMM5
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+56],XMM6
            subsd XMM0,XMM5
            subsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [R13+32]
            movsd XMM1,QWORD PTR [RSP+240]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+272],XMM1
            movsd XMM7,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [R13+120]
            movsd QWORD PTR [RSP+264],XMM7
            ucomisd XMM0,QWORD PTR [RIP+.L_415ab8]
            movsd XMM8,QWORD PTR [R13+128]
            ja .L_413c70

            movsd XMM10,QWORD PTR [R13+112]
            pxor XMM2,XMM2
            movsd XMM6,QWORD PTR [RSP+56]
            jmp .L_4131d9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413908:

            or EBX,8197
            jmp .L_413146
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413918:

            movsd XMM7,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [R13+352]
            movapd XMM0,XMM3
            mov EDX,6
            movapd XMM1,XMM7
            mov EDI,1
            movsd QWORD PTR [RSP+192],XMM3
            call .L_40e050

            movsd XMM4,QWORD PTR [R13+184]
            test EBP,EBP
            subsd XMM0,QWORD PTR [R13+208]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+72]
            addsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+72],XMM2
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [R13+176]
            subsd XMM1,XMM4
            subsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+192]
            addsd XMM0,XMM1
            je .L_4139ef

            movsd XMM4,QWORD PTR [R13+128]
            movsd XMM5,QWORD PTR [R13+120]
            movapd XMM1,XMM4
            mulsd XMM4,XMM7
            mulsd XMM5,XMM7
            mulsd XMM1,XMM3
            mulsd XMM4,XMM0
            mulsd XMM5,QWORD PTR [R13+136]
            mulsd XMM1,QWORD PTR [RSP+184]
            subsd XMM1,XMM5
            subsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [R13+72]
            movsd QWORD PTR [RSP+72],XMM1
.L_4139ef:

            test R14D,R14D
            je .L_413ba0

            movsd XMM1,QWORD PTR [R13+120]
            movapd XMM4,XMM3
            movsd XMM12,QWORD PTR [RSP+184]
            subsd XMM4,XMM1
            movapd XMM5,XMM1
            movsd XMM7,QWORD PTR [R13+136]
            addsd XMM5,XMM3
            movapd XMM6,XMM3
            movsd XMM8,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [R13+112]
            mulsd XMM8,XMM0
            mulsd XMM0,QWORD PTR [R13+128]
            mulsd XMM4,XMM5
            movapd XMM5,XMM12
            addsd XMM5,XMM7
            divsd XMM4,XMM5
            movsd XMM5,QWORD PTR [RSP+272]
            mulsd XMM6,XMM4
            subsd XMM6,XMM8
            mulsd XMM6,XMM1
            mulsd XMM1,XMM4
            divsd XMM6,XMM7
            subsd XMM1,XMM0
            mulsd XMM1,XMM3
            addsd XMM6,XMM5
            divsd XMM1,XMM12
            movsd QWORD PTR [RSP+192],XMM6
            subsd XMM5,XMM1
            movsd QWORD PTR [RSP+200],XMM5
            jmp .L_4135c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413aa0:

            mov R8D,DWORD PTR [RSP+44]
            test R8D,R8D
            je .L_413bc0
.L_413aae:

            movapd XMM0,XMM3
            lea RSI,QWORD PTR [R13+240]
            mov EDX,6
            movsd XMM1,QWORD PTR [RSP+8]
            mov EDI,1
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM3
            call .L_40e050

            movsd XMM2,QWORD PTR [RSP+64]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RSP+56]
.L_413aea:

            movsd XMM0,QWORD PTR [RSP+24]
            subsd XMM6,QWORD PTR [R13+200]
            addsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+72],XMM0
            jmp .L_41323a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413b18:

            mulsd XMM5,QWORD PTR [R13+88]
            movsd QWORD PTR [RSP+120],XMM2
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+104],XMM3
            movapd XMM0,XMM4
            movapd XMM1,XMM5
            call .L_40e910

            movsd XMM2,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+112],XMM0
            movsd XMM3,QWORD PTR [RSP+104]
            jmp .L_413576
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413b58:

            movsd XMM1,QWORD PTR [RSP+176]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+200],XMM2
            movsd QWORD PTR [RSP+192],XMM3
            call .L_40e910

            movsd XMM2,QWORD PTR [RSP+200]
            movsd QWORD PTR [RSP+120],XMM0
            movsd XMM3,QWORD PTR [RSP+192]
            jmp .L_41358d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413ba0:

            movsd QWORD PTR [RSP+200],XMM2
            movsd QWORD PTR [RSP+192],XMM2
            jmp .L_4135c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413bc0:

            movsd XMM0,QWORD PTR [R13+32]
            andpd XMM0,XMMWORD PTR [RIP+.L_415920]
            ucomisd XMM0,QWORD PTR [RIP+.L_415ab8]
            jbe .L_413aea

            jmp .L_413aae
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413be8:

            movsd XMM5,QWORD PTR [R13+96]
            ucomisd XMM5,XMM2
            jp .L_413bfa

            je .L_413619
.L_413bfa:

            movsd XMM6,QWORD PTR [RSP+272]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [R13+128]
            ucomisd XMM2,XMM6
            mulsd XMM0,XMM5
            movsd XMM7,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [RSP+264]
            jae .L_413fd0

            movapd XMM2,XMM1
            addsd XMM6,QWORD PTR [RSP+24]
            mulsd XMM2,XMM8
            divsd XMM2,XMM6
            addsd XMM2,XMM7
            mulsd XMM2,XMM8
.L_413c4a:

            mulsd XMM4,XMM4
            mulsd XMM5,XMM5
            mulsd XMM0,XMM2
            mulsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            addsd XMM1,XMM5
            jmp .L_413654
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413c70:

            movapd XMM9,XMM1
            mulsd XMM1,XMM8
            movapd XMM0,XMM7
            mulsd XMM7,XMM5
            mulsd XMM9,XMM5
            lea RSI,QWORD PTR [R13+240]
            mov EDX,6
            mulsd XMM0,XMM8
            mov EDI,1
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+8],XMM5
            subsd XMM1,XMM7
            addsd XMM9,XMM0
            movapd XMM0,XMM9
            call .L_40e050

            movapd XMM1,XMM0
            mulsd XMM9,XMM9
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [R13+112]
            divsd XMM0,QWORD PTR [RSP+64]
            addsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM9,XMM10
            pxor XMM2,XMM2
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM9,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+56]
            subsd XMM1,XMM0
            ucomisd XMM2,XMM9
            sqrtsd XMM3,XMM9
            ja .L_414072
.L_413d1f:

            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+80],XMM2
            mov RSI,R15
            mov RDI,R14
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM2,QWORD PTR [RSP+32]
            subsd XMM2,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+248]
            movsd XMM4,QWORD PTR [RSP+240]
            movsd QWORD PTR [RSP+264],XMM7
            movsd QWORD PTR [RSP+272],XMM4
            movsd XMM2,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_4131d9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413db0:

            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM7
            ucomisd XMM2,XMM0
            ja .L_413f40

            movsd XMM7,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+80],XMM7
            jmp .L_413326
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413dd8:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+224],XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+208],XMM4
            movsd QWORD PTR [RSP+200],XMM3
            movsd QWORD PTR [RSP+216],XMM5
            movsd QWORD PTR [RSP+120],XMM6
            call atan2@PLT

            movsd XMM1,QWORD PTR [R13+128]
            movsd QWORD PTR [RSP+192],XMM0
            movsd XMM0,QWORD PTR [R13+120]
            call atan2@PLT

            movsd XMM6,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+112],XMM0
            mulsd XMM6,QWORD PTR [RSP+80]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+120],XMM0
            mulsd XMM5,QWORD PTR [R13+160]
            movsd XMM1,QWORD PTR [R13+168]
            movapd XMM0,XMM5
            call atan2@PLT

            movsd XMM8,QWORD PTR [RSP+192]
            mov EDX,5
            movsd XMM11,QWORD PTR [RSP+32]
            mov RSI,R14
            subsd XMM8,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [RSP+120]
            movapd XMM3,XMM11
            mov EDI,1
            subsd XMM7,XMM0
            subsd XMM3,XMM8
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSP+200]
            addsd XMM1,XMM7
            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+112],XMM3
            mulsd XMM7,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_40e050

            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+112]
            subsd XMM1,QWORD PTR [R13+216]
            movsd XMM4,QWORD PTR [RSP+208]
            movsd XMM5,QWORD PTR [RSP+216]
            movsd XMM2,QWORD PTR [RSP+224]
            addsd XMM1,XMM11
            mulsd XMM1,QWORD PTR [R13+192]
            addsd XMM1,XMM7
            divsd XMM1,QWORD PTR [RSP+104]
            addsd XMM1,QWORD PTR [R13+8]
            movsd QWORD PTR [RSP+80],XMM1
            jmp .L_413560
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413f40:

            movsd XMM7,QWORD PTR [RIP+.L_415940]
            movsd QWORD PTR [RSP+80],XMM7
            jmp .L_413326
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f58:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            movsd XMM6,QWORD PTR [RSP+80]
            ucomisd XMM0,XMM6
            jae .L_413560

            subsd XMM6,QWORD PTR [RIP+.L_415958]
            movsd QWORD PTR [RSP+80],XMM6
            jmp .L_413560
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f88:

            movsd XMM1,QWORD PTR [RIP+.L_415960]
            ucomisd XMM1,XMM0
            jae .L_4134ef

            subsd XMM0,QWORD PTR [RIP+.L_415958]
            jmp .L_4134ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413fb0:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM0,XMM6
            jae .L_413450

            subsd XMM6,QWORD PTR [RIP+.L_415958]
            jmp .L_413450
          .byte 0x90
.L_413fd0:

            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM2,XMM6
            movapd XMM6,XMM2
            movapd XMM2,XMM7
            mulsd XMM6,XMM1
            mulsd XMM2,XMM8
            addsd XMM2,XMM6
            jmp .L_413c4a
.L_413ff4:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM6
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            jmp .L_41322b
.L_414026:

            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+64],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [R13+96]
            movsd XMM1,QWORD PTR [R13+104]
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+96]
            jmp .L_413274
.L_414072:

            movapd XMM0,XMM9
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [R13+120]
            movsd XMM8,QWORD PTR [R13+128]
            movsd XMM10,QWORD PTR [R13+112]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_413d1f
.L_4140c6:

            call __stack_chk_fail@PLT
.L_4140cb:

            nop
            nop
            nop
            nop
            nop
.L_4140d0:

            sub RSP,8
            lea R9,QWORD PTR [RDI+64]
            movsd QWORD PTR [RDI+56],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_65fe78]
            push 0
            push 0
            xor R8D,R8D
            xor ECX,ECX
            push 0
            movsd QWORD PTR [RDI+64],XMM1
            push 0
            xor EDX,EDX
            mov ESI,1
            call .L_413070

            add RSP,40
            ret 
.L_414108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414110:

            push RBX
            movsd QWORD PTR [RDI+64],XMM0
            push 0
            push 0
            push 0
            xor R9D,R9D
            push 0
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            xor ESI,ESI
            mov RBX,RDI
            call .L_413070

            add RSP,32
            movsd QWORD PTR [RBX+56],XMM0
            pop RBX
            ret 
.L_41413d:

            nop
            nop
            nop
.L_414140:

            and ESI,1
            jne .L_414150

            jmp .L_414110
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414150:

            jmp .L_4140d0
.L_414155:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414160:

            push RBP
            push RBX
            mov EBP,EDX
            mov EDX,ECX
            mov RBX,RDI
            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM3
            call .L_412f70

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,24
            mov ESI,EBP
            mov RDI,RBX
            pop RBX
            pop RBP
            movapd XMM0,XMM3
            jmp .L_414140
.L_41418f:

            nop
.L_414190:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM3
            call .L_412f70

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,16
            mov RDI,RBX
            xor ESI,ESI
            pop RBX
            movapd XMM0,XMM3
            jmp .L_414140
.L_4141b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141c0:

            sub RSP,8
            mov R8,RCX
            xor R9D,R9D
            push 0
            push 0
            mov RCX,RDX
            push 0
            push 0
            mov RDX,RSI
            xor ESI,ESI
            call .L_413070

            add RSP,40
            ret 
.L_4141e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4141f0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            mov R13,RCX
            mov EBP,ESI
            sub RSP,584
.L_414209:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+568],RBX
            xor EBX,EBX
            test RDX,RDX
            mov R14,QWORD PTR [RSP+640]
            mov R15,QWORD PTR [RSP+648]
            setne DL
            mov RCX,QWORD PTR [RSP+656]
            mov RAX,QWORD PTR [RSP+664]
            movzx EDX,DL
            shl EDX,7
            mov ESI,EDX
            or ESI,264
            test R13,R13
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,512
            test R8,R8
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,1025
            test R9,R9
            cmovne EDX,ESI
            mov ESI,EDX
            or ESI,4101
            test R14,R14
            cmovne EDX,ESI
            test R15,R15
            jne .L_414340

            test RCX,RCX
            jne .L_414340
.L_414292:

            mov ESI,EDX
            lea RBX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+40],RCX
            or ESI,16400
            test RAX,RAX
            mov QWORD PTR [RSP+32],R9
            cmovne EDX,ESI
            mov QWORD PTR [RSP+24],R8
            movsd QWORD PTR [RSP+16],XMM3
            mov ESI,EDX
            mov QWORD PTR [RSP+8],RAX
            or ESI,2051
            test BPL,1
            cmove EDX,ESI
            mov RSI,RDI
            mov RDI,RBX
            call .L_412f70

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,R12
            mov ESI,EBP
            mov RDI,RBX
            push RAX
.L_4142e7:

            mov RCX,QWORD PTR [RSP+48]
            push RCX
            push R15
            mov RCX,R13
            push R14
            mov R9,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM3
            call .L_413070

            add RSP,32
            mov RAX,QWORD PTR [RSP+568]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41434b

            add RSP,584
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414340:

            or EDX,8197
            jmp .L_414292
.L_41434b:

            call __stack_chk_fail@PLT
.L_414350:

            sub RSP,8
            mov R8,RCX
            xor R9D,R9D
            push 0
            push 0
            mov RCX,RDX
            push 0
            push 0
            mov RDX,RSI
            xor ESI,ESI
            call .L_4141f0

            add RSP,40
            ret 
.L_414374:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414380:

            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RCX
            sub RSP,72
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+24]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push R9
            push R8
            lea R9,QWORD PTR [RSP+80]
            lea R8,QWORD PTR [RSP+72]
            call .L_40f580

            movsd QWORD PTR [RSP+40],XMM0
            add RSP,32
.L_4143cb:

            test RBP,RBP
            je .L_4143e6

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40e910

            movsd QWORD PTR [RBP],XMM0
.L_4143e6:

            test RBX,RBX
            je .L_414400

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+40]
            call .L_40e910

            movsd QWORD PTR [RBX],XMM0
.L_414400:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM0,QWORD PTR [RSP+8]
            jne .L_41441d

            add RSP,72
.L_41441a:

            pop RBX
            pop RBP
            ret 
.L_41441d:

            call __stack_chk_fail@PLT
.L_414422:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414430:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EBX,EDX
            xor R9D,R9D
            xor R8D,R8D
            xor ESI,ESI
            mov RBP,RDI
            sub RSP,64
            mov RDI,R12
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+40]
            push 0
            push 0
            push 0
            push 0
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM0
            call .L_40f580

            movsd QWORD PTR [RSP+40],XMM0
            add RSP,32
.L_414488:

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+40]
            call .L_40e910

            test EBX,EBX
            movapd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            je .L_414508

            mov EAX,EBX
            or EAX,1025
            test BH,8
            cmovne EBX,EAX
.L_4144ba:

            movapd XMM0,XMM5
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            mov EDX,EBX
            movapd XMM1,XMM6
            mov RSI,R12
            mov RDI,RBP
            call .L_40ea90

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_4140d0

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41450f

            add RSP,64
.L_4144fd:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414508:

            mov EBX,3339
            jmp .L_4144ba
.L_41450f:

            call __stack_chk_fail@PLT
.L_414514:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414520:

            sub RSP,8
            xor R9D,R9D
            xor R8D,R8D
            push 0
            push 0
            call .L_414380

            add RSP,24
            ret 
.L_414538:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414540:

            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            xor EAX,EAX
            test ESI,ESI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+48],0
            setne AL
            movsd QWORD PTR [RDI+8],XMM0
            mov QWORD PTR [RDI+40],0
            mov DWORD PTR [RDI+64],EAX
            movsd QWORD PTR [RDI],XMM0
            mov QWORD PTR [RDI+32],0
            movsd QWORD PTR [RDI+24],XMM0
            mov QWORD PTR [RDI+68],0
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_41458e:

            nop
            nop
.L_414590:

            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],0
            movsd QWORD PTR [RDI+8],XMM0
            mov QWORD PTR [RDI+32],0
            mov QWORD PTR [RDI+68],0
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+24],XMM0
            movsd QWORD PTR [RDI+16],XMM0
            ret 
.L_4145d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4145e0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,88
.L_4145ec:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_415958]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call fmod@PLT

            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415950]
            ucomisd XMM0,XMM4
            jb .L_4146e8

            addsd XMM4,QWORD PTR [RIP+.L_415958]
.L_414630:

            mov EAX,DWORD PTR [RBX+72]
            test EAX,EAX
            je .L_41470d
.L_41463b:

            mov EDX,DWORD PTR [RBX+64]
            xor EAX,EAX
            mov QWORD PTR [RSP+32],0
            test EDX,EDX
            jne .L_414652

            lea RAX,QWORD PTR [RSP+32]
.L_414652:

            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+24]
            push RAX
.L_414662:

            push 0
            mov RDI,RBP
            push 0
            push 0
            movapd XMM3,XMM4
            movsd XMM1,QWORD PTR [RBX+8]
            lea R9,QWORD PTR [RSP+96]
            lea R8,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+40],XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX]
            call .L_40f580

            add RSP,32
.L_414697:

            lea RDI,QWORD PTR [RBX+48]
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40e350

            mov EAX,DWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RSP+8]
            test EAX,EAX
            je .L_414730
.L_4146b3:

            movsd XMM6,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RBX+72]
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX],XMM6
.L_4146c4:

            add EAX,1
            mov DWORD PTR [RBX+72],EAX
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414761

            add RSP,88
.L_4146e2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4146e8:

            movsd XMM0,QWORD PTR [RIP+.L_415960]
            ucomisd XMM0,XMM4
            jae .L_414630

            mov EAX,DWORD PTR [RBX+72]
            subsd XMM4,QWORD PTR [RIP+.L_415958]
            test EAX,EAX
            jne .L_41463b
.L_41470d:

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX],XMM5
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+24],XMM4
            jmp .L_4146c4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414730:

            lea RDI,QWORD PTR [RBX+32]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_40e350

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RBX+8]
            movapd XMM1,XMM4
            call .L_40e5d0

            movsd XMM4,QWORD PTR [RSP+8]
            add DWORD PTR [RBX+68],EAX
            jmp .L_4146b3
.L_414761:

            call __stack_chk_fail@PLT
.L_414766:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414770:

            push RBX
            sub RSP,48
.L_414775:

            mov R8D,DWORD PTR [RSI+72]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test R8D,R8D
            je .L_414820

            mov EDX,DWORD PTR [RSI+64]
            lea RAX,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+32],0
            mov RBX,RSI
            mov ESI,32768
            movapd XMM3,XMM1
            test EDX,EDX
            mov EDX,0
            cmovne RAX,RDX
            lea RDX,QWORD PTR [RSP+16]
            xor R9D,R9D
            push RAX
.L_4147c8:

            push 0
            xor R8D,R8D
            push 0
            push 0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+40],XMM1
            movsd XMM1,QWORD PTR [RBX+8]
            call .L_4141f0

            add RSP,32
.L_4147ed:

            movsd XMM4,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+48]
            movapd XMM0,XMM4
            call .L_40e350

            mov ECX,DWORD PTR [RBX+64]
            test ECX,ECX
            je .L_414840
.L_414807:

            movsd XMM0,QWORD PTR [RSP+16]
            add DWORD PTR [RBX+72],1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX+8],XMM0
.L_414820:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414864

            add RSP,48
.L_414834:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414840:

            lea RDI,QWORD PTR [RBX+32]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_40e350

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RBX+8]
            call .L_40e700

            add DWORD PTR [RBX+68],EAX
            jmp .L_414807
.L_414864:

            call __stack_chk_fail@PLT
.L_414869:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414870:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov RBP,R8
            sub RSP,104
.L_414887:

            mov EDX,DWORD PTR [RSI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            cmp EAX,1
            jbe .L_414a50

            test EDX,EDX
            mov RBX,RSI
            je .L_4148e0

            test R9,R9
            je .L_4148bc

            movsd XMM0,QWORD PTR [RSI+48]
            movsd QWORD PTR [R9],XMM0
.L_4148bc:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_414ada

            add RSP,104
.L_4148d4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4148e0:

            lea RAX,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RSP+16]
            mov R12D,ECX
            lea RCX,QWORD PTR [RSP+40]
            mov R15,RDI
            push RAX
            push 0
            push 0
            push 0
            movsd XMM3,QWORD PTR [RBX+24]
            lea R9,QWORD PTR [RSP+88]
            lea R8,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RBX]
            call .L_40f580

            add RSP,32
            test R14,R14
            lea RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RDI
            je .L_414961

            movsd XMM0,QWORD PTR [RBX+48]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RBX+56]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            call .L_40e350

            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [R14],XMM0
.L_414961:

            movsd XMM0,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            call .L_40e350

            movsd XMM1,QWORD PTR [RBX+24]
            mov R14D,DWORD PTR [RBX+68]
            movsd XMM0,QWORD PTR [RBX+8]
            call .L_40e5d0

            movsd XMM1,QWORD PTR [RIP+.L_4159a8]
            add R14D,EAX
            and R14D,1
            mulsd XMM1,QWORD PTR [RIP+.L_65fe88]
            mulsd XMM1,QWORD PTR [R15+56]
            je .L_4149ed

            pxor XMM2,XMM2
            movapd XMM0,XMM1
            ucomisd XMM2,QWORD PTR [RSP+64]
            ja .L_4149d0

            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
.L_4149d0:

            mov RDI,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_415980]
            call .L_40e350

            movsd XMM1,QWORD PTR [RSP+8]
.L_4149ed:

            test R13D,R13D
            movsd XMM2,QWORD PTR [RSP+64]
            jne .L_414a1a

            movq XMM3,QWORD PTR [RIP+.L_415910]
            movsd XMM0,QWORD PTR [RSP+72]
            xorpd XMM2,XMM3
            xorpd XMM0,XMM3
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+72],XMM0
.L_414a1a:

            test R12D,R12D
            jne .L_414a80

            ucomisd XMM2,XMM1
            jae .L_414ac0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_414aac
.L_414a33:

            test RBP,RBP
            je .L_414a47

            pxor XMM0,XMM0
            addsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBP],XMM0
.L_414a47:

            mov EAX,DWORD PTR [RBX+72]
            jmp .L_4148bc
          .byte 0x90
.L_414a50:

            test R9,R9
            je .L_414a5c

            mov QWORD PTR [R9],0
.L_414a5c:

            test EDX,EDX
            jne .L_4148bc

            test RBP,RBP
            je .L_4148bc

            mov QWORD PTR [RBP],0
            jmp .L_4148bc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414a80:

            movsd XMM3,QWORD PTR [RIP+.L_415980]
            movapd XMM4,XMM1
            movapd XMM0,XMM1
            mulsd XMM4,XMM3
            xorpd XMM0,XMMWORD PTR [RIP+.L_415910]
            ucomisd XMM2,XMM4
            ja .L_414ab0

            mulsd XMM0,XMM3
            ucomisd XMM0,XMM2
            jb .L_414a33
.L_414aac:

            movapd XMM0,XMM1
.L_414ab0:

            mov RDI,QWORD PTR [RSP]
            call .L_40e350

            jmp .L_414a33
          .byte 0x66
          .byte 0x90
.L_414ac0:

            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
            mov RDI,QWORD PTR [RSP]
            movapd XMM0,XMM1
            call .L_40e350

            jmp .L_414a33
.L_414ada:

            call __stack_chk_fail@PLT
.L_414adf:

            nop
.L_414ae0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_414af1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            mov DWORD PTR [RSP+76],ECX
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            mov DWORD PTR [RSP+72],EDX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+48],R9
            add EAX,1
            mov ECX,EAX
            mov DWORD PTR [RSP+60],EAX
            mov EAX,DWORD PTR [RSI+64]
            cmp ECX,1
            je .L_414cf0

            pxor XMM7,XMM7
            test EAX,EAX
            mov RBX,RDI
            movsd XMM6,QWORD PTR [RSI+48]
            mov R12,RSI
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            je .L_414ce0
.L_414b5c:

            lea RDI,QWORD PTR [RSP+96]
            mov EBP,DWORD PTR [R12+68]
            xor R15D,R15D
            lea R14,QWORD PTR [RSP+128]
            lea R13,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],RDI
            lea RDI,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+32],RDI
            jmp .L_414c2f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b90:

            test R15D,R15D
            jne .L_414e00

            mov QWORD PTR [RSP+96],0
            xor EAX,EAX
.L_414ba4:

            lea RDX,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+88]
            push RAX
.L_414baf:

            push 0
            push 0
            mov R9,R14
            push 0
.L_414bb8:

            mov RCX,QWORD PTR [RSP+64]
            mov R8,R13
            movsd XMM1,QWORD PTR [R12+8]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [R12]
            call .L_40f580

            movsd XMM5,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R12+64]
            addsd XMM5,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+32],XMM5
            add RSP,32
.L_414bfc:

            test EAX,EAX
            jne .L_414c2b

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [R12+8]
            addsd XMM6,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM6
.L_414c1f:

            call .L_40e5d0

            add EBP,EAX
            mov EAX,DWORD PTR [R12+64]
.L_414c2b:

            add R15D,1
.L_414c2f:

            test EAX,EAX
            jne .L_414b90

            cmp R15D,2
            je .L_414d48

            test R15D,R15D
            mov QWORD PTR [RSP+96],0
            je .L_414ebc

            lea RDX,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+88]
            push QWORD PTR [RSP+40]
.L_414c61:

            push 0
            push 0
            mov R9,R14
            push 0
.L_414c6a:

            mov RCX,QWORD PTR [RSP+64]
            mov R8,R13
            movsd XMM3,QWORD PTR [R12+24]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [R12+16]
            call .L_40f580

            movsd XMM4,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [R12+64]
            addsd XMM4,QWORD PTR [RSP+120]
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
.L_414caf:

            test EAX,EAX
            jne .L_414c2b

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [R12+24]
            addsd XMM7,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_414c1f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414ce0:

            movsd XMM3,QWORD PTR [RSI+32]
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_414b5c
.L_414cf0:

            test R9,R9
            je .L_414cfc

            mov QWORD PTR [R9],0
.L_414cfc:

            mov RBX,QWORD PTR [RSP+64]
            test RBX,RBX
            je .L_414d18

            test EAX,EAX
            jne .L_414d18

            mov QWORD PTR [RBX],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d18:

            mov RBX,QWORD PTR [RSP+136]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+60]
            jne .L_414eb7

            add RSP,152
.L_414d3a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414d48:

            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            jne .L_414e50
.L_414d56:

            movsd XMM0,QWORD PTR [RIP+.L_4159a8]
            and EBP,1
            mulsd XMM0,QWORD PTR [RIP+.L_65fe88]
            mulsd XMM0,QWORD PTR [RBX+56]
            je .L_414d9c

            pxor XMM2,XMM2
            movapd XMM1,XMM0
            ucomisd XMM2,QWORD PTR [RSP+8]
            ja .L_414d88

            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
.L_414d88:

            mulsd XMM1,QWORD PTR [RIP+.L_415980]
            addsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM1
.L_414d9c:

            mov EDX,DWORD PTR [RSP+72]
            test EDX,EDX
            jne .L_414db8

            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM7,XMMWORD PTR [RIP+.L_415910]
            movsd QWORD PTR [RSP+8],XMM7
.L_414db8:

            mov EAX,DWORD PTR [RSP+76]
            test EAX,EAX
            jne .L_414e20

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jb .L_414e60

            subsd XMM7,XMM0
            movsd QWORD PTR [RSP+8],XMM7
.L_414dda:

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_414d18

            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_415930]
            movsd QWORD PTR [RAX],XMM0
            jmp .L_414d18
          .byte 0x90
.L_414e00:

            cmp QWORD PTR [RSP+48],0
            je .L_414d18

            mov RAX,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM6
            jmp .L_414d18
          .byte 0x90
.L_414e20:

            movsd XMM1,QWORD PTR [RIP+.L_415980]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM1
            ucomisd XMM3,XMM2
            jbe .L_414e88

            subsd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM3
            jmp .L_414dda
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414e50:

            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RAX],XMM2
            jmp .L_414d56
          .byte 0x66
          .byte 0x90
.L_414e60:

            pxor XMM1,XMM1
            ucomisd XMM1,QWORD PTR [RSP+8]
            jbe .L_414dda

            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_414dda
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414e88:

            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            xorpd XMM2,XMMWORD PTR [RIP+.L_415910]
            mulsd XMM1,XMM2
            ucomisd XMM1,XMM3
            jb .L_414dda

            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_414dda
.L_414eb7:

            call __stack_chk_fail@PLT
.L_414ebc:

            mov RAX,QWORD PTR [RSP+40]
            jmp .L_414ba4
.L_414ec6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414ed0:

            push R15
            push R14
            push R13
            push R12
            mov R13,R8
            push RBP
            push RBX
            mov R12,R9
            sub RSP,120
.L_414ee4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RSI+72]
            lea EBP,DWORD PTR [RAX+1]
            mov EAX,DWORD PTR [RSI+64]
            cmp EBP,1
            je .L_415120

            movsd XMM5,QWORD PTR [RSI+48]
            test EAX,EAX
            mov RBX,RSI
            addsd XMM5,XMM1
            je .L_414f48

            test R9,R9
            je .L_414f20

            movsd QWORD PTR [R9],XMM5
.L_414f20:

            mov RDI,QWORD PTR [RSP+104]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_415189

            add RSP,120
.L_414f3a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414f48:

            mov EAX,DWORD PTR [RSI+68]
            lea R11,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM4,QWORD PTR [RSI+32]
            mov DWORD PTR [RSP+28],EDX
            mov R15D,ECX
            lea RDX,QWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM4
            mov DWORD PTR [RSP+24],EAX
            push R11
            movapd XMM3,XMM1
            xor R9D,R9D
            mov QWORD PTR [RSP+16],R11
            movapd XMM2,XMM0
            push 0
            movsd XMM1,QWORD PTR [RBX+8]
            push 0
            movsd XMM0,QWORD PTR [RBX]
            push 0
            xor R8D,R8D
            mov ESI,32768
            mov R14,RDI
            call .L_4141f0

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RBX+8]
            addsd XMM4,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
            movsd XMM1,QWORD PTR [RSP+48]
            call .L_40e700

            add EAX,DWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+56]
            mov RDI,R14
            movsd XMM3,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+24],EAX
            push R11
            push 0
            push 0
            push 0
.L_414ffd:

            lea R9,QWORD PTR [RSP+128]
            lea R8,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+72]
            call .L_40f580

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+88]
            addsd XMM4,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            add RSP,32
.L_415042:

            movsd XMM0,QWORD PTR [RSP+48]
            call .L_40e5d0

            movsd XMM0,QWORD PTR [RIP+.L_4159a8]
            add EAX,DWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP]
            mov R10D,DWORD PTR [RSP+28]
            mulsd XMM0,QWORD PTR [RIP+.L_65fe88]
            movsd XMM5,QWORD PTR [RSP+16]
            test AL,1
            mulsd XMM0,QWORD PTR [R14+56]
            je .L_41509d

            pxor XMM3,XMM3
            movapd XMM1,XMM0
            ucomisd XMM3,XMM4
            ja .L_415091

            xorpd XMM1,XMMWORD PTR [RIP+.L_415910]
.L_415091:

            mulsd XMM1,QWORD PTR [RIP+.L_415980]
            addsd XMM4,XMM1
.L_41509d:

            test R10D,R10D
            jne .L_4150aa

            xorpd XMM4,XMMWORD PTR [RIP+.L_415910]
.L_4150aa:

            test R15D,R15D
            je .L_415160

            movsd XMM1,QWORD PTR [RIP+.L_415980]
            movapd XMM3,XMM0
            mulsd XMM3,XMM1
            ucomisd XMM4,XMM3
            ja .L_415180

            movapd XMM3,XMM0
            xorpd XMM3,XMMWORD PTR [RIP+.L_415910]
            mulsd XMM1,XMM3
            ucomisd XMM1,XMM4
            jae .L_415174

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4150f0:

            test R12,R12
            je .L_415101

            addsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12],XMM5
.L_415101:

            test R13,R13
            je .L_414f20

            pxor XMM2,XMM2
            addsd XMM2,XMM4
            movsd QWORD PTR [R13],XMM2
            jmp .L_414f20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415120:

            test R9,R9
            je .L_415132

            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            movsd QWORD PTR [R9],XMM0
.L_415132:

            test EAX,EAX
            jne .L_415150

            test R13,R13
            je .L_415150

            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            xor EBP,EBP
            movsd QWORD PTR [R13],XMM0
            jmp .L_414f20
.L_415150:

            xor EBP,EBP
            jmp .L_414f20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415160:

            ucomisd XMM4,XMM0
            jae .L_415180

            pxor XMM1,XMM1
            ucomisd XMM1,XMM4
            jbe .L_4150f0
.L_415174:

            addsd XMM4,XMM0
            jmp .L_4150f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415180:

            subsd XMM4,XMM0
            jmp .L_4150f0
.L_415189:

            call __stack_chk_fail@PLT
.L_41518e:

            nop
            nop
.L_415190:

            push R15
            push R14
            mov R14,R9
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_4151a4:

            movsd XMM0,QWORD PTR [RIP+.L_65fe78]
            mov QWORD PTR [RSP+8],R8
            lea R12,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            test ECX,ECX
            movsd QWORD PTR [RSP+24],XMM0
            mov QWORD PTR [RSP+48],0
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            movsd QWORD PTR [RSP+40],XMM0
            mov QWORD PTR [RSP+72],0
            movsd QWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+80],0
            mov DWORD PTR [RSP+88],0
            jle .L_415252

            mov RBX,RDX
            lea EDX,DWORD PTR [RCX-1]
            lea R12,QWORD PTR [RSP+16]
            mov R13,RSI
            lea R15,QWORD PTR [RBX+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_415230:

            movsd XMM1,QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [R13]
            add RBX,8
            add R13,8
            call .L_4145e0

            cmp RBX,R15
            jne .L_415230
.L_415252:

            mov R8,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov R9,R14
            mov ECX,1
            mov RSI,R12
            mov RDI,RBP
            call .L_414870

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41528b

            add RSP,120
.L_415280:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41528b:

            call __stack_chk_fail@PLT
.L_415290:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4152a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x41
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x53
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415340:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xaf
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x6c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0xbc
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xa5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0xab
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x98
          .byte 0xe2
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4153e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415480:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xcd
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x63
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xb2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
.L_4154be:

            cwde 
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            movabs AL,BYTE PTR [4253182]
            rol AH,1
            rol BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+16587],AH
            add BYTE PTR [RAX],AL
            add AL,AH
            mov CL,192
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,DL
            mov AL,AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            movabs AL,BYTE PTR [4253182]
            add BYTE PTR [RAX+64],DL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+16515],AL
            add BYTE PTR [RAX],AL
            add AL,AH
            mov CL,192
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,DL
.L_41550e:

            mov EDX,64
            add BYTE PTR [RAX],AL
            jbe .L_4154be

            rol BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            adc BYTE PTR [RBX-51],64
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            pop RCX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            push 64
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,AH
            add DWORD PTR [RAX],0
            shr BYTE PTR [RDX+64],1
            add BYTE PTR [RAX],AL
            jbe .L_41550e
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xdd
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xfe
          .byte 0xe5
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x98
          .byte 0xc1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x7d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0xb6
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x90
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x94
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb7
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc6
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xc1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0xa4
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x83
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0xba
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0xa7
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xf2
          .byte 0xc4
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8d
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xb3
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x91
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x96
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xb0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xb1
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x9a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x7e
          .byte 0xb
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xca
          .byte 0xee
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xa9
          .byte 0xf9
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x91
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3e
          .byte 0x13
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x7e
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0xbe
          .byte 0x18
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x31
          .byte 0xf8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415700:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415880:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_415910:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415920:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415930:
          .zero 8
.L_415938:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_415940:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_415948:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
.L_415950:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0xc0
.L_415958:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0x40
.L_415960:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_415968:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x40
.L_415970:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x76
          .byte 0xc0
.L_415978:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_415980:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_415988:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_415990:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3f
.L_415998:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x40
.L_4159a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x69
          .byte 0x40
.L_4159a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_4159b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x40
.L_4159b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3f
.L_4159c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0xc0
.L_4159c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x40
.L_4159d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x40
.L_4159d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_4159e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_4159e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0xc0
.L_4159f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_4159f8:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
.L_415a00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_415a08:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0xbf
.L_415a10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_415a18:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_415a20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
.L_415a28:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_415a30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x40
.L_415a38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x3f
.L_415a40:
          .byte 0x1b
          .byte 0xd
          .byte 0xe0
          .byte 0x2d
          .byte 0x90
          .byte 0xa0
          .byte 0xe6
          .byte 0xbf
.L_415a48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x3e
.L_415a50:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
.L_415a58:
          .byte 0xe1
          .byte 0x57
          .byte 0x66
          .byte 0xd1
          .byte 0xb7
          .byte 0xe5
          .byte 0x96
          .byte 0x3f
.L_415a60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_415a68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0xc0
.L_415a70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x53
          .byte 0xcd
          .byte 0x40
.L_415a78:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x58
          .byte 0x40
.L_415a80:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_415a88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
.L_415a90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3c
.L_415a98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x3d
.L_415aa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3b
.L_415aa8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xef
          .byte 0x3e
.L_415ab0:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_415ab8:
          .byte 0x7b
          .byte 0x14

            scasb AL,BYTE PTR [RDI]
            loope 88328
            test BYTE PTR [RDI],BH
.L_415ac0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,104
.L_415ad4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call localeconv@PLT

            test RAX,RAX
            je .L_415bc0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_415bc0

            movzx R12D,BYTE PTR [RAX]
            test R12B,R12B
            je .L_415bc0

            cmp R12B,46
            je .L_415bc0

            movsx ESI,R12B
            mov RDI,RBP
            call strchr@PLT

            mov ESI,46
            mov RDI,RBP
            mov R14,RAX
            call strchr@PLT

            test RAX,RAX
            mov R8,RAX
            jne .L_415b42

            test R14,R14
            je .L_415bc0
.L_415b42:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call strlen@PLT

            cmp RAX,63
            mov R8,QWORD PTR [RSP+8]
            ja .L_415c30

            lea R13,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+1]
            mov ECX,64
            mov RSI,RBP
            xor R15D,R15D
            mov RDI,R13
            call __memcpy_chk@PLT

            mov R8,QWORD PTR [RSP+8]
.L_415b7f:

            test R14,R14
            je .L_415b92

            sub R14,RBP
            test R8,R8
            mov BYTE PTR [R13+R14*1],32
            je .L_415b9a
.L_415b92:

            sub R8,RBP
            mov BYTE PTR [R13+R8*1],R12B
.L_415b9a:

            mov RSI,RBX
            mov RDI,R13
            call strtod@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            mov R14D,DWORD PTR [RAX]
            jne .L_415be7

            jmp .L_415bf3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415bc0:

            mov RSI,RBX
            mov RDI,RBP
            xor R15D,R15D
            call strtod@PLT

            movsd QWORD PTR [RSP+8],XMM0
            mov R13,RBP
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            mov R14D,DWORD PTR [RAX]
            je .L_415c00
.L_415be7:

            mov RDX,QWORD PTR [RBX]
            sub RDX,R13
            add RBP,RDX
            mov QWORD PTR [RBX],RBP
.L_415bf3:

            test R15B,R15B
            je .L_415c00

            mov RDI,R13
            call free@PLT
.L_415c00:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            mov DWORD PTR [R12],R14D
            movsd XMM0,QWORD PTR [RSP+8]
            jne .L_415c51

            add RSP,104
.L_415c1e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c30:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call strdup@PLT

            cmp RBP,RAX
            mov R13,RAX
            mov R8,QWORD PTR [RSP+8]
            setne R15B
            jmp .L_415b7f
.L_415c51:

            call __stack_chk_fail@PLT
.L_415c56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415c60:

            xor ESI,ESI
            jmp .L_415ac0
.L_415c67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415c70:

            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM1
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+24],XMM3
            ret 
.L_415c87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415c90:

            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            mov DWORD PTR [RDI+56],ESI
            movsd QWORD PTR [RDI+8],XMM1
            mov DWORD PTR [RDI+60],EDX
            movsd QWORD PTR [RDI+16],XMM2
            movsd QWORD PTR [RDI+24],XMM3
            movsd QWORD PTR [RDI+32],XMM4
            movsd QWORD PTR [RDI+40],XMM5
            movsd QWORD PTR [RDI+48],XMM6
            ret 
.L_415cbc:

            nop
            nop
            nop
            nop
.L_415cc0:

            sub RSP,40
.L_415cc4:

            movapd XMM7,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_417538]
            mov RDI,QWORD PTR [RDI+24]
            movapd XMM6,XMM0
            lea RCX,QWORD PTR [RSP+16]
            mulsd XMM3,XMM5
            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RSP
            mulsd XMM1,XMM5
            mulsd XMM7,XMM5
            mulsd XMM6,XMM5
            movsd XMM4,QWORD PTR [RIP+.L_417540]
            movapd XMM2,XMM3
            movapd XMM0,XMM1
            divsd XMM7,XMM4
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            divsd XMM6,XMM4
            movapd XMM3,XMM7
            divsd XMM0,XMM4
            movapd XMM1,XMM6
            divsd XMM2,XMM4
            call .L_414520

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM0,QWORD PTR [RSP]
            jne .L_415d4c

            add RSP,40
.L_415d4b:

            ret 
.L_415d4c:

            call __stack_chk_fail@PLT
.L_415d51:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d60:

            subsd XMM0,XMM2
            subsd XMM1,XMM3
            jmp hypot@PLT
.L_415d6d:

            nop
            nop
            nop
.L_415d70:

            sub RSP,24
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            subsd XMM2,QWORD PTR [RSP+72]
            subsd XMM0,QWORD PTR [RSP+56]
            subsd XMM1,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM2
            jmp hypot@PLT
.L_415db6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415dc0:

            test RDI,RDI
            je .L_415dd0

            jmp .L_4034d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415dd0:

            sub RSP,24
            mov QWORD PTR [RSP+8],RSI
            call .L_404a50

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RAX
            add RSP,24
            jmp .L_4034d0
.L_415def:

            nop
.L_415df0:

            test RDI,RDI
            je .L_415e00

            jmp .L_402540
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415e00:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+4],ESI
            call .L_404a50

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RSP+4]
            mov RDI,RAX
            add RSP,24
            jmp .L_402540
.L_415e27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415e30:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov EDX,485
            mov RBP,RDI
            mov ECX,512
            sub RSP,528
.L_415e4b:

            mov RBX,RSP
            movdqa XMM0,XMMWORD PTR [RIP+.L_417560]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            mov RDI,RBX
            movabs RAX,7955937635051336819
            mov DWORD PTR [RSP+24],4027497
            movaps XMMWORD PTR [RSP],XMM0
            mov QWORD PTR [RSP+16],RAX
            call __strncat_chk@PLT

            mov RDX,RBX
.L_415e8f:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_415e8f

            mov ECX,EAX
            lea RSI,QWORD PTR [RIP+.L_4174b5]
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov EDI,EAX
            cmove RDX,RCX
            add DIL,AL
            mov RAX,RBX
            sbb RDX,3
            mov ECX,512
            mov RDI,RBX
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+512]
            call __strncat_chk@PLT

            mov RDX,RBX
.L_415ee8:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_415ee8

            mov ECX,EAX
            mov RDI,RBX
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov ESI,EAX
            cmove RDX,RCX
            add SIL,AL
            mov RAX,RBX
            sbb RDX,3
            mov ECX,512
            mov RSI,R12
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+512]
            call __strncat_chk@PLT

            test RBP,RBP
            jne .L_415f47

            call .L_404a50

            mov RBP,RAX
.L_415f47:

            mov RDI,RBP
            mov RSI,RBX
            call .L_4034d0

            mov RDI,QWORD PTR [RSP+520]
            xor RDI,QWORD PTR FS:[40]
            jne .L_415f71

            add RSP,528
.L_415f6c:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_415f71:

            call __stack_chk_fail@PLT
.L_415f76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f80:

            sub RSP,8
            call .L_4024b0

            xor EAX,EAX
            add RSP,8
            ret 
.L_415f90:

            sub RSP,8
            test RDI,RDI
            je .L_415fc0

            mov EAX,DWORD PTR [RDI+120]
            test EAX,EAX
            je .L_415fa8

            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415fa8:

            call .L_404a30

            add RSP,8
            mov RDI,RAX
            jmp .L_404ae0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415fc0:

            call .L_404a50

            add RSP,8
            mov RDI,RAX
            jmp .L_404ae0
.L_415fd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415fe0:

            test RDI,RDI
            push RBX
            je .L_416010

            test ESI,ESI
            mov EBX,ESI
            jne .L_415ff0

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_415ff0:

            mov DWORD PTR [RDI+120],ESI
            call .L_404a30

            mov ESI,EBX
            mov RDI,RAX
            call .L_41e010

            call __errno_location@PLT

            mov DWORD PTR [RAX],EBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416010:

            call __errno_location@PLT

            mov DWORD PTR [RAX],22
            pop RBX
            ret 
.L_41601d:

            nop
            nop
            nop
.L_416020:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_416031:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_416210

            test EDX,EDX
            mov RBX,RDI
            mov R13D,EDX
            jle .L_41608f

            movdqu XMM0,XMMWORD PTR [RSP+208]
            lea R15,QWORD PTR [RSP+64]
            mov R12D,ESI
            xor EBP,EBP
            mov R14,RSP
            movaps XMMWORD PTR [RSP],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movaps XMMWORD PTR [RSP+16],XMM0
.L_41607f:

            cmp R12D,-1
            je .L_4161a8

            cmp R12D,1
            je .L_4160d0
.L_41608f:

            mov ESI,22
            mov RDI,RBX
            call .L_415fe0

            movsd XMM0,QWORD PTR [RIP+.L_417548]
.L_4160a4:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41621d

            add RSP,152
.L_4160c2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4160d0:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RSI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,R15
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41d830

            add RSP,64
            mov RSI,RBX
            mov RDI,R14
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41d9f0

            add RSP,64
.L_41612e:

            add EBP,1
            cmp R13D,EBP
            jne .L_41607f

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41621d

            mov RAX,QWORD PTR [RSP+224]
            movdqu XMM0,XMMWORD PTR [RSP+208]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [RSP+16]
            movups XMMWORD PTR [RSP+232],XMM0
            movdqa XMM0,XMMWORD PTR [RSP]
            mov QWORD PTR [RSP+224],RAX
            movups XMMWORD PTR [RSP+208],XMM0
            add RSP,152
.L_416193:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_415d70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4161a8:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RSI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,R15
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41d9f0

            add RSP,64
            mov RSI,RBX
            mov RDI,R14
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41d830

            add RSP,64
            jmp .L_41612e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416210:

            movsd XMM0,QWORD PTR [RIP+.L_417548]
            jmp .L_4160a4
.L_41621d:

            call __stack_chk_fail@PLT
.L_416222:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416230:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_416238:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_416298

            test EDX,EDX
            je .L_416298

            cmp EDX,1
            mov RDI,RSI
            je .L_4162c8

            cmp EDX,-1
            je .L_416300

            mov ESI,22
            call .L_415fe0

            mov RDI,RBX
            call .L_41d7f0

            nop
            nop
            nop
            nop
.L_416278:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_416331

            add RSP,16
.L_416293:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416298:

            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_416278
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4162c8:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            mov RDI,RBX
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_41d830

            add RSP,64
            jmp .L_416278
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416300:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            mov RDI,RBX
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_41d9f0

            add RSP,64
            jmp .L_416278
.L_416331:

            call __stack_chk_fail@PLT
.L_416336:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416340:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_41634e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_416418

            mov R12,RDI
            mov R14D,ESI
            mov R13,RDX
            mov RBX,RCX
            xor EBP,EBP
            mov R15,RSP
            jmp .L_416391
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416380:

            add RBP,1
            add RBX,64
            cmp R13,RBP
            je .L_416418
.L_416391:

            push QWORD PTR [RBX+56]
.L_416394:

            push QWORD PTR [RBX+48]
            mov EDX,R14D
            push QWORD PTR [RBX+40]
            push QWORD PTR [RBX+32]
            mov RSI,R12
            push QWORD PTR [RBX+24]
            push QWORD PTR [RBX+16]
            mov RDI,R15
            push QWORD PTR [RBX+8]
            push QWORD PTR [RBX]
            call .L_416230

            movdqu XMM0,XMMWORD PTR [RSP+64]
            mov RDI,R12
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
            call .L_415f90

            test EAX,EAX
            je .L_416380

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416439

            add RSP,88
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_415f90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416418:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_416439

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416439:

            call __stack_chk_fail@PLT
.L_41643e:

            nop
            nop
.L_416440:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_416448:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_4164a0

            test EDX,EDX
            je .L_4164a0

            cmp EDX,1
            mov RDI,RSI
            je .L_4164b8

            cmp EDX,-1
            je .L_4164e0

            mov ESI,22
            call .L_415fe0

            mov RDI,RBX
            call .L_41d7d0
.L_416480:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4164fe

            add RSP,16
.L_416497:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4164a0:

            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_416480
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4164b8:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41dbb0

            add RSP,32
            jmp .L_416480
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4164e0:

            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            mov RDI,RBX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_41dd80

            add RSP,32
            jmp .L_416480
.L_4164fe:

            call __stack_chk_fail@PLT
.L_416503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416510:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_41651e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_4165c0

            mov R12,RDI
            mov R14D,ESI
            mov R13,RDX
            mov RBX,RCX
            xor EBP,EBP
            mov R15,RSP
            jmp .L_41655d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416550:

            add RBP,1
            add RBX,32
            cmp R13,RBP
            je .L_4165c0
.L_41655d:

            push QWORD PTR [RBX+24]
.L_416560:

            push QWORD PTR [RBX+16]
            mov EDX,R14D
            push QWORD PTR [RBX+8]
            push QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,R15
            call .L_416440

            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov RDI,R12
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            call .L_415f90

            test EAX,EAX
            je .L_416550

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4165e1

            add RSP,56
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_415f90
          .byte 0x90
.L_4165c0:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4165e1

            add RSP,56
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4165e1:

            call __stack_chk_fail@PLT
.L_4165e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4165f0:

            push R15
            push R14
            mov RAX,RDI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,R8
            mov R14,R9
            sub RSP,168
.L_41660f:

            movdqu XMM0,XMMWORD PTR [RIP+.L_41e380]
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RDI
            xor EDI,EDI
            movaps XMMWORD PTR [RSP+112],XMM0
            test RAX,RAX
            mov RDX,QWORD PTR [RSP+232]
            mov R15,QWORD PTR [RSP+240]
            movdqu XMM0,XMMWORD PTR [RIP+.L_41e390]
            mov R8,QWORD PTR [RSP+256]
            mov R12,QWORD PTR [RSP+264]
            mov R9,QWORD PTR [RSP+280]
            mov QWORD PTR [RSP+104],0
            movaps XMMWORD PTR [RSP+128],XMM0
            je .L_416740

            test R13,R13
            mov R10D,ESI
            cmove RBP,RBX
            test R14,R14
            lea RBX,QWORD PTR [RBP+RDX*1]
            je .L_416790
.L_416691:

            test R15,R15
            je .L_416780

            add RBX,R8
.L_41669d:

            test R12,R12
            je .L_416770

            add RBX,R9
.L_4166a9:

            lea RSI,QWORD PTR [RSP+104]
            test RBP,RBP
            cmove R13,RSI
            test RDX,RDX
            cmove R14,RSI
            test R8,R8
            cmove R15,RSI
            test R9,R9
            cmove R12,RSI
            test RBX,RBX
            je .L_416740

            cmp RDX,1
            seta DIL
            cmp R8,1
            seta SIL
            cmp RBP,1
            jbe .L_416960

            cmp RBP,RDX
            jbe .L_416948

            test DIL,DIL
            je .L_416948
.L_4166fb:

            cmp RDX,R8
            mov RBX,RDX
            seta DIL
            and ESI,EDI
.L_416707:

            test SIL,SIL
            cmovne RBX,R8
.L_41670e:

            cmp R9,1
            jbe .L_41671b

            cmp R9,RBX
            cmovb RBX,R9
.L_41671b:

            test R10D,R10D
            je .L_416740

            cmp R10D,1
            je .L_4167a0

            cmp R10D,-1
            je .L_4167a0

            mov ESI,22
            mov RDI,RAX
            xor EBX,EBX
            call .L_415fe0

            nop
            nop
            nop
            nop
            nop
.L_416740:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4169f4

            add RSP,168
.L_416761:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416770:

            xor R9D,R9D
            jmp .L_4166a9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416780:

            xor R8D,R8D
            jmp .L_41669d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416790:

            mov RBX,RBP
            xor EDX,EDX
            jmp .L_416691
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4167a0:

            lea RDI,QWORD PTR [RSP+64]
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R12
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+8],RBP
            mov QWORD PTR [RSP+40],RDI
            lea RDI,QWORD PTR [RSP+112]
            mov RBP,R13
            mov R12,R14
            mov R13,R15
            mov RBX,R11
            mov QWORD PTR [RSP+56],RDI
            mov DWORD PTR [RSP+36],R10D
            mov R15,R9
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+232],RDX
            mov R14,RAX
            mov QWORD PTR [RSP+256],R8
            jmp .L_4168d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416800:

            push QWORD PTR [RSP+136]
.L_416807:

            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
.L_41681c:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+72]
            call .L_41dd80

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movaps XMMWORD PTR [RSP+160],XMM0
.L_416847:

            movsd XMM3,QWORD PTR [RSP+144]
            movsd XMM2,QWORD PTR [RSP+152]
            movsd XMM1,QWORD PTR [RSP+160]
            movsd XMM0,QWORD PTR [RSP+168]
            add RSP,32
.L_41686f:

            cmp QWORD PTR [RSP+8],1
            jbe .L_416881

            movsd QWORD PTR [RBP],XMM3
            add RBP,QWORD PTR [RSP+48]
.L_416881:

            cmp QWORD PTR [RSP+232],1
            jbe .L_41689a

            movsd QWORD PTR [R12],XMM2
            add R12,QWORD PTR [RSP+224]
.L_41689a:

            cmp QWORD PTR [RSP+256],1
            jbe .L_4168b3

            movsd QWORD PTR [R13],XMM1
            add R13,QWORD PTR [RSP+248]
.L_4168b3:

            cmp R15,1
            jbe .L_4168c6

            movsd QWORD PTR [R14],XMM0
            add R14,QWORD PTR [RSP+272]
.L_4168c6:

            add RBX,1
            cmp QWORD PTR [RSP+16],RBX
            je .L_416990
.L_4168d5:

            cmp DWORD PTR [RSP+36],1
            movsd XMM3,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [R12]
            movsd XMM1,QWORD PTR [R13]
            movsd XMM0,QWORD PTR [R14]
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+120],XMM2
            movsd QWORD PTR [RSP+128],XMM1
            movsd QWORD PTR [RSP+136],XMM0
            jne .L_416800

            push QWORD PTR [RSP+136]
.L_41691b:

            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            push QWORD PTR [RSP+136]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+88]
            call .L_41dbb0

            jmp .L_416847
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416948:

            cmp RBP,R8
            mov RBX,RBP
            seta DIL
            and ESI,EDI
            jmp .L_416707
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416960:

            cmp RDX,1
            ja .L_4166fb

            cmp R8,1
            mov RBX,R8
            ja .L_41670e

            test R9,R9
            mov EBX,1
            cmovne RBX,R9
            jmp .L_41670e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416990:

            mov R9,R15
            mov R15,R13
            mov R13,RBP
            mov RBP,QWORD PTR [RSP+8]
            mov RAX,R14
            mov R11,RBX
            mov R14,R12
            mov RDX,QWORD PTR [RSP+232]
            mov R8,QWORD PTR [RSP+256]
            mov R12,RAX
            cmp RBP,1
            jne .L_4169c6

            movsd QWORD PTR [R13],XMM3
.L_4169c6:

            cmp RDX,1
            jne .L_4169d1

            movsd QWORD PTR [R14],XMM2
.L_4169d1:

            cmp R8,1
            jne .L_4169dc

            movsd QWORD PTR [R15],XMM1
.L_4169dc:

            cmp R9,1
            mov RBX,R11
            jne .L_416740

            movsd QWORD PTR [R12],XMM0
            jmp .L_416740
.L_4169f4:

            call __stack_chk_fail@PLT
.L_4169f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a00:

            jmp .L_415fe0
.L_416a05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a10:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            call __errno_location@PLT

            test RBX,RBX
            mov R12,RAX
            je .L_416a60

            mov RDI,RBX
            call .L_415f90

            mov RDI,RBX
            mov DWORD PTR [RBX+120],0
            mov EBP,EAX
            call .L_404a30

            xor ESI,ESI
            mov RDI,RAX
            call .L_404af0

            mov DWORD PTR [R12],0
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416a60:

            mov EBP,22
            mov DWORD PTR [RAX],22
            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_416a72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a80:

            jmp .L_404a80
.L_416a85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a90:

            test RDI,RDI
            je .L_416ab8

            push RBX
            mov RBX,RDI
            call .L_404a50

            cmp RAX,RBX
            je .L_416ab0

            mov RDI,RBX
            pop RBX
            jmp .L_404ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416ab0:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416ab8:

            ret 
.L_416aba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416ac0:

            push R15
            push R14
            mov ECX,81
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            xor R9D,R9D
            mov R8D,10
            mov EDX,64
            mov ESI,1
            sub RSP,696
            lea R12,QWORD PTR [RSP+16]
            sub RSP,8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+688],RAX
            xor EAX,EAX
            mov RDI,R12

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RSP+152],10
            lea RCX,QWORD PTR [RIP+.L_4174c8]
            mov DWORD PTR [RDI],0
            push 0
            lea RDI,QWORD PTR [R12+64]
            call __sprintf_chk@PLT

            call .L_44dc10

            mov EDX,64
            mov RSI,RAX
            mov RDI,R12
            call .L_41dfc0

            lea RDI,QWORD PTR [RIP+.L_4174d1]
            call getenv@PLT

            test RAX,RAX
            pop RDX
            pop RCX
.L_416b58:

            je .L_416b6f

            lea RDI,QWORD PTR [R12+140]
            mov EDX,512
            mov RSI,RAX
            call .L_41dfc0
.L_416b6f:

            lea RDI,QWORD PTR [RIP+.L_4174d6]
            call getenv@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_416bcd

            cmp BYTE PTR [RSP+156],0
            je .L_416d18

            lea RBP,QWORD PTR [R12+140]
            lea RSI,QWORD PTR [RIP+.L_4174df]
            mov EDX,512
            mov RDI,RBP
            call __strcat_chk@PLT

            mov RDI,RBX
            call strlen@PLT

            mov EDX,511
            mov ECX,512
            mov RSI,RBX
            sub RDX,RAX
            mov RDI,RBP
            call __strncat_chk@PLT
.L_416bcd:

            call .L_4042d0

            mov R15,RAX
            call .L_4042e0

            test EAX,EAX
            jle .L_416cb2

            sub EAX,1
            lea RBP,QWORD PTR [R12+140]
            lea R13,QWORD PTR [R15+RAX*8+8]
            jmp .L_416c32
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416bf8:

            mov EAX,59
            mov WORD PTR [RBP+RBX*1],AX
            mov RBX,QWORD PTR [R15]
            mov RDI,RBX
            call strlen@PLT

            mov EDX,511
            mov ECX,512
            mov RSI,RBX
            sub RDX,RAX
            mov RDI,RBP
            call __strncat_chk@PLT
.L_416c25:

            add R15,8
            cmp R15,R13
            je .L_416cb2
.L_416c32:

            mov RBX,RBP
.L_416c35:

            mov ECX,DWORD PTR [RBX]
            add RBX,4
            lea EDX,DWORD PTR [RCX-16843009]
            not ECX
            and EDX,ECX
            and EDX,2155905152
            je .L_416c35

            mov EAX,EDX
            mov RSI,QWORD PTR [R15]
            shr EAX,16
            test EDX,32896
            cmove EDX,EAX
            lea RAX,QWORD PTR [RBX+2]
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            cmove RBX,RAX
            mov EAX,EDX
            add AL,DL
            sbb RBX,3
            sub RBX,RBP
            call strlen@PLT

            add RAX,RBX
            cmp RAX,510
            ja .L_416c25

            cmp BYTE PTR [RSP+156],0
            mov RSI,QWORD PTR [RSP+8]
            jne .L_416bf8

            mov EDX,512
            mov RDI,RBP
            add R15,8
            call .L_41dfc0

            cmp R15,R13
            jne .L_416c32
.L_416cb2:

            mov RAX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R14+8]
            mov RCX,R14
            mov RSI,R12
            and RDI,-8
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [R12+644]
            sub RCX,RDI
            sub RSI,RCX
            add ECX,652
            shr ECX,3
            mov QWORD PTR [R14+644],RAX
            mov RAX,R14

            rep movsq 

            mov RSI,QWORD PTR [RSP+680]
            xor RSI,QWORD PTR FS:[40]
            jne .L_416d32

            add RSP,696
.L_416d06:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d18:

            lea RDI,QWORD PTR [R12+140]
            mov EDX,512
            mov RSI,RAX
            call .L_41dfc0

            jmp .L_416bcd
.L_416d32:

            call __stack_chk_fail@PLT
.L_416d37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416d40:

            push R13
            push R12
            mov ECX,82
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,680
.L_416d58:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+664],RAX
            xor EAX,EAX
            mov RBX,RSP
            test RSI,RSI
            mov RDI,RBX

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDI],0
            je .L_416e58

            mov RSI,QWORD PTR [RSI+16]
            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_4174e1]
            call .L_4043f0

            test EAX,EAX
            jne .L_416e90
.L_416d9f:

            mov RSI,QWORD PTR [R12+8]
            lea RDI,QWORD PTR [RBX+16]
            mov EDX,128
            call .L_41dfc0

            xor ESI,ESI
            mov RDI,R12
            call .L_44d2c0

            lea RDI,QWORD PTR [RBX+144]
            lea RSI,QWORD PTR [RAX+1]
            mov R13,RAX
            mov EDX,512
            call .L_41dfc0

            mov RDI,R13
            call .L_403ca0

            cmp QWORD PTR [R12+48],0
            mov EAX,1
            je .L_416ec0
.L_416ded:

            mov DWORD PTR [RSP+656],EAX
            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            and RDI,-8
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RBX+652]
            sub RCX,RDI
            sub RBX,RCX
            add ECX,660
            mov RSI,RBX
            shr ECX,3
            mov QWORD PTR [RBP+652],RAX

            rep movsq 
.L_416e2a:

            mov RDX,QWORD PTR [RSP+664]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_416edc

            add RSP,680
.L_416e4b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416e58:

            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            mov RAX,RSI
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+652],0
            and RDI,-8
            sub RCX,RDI
            add ECX,660
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_416e2a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416e90:

            mov RSI,QWORD PTR [R12+16]
            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_4174e7]
            call .L_4043f0

            mov EDX,16
            mov RSI,RAX
            mov RDI,RBX
            call .L_41dfc0

            jmp .L_416d9f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416ec0:

            cmp QWORD PTR [R12+64],0
            jne .L_416ded

            xor EAX,EAX
            cmp QWORD PTR [R12+80],0
            setne AL
            jmp .L_416ded
.L_416edc:

            call __stack_chk_fail@PLT
.L_416ee1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416ef0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,368
.L_416f05:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RAX
            xor EAX,EAX
            mov RBX,RSP
            call .L_404a50

            mov RSI,R14
            mov RDI,RAX
            mov R13,RAX
            call .L_40b6b0

            mov ECX,45
            mov RBP,RAX
            mov RDI,RBX
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            cmp QWORD PTR [RBP+8],0
            je .L_417040

            mov EDX,32
            mov RSI,R14
            mov RDI,RBX
            call .L_41dfc0

            lea RDX,QWORD PTR [RBX+32]
            mov ECX,260
            mov RSI,R14
            mov RDI,R13
            call .L_404300

            mov RSI,QWORD PTR [RBP+16]
            lea RDI,QWORD PTR [RBX+292]
            mov EDX,8
            call .L_41dfc0

            mov RCX,QWORD PTR [RBP+32]
            mov RSI,RBP
            mov RDI,R13
            movdqu XMM1,XMMWORD PTR [RCX+80]
            mov EDX,DWORD PTR [RCX+112]
            mov EAX,DWORD PTR [RCX+116]
            movsd XMM0,QWORD PTR [RCX+96]
            movsd XMM2,QWORD PTR [RCX+104]
            movaps XMMWORD PTR [RSP+304],XMM1
            pxor XMM1,XMM1
            mov DWORD PTR [RSP+336],EDX
            movsd QWORD PTR [RSP+344],XMM0
            movsd QWORD PTR [RSP+352],XMM2
            cvtsi2sd XMM1,EDX
            mov DWORD PTR [RSP+340],EAX
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            addsd XMM1,QWORD PTR [RSP+304]
            movsd QWORD PTR [RSP+320],XMM1
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+312]
            movsd QWORD PTR [RSP+328],XMM0
            call .L_40af30

            mov ECX,45
            mov RDI,R12
            mov RSI,RBX

            rep movsq 
.L_417018:

            mov RBX,QWORD PTR [RSP+360]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41706d

            add RSP,368
.L_417035:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_417040:

            mov RSI,RBP
            mov RDI,R13
            call .L_40af30

            movabs RAX,29113321788762477
            mov ECX,45
            mov RDI,R12
            mov QWORD PTR [RSP+292],RAX
            mov RSI,RBX

            rep movsq 

            jmp .L_417018
.L_41706d:

            call __stack_chk_fail@PLT
.L_417072:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417080:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,584
.L_417097:

            lea RBX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+4],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+568],RAX
            xor EAX,EAX
            call .L_404a50

            mov ECX,46
            mov R12,RAX
            mov RDI,RBX
            xor EAX,EAX
            lea RDX,QWORD PTR [RBX+32]
            mov RSI,R13

            rep stosq QWORD PTR [RDI]

            mov ECX,260
            mov DWORD PTR [RDI],0
            mov RDI,R12
            call .L_404300

            test EAX,EAX
            je .L_4170f8

            mov RDI,R13
            call strlen@PLT

            cmp RAX,64
            jbe .L_417160
.L_4170f8:

            lea RDI,QWORD PTR [RBP+8]
            mov RAX,QWORD PTR [RSP+16]
            mov RCX,RBP
            and RDI,-8
            sub RCX,RDI
            mov QWORD PTR [RBP],RAX
            mov RAX,QWORD PTR [RBX+364]
            sub RBX,RCX
            add ECX,372
            shr ECX,3
            mov RSI,RBX
            mov RDX,QWORD PTR [RSP+568]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP+364],RAX
            mov RAX,RBP

            rep movsq 

            jne .L_41732d

            add RSP,584
.L_417150:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417160:

            lea R14,QWORD PTR [RSP+400]
            mov EDX,32
            mov RSI,R13
            mov RDI,RBX
            lea R15,QWORD PTR [RBX+292]
            call .L_41dfc0

            movabs RAX,31093567915781717
            mov EDX,64
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RBX+324],RAX
            mov QWORD PTR [RBX+292],RAX
            mov QWORD PTR [RBX+356],RAX
            call .L_41dfc0

            lea RSI,QWORD PTR [RIP+.L_4174ed]
            mov EDX,74
            mov RDI,R14
            call __strcat_chk@PLT

            lea R8,QWORD PTR [RSP+480]
            mov ECX,80
            mov EDX,73
            mov RSI,R14
            mov EAX,15732
            mov DWORD PTR [RSP+480],1768843563
            mov RDI,R8
            mov WORD PTR [RSP+484],AX
            mov BYTE PTR [RSP+486],0
            call __strncat_chk@PLT

            mov RDI,RAX
            call .L_4043a0

            lea RSI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RSP+4]
            mov RCX,R14
            mov RDX,RAX
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_4024a0

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4174f7]
            mov RDI,R12
            call .L_4043f0

            test EAX,EAX
            jne .L_4172a0
.L_41723c:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44f380-228983]
            mov RDI,R12
            call .L_4043f0

            test EAX,EAX
            jne .L_417300
.L_417258:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44f380-228967]
            mov RDI,R12
            call .L_4043f0

            test EAX,EAX
            jne .L_4172d0
.L_417270:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_4170f8

            nop
            nop
.L_417280:

            mov R12,QWORD PTR [RDI]
            call .L_403c60

            test R12,R12
            mov QWORD PTR [RSP+8],R12
            mov RDI,R12
            jne .L_417280

            jmp .L_4170f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4172a0:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_417500]
            mov RDI,R12
            call .L_4043f0

            mov EDX,32
            mov RSI,RAX
            mov RDI,R15
            call .L_41dfc0

            jmp .L_41723c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4172d0:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_417525]
            mov RDI,R12
            call .L_4043f0

            lea RDI,QWORD PTR [RBX+356]
            mov EDX,16
            mov RSI,RAX
            call .L_41dfc0

            jmp .L_417270
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417300:

            mov RSI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44f380-228975]
            mov RDI,R12
            call .L_4043f0

            lea RDI,QWORD PTR [RBX+324]
            mov EDX,32
            mov RSI,RAX
            call .L_41dfc0

            jmp .L_417258
.L_41732d:

            call __stack_chk_fail@PLT
.L_417332:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417340:

            push RBX
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,48
.L_41734b:

            movsd XMM2,QWORD PTR [RIP+.L_417550]
            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_44a4b0

            test EAX,EAX
            je .L_41737c

            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
.L_41737c:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            movdqa XMM0,XMMWORD PTR [RSP]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jne .L_4173a7

            add RSP,48
.L_4173a5:

            pop RBX
            ret 
.L_4173a7:

            call __stack_chk_fail@PLT
.L_4173ac:

            nop
            nop
            nop
            nop
.L_4173b0:

            push RBP
            push RBX
            mov RBX,RDI
            pxor XMM2,XMM2
            mov RDI,RSI
            sub RSP,120
.L_4173c0:

            mov RBP,RSP
            mov DWORD PTR [RSP+96],0
            mov RSI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_44b7d0

            test EAX,EAX
            je .L_4173f4

            mov ECX,13
            xor EAX,EAX
            mov RDI,RBP

            rep stosq QWORD PTR [RDI]
.L_4173f4:

            movdqa XMM0,XMMWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            mov RDX,QWORD PTR [RSP+104]
            xor RDX,QWORD PTR FS:[40]
            movdqa XMM0,XMMWORD PTR [RSP+16]
            mov QWORD PTR [RBX+96],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+64],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+80],XMM0
            jne .L_417451

            add RSP,120
.L_41744e:

            pop RBX
            pop RBP
            ret 
.L_417451:

            call __stack_chk_fail@PLT
.L_417456:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417460:

            mulsd XMM0,QWORD PTR [RIP+.L_417540]
            divsd XMM0,QWORD PTR [RIP+.L_417538]
            ret 
.L_417471:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417480:

            mulsd XMM0,QWORD PTR [RIP+.L_417538]
            divsd XMM0,QWORD PTR [RIP+.L_417540]
            ret 
.L_417491:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4174a0:

            jmp .L_44a2d0
.L_4174a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4174b0:

            jmp .L_44d840
.L_4174b5:
          .string " +inv +step +init="
.L_4174c8:
          .string "%d.%d.%d"
.L_4174d1:
          .string "HOME"
.L_4174d6:
          .string "PROJ_LIB"
.L_4174df:
          .string ";"
.L_4174e1:
          .string "tproj"
.L_4174e7:
          .string "sproj"
.L_4174ed:
          .string ":metadata"
.L_4174f7:
          .string "tversion"
.L_417500:
          .string "sversion"
# WARNING: found overlapping blocks at address 172d5

            je 95050
            jb 95046
          .byte 0x72
          .byte 0x69

            imul EBP,DWORD PTR [ESI],1935764596
            je .L_417594

            jo .L_417585
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x0
.L_417525:
          .string "slastupdate"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417538:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_417540:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_417548:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_417550:

            int1 
          .byte 0x68
          .byte 0xe3
          .byte 0x88
          .byte 0xb5
          .byte 0xf8
          .byte 0xe4
          .byte 0x3e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417560:
          .byte 0x2b
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x6a
          .byte 0x3d
          .byte 0x70
          .byte 0x69
          .byte 0x70
          .byte 0x65
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x20
          .byte 0x2b
.L_417570:

            jmp .L_403cc0
.L_417575:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417580:

            push R13
            push R12
            push RBP
.L_417585:

            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,104
.L_417590:
          .byte 0xf2
          .byte 0xf
          .byte 0x10
          .byte 0xac
.L_417594:

            and AL,144
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBP+RCX*4+100],CL
            and AL,88
            lea R13,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+152]
            movsd XMM6,QWORD PTR [RSP+160]
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+48],XMM4
            call hypot@PLT

            movapd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RBX+136]
            movapd XMM1,XMM7
            mulsd XMM0,QWORD PTR [RBX+128]
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movsd XMM2,QWORD PTR [RBX+192]
            movsd QWORD PTR [RSP+24],XMM2
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM1,QWORD PTR [RBX+176]
            movsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+128]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+88]
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            mulsd XMM1,XMM0
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            subsd XMM7,XMM1
            mulsd XMM0,XMM3
            movapd XMM1,XMM7
            mulsd XMM0,XMM3
            addsd XMM0,QWORD PTR [RSP]
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM0
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM1,XMM5
            movsd XMM6,QWORD PTR [RSP+88]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+56],XMM6
            call atan2@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RBX+176]
            movapd XMM6,XMM0
            movsd XMM4,QWORD PTR [RBX+128]
            ucomisd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jp .L_417738

            jne .L_417738
.L_4176e8:

            movq XMM5,QWORD PTR [RIP+.L_417c20]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_417c18]
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            ja .L_417770

            movsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            subsd XMM0,XMM4
.L_417714:

            movsd QWORD PTR [RBP],XMM6
            mov RAX,RBP
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RBP+16],XMM0
            add RSP,104
.L_41772a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417738:

            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RIP+.L_417c10]
            mulsd XMM1,XMM7
            mulsd XMM1,XMM7
            subsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_417817
.L_417760:

            divsd XMM4,XMM1
            jmp .L_4176e8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417770:

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RBX+128]
            movapd XMM1,XMM7
            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,XMM7
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RSP+56]
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM1,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            call hypot@PLT

            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM7,XMM0
            movapd XMM5,XMMWORD PTR [RSP+64]
            andpd XMM1,XMM5
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+48]
            subsd XMM1,XMM7
            movapd XMM0,XMM1
            jmp .L_417714
.L_417817:

            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_417760
.L_41785d:

            nop
            nop
            nop
.L_417860:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_417580

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4178e3

            add RSP,72
            ret 
.L_4178e3:

            call __stack_chk_fail@PLT
.L_4178e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178f0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,72
.L_417900:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+120]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            pxor XMM4,XMM4
            movsd XMM3,QWORD PTR [RBP+176]
            movsd XMM7,QWORD PTR [RSP+48]
            ucomisd XMM3,XMM4
            movsd QWORD PTR [RSP+8],XMM7
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBP+128]
            jp .L_4179f0

            movsd XMM1,QWORD PTR [RIP+.L_417c10]
            jne .L_4179f0
.L_417959:

            movsd XMM0,QWORD PTR [RSP+112]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+128]
            mov RAX,RBX
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+48]
            subsd XMM1,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            addsd XMM1,XMM4
            mulsd XMM6,XMM0
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,XMM5
            movsd QWORD PTR [RBX],XMM6
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM1
            add RSP,72
.L_4179e6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4179f0:

            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RIP+.L_417c10]
            mulsd XMM0,XMM5
            movapd XMM7,XMM1
            mulsd XMM0,XMM5
            subsd XMM7,XMM0
            ucomisd XMM4,XMM7
            sqrtsd XMM6,XMM7
            movapd XMM0,XMM7
            ja .L_417a23
.L_417a1a:

            divsd XMM2,XMM6
            jmp .L_417959
.L_417a23:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBP+176]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_417a1a
.L_417a62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417a70:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_4178f0

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417af3

            add RSP,72
            ret 
.L_417af3:

            call __stack_chk_fail@PLT
.L_417af8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417b00:

            test RDI,RDI
            je .L_417b50

            lea RAX,QWORD PTR [RIP+.L_4178f0]
            mov DWORD PTR [RDI+320],2
            mov DWORD PTR [RDI+324],1
            mov QWORD PTR [RDI+56],RAX
            lea RAX,QWORD PTR [RIP+.L_417580]
            mov QWORD PTR [RDI+64],RAX
            lea RAX,QWORD PTR [RIP+.L_417a70]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_417860]
            mov QWORD PTR [RDI+48],RAX
            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b50:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_417b7e

            lea RDX,QWORD PTR [RIP+.L_417570]
            lea RCX,QWORD PTR [RIP+.L_417bf0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_417b7e:

            add RSP,8
            ret 
.L_417b83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417b90:

            lea RDX,QWORD PTR [RIP+.L_4178f0]
            lea RCX,QWORD PTR [RIP+.L_417580]
            lea RSI,QWORD PTR [RIP+.L_417a70]
            mov RAX,RDI
            mov QWORD PTR [RDI+56],RDX
            mov QWORD PTR [RDI+64],RCX
            mov QWORD PTR [RDI+40],RSI
            lea RDI,QWORD PTR [RIP+.L_417860]
            mov DWORD PTR [RAX+320],2
            mov DWORD PTR [RAX+324],1
            mov QWORD PTR [RAX+48],RDI
            ret 
.L_417bd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417be0:

            xor EAX,EAX
            ret 
.L_417be3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417bf0:
          .string "Geodetic/cartesian conversions"
          .byte 0x90
.L_417c10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_417c18:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0xb0
          .byte 0x3e
.L_417c20:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417c30:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            sub RSP,120
.L_417c44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM7,QWORD PTR [RSP+176]
            movsd XMM6,QWORD PTR [RSP+184]
            movsd XMM5,QWORD PTR [RSP+192]
            mov R15D,DWORD PTR [RAX+4]
            test R15D,R15D
            je .L_417ee0

            movsxd RBX,R15D
            lea R14,QWORD PTR [RSP+32]
            lea RBP,QWORD PTR [RBX*8]
            shl RBX,2
            jmp .L_417d86
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ca0:

            push QWORD PTR [RSP+232]
.L_417ca7:

            push QWORD PTR [RSP+232]
            mov EDX,1
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            lea RDI,QWORD PTR [RSP+240]
            call .L_416230

            movsd XMM7,QWORD PTR [RSP+240]
            movsd XMM6,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [RSP+256]
            add RSP,64
.L_417d09:

            mov RAX,QWORD PTR [R12+32]
            movsxd RDX,DWORD PTR [RAX+8]
            cmp EDX,99
            jg .L_417d75

            movsd QWORD PTR [RSP+176],XMM7
            lea ECX,DWORD PTR [RDX+1]
            shl RDX,6
            movsd QWORD PTR [RSP+184],XMM6
            lea RDX,QWORD PTR [RAX+RDX*1+48]
            movsd QWORD PTR [RSP+192],XMM5
            mov DWORD PTR [RAX+8],ECX
            movdqu XMM0,XMMWORD PTR [RSP+176]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [RDX+56],XMM0
.L_417d75:

            sub RBP,8
            sub RBX,4
            test R15D,R15D
            je .L_417ee0
.L_417d86:

            sub R15D,1
            movapd XMM2,XMM5
            mov RAX,QWORD PTR [RAX+6456]
            movapd XMM1,XMM6
            movapd XMM0,XMM7
            lea RSI,QWORD PTR [RIP+.L_418f98]
            mov EDX,R15D
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM5
            mov RAX,QWORD PTR [RAX+RBP*1]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            movsd XMM4,QWORD PTR [RAX+256]
            movsd XMM3,QWORD PTR [RAX+128]
            mov EAX,5
            call .L_41e240

            mov RAX,QWORD PTR [R12+32]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+32]
            mov EDX,DWORD PTR [RDX+RBX*1]
            test EDX,EDX
            jne .L_417d75

            mov RDX,QWORD PTR [RAX+6456]
            mov RAX,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+176],XMM7
            movsd QWORD PTR [RSP+184],XMM6
            movsd QWORD PTR [RSP+192],XMM5
            mov EAX,DWORD PTR [RAX+RBX*1]
            mov RSI,QWORD PTR [RDX+RBP*1]
            test EAX,EAX
            jne .L_417ca0

            push QWORD PTR [RSP+232]
.L_417e3c:

            push QWORD PTR [RSP+232]
            mov EDX,4294967295
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            mov RDI,R14
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
.L_417e75:

            call .L_416230

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RSP+240],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RSP+256],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RSP+272],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movsd XMM7,QWORD PTR [RSP+240]
            movups XMMWORD PTR [RSP+288],XMM0
            movsd XMM6,QWORD PTR [RSP+248]
            movsd XMM5,QWORD PTR [RSP+256]
            add RSP,64
.L_417ed7:

            jmp .L_417d09
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417ee0:

            movapd XMM0,XMM7
            lea RSI,QWORD PTR [RIP+.L_44f380-222136]
            movapd XMM2,XMM5
            mov EAX,3
            movapd XMM1,XMM6
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            call .L_41e240

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [R12+32]
            movsd QWORD PTR [RSP+176],XMM7
            movsd QWORD PTR [RSP+184],XMM6
            movsd XMM5,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            movdqu XMM0,XMMWORD PTR [RSP+176]
            mov DWORD PTR [RAX+8],0
            mov RAX,R13
            movsd QWORD PTR [RSP+192],XMM5
            movups XMMWORD PTR [R13],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [R13+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [R13+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [R13+48],XMM0
            jne .L_417fa5

            add RSP,120
.L_417f9a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_417fa5:

            call __stack_chk_fail@PLT
.L_417faa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_417fb0:

            push RBX
            mov RSI,RDI
            sub RSP,80
.L_417fb8:

            mov RDX,QWORD PTR [RIP+.L_41e358]
            mov R9,QWORD PTR [RIP+.L_41e360]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov R10,QWORD PTR [RIP+.L_41e368]
            mov RAX,QWORD PTR [RIP+.L_41e350]
            movq QWORD PTR [RSP],XMM0
            mov RCX,QWORD PTR [RIP+.L_41e370]
            mov RBX,QWORD PTR [RIP+.L_41e378]
            movq QWORD PTR [RSP+8],XMM1
            mov QWORD PTR [RSP+24],RDX
            mov RDI,RSP
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RBX
            push RBX
.L_41801f:

            push RCX
            push R10
            push R9
            push RDX
            push RAX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_417c30

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            add RSP,64
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_418059

            add RSP,80
            pop RBX
            ret 
.L_418059:

            call __stack_chk_fail@PLT
.L_41805e:

            nop
            nop
.L_418060:

            push R12
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41806a:

            mov R9,QWORD PTR [RIP+.L_41e360]
            mov R10,QWORD PTR [RIP+.L_41e368]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RSP+112]
            mov RDI,RSP
            mov RCX,QWORD PTR [RSP+128]
            mov R11,QWORD PTR [RIP+.L_41e370]
            mov R12,QWORD PTR [RIP+.L_41e378]
            mov QWORD PTR [RSP+32],R9
            movdqu XMM0,XMMWORD PTR [RIP+.L_41e350]
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RDX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+16],RCX
            push R12
.L_4180dc:

            push R11
            push R10
            push R9
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RDX
            push RAX
            call .L_417c30

            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add RSP,64
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX],XMM0
            mov QWORD PTR [RBX+16],RAX
            jne .L_418122

            add RSP,88
            mov RAX,RBX
            pop RBX
            pop R12
            ret 
.L_418122:

            call __stack_chk_fail@PLT
.L_418127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418130:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_418144:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM5,QWORD PTR [RSP+176]
            movsd XMM4,QWORD PTR [RSP+184]
            movsd XMM3,QWORD PTR [RSP+192]
            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            je .L_4183d0

            lea R12D,DWORD PTR [RDX-1]
            mov R15D,4
            xor EBX,EBX
            lea R14,QWORD PTR [RSP+32]
            add R12,1
            jmp .L_418285
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181a0:

            push QWORD PTR [RSP+232]
.L_4181a7:

            push QWORD PTR [RSP+232]
            mov EDX,4294967295
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            lea RDI,QWORD PTR [RSP+240]
            call .L_416230

            movsd XMM5,QWORD PTR [RSP+240]
            movsd XMM4,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+256]
            add RSP,64
.L_418209:

            mov RAX,QWORD PTR [RBP+32]
            movsxd RDX,DWORD PTR [RAX+8]
            cmp EDX,99
            jg .L_418274

            movsd QWORD PTR [RSP+176],XMM5
            lea ECX,DWORD PTR [RDX+1]
            shl RDX,6
            movsd QWORD PTR [RSP+184],XMM4
            lea RDX,QWORD PTR [RAX+RDX*1+48]
            movsd QWORD PTR [RSP+192],XMM3
            mov DWORD PTR [RAX+8],ECX
            movdqu XMM0,XMMWORD PTR [RSP+176]
            movups XMMWORD PTR [RDX+8],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [RDX+24],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [RDX+40],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [RDX+56],XMM0
.L_418274:

            add RBX,1
            add R15,4
            cmp R12,RBX
            je .L_4183d0
.L_418285:

            mov RAX,QWORD PTR [RAX+6456]
            movapd XMM2,XMM3
            movapd XMM1,XMM4
            lea RSI,QWORD PTR [RIP+.L_418fe8]
            movapd XMM0,XMM5
            mov EDX,EBX
            mov RAX,QWORD PTR [RAX+R15*2]
            mov RDI,RBP
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            mov RCX,QWORD PTR [RAX+8]
            mov EAX,3
            call .L_41e240

            mov RAX,QWORD PTR [RBP+32]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+24]
            mov EDX,DWORD PTR [RDX+R15*1]
            test EDX,EDX
            jne .L_418274

            mov RDX,QWORD PTR [RAX+6456]
            mov RAX,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP+176],XMM5
            movsd QWORD PTR [RSP+184],XMM4
            movsd QWORD PTR [RSP+192],XMM3
            mov EAX,DWORD PTR [RAX+R15*1]
            mov RSI,QWORD PTR [RDX+R15*2]
            test EAX,EAX
            jne .L_4181a0

            push QWORD PTR [RSP+232]
.L_418327:

            push QWORD PTR [RSP+232]
            mov EDX,1
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            mov RDI,R14
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
            push QWORD PTR [RSP+232]
.L_418360:

            call .L_416230

            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RSP+240],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RSP+256],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RSP+272],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movsd XMM5,QWORD PTR [RSP+240]
            movups XMMWORD PTR [RSP+288],XMM0
            movsd XMM4,QWORD PTR [RSP+248]
            movsd XMM3,QWORD PTR [RSP+256]
            add RSP,64
.L_4183c2:

            jmp .L_418209
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4183d0:

            movapd XMM0,XMM5
            lea RSI,QWORD PTR [RIP+.L_44f380-222136]
            movapd XMM2,XMM3
            mov RDI,RBP
            movapd XMM1,XMM4
            mov EAX,3
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            call .L_41e240

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+176],XMM5
            movsd QWORD PTR [RSP+184],XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+104]
            xor RDI,QWORD PTR FS:[40]
            movdqu XMM0,XMMWORD PTR [RSP+176]
            mov DWORD PTR [RAX+8],0
            mov RAX,R13
            movsd QWORD PTR [RSP+192],XMM3
            movups XMMWORD PTR [R13],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [R13+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [R13+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [R13+48],XMM0
            jne .L_418494

            add RSP,120
.L_418489:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_418494:

            call __stack_chk_fail@PLT
.L_418499:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4184a0:

            push RBX
            mov RSI,RDI
            sub RSP,80
.L_4184a8:

            mov RDX,QWORD PTR [RIP+.L_41e358]
            mov R9,QWORD PTR [RIP+.L_41e360]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov R10,QWORD PTR [RIP+.L_41e368]
            mov RAX,QWORD PTR [RIP+.L_41e350]
            movq QWORD PTR [RSP],XMM0
            mov RCX,QWORD PTR [RIP+.L_41e370]
            mov RBX,QWORD PTR [RIP+.L_41e378]
            movq QWORD PTR [RSP+8],XMM1
            mov QWORD PTR [RSP+24],RDX
            mov RDI,RSP
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RBX
            push RBX
.L_41850f:

            push RCX
            push R10
            push R9
            push RDX
            push RAX
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            call .L_418130

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            add RSP,64
            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_418549

            add RSP,80
            pop RBX
            ret 
.L_418549:

            call __stack_chk_fail@PLT
.L_41854e:

            nop
            nop
.L_418550:

            push R12
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41855a:

            mov R9,QWORD PTR [RIP+.L_41e360]
            mov R10,QWORD PTR [RIP+.L_41e368]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RSP+112]
            mov RDI,RSP
            mov RCX,QWORD PTR [RSP+128]
            mov R11,QWORD PTR [RIP+.L_41e370]
            mov R12,QWORD PTR [RIP+.L_41e378]
            mov QWORD PTR [RSP+32],R9
            movdqu XMM0,XMMWORD PTR [RIP+.L_41e350]
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RDX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+56],R12
            mov QWORD PTR [RSP+16],RCX
            push R12
.L_4185cc:

            push R11
            push R10
            push R9
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RDX
            push RAX
            call .L_418130

            movdqa XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            add RSP,64
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX],XMM0
            mov QWORD PTR [RBX+16],RAX
            jne .L_418612

            add RSP,88
            mov RAX,RBX
            pop RBX
            pop R12
            ret 
.L_418612:

            call __stack_chk_fail@PLT
.L_418617:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418620:

            test RDI,RDI
            je .L_418640

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418640:

            ret 
.L_418642:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418650:

            test RDI,RDI
            je .L_41871a

            test ESI,ESI
            push R12
            push RBP
            push RBX
.L_41865f:

            mov RBX,RDI
            jne .L_418710
.L_418668:

            mov RAX,QWORD PTR [RBX+32]
            test RAX,RAX
            je .L_4186fe

            mov EDX,DWORD PTR [RAX+4]
            xor EBP,EBP
            mov R12D,8
            test EDX,EDX
            jle .L_4186a8

            nop
            nop
            nop
            nop
.L_418688:

            mov RAX,QWORD PTR [RAX+6456]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R12*1]
            add R12,8
            call .L_4024b0

            mov RAX,QWORD PTR [RBX+32]
            cmp EBP,DWORD PTR [RAX+4]
            jl .L_418688
.L_4186a8:

            mov RDI,QWORD PTR [RAX+16]
            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+24]
            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+32]
            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+40]
            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+48]
            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RAX+6456]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0
.L_4186fe:

            mov RDI,RBX
            pop RBX
.L_418702:

            pop RBP
            pop R12
            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418710:

            call .L_415fe0

            jmp .L_418668
.L_41871a:

            xor EAX,EAX
            ret 
.L_41871d:

            nop
            nop
            nop
.L_418720:

            xor ESI,ESI
            jmp .L_418650
.L_418727:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418730:

            push R15
            lea RAX,QWORD PTR [RIP+.L_418130]
            push R14
            push R13
            push R12
            mov ESI,6464
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41874d:

            mov QWORD PTR [RDI+72],RAX
            lea RAX,QWORD PTR [RIP+.L_417c30]
            mov QWORD PTR [RDI+80],RAX
            lea RAX,QWORD PTR [RIP+.L_418550]
            mov QWORD PTR [RDI+56],RAX
            lea RAX,QWORD PTR [RIP+.L_418060]
            mov QWORD PTR [RDI+64],RAX
            lea RAX,QWORD PTR [RIP+.L_4184a0]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_417fb0]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_418720]
            mov QWORD PTR [RDI+112],RAX
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_418e60

            mov R12,QWORD PTR [RBX+16]
            test R12,R12
            je .L_418df0

            mov RAX,R12
            xor EBP,EBP
            jmp .L_4187c3
          .byte 0x66
          .byte 0x90
.L_4187c0:

            mov RBP,RDX
.L_4187c3:

            mov RAX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RBP+1]
            test RAX,RAX
            jne .L_4187c0

            add RBP,2
            mov ESI,8
            movsxd R15,EBP
            mov R14D,EBP
            mov RDI,R15
            call .L_403c70

            test RAX,RAX
            mov R13,RAX
            je .L_418dcc

            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_4187f8:

            lea RDX,QWORD PTR [R12+9]
            mov R12,QWORD PTR [R12]
            add RAX,1
            mov QWORD PTR [R13+RAX*8-8],RDX
            test R12,R12
            jne .L_4187f8

            lea RDI,QWORD PTR [RIP+.L_65f040]
            mov ESI,8
            mov QWORD PTR [R13+RAX*8],RDI
            mov RAX,QWORD PTR [RBX+32]
            mov RDI,R15
            mov QWORD PTR [RAX+40],R13
            call .L_403c70

            mov R12,QWORD PTR [RBX+32]
            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_418de0

            test EBP,EBP
            jle .L_418e67
.L_41884d:

            lea R9D,DWORD PTR [R14-1]
            lea R10,QWORD PTR [RIP+.L_419116]
            mov R14D,4294967295
            xor EAX,EAX
            mov EBP,R14D
            xor R11D,R11D
            add R9,1
.L_41886a:

            mov RDX,QWORD PTR [R13+RAX*8]
            lea RSI,QWORD PTR [RIP+.L_419111]
            mov ECX,5
            mov R8D,EAX
            mov RDI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_418d70

            cmp EBP,-1
            je .L_418da0

            test R11D,R11D
            cmovne R8D,R14D
            add R11D,1
            mov R14D,R8D
.L_4188a8:

            add RAX,1
            cmp RAX,R9
            jne .L_41886a

            lea EAX,DWORD PTR [R11-1]
            cmp EBP,-1
            mov DWORD PTR [RSP+44],R11D
            mov DWORD PTR [RSP+20],EAX
            mov DWORD PTR [R12+4],EAX
            je .L_418db1

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            je .L_418db1

            movsxd RAX,DWORD PTR [RSP+20]
            mov ESI,8
            add RAX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_403c70

            mov QWORD PTR [R12+6456],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+6456],0
            je .L_418de0

            mov ESI,DWORD PTR [RSP+20]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [R12+4],ESI
            mov ESI,4
            call .L_403c70

            mov QWORD PTR [R12+16],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+16],0
            je .L_418de0

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,4
            call .L_403c70

            mov QWORD PTR [R12+24],RAX
            mov R12,QWORD PTR [RBX+32]
            cmp QWORD PTR [R12+24],0
            je .L_418de0

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,4
            call .L_403c70

            mov QWORD PTR [R12+32],RAX
            mov RAX,QWORD PTR [RBX+32]
            cmp QWORD PTR [RAX+32],0
            je .L_418de0

            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            jle .L_418f07

            lea EAX,DWORD PTR [RBP+1]
            mov QWORD PTR [RSP+24],R13
            mov DWORD PTR [RSP+8],0
            shl RAX,3
            mov QWORD PTR [RSP+32],RAX
            mov EAX,4
            mov R13,RAX
            nop
.L_4189b0:

            mov EDX,DWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_419040]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e240

            lea R8D,DWORD PTR [R14+1]
            mov RDI,QWORD PTR [RSP+24]
            movsxd RAX,R8D
            lea R9,QWORD PTR [RDI+RAX*8]
            xor EAX,EAX
            jmp .L_4189e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4189e0:

            mov QWORD PTR [R15+RAX*8],R10
            add RAX,1
.L_4189e8:

            mov R10,QWORD PTR [R9+RAX*8]
            lea RSI,QWORD PTR [RIP+.L_419111]
            mov ECX,5
            movsxd RBP,EAX
            lea R11D,DWORD PTR [R8+RAX*1]
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_4189e0

            mov RDI,QWORD PTR [RSP+32]
            mov RAX,RBP
            mov DWORD PTR [RSP+40],R11D
            neg RAX
            lea RDX,QWORD PTR [RDI+RAX*8]
            add RDX,QWORD PTR [RSP+24]
            jmp .L_418a38
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418a30:

            mov QWORD PTR [R15+RBP*8],RAX
            add RBP,1
.L_418a38:

            mov RAX,QWORD PTR [RDX+RBP*8]
            lea RSI,QWORD PTR [RIP+.L_419111]
            mov ECX,5
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R12B
            sbb R12B,0
            movsx R12D,R12B
            test R12D,R12D
            jne .L_418a30

            test EBP,EBP
            mov DWORD PTR [RSP+16],EBP
            je .L_418e45

            lea EAX,DWORD PTR [RBP-1]
            lea R14,QWORD PTR [R15+8]
            mov RDX,R15
            lea R9,QWORD PTR [R14+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418a80:

            mov RAX,QWORD PTR [RDX]
            lea RSI,QWORD PTR [RIP+.L_41913e]
            mov ECX,9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_418aba

            mov RCX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RCX+32]
            mov RCX,QWORD PTR [RCX+24]
            mov DWORD PTR [RSI+R13*1],1
            mov DWORD PTR [RCX+R13*1],0
.L_418aba:

            lea RSI,QWORD PTR [RIP+.L_419147]
            mov ECX,9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_418af1

            mov RCX,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RCX+32]
            mov RCX,QWORD PTR [RCX+24]
            mov DWORD PTR [RSI+R13*1],0
            mov DWORD PTR [RCX+R13*1],1
.L_418af1:

            lea RSI,QWORD PTR [RIP+.L_419150]
            mov RDI,RAX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_418b1b

            mov RAX,QWORD PTR [RBX+32]
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [RAX+R13*1],1
.L_418b1b:

            add RDX,8
            cmp R9,RDX
            jne .L_418a80

            mov ECX,DWORD PTR [RSP+16]
            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_419154]
            xor EAX,EAX
            mov RDI,RBX
            call .L_41e240

            cmp DWORD PTR [RSP+16],1
            jle .L_418b6d

            lea EAX,DWORD PTR [RBP-2]
            lea RBP,QWORD PTR [R15+RAX*8+16]
            nop
.L_418b50:

            mov RDX,QWORD PTR [R14]
            lea RSI,QWORD PTR [RIP+.L_41916c]
            xor EAX,EAX
            mov RDI,RBX
            add R14,8
            call .L_41e240

            cmp RBP,R14
            jne .L_418b50
.L_418b6d:

            mov EDI,DWORD PTR [RSP+16]
            mov RSI,R15
            call .L_403690

            mov EDX,DWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_419173]
            mov RBP,RAX
            mov RCX,RAX
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e240

            test RBP,RBP
            je .L_418e81

            mov RAX,QWORD PTR [RBX+32]
            lea RSI,QWORD PTR [RIP+.L_41918b]
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX+6456]
            mov QWORD PTR [RAX+R13*2],RBP
            xor EAX,EAX
            add R13,4
            call .L_41e240

            add DWORD PTR [RSP+8],1
            mov R14D,DWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+8]
            cmp DWORD PTR [RSP+20],EAX
            jne .L_4189b0

            mov EDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_4190c8]
            xor EAX,EAX
            mov RDI,RBX
            call .L_41e240

            mov RSI,QWORD PTR [RBX+32]
            mov RCX,QWORD PTR [RSI+24]
            mov EAX,DWORD PTR [RCX+4]
            test EAX,EAX
            je .L_418f2d

            mov EAX,2
            mov EDI,DWORD PTR [RSP+8]
            jmp .L_418c29
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418c10:

            lea RDX,QWORD PTR [RAX+1]
            lea R9,QWORD PTR [RAX*4]
            mov R13D,DWORD PTR [RCX+RDX*4-4]
            test R13D,R13D
            je .L_418c4e

            mov RAX,RDX
.L_418c29:

            add R12D,1
            cmp R12D,EDI
            jne .L_418c10

            cmp DWORD PTR [RSP+20],R12D
            je .L_418ed9
.L_418c3d:

            movsxd RAX,DWORD PTR [RSP+8]
            add RAX,1
            lea R9,QWORD PTR [RAX*4]
.L_418c4e:

            shl RAX,3
.L_418c52:

            mov RDI,QWORD PTR [RSI+16]
            mov R8,QWORD PTR [RSI+6456]
            mov R12D,DWORD PTR [RDI+R9*1]
            mov RAX,QWORD PTR [R8+RAX*1]
            test R12D,R12D
            je .L_418e9a

            mov EAX,DWORD PTR [RAX+324]
            mov EDX,1
            test EAX,EAX
            cmove EAX,EDX
            mov DWORD PTR [RBX+320],EAX
.L_418c84:

            mov EDX,DWORD PTR [RSP+44]
            mov ECX,EDX
            sub ECX,2
            js .L_418cdf

            mov R10,QWORD PTR [RSI+32]
            movsxd RSI,ECX
            lea R9,QWORD PTR [RSI+1]
            mov EBP,DWORD PTR [R10+R9*4]
            lea RAX,QWORD PTR [R9*4]
            test EBP,EBP
            je .L_418cf7

            mov ECX,ECX
            sub EDX,3
            sub RAX,4
            sub RSI,RCX
            movsxd RDX,EDX
            shl RSI,2
            jmp .L_418cd8
          .byte 0x90
.L_418cc0:

            mov R11D,DWORD PTR [R10+RAX*1]
            lea R9,QWORD PTR [RDX+1]
            sub RDX,1
            lea RCX,QWORD PTR [RAX-4]
            test R11D,R11D
            je .L_418cf7

            mov RAX,RCX
.L_418cd8:

            cmp RSI,RAX
            mov ECX,EDX
            jne .L_418cc0
.L_418cdf:

            cmp ECX,-1
            je .L_418efb

            movsxd RCX,ECX
            lea R9,QWORD PTR [RCX+1]
            lea RAX,QWORD PTR [R9*4]
.L_418cf7:

            mov ECX,DWORD PTR [RDI+RAX*1]
            mov RDX,QWORD PTR [R8+R9*8]
            test ECX,ECX
            je .L_418eb5

            mov EAX,DWORD PTR [RDX+320]
            test EAX,EAX
            je .L_418ee5
.L_418d14:

            cmp EAX,2
            mov DWORD PTR [RBX+324],EAX
            lea RCX,QWORD PTR [RIP+.L_41910a]
            lea RAX,QWORD PTR [RIP+.L_44f380-221822]
            cmove RCX,RAX
.L_418d2f:

            cmp DWORD PTR [RBX+320],2
            lea RAX,QWORD PTR [RIP+.L_44f380-221822]
            lea RDX,QWORD PTR [RIP+.L_41910a]
            lea RSI,QWORD PTR [RIP+.L_44f380-221928]
            mov RDI,RBX
            cmove RDX,RAX
            xor EAX,EAX
            call .L_41e240

            mov RAX,RBX
.L_418d5c:

            add RSP,56
.L_418d60:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418d70:

            mov RDI,RDX
            mov ECX,14
            mov RSI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_4188a8

            cmp EBP,-1
            jne .L_418e75

            mov EBP,EAX
            jmp .L_4188a8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418da0:

            lea RSI,QWORD PTR [RIP+.L_419018]
.L_418da7:

            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0
.L_418db1:

            mov ESI,4294967246
.L_418db6:

            add RSP,56
.L_418dba:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_418650
.L_418dcc:

            mov RAX,QWORD PTR [RBX+32]
            mov ESI,12
            mov QWORD PTR [RAX+40],0
            jmp .L_418db6
          .byte 0x90
.L_418de0:

            mov ESI,12
            jmp .L_418db6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418df0:

            mov ESI,8
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            mov R13,RAX
            je .L_418dcc

            lea RAX,QWORD PTR [RIP+.L_65f040]
            mov ESI,8
            mov EDI,1
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RAX+40],R13
            call .L_403c70

            mov R12,QWORD PTR [RBX+32]
            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_418de0

            mov R14D,1
            jmp .L_41884d
.L_418e45:

            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_419154]
            xor ECX,ECX
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e240

            jmp .L_418b6d
.L_418e60:

            xor EAX,EAX
            jmp .L_418d5c
.L_418e67:

            mov DWORD PTR [R12+4],4294967295
            jmp .L_418db1
.L_418e75:

            lea RSI,QWORD PTR [RIP+.L_419124]
            jmp .L_418da7
.L_418e81:

            mov RDX,QWORD PTR [R15]
            lea RSI,QWORD PTR [RIP+.L_419070]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0

            jmp .L_418db1
.L_418e9a:

            mov EAX,DWORD PTR [RAX+320]
            mov EDX,2
            test EAX,EAX
            cmove EAX,EDX
            mov DWORD PTR [RBX+320],EAX
            jmp .L_418c84
.L_418eb5:

            mov EAX,DWORD PTR [RDX+324]
            test EAX,EAX
            jne .L_418d14

            mov DWORD PTR [RBX+324],1
            lea RCX,QWORD PTR [RIP+.L_41910a]
            jmp .L_418d2f
.L_418ed9:

            lea RSI,QWORD PTR [RIP+.L_4191a2]
            jmp .L_418da7
.L_418ee5:

            mov DWORD PTR [RBX+324],2
            lea RCX,QWORD PTR [RIP+.L_44f380-221822]
            jmp .L_418d2f
.L_418efb:

            lea RSI,QWORD PTR [RIP+.L_4191bd]
            jmp .L_418da7
.L_418f07:

            mov EDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_4190c8]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e240

            mov DWORD PTR [RSP+8],0
            mov RSI,QWORD PTR [RBX+32]
            jmp .L_418c3d
.L_418f2d:

            mov EAX,8
            mov R9D,4
            jmp .L_418c52
.L_418f3d:

            nop
            nop
            nop
.L_418f40:

            test RDI,RDI
            je .L_418f50

            jmp .L_418730
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_418f7e

            lea RDX,QWORD PTR [RIP+.L_418620]
            lea RCX,QWORD PTR [RIP+.L_4191e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_418f7e:

            add RSP,8
            ret 
.L_418f83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418f90:

            xor EAX,EAX
            ret 
.L_418f93:

            nop
            nop
            nop
            nop
            nop
.L_418f98:

            outsb DX,BYTE PTR [RSI]
            pop RBX
            and EAX,1681010226
            pop RBP
            cmp AH,BYTE PTR [RAX]
            and EAX,825110578
            xor EAX,841293927
            xor BYTE PTR [RSI],CH
            xor DWORD PTR [RIP+.L_65fea8+838906228],ESI
            xor BYTE PTR [RSI],CH
            xor DWORD PTR [RIP+.L_65fea8+537440636],ESI
            and EAX,543568942
            and EAX,6698030
            add BYTE PTR [RDI+117],CL
            je .L_419027
          .byte 0x20
          .byte 0x5d
          .byte 0x3a
          .byte 0x20
          .byte 0x25
          .byte 0x32
          .byte 0x30
          .byte 0x2e
          .byte 0x31
          .byte 0x35
          .byte 0x67
          .byte 0x20
          .byte 0x25
          .byte 0x32
          .byte 0x30
          .byte 0x2e
          .byte 0x31
          .byte 0x35
          .byte 0x67
          .byte 0x20
          .byte 0x25
          .byte 0x32
          .byte 0x30
          .byte 0x2e
          .byte 0x31
          .byte 0x35
          .byte 0x67
          .byte 0x0
.L_418fe8:
          .string "In[%2.2d]: %20.15g %20.15g %20.15g - %20.20s"
          .zero 3
.L_419018:
          .byte 0x50
          .byte 0x69
          .byte 0x70
          .byte 0x65
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x3a
          .byte 0x20
          .byte 0x2b
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
.L_419027:

            and BYTE PTR [RDX+101],AH
            outsw DX,WORD PTR [RSI]
            jb .L_419093
          .byte 0x20
          .byte 0x2b
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x6a
          .byte 0x3d
          .byte 0x70
          .byte 0x69
          .byte 0x70
          .byte 0x65
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419040:
          .string "Pipeline: Building arg list for step no. %d"
          .zero 4
.L_419070:
          .string "Pipeline: Bad step definition: %s"
          .zero 1
.L_419093:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+105],DL
            jo .L_419101
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x3a
          .byte 0x20
          .byte 0x55
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x73
          .byte 0x20
          .byte 0x2d
          .byte 0x20
          .byte 0x6c
          .byte 0x65
          .byte 0x66
          .byte 0x74
          .byte 0x3a
          .byte 0x20
          .byte 0x5b
          .byte 0x25
          .byte 0x73
          .byte 0x5d
          .byte 0x2c
          .byte 0x20
          .byte 0x72
          .byte 0x69
          .byte 0x67
          .byte 0x68
          .byte 0x74
          .byte 0x3a
          .byte 0x20
          .byte 0x5b
          .byte 0x25
          .byte 0x73
          .byte 0x5d
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4190c8:
          .byte 0x50
          .byte 0x69
          .byte 0x70
          .byte 0x65
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x3a
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x73
          .byte 0x20
          .byte 0x62
          .byte 0x75
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x2e
          .byte 0x20
          .byte 0x44
          .byte 0x65
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6d
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x69
          .byte 0x2f
          .byte 0x6f
          .byte 0x20
          .byte 0x63
          .byte 0x68
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x63
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x69
          .byte 0x73
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0x73
.L_419101:

            add BYTE PTR [RCX+110],AH
            jne .L_419173
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_41910a:
          .string "linear"
.L_419111:
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x0
.L_419116:
          .string "proj=pipeline"
.L_419124:
          .string "Pipeline: Nesting invalid"
.L_41913e:
          .string "omit_inv"
.L_419147:
          .string "omit_fwd"
.L_419150:
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x0
.L_419154:
          .string "Pipeline: init - %s, %d"
.L_41916c:
          .string "    %s"
.L_419173:

            push RAX
            imul ESI,DWORD PTR [RAX+101],1701734764
            cmp AH,BYTE PTR [RAX]
          .byte 0x53
          .byte 0x74
          .byte 0x65

            jo .L_4191a2
          .byte 0x25
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x74
          .byte 0x20
          .byte 0x25
          .byte 0x70
          .byte 0x0
.L_41918b:

            push RAX
            imul ESI,DWORD PTR [RAX+101],1701734764
            cmp AH,BYTE PTR [RAX]
            and BYTE PTR [RAX],AH
            and BYTE PTR [RBX+116],DH
            jo .L_4191bd
          .byte 0x64
          .byte 0x6f
          .byte 0x6e
          .byte 0x65
          .byte 0x0
.L_4191a2:

            push RAX
            imul ESI,DWORD PTR [RAX+101],1701734764
            cmp AH,BYTE PTR [RAX]
            outsd DX,DWORD PTR [RSI]
            and BYTE PTR [RSI+111],AH
            jb .L_41922a
          .byte 0x61
          .byte 0x72
          .byte 0x64
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x73
          .byte 0x0
.L_4191bd:

            push RAX
            imul ESI,DWORD PTR [RAX+101],1701734764
            cmp AH,BYTE PTR [RAX]
            outsd DX,DWORD PTR [RSI]
            and BYTE PTR [RDX+101],DH
            jbe .L_419233

            jb .L_419243
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x65
          .byte 0x70
          .byte 0x73
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4191e0:
          .string "Transformation pipeline manager"
.L_419200:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+40]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+24]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+16]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+.L_41925c]
            call .L_403ca0
# WARNING: found overlapping blocks at address 18ffa
.set .L_41922a, . - 7

            mov RDI,QWORD PTR [RBX+.L_41926d]
            call .L_403ca0
# WARNING: found overlapping blocks at address 19003
.set .L_419233, . - 7

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
.L_419243:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419250:

            test RDI,RDI
            je .L_419278

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
.L_41925c:

            je .L_41926e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_419200

            mov RDI,RBX
.L_41926d:

            pop RBX
.L_41926e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419278:

            xor EAX,EAX
            ret 
.L_41927b:

            nop
            nop
            nop
            nop
            nop
.L_419280:

            jmp .L_419250
.L_419282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419290:

            test RDI,RDI
            je .L_419370

            test ESI,ESI
            jne .L_4192a0

            ret 
          .byte 0x90
.L_4192a0:

            mov EAX,DWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            mov RCX,QWORD PTR [RDI+56]
            lea EDX,DWORD PTR [RAX+RAX*1+2]
            mov RAX,QWORD PTR [RDI+48]
            movsxd RDX,EDX
            shl RDX,3
            cmp ESI,1
            je .L_419380

            mov RAX,QWORD PTR [RDI+72]
            movapd XMM2,XMM1
            add RDX,RCX
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM2,QWORD PTR [RAX+8]
.L_4192d7:

            movq XMM1,QWORD PTR [RIP+.L_419db0]
            movapd XMM4,XMM2
            andpd XMM4,XMM1
            ucomisd XMM4,XMM3
            ja .L_4193a0

            andpd XMM1,XMM0
            ucomisd XMM1,XMM3
            ja .L_4193a0

            lea RAX,QWORD PTR [RDX-16]
            movsd XMM4,QWORD PTR [RDX-8]
            movsd XMM1,QWORD PTR [RDX-16]
            cmp RCX,RAX
            jae .L_4193c0

            sub RDX,RCX
            sub RDX,17
            not RDX
            and RDX,-16
            add RDX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419330:

            movapd XMM3,XMM2
            movapd XMM5,XMM0
            sub RAX,16
            mulsd XMM3,XMM4
            mulsd XMM5,XMM1
            mulsd XMM4,XMM0
            mulsd XMM1,XMM2
            addsd XMM3,XMM5
            subsd XMM1,XMM4
            addsd XMM3,QWORD PTR [RAX+8]
            cmp RAX,RDX
            addsd XMM1,QWORD PTR [RAX]
            movapd XMM4,XMM3
            jne .L_419330
.L_419366:

            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419370:

            movsd XMM0,QWORD PTR [RIP+.L_419da0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419380:

            mov RCX,QWORD PTR [RDI+64]
            movapd XMM2,XMM1
            add RDX,RAX
            subsd XMM0,QWORD PTR [RCX]
            subsd XMM2,QWORD PTR [RCX+8]
            mov RCX,RAX
            jmp .L_4192d7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4193a0:

            sub RSP,8
.L_4193a4:

            call __errno_location@PLT

            movsd XMM0,QWORD PTR [RIP+.L_419da0]
            mov DWORD PTR [RAX],33
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_4193c0:

            movapd XMM3,XMM4
            jmp .L_419366
.L_4193c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4193d0:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,4294967295
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_419290

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_419426:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419430:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,1
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_419290

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_419486:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419490:

            test RDI,RDI
            je .L_419588

            test ESI,ESI
            jne .L_4194a0

            ret 
          .byte 0x90
.L_4194a0:

            mov R8D,DWORD PTR [RDI]
            movsd XMM3,QWORD PTR [RDI+8]
            lea EAX,DWORD PTR [R8+1]
            lea EDX,DWORD PTR [R8+2]
            imul EDX,EAX
            mov EAX,EDX
            shr EAX,31
            add EAX,EDX
            sar EAX,1
            cdqe 
            shl RAX,3
            cmp ESI,1
            mov RCX,RAX
            je .L_419598

            add RAX,QWORD PTR [RDI+40]
            add RCX,QWORD PTR [RDI+32]
            mov RDX,RAX
            mov RAX,QWORD PTR [RDI+72]
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM1,QWORD PTR [RAX+8]
.L_4194e6:

            movq XMM2,QWORD PTR [RIP+.L_419db0]
            movapd XMM4,XMM1
            andpd XMM4,XMM2
            ucomisd XMM4,XMM3
            ja .L_4195b8

            andpd XMM2,XMM0
            ucomisd XMM2,XMM3
            ja .L_4195b8

            test R8D,R8D
            lea RAX,QWORD PTR [RDX-8]
            movsd XMM4,QWORD PTR [RDX-8]
            lea RDX,QWORD PTR [RCX-8]
            movsd XMM5,QWORD PTR [RCX-8]
            jle .L_41957c

            mov ESI,R8D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419530:

            movsd XMM3,QWORD PTR [RAX-8]
            mov ECX,R8D
            sub RAX,8
            movsd XMM2,QWORD PTR [RDX-8]
            sub RDX,8
            nop
            nop
            nop
.L_419548:

            mulsd XMM3,XMM1
            sub ECX,1
            sub RAX,8
            mulsd XMM2,XMM0
            sub RDX,8
            cmp ESI,ECX
            addsd XMM3,QWORD PTR [RAX]
            addsd XMM2,QWORD PTR [RDX]
            jle .L_419548

            mulsd XMM4,XMM0
            sub ESI,1
            mulsd XMM5,XMM1
            addsd XMM4,XMM3
            addsd XMM5,XMM2
            jne .L_419530
.L_41957c:

            movapd XMM1,XMM4
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419588:

            movsd XMM0,QWORD PTR [RIP+.L_419da0]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419598:

            add RAX,QWORD PTR [RDI+24]
            add RCX,QWORD PTR [RDI+16]
            mov RDX,RAX
            mov RAX,QWORD PTR [RDI+64]
            subsd XMM0,QWORD PTR [RAX]
            subsd XMM1,QWORD PTR [RAX+8]
            jmp .L_4194e6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4195b8:

            sub RSP,8
.L_4195bc:

            call __errno_location@PLT

            movsd XMM0,QWORD PTR [RIP+.L_419da0]
            mov DWORD PTR [RAX],33
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_4195d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4195e0:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,4294967295
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_419490

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_419636:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419640:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RSI+32]
            mov ESI,1
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            call .L_419490

            movsd QWORD PTR [RSP+16],XMM0
            mov RAX,RBX
            movsd QWORD PTR [RSP+24],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+48],XMM0
            pop RBX

            ret 
.L_419696:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4196a0:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,RDX
            mov RBP,RDX
            sub RSP,40
.L_4196bd:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+16],0
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+2]
            mov ESI,1
            call .L_403c70

            test RAX,RAX
            je .L_419818

            lea RCX,QWORD PTR [RIP+.L_419ca7]
            mov RDI,RAX
            mov R13,RAX
            mov R8,RBP
            mov RDX,-1
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_4043f0

            test EAX,EAX
            mov EDX,EAX
            jne .L_419750
.L_41972a:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_41983a

            add RSP,40
.L_419744:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_419750:

            lea RCX,QWORD PTR [RIP+.L_419cab]
            mov R8,RBP
            mov RDX,-1
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_4043f0

            mov RDI,R13
            mov R14,RAX
            call .L_403ca0

            test R15D,R15D
            jle .L_419830

            lea R13D,DWORD PTR [R15-1]
            lea RAX,QWORD PTR [R13+1]
            mov R13D,1
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4197ca
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4197b8:

            cmp BYTE PTR [RAX],44
            jne .L_4197f3

            lea R14,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+16],R14
.L_4197c6:

            add R13,1
.L_4197ca:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call .L_415ac0

            cmp QWORD PTR [RSP],R13
            movsd QWORD PTR [R12+R13*8-8],XMM0
            je .L_419830

            test R13D,R13D
            jle .L_4197c6

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            jne .L_4197b8
.L_4197f3:

            lea RSI,QWORD PTR [RIP+.L_419d08]
            mov RDX,RBP
            mov ECX,R15D
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0

            xor EDX,EDX
            jmp .L_41972a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419818:

            lea RSI,QWORD PTR [RIP+.L_419c93]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0

            xor EDX,EDX
            jmp .L_41972a
.L_419830:

            mov EDX,1
            jmp .L_41972a
.L_41983a:

            call __stack_chk_fail@PLT
.L_41983f:

            nop
.L_419840:

            push R13
            lea RAX,QWORD PTR [RIP+.L_419640]
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_419caf]
            sub RSP,8
.L_41985b:

            mov QWORD PTR [RDI+72],RAX
            lea RAX,QWORD PTR [RIP+.L_4195e0]
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov QWORD PTR [RDI+80],RAX
            mov QWORD PTR [RDI+40],0
            mov QWORD PTR [RDI+48],0
            mov DWORD PTR [RDI+324],1
            mov DWORD PTR [RDI+320],1
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_4043f0

            test EAX,EAX
            je .L_419a90

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_419cb4]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_419cb9]
            mov R12,RAX
            call .L_4043f0

            test EAX,EAX
            je .L_419aa8
.L_4198e3:

            mov ESI,80
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            mov RBP,RAX
            je .L_419a76

            lea R13D,DWORD PTR [R12+R12*1+2]
            mov DWORD PTR [RBP],R12D
            mov ESI,8
            movsxd R12,R13D
            mov DWORD PTR [RBP+4],R13D
            mov RDI,R12
            call .L_403c70

            mov ESI,8
            mov QWORD PTR [RBP+48],RAX
            mov RDI,R12
            call .L_403c70

            cmp QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],RAX
            je .L_419a48

            test RAX,RAX
            je .L_419a48

            mov ESI,16
            mov EDI,1
            call .L_403c70

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403c70

            cmp QWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],RAX
            je .L_419a6e

            test RAX,RAX
            je .L_419a6e

            mov RSI,QWORD PTR [RBP+48]
            lea RDX,QWORD PTR [RIP+.L_419d01]
            mov QWORD PTR [RBX+32],RBP
            mov ECX,R13D
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            mov RSI,QWORD PTR [RBP+56]
            lea RDX,QWORD PTR [RIP+.L_419cc7]
            mov ECX,R13D
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            lea RAX,QWORD PTR [RIP+.L_419430]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_4193d0]
            mov QWORD PTR [RBX+80],RAX
.L_4199d4:

            mov RSI,QWORD PTR [RBP+64]
            lea RDX,QWORD PTR [RIP+.L_419cdf]
            mov ECX,2
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            mov RSI,QWORD PTR [RBP+72]
            lea RDX,QWORD PTR [RIP+.L_419cea]
            mov ECX,2
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            lea RSI,QWORD PTR [RBP+8]
            lea RDX,QWORD PTR [RIP+.L_419cf5]
            mov ECX,1
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            jne .L_419a37

            mov RAX,QWORD PTR [RIP+.L_419da8]
            mov QWORD PTR [RBP+8],RAX
.L_419a37:

            add RSP,8
.L_419a3b:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419a48:

            mov ESI,16
            mov EDI,1
            call .L_403c70

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403c70

            mov QWORD PTR [RBP+72],RAX
.L_419a6e:

            mov RDI,RBP
            call .L_419200
.L_419a76:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_419250
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419a90:

            lea RSI,QWORD PTR [RIP+.L_419d40]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e170

            jmp .L_419a76
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419aa8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_419cc0]
            call .L_4043f0

            test EAX,EAX
            jne .L_4198e3

            movsxd RAX,R12D
            mov ESI,80
            mov EDI,1
            lea R13,QWORD PTR [RAX+1]
            add RAX,2
            imul R13,RAX
            call .L_403c70

            mov RBP,RAX
            shr R13,1
            test RAX,RAX
            je .L_419a76

            mov DWORD PTR [RAX+4],R13D
            movsxd R13,R13D
            mov ESI,8
            mov RDI,R13
            mov DWORD PTR [RAX],R12D
            call .L_403c70

            mov ESI,8
            mov RDI,R13
            mov QWORD PTR [RBP+16],RAX
            call .L_403c70

            mov ESI,8
            mov RDI,R13
            mov QWORD PTR [RBP+24],RAX
            call .L_403c70

            mov ESI,8
            mov QWORD PTR [RBP+32],RAX
            mov RDI,R13
            call .L_403c70

            cmp QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+40],RAX
            je .L_419a48

            cmp QWORD PTR [RBP+24],0
            je .L_419a48

            cmp QWORD PTR [RBP+32],0
            je .L_419a48

            test RAX,RAX
            je .L_419a48

            mov ESI,16
            mov EDI,1
            call .L_403c70

            mov ESI,16
            mov QWORD PTR [RBP+64],RAX
            mov EDI,1
            call .L_403c70

            cmp QWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],RAX
            je .L_419a6e

            test RAX,RAX
            je .L_419a6e

            lea EAX,DWORD PTR [R12+1]
            add R12D,2
            mov RSI,QWORD PTR [RBP+16]
            lea RDX,QWORD PTR [RIP+.L_44f380-218757]
            mov QWORD PTR [RBX+32],RBP
            mov RDI,RBX
            imul EAX,R12D
            mov R12D,EAX
            shr R12D,31
            add R12D,EAX
            sar R12D,1
            mov ECX,R12D
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            mov RSI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_419ccd]
            mov ECX,R12D
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            mov RSI,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RIP+.L_419cd3]
            mov ECX,R12D
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            je .L_419a76

            mov RSI,QWORD PTR [RBP+40]
            lea RDX,QWORD PTR [RIP+.L_419cd9]
            mov ECX,R12D
            mov RDI,RBX
            call .L_4196a0

            test EAX,EAX
            jne .L_4199d4

            jmp .L_419a76
.L_419c39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c40:

            test RDI,RDI
            je .L_419c50

            jmp .L_419840
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419c50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_419c7e

            lea RDX,QWORD PTR [RIP+.L_419280]
            lea RCX,QWORD PTR [RIP+.L_419d80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_419c7e:

            add RSP,8
            ret 
.L_419c83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c90:

            xor EAX,EAX
            ret 
.L_419c93:
          .string "Horner: Out of core"
.L_419ca7:
          .string "t%s"
.L_419cab:
          .string "s%s"
.L_419caf:
          .string "tdeg"
.L_419cb4:
          .string "ideg"
.L_419cb9:
          .string "tfwd_c"
.L_419cc0:
          .string "tinv_c"
.L_419cc7:
          .string "inv_c"
.L_419ccd:
          .string "fwd_v"
.L_419cd3:
          .string "inv_u"
.L_419cd9:

            imul EBP,DWORD PTR [RSI+118],1711306335
            ja .L_419d46
# WARNING: found overlapping blocks at address 19aaf
.set .L_419cdf, . - 3

          .byte 0x5f
          .byte 0x6f
          .byte 0x72
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x0
.L_419cea:
          .string "inv_origin"
.L_419cf5:
          .string "range"
# WARNING: found overlapping blocks at address 19ac7

            ja 105266
            pop RDI
            jne .L_419d01
.L_419d01:

            ja .L_419d68
          .byte 0x5f
          .byte 0x63
          .byte 0x0
          .byte 0x90
.L_419d08:
          .string "Horner: Malformed polynomium set %s. need %d coefs"
          .zero 5
.L_419d40:
          .byte 0x48
          .byte 0x6f
          .byte 0x72
          .byte 0x6e
          .byte 0x65
          .byte 0x72
.L_419d46:

            cmp AH,BYTE PTR [RAX]
            jne .L_419dbe
          .byte 0x74
          .byte 0x20
          .byte 0x73
          .byte 0x70
          .byte 0x65
          .byte 0x63
          .byte 0x69
          .byte 0x66
          .byte 0x79
          .byte 0x20
          .byte 0x70
          .byte 0x6f
          .byte 0x6c
          .byte 0x79
          .byte 0x6e
          .byte 0x6f
          .byte 0x6d
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x67
          .byte 0x72
          .byte 0x65

            sub AL,32
.L_419d68:

            sub BYTE PTR [RBX],CH
            cmp EAX,1711286638
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419d80:

            outsd DX,DWORD PTR [RSI]
            jb .L_419df2
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x70
          .byte 0x6f
          .byte 0x6c
          .byte 0x79
          .byte 0x6e
          .byte 0x6f
          .byte 0x6d
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x75
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419da0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_419da8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x1e
          .byte 0x41
.L_419db0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419dbe:

            add BYTE PTR [RAX],AL
.L_419dc0:

            test RDI,RDI
            je .L_419df0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_419dd6

            call .L_404af0
.L_419dd6:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_419de4

            call .L_403ca0
.L_419de4:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419df0:

            xor EAX,EAX
.L_419df2:

            ret 
.L_419df3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419e00:

            xor ESI,ESI
            jmp .L_419dc0
.L_419e04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419e10:

            push RBX
            sub RSP,32

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM0,QWORD PTR [RBX+168]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBX+144]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            subsd XMM4,QWORD PTR [RBX+24]
            subsd XMM1,QWORD PTR [RBX+32]
            movapd XMM5,XMM3
            add RSP,32

            pop RBX
            mulsd XMM0,XMM4
            mulsd XMM5,XMM1
            mulsd XMM3,XMM4
            mulsd XMM1,XMM2
            subsd XMM0,XMM5
            addsd XMM1,XMM3
            ret 
.L_419e92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419ea0:

            sub RSP,56
.L_419ea4:

            mov RDX,QWORD PTR [RSI+32]
            mov RAX,RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RDX+292]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+80]
            test EDI,EDI
            jne .L_419fd0

            mov ECX,DWORD PTR [RDX+280]
            subsd XMM0,QWORD PTR [RDX]
            subsd XMM1,QWORD PTR [RDX+8]
            subsd XMM2,QWORD PTR [RDX+16]
            test ECX,ECX
            jne .L_419fc0

            movsd XMM3,QWORD PTR [RIP+.L_41b430]
            movsd XMM4,QWORD PTR [RDX+200]
            mulsd XMM3,QWORD PTR [RDX+144]
            movsd XMM5,QWORD PTR [RDX+232]
            addsd XMM3,QWORD PTR [RIP+.L_41b438]
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RDX+224]
            mulsd XMM4,XMM0
            mulsd XMM3,XMM1
            mulsd XMM5,XMM1
            mulsd XMM1,QWORD PTR [RDX+216]
            addsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RDX+248]
            mulsd XMM3,XMM2
            addsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RDX+208]
            mulsd XMM3,XMM0
            mulsd XMM0,QWORD PTR [RDX+192]
            movsd QWORD PTR [RAX+8],XMM4
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RDX+256]
            mulsd XMM5,XMM2
            mulsd XMM2,QWORD PTR [RDX+240]
            addsd XMM0,XMM1
            addsd XMM3,XMM5
            addsd XMM0,XMM2
            movsd QWORD PTR [RAX+16],XMM3
            movsd QWORD PTR [RAX],XMM0
.L_419fa1:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41a008

            add RSP,56
.L_419fb5:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419fc0:

            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM2
            jmp .L_419fa1
.L_419fd0:

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RAX
            movsd QWORD PTR [RSP],XMM2
            call .L_419e10

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM2
            jmp .L_419fa1
.L_41a008:

            call __stack_chk_fail@PLT
.L_41a00d:

            nop
            nop
            nop
.L_41a010:

            push RBX
            sub RSP,32

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM0,QWORD PTR [RBX+168]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RBX+144]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            movapd XMM5,XMM2
            mulsd XMM2,XMM1
            mulsd XMM5,XMM4
            addsd XMM0,XMM2
            subsd XMM3,XMM5
            addsd XMM0,QWORD PTR [RBX+24]
            addsd XMM3,QWORD PTR [RBX+32]
            add RSP,32

            pop RBX
            movapd XMM1,XMM3
            ret 
.L_41a092:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a0a0:

            sub RSP,56
.L_41a0a4:

            mov RDX,QWORD PTR [RSI+32]
            mov RAX,RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            movsd XMM0,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RDX+292]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+80]
            test EDI,EDI
            jne .L_41a1f0

            mov ECX,DWORD PTR [RDX+280]
            movsd XMM5,QWORD PTR [RDX]
            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+16]
            test ECX,ECX
            jne .L_41a1d0

            movsd XMM3,QWORD PTR [RDX+216]
            movsd XMM8,QWORD PTR [RDX+224]
            mulsd XMM3,XMM0
            mulsd XMM8,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_41b430]
            mulsd XMM6,QWORD PTR [RDX+144]
            addsd XMM3,XMM8
            movsd XMM8,QWORD PTR [RDX+232]
            mulsd XMM8,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_41b438]
            addsd XMM3,XMM8
            movsd XMM8,QWORD PTR [RDX+248]
            mulsd XMM8,XMM1
            mulsd XMM1,QWORD PTR [RDX+200]
            mulsd XMM3,XMM6
            addsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RDX+240]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RDX+192]
            movsd QWORD PTR [RAX+8],XMM3
            addsd XMM2,XMM8
            movsd XMM8,QWORD PTR [RDX+256]
            mulsd XMM8,XMM4
            mulsd XMM4,QWORD PTR [RDX+208]
            addsd XMM0,XMM1
            addsd XMM2,XMM8
            addsd XMM0,XMM4
            mulsd XMM2,XMM6
            mulsd XMM0,XMM6
            addsd XMM2,XMM7
            addsd XMM0,XMM5
            movsd QWORD PTR [RAX+16],XMM2
            movsd QWORD PTR [RAX],XMM0
.L_41a1b9:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41a228

            add RSP,56
.L_41a1cd:

            ret 
          .byte 0x66
          .byte 0x90
.L_41a1d0:

            addsd XMM0,XMM5
            addsd XMM1,XMM2
            addsd XMM4,XMM7
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM4
            jmp .L_41a1b9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a1f0:

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RAX
            movsd QWORD PTR [RSP],XMM4
            call .L_41a010

            mov RAX,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+8],XMM1
            movsd QWORD PTR [RAX+16],XMM4
            jmp .L_41a1b9
.L_41a228:

            call __stack_chk_fail@PLT
.L_41a22d:

            nop
            nop
            nop
.L_41a230:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,4
            sub RSP,8
.L_41a23e:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RBX+272]
            movsd XMM1,QWORD PTR [RBX+48]
            subsd XMM0,QWORD PTR [RBX+264]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX],XMM1
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+8],XMM1
            movsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+16],XMM1
            movsd XMM1,QWORD PTR [RBX+120]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+96]
            movsd QWORD PTR [RBX+72],XMM1
            movsd XMM1,QWORD PTR [RBX+128]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+104]
            movsd QWORD PTR [RBX+80],XMM1
            movsd XMM1,QWORD PTR [RBX+136]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+112]
            movsd QWORD PTR [RBX+88],XMM1
            movsd XMM1,QWORD PTR [RBX+160]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RBX+184]
            addsd XMM1,QWORD PTR [RBX+152]
            addsd XMM0,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBX+144],XMM1
            movsd QWORD PTR [RBX+168],XMM0
            call .L_41e040

            cmp EAX,2
            ja .L_41a318

            add RSP,8
.L_41a30e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a318:

            movsd XMM0,QWORD PTR [RBX+272]
            lea RSI,QWORD PTR [RIP+.L_41b188]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RIP+.L_41b2b5]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_41b2bb]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_41b2c1]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RIP+.L_41b430]
            lea RSI,QWORD PTR [RIP+.L_41b2c7]
            mov RDI,RBP
            mov EAX,1
            mulsd XMM0,QWORD PTR [RBX+144]
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+72]
            lea RSI,QWORD PTR [RIP+.L_41b2cd]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+80]
            lea RSI,QWORD PTR [RIP+.L_41b2d4]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+88]
            lea RSI,QWORD PTR [RIP+.L_41b2db]
            mov RDI,RBP
            mov EAX,1
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+168]
            add RSP,8
.L_41a3f9:

            mov RDI,RBP
            lea RSI,QWORD PTR [RIP+.L_41b2e2]
            mov EAX,1
            pop RBX
            pop RBP
            jmp .L_41e240
.L_41a40f:

            nop
.L_41a410:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_41a41d:

            mov RBX,QWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RBX+284]
            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RBX+88]
            test EDX,EDX
            je .L_41a538

            movq XMM4,QWORD PTR [RIP+.L_41b450]
            movapd XMM5,XMM2
            movsd QWORD PTR [RBX+200],XMM0
            xorpd XMM5,XMM4
            movsd QWORD PTR [RBX+232],XMM3
            xorpd XMM0,XMM4
            movsd QWORD PTR [RBX+240],XMM2
            xorpd XMM3,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_41b438]
            movsd QWORD PTR [RBX+208],XMM5
            movsd QWORD PTR [RBX+192],XMM1
            movsd QWORD PTR [RBX+216],XMM0
            movsd QWORD PTR [RBX+224],XMM1
            movsd QWORD PTR [RBX+248],XMM3
            movsd QWORD PTR [RBX+256],XMM1
.L_41a4a6:

            mov EAX,DWORD PTR [RBX+288]
            test EAX,EAX
            je .L_41a510

            movsd XMM0,QWORD PTR [RBX+200]
            movsd XMM1,QWORD PTR [RBX+216]
            movsd QWORD PTR [RBX+216],XMM0
            movsd QWORD PTR [RBX+200],XMM1
            movsd XMM0,QWORD PTR [RBX+208]
            movsd XMM1,QWORD PTR [RBX+240]
            movsd QWORD PTR [RBX+240],XMM0
            movsd QWORD PTR [RBX+208],XMM1
            movsd XMM0,QWORD PTR [RBX+232]
            movsd XMM1,QWORD PTR [RBX+248]
            movsd QWORD PTR [RBX+248],XMM0
            movsd QWORD PTR [RBX+232],XMM1
.L_41a510:

            mov RDI,QWORD PTR [RBP]
            mov ESI,4
            call .L_41e040

            cmp EAX,2
            ja .L_41a6b8

            add RSP,72
.L_41a52b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a538:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RSI,R13
            movsd XMM1,QWORD PTR [RSP+48]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM6,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM3,XMM5
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM6,XMM7
            movsd QWORD PTR [RBX+240],XMM7
            mulsd XMM3,XMM1
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM8,XMM6
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX+192],XMM3
            movapd XMM3,XMM2
            mulsd XMM8,XMM1
            mulsd XMM3,XMM4
            addsd XMM3,XMM8
            movapd XMM8,XMM0
            mulsd XMM8,XMM4
            movsd QWORD PTR [RBX+200],XMM3
            movapd XMM3,XMM2
            mulsd XMM3,XMM7
            movapd XMM9,XMM3
            mulsd XMM9,XMM1
            subsd XMM8,XMM9
            movq XMM9,QWORD PTR [RIP+.L_41b450]
            movsd QWORD PTR [RBX+208],XMM8
            movapd XMM8,XMM5
            xorpd XMM8,XMM9
            mulsd XMM8,XMM4
            mulsd XMM4,XMM3
            movsd QWORD PTR [RBX+216],XMM8
            movapd XMM8,XMM2
            mulsd XMM2,XMM5
            mulsd XMM8,XMM1
            mulsd XMM1,XMM0
            xorpd XMM0,XMM9
            movsd QWORD PTR [RBX+256],XMM2
            subsd XMM8,XMM6
            addsd XMM1,XMM4
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBX+224],XMM8
            movsd QWORD PTR [RBX+232],XMM1
            movsd QWORD PTR [RBX+248],XMM0
            jmp .L_41a4a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6b8:

            lea RSI,QWORD PTR [RIP+.L_41b2ec]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e240

            movsd XMM2,QWORD PTR [RBX+208]
            lea RSI,QWORD PTR [RIP+.L_41b2fd]
            movsd XMM1,QWORD PTR [RBX+200]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+192]
            mov EAX,3
            call .L_41e240

            movsd XMM2,QWORD PTR [RBX+232]
            lea RSI,QWORD PTR [RIP+.L_41b2fd]
            movsd XMM1,QWORD PTR [RBX+224]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+216]
            mov EAX,3
            call .L_41e240

            movsd XMM0,QWORD PTR [RBX+240]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RBX+256]
            lea RSI,QWORD PTR [RIP+.L_41b2fd]
            movsd XMM1,QWORD PTR [RBX+248]
            add RSP,72
.L_41a747:

            pop RBX
            pop RBP
            pop R12
            pop R13
            mov EAX,3
            jmp .L_41e240
.L_41a757:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a760:

            push RBX
            mov RBX,RDI
            sub RSP,64
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,QWORD PTR [RAX+272]
            jp .L_41a810

            jne .L_41a810
.L_41a792:

            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
.L_41a7a7:

            call .L_419ea0

            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RSP+112],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            add RSP,32
.L_41a7f1:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41a83c

            add RSP,64
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a810:

            movsd QWORD PTR [RAX+272],XMM0
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_41a230

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RSI
            call .L_41a410

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_41a792
.L_41a83c:

            call __stack_chk_fail@PLT
.L_41a841:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a850:

            push RBX
            mov RBX,RDI
            sub RSP,64
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSP+104]
            ucomisd XMM0,QWORD PTR [RAX+272]
            jp .L_41a900

            jne .L_41a900
.L_41a882:

            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
.L_41a897:

            call .L_41a0a0

            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RSP+112],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            add RSP,32
.L_41a8e1:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41a92c

            add RSP,64
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a900:

            movsd QWORD PTR [RAX+272],XMM0
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_41a230

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RSI
            call .L_41a410

            mov RSI,QWORD PTR [RSP+8]
            jmp .L_41a882
.L_41a92c:

            call __stack_chk_fail@PLT
.L_41a931:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a940:

            push RBP
            push RBX
            mov ESI,296
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_41a953:

            call .L_403c70

            test RAX,RAX
            mov ESI,12
            je .L_41ae0f

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_41a850]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b31a]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41a760]
            mov DWORD PTR [RBX+320],1
            mov DWORD PTR [RBX+324],1
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41a0a0]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_419ea0]
            mov QWORD PTR [RBX+64],RAX
            lea RAX,QWORD PTR [RIP+.L_41a010]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_419e10]
            mov QWORD PTR [RBX+48],RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_41af40
.L_41a9de:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b320]
            call .L_4043f0

            test EAX,EAX
            jne .L_41af20
.L_41a9f9:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b326]
            call .L_4043f0

            test EAX,EAX
            jne .L_41af00
.L_41aa14:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b32c]
            call .L_4043f0

            test EAX,EAX
            jne .L_41aed0
.L_41aa2f:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b334]
            call .L_4043f0

            test EAX,EAX
            jne .L_41aea0
.L_41aa4a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b33c]
            call .L_4043f0

            test EAX,EAX
            jne .L_41ae70
.L_41aa65:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b344]
            call .L_4043f0

            test EAX,EAX
            jne .L_41ae20
.L_41aa80:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b352]
            call .L_4043f0

            test EAX,EAX
            jne .L_41adb8

            pxor XMM5,XMM5
            movsd QWORD PTR [RSP],XMM5
.L_41aaa4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b358]
            call .L_4043f0

            test EAX,EAX
            jne .L_41afc0
.L_41aabf:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b360]
            call .L_4043f0

            test EAX,EAX
            jne .L_41afa0
.L_41aada:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b368]
            call .L_4043f0

            test EAX,EAX
            jne .L_41af80
.L_41aaf5:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b370]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b0e8
.L_41ab10:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b37a]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b0b0
.L_41ab2b:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b384]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b078
.L_41ab46:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b38e]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b040
.L_41ab61:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b39e]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b020
.L_41ab7c:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3a6]
            call .L_4043f0

            test EAX,EAX
            jne .L_41b000
.L_41ab97:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3b4]
            call .L_4043f0

            test EAX,EAX
            jne .L_41afe0
.L_41abb2:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3c0]
            call .L_4043f0

            test EAX,EAX
            je .L_41abd3

            mov DWORD PTR [RBP+284],1
.L_41abd3:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3c8]
            call .L_4043f0

            test EAX,EAX
            je .L_41abf4

            mov DWORD PTR [RBP+288],1
.L_41abf4:

            movdqu XMM0,XMMWORD PTR [RBP+24]
            mov ESI,4
            mov RAX,QWORD PTR [RBP+40]
            mov RDI,QWORD PTR [RBX]
            movups XMMWORD PTR [RBP],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+96]
            mov QWORD PTR [RBP+16],RAX
            mov RAX,QWORD PTR [RBP+112]
            movups XMMWORD PTR [RBP+72],XMM0
            movsd XMM0,QWORD PTR [RBP+152]
            mov QWORD PTR [RBP+88],RAX
            movsd QWORD PTR [RBP+144],XMM0
            movsd XMM0,QWORD PTR [RBP+176]
            movsd QWORD PTR [RBP+168],XMM0
            call .L_41e040

            cmp EAX,1
            jbe .L_41ad57

            lea RSI,QWORD PTR [RIP+.L_41b3d3]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e170

            movsd XMM2,QWORD PTR [RBP+16]
            lea RSI,QWORD PTR [RIP+.L_41b1c0]
            movsd XMM1,QWORD PTR [RBP+8]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP]
            mov EAX,3
            call .L_41e170

            movsd XMM3,QWORD PTR [RIP+.L_41b440]
            lea RSI,QWORD PTR [RIP+.L_41b1e8]
            movsd XMM2,QWORD PTR [RBP+88]
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RBP+80]
            mov EAX,3
            movsd XMM0,QWORD PTR [RBP+72]
            divsd XMM2,XMM3
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            call .L_41e170

            mov ECX,DWORD PTR [RBP+288]
            mov EDX,DWORD PTR [RBP+284]
            lea RSI,QWORD PTR [RIP+.L_41b210]
            movsd XMM0,QWORD PTR [RBP+144]
            mov RDI,RBX
            mov EAX,1
            call .L_41e170

            movsd XMM2,QWORD PTR [RBP+64]
            lea RSI,QWORD PTR [RIP+.L_41b240]
            movsd XMM1,QWORD PTR [RBP+56]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+48]
            mov EAX,3
            call .L_41e170

            movsd XMM2,QWORD PTR [RBP+136]
            lea RSI,QWORD PTR [RIP+.L_41b268]
            movsd XMM1,QWORD PTR [RBP+128]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+120]
            mov EAX,3
            call .L_41e170

            movsd XMM2,QWORD PTR [RBP+272]
            lea RSI,QWORD PTR [RIP+.L_41b290]
            movsd XMM1,QWORD PTR [RBP+264]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RBP+160]
            mov EAX,3
            call .L_41e170
.L_41ad57:

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,QWORD PTR [RBP+72]
            jp .L_41af60

            jne .L_41af60

            ucomisd XMM4,QWORD PTR [RBP+80]
            jp .L_41af60

            jne .L_41af60

            ucomisd XMM4,QWORD PTR [RBP+88]
            jp .L_41af60

            jne .L_41af60

            ucomisd XMM4,QWORD PTR [RBP+144]
            jp .L_41af60

            jne .L_41af60

            mov DWORD PTR [RBP+280],1
            jmp .L_41af70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41adb8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b355]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b344]
            mov QWORD PTR [RBP+152],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_41b120

            pxor XMM6,XMM6
            ucomisd XMM6,QWORD PTR [RBP+152]
            movsd QWORD PTR [RSP],XMM6
            jp .L_41aaa4

            jne .L_41aaa4

            mov ESI,52
.L_41ae0f:

            add RSP,24
.L_41ae13:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_419dc0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ae20:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b34b]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RIP+.L_41b438]
            movsd XMM0,QWORD PTR [RSP]
            mov DWORD PTR [RBP+292],1
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            mov QWORD PTR [RBP+152],RAX
            movsd QWORD PTR [RBP+176],XMM0
            jmp .L_41aa80
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ae70:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b340]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+112],XMM0
            jmp .L_41aa65
          .byte 0x66
          .byte 0x90
.L_41aea0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b338]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+104],XMM0
            jmp .L_41aa4a
          .byte 0x66
          .byte 0x90
.L_41aed0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b330]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+96],XMM0
            jmp .L_41aa2f
          .byte 0x66
          .byte 0x90
.L_41af00:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b329]
            call .L_4043f0

            mov QWORD PTR [RBP+40],RAX
            jmp .L_41aa14
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41af20:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b323]
            call .L_4043f0

            mov QWORD PTR [RBP+32],RAX
            jmp .L_41a9f9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41af40:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b31d]
            call .L_4043f0

            mov QWORD PTR [RBP+24],RAX
            jmp .L_41a9de
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41af60:

            mov RDI,RBX
            call .L_41a230

            mov RDI,RBX
            call .L_41a410
.L_41af70:

            add RSP,24
.L_41af74:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41af80:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b36c]
            call .L_4043f0

            mov QWORD PTR [RBP+64],RAX
            jmp .L_41aaf5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41afa0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b364]
            call .L_4043f0

            mov QWORD PTR [RBP+56],RAX
            jmp .L_41aada
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41afc0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b35c]
            call .L_4043f0

            mov QWORD PTR [RBP+48],RAX
            jmp .L_41aabf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41afe0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3ba]
            call .L_4043f0

            mov QWORD PTR [RBP+272],RAX
            jmp .L_41abb2
          .byte 0x90
.L_41b000:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3ad]
            call .L_4043f0

            mov QWORD PTR [RBP+264],RAX
            jmp .L_41ab97
          .byte 0x90
.L_41b020:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b3a2]
            call .L_4043f0

            mov QWORD PTR [RBP+160],RAX
            jmp .L_41ab7c
          .byte 0x90
.L_41b040:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b396]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+184],XMM0
            jmp .L_41ab61
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b078:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b389]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+136],XMM0
            jmp .L_41ab46
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b0b0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b37f]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+128],XMM0
            jmp .L_41ab2b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b0e8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b375]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_41b440]
            movsd QWORD PTR [RBP+120],XMM0
            jmp .L_41ab10
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b120:

            pxor XMM7,XMM7
            movsd QWORD PTR [RSP],XMM7
            jmp .L_41aaa4
.L_41b12e:

            nop
            nop
.L_41b130:

            test RDI,RDI
            je .L_41b140

            jmp .L_41a940
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b140:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41b16e

            lea RDX,QWORD PTR [RIP+.L_419e00]
            lea RCX,QWORD PTR [RIP+.L_41b400]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41b16e:

            add RSP,8
            ret 
.L_41b173:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b180:

            xor EAX,EAX
            ret 
.L_41b183:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b188:
          .string "Transformation parameters for observation epoch %g:"
          .zero 4
.L_41b1c0:
          .string "x=  % 3.5f  y=  % 3.5f  z=  % 3.5f"
          .zero 5
.L_41b1e8:
          .string "rx= % 3.5f  ry= % 3.5f  rz= % 3.5f"
          .zero 5
.L_41b210:
          .string "s=% 3.5f  approximate=% d  transpose=% d"
          .zero 7
.L_41b240:
          .string "dx= % 3.5f  dy= % 3.5f  dz= % 3.5f"
          .zero 5
.L_41b268:
          .string "drx=% 3.5f  dry=% 3.5f  drz=% 3.5f"
          .zero 5
.L_41b290:
          .string "ds=% 3.5f  epoch=% 5.5f  tobs=% 5.5f"
.L_41b2b5:
          .string "x: %g"
.L_41b2bb:
          .string "y: %g"
.L_41b2c1:
          .string "z: %g"
.L_41b2c7:
          .string "s: %g"
.L_41b2cd:
          .string "rx: %g"
.L_41b2d4:
          .string "ry: %g"
.L_41b2db:
          .string "rz: %g"
.L_41b2e2:
          .string "theta: %g"
.L_41b2ec:
          .string "Rotation Matrix:"
.L_41b2fd:
          .string "  | % 6.6g  % 6.6g  % 6.6g |"
.L_41b31a:
          .string "tx"
.L_41b31d:
          .string "dx"
.L_41b320:
          .string "ty"
.L_41b323:
          .string "dy"
.L_41b326:
          .string "tz"
.L_41b329:
          .string "dz"
.L_41b32c:
          .string "trx"
.L_41b330:
          .string "drx"
.L_41b334:
          .string "try"
.L_41b338:
          .string "dry"
.L_41b33c:
          .string "trz"
.L_41b340:
          .string "drz"
.L_41b344:
          .string "ttheta"
.L_41b34b:
          .string "dtheta"
.L_41b352:
          .string "ts"
.L_41b355:
          .string "ds"
.L_41b358:
          .string "tdx"
.L_41b35c:
          .string "ddx"
.L_41b360:
          .string "tdy"
.L_41b364:
          .string "ddy"
.L_41b368:
          .string "tdz"
.L_41b36c:
          .string "ddz"
.L_41b370:
          .string "tdrx"
.L_41b375:
          .string "ddrx"
.L_41b37a:

            je .L_41b3e0
          .byte 0x72
          .byte 0x79
          .byte 0x0
.L_41b37f:
          .string "ddry"
.L_41b384:
          .string "tdrz"
.L_41b389:
          .string "ddrz"
.L_41b38e:
          .string "tdtheta"
.L_41b396:
          .string "ddtheta"
.L_41b39e:
          .string "tds"
.L_41b3a2:
          .string "dds"
.L_41b3a6:
          .string "tepoch"
.L_41b3ad:

            jo .L_41b420
          .byte 0x63
          .byte 0x68
          .byte 0x0
.L_41b3b4:
          .string "ttobs"
.L_41b3ba:
          .string "dtobs"
.L_41b3c0:
          .string "bapprox"
.L_41b3c8:
          .string "ttranspose"
.L_41b3d3:

            insb BYTE PTR [RDI],DX
          .byte 0x6d
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x6d
.L_41b3e0:

            je .L_41b448
          .byte 0x72
          .byte 0x73
          .byte 0x3a
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b400:
          .byte 0x33
          .byte 0x28
          .byte 0x36
          .byte 0x29
          .byte 0x2d
          .byte 0x2c
          .byte 0x20
          .byte 0x34
          .byte 0x28
          .byte 0x38
          .byte 0x29
          .byte 0x2d
          .byte 0x20
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x37
          .byte 0x28
          .byte 0x31
          .byte 0x34
          .byte 0x29
          .byte 0x2d
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x65
          .byte 0x72
.L_41b420:

            and BYTE PTR [RAX+101],CL
            insb BYTE PTR [RDI],DX
            insd DWORD PTR [RDI],DX
            jb .L_41b49c
          .byte 0x20
          .byte 0x73
          .byte 0x68
          .byte 0x69
          .byte 0x66
          .byte 0x74
          .byte 0x0
          .byte 0x90
.L_41b430:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0xb0
          .byte 0x3e
.L_41b438:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_41b440:
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_41b448:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b450:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41b460:

            test RDI,RDI
            je .L_41b480

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41b476

            call .L_404af0
.L_41b476:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0x90
.L_41b480:

            xor EAX,EAX
            ret 
.L_41b483:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b490:

            xor ESI,ESI
            jmp .L_41b460
.L_41b494:
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
.L_41b49c:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41b4a0:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_41b4a8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+464],0
            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_41b510

            mov RAX,RSP
            mov RDI,RSI
            lea RCX,QWORD PTR [RSI+472]
            lea RDX,QWORD PTR [RSI+464]
            lea RSI,QWORD PTR [RAX+16]
            mov R9D,1
            xor R8D,R8D
            push RSI
.L_41b4f8:

            lea RSI,QWORD PTR [RAX+8]
            push RSI
            lea RSI,QWORD PTR [RIP+.L_41b853]
            push RAX
            push 0
            call .L_40d740

            add RSP,32
.L_41b510:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_41b53a

            add RSP,32
            pop RBX
            ret 
.L_41b53a:

            call __stack_chk_fail@PLT
.L_41b53f:

            nop
.L_41b540:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41b4a0

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41b5b4

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41b5b4:

            call __stack_chk_fail@PLT
.L_41b5b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5c0:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_41b5c8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+464],0
            mov RAX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_41b633

            mov RAX,RSP
            mov RDI,RSI
            lea RCX,QWORD PTR [RSI+472]
            lea RDX,QWORD PTR [RSI+464]
            lea RSI,QWORD PTR [RAX+16]
            mov R9D,1
            mov R8D,1
            push RSI
.L_41b61b:

            lea RSI,QWORD PTR [RAX+8]
            push RSI
            lea RSI,QWORD PTR [RIP+.L_41b853]
            push RAX
            push 0
            call .L_40d740

            add RSP,32
.L_41b633:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_41b65d

            add RSP,32
            pop RBX
            ret 
.L_41b65d:

            call __stack_chk_fail@PLT
.L_41b662:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b670:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41b5c0

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41b6e4

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41b6e4:

            call __stack_chk_fail@PLT
.L_41b6e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b6f0:

            push RBX
.L_41b6f1:

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_41b85a]
            call .L_4043f0

            test EAX,EAX
            je .L_41b7a0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41b853]
            call .L_4043f0

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+472]
            mov RSI,RAX
            call .L_40d010

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+464],RAX
            call .L_404ae0

            test EAX,EAX
            jne .L_41b7c0

            lea RAX,QWORD PTR [RIP+.L_41b670]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41b540]
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41b5c0]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_41b4a0]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            pop RBX
.L_41b79b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b7a0:

            lea RSI,QWORD PTR [RIP+.L_41b868]
            mov RDI,RBX
            call .L_41e0a0

            mov RDI,RBX
            mov ESI,4294967295
            pop RBX
            jmp .L_41b460
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b7c0:

            lea RSI,QWORD PTR [RIP+.L_41b890]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0

            mov RDI,QWORD PTR [RBX+464]
            call .L_403c60

            mov QWORD PTR [RBX+464],0
            mov RDI,RBX
            mov ESI,4294967258
            pop RBX
            jmp .L_41b460
.L_41b7f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b800:

            test RDI,RDI
            je .L_41b810

            jmp .L_41b6f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b810:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41b83e

            lea RDX,QWORD PTR [RIP+.L_41b490]
            lea RCX,QWORD PTR [RIP+.L_41b8c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41b83e:

            add RSP,8
            ret 
.L_41b843:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b850:

            xor EAX,EAX
            ret 
.L_41b853:
          .string "sgrids"
.L_41b85a:
          .string "tgrids"
# WARNING: found overlapping blocks at address 1b62c
# WARNING: found overlapping blocks at address 1b62e

.L_41b861:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b868:
          .string "vgridshift: +grids parameter missing."
          .zero 2
.L_41b890:

            jbe .L_41b8f9
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x73
          .byte 0x68
          .byte 0x69
          .byte 0x66
          .byte 0x74
          .byte 0x3a
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x71
          .byte 0x75
          .byte 0x69
          .byte 0x72
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x28
          .byte 0x73
          .byte 0x29
          .byte 0x2e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b8c0:
          .byte 0x56
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0x61
.L_41b8c7:

            insb BYTE PTR [RDI],DX
            and BYTE PTR [RDI+114],AH
            imul ESP,DWORD PTR [RAX+RIZ*1+115],1952868712
            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b8e0:

            test RDI,RDI
            je .L_41b900

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41b8f6

            call .L_404af0
.L_41b8f6:

            mov RDI,RBX
.L_41b8f9:

            pop RBX
            jmp .L_403ca0

            nop
.L_41b900:

            xor EAX,EAX
            ret 
.L_41b903:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b910:

            xor ESI,ESI
            jmp .L_41b8e0
.L_41b914:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b920:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,32
            mov RSI,QWORD PTR [RSI+464]
            mov RDX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_41b98d

            sub RSP,8
            xor R9D,R9D
            mov R8D,1
            lea RCX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+472]
            push RDI
            lea RDI,QWORD PTR [RCX+8]
            push RDI
            mov RDI,QWORD PTR [RAX]
            push RCX
            xor ECX,ECX
            call .L_44eb20

            add RSP,32
.L_41b98d:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_41b9b7

            add RSP,32
            pop RBX
            ret 
.L_41b9b7:

            call __stack_chk_fail@PLT
.L_41b9bc:

            nop
            nop
            nop
            nop
.L_41b9c0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41b920

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41ba34

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41ba34:

            call __stack_chk_fail@PLT
.L_41ba39:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ba40:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,32
            mov RSI,QWORD PTR [RSI+464]
            mov RDX,QWORD PTR [RSP+64]
            movdqu XMM0,XMMWORD PTR [RSP+48]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RCX
            xor ECX,ECX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP],XMM0
            je .L_41bab0

            sub RSP,8
            xor R9D,R9D
            mov R8D,1
            lea RCX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+472]
            push RDI
            lea RDI,QWORD PTR [RCX+8]
            push RDI
            mov RDI,QWORD PTR [RAX]
            push RCX
            mov ECX,1
            call .L_44eb20

            add RSP,32
.L_41bab0:

            mov RAX,QWORD PTR [RSP+16]
            movdqa XMM0,XMMWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RBX+16],RAX
            mov RAX,RBX
            movups XMMWORD PTR [RBX],XMM0
            jne .L_41bada

            add RSP,32
            pop RBX
            ret 
.L_41bada:

            call __stack_chk_fail@PLT
.L_41badf:

            nop
.L_41bae0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41ba40

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41bb54

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41bb54:

            call __stack_chk_fail@PLT
.L_41bb59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bb60:

            push RBX
.L_41bb61:

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_41bca3]
            call .L_4043f0

            test EAX,EAX
            je .L_41bc10

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41bcaa]
            call .L_4043f0

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+472]
            mov RSI,RAX
            call .L_40d010

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+464],RAX
            call .L_404ae0

            test EAX,EAX
            jne .L_41bc30

            lea RAX,QWORD PTR [RIP+.L_41bae0]
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41b9c0]
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41ba40]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_41b920]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            pop RBX
.L_41bc0b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bc10:

            lea RSI,QWORD PTR [RIP+.L_41bcb8]
            mov RDI,RBX
            call .L_41e0a0

            mov RDI,RBX
            mov ESI,4294967295
            pop RBX
            jmp .L_41b8e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bc30:

            lea RSI,QWORD PTR [RIP+.L_44f380-210592]
            mov RDI,RBX
            xor EAX,EAX
            call .L_41e0a0

            mov RDI,RBX
            mov ESI,4294967258
            pop RBX
            jmp .L_41b8e0
.L_41bc4f:

            nop
.L_41bc50:

            test RDI,RDI
            je .L_41bc60

            jmp .L_41bb60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bc60:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41bc8e

            lea RDX,QWORD PTR [RIP+.L_41b910]
            lea RCX,QWORD PTR [RIP+.L_41bd10]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41bc8e:

            add RSP,8
            ret 
.L_41bc93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bca0:

            xor EAX,EAX
            ret 
.L_41bca3:
          .string "tgrids"
.L_41bcaa:

            jae .L_41bd13
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x73
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bcb8:

            push 1684632167
            jae .L_41bd27
          .byte 0x69
          .byte 0x66
          .byte 0x74
          .byte 0x3a
          .byte 0x20
          .byte 0x2b
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x73
          .byte 0x20
          .byte 0x70
          .byte 0x61

            jb .L_41bd30
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x65

            jb .L_41bcf5

            insd DWORD PTR [RDI],DX
            imul ESI,DWORD PTR [RBX+115],778530409
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+103],CH
            jb .L_41bd4d
          .byte 0x64
          .byte 0x73
          .byte 0x68

            imul ESP,DWORD PTR [RSI+116],1868767290
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
.L_41bcf5:

            and BYTE PTR [RSI+105],AH
            outsb DX,BYTE PTR [RSI]
            and BYTE PTR FS:[RDX+101],DH
            jno .L_41bd74
          .byte 0x69
          .byte 0x72
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x28
          .byte 0x73
          .byte 0x29
          .byte 0x2e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bd10:
          .byte 0x48
          .byte 0x6f
          .byte 0x72
.L_41bd13:

            imul EDI,DWORD PTR [RDX+111],1818326126
            and BYTE PTR [RDI+114],AH
            imul ESP,DWORD PTR [RAX+RIZ*1+115],1952868712
            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
# WARNING: found overlapping blocks at address 1baf7
.set .L_41bd27, . - 9

.L_41bd30:

            ret 
.L_41bd32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd40:

            movsd XMM1,QWORD PTR [RIP+.L_44f380-207728]
            mov ECX,1859
.L_41bd4d:

            ucomisd XMM0,XMM1
            jb .L_41be28

            movsd XMM3,QWORD PTR [RIP+.L_44f380-207720]
            mov ESI,1374389535
            movapd XMM4,XMM3
            jmp .L_41bd72
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bd70:

            mov ECX,EAX
.L_41bd72:

            mov EDI,ECX
.L_41bd74:

            and EDI,3
            jne .L_41bd8b

            mov EAX,ECX
            movapd XMM2,XMM4
            mul ESI
            shr EDX,5
            imul EDX,EDX,100
            cmp ECX,EDX
            jne .L_41bda8
.L_41bd8b:

            mov EAX,ECX
            movapd XMM2,XMM3
            mul ESI
            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_41bda8

            movsd XMM2,QWORD PTR [RIP+.L_44f380-207712]
.L_41bda8:

            addsd XMM1,XMM2
            lea EAX,DWORD PTR [RCX+1]
            ucomisd XMM0,XMM1
            jae .L_41bd70

            pxor XMM3,XMM3
            mov EDX,1374389535
            mov EAX,ECX
            mul EDX
            test EDI,EDI
            cvtsi2sd XMM3,ECX
            jne .L_41bdf8

            mov EAX,EDX
            shr EAX,5
            imul EAX,EAX,100
            cmp ECX,EAX
            je .L_41bdf8
.L_41bdd6:

            movsd XMM2,QWORD PTR [RIP+.L_44f380-207720]
            subsd XMM1,XMM2
            subsd XMM0,XMM1
            movapd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bdf8:

            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_41bdd6

            movsd XMM2,QWORD PTR [RIP+.L_44f380-207712]
            subsd XMM1,XMM2
            subsd XMM0,XMM1
            movapd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41be28:

            addsd XMM0,QWORD PTR [RIP+.L_44f380-207696]
            movsd XMM1,QWORD PTR [RIP+.L_44f380-207712]
            movsd XMM3,QWORD PTR [RIP+.L_41c828]
            divsd XMM0,XMM1
            addsd XMM0,XMM3
            ret 
.L_41be49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be50:

            mulsd XMM0,QWORD PTR [RIP+.L_41c838]
            addsd XMM0,QWORD PTR [RIP+.L_41c840]
            ret 
.L_41be61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be70:

            subsd XMM0,QWORD PTR [RIP+.L_41c840]
            divsd XMM0,QWORD PTR [RIP+.L_41c838]
            ret 
.L_41be81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be90:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_65ea20]
            movsxd RDX,DWORD PTR [RAX+8]
            movsxd RAX,DWORD PTR [RAX+12]
            shl RDX,5
            shl RAX,5
            movsd XMM2,QWORD PTR [RCX+RDX*1+24]
            divsd XMM2,QWORD PTR [RCX+RAX*1+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_41bec0:

            mov RAX,QWORD PTR [RDI+32]
            lea RCX,QWORD PTR [RIP+.L_65ea20]
            movsxd RDX,DWORD PTR [RAX+12]
            movsxd RAX,DWORD PTR [RAX+8]
            shl RDX,5
            shl RAX,5
            movsd XMM2,QWORD PTR [RCX+RDX*1+24]
            divsd XMM2,QWORD PTR [RCX+RAX*1+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_41bef0:

            mov RCX,QWORD PTR [RSI+32]
            mov RAX,RDI
            lea RDX,QWORD PTR [RIP+.L_65ea20]
            movsd XMM2,QWORD PTR [RSP+16]
            movsxd RDI,DWORD PTR [RCX+8]
            movsxd RSI,DWORD PTR [RCX+12]
            shl RDI,5
            shl RSI,5
            movsd XMM0,QWORD PTR [RDX+RDI*1+24]
            divsd XMM0,QWORD PTR [RDX+RSI*1+24]
            movsxd RSI,DWORD PTR [RCX+16]
            movsxd RCX,DWORD PTR [RCX+20]
            shl RSI,5
            shl RCX,5
            movsd XMM1,QWORD PTR [RDX+RSI*1+24]
            divsd XMM1,QWORD PTR [RDX+RCX*1+24]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+8],XMM2
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+16],XMM1
            ret 
.L_41bf5b:

            nop
            nop
            nop
            nop
            nop
.L_41bf60:

            mov RCX,QWORD PTR [RSI+32]
            mov RAX,RDI
            lea RDX,QWORD PTR [RIP+.L_65ea20]
            movsd XMM2,QWORD PTR [RSP+16]
            movsxd RDI,DWORD PTR [RCX+12]
            movsxd RSI,DWORD PTR [RCX+8]
            shl RDI,5
            shl RSI,5
            movsd XMM0,QWORD PTR [RDX+RDI*1+24]
            divsd XMM0,QWORD PTR [RDX+RSI*1+24]
            movsxd RSI,DWORD PTR [RCX+20]
            movsxd RCX,DWORD PTR [RCX+16]
            shl RSI,5
            shl RCX,5
            movsd XMM1,QWORD PTR [RDX+RSI*1+24]
            divsd XMM1,QWORD PTR [RDX+RCX*1+24]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+8],XMM2
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX],XMM0
            movsd QWORD PTR [RAX+16],XMM1
            ret 
.L_41bfcb:

            nop
            nop
            nop
            nop
            nop
.L_41bfd0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_65ea20]
            mov RBP,RDI
            sub RSP,40
.L_41bfe0:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM2,QWORD PTR [RSP+64]
            movsxd RCX,DWORD PTR [RBX+8]
            movsxd RDX,DWORD PTR [RBX+12]
            shl RCX,5
            shl RDX,5
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            movsxd RCX,DWORD PTR [RBX+16]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX+20]
            shl RCX,5
            shl RDX,5
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX]
            test EDX,EDX
            mulsd XMM1,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            js .L_41c060

            lea RAX,QWORD PTR [RIP+.L_65f060]
            shl RDX,5
            movsd XMM0,QWORD PTR [RSP+88]
            call QWORD PTR [RAX+RDX*1+8]
.L_41c060:

            movsxd RDX,DWORD PTR [RBX+4]
            test EDX,EDX
            js .L_41c077

            lea RAX,QWORD PTR [RIP+.L_65f060]
            shl RDX,5
            call QWORD PTR [RAX+RDX*1+16]
.L_41c077:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,RBP
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [RBP+8],XMM4
            movsd QWORD PTR [RBP+16],XMM5
            movsd QWORD PTR [RBP+24],XMM0
            add RSP,40
.L_41c0a4:

            pop RBX
            pop RBP
            ret 
.L_41c0a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c0b0:

            push RBP
            push RBX
            lea RAX,QWORD PTR [RIP+.L_65ea20]
            mov RBP,RDI
            sub RSP,40
.L_41c0c0:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM2,QWORD PTR [RSP+64]
            movsxd RCX,DWORD PTR [RBX+12]
            movsxd RDX,DWORD PTR [RBX+8]
            shl RCX,5
            shl RDX,5
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            movsxd RCX,DWORD PTR [RBX+20]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            movsxd RDX,DWORD PTR [RBX+16]
            shl RCX,5
            shl RDX,5
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM1,QWORD PTR [RAX+RCX*1+24]
            divsd XMM1,QWORD PTR [RAX+RDX*1+24]
            mov EAX,DWORD PTR [RBX]
            movsxd RDX,DWORD PTR [RBX+4]
            test EAX,EAX
            mulsd XMM1,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            js .L_41c146

            lea RAX,QWORD PTR [RIP+.L_65f060]
            shl RDX,5
            movsd XMM0,QWORD PTR [RSP+88]
            call QWORD PTR [RAX+RDX*1+8]

            mov EDX,DWORD PTR [RBX+4]
.L_41c146:

            test EDX,EDX
            js .L_41c15c

            movsxd RAX,DWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_65f060]
            shl RAX,5
            call QWORD PTR [RDX+RAX*1+16]
.L_41c15c:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,RBP
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [RBP+8],XMM4
            movsd QWORD PTR [RBP+16],XMM5
            movsd QWORD PTR [RBP+24],XMM0
            add RSP,40
.L_41c189:

            pop RBX
            pop RBP
            ret 
.L_41c18c:

            nop
            nop
            nop
            nop
.L_41c190:

            movsd XMM3,QWORD PTR [RIP+.L_41c860]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_41c848]
            movapd XMM2,XMM0
            andpd XMM1,XMM3
            ucomisd XMM4,XMM1
            jbe .L_41c1e5

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_41c850]
            andnpd XMM3,XMM0
            cvtsi2sd XMM1,RAX
            movapd XMM2,XMM1
            cmpnlesd XMM2,XMM0
            andpd XMM2,XMM4
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM3
.L_41c1e5:

            cvttsd2si ECX,XMM2
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            cvtsi2sd XMM1,ECX
            lea EAX,DWORD PTR [RCX-1859]
            imul EAX,EAX,365
            add EAX,45
            test CL,3
            cvtsi2sd XMM2,EAX
            subsd XMM0,XMM1
            jne .L_41c2a0

            mov EAX,ECX
            mov EDX,1374389535
            imul EDX
            mov EAX,ECX
            sar EAX,31
            movsd XMM1,QWORD PTR [RIP+.L_44f380-207720]
            sar EDX,5
            sub EDX,EAX
            imul EDX,EDX,100
            cmp ECX,EDX
            je .L_41c2a0
.L_41c237:

            mulsd XMM0,XMM1
            sub ECX,1
            cmp ECX,1858
            addsd XMM0,XMM2
            jle .L_41c29e

            movsd XMM1,QWORD PTR [RIP+.L_41c850]
            mov ESI,1374389535
            jmp .L_41c27d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c260:

            mov EAX,ECX
            mul ESI
            shr EDX,5
            imul EDX,EDX,100
            cmp ECX,EDX
            je .L_41c282
.L_41c26e:

            sub ECX,1
            addsd XMM0,XMM1
            cmp ECX,1858
            je .L_41c29e
.L_41c27d:

            test CL,3
            je .L_41c260
.L_41c282:

            mov EAX,ECX
            mul ESI
            shr EDX,7
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_41c26e

            sub ECX,1
            cmp ECX,1858
            jne .L_41c27d
.L_41c29e:

            ret 
.L_41c2a0:

            mov EAX,ECX
            mov EDX,1374389535
            imul EDX
            mov EAX,ECX
            sar EAX,31
            movsd XMM1,QWORD PTR [RIP+.L_44f380-207720]
            sar EDX,7
            sub EDX,EAX
            imul EDX,EDX,400
            cmp ECX,EDX
            je .L_41c237

            movsd XMM1,QWORD PTR [RIP+.L_44f380-207712]
            jmp .L_41c237
.L_41c2d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c2e0:

            test RDI,RDI
            je .L_41c300

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41c2f6

            call .L_404af0
.L_41c2f6:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0x90
.L_41c300:

            xor EAX,EAX
            ret 
.L_41c303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c310:

            xor ESI,ESI
            jmp .L_41c2e0
.L_41c314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c320:

            push R15
            push R14
            mov ESI,24
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,8
.L_41c33b:

            call .L_403c70

            test RAX,RAX
            mov ESI,12
            je .L_41c6c5

            mov QWORD PTR [RBP+32],RAX
            mov R15,RAX
            lea RAX,QWORD PTR [RIP+.L_41bfd0]
            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c733]
            mov QWORD PTR [RBP+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41c0b0]
            mov DWORD PTR [RBP+320],2
            mov DWORD PTR [RBP+324],2
            mov QWORD PTR [RBP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41bef0]
            mov QWORD PTR [RBP+56],RAX
            lea RAX,QWORD PTR [RIP+.L_41bf60]
            mov QWORD PTR [RBP+64],RAX
            lea RAX,QWORD PTR [RIP+.L_41be90]
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_41bec0]
            mov QWORD PTR [RBP+48],RAX
            mov QWORD PTR [R15],-1
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c435

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ea20]
            test RSI,RSI
            jne .L_41c408

            jmp .L_41c6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c3f0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c408:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c3f0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_41c75c]
            mov DWORD PTR [R15+8],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c435:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c73a]
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c4b5

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ea20]
            test RSI,RSI
            jne .L_41c488

            jmp .L_41c6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c470:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c488:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c470

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_41c76b]
            mov DWORD PTR [R15+12],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c4b5:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c742]
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c535

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ea20]
            test RSI,RSI
            jne .L_41c508

            jmp .L_41c6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c4f0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c508:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c4f0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_41c77b]
            mov DWORD PTR [R15+16],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c535:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c748]
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c5b5

            mov RSI,QWORD PTR [RIP+.L_65ea20]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65ea20]
            test RSI,RSI
            jne .L_41c588

            jmp .L_41c6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c570:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c588:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c570

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_41c789]
            mov DWORD PTR [R15+20],EBX
            mov RDX,QWORD PTR [R12+R13*1+16]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c5b5:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c74f]
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c634

            mov RSI,QWORD PTR [RIP+.L_65f060]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65f060]
            test RSI,RSI
            jne .L_41c608

            jmp .L_41c6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c5f0:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c608:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c5f0

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_41c798]
            mov DWORD PTR [R15],EBX
            mov RDX,QWORD PTR [R12+R13*1+24]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c634:

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_41c755]
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            je .L_41c6b1

            mov RSI,QWORD PTR [RIP+.L_65f060]
            xor EBX,EBX
            lea R12,QWORD PTR [RIP+.L_65f060]
            test RSI,RSI
            jne .L_41c684

            jmp .L_41c6c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c670:

            add RBX,1
            mov RAX,RBX
            shl RAX,5
            mov RSI,QWORD PTR [R12+RAX*1]
            test RSI,RSI
            je .L_41c6c0
.L_41c684:

            mov RDI,R14
            movsxd R13,EBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_41c670

            shl R13,5
            lea RSI,QWORD PTR [RIP+.L_44f380-207834]
            mov DWORD PTR [R15+4],EBX
            mov RDX,QWORD PTR [R12+R13*1+24]
            mov RDI,RBP
            xor EAX,EAX
            call .L_41e170
.L_41c6b1:

            pop RDX
.L_41c6b2:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41c6c0:

            mov ESI,4294967288
.L_41c6c5:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_41c2e0
.L_41c6db:

            nop
            nop
            nop
            nop
            nop
.L_41c6e0:

            test RDI,RDI
            je .L_41c6f0

            jmp .L_41c320
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c6f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41c71e

            lea RDX,QWORD PTR [RIP+.L_41c310]
            lea RCX,QWORD PTR [RIP+.L_41c800]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41c71e:

            add RSP,8
            ret 
.L_41c723:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c730:

            xor EAX,EAX
            ret 
.L_41c733:
          .string "sxy_in"
.L_41c73a:
          .string "sxy_out"
.L_41c742:
          .string "sz_in"
.L_41c748:
          .string "sz_out"
.L_41c74f:
          .string "st_in"
.L_41c755:
          .string "st_out"
.L_41c75c:
          .string "xy_in unit: %s"
.L_41c76b:
          .string "xy_out unit: %s"
.L_41c77b:
          .string "z_in unit: %s"
.L_41c789:
          .string "z_out unit: %s"
.L_41c798:

            je .L_41c7f9

            imul EBP,DWORD PTR [RSI+32],1953066613
            cmp AH,BYTE PTR [RAX]
            and EAX,1601437811
            outsd DX,DWORD PTR [RSI]
            jne .L_41c81f
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x3a
          .byte 0x20
          .byte 0x25
          .byte 0x73
          .byte 0x0
.L_41c7b5:
          .string "mjd"
.L_41c7b9:
          .string "Modified julian date"
.L_41c7ce:
          .string "decimalyear"
.L_41c7da:
          .string "Decimal year"
.L_41c7e7:
          .string "gps_week"
.L_41c7f0:
          .string "GPS Week"
.L_41c7f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c800:

            push RBP
            outsb DX,BYTE PTR [RSI]
            imul ESI,DWORD PTR [RAX+RIZ*1+99],1702260335
            jb .L_41c87f

            imul EBP,DWORD PTR [RDI+110],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 116325
.L_41c81f:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,DL
            jbe .L_41c868
.L_41c828:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],CL
            popfq 
            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x40
.L_41c838:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x40
.L_41c840:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x9a
          .byte 0xe5
          .byte 0x40
.L_41c848:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_41c850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c860:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_41c868:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41c870:

            test RDI,RDI
            je .L_41c8a0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
.L_41c87f:

            je .L_41c886

            call .L_404af0
.L_41c886:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_41c894

            call .L_403ca0
.L_41c894:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c8a0:

            xor EAX,EAX
            ret 
.L_41c8a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8b0:

            xor ESI,ESI
            jmp .L_41c870
.L_41c8b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8c0:

            sub RSP,40
.L_41c8c4:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sin@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            jp .L_41c901

            movapd XMM3,XMM4
            je .L_41c96a
.L_41c901:

            movsd XMM6,QWORD PTR [RIP+.L_41d798]
            ucomisd XMM2,XMM5
            movapd XMM3,XMM6
            subsd XMM3,XMM1
            jp .L_41c919

            je .L_41c978
.L_41c919:

            andpd XMM2,XMMWORD PTR [RIP+.L_41d7b0]
            ucomisd XMM2,QWORD PTR [RIP+.L_41d7a0]
            jp .L_41c92d

            je .L_41c988
.L_41c92d:

            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM1,XMM0
            subsd XMM6,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_41d7a8]
            movapd XMM0,XMM6
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            divsd XMM3,XMM0
.L_41c96a:

            movapd XMM0,XMM3
            add RSP,40
.L_41c972:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c978:

            mulsd XMM3,XMM4
            add RSP,40
            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c988:

            ucomisd XMM5,XMM3
            sqrtsd XMM1,XMM3
            ja .L_41c9a3
.L_41c992:

            divsd XMM4,XMM1
            add RSP,40
            movapd XMM3,XMM4
            movapd XMM0,XMM3
            ret 
.L_41c9a3:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41c992
.L_41c9c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c9d0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,152
.L_41c9e3:

            lea R12,QWORD PTR [RSP+136]
            lea R13,QWORD PTR [RSP+128]
            movsd XMM0,QWORD PTR [RSP+192]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+200]
            mov RSI,R13
            movsd XMM10,QWORD PTR [RSP+128]
            mov RDI,R12
            movsd XMM8,QWORD PTR [RSP+136]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+32],XMM2
            call sincos@PLT

            mov RDX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RBX+232]
            movsd XMM5,QWORD PTR [RBX+128]
            movsd XMM4,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM5
            movsd XMM3,QWORD PTR [RDX]
            movsd XMM6,QWORD PTR [RSP+136]
            movsd XMM11,QWORD PTR [RSP+208]
            movsd XMM9,QWORD PTR [RDX+8]
            movsd XMM7,QWORD PTR [RDX+16]
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+56],XMM3
            movsd XMM4,QWORD PTR [RDX+32]
            movsd XMM3,QWORD PTR [RDX+24]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+176]
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM11
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+32],XMM5
            call .L_41c8c0

            pxor XMM1,XMM1
            movapd XMM13,XMM0
            movsd XMM0,QWORD PTR [RBX+192]
            movsd XMM5,QWORD PTR [RSP+32]
            ucomisd XMM0,XMM1
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM11,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM10,QWORD PTR [RSP+96]
            jp .L_41cc80

            jne .L_41cc80

            movapd XMM14,XMM5
            movsd XMM15,QWORD PTR [RIP+.L_41d798]
.L_41cb4e:

            movapd XMM12,XMM3
            mulsd XMM3,XMM4
            movapd XMM0,XMM6
            mov RAX,RBP
            xorpd XMM12,XMMWORD PTR [RIP+.L_44f380-203712]
            subsd XMM15,QWORD PTR [RSP+16]
            mulsd XMM0,XMM9
            movapd XMM1,XMM12
            mulsd XMM12,XMM8
            mulsd XMM0,XMM8
            mulsd XMM1,XMM6
            movapd XMM2,XMM15
            mulsd XMM2,XMM14
            mulsd XMM1,XMM10
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM7
            mulsd XMM7,XMM6
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+176]
            mulsd XMM1,XMM14
            mulsd XMM1,XMM6
            mulsd XMM1,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            divsd XMM5,XMM14
            addsd XMM1,XMM0
            movapd XMM0,XMM13
            divsd XMM0,XMM15
            movapd XMM15,XMM6
            mulsd XMM15,XMM4
            mulsd XMM5,QWORD PTR [RSP+8]
            addsd XMM0,XMM2
            mulsd XMM2,XMM6
            mulsd XMM0,XMM15
            movsd XMM15,QWORD PTR [RSP+24]
            mulsd XMM6,XMM2
            mulsd XMM0,XMM15
            mulsd XMM6,XMM15
            addsd XMM1,XMM0
            movapd XMM0,XMM10
            mulsd XMM10,XMM3
            mulsd XMM0,XMM9
            addsd XMM12,XMM0
            movapd XMM0,XMM11
            addsd XMM11,XMM13
            addsd XMM0,XMM14
            divsd XMM1,XMM11
            mulsd XMM0,XMM4
            mulsd XMM4,XMM9
            movsd QWORD PTR [RBP+8],XMM1
            divsd XMM12,XMM0
            mulsd XMM8,XMM4
            movsd QWORD PTR [RBP],XMM12
            addsd XMM8,XMM10
            addsd XMM7,XMM8
            subsd XMM7,XMM5
            addsd XMM6,XMM7
            movsd QWORD PTR [RBP+16],XMM6
            add RSP,152
.L_41cc75:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc80:

            mulsd XMM0,XMM6
            movsd XMM15,QWORD PTR [RIP+.L_41d798]
            movapd XMM2,XMM15
            mulsd XMM0,XMM6
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            sqrtsd XMM2,XMM2
            ucomisd XMM1,XMM0
            ja .L_41ccb7
.L_41cca8:

            movapd XMM14,XMM5
            divsd XMM14,XMM2
            jmp .L_41cb4e
.L_41ccb7:

            movsd QWORD PTR [RSP+120],XMM15
            movsd QWORD PTR [RSP+112],XMM6
            movsd QWORD PTR [RSP+104],XMM4
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+80],XMM10
            movsd QWORD PTR [RSP+72],XMM11
            movsd QWORD PTR [RSP+64],XMM13
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM9
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM15,QWORD PTR [RSP+120]
            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM10,QWORD PTR [RSP+80]
            movsd XMM11,QWORD PTR [RSP+72]
            movsd XMM13,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM9,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_41cca8
.L_41cd5d:

            nop
            nop
            nop
.L_41cd60:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,136
.L_41cd73:

            lea R12,QWORD PTR [RSP+120]
            lea R13,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+72],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RSI,R13
            movsd XMM7,QWORD PTR [RSP+112]
            mov RDI,R12
            movsd XMM5,QWORD PTR [RSP+120]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            call sincos@PLT

            mov RDX,QWORD PTR [RBX+32]
            movsd XMM8,QWORD PTR [RBX+128]
            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RDX+24]
            movapd XMM1,XMM8
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM4,XMM6
            mulsd XMM1,QWORD PTR [RDX+32]
            movsd QWORD PTR [RSP+96],XMM6
            movsd XMM3,QWORD PTR [RDX]
            mulsd XMM4,QWORD PTR [RBX+232]
            movsd QWORD PTR [RSP+104],XMM8
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+120]
            movsd XMM2,QWORD PTR [RDX+8]
            xorpd XMM6,XMMWORD PTR [RIP+.L_44f380-203712]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM7,QWORD PTR [RDX+16]
            movapd XMM0,XMM4
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RSP+72]
            addsd XMM4,XMM0
            movsd QWORD PTR [RSP+48],XMM6
            movapd XMM10,XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+88],XMM3
            addsd XMM10,XMM1
            movsd QWORD PTR [RSP+80],XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM10
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM4,XMM5
            movsd QWORD PTR [RSP+72],XMM5
            mulsd XMM2,XMM5
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM3,XMM7
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM8,QWORD PTR [RSP+104]
            subsd XMM4,XMM2
            movapd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+176]
            addsd XMM4,XMM3
            addsd XMM4,XMM0
            movapd XMM0,XMM8
            movsd QWORD PTR [RSP+56],XMM4
            call .L_41c8c0

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            divsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+8]
            pxor XMM8,XMM8
            movsd XMM2,QWORD PTR [RBX+128]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+88]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+192]
            movsd XMM6,QWORD PTR [RSP+96]
            ucomisd XMM0,XMM8
            jp .L_41cfb0

            jne .L_41cfb0
.L_41cf49:

            mulsd XMM2,XMM7
            movsd QWORD PTR [RBP+8],XMM4
            mov RAX,RBP
            mulsd XMM3,XMM7
            mulsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+32]
            divsd XMM1,XMM2
            mulsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBP],XMM1
            addsd XMM3,XMM7
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM0,XMM5
            subsd XMM3,XMM6
            mulsd XMM5,XMM0
            addsd XMM3,XMM5
            movsd QWORD PTR [RBP+16],XMM3
            add RSP,136
.L_41cfa8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41cfb0:

            mulsd XMM0,XMM5
            movsd XMM9,QWORD PTR [RIP+.L_41d798]
            mulsd XMM0,XMM5
            subsd XMM9,XMM0
            movapd XMM0,XMM9
            sqrtsd XMM9,XMM9
            ucomisd XMM8,XMM0
            ja .L_41cfe1
.L_41cfd7:

            divsd XMM2,XMM9
            jmp .L_41cf49
.L_41cfe1:

            movsd QWORD PTR [RSP+104],XMM9
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+88],XMM1
            movsd QWORD PTR [RSP+80],XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            jmp .L_41cfd7
.L_41d04a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d050:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_41d058:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM4,QWORD PTR [RSP+128]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RSP+120]
            mov EAX,DWORD PTR [RAX+40]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+80],XMM4
            test EAX,EAX
            movsd QWORD PTR [RSP+24],XMM4
            jne .L_41d118

            movsd QWORD PTR [RSP+16],XMM2
            lea RDI,QWORD PTR [RSP+32]
            sub RSP,8
.L_41d0af:

            movsd QWORD PTR [RSP+16],XMM3
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            call .L_41c9d0

            add RSP,32
.L_41d0ca:

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
.L_41d0dc:

            subsd XMM2,QWORD PTR [RSP+40]
            mov RAX,RBX
            subsd XMM4,QWORD PTR [RSP+48]
            subsd XMM3,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+88]
            xor RDX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+16],XMM4
            movsd QWORD PTR [RBX],XMM3
            jne .L_41d14a

            add RSP,96
.L_41d113:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d118:

            movapd XMM1,XMM2
            lea RDI,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call .L_41cd60

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_41d0dc
.L_41d14a:

            call __stack_chk_fail@PLT
.L_41d14f:

            nop
.L_41d150:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov QWORD PTR [RSP+48],0
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_41d050

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41d1d3

            add RSP,72
            ret 
.L_41d1d3:

            call __stack_chk_fail@PLT
.L_41d1d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d1e0:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41d050

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41d254

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41d254:

            call __stack_chk_fail@PLT
.L_41d259:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d260:

            push RBX
            mov RBX,RDI
            sub RSP,80
.L_41d268:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+32]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+104]
            mov EAX,DWORD PTR [RAX+40]
            movsd QWORD PTR [RSP+8],XMM5
            test EAX,EAX
            jne .L_41d340

            movsd QWORD PTR [RSP+24],XMM3
            lea RDI,QWORD PTR [RSP+32]
            sub RSP,8
.L_41d2ae:

            movsd QWORD PTR [RSP+24],XMM4
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41c9d0

            movdqu XMM0,XMMWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            movups XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+144],RAX
            movsd XMM2,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+144]
            add RSP,32
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
.L_41d30b:

            addsd XMM0,QWORD PTR [RSP+8]
            mov RAX,RBX
            addsd XMM2,XMM4
            addsd XMM1,XMM3
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movsd QWORD PTR [RBX],XMM2
            movsd QWORD PTR [RBX+8],XMM1
            movsd QWORD PTR [RBX+16],XMM0
            jne .L_41d37e

            add RSP,80
            pop RBX
            ret 
.L_41d340:

            movapd XMM1,XMM3
            lea RDI,QWORD PTR [RSP+96]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call .L_41cd60

            movsd XMM2,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_41d30b
.L_41d37e:

            call __stack_chk_fail@PLT
.L_41d383:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d390:

            sub RSP,72
            movq RAX,XMM0
            mov RSI,RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            movq QWORD PTR [RSP+40],XMM1
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+56]
            push QWORD PTR [RSP+56]
            push RAX
            call .L_41d260

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],RAX
            add RSP,32
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41d40a

            add RSP,72
            ret 
.L_41d40a:

            call __stack_chk_fail@PLT
.L_41d40f:

            nop
.L_41d410:

            push RBX
            mov RBX,RDI
            sub RSP,80
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            call .L_41d260

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            add RSP,32
            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            movups XMMWORD PTR [RBX+48],XMM0
            jne .L_41d484

            add RSP,80
            mov RAX,RBX
            pop RBX
            ret 
.L_41d484:

            call __stack_chk_fail@PLT
.L_41d489:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d490:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_41d4a3:

            call .L_403c70

            test RAX,RAX
            mov ESI,12
            je .L_41d5f5

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_41d410]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d743]
            mov QWORD PTR [RBX+72],RAX
            lea RAX,QWORD PTR [RIP+.L_41d1e0]
            mov DWORD PTR [RBX+320],2
            mov DWORD PTR [RBX+324],2
            mov QWORD PTR [RBX+80],RAX
            lea RAX,QWORD PTR [RIP+.L_41d260]
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_41d050]
            mov QWORD PTR [RBX+64],RAX
            lea RAX,QWORD PTR [RIP+.L_41d390]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_41d150]
            mov QWORD PTR [RBX+48],RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_41d678
.L_41d52e:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d74b]
            call .L_4043f0

            test EAX,EAX
            jne .L_41d6b8
.L_41d549:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d753]
            call .L_4043f0

            test EAX,EAX
            jne .L_41d698
.L_41d564:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d75b]
            call .L_4043f0

            test EAX,EAX
            jne .L_41d658
.L_41d57f:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d763]
            call .L_4043f0

            test EAX,EAX
            jne .L_41d638
.L_41d59a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44f380-203797]
            call .L_4043f0

            pxor XMM0,XMM0
            mov DWORD PTR [RBP+40],EAX
            ucomisd XMM0,QWORD PTR [RBP]
            jp .L_41d5bd

            je .L_41d608
.L_41d5bd:

            ucomisd XMM0,QWORD PTR [RBP+8]
            jp .L_41d5c6

            je .L_41d5f0
.L_41d5c6:

            ucomisd XMM0,QWORD PTR [RBP+16]
            jp .L_41d5cf

            je .L_41d5f0
.L_41d5cf:

            ucomisd XMM0,QWORD PTR [RBP+24]
            jp .L_41d5d8

            je .L_41d5f0
.L_41d5d8:

            ucomisd XMM0,QWORD PTR [RBP+32]
            jp .L_41d6d8

            jne .L_41d6d8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d5f0:

            mov ESI,4294967242
.L_41d5f5:

            add RSP,8
.L_41d5f9:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41c870
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d608:

            ucomisd XMM0,QWORD PTR [RBP+8]
            jp .L_41d5f0

            jne .L_41d5f0

            ucomisd XMM0,QWORD PTR [RBP+16]
            jp .L_41d5f0

            jne .L_41d5f0

            ucomisd XMM0,QWORD PTR [RBP+24]
            jp .L_41d5f0

            jne .L_41d5f0

            ucomisd XMM0,QWORD PTR [RBP+32]
            jp .L_41d5f0

            mov ESI,4294967295
            jne .L_41d5f0

            jmp .L_41d5f5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d638:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44f380-203801]
            call .L_4043f0

            mov QWORD PTR [RBP+32],RAX
            jmp .L_41d59a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d658:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d75f]
            call .L_4043f0

            mov QWORD PTR [RBP+24],RAX
            jmp .L_41d57f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d678:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d747]
            call .L_4043f0

            mov QWORD PTR [RBP],RAX
            jmp .L_41d52e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d698:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d757]
            call .L_4043f0

            mov QWORD PTR [RBP+16],RAX
            jmp .L_41d564
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d6b8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41d74f]
            call .L_4043f0

            mov QWORD PTR [RBP+8],RAX
            jmp .L_41d549
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d6d8:

            add RSP,8
.L_41d6dc:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41d6e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d6f0:

            test RDI,RDI
            je .L_41d700

            jmp .L_41d490
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d700:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41d72e

            lea RDX,QWORD PTR [RIP+.L_41c8b0]
            lea RCX,QWORD PTR [RIP+.L_41d780]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41d72e:

            add RSP,8
            ret 
.L_41d733:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d740:

            xor EAX,EAX
            ret 
.L_41d743:
          .string "tdx"
.L_41d747:
          .string "ddx"
.L_41d74b:
          .string "tdy"
.L_41d74f:

            jns .L_41d753
.L_41d753:

            je .L_41d7b9

            jp .L_41d757
.L_41d757:

            jp .L_41d75b
.L_41d75b:

            je .L_41d7c1
          .byte 0x61
          .byte 0x0
.L_41d75f:
          .string "dda"
.L_41d763:
          .string "tdf"
# WARNING: found overlapping blocks at address 1d535

            add BYTE PTR FS:[RCX+RIZ*2+98],DH
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x67
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_41d780:
          .string "Molodensky transform"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d798:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_41d7a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_41d7a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_41d7b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
.L_41d7b9:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41d7c1:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_41d7d0:

            movsd XMM0,QWORD PTR [RIP+.L_41e3a0]
            mov RAX,RDI
            movsd QWORD PTR [RDI],XMM0
            movsd QWORD PTR [RDI+8],XMM0
            movsd QWORD PTR [RDI+16],XMM0
            movsd QWORD PTR [RDI+24],XMM0
            ret 
.L_41d7ef:

            nop
.L_41d7f0:

            movabs RDX,9218868437227405312
            mov RAX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI],RDX
            mov QWORD PTR [RDI+8],RDX
            mov QWORD PTR [RDI+16],RDX
            mov QWORD PTR [RDI+24],RDX
            mov QWORD PTR [RDI+32],RDX
            mov QWORD PTR [RDI+40],RDX
            mov QWORD PTR [RDI+48],RDX
            ret 
.L_41d821:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d830:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,48
            mov RDX,QWORD PTR [RSI+72]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            test RDX,RDX
            je .L_41d8e0

            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [RSP+128]
            call RDX

            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
.L_41d8b9:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41d9df

            add RSP,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d8e0:

            cmp QWORD PTR [RSI+56],0
            jne .L_41d940

            cmp QWORD PTR [RSI+40],0
            je .L_41d9a0

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+72]
            call .L_44be30

            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+72],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41d8b9
          .byte 0x66
          .byte 0x90
.L_41d940:

            mov RDI,RSP
            sub RSP,8
.L_41d947:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]

            call .L_44c220

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+112],RAX
            movups XMMWORD PTR [RSP+96],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            add RSP,32

            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41d8b9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d9a0:

            mov RDI,RAX
            mov ESI,22
            call .L_415fe0

            movabs RAX,9218868437227405312
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_41d8b9
.L_41d9df:

            call __stack_chk_fail@PLT
.L_41d9e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d9f0:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            sub RSP,48
            mov RDX,QWORD PTR [RSI+80]
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RCX
            xor ECX,ECX
            test RDX,RDX
            je .L_41daa0

            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            push QWORD PTR [RSP+120]
            lea RDI,QWORD PTR [RSP+128]
            call RDX

            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+160]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,64
            movups XMMWORD PTR [RBX+48],XMM0
.L_41da79:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41db9f

            add RSP,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41daa0:

            cmp QWORD PTR [RSI+64],0
            jne .L_41db00

            cmp QWORD PTR [RSI+48],0
            je .L_41db60

            movsd XMM0,QWORD PTR [RSP+64]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+72]
            call .L_44c050

            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+72],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41da79
          .byte 0x66
          .byte 0x90
.L_41db00:

            mov RDI,RSP
            sub RSP,8
.L_41db07:

            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]
            push QWORD PTR [RSP+88]

            call .L_44c4b0

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+112],RAX
            movups XMMWORD PTR [RSP+96],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            add RSP,32

            movups XMMWORD PTR [RBX+48],XMM0
            jmp .L_41da79
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41db60:

            mov RDI,RAX
            mov ESI,22
            call .L_415fe0

            movabs RAX,9218868437227405312
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+24],RAX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_41da79
.L_41db9f:

            call __stack_chk_fail@PLT
.L_41dba4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dbb0:

            push RBX
            mov RDX,RSI
            mov RBX,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+88]
            test RAX,RAX
            je .L_41dc18

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call RAX

            add RSP,32
.L_41dbf6:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41dd74

            add RSP,112
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dc18:

            mov RAX,QWORD PTR [RSI+72]
            test RAX,RAX
            je .L_41dc9a

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+136]
            lea RCX,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+144]
            mov R10,QWORD PTR [RSP+152]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDI
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+56],R10
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            push 0
.L_41dc6a:

            push 0
            push 0
            push 0
            push R10
            push R9
            push RDI
            push RSI
            mov RDI,RCX
            mov RSI,RDX
            call RAX

            movdqa XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41dbf6
.L_41dc9a:

            cmp QWORD PTR [RSI+56],0
            je .L_41dcf6

            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call .L_44c220

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+176],RAX
            movups XMMWORD PTR [RSP+160],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41dbf6
.L_41dcf6:

            cmp QWORD PTR [RSI+40],0
            je .L_41dd47

            movsd XMM0,QWORD PTR [RSP+128]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+136]
            call .L_44be30

            movsd QWORD PTR [RSP+128],XMM0
            movsd QWORD PTR [RSP+136],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41dbf6
.L_41dd47:

            mov ESI,22
            mov RDI,RDX
            call .L_415fe0

            movsd XMM0,QWORD PTR [RIP+.L_41e3a0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
            movsd QWORD PTR [RBX+24],XMM0
            jmp .L_41dbf6
.L_41dd74:

            call __stack_chk_fail@PLT
.L_41dd79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dd80:

            push RBX
            mov RDX,RSI
            mov RBX,RDI
            sub RSP,112
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+96]
            test RAX,RAX
            je .L_41dde8

            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call RAX

            add RSP,32
.L_41ddc6:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_41df44

            add RSP,112
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dde8:

            mov RAX,QWORD PTR [RSI+80]
            test RAX,RAX
            je .L_41de6a

            mov RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+136]
            lea RCX,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+144]
            mov R10,QWORD PTR [RSP+152]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+40],RDI
            mov QWORD PTR [RSP+48],R9
            mov QWORD PTR [RSP+56],R10
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            push 0
.L_41de3a:

            push 0
            push 0
            push 0
            push R10
            push R9
            push RDI
            push RSI
            mov RDI,RCX
            mov RSI,RDX
            call RAX

            movdqa XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RBX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            add RSP,64
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41ddc6
.L_41de6a:

            cmp QWORD PTR [RSI+64],0
            je .L_41dec6

            mov RDI,RSP
            sub RSP,8
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            push QWORD PTR [RSP+152]
            call .L_44c4b0

            mov RAX,QWORD PTR [RSP+48]
            movdqu XMM0,XMMWORD PTR [RSP+32]
            mov QWORD PTR [RSP+176],RAX
            movups XMMWORD PTR [RSP+160],XMM0
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+176]
            add RSP,32
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41ddc6
.L_41dec6:

            cmp QWORD PTR [RSI+48],0
            je .L_41df17

            movsd XMM0,QWORD PTR [RSP+128]
            mov RDI,RSI
            movsd XMM1,QWORD PTR [RSP+136]
            call .L_44c050

            movsd QWORD PTR [RSP+128],XMM0
            movsd QWORD PTR [RSP+136],XMM1
            movdqu XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_41ddc6
.L_41df17:

            mov ESI,22
            mov RDI,RDX
            call .L_415fe0

            movsd XMM0,QWORD PTR [RIP+.L_41e3a0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
            movsd QWORD PTR [RBX+24],XMM0
            jmp .L_41ddc6
.L_41df44:

            call __stack_chk_fail@PLT
.L_41df49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41df50:

            test RSI,RSI
            je .L_41df60

            jmp .L_404a40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41df60:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDI
            call .L_404a50

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            add RSP,24
            jmp .L_404a40
.L_41df7f:

            nop
.L_41df80:

            test RDI,RDI
            push RBX
            mov RBX,RSI
            je .L_41dfa0

            call .L_404a30

            mov RDI,RBX
            mov RSI,RAX
            pop RBX
            jmp .L_404a40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dfa0:

            call .L_404a50

            mov RDI,RBX
            mov RSI,RAX
            pop RBX
            jmp .L_404a40
.L_41dfb1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dfc0:

            test RDX,RDX
            mov RAX,RSI
            je .L_41dff8
.L_41dfc8:

            sub RDX,1
            je .L_41dff0

            add RAX,1
            movzx ECX,BYTE PTR [RAX-1]
            add RDI,1
            test CL,CL
            mov BYTE PTR [RDI-1],CL
            jne .L_41dfc8
.L_41dfe1:

            sub RAX,RSI
            sub RAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dff0:

            mov BYTE PTR [RDI],0
            nop
            nop
            nop
            nop
            nop
.L_41dff8:

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_41dfe1

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            jne .L_41dff8

            jmp .L_41dfe1
.L_41e00e:

            nop
            nop
.L_41e010:

            test RDI,RDI
            je .L_41e020

            jmp .L_404af0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e020:

            sub RSP,24
            mov DWORD PTR [RSP+12],ESI
            call .L_404a50

            mov ESI,DWORD PTR [RSP+12]
            mov RDI,RAX
            add RSP,24
            jmp .L_404af0
.L_41e03d:

            nop
            nop
            nop
.L_41e040:

            test RDI,RDI
            je .L_41e060

            cmp ESI,4
            mov EAX,DWORD PTR [RDI+4]
            je .L_41e058

            mov DWORD PTR [RDI+4],ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e058:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e060:

            sub RSP,24
            mov DWORD PTR [RSP+12],ESI
            call .L_404a50

            mov RDI,RAX
            mov ESI,DWORD PTR [RSP+12]
            mov EAX,4
            test RDI,RDI
            jne .L_41e088
.L_41e07e:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e088:

            cmp ESI,4
            mov EAX,DWORD PTR [RDI+4]
            je .L_41e07e

            mov DWORD PTR [RDI+4],ESI
            add RSP,24
            ret 
.L_41e098:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e0a0:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41e0ab:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41e0fa

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41e0fa:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404a30

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,1
            call .L_404bf0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e161

            add RSP,208
.L_41e15f:

            pop RBX
            ret 
.L_41e161:

            call __stack_chk_fail@PLT
.L_41e166:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e170:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41e17b:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41e1ca

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41e1ca:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404a30

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,2
            call .L_404bf0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e231

            add RSP,208
.L_41e22f:

            pop RBX
            ret 
.L_41e231:

            call __stack_chk_fail@PLT
.L_41e236:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e240:

            push RBX
            mov RBX,RSI
            sub RSP,208
.L_41e24b:

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_41e29a

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_41e29a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_404a30

            mov RCX,RSP
            mov RDI,RAX
            mov RDX,RBX
            mov ESI,3
            call .L_404bf0

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e301

            add RSP,208
.L_41e2ff:

            pop RBX
            ret 
.L_41e301:

            call __stack_chk_fail@PLT
.L_41e306:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e310:

            test RDI,RDI
            je .L_41e330

            test RDX,RDX
            mov QWORD PTR [RDI+16],RSI
            je .L_41e328

            mov QWORD PTR [RDI+8],RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e328:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e330:

            jmp .L_404a50
.L_41e335:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e350:
          .zero 8
.L_41e358:
          .zero 8
.L_41e360:
          .zero 8
.L_41e368:
          .zero 8
.L_41e370:
          .zero 8
.L_41e378:
          .zero 8
.L_41e380:
          .zero 16
.L_41e390:
          .zero 16
.L_41e3a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e3b0:

            test RDI,RDI
            je .L_41e3e8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41e3e0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            test RDI,RDI
            je .L_41e3d4

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_41e3d4:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_41e3e0:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e3e8:

            xor EAX,EAX
            ret 
.L_41e3eb:

            nop
            nop
            nop
            nop
            nop
.L_41e3f0:

            jmp .L_41e3b0
.L_41e3f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e400:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_41e409:

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RBP+32]
            movsd XMM0,QWORD PTR [RBP+176]
            movsd XMM2,QWORD PTR [RIP+.L_41f3d0]
            mulsd XMM0,XMM4
            movapd XMM3,XMM2
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            sqrtsd XMM1,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            ja .L_41e506
.L_41e473:

            movapd XMM3,XMM2
            movsd XMM5,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX+16]
            movapd XMM2,XMM6
            divsd XMM3,XMM1
            movapd XMM0,XMM7
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+32],XMM3
            mulsd XMM5,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            call .L_44c7f0

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RIP+.L_41f3d8]
            movapd XMM1,XMM0
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM2,XMM7
            subsd XMM1,QWORD PTR [RBX+24]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            add RSP,72
.L_41e4eb:

            mulsd XMM2,XMM7
            movapd XMM0,XMM5
            pop RBX
            pop RBP
            mulsd XMM2,XMM6
            mulsd XMM2,XMM4
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            ret 
.L_41e506:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41e473
.L_41e54c:

            nop
            nop
            nop
            nop
.L_41e550:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,80
.L_41e55b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM5,QWORD PTR [RSP+40]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+24],XMM5
            call sincos@PLT

            mov RDI,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RDI+64]
            movsd XMM4,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_41e6cc

            movsd XMM3,QWORD PTR [RSP+16]
            jle .L_41e6c0

            cmp EAX,3
            jg .L_41e730

            movq XMM4,QWORD PTR [RIP+.L_41f430]
            movapd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_41f3e0]
            andpd XMM1,XMM4
            movsd XMM0,QWORD PTR [R12+336]
            ucomisd XMM2,XMM1
            jbe .L_41e62a

            movsd XMM1,QWORD PTR [RSP]
            subsd XMM1,XMM0
            andpd XMM1,XMM4
            ucomisd XMM2,XMM1
            ja .L_41e730
.L_41e62a:

            movsd XMM1,QWORD PTR [R12+328]
            lea RCX,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RIP+.L_41f3e8]
            lea RSI,QWORD PTR [RSP+64]
            addsd XMM3,XMM1
            movsd XMM2,QWORD PTR [RSP]
            divsd XMM1,XMM4
            add RDI,72
            movsd QWORD PTR [RSP],XMM4
            divsd XMM2,XMM4
            divsd XMM0,XMM4
            divsd XMM3,XMM4
            call .L_414520

            movsd XMM4,QWORD PTR [RSP]
            mov RSI,RBP
            mov RDI,RBX
            mulsd XMM4,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [R12+128]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+32]
            divsd XMM0,XMM2
            divsd XMM1,XMM2
            jmp .L_41e715
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e6c0:

            test EAX,EAX
            jne .L_41e730

            xorpd XMM4,XMMWORD PTR [RIP+.L_41f420]
.L_41e6cc:

            movsd QWORD PTR [RSP+16],XMM4
            movsd XMM3,QWORD PTR [RDI+40]
            mov RDI,QWORD PTR [RDI+16]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44c7f0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            andpd XMM3,XMMWORD PTR [RIP+.L_41f430]
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM1,XMM4
.L_41e715:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e73a

            add RSP,80
.L_41e729:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41e730:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_41e715
.L_41e73a:

            call __stack_chk_fail@PLT
.L_41e73f:

            nop
.L_41e740:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41e749:

            mov RBP,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_41f3e0]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_41e828

            mov EAX,DWORD PTR [RBP+64]
            lea EDX,DWORD PTR [RAX-2]
            cmp EDX,1
            jbe .L_41e850

            test EAX,EAX
            mov RSI,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RBP+40]
            jne .L_41e840

            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_41e7bc:

            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44c830

            mov EAX,DWORD PTR [RBP+64]
            movapd XMM2,XMM0
            test EAX,EAX
            jne .L_41e7e9

            movsd XMM3,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_41f420]
            movsd QWORD PTR [RSP+16],XMM3
.L_41e7e9:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
.L_41e806:

            movapd XMM1,XMM2
.L_41e80a:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41e95f

            add RSP,88
.L_41e822:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e828:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RBX+336]
            jmp .L_41e80a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e840:

            addsd XMM0,XMM2
            jmp .L_41e7bc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e850:

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM3,XMM0
            mulsd XMM5,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_41f3e8]
            movsd XMM0,QWORD PTR [RBX+336]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+40],XMM4
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+328]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM0
            mulsd XMM5,XMM5
            mulsd XMM3,XMM3
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RSP+40]
            addsd XMM5,XMM3
            divsd XMM2,XMM4
            ucomisd XMM0,XMM5
            sqrtsd XMM3,XMM5
            ja .L_41e936
.L_41e8e5:

            lea RCX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RBP+72]
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_414350

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM2,XMM4
            mulsd XMM4,QWORD PTR [RSP+64]
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RBX+328]
            jmp .L_41e806
.L_41e936:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_41e8e5
.L_41e95f:

            call __stack_chk_fail@PLT
.L_41e964:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e970:

            push R13
            push R12
            push RBP
            push RBX
            mov EBP,3
            movapd XMM6,XMM0
            mov RBX,RDI
            sub RSP,72
.L_41e986:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_41f3d8]
            movsd QWORD PTR [RSP+48],XMM1
            mulsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RDI+336]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+40],XMM0
.L_41e9b4:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            mov R13,QWORD PTR [R12+16]
            movsd XMM2,QWORD PTR [RBX+168]
            addsd XMM4,QWORD PTR [R12+24]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBX+176]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM2,XMM2
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_41f3d0]
            pxor XMM7,XMM7
            subsd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+8],XMM6
            ja .L_41eaa0
.L_41ea44:

            mulsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM0,XMM3
            call .L_44c830

            sub EBP,1
            movapd XMM3,XMM0
            jne .L_41e9b4

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+8]
            add RSP,72
.L_41ea8d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movapd XMM1,XMM3
            ret 
.L_41eaa0:

            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_41ea44
.L_41eab9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eac0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_41eacb:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM7
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM2,XMM3
            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1
            je .L_41ebe4

            jle .L_41ebd0

            cmp EAX,2
            movapd XMM7,XMM4
            je .L_41ebc0

            cmp EAX,3
            jne .L_41ec30

            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RBX]
            mulsd XMM1,XMM6
            mulsd XMM5,XMM4
            mulsd XMM1,XMM3
            addsd XMM5,XMM1
.L_41eb6e:

            movq XMM0,QWORD PTR [RIP+.L_41f430]
            movapd XMM2,XMM5
            andpd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_41f3d0]
            andpd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_41f3f0]
            ucomisd XMM0,XMM2
            jbe .L_41ec48

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            ucomisd XMM1,XMM5
            ja .L_41ecf0
.L_41ebae:

            add RSP,64
.L_41ebb2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ebc0:

            movapd XMM5,XMM6
            mulsd XMM5,XMM3
            jmp .L_41eb6e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ebd0:

            test EAX,EAX
            jne .L_41ec30

            movq XMM0,QWORD PTR [RIP+.L_41f420]
            xorpd XMM1,XMM0
            xorpd XMM2,XMM0
.L_41ebe4:

            movsd XMM0,QWORD PTR [RIP+.L_41f3f8]
            movapd XMM3,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_41f3e0]
            subsd XMM3,XMM0
            andpd XMM3,XMMWORD PTR [RIP+.L_41f430]
            ucomisd XMM4,XMM3
            ja .L_41ecd0

            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,64
.L_41ec1c:

            pop RBX
            pop RBP
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ec30:

            add RSP,64
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ec48:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call acos@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+24]
            cmp DWORD PTR [RBX+64],2
            divsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            mulsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RSP+16]
            je .L_41ecbd

            mulsd XMM6,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM4,QWORD PTR [RBX+8]
            mulsd XMM3,XMM6
            subsd XMM4,XMM3
            movapd XMM7,XMM4
.L_41ecbd:

            mulsd XMM2,XMM7
            add RSP,64
.L_41ecc5:

            pop RBX
            pop RBP
            pop R12
            movapd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_41ecd0:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,64
            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41ecf0:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movapd XMM1,XMM5
            jmp .L_41ebae
.L_41ed20:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_41ed2b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call hypot@PLT

            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_41f400]
            movsd XMM4,QWORD PTR [RSP+8]
            ucomisd XMM3,XMM0
            jbe .L_41edc0

            subsd XMM3,QWORD PTR [RIP+.L_41f3e0]
            ucomisd XMM3,XMM0
            ja .L_41ef10

            movapd XMM3,XMM0
.L_41ed6e:

            mov R12D,DWORD PTR [RBP+64]
            lea EAX,DWORD PTR [R12-2]
            cmp EAX,1
            jbe .L_41ede8

            test R12D,R12D
            je .L_41eed0

            movapd XMM2,XMM3
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM2,QWORD PTR [RIP+.L_41f3f8]
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
.L_41edac:

            add RSP,64
.L_41edb0:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41edc0:

            movsd XMM0,QWORD PTR [RIP+.L_41f3e0]
            ucomisd XMM0,XMM3
            jbe .L_41ed6e

            movsd XMM1,QWORD PTR [RBX+336]
            add RSP,64
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ede8:

            lea RDI,QWORD PTR [RSP+56]
            movapd XMM0,XMM3
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            cmp R12D,2
            movsd XMM4,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM4,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            je .L_41ef30

            mulsd XMM4,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM4
            movapd XMM4,XMM1
            divsd XMM0,XMM3
            mulsd XMM4,QWORD PTR [RBP]
            addsd XMM0,XMM4
            call .L_449c40

            movsd QWORD PTR [RSP+8],XMM0
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RBP]
            mulsd XMM5,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,XMM0
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM3
.L_41ee9c:

            pxor XMM0,XMM0
            ucomisd XMM1,XMM0
            jp .L_41eeac

            je .L_41edac
.L_41eeac:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41edac
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41eed0:

            movsd XMM1,QWORD PTR [RIP+.L_41f3f8]
            xorpd XMM4,XMMWORD PTR [RIP+.L_41f420]
            movapd XMM2,XMM1
            movsd XMM0,QWORD PTR [RSP+16]
            subsd XMM2,XMM3
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41edac
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ef10:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,64
.L_41ef25:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41ef30:

            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM4
            call .L_449c40

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM1,XMM3
            jmp .L_41ee9c
.L_41ef6e:

            nop
            nop
.L_41ef70:

            push R13
            push R12
            mov ESI,480
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_41ef87:

            call .L_403c70

            test RAX,RAX
            je .L_41f0ce

            pxor XMM4,XMM4
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+176]
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_41f2b7
.L_41efbe:

            addsd XMM2,QWORD PTR [RIP+.L_41f3d0]
            movsd XMM0,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBP+72]
            divsd XMM1,XMM2
            call .L_4128a0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41f383]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movq XMM2,QWORD PTR [RIP+.L_41f430]
            movsd XMM0,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            movsd QWORD PTR [RBX+336],XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_41f3f8]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_41f3e0]
            ucomisd XMM2,XMM1
            jbe .L_41f098

            pxor XMM6,XMM6
            xor EAX,EAX
            ucomisd XMM6,XMM0
            seta AL
            mov DWORD PTR [RBP+64],EAX
            ja .L_41f198

            movsd XMM0,QWORD PTR [RIP+.L_41f3d0]
.L_41f04d:

            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBP+8],0
.L_41f05a:

            pxor XMM5,XMM5
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM5
            jp .L_41f0c0

            jne .L_41f0c0

            lea RAX,QWORD PTR [RIP+.L_41ed20]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41eac0]
            mov QWORD PTR [RBX+40],RAX
.L_41f084:

            add RSP,56
.L_41f088:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f098:

            ucomisd XMM2,XMM3
            jbe .L_41f160

            mov RAX,QWORD PTR [RIP+.L_41f3d0]
            mov DWORD PTR [RBP+64],2
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],RAX
            jmp .L_41f05a
          .byte 0x66
          .byte 0x90
.L_41f0c0:

            call .L_44c700

            test RAX,RAX
            mov QWORD PTR [RBP+16],RAX
            jne .L_41f0e0
.L_41f0ce:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_41e3b0
.L_41f0e0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_41f38a]
            call .L_4043f0

            test EAX,EAX
            jne .L_41f1a8

            mov EAX,DWORD PTR [RBP+64]
            cmp EAX,1
            je .L_41f290

            jg .L_41f1e8

            test EAX,EAX
            jne .L_41f133

            mov RDI,QWORD PTR [RBP+16]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_41f3d0]
            movsd XMM0,QWORD PTR [RIP+.L_41f3f8]
            call .L_44c7f0

            movsd QWORD PTR [RBP+40],XMM0
.L_41f133:

            lea R13,QWORD PTR [RIP+.L_41e740]
.L_41f13a:

            lea R12,QWORD PTR [RIP+.L_41e550]
.L_41f141:

            mov QWORD PTR [RBX+48],R13
            mov QWORD PTR [RBX+40],R12
            add RSP,56
.L_41f14d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f160:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mov DWORD PTR [RBP+64],3
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_41f05a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f198:

            movsd XMM0,QWORD PTR [RIP+.L_41f408]
            jmp .L_41f04d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f1a8:

            mov RDI,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+336]
            call .L_44c7f0

            lea RAX,QWORD PTR [RIP+.L_41e970]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41e400]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_41f084
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f1e8:

            cmp EAX,3
            lea R13,QWORD PTR [RIP+.L_41e740]
            jg .L_41f13a

            movsd XMM2,QWORD PTR [RBP]
            lea R12,QWORD PTR [RIP+.L_41e550]
            mov QWORD PTR [RBX+48],R13
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_41f3d0]
            mov QWORD PTR [RBX+40],R12
            mulsd XMM0,XMM2
            pxor XMM7,XMM7
            mulsd XMM0,XMM2
            subsd XMM6,XMM0
            ucomisd XMM7,XMM6
            sqrtsd XMM1,XMM6
            movapd XMM0,XMM6
            ja .L_41f307
.L_41f23e:

            movsd XMM0,QWORD PTR [RIP+.L_41f3d0]
            pxor XMM7,XMM7
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_41f2d9
.L_41f26d:

            divsd XMM1,XMM3
            movapd XMM0,XMM1
            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+56],XMM2
            movsd QWORD PTR [RBP+48],XMM0
            jmp .L_41f141
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f290:

            mov RDI,QWORD PTR [RBP+16]
            pxor XMM2,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_41f408]
            movsd XMM0,QWORD PTR [RIP+.L_41f410]
            call .L_44c7f0

            movsd QWORD PTR [RBP+40],XMM0
            jmp .L_41f133
.L_41f2b7:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41efbe
.L_41f2d9:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_41f26d
.L_41f307:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41f23e
.L_41f322:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f330:

            test RDI,RDI
            je .L_41f340

            jmp .L_41ef70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f340:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41f36e

            lea RDX,QWORD PTR [RIP+.L_41e3f0]
            lea RCX,QWORD PTR [RIP+.L_41f3a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41f36e:

            add RSP,8
            ret 
.L_41f373:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f380:

            xor EAX,EAX
            ret 
.L_41f383:
          .string "rlat_0"
.L_41f38a:
          .string "bguam"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f3a0:
          .string "Azimuthal Equidistant\n\tAzi, Sph&Ell\n\tlat_0 guam"
.L_41f3d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_41f3d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_41f3e0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_41f3e8:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_41f3f0:
          .byte 0x9b
          .byte 0x2b
          .byte 0xa1
          .byte 0x86
          .byte 0x9b
          .byte 0x84
          .byte 0x6
          .byte 0x3d
.L_41f3f8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_41f400:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_41f408:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_41f410:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f420:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f430:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f440:

            test RDI,RDI
            je .L_41f468

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41f45e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_41f45e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f468:

            xor EAX,EAX
            ret 
.L_41f46b:

            nop
            nop
            nop
            nop
            nop
.L_41f470:

            jmp .L_41f440
.L_41f472:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f480:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_41f48b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM6
            call sincos@PLT

            mov RDX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RDX+16]
            movsd XMM5,QWORD PTR [RSP+40]
            movapd XMM4,XMM3
            cmp EAX,1
            je .L_41f640

            jle .L_41f5f8

            cmp EAX,2
            je .L_41f580

            cmp EAX,3
            jne .L_41f5c8

            movsd XMM4,QWORD PTR [RDX+8]
            movsd XMM6,QWORD PTR [RDX]
            movapd XMM1,XMM4
            movapd XMM0,XMM6
            mulsd XMM1,XMM2
            mulsd XMM0,XMM5
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_41fb48]
            ucomisd XMM0,XMM1
            jae .L_41f5cc

            movsd XMM7,QWORD PTR [RIP+.L_41fb58]
            movapd XMM0,XMM2
            mulsd XMM2,XMM6
            divsd XMM7,XMM1
            mulsd XMM4,XMM5
            mulsd XMM3,XMM2
            mulsd XMM0,XMM7
            movapd XMM1,XMM4
            subsd XMM1,XMM3
            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_41f573:

            pop RBX
            pop RBP
            mulsd XMM1,XMM7
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f580:

            mulsd XMM3,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_41fb48]
            ucomisd XMM0,XMM3
            movapd XMM1,XMM3
            jae .L_41f5cc

            movsd XMM0,QWORD PTR [RIP+.L_41fb58]
            divsd XMM0,XMM3
            mulsd XMM2,XMM0
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
            pop RBX
            mulsd XMM1,XMM5
            mulsd XMM0,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f5c8:

            pxor XMM1,XMM1
.L_41f5cc:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,48
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f5f8:

            test EAX,EAX
            jne .L_41f5c8

            movsd XMM0,QWORD PTR [RIP+.L_41fb48]
            ucomisd XMM0,XMM5
            jae .L_41f67a

            movsd XMM1,QWORD PTR [RIP+.L_41fb58]
            xorpd XMM4,XMMWORD PTR [RIP+.L_41fb80]
            divsd XMM1,XMM5
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
.L_41f62c:

            mulsd XMM2,XMM4
            add RSP,48
            pop RBX
            pop RBP
            pop R12
            mulsd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f640:

            ucomisd XMM5,QWORD PTR [RIP+.L_41fb50]
            movapd XMM1,XMM5
            xorpd XMM1,XMMWORD PTR [RIP+.L_41fb80]
            jae .L_41f5cc

            movsd XMM0,QWORD PTR [RIP+.L_41fb58]
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_41f62c
.L_41f67a:

            movapd XMM1,XMM5
            jmp .L_41f5cc
.L_41f683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f690:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41f699:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            call hypot@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call atan@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            movsd XMM7,QWORD PTR [RIP+.L_41fb58]
            movapd XMM4,XMM0
            mulsd XMM0,XMM0
            movapd XMM6,XMM7
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM6,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM1,XMM6
            sqrtsd XMM8,XMM6
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RSP+16]
            ja .L_41f95d
.L_41f715:

            movsd XMM0,QWORD PTR [RIP+.L_41fb48]
            ucomisd XMM0,XMM5
            jae .L_41f7e8

            mov EAX,DWORD PTR [RBP+16]
            cmp EAX,1
            je .L_41f850

            jle .L_41f860

            cmp EAX,2
            je .L_41f800

            cmp EAX,3
            jne .L_41f7bb

            mulsd XMM2,XMM4
            movsd XMM9,QWORD PTR [RBP+8]
            movsd XMM10,QWORD PTR [RBP]
            mulsd XMM2,XMM9
            movapd XMM0,XMM10
            mulsd XMM0,XMM8
            divsd XMM2,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_41fb90]
            ucomisd XMM0,XMM7
            jb .L_41f8f0

            ucomisd XMM2,XMM1
            jbe .L_41f890

            movsd XMM3,QWORD PTR [RIP+.L_41fb70]
.L_41f796:

            mulsd XMM10,XMM7
            mulsd XMM4,XMM9
            subsd XMM8,XMM10
            mulsd XMM6,XMM4
            mulsd XMM8,XMM5
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM8
.L_41f7bb:

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP]
            add RSP,88
.L_41f7da:

            pop RBX
            movapd XMM1,XMM3
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f7e8:

            movsd XMM3,QWORD PTR [RBX+336]
            add RSP,88
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_41f800:

            mulsd XMM2,XMM4
            divsd XMM2,XMM5
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_41fb90]
            ucomisd XMM0,XMM7
            jb .L_41f8a8

            ucomisd XMM2,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_41fb70]
            ja .L_41f834

            movsd XMM3,QWORD PTR [RIP+.L_41fb68]
.L_41f834:

            mulsd XMM5,XMM8
            mulsd XMM6,XMM4
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+40],XMM6
            jmp .L_41f7bb
          .byte 0x66
          .byte 0x90
.L_41f850:

            subsd XMM3,QWORD PTR [RIP+.L_41fb70]
            jmp .L_41f7bb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f860:

            test EAX,EAX
            jne .L_41f7bb

            movsd XMM0,QWORD PTR [RIP+.L_41fb70]
            xorpd XMM2,XMMWORD PTR [RIP+.L_41fb80]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movapd XMM3,XMM0
            jmp .L_41f7bb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f890:

            movsd XMM7,QWORD PTR [RIP+.L_41fb60]
            movsd XMM3,QWORD PTR [RIP+.L_41fb68]
            jmp .L_41f796
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f8a8:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            jmp .L_41f834
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f8f0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            call asin@PLT

            movsd XMM10,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM10
            call sin@PLT

            movsd XMM9,QWORD PTR [RBP+8]
            movapd XMM7,XMM0
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            jmp .L_41f796
.L_41f95d:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_41f715
.L_41f9c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f9d0:

            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_41f9e2:

            call .L_403c70

            test RAX,RAX
            je .L_41fac0

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_41fb90]
            movapd XMM3,XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_41fb70]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_41fb48]
            ucomisd XMM2,XMM1
            ja .L_41fa68

            ucomisd XMM2,XMM3
            jbe .L_41fa80

            mov DWORD PTR [RAX+16],2
.L_41fa37:

            lea RAX,QWORD PTR [RIP+.L_41f690]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41f480]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_41fa5c:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fa68:

            pxor XMM1,XMM1
            xor EDX,EDX
            ucomisd XMM1,XMM0
            seta DL
            mov DWORD PTR [RAX+16],EDX
            jmp .L_41fa37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fa80:

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX+16],3
            movsd QWORD PTR [RAX],XMM1
            movsd QWORD PTR [RAX+8],XMM0
            jmp .L_41fa37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fac0:

            add RSP,32
.L_41fac4:

            mov RDI,RBX
            pop RBX
            jmp .L_41f440
.L_41facd:

            nop
            nop
            nop
.L_41fad0:

            test RDI,RDI
            je .L_41fae0

            jmp .L_41f9d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fae0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_41fb0e

            lea RDX,QWORD PTR [RIP+.L_41f470]
            lea RCX,QWORD PTR [RIP+.L_41fb30]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_41fb0e:

            add RSP,8
            ret 
.L_41fb13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb20:

            xor EAX,EAX
            ret 
.L_41fb23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fb30:

            outsb DX,BYTE PTR [RSI]
          .byte 0x6f
          .byte 0x6d
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0xa
          .byte 0x9
          .byte 0x41
          .byte 0x7a
          .byte 0x69
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fb48:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_41fb50:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0xbd
.L_41fb58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_41fb60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_41fb68:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_41fb70:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fb80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fb90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fba0:

            test RDI,RDI
            je .L_41fbd0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_41fbc8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+64]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_41fbc8:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fbd0:

            xor EAX,EAX
            ret 
.L_41fbd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fbe0:

            jmp .L_41fba0
.L_41fbe2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fbf0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_41fbfb:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBX
            movsd XMM7,QWORD PTR [RSP+56]
            mov RSI,RBP
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM7
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+48]
            mov EAX,DWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RSP+56]
            movapd XMM5,XMM3
            cmp EAX,1
            je .L_41fde8

            jle .L_41fd50

            cmp EAX,2
            movapd XMM6,XMM2
            je .L_41fd08

            cmp EAX,3
            jne .L_41fdd0

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_420bb8]
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            ucomisd XMM0,XMM1
            jae .L_41fd26
.L_41fcaf:

            movsd XMM0,QWORD PTR [RIP+.L_420bc8]
            pxor XMM5,XMM5
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_41fe66
.L_41fccd:

            movapd XMM0,XMM1
            cmp EAX,2
            mulsd XMM0,XMM4
            mulsd XMM0,QWORD PTR [RSP+16]
            je .L_41fcf5

            mulsd XMM4,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM3,XMM4
            movapd XMM6,XMM2
            subsd XMM6,XMM3
.L_41fcf5:

            add RSP,64
.L_41fcf9:

            mulsd XMM1,XMM6
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fd08:

            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            mulsd XMM1,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_420bb8]
            ucomisd XMM0,XMM1
            jb .L_41fcaf
.L_41fd26:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP]
            add RSP,64
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fd50:

            test EAX,EAX
            jne .L_41fdd0

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RIP+.L_420bc0]
            addsd XMM0,QWORD PTR [R12+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_420bf0]
            ucomisd XMM1,XMM0
            ja .L_41fe48

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_420bd8]
            mulsd XMM2,QWORD PTR [RIP+.L_420bd0]
            xorpd XMM5,XMMWORD PTR [RIP+.L_420c00]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
.L_41fdb7:

            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,64
.L_41fdc1:

            pop RBX
            mulsd XMM0,XMM1
            mulsd XMM1,XMM5
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41fdd0:

            add RSP,64
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fde8:

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RIP+.L_420bc0]
            addsd XMM0,QWORD PTR [R12+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_420bf0]
            ucomisd XMM1,XMM0
            ja .L_41fe48

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_420bd8]
            mulsd XMM1,QWORD PTR [RIP+.L_420bd0]
            movsd QWORD PTR [RSP+8],XMM3
            subsd XMM0,XMM1
            call cos@PLT

            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            jmp .L_41fdb7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fe48:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,64
.L_41fe5d:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
.L_41fe66:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBX+72]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_41fccd
.L_41fead:

            nop
            nop
            nop
.L_41feb0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_41feb9:

            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM6
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_44d3b0

            mov EAX,DWORD PTR [RBP+72]
            movapd XMM4,XMM0
            lea EDX,DWORD PTR [RAX-2]
            cmp EDX,1
            jbe .L_4200a0

            pxor XMM3,XMM3
            pxor XMM5,XMM5
            pxor XMM1,XMM1
.L_41ff29:

            cmp EAX,1
            je .L_420110

            jle .L_420048

            cmp EAX,2
            je .L_41ffd8

            cmp EAX,3
            jne .L_420081

            movsd XMM6,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RBP+8]
            movapd XMM2,XMM6
            movsd XMM7,QWORD PTR [RIP+.L_420bc0]
            movapd XMM0,XMM4
            mulsd XMM2,XMM1
            mulsd XMM0,XMM5
            addsd XMM2,QWORD PTR [RIP+.L_420bb8]
            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_420bf0]
            ucomisd XMM7,XMM0
            ja .L_420081

            movsd XMM0,QWORD PTR [RIP+.L_420bc8]
            divsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_420178
.L_41ffae:

            mulsd XMM6,XMM5
            mulsd XMM1,XMM4
            mulsd XMM6,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd XMM1,QWORD PTR [RBP+24]
            mulsd XMM1,XMM2
            subsd XMM4,XMM6
            mulsd XMM1,XMM4
            jmp .L_420027
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ffd8:

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_420bc0]
            mulsd XMM2,XMM5
            addsd XMM2,QWORD PTR [RIP+.L_420bb8]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_420bf0]
            ucomisd XMM4,XMM0
            ja .L_420081

            movsd XMM0,QWORD PTR [RIP+.L_420bc8]
            divsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4201b0
.L_42001e:

            mulsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RBP+24]
.L_420027:

            mulsd XMM2,QWORD PTR [RBP+16]
            movapd XMM0,XMM2
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,88
.L_42003e:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420048:

            test EAX,EAX
            jne .L_420081

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RBP+40]
            addsd XMM2,QWORD PTR [RIP+.L_420be0]
            subsd XMM0,XMM4
            movapd XMM4,XMM0
.L_420067:

            andpd XMM2,XMMWORD PTR [RIP+.L_420bf0]
            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            ucomisd XMM0,XMM2
            jbe .L_420130
.L_420081:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_415fe0

            pxor XMM0,XMM0
            movapd XMM1,XMM0
.L_420096:

            add RSP,88
.L_42009a:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4200a0:

            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_420bb8]
            divsd XMM1,QWORD PTR [RBP+40]
            pxor XMM3,XMM3
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM5,XMM0
            jbe .L_41ff29

            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBP+72]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            jmp .L_41ff29
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420110:

            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM4,QWORD PTR [RBP+40]
            subsd XMM2,QWORD PTR [RIP+.L_420be0]
            jmp .L_420067
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420130:

            ucomisd XMM4,XMM3
            jae .L_420148

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_420096
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420148:

            ucomisd XMM3,XMM4
            sqrtsd XMM1,XMM4
            ja .L_4201de
.L_420156:

            movsd XMM0,QWORD PTR [RSP+24]
            cmp EAX,1
            mulsd XMM0,XMM1
            je .L_42016d

            xorpd XMM1,XMMWORD PTR [RIP+.L_420c00]
.L_42016d:

            mulsd XMM1,QWORD PTR [RSP+16]
            jmp .L_420096
.L_420178:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+8]
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_41ffae
.L_4201b0:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42001e
.L_4201de:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            mov EAX,DWORD PTR [RBP+72]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_420156
.L_4201fb:

            nop
            nop
            nop
            nop
            nop
.L_420200:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_42020b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_420bd0]
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            ucomisd XMM1,QWORD PTR [RIP+.L_420bb8]
            jbe .L_420270

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_415fe0

            pxor XMM3,XMM3
            movsd XMM1,QWORD PTR [RSP]
            add RSP,64
.L_420265:

            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_420270:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM3
            call asin@PLT

            mov R12D,DWORD PTR [RBP+72]
            movapd XMM2,XMM0
            pxor XMM1,XMM1
            addsd XMM2,XMM0
            pxor XMM5,XMM5
            lea EAX,DWORD PTR [R12-2]
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+32]
            cmp EAX,1
            ja .L_4202ee

            movapd XMM0,XMM2
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
.L_4202ee:

            cmp R12D,1
            je .L_420420

            jle .L_4203c8

            cmp R12D,2
            je .L_420430

            cmp R12D,3
            jne .L_420410

            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            movsd XMM6,QWORD PTR [RBP]
            ucomisd XMM0,XMM4
            movsd XMM7,QWORD PTR [RBP+8]
            jb .L_420468

            movsd XMM2,QWORD PTR [RBX+336]
.L_420336:

            mulsd XMM1,XMM7
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM0,XMM6
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM5,XMM0
            pxor XMM0,XMM0
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+8],XMM5
.L_420393:

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jp .L_4203eb

            jne .L_4203eb

            mov EAX,DWORD PTR [RBP+72]
            sub EAX,2
            cmp EAX,1
            ja .L_4203eb
.L_4203ac:

            movapd XMM3,XMM0
            add RSP,64
.L_4203b4:

            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4203c8:

            test R12D,R12D
            jne .L_420410

            movsd XMM0,QWORD PTR [RIP+.L_420be0]
            xorpd XMM3,XMMWORD PTR [RIP+.L_420c00]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM2,XMM0
.L_4203eb:

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_4203ac
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420410:

            pxor XMM0,XMM0
            jmp .L_420393
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420420:

            subsd XMM2,QWORD PTR [RIP+.L_420be0]
            jmp .L_4203eb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420430:

            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            ucomisd XMM0,XMM4
            jb .L_4204c0

            pxor XMM2,XMM2
            pxor XMM0,XMM0
.L_42044a:

            mulsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM5,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            jmp .L_420393
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420468:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM3
            mulsd XMM0,XMM7
            divsd XMM0,XMM4
            addsd XMM0,XMM6
            call asin@PLT

            movsd XMM7,QWORD PTR [RBP+8]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_420336
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4204c0:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            movapd XMM0,XMM3
            divsd XMM0,XMM4
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_42044a
.L_420500:

            push RBX
            movapd XMM2,XMM1
            sub RSP,48
.L_420509:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+72]
            cmp EAX,1
            je .L_4205d0

            jg .L_420570

            test EAX,EAX
            jne .L_420608

            movapd XMM3,XMM0
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            addsd XMM3,XMM2
            ucomisd XMM3,QWORD PTR [RIP+.L_420bb0]
            jp .L_420543

            je .L_4205f0
.L_420543:

            divsd XMM3,QWORD PTR [RBX+40]
            movapd XMM2,XMM1
            xorpd XMM2,XMMWORD PTR [RIP+.L_420c00]
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_420bb8]
            subsd XMM3,XMM1
            jmp .L_42060c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420570:

            cmp EAX,3
            mov QWORD PTR [RSP+8],RDI
            jg .L_420608

            movsd XMM1,QWORD PTR [RBX+48]
            divsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM1
            call hypot@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_420bc0]
            ucomisd XMM0,XMM2
            jbe .L_420670

            mov RDI,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RDI+336]
            add RSP,48
.L_4205c7:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4205d0:

            movapd XMM3,XMM1
            mulsd XMM3,XMM1
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            addsd XMM1,XMM3
            ucomisd XMM1,QWORD PTR [RIP+.L_420bb0]
            jp .L_420650

            jne .L_420650
.L_4205f0:

            movsd XMM1,QWORD PTR [RDI+336]
            add RSP,48
            pxor XMM0,XMM0
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420608:

            pxor XMM3,XMM3
.L_42060c:

            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call asin@PLT

            mov RDI,RBX
            call .L_44a3e0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,48
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_420650:

            divsd XMM1,QWORD PTR [RBX+40]
            movsd XMM3,QWORD PTR [RIP+.L_420bb8]
            subsd XMM3,XMM1
            xorpd XMM3,XMMWORD PTR [RIP+.L_420c00]
            jmp .L_42060c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420670:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_420bd0]
            divsd XMM0,QWORD PTR [RBX+56]
            call asin@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            cmp DWORD PTR [RBX+72],3
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_4206e0

            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM3,XMM4
            divsd XMM3,XMM2
            mulsd XMM2,XMM1
            jmp .L_42060c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4206e0:

            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RBX+8]
            movapd XMM3,XMM8
            movsd XMM5,QWORD PTR [RBX]
            mulsd XMM3,XMM4
            movapd XMM7,XMM5
            mulsd XMM5,XMM8
            mulsd XMM7,XMM1
            mulsd XMM3,XMM6
            mulsd XMM4,XMM5
            divsd XMM3,XMM2
            mulsd XMM2,XMM6
            addsd XMM3,XMM7
            mulsd XMM2,XMM1
            subsd XMM2,XMM4
            jmp .L_42060c
.L_420727:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420730:

            push RBP
            push RBX
            mov ESI,80
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_420743:

            call .L_403c70

            test RAX,RAX
            je .L_420a10

            movsd XMM0,QWORD PTR [RBX+336]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_420bf0]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RBX+176]
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_420be0]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_420bc0]
            ucomisd XMM2,XMM1
            ja .L_4207d8

            ucomisd XMM2,XMM3
            jbe .L_420990

            pxor XMM3,XMM3
            mov DWORD PTR [RAX+72],2
            ucomisd XMM4,XMM3
            jp .L_4207f0
.L_4207b1:

            jne .L_4207f0
.L_4207b3:

            lea RAX,QWORD PTR [RIP+.L_420200]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41fbf0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_4207cd:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4207d8:

            pxor XMM3,XMM3
            xor EAX,EAX
            ucomisd XMM3,XMM0
            seta AL
            ucomisd XMM4,XMM3
            mov DWORD PTR [RBP+72],EAX
            jnp .L_4207b1

            nop
            nop
.L_4207f0:

            ucomisd XMM3,XMM4
            sqrtsd XMM1,XMM4
            ja .L_420a6e
.L_4207fe:

            movsd QWORD PTR [RBX+168],XMM1
            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM0,QWORD PTR [RIP+.L_420bb8]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44d3b0

            movsd XMM1,QWORD PTR [RIP+.L_420bb8]
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_420bd0]
            subsd XMM1,XMM0
            divsd XMM6,XMM1
            movsd QWORD PTR [RBP+32],XMM6
            call .L_44a350

            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBP+72]
            movsd XMM3,QWORD PTR [RSP+8]
            cmp EAX,2
            je .L_420a20

            jle .L_4209d8

            cmp EAX,3
            jne .L_4209e7

            movsd XMM0,QWORD PTR [RIP+.L_420bd0]
            mulsd XMM0,QWORD PTR [RBP+40]
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_420af5
.L_420890:

            movsd QWORD PTR [RBP+56],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM0
            call .L_44d3b0

            divsd XMM0,QWORD PTR [RBP+40]
            movsd XMM7,QWORD PTR [RIP+.L_420bb8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM0
            mulsd XMM0,XMM0
            subsd XMM7,XMM0
            ucomisd XMM3,XMM7
            sqrtsd XMM5,XMM7
            movapd XMM0,XMM7
            ja .L_420ad3
.L_4208f5:

            movsd QWORD PTR [RBP+8],XMM5
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM5,QWORD PTR [RIP+.L_420bb8]
            mulsd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            subsd XMM5,XMM0
            ucomisd XMM3,XMM5
            sqrtsd XMM4,XMM5
            movapd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP+16]
            ja .L_420aac
.L_420957:

            movsd XMM1,QWORD PTR [RBP+56]
            mulsd XMM4,XMM1
            mulsd XMM4,XMM5
            divsd XMM2,XMM4
            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+48],XMM2
            movapd XMM2,XMM1
            mulsd XMM1,XMM0
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+24],XMM2
            jmp .L_4209e7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420990:

            pxor XMM3,XMM3
            mov DWORD PTR [RAX+72],3
            ucomisd XMM4,XMM3
            jp .L_4207f0

            jne .L_4207f0

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP],XMM1
            jmp .L_4207b3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4209d8:

            test EAX,EAX
            js .L_4209e7

            mov RAX,QWORD PTR [RIP+.L_420bb8]
            mov QWORD PTR [RBP+48],RAX
.L_4209e7:

            lea RAX,QWORD PTR [RIP+.L_420500]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_41feb0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_420a01:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420a10:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41fba0
          .byte 0x66
          .byte 0x90
.L_420a20:

            movsd XMM1,QWORD PTR [RBP+40]
            movsd XMM0,QWORD PTR [RIP+.L_420bd0]
            mulsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_420a94
.L_420a3b:

            movsd XMM0,QWORD PTR [RIP+.L_420bb8]
            mov RAX,QWORD PTR [RIP+.L_420bb8]
            mulsd XMM1,QWORD PTR [RIP+.L_420bd0]
            movsd QWORD PTR [RBP+56],XMM2
            divsd XMM0,XMM2
            mov QWORD PTR [RBP+16],RAX
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+48],XMM0
            jmp .L_4209e7
.L_420a6e:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4207fe
.L_420a94:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBP+40]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_420a3b
.L_420aac:

            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_420957
.L_420ad3:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_4208f5
.L_420af5:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_420890
.L_420b17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420b20:

            test RDI,RDI
            je .L_420b30

            jmp .L_420730
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420b30:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_420b5e

            lea RDX,QWORD PTR [RIP+.L_41fbe0]
            lea RCX,QWORD PTR [RIP+.L_420b80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_420b5e:

            add RSP,8
            ret 
.L_420b63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420b70:

            xor EAX,EAX
            ret 
.L_420b73:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420b80:
          .string "Lambert Azimuthal Equal Area\n\tAzi, Sph&Ell"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420bb0:
          .zero 8
.L_420bb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_420bc0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_420bc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_420bd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_420bd8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_420be0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420bf0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420c00:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_420c10:

            test RDI,RDI
            je .L_420c38

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_420c2e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_420c2e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420c38:

            xor EAX,EAX
            ret 
.L_420c3b:

            nop
            nop
            nop
            nop
            nop
.L_420c40:

            jmp .L_420c10
.L_420c42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420c50:

            push RBP
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_420c5d:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM0,QWORD PTR [RDI+176]
            movsd XMM1,QWORD PTR [RDI+336]
            jp .L_420cc0

            jne .L_420cc0
.L_420c75:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            lea RAX,QWORD PTR [RIP+.L_420ee0]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP+16],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_420d70]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_420cb8:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_420cc0:

            movsd XMM3,QWORD PTR [RBX+168]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_421848]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_421850]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_421858]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            subsd XMM4,XMM2
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_421850]
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            divsd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_421848]
            jmp .L_420c75
.L_420d67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420d70:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_420d7d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [R13+32]
            movsd XMM7,QWORD PTR [R13+168]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_421848]
            addsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_421850]
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_421858]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM4,XMM6
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+32],XMM6
            subsd XMM4,XMM1
            addsd XMM1,XMM6
            movapd XMM0,XMM4
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_421850]
            mulsd XMM1,QWORD PTR [RSP+8]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R12
            mov RDI,RBP
            subsd XMM0,QWORD PTR [RIP+.L_421848]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBX+16]
            mov ESI,DWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBX]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            addsd XMM0,XMM6
            movapd XMM6,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_421860]
            mulsd XMM6,XMM5
            mulsd XMM3,XMM5
            mulsd XMM2,XMM7
            mulsd XMM6,XMM4
            mulsd XMM3,XMM4
            addsd XMM0,XMM6
            subsd XMM2,XMM3
            divsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            call .L_44d590

            add RSP,72
.L_420ed7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_420ede:

            nop
            nop
.L_420ee0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,20
            movapd XMM4,XMM0
            sub RSP,120
.L_420ef6:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            mov RBP,QWORD PTR [RDI+32]
            lea R12,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            jmp .L_420f31
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420f28:

            sub EBX,1
            je .L_4210a0
.L_420f31:

            mov ESI,DWORD PTR [RBP+24]
            mov RDI,QWORD PTR [RBP]
            mov RDX,R12
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            call .L_44d630

            movsd XMM6,QWORD PTR [RSP+88]
            subsd XMM0,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+80]
            subsd XMM1,QWORD PTR [RSP+24]
            movapd XMM2,XMM6
            movapd XMM5,XMM7
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM2,XMM6
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM8,XMM1
            mulsd XMM1,XMM7
            addsd XMM5,XMM2
            movapd XMM2,XMM0
            mulsd XMM8,XMM6
            mulsd XMM0,XMM6
            mulsd XMM2,XMM7
            movsd XMM6,QWORD PTR [RIP+.L_421870]
            subsd XMM1,XMM0
            addsd XMM2,XMM8
            xorpd XMM1,XMMWORD PTR [RIP+.L_4218f0]
            xorpd XMM2,XMMWORD PTR [RIP+.L_4218f0]
            divsd XMM1,XMM5
            divsd XMM2,XMM5
            addsd XMM3,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_421900]
            addsd XMM4,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_421900]
            addsd XMM1,XMM2
            ucomisd XMM6,XMM1
            jb .L_420f28

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            call hypot@PLT

            movapd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_421850]
            movsd QWORD PTR [RSP+32],XMM7
            mulsd XMM0,XMM7
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+48],XMM6
            movsd XMM6,QWORD PTR [RIP+.L_421870]
            movsd QWORD PTR [RSP+56],XMM4
            ucomisd XMM6,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            jb .L_4210b8

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [R13+336]
.L_421079:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42122b

            add RSP,120
.L_421091:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4210a0:

            movsd XMM2,QWORD PTR [RIP+.L_421868]
            movapd XMM0,XMM2
.L_4210ac:

            movapd XMM1,XMM2
            jmp .L_421079
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4210b8:

            movsd XMM0,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [R13]
            movsd XMM1,QWORD PTR [RSP+48]
            mov EBX,20
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM1,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,QWORD PTR [RBP+8]
            divsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,XMM1
            call .L_449c40

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_421848]
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_421850]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_421141
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421138:

            sub EBX,1
            je .L_4210a0
.L_421141:

            movsd XMM1,QWORD PTR [R13+168]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RIP+.L_421858]
            mulsd XMM0,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_421858]
            mulsd XMM1,QWORD PTR [RIP+.L_421850]
            subsd XMM7,XMM0
            addsd XMM5,XMM0
            divsd XMM5,XMM7
            movapd XMM0,XMM5
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RIP+.L_421870]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            subsd XMM0,QWORD PTR [RIP+.L_421848]
            subsd XMM0,XMM2
            addsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_421900]
            ucomisd XMM7,XMM0
            jb .L_421138

            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP],XMM2
            mulsd XMM1,QWORD PTR [RBP+8]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM7,XMM4
            movapd XMM0,XMM7
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            jmp .L_4210ac
.L_42122b:

            call __stack_chk_fail@PLT
.L_421230:

            push RBX
.L_421231:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_421290

            mov RDX,QWORD PTR [RIP+.L_421878]
            mov RCX,QWORD PTR [RIP+.L_421880]
            lea RSI,QWORD PTR [RIP+.L_65f380]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+24],2
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RBX+176],0
            pop RBX
.L_421288:

            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421290:

            mov RDI,RBX
            pop RBX
            jmp .L_420c10
.L_421299:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212a0:

            test RDI,RDI
            je .L_4212b0

            jmp .L_421230
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4212b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4212de

            lea RDX,QWORD PTR [RIP+.L_420c40]
            lea RCX,QWORD PTR [RIP+.L_421820]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4212de:

            add RSP,8
            ret 
.L_4212e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4212f0:

            push RBX
.L_4212f1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_421350

            mov RDX,QWORD PTR [RIP+.L_421888]
            mov RCX,QWORD PTR [RIP+.L_421890]
            lea RSI,QWORD PTR [RIP+.L_65f340]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+24],2
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov QWORD PTR [RBX+176],0
            pop RBX
.L_421348:

            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421350:

            mov RDI,RBX
            pop RBX
            jmp .L_420c10
.L_421359:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421360:

            test RDI,RDI
            je .L_421370

            jmp .L_4212f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421370:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42139e

            lea RDX,QWORD PTR [RIP+.L_420c40]
            lea RCX,QWORD PTR [RIP+.L_4217e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42139e:

            add RSP,8
            ret 
.L_4213a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4213b0:

            push RBX
.L_4213b1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_421420

            mov RDX,QWORD PTR [RIP+.L_421898]
            mov RCX,QWORD PTR [RIP+.L_4218a0]
            lea RSI,QWORD PTR [RIP+.L_65f2e0]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],4
            mov RDI,RBX
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_4218a8]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_421416:

            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421420:

            mov RDI,RBX
            pop RBX
            jmp .L_420c10
.L_421429:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421430:

            test RDI,RDI
            je .L_421440

            jmp .L_4213b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421440:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42146e

            lea RDX,QWORD PTR [RIP+.L_420c40]
            lea RCX,QWORD PTR [RIP+.L_4217a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42146e:

            add RSP,8
            ret 
.L_421473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421480:

            push RBX
.L_421481:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_421538

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [RIP+.L_44f380-187088]
            mov RCX,QWORD PTR [RIP+.L_4218b8]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],5
            ucomisd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            jp .L_4214f8

            jne .L_4214f8

            lea RDX,QWORD PTR [RIP+.L_65f220]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RIP+.L_4218a8]
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_4214ef:

            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4214f8:

            lea RSI,QWORD PTR [RIP+.L_65f280]
            mov RDI,RBX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_4218c0]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_4218c8]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_4218d0]
            mov QWORD PTR [RBX+168],RAX
            pop RBX
            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421538:

            mov RDI,RBX
            pop RBX
            jmp .L_420c10
.L_421541:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421550:

            test RDI,RDI
            je .L_421560

            jmp .L_421480
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421560:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42158e

            lea RDX,QWORD PTR [RIP+.L_420c40]
            lea RCX,QWORD PTR [RIP+.L_421760]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42158e:

            add RSP,8
            ret 
.L_421593:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4215a0:

            push RBX
.L_4215a1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_421658

            pxor XMM0,XMM0
            mov RDX,QWORD PTR [RIP+.L_4218d8]
            mov RCX,QWORD PTR [RIP+.L_4218e0]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+24],9
            ucomisd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+328],RDX
            mov QWORD PTR [RBX+336],RCX
            jp .L_421618

            jne .L_421618

            lea RDX,QWORD PTR [RIP+.L_65f0e0]
            mov RDI,RBX
            mov QWORD PTR [RAX],RDX
            mov RAX,QWORD PTR [RIP+.L_4218a8]
            mov QWORD PTR [RBX+128],RAX
            pop RBX
.L_42160f:

            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421618:

            lea RSI,QWORD PTR [RIP+.L_65f180]
            mov RDI,RBX
            mov QWORD PTR [RAX],RSI
            mov RAX,QWORD PTR [RIP+.L_4218c0]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_4218c8]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_4218d0]
            mov QWORD PTR [RBX+168],RAX
            pop RBX
            jmp .L_420c50
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421658:

            mov RDI,RBX
            pop RBX
            jmp .L_420c10
.L_421661:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421670:

            test RDI,RDI
            je .L_421680

            jmp .L_4215a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421680:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4216ae

            lea RDX,QWORD PTR [RIP+.L_420c40]
            lea RCX,QWORD PTR [RIP+.L_421720]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4216ae:

            add RSP,8
            ret 
.L_4216b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4216c0:

            xor EAX,EAX
            ret 
.L_4216c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4216d0:

            xor EAX,EAX
            ret 
.L_4216d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4216e0:

            xor EAX,EAX
            ret 
.L_4216e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4216f0:

            xor EAX,EAX
            ret 
.L_4216f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421700:

            xor EAX,EAX
            ret 
.L_421703:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421720:
          .string "Mod. Stereographic of 50 U.S.\n\tAzi(mod)"
          .zero 24
.L_421760:
          .string "Mod. Stereographic of Alaska\n\tAzi(mod)"
          .zero 25
.L_4217a0:
          .string "Mod. Stereographic of 48 U.S.\n\tAzi(mod)"
          .zero 24
.L_4217e0:
          .string "Lee Oblated Stereographic\n\tAzi(mod)"
          .zero 28
.L_421820:
          .string "Miller Oblated Stereographic\n\tAzi(mod)"
          .byte 0x90
.L_421848:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_421850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_421858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_421860:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_421868:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_421870:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_421878:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0x3f
.L_421880:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xd4
          .byte 0x3f
.L_421888:
          .byte 0xab
          .byte 0x7e
          .byte 0x3e
          .byte 0xd
          .byte 0xd1
          .byte 0x9
          .byte 0x7
          .byte 0xc0
.L_421890:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xc6
          .byte 0xbf
.L_421898:
          .byte 0xd6
          .byte 0xeb
          .byte 0x7b
          .byte 0xf3
          .byte 0xe9
          .byte 0xce
          .byte 0xfa
          .byte 0xbf
.L_4218a0:
          .byte 0x9d
          .byte 0xaf
          .byte 0xd4
          .byte 0x15
          .byte 0x1e
          .byte 0xc8
          .byte 0xe5
          .byte 0x3f
.L_4218a8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX-83],AL
            pop R8
            mov R12B,26
            ret 9184
          .byte 0x39
          .byte 0x5
          .byte 0xc0
.L_4218b8:

            cmp DWORD PTR [RBP-549019054],EBX
            int1 
          .byte 0x3f
.L_4218c0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb7
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_4218c8:
          .byte 0x95
          .byte 0x65
          .byte 0x67
          .byte 0x55
          .byte 0x74
          .byte 0xb9
          .byte 0x7b
          .byte 0x3f
.L_4218d0:

            and EAX,3302984539
            lgs EDI,QWORD PTR [RDI]
.L_4218d8:

            jae .L_421908
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x0
          .byte 0xc0
.L_4218e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4218f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421900:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_421908:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_421910:

            test RDI,RDI
            je .L_421938

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42192e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42192e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421938:

            xor EAX,EAX
            ret 
.L_42193b:

            nop
            nop
            nop
            nop
            nop
.L_421940:

            jmp .L_421910
.L_421942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421950:

            push RBP
            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_422343]
            sub RSP,40
.L_421960:

            mov RBP,QWORD PTR [RDI+32]
            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_4043f0

            pxor XMM4,XMM4
            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM4,XMM1
            movsd QWORD PTR [RBP],XMM1
            jae .L_421aa8

            movsd XMM0,QWORD PTR [RBX+336]
            movq XMM3,QWORD PTR [RIP+.L_4223d0]
            movapd XMM5,XMM0
            andpd XMM5,XMM3
            movapd XMM2,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_4223f0]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4223f8]
            ucomisd XMM3,XMM2
            ja .L_421a50

            ucomisd XMM3,XMM5
            jbe .L_421a68

            mov DWORD PTR [RBP+96],2
.L_4219d9:

            divsd XMM1,QWORD PTR [RBX+128]
            lea RAX,QWORD PTR [RIP+.L_421d90]
            movsd XMM2,QWORD PTR [RIP+.L_422400]
            movapd XMM6,XMM2
            movapd XMM3,XMM2
            movapd XMM0,XMM1
            divsd XMM6,XMM1
            movsd QWORD PTR [RBP+40],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            divsd XMM3,XMM0
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+56],XMM6
            mulsd XMM0,XMM6
            movsd QWORD PTR [RBP+32],XMM3
            movsd QWORD PTR [RBP+48],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_421ad0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,40
.L_421a47:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421a50:

            xor EAX,EAX
            ucomisd XMM4,XMM0
            seta AL
            mov DWORD PTR [RBP+96],EAX
            jmp .L_4219d9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421a68:

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mov DWORD PTR [RBP+96],3
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4219d9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421aa8:

            mov RDI,RBX
            mov ESI,4294967266
            call .L_415fe0

            add RSP,40
.L_421ab9:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_421910
.L_421ac3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421ad0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_421adb:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            mov RAX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RAX+96]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RAX+32]
            cmp EDX,1
            je .L_421c80

            jle .L_421cc0

            cmp EDX,2
            je .L_421c40

            cmp EDX,3
            jne .L_421d20

            movsd XMM7,QWORD PTR [RAX+16]
            movsd XMM6,QWORD PTR [RAX+8]
            movapd XMM1,XMM7
            movapd XMM0,XMM6
            mulsd XMM1,XMM2
            mulsd XMM0,XMM4
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            ucomisd XMM5,XMM1
            ja .L_421c96

            movsd XMM0,QWORD PTR [RAX+24]
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RAX+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+24]
.L_421bb3:

            mulsd XMM2,XMM6
            mulsd XMM7,XMM4
            mulsd XMM3,XMM2
            subsd XMM7,XMM3
            mulsd XMM1,XMM7
.L_421bc7:

            mov EDX,DWORD PTR [RAX+100]
            test EDX,EDX
            je .L_421cb3

            movsd XMM2,QWORD PTR [RAX+64]
            movsd XMM6,QWORD PTR [RAX+72]
            movapd XMM5,XMM2
            movsd XMM7,QWORD PTR [RAX+88]
            movapd XMM3,XMM6
            mulsd XMM5,XMM1
            mulsd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_422400]
            mulsd XMM1,XMM6
            mulsd XMM0,XMM2
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RAX+80]
            subsd XMM0,XMM1
            mulsd XMM3,XMM5
            mulsd XMM0,XMM7
            mulsd XMM3,QWORD PTR [RAX+56]
            add RSP,48
.L_421c1f:

            pop RBX
            pop RBP
            pop R12
            addsd XMM3,XMM7
            divsd XMM4,XMM3
            mulsd XMM5,XMM4
            mulsd XMM0,XMM4
            movapd XMM1,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c40:

            mulsd XMM3,XMM2
            ucomisd XMM5,XMM3
            movapd XMM1,XMM3
            ja .L_421c96

            movsd XMM0,QWORD PTR [RAX+24]
            movsd XMM1,QWORD PTR [RAX+40]
            subsd XMM0,XMM3
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM2,XMM1
            mulsd XMM0,XMM2
.L_421c6e:

            mulsd XMM1,XMM4
            jmp .L_421bc7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c80:

            movapd XMM1,XMM4
            xorpd XMM1,XMMWORD PTR [RIP+.L_4223e0]
            ucomisd XMM5,XMM1
            jbe .L_421d30
.L_421c96:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
.L_421cb3:

            add RSP,48
.L_421cb7:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421cc0:

            test EDX,EDX
            movapd XMM1,XMM4
            jne .L_421d20
.L_421cc8:

            ucomisd XMM5,XMM1
            ja .L_421c96

            movsd XMM0,QWORD PTR [RAX+24]
            cmp EDX,1
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RAX+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            je .L_421d09

            jg .L_421d60

            test EDX,EDX
            jne .L_421bc7

            movapd XMM6,XMM3
            xorpd XMM6,XMMWORD PTR [RIP+.L_4223e0]
.L_421d09:

            mulsd XMM2,XMM6
            mulsd XMM1,XMM2
            jmp .L_421bc7
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421d20:

            pxor XMM1,XMM1
            jmp .L_421cc8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421d30:

            addsd XMM4,QWORD PTR [RAX+24]
            movsd XMM1,QWORD PTR [RAX+40]
            movapd XMM0,XMM2
            mulsd XMM2,XMM6
            divsd XMM1,XMM4
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_421bc7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421d60:

            cmp EDX,2
            je .L_421c6e

            cmp EDX,3
            jne .L_421bc7

            movsd XMM6,QWORD PTR [RAX+8]
            movsd XMM7,QWORD PTR [RAX+16]
            jmp .L_421bb3
.L_421d81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421d90:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,56
.L_421d9d:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM2,XMM1
            mov EAX,DWORD PTR [RBX+100]
            test EAX,EAX
            je .L_421e15

            movsd XMM0,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM0,XMM2
            movapd XMM6,XMM1
            mulsd XMM2,XMM1
            mulsd XMM3,XMM1
            movsd XMM4,QWORD PTR [RBX+72]
            subsd XMM6,XMM0
            movsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM2,QWORD PTR [RBX+88]
            movapd XMM5,XMM3
            movapd XMM3,XMM1
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_422400]
            divsd XMM6,XMM0
            movapd XMM0,XMM4
            mulsd XMM5,XMM6
            mulsd XMM2,XMM6
            mulsd XMM3,XMM5
            mulsd XMM0,XMM2
            mulsd XMM4,XMM5
            mulsd XMM2,XMM1
            addsd XMM3,XMM0
            subsd XMM2,XMM4
.L_421e15:

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call hypot@PLT

            movapd XMM5,XMM0
            mulsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_422400]
            pxor XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            movapd XMM0,XMM7
            ja .L_421fa0

            movsd XMM6,QWORD PTR [RBX+24]
            sqrtsd XMM7,XMM7
            ja .L_4220de
.L_421e72:

            movsd XMM4,QWORD PTR [RBX+40]
            subsd XMM6,XMM7
            movapd XMM7,XMM5
            movapd XMM0,XMM4
            divsd XMM7,XMM4
            divsd XMM0,XMM5
            addsd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_422400]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            mulsd XMM0,XMM6
            subsd XMM7,XMM0
            movapd XMM0,XMM7
            sqrtsd XMM7,XMM7
            ucomisd XMM1,XMM0
            ja .L_422094
.L_421eb9:

            movsd XMM0,QWORD PTR [RIP+.L_4223f8]
            ucomisd XMM0,XMM5
            jb .L_421ee0

            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RBP+336]
.L_421ed3:

            add RSP,56
.L_421ed7:

            movapd XMM1,XMM4
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_421ee0:

            mov EAX,DWORD PTR [RBX+96]
            cmp EAX,1
            je .L_422000

            jle .L_421fc8

            cmp EAX,2
            je .L_422040

            cmp EAX,3
            jne .L_422030

            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+32],XMM3
            movsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM0,XMM2
            movapd XMM2,XMM7
            movsd QWORD PTR [RSP+8],XMM7
            mulsd XMM2,QWORD PTR [RBX+8]
            divsd XMM0,XMM5
            addsd XMM0,XMM2
            call asin@PLT

            movsd QWORD PTR [RSP],XMM0
            call sin@PLT

            mulsd XMM0,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM6,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM7,XMM0
            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM7
            mulsd XMM3,XMM6
            mulsd XMM2,XMM5
.L_421f80:

            movapd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP]
            jmp .L_421ed3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421fa0:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_421fbb:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421fc8:

            test EAX,EAX
            jne .L_422030

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            xorpd XMM2,XMMWORD PTR [RIP+.L_4223e0]
            jmp .L_421f80
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422000:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            xorpd XMM4,XMMWORD PTR [RIP+.L_4223e0]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_421f80
.L_422030:

            pxor XMM4,XMM4
            jmp .L_421f80
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422040:

            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM2
            divsd XMM0,XMM5
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,XMM6
            movapd XMM2,XMM5
            jmp .L_421f80
.L_422094:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_421eb9
.L_4220de:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_421e72
.L_42212e:

            nop
            nop
.L_422130:

            push RBX
            mov ESI,104
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_422160

            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            mov DWORD PTR [RAX+100],0
            pop RBX
            jmp .L_421950
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422160:

            mov RDI,RBX
            pop RBX
            jmp .L_421910
.L_422169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422170:

            test RDI,RDI
            je .L_422180

            jmp .L_422130
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422180:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4221ae

            lea RDX,QWORD PTR [RIP+.L_421940]
            lea RCX,QWORD PTR [RIP+.L_4223a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4221ae:

            add RSP,8
            ret 
.L_4221b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4221c0:

            push R13
            push R12
            mov ESI,104
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,56
.L_4221d7:

            call .L_403c70

            test RAX,RAX
            je .L_4222c0

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_422346]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_422408]
            call sincos@PLT

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_42234c]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            mov RDI,R12
            mov RSI,R13
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_422408]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RSP+40]
            mov DWORD PTR [RBX+100],1
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+64],XMM3
            movsd QWORD PTR [RBX+72],XMM0
            movsd QWORD PTR [RBX+88],XMM2
            movsd QWORD PTR [RBX+80],XMM1
            add RSP,56
.L_4222ac:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_421950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4222c0:

            add RSP,56
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_421910
.L_4222d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4222e0:

            test RDI,RDI
            je .L_4222f0

            jmp .L_4221c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4222f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42231e

            lea RDX,QWORD PTR [RIP+.L_421940]
            lea RCX,QWORD PTR [RIP+.L_422360]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42231e:

            add RSP,8
            ret 
.L_422323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422330:

            xor EAX,EAX
            ret 
.L_422333:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422340:

            xor EAX,EAX
            ret 
.L_422343:
          .string "dh"
.L_422346:
          .string "dtilt"
.L_42234c:
          .string "dazi"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422360:
          .string "Tilted perspective\n\tAzi, Sph\n\ttilt= azi= h="
          .zero 20
.L_4223a0:
          .string "Near-sided perspective\n\tAzi, Sph\n\th="
# WARNING: found overlapping blocks at address 22184
# WARNING: found overlapping blocks at address 22186
# WARNING: found overlapping blocks at address 2218b
# WARNING: found overlapping blocks at address 22190
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4223d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4223e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4223f0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4223f8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_422400:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_422408:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_422410:

            test RDI,RDI
            je .L_422420

            jmp .L_403ca0
          .byte 0x66
.L_42241b:

            nop
            nop
            nop
            nop
            nop
.L_422420:

            ret 
.L_422422:
          .byte 0xf
          .byte 0x1f
.L_422424:

            add BYTE PTR [RSI+46],SPL
.L_422428:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422430:

            sub RSP,8
.L_422434:

            lea RAX,QWORD PTR [RIP+.L_65f408]
            subsd XMM1,QWORD PTR [RDI+336]
            movapd XMM2,XMM0
            lea RDX,QWORD PTR [RAX-72]
            movsd XMM0,QWORD PTR [RIP+.L_65f408]
            mulsd XMM1,QWORD PTR [RIP+.L_422788]
            nop
            nop
            nop
            nop
            nop
.L_422460:

            mulsd XMM0,XMM1
            sub RAX,8
            cmp RAX,RDX
            addsd XMM0,QWORD PTR [RAX]
            jne .L_422460

            mulsd XMM0,XMM1
            lea RDI,QWORD PTR [RIP+.L_65f480]
            mov ESI,5
            movapd XMM1,XMM2
            call .L_44d590

            movapd XMM2,XMM0
            add RSP,8
.L_422492:

            movapd XMM0,XMM1
            movapd XMM1,XMM2
            ret 
.L_42249b:

            nop
            nop
            nop
            nop
            nop
.L_4224a0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RBP,QWORD PTR [RIP+.L_65f480]
            movapd XMM4,XMM0
            mov EBX,20
            sub RSP,72
.L_4224bd:

            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            jmp .L_4224f1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4224e8:

            sub EBX,1
            je .L_422618
.L_4224f1:

            movapd XMM0,XMM3
            movapd XMM1,XMM4
            mov RDX,R12
            mov ESI,5
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call .L_44d630

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RSP+24]
            subsd XMM1,QWORD PTR [RSP+16]
            movapd XMM2,XMM6
            movapd XMM5,XMM7
            mulsd XMM2,XMM6
            mulsd XMM5,XMM7
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            movapd XMM8,XMM1
            mulsd XMM1,XMM7
            addsd XMM5,XMM2
            movapd XMM2,XMM0
            mulsd XMM0,XMM6
            mulsd XMM8,XMM6
            mulsd XMM2,XMM7
            movsd XMM6,QWORD PTR [RIP+.L_422798]
            subsd XMM1,XMM0
            addsd XMM2,XMM8
            xorpd XMM1,XMMWORD PTR [RIP+.L_4227e0]
            xorpd XMM2,XMMWORD PTR [RIP+.L_4227e0]
            movapd XMM0,XMM1
            divsd XMM2,XMM5
            divsd XMM0,XMM5
            addsd XMM3,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_4227f0]
            addsd XMM4,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_4227f0]
            addsd XMM0,XMM2
            ucomisd XMM6,XMM0
            jb .L_4224e8

            lea RAX,QWORD PTR [RIP+.L_65f460]
            movsd XMM1,QWORD PTR [RIP+.L_65f460]
            lea RDX,QWORD PTR [RAX-64]
            nop
            nop
            nop
            nop
            nop
.L_4225d0:

            mulsd XMM1,XMM3
            sub RAX,8
            cmp RAX,RDX
            addsd XMM1,QWORD PTR [RAX]
            jne .L_4225d0

            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RIP+.L_4227a0]
            addsd XMM1,QWORD PTR [R13+336]
.L_4225f6:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM4
            jne .L_422626

            add RSP,72
.L_42260e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422618:

            movsd XMM4,QWORD PTR [RIP+.L_422790]
            movapd XMM1,XMM4
            jmp .L_4225f6
.L_422626:

            call __stack_chk_fail@PLT
.L_42262b:

            nop
            nop
            nop
            nop
            nop
.L_422630:

            test RDI,RDI
            je .L_4226a8

            mov RAX,QWORD PTR [RIP+.L_4227a8]
            mov QWORD PTR [RDI+128],RAX
            mov RAX,QWORD PTR [RIP+.L_4227b0]
            mov QWORD PTR [RDI+144],RAX
            mov RAX,QWORD PTR [RIP+.L_4227b8]
            mov QWORD PTR [RDI+328],RAX
            mov RAX,QWORD PTR [RIP+.L_4227c0]
            mov QWORD PTR [RDI+336],RAX
            mov RAX,QWORD PTR [RIP+.L_4227c8]
            mov QWORD PTR [RDI+344],RAX
            mov RAX,QWORD PTR [RIP+.L_4227d0]
            mov QWORD PTR [RDI+352],RAX
            lea RAX,QWORD PTR [RIP+.L_4224a0]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_422430]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4226a8:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4226d6

            lea RDX,QWORD PTR [RIP+.L_422410]
            lea RCX,QWORD PTR [RIP+.L_422760]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4226d6:

            add RSP,8
            ret 
.L_4226db:

            nop
            nop
            nop
            nop
            nop
.L_4226e0:

            mov RDX,QWORD PTR [RIP+.L_4227a8]
            mov RCX,QWORD PTR [RIP+.L_4227b0]
            mov RAX,RDI
            mov RSI,QWORD PTR [RIP+.L_4227b8]
            mov QWORD PTR [RDI+128],RDX
            mov QWORD PTR [RDI+144],RCX
            mov QWORD PTR [RDI+328],RSI
            mov RDI,QWORD PTR [RIP+.L_4227c0]
            lea RSI,QWORD PTR [RIP+.L_4224a0]
            mov RDX,QWORD PTR [RIP+.L_4227c8]
            mov RCX,QWORD PTR [RIP+.L_4227d0]
            mov QWORD PTR [RAX+48],RSI
            mov QWORD PTR [RAX+336],RDI
            lea RDI,QWORD PTR [RIP+.L_422430]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+352],RCX
            mov QWORD PTR [RAX+40],RDI
            ret 
.L_42274e:

            nop
            nop
.L_422750:

            xor EAX,EAX
            ret 
.L_422753:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422760:
          .string "New Zealand Map Grid\n\tfixed Earth"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422788:
          .byte 0xb2
          .byte 0xc3
          .byte 0x9b
          .byte 0xa0
          .byte 0x4d
          .byte 0x80
          .byte 0x0
          .byte 0x40
.L_422790:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_422798:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4227a0:
          .byte 0x83
          .byte 0x34
          .byte 0x41
          .byte 0xf6
          .byte 0x2f
          .byte 0x7
          .byte 0xdf
          .byte 0x3f
.L_4227a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x54
          .byte 0x58
          .byte 0x41
.L_4227b0:
          .byte 0x37
          .byte 0x5
          .byte 0xec
          .byte 0x66
          .byte 0xe6
          .byte 0xa
          .byte 0x85
          .byte 0x3e
.L_4227b8:
          .byte 0x7f
          .byte 0xa8
          .byte 0x63
          .byte 0x77
          .byte 0xc5
          .byte 0x27
          .byte 0x8
          .byte 0x40
.L_4227c0:
          .byte 0x71
          .byte 0xd9
          .byte 0xf9
          .byte 0x7f
          .byte 0x12
          .byte 0xe6
          .byte 0xe6
          .byte 0xbf
.L_4227c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x26
          .byte 0x43
          .byte 0x41
.L_4227d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xfb
          .byte 0xf9
          .byte 0x56
          .byte 0x41
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4227e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4227f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422800:

            test RDI,RDI
            je .L_422828

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42281e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42281e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422828:

            xor EAX,EAX
            ret 
.L_42282b:

            nop
            nop
            nop
            nop
            nop
.L_422830:

            jmp .L_422800
.L_422832:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422840:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_42284b:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+40]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            mov RDX,QWORD PTR [R12+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RDX+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM3
            cmp EAX,1
            je .L_42295c

            jle .L_422950

            cmp EAX,2
            je .L_422910

            cmp EAX,3
            jne .L_4229a0

            movsd XMM2,QWORD PTR [RDX+8]
            movsd XMM5,QWORD PTR [RDX]
            movapd XMM1,XMM2
            movapd XMM6,XMM5
            mulsd XMM1,XMM0
            mulsd XMM6,XMM4
            mulsd XMM1,XMM3
            addsd XMM1,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_422e48]
            ucomisd XMM6,XMM1
            ja .L_422930

            mulsd XMM5,XMM0
            mulsd XMM2,XMM4
            mulsd XMM3,XMM5
            movapd XMM1,XMM2
            subsd XMM1,XMM3
            jmp .L_42298a
          .byte 0x90
.L_422910:

            mulsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_422e48]
            ucomisd XMM1,XMM3
            ja .L_422930

            movapd XMM1,XMM4
            jmp .L_42298a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422930:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,48
.L_422945:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_422950:

            test EAX,EAX
            jne .L_4229a0

            xorpd XMM1,XMMWORD PTR [RIP+.L_422e70]
.L_42295c:

            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM2,QWORD PTR [R12+336]
            andpd XMM2,XMMWORD PTR [RIP+.L_422e80]
            subsd XMM2,QWORD PTR [RIP+.L_422e50]
            ucomisd XMM2,QWORD PTR [RIP+.L_422e58]
            ja .L_422930

            mulsd XMM1,XMM0
.L_42298a:

            mulsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_422994:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4229a0:

            pxor XMM1,XMM1
            jmp .L_42298a
.L_4229a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4229b0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_4229b9:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            call hypot@PLT

            movsd XMM1,QWORD PTR [RIP+.L_422e60]
            movapd XMM3,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+16]
            jbe .L_422b38

            subsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_422e50]
            ucomisd XMM0,XMM6
            ja .L_422b18

            pxor XMM2,XMM2
            movapd XMM0,XMM1
            pxor XMM7,XMM7
.L_422a1e:

            ucomisd XMM6,XMM3
            jb .L_422a40

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RBX+336]
.L_422a30:

            add RSP,88
.L_422a34:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422a40:

            mov EAX,DWORD PTR [RBP+16]
            cmp EAX,1
            je .L_422c30

            jle .L_422bd0

            cmp EAX,2
            je .L_422c68

            cmp EAX,3
            jne .L_422c58

            mulsd XMM4,XMM0
            movsd XMM6,QWORD PTR [RBP+8]
            movsd XMM8,QWORD PTR [RBP]
            mulsd XMM0,XMM6
            mulsd XMM4,XMM6
            movapd XMM9,XMM8
            mulsd XMM9,XMM7
            mulsd XMM5,XMM0
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            addsd XMM4,XMM9
            mulsd XMM8,XMM4
            subsd XMM7,XMM8
            mulsd XMM7,XMM3
            movsd QWORD PTR [RSP+24],XMM7
.L_422aac:

            movapd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_422e80]
            ucomisd XMM0,XMM1
            jb .L_422ca0

            ucomisd XMM2,XMM4
            ja .L_422c90

            movsd XMM3,QWORD PTR [RIP+.L_422e58]
.L_422ad4:

            movsd XMM7,QWORD PTR [RSP+24]
            ucomisd XMM7,XMM2
            jp .L_422af1

            jne .L_422af1

            mov EAX,DWORD PTR [RBP+16]
            sub EAX,2
            cmp EAX,1
            jbe .L_422c00
.L_422af1:

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_422a30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422b18:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,88
.L_422b2d:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422b38:

            mulsd XMM0,XMM0
            movapd XMM8,XMM1
            pxor XMM2,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_422e50]
            subsd XMM8,XMM0
            movapd XMM0,XMM3
            ucomisd XMM2,XMM8
            sqrtsd XMM7,XMM8
            jbe .L_422a1e

            movapd XMM0,XMM8
            movsd QWORD PTR [RSP+72],XMM1
            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_422a1e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422bd0:

            test EAX,EAX
            jne .L_422c58

            xorpd XMM4,XMMWORD PTR [RIP+.L_422e70]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_422ad4
.L_422c00:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,XMM2
            jp .L_422c16

            pxor XMM0,XMM0
            je .L_422a30
.L_422c16:

            ucomisd XMM2,QWORD PTR [RSP+32]
            ja .L_422cc0

            movsd XMM0,QWORD PTR [RIP+.L_422e58]
            jmp .L_422a30
          .byte 0x90
.L_422c30:

            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_422e70]
            jmp .L_422ad4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422c58:

            pxor XMM3,XMM3
            jmp .L_422ad4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c68:

            mulsd XMM4,XMM0
            mulsd XMM5,XMM0
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP+24],XMM3
            jmp .L_422aac
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c90:

            movsd XMM3,QWORD PTR [RIP+.L_422e68]
            jmp .L_422ad4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422ca0:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_422ad4
          .byte 0x66
          .byte 0x90
.L_422cc0:

            movsd XMM0,QWORD PTR [RIP+.L_422e68]
            jmp .L_422a30
.L_422ccd:

            nop
            nop
            nop
.L_422cd0:

            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_422ce2:

            call .L_403c70

            test RAX,RAX
            je .L_422db8

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+32],RAX
            movq XMM2,QWORD PTR [RIP+.L_422e80]
            movapd XMM3,XMM0
            andpd XMM3,XMM2
            movapd XMM1,XMM3
            subsd XMM1,QWORD PTR [RIP+.L_422e58]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_422e50]
            ucomisd XMM2,XMM1
            jae .L_422d90

            ucomisd XMM3,XMM2
            jbe .L_422da8

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RAX+8],XMM0
            mov DWORD PTR [RAX+16],3
            movsd QWORD PTR [RAX],XMM1
.L_422d65:

            lea RAX,QWORD PTR [RIP+.L_4229b0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_422840]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_422d8a:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_422d90:

            pxor XMM1,XMM1
            xor EDX,EDX
            ucomisd XMM1,XMM0
            seta DL
            mov DWORD PTR [RAX+16],EDX
            jmp .L_422d65
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422da8:

            mov DWORD PTR [RAX+16],2
            jmp .L_422d65
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422db8:

            add RSP,32
            mov RDI,RBX
            pop RBX
            jmp .L_422800
.L_422dc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422dd0:

            test RDI,RDI
            je .L_422de0

            jmp .L_422cd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422de0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_422e0e

            lea RDX,QWORD PTR [RIP+.L_422830]
            lea RCX,QWORD PTR [RIP+.L_422e30]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_422e0e:

            add RSP,8
            ret 
.L_422e13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422e20:

            xor EAX,EAX
            ret 
.L_422e23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422e30:
          .string "Orthographic\n\tAzi, Sph."
# WARNING: found overlapping blocks at address 22c03
# WARNING: found overlapping blocks at address 22c0a
.L_422e48:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0xbd
.L_422e50:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_422e58:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_422e60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_422e68:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_422e70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422e80:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422e90:

            test RDI,RDI
            je .L_422eb0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403ca0
.L_422ea2:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422eb0:

            xor EAX,EAX
            ret 
.L_422eb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422ec0:

            jmp .L_422e90
.L_422ec2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422ed0:

            sub RSP,40
.L_422ed4:

            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4241c8]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4241d0]
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4241d8]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM4,XMM1
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            subsd XMM4,XMM3
            addsd XMM3,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4241d0]
            mulsd XMM1,XMM2
            movapd XMM0,XMM4
            divsd XMM0,XMM3
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
.L_422f42:

            ret 
.L_422f43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422f50:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,88
.L_422f5d:

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+48],XMM0
            call sin@PLT

            mov EAX,DWORD PTR [RBX+32]
            movapd XMM5,XMM0
            pxor XMM1,XMM1
            pxor XMM0,XMM0
            lea EDX,DWORD PTR [RAX-2]
            movsd XMM4,QWORD PTR [RSP+16]
            cmp EDX,1
            jbe .L_4230f8

            cmp EAX,1
            je .L_42315b
.L_422fd5:

            jle .L_423080

            cmp EAX,2
            je .L_423018

            cmp EAX,3
            jne .L_423170

            mulsd XMM4,XMM0
            pxor XMM3,XMM3
            addsd XMM4,QWORD PTR [RIP+.L_4241d8]
            ucomisd XMM4,XMM3
            jp .L_423005

            je .L_423180
.L_423005:

            movsd XMM3,QWORD PTR [RBX+24]
            divsd XMM3,XMM4
            mulsd XMM1,XMM3
            jmp .L_423063
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423018:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM2,QWORD PTR [RBX+16]
            movapd XMM5,XMM6
            mulsd XMM6,XMM0
            movapd XMM3,XMM2
            mulsd XMM5,XMM1
            mulsd XMM3,XMM0
            mulsd XMM1,XMM2
            addsd XMM5,QWORD PTR [RIP+.L_4241d8]
            mulsd XMM3,XMM4
            mulsd XMM4,XMM6
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RBX+24]
            subsd XMM1,XMM4
            mulsd XMM5,XMM2
            divsd XMM3,XMM5
            mulsd XMM1,XMM3
.L_423063:

            mulsd XMM0,XMM3
.L_423067:

            mulsd XMM0,QWORD PTR [RSP+32]
            add RSP,88
.L_423071:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423080:

            test EAX,EAX
            jne .L_423170

            movq XMM3,QWORD PTR [RIP+.L_424230]
            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM4,XMM3
            xorpd XMM7,XMM3
            xorpd XMM5,XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+48],XMM7
.L_4230ae:

            movsd XMM2,QWORD PTR [RBX+24]
            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM2,QWORD PTR [RBP+168]
            movaps XMMWORD PTR [RSP+16],XMM3
            call .L_44d4b0

            mulsd XMM0,QWORD PTR [RSP+8]
            movapd XMM3,XMMWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+40]
            xorpd XMM3,XMM0
            mulsd XMM1,XMM3
            jmp .L_423067
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4230f8:

            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM2,QWORD PTR [RBP+168]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM5
            call .L_422ed0

            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            subsd XMM0,QWORD PTR [RIP+.L_4241c8]
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+16]
            cmp EAX,1
            movsd XMM4,QWORD PTR [RSP+56]
            jne .L_422fd5
.L_42315b:

            movq XMM3,QWORD PTR [RIP+.L_424230]
            jmp .L_4230ae
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423170:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_423067
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423180:

            movsd XMM1,QWORD PTR [RIP+.L_4241e8]
            jmp .L_423063
.L_42318d:

            nop
            nop
            nop
.L_423190:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_423199:

            mov RBP,QWORD PTR [RDI+32]
            movsd XMM4,QWORD PTR [RDI+336]
            movq XMM3,QWORD PTR [RIP+.L_424240]
            movapd XMM1,XMM4
            movsd XMM8,QWORD PTR [RIP+.L_4241c8]
            movsd XMM6,QWORD PTR [RIP+.L_4241f0]
            andpd XMM1,XMM3
            movapd XMM0,XMM1
            subsd XMM0,XMM8
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            jbe .L_4232c8

            pxor XMM5,XMM5
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RBP]
            ucomisd XMM5,XMM4
            movapd XMM7,XMM0
            andpd XMM7,XMM3
            setbe AL
            ucomisd XMM5,QWORD PTR [RDI+176]
            mov DWORD PTR [RBP+32],EAX
            movsd QWORD PTR [RBP],XMM7
            jp .L_42320f

            je .L_423301
.L_42320f:

            movapd XMM4,XMM7
            movsd XMM2,QWORD PTR [RBX+168]
            subsd XMM4,XMM8
            andpd XMM3,XMM4
            ucomisd XMM6,XMM3
            jbe .L_4234d0

            movsd XMM0,QWORD PTR [RBX+360]
            movsd QWORD PTR [RSP+16],XMM5
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4241d8]
            addsd XMM0,XMM2
            movapd XMM1,XMM0
            call pow@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4241d8]
            movsd QWORD PTR [RSP+8],XMM0
            subsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_423570
.L_423297:

            movsd XMM0,QWORD PTR [RSP]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM0
.L_4232a5:

            lea RAX,QWORD PTR [RIP+.L_423b20]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_422f50]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_4232bf:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4232c8:

            xor EAX,EAX
            pxor XMM5,XMM5
            ucomisd XMM1,XMM6
            movsd XMM0,QWORD PTR [RBP]
            movapd XMM7,XMM0
            setbe AL
            add EAX,2
            andpd XMM7,XMM3
            ucomisd XMM5,QWORD PTR [RDI+176]
            mov DWORD PTR [RBP+32],EAX
            movsd QWORD PTR [RBP],XMM7
            jp .L_423398

            jne .L_423398
.L_423301:

            cmp EAX,2
            je .L_423498

            cmp EAX,3
            jne .L_423340
.L_42330f:

            movsd XMM0,QWORD PTR [RBX+360]
            addsd XMM0,XMM0
.L_42331b:

            lea RAX,QWORD PTR [RIP+.L_4237d0]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4235a0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_42333a:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_423340:

            movapd XMM1,XMM7
            movsd QWORD PTR [RSP],XMM7
            subsd XMM1,XMM8
            andpd XMM3,XMM1
            ucomisd XMM3,XMM6
            jb .L_42330f

            call cos@PLT

            movsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM7,QWORD PTR [RIP+.L_4241d0]
            movsd XMM0,QWORD PTR [RIP+.L_4241f8]
            subsd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            jmp .L_42331b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423398:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM8
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            call .L_422ed0

            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM8,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RBX+168]
            subsd XMM0,XMM8
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM1,QWORD PTR [RBX+360]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,XMM1
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM3,XMM3
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4241d8]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM2
            ja .L_423566
.L_423454:

            movsd XMM0,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+8],XMM2
            movsd QWORD PTR [RBP+24],XMM0
            jmp .L_4232a5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423498:

            movapd XMM0,XMM4
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            jmp .L_42330f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4234d0:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM7
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM7
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM7
            call .L_44d4b0

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            divsd XMM4,XMM0
            mulsd XMM3,QWORD PTR [RBX+168]
            movsd XMM1,QWORD PTR [RIP+.L_4241d8]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+24],XMM4
            mulsd XMM3,XMM3
            subsd XMM1,XMM3
            ucomisd XMM5,XMM1
            sqrtsd XMM2,XMM1
            ja .L_423586
.L_423558:

            divsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            jmp .L_4232a5
.L_423566:

            call sqrt@PLT

            jmp .L_423454
.L_423570:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_423297
.L_423586:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBP+24]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_423558
.L_4235a0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,48
.L_4235ab:

            lea RBX,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov RDI,RBX
            movsd XMM2,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+24],XMM6
            call sincos@PLT

            mov RBX,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movapd XMM3,XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_423778

            jle .L_4236f0

            cmp EAX,2
            je .L_423680

            cmp EAX,3
            jne .L_423760

            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RIP+.L_4241d8]
            movsd XMM0,QWORD PTR [RIP+.L_4241f0]
            addsd XMM3,XMM2
            ucomisd XMM0,XMM3
            jb .L_423790
.L_423656:

            mov RDI,R12
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,48
.L_423673:

            pop RBX
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBP
            pop R12
            ret 
.L_423680:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RBX+16]
            movapd XMM3,XMM6
            movsd XMM0,QWORD PTR [RIP+.L_4241f0]
            movapd XMM1,XMM7
            mulsd XMM3,XMM5
            mulsd XMM1,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_4241d8]
            mulsd XMM1,XMM2
            addsd XMM3,XMM1
            ucomisd XMM0,XMM3
            jae .L_423656

            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM0,XMM4
            mulsd XMM4,XMM6
            divsd XMM1,XMM3
            mulsd XMM5,XMM7
            mulsd XMM2,XMM4
            mulsd XMM0,XMM1
            subsd XMM5,XMM2
            mulsd XMM0,QWORD PTR [RSP+24]
.L_4236df:

            add RSP,48
.L_4236e3:

            mulsd XMM1,XMM5
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4236f0:

            test EAX,EAX
            jne .L_423760
.L_4236f4:

            movapd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_424200]
            subsd XMM0,QWORD PTR [RIP+.L_4241c8]
            andpd XMM0,XMMWORD PTR [RIP+.L_424240]
            ucomisd XMM2,XMM0
            ja .L_4237b0

            movsd XMM0,QWORD PTR [RIP+.L_4241d0]
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_4241f8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,48
.L_423752:

            pop RBX
            pop RBP
            mulsd XMM0,XMM1
            mulsd XMM1,XMM3
            pop R12
            ret 
          .byte 0x90
.L_423760:

            add RSP,48
            pxor XMM1,XMM1
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423778:

            movq XMM0,QWORD PTR [RIP+.L_424230]
            xorpd XMM3,XMM0
            xorpd XMM1,XMM0
            jmp .L_4236f4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423790:

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM2,XMM3
            mulsd XMM4,XMM2
            movapd XMM1,XMM2
            mulsd XMM0,XMM4
            jmp .L_4236df
.L_4237b0:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,48
.L_4237c5:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            ret 
.L_4237ce:

            nop
            nop
.L_4237d0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_4237d9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call hypot@PLT

            movsd QWORD PTR [RSP],XMM0
            divsd XMM0,QWORD PTR [RBX+24]
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP]
            cmp EAX,1
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            je .L_423a20

            movsd XMM5,QWORD PTR [RSP+24]
            jle .L_4239a0

            cmp EAX,2
            je .L_4238c8

            cmp EAX,3
            jne .L_423a08

            movsd XMM0,QWORD PTR [RIP+.L_4241f0]
            ucomisd XMM0,XMM1
            jb .L_423a70

            pxor XMM0,XMM0
            pxor XMM5,XMM5
.L_423877:

            ucomisd XMM2,XMM0
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_42389c

            ucomisd XMM4,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_4239fa
.L_42389c:

            mulsd XMM6,XMM2
            movsd QWORD PTR [RSP],XMM5
            mulsd XMM1,XMM4
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
            add RSP,72
.L_4238bb:

            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4238c8:

            movsd XMM0,QWORD PTR [RIP+.L_4241f0]
            mov RBX,QWORD PTR [RBP+32]
            ucomisd XMM0,XMM1
            movsd XMM3,QWORD PTR [RBX+8]
            jb .L_423ac0

            movsd XMM5,QWORD PTR [RBP+336]
.L_4238eb:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov EDX,1
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            subsd XMM4,XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP+40]
            ucomisd XMM4,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_42396b

            ucomisd XMM2,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_4239fa
.L_42396b:

            mulsd XMM6,XMM2
            movsd QWORD PTR [RSP],XMM5
            movsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM1,XMM4
            mulsd XMM0,XMM6
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
            add RSP,72
.L_42398f:

            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4239a0:

            test EAX,EAX
            jne .L_423a08

            movsd XMM4,QWORD PTR [RIP+.L_4241f0]
            ucomisd XMM4,XMM1
            jb .L_423a60
.L_4239b6:

            movsd XMM5,QWORD PTR [RBP+336]
.L_4239be:

            pxor XMM0,XMM0
            mov EDX,1
            ucomisd XMM3,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_4239e3

            ucomisd XMM2,XMM0
            setp AL
            cmove EDX,EAX
            test DL,DL
            je .L_4239fa
.L_4239e3:

            movapd XMM1,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM5
            call atan2@PLT

            movsd XMM5,QWORD PTR [RSP]
.L_4239fa:

            add RSP,72
.L_4239fe:

            movapd XMM1,XMM5
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423a08:

            pxor XMM5,XMM5
            add RSP,72
            pxor XMM0,XMM0
            pop RBX
            movapd XMM1,XMM5
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423a20:

            movsd XMM4,QWORD PTR [RIP+.L_4241f0]
            xorpd XMM3,XMMWORD PTR [RIP+.L_424230]
            ucomisd XMM4,XMM1
            jae .L_4239b6
.L_423a3a:

            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_4239be
          .byte 0x66
          .byte 0x90
.L_423a60:

            xorpd XMM0,XMMWORD PTR [RIP+.L_424230]
            jmp .L_423a3a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423a70:

            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM5
            divsd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM5,XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_423877
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423ac0:

            mulsd XMM5,XMM6
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM3,XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM5,QWORD PTR [RBX+16]
            movapd XMM0,XMM3
            divsd XMM5,XMM1
            addsd XMM0,XMM5
            call asin@PLT

            mov RBX,QWORD PTR [RBP+32]
            movapd XMM5,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_4238eb
.L_423b1e:

            nop
            nop
.L_423b20:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,80
.L_423b2b:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+40],XMM1
            call hypot@PLT

            mov EAX,DWORD PTR [R12+32]
            movapd XMM2,XMM0
            cmp EAX,1
            je .L_423e90

            jg .L_423c80

            test EAX,EAX
            jne .L_423e60

            movq XMM0,QWORD PTR [RIP+.L_424230]
.L_423b74:

            xorpd XMM2,XMM0
            divsd XMM2,QWORD PTR [R12+24]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_4241c8]
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd XMM1,QWORD PTR [RBP+168]
            movapd XMM7,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM7,QWORD PTR [RIP+.L_424210]
            movsd QWORD PTR [RSP+24],XMM7
            call sin@PLT

            movsd XMM7,QWORD PTR [RIP+.L_424208]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM7
.L_423be0:

            mov EBX,8
.L_423be5:

            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_4241d8]
            movsd XMM1,QWORD PTR [RIP+.L_4241d8]
            subsd XMM3,XMM0
            addsd XMM1,XMM0
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+24]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_4241f0]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_424240]
            ucomisd XMM6,XMM0
            ja .L_423df0

            sub EBX,1
            je .L_423dc0

            movsd XMM1,QWORD PTR [RBP+168]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_423be5
.L_423c80:

            cmp EAX,3
            jg .L_423e60

            movsd QWORD PTR [RSP],XMM0
            mulsd XMM0,QWORD PTR [R12+16]
            movsd XMM1,QWORD PTR [R12+24]
            call atan2@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+64]
            ucomisd XMM2,QWORD PTR [RIP+.L_4241e0]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            jp .L_423ec0

            jne .L_423ec0

            mulsd XMM7,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM7
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM0
.L_423d06:

            movsd XMM7,QWORD PTR [RIP+.L_4241c8]
            movsd XMM0,QWORD PTR [RIP+.L_4241d0]
            addsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+56],XMM2
            mulsd XMM0,XMM7
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM7,XMM5
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM2,QWORD PTR [R12+16]
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+48],XMM7
            movsd XMM7,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM7,QWORD PTR [R12+8]
            mulsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_4241d0]
            mulsd XMM0,XMM5
            mulsd XMM7,XMM1
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+40],XMM2
            call sin@PLT

            mov RAX,QWORD PTR [RIP+.L_4241c8]
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RAX
            jmp .L_423be0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423dc0:

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM2
            call .L_415fe0

            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
.L_423ddb:

            add RSP,80
.L_423ddf:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423df0:

            mov EAX,DWORD PTR [R12+32]
            test EAX,EAX
            je .L_423eb0
.L_423dfd:

            pxor XMM0,XMM0
            mov EDX,1
            movsd XMM7,QWORD PTR [RSP+40]
            ucomisd XMM7,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_423e2e

            movsd XMM6,QWORD PTR [RSP+48]
            ucomisd XMM6,XMM0
            setp AL
            cmove EDX,EAX
            test DL,DL
            je .L_423ddb
.L_423e2e:

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,80
.L_423e4d:

            pop RBX
            movapd XMM1,XMM2
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423e60:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_423be0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423e90:

            movsd XMM7,QWORD PTR [RSP+40]
            movq XMM0,QWORD PTR [RIP+.L_424230]
            xorpd XMM7,XMM0
            movsd QWORD PTR [RSP+40],XMM7
            jmp .L_423b74
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423eb0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_424230]
            jmp .L_423dfd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423ec0:

            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM1,QWORD PTR [R12+8]
            mulsd XMM0,QWORD PTR [R12+16]
            divsd XMM0,XMM2
            addsd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM0
            jmp .L_423d06
.L_423f03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423f10:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
            call .L_403c70

            test RAX,RAX
            je .L_423f90

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_424133]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_4241c8]
            jne .L_423f70
.L_423f53:

            movsd QWORD PTR [RBP],XMM0
            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_423190
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423f70:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42413b]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_423f53
.L_423f90:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_422e90
.L_423f9e:

            nop
            nop
.L_423fa0:

            test RDI,RDI
            je .L_423fb0

            jmp .L_423f10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423fb0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_423fde

            lea RDX,QWORD PTR [RIP+.L_422ec0]
            lea RCX,QWORD PTR [RIP+.L_4241a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_423fde:

            add RSP,8
            ret 
.L_423fe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423ff0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_424003:

            call .L_403c70

            test RAX,RAX
            je .L_4240ad

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_424143]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_424208]
            je .L_4240c0
.L_42403b:

            movsd QWORD PTR [RBX+336],XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_424053

            je .L_4240a0
.L_424053:

            mov RAX,QWORD PTR [RIP+.L_424218]
            movsd XMM0,QWORD PTR [RIP+.L_424220]
            mov RDI,RBX
            movsd QWORD PTR [RBX+344],XMM0
            mov QWORD PTR [RBX+360],RAX
            mov RAX,QWORD PTR [RIP+.L_4241c8]
            movsd QWORD PTR [RBX+352],XMM0
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBX+328],0
            add RSP,8
.L_424096:

            pop RBX
            pop RBP
            jmp .L_423190
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4240a0:

            mov ESI,4294967262
            mov RDI,RBX
            call .L_415fe0
.L_4240ad:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_422e90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4240c0:

            movsd XMM0,QWORD PTR [RIP+.L_4241c8]
            jmp .L_42403b
.L_4240cd:

            nop
            nop
            nop
.L_4240d0:

            test RDI,RDI
            je .L_4240e0

            jmp .L_423ff0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4240e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42410e

            lea RDX,QWORD PTR [RIP+.L_422ec0]
            lea RCX,QWORD PTR [RIP+.L_424160]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42410e:

            add RSP,8
            ret 
.L_424113:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424120:

            xor EAX,EAX
            ret 
.L_424123:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424130:

            xor EAX,EAX
            ret 
.L_424133:
          .string "tlat_ts"
.L_42413b:
          .string "rlat_ts"
.L_424143:
          .string "bsouth"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_424160:
          .string "Universal Polar Stereographic\n\tAzi, Sph&Ell\n\tsouth"
          .zero 13
.L_4241a0:
          .string "Stereographic\n\tAzi, Sph&Ell\n\tlat_ts="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4241c8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4241d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4241d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4241e0:
          .zero 8
.L_4241e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_4241f0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4241f8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_424200:
          .byte 0x3a
          .byte 0x8c
          .byte 0x30
          .byte 0xe2
          .byte 0x8e
          .byte 0x79
          .byte 0x45
          .byte 0x3e
.L_424208:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_424210:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xbf
.L_424218:
          .byte 0x2
          .byte 0x2b
          .byte 0x87
          .byte 0x16
          .byte 0xd9
          .byte 0xce
          .byte 0xef
          .byte 0x3f
.L_424220:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x3e
          .byte 0x41
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424230:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424240:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424250:

            test RDI,RDI
            je .L_424280

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_424278

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+32]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_424278:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424280:

            xor EAX,EAX
            ret 
.L_424283:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424290:

            jmp .L_424250
.L_424292:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4242a0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_4242ad:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RBX+32]
            call .L_44deb0

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM6,QWORD PTR [RSP+32]
            mov RDI,R12
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM5,XMM1
            mulsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM5,XMM4
            movsd XMM2,QWORD PTR [RBP+360]
            addsd XMM0,QWORD PTR [RIP+.L_424638]
            mulsd XMM3,XMM4
            mulsd XMM2,QWORD PTR [RBX+24]
            mulsd XMM5,XMM6
            mulsd XMM1,XMM7
            mulsd XMM3,XMM6
            addsd XMM0,XMM5
            subsd XMM1,XMM3
            divsd XMM2,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,56
.L_424378:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_42437f:

            nop
.L_424380:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM2,XMM2
            sub RSP,72
.L_42438d:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RDI+360]
            movq QWORD PTR [RSP],XMM2
            divsd XMM0,XMM3
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call hypot@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_424640]
            movapd XMM4,XMM0
            jp .L_4243f0

            movq XMM2,QWORD PTR [RSP]
            jne .L_4243f0

            movsd XMM3,QWORD PTR [RBX]
.L_4243d0:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP]
            add RSP,72
.L_4243dc:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            jmp .L_44df80
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243f0:

            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM1,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM6,QWORD PTR [RBX+16]
            divsd XMM0,XMM4
            addsd XMM0,XMM6
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RBX+8]
            movq QWORD PTR [RSP],XMM0
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM5
            mulsd XMM0,XMM5
            subsd XMM1,XMM2
            call atan2@PLT

            movq XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM0
            jmp .L_4243d0
.L_4244ae:

            nop
            nop
.L_4244b0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_4244c3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_403c70

            test RAX,RAX
            je .L_424578

            lea RSI,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RBX+168]
            mov QWORD PTR [RBX+32],RAX
            mov RDI,RAX
            mov RBP,RAX
            call .L_44dc40

            test RAX,RAX
            mov QWORD PTR [RBP+32],RAX
            je .L_424578

            movsd XMM0,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            lea RAX,QWORD PTR [RIP+.L_424380]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM1
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4242a0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_42455d:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_424582

            add RSP,40
.L_424571:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424578:

            mov RDI,RBX
            call .L_424250

            jmp .L_42455d
.L_424582:

            call __stack_chk_fail@PLT
.L_424587:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424590:

            test RDI,RDI
            je .L_4245a0

            jmp .L_4244b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4245a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4245ce

            lea RDX,QWORD PTR [RIP+.L_424290]
            lea RCX,QWORD PTR [RIP+.L_424600]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4245ce:

            add RSP,8
            ret 
.L_4245d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4245e0:

            xor EAX,EAX
            ret 
.L_4245e3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424600:
          .string "Oblique Stereographic Alternative\n\tAzimuthal, Sph&Ell"
          .byte 0x66
          .byte 0x90
.L_424638:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_424640:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424650:

            test RDI,RDI
            je .L_424680

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_424678

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+72]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_424678:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424680:

            xor EAX,EAX
            ret 
.L_424683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424690:

            jmp .L_424650
.L_424692:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4246a0:

            push R13
            push R12
            lea RAX,QWORD PTR [RIP+.L_424c30]
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_4246b4:

            mov RBP,QWORD PTR [RDI+32]
            mov QWORD PTR [RDI+48],RAX
            movq XMM3,QWORD PTR [RIP+.L_4251d0]
            lea RAX,QWORD PTR [RIP+.L_424af0]
            movsd XMM6,QWORD PTR [RIP+.L_4251f0]
            movsd XMM2,QWORD PTR [RBP+56]
            mov QWORD PTR [RDI+40],RAX
            movsd XMM5,QWORD PTR [RBP+64]
            movapd XMM0,XMM2
            addsd XMM0,XMM5
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            ja .L_424a80

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            mov RSI,R13
            mov RDI,R12
            movaps XMMWORD PTR [RSP+16],XMM3
            call sincos@PLT

            pxor XMM7,XMM7
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM7
            subsd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM3,XMMWORD PTR [RSP+16]
            seta AL
            movsd XMM1,QWORD PTR [RSP+48]
            andpd XMM3,XMM2
            movsd QWORD PTR [RBP+8],XMM4
            mov DWORD PTR [RBP+80],EAX
            ja .L_424840

            ucomisd XMM3,QWORD PTR [RIP+.L_4251f0]
            jb .L_424aa0

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM3,XMM4
            mulsd XMM3,QWORD PTR [RIP+.L_4251f8]
            movsd QWORD PTR [RBP+8],XMM3
.L_4247aa:

            movsd XMM2,QWORD PTR [RIP+.L_425200]
            movapd XMM5,XMM3
            mulsd XMM1,XMM1
            divsd XMM2,XMM3
            addsd XMM5,XMM3
            movsd QWORD PTR [RBP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM4,XMM5
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+24],XMM2
            addsd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM5,XMM0
            pxor XMM6,XMM6
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM1,XMM5
            ucomisd XMM6,XMM1
            sqrtsd XMM3,XMM1
            ja .L_424ac6
.L_424822:

            mulsd XMM2,XMM3
            mov RAX,RBX
            movsd QWORD PTR [RBP+40],XMM2
.L_42482e:

            add RSP,72
.L_424832:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424840:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM3
            call .L_44c700

            test RAX,RAX
            mov QWORD PTR [RBP+72],RAX
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            je .L_424a8a

            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call .L_44ca40

            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM2,QWORD PTR [RBX+216]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_44d3b0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            ucomisd XMM3,QWORD PTR [RIP+.L_4251f0]
            jb .L_424ab0

            movsd XMM0,QWORD PTR [RBP+64]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            call .L_44ca40

            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RBX+216]
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+168]
            call .L_44d3b0

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            jp .L_42493c

            je .L_424abf
.L_42493c:

            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM0,QWORD PTR [RSP]
            mulsd XMM3,XMM3
            mulsd XMM4,XMM4
            movapd XMM1,XMM4
            subsd XMM1,XMM3
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_424960:

            movsd XMM3,QWORD PTR [RIP+.L_425200]
            movsd XMM0,QWORD PTR [RIP+.L_4251f8]
            movsd XMM1,QWORD PTR [RBX+168]
            movapd XMM6,XMM3
            mulsd XMM0,QWORD PTR [RBX+216]
            movsd QWORD PTR [RSP+40],XMM4
            subsd XMM6,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM6
            divsd XMM0,XMM1
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM5,QWORD PTR [RBP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM7,XMM3
            divsd XMM3,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM3
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP],XMM3
            mulsd XMM0,XMM5
            movsd QWORD PTR [RBP],XMM7
            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM4
            movsd QWORD PTR [RSP+16],XMM4
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RSP+32]
            call .L_44d3b0

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            pxor XMM6,XMM6
            movsd XMM3,QWORD PTR [RSP]
            subsd XMM4,XMM5
            ucomisd XMM6,XMM4
            sqrtsd XMM2,XMM4
            jbe .L_424822

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_424822
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424a80:

            mov ESI,4294967275
            call .L_415fe0
.L_424a8a:

            add RSP,72
.L_424a8e:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_424650
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424aa0:

            movapd XMM3,XMM4
            jmp .L_4247aa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ab0:

            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM4
            jmp .L_424960
.L_424abf:

            xor EAX,EAX
            jmp .L_42482e
.L_424ac6:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_424822
.L_424ae5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424af0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_424af9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            mov EAX,DWORD PTR [RBX+80]
            test EAX,EAX
            jne .L_424bb0

            mulsd XMM0,QWORD PTR [RBX+32]
.L_424b27:

            movsd XMM4,QWORD PTR [RSP+8]
            pxor XMM1,XMM1
            subsd XMM4,XMM0
            ucomisd XMM1,XMM4
            movapd XMM0,XMM4
            movsd QWORD PTR [RBX+48],XMM4
            ja .L_424be0

            movsd XMM2,QWORD PTR [RBX+24]
            sqrtsd XMM1,XMM4
            ja .L_424c04
.L_424b57:

            movsd XMM0,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+48],XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,56
.L_424b9f:

            pop RBX
            pop RBP
            subsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424bb0:

            movsd XMM6,QWORD PTR [RBX+8]
            movsd XMM2,QWORD PTR [RBP+216]
            movsd XMM1,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+24],XMM6
            call .L_44d3b0

            mulsd XMM0,QWORD PTR [RSP+24]
            jmp .L_424b27
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424be0:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,56
.L_424bfd:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
.L_424c04:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_424b57
.L_424c26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424c30:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            movapd XMM3,XMM0
            sub RSP,112
.L_424c43:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP],XMM3
            movsd XMM0,QWORD PTR [RBX+40]
            subsd XMM0,XMM1
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call hypot@PLT

            pxor XMM2,XMM2
            movsd QWORD PTR [RBX+48],XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            jp .L_424c84

            je .L_424cf8
.L_424c84:

            movsd XMM4,QWORD PTR [RBX+8]
            ucomisd XMM2,XMM4
            ja .L_424d90
.L_424c93:

            divsd XMM0,QWORD PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+80]
            test EAX,EAX
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,XMM0
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            je .L_424d20

            divsd XMM1,XMM4
            movq XMM4,QWORD PTR [RIP+.L_4251d0]
            movsd XMM0,QWORD PTR [RBX]
            movsd XMM5,QWORD PTR [RIP+.L_44f380-172384]
            movapd XMM3,XMM1
            andpd XMM3,XMM4
            subsd XMM0,XMM3
            andpd XMM0,XMM4
            ucomisd XMM0,XMM5
            ja .L_424dc0

            ucomisd XMM2,XMM1
            jbe .L_424d49
.L_424ce8:

            movsd XMM3,QWORD PTR [RIP+.L_425218]
            jmp .L_424d51
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424cf8:

            movsd XMM0,QWORD PTR [RBX+8]
            ucomisd XMM0,XMM2
            jbe .L_424d78

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_425210]
.L_424d0f:

            movapd XMM1,XMM3
.L_424d13:

            add RSP,112
.L_424d17:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_424d20:

            divsd XMM0,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RIP+.L_425200]
            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_4251d0]
            ucomisd XMM3,XMM1
            jae .L_424f70

            ucomisd XMM2,XMM0
            ja .L_424ce8
.L_424d49:

            movsd XMM3,QWORD PTR [RIP+.L_425210]
.L_424d51:

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP]
            divsd XMM0,QWORD PTR [RBX+8]
            jmp .L_424d0f

            nop
            nop
            nop
            nop
            nop
.L_424d78:

            movsd XMM3,QWORD PTR [RIP+.L_425218]
            pxor XMM0,XMM0
            jmp .L_424d0f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424d90:

            movq XMM1,QWORD PTR [RIP+.L_4251e0]
            movsd XMM7,QWORD PTR [RSP+8]
            xorpd XMM0,XMM1
            xorpd XMM3,XMM1
            xorpd XMM7,XMM1
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_424c93
.L_424dc0:

            movsd XMM0,QWORD PTR [RIP+.L_4251f8]
            movsd XMM7,QWORD PTR [RBP+168]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM5
            movsd XMM6,QWORD PTR [RBP+216]
            movsd QWORD PTR [RSP+72],XMM7
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+64],XMM1
            call asin@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP]
            movapd XMM3,XMM0
            ucomisd XMM5,XMM7
            ja .L_424f33

            movsd XMM1,QWORD PTR [RSP+64]
            mov R12D,15
            lea R14,QWORD PTR [RSP+104]
            movsd XMM6,QWORD PTR [RIP+.L_4251f8]
            lea R13,QWORD PTR [RSP+96]
            divsd XMM1,QWORD PTR [RSP+24]
            movapd XMM4,XMMWORD PTR [RSP+32]
            divsd XMM6,XMM7
            movsd QWORD PTR [RSP+80],XMM1
            movsd QWORD PTR [RSP+88],XMM6
            jmp .L_424e62
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424e58:

            sub R12D,1
            je .L_424f80
.L_424e62:

            movapd XMM0,XMM3
            mov RSI,R13
            mov RDI,R14
            movaps XMMWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RIP+.L_425200]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd XMM6,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP],XMM6
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_425200]
            subsd XMM0,XMM1
            addsd XMM1,QWORD PTR [RIP+.L_425200]
            movsd QWORD PTR [RSP+24],XMM5
            divsd XMM0,XMM1
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+80]
            divsd XMM2,XMM5
            movapd XMM4,XMMWORD PTR [RSP+48]
            mulsd XMM0,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM1,XMM2
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4251f8]
            mulsd XMM1,XMM5
            mulsd XMM1,XMM5
            divsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,XMM1
            addsd XMM3,XMM0
            andpd XMM0,XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_4251f0]
            ja .L_424e58
.L_424f33:

            ucomisd XMM3,QWORD PTR [RIP+.L_425228]
            jbe .L_424d51

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424f48:

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP]
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            jmp .L_424d13
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424f70:

            call asin@PLT

            movapd XMM3,XMM0
            jmp .L_424d51
          .byte 0x66
          .byte 0x90
.L_424f80:

            movsd XMM3,QWORD PTR [RIP+.L_425208]
            jmp .L_424f48
.L_424f8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_424f90:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_424fa3:

            call .L_403c70

            test RAX,RAX
            je .L_424ff0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_425146]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_42514d]
            mov QWORD PTR [RBP+56],RAX
            call .L_4043f0

            mov QWORD PTR [RBP+64],RAX
            add RSP,8
.L_424fe6:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4246a0
.L_424ff0:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_424650
.L_424ffe:

            nop
            nop
.L_425000:

            test RDI,RDI
            je .L_425010

            jmp .L_424f90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425010:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42503e

            lea RDX,QWORD PTR [RIP+.L_424690]
            lea RCX,QWORD PTR [RIP+.L_4251a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42503e:

            add RSP,8
            ret 
.L_425043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425050:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_425063:

            call .L_403c70

            test RAX,RAX
            je .L_4250d0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_425146]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_425154]
            mov QWORD PTR [RBP+64],RAX
            call .L_4043f0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_425218]
            je .L_4250c0
.L_4250aa:

            movsd QWORD PTR [RBP+56],XMM0
            add RSP,8
.L_4250b3:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4246a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4250c0:

            movsd XMM0,QWORD PTR [RIP+.L_425210]
            jmp .L_4250aa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4250d0:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_424650
.L_4250de:

            nop
            nop
.L_4250e0:

            test RDI,RDI
            je .L_4250f0

            jmp .L_425050
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4250f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42511e

            lea RDX,QWORD PTR [RIP+.L_424690]
            lea RCX,QWORD PTR [RIP+.L_425160]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42511e:

            add RSP,8
            ret 
.L_425123:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425130:

            mov EAX,10000
            ret 
.L_425136:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425140:

            mov EAX,10000
            ret 
.L_425146:
          .string "rlat_1"
.L_42514d:
          .string "rlat_2"
.L_425154:
          .string "bsouth"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425160:
          .string "Lambert Equal Area Conic\n\tConic, Sph&Ell\n\tlat_1= south"
          .zero 9
.L_4251a0:
          .string "Albers Equal Area\n\tConic Sph&Ell\n\tlat_1= lat_2="
.L_4251d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4251f0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4251f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_425200:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_425208:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_425210:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_425218:

            sbb BYTE PTR [RIP+.L_65fea8+567781306],CH
            stc 
            mov EDI,2596056904
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_425228:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_425230:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,152
.L_425240:

            lea RBP,QWORD PTR [RSP+136]
            lea RBX,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+112],XMM1
            mov RSI,RBX
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_425f00]
            mov RSI,RBX
            movsd XMM6,QWORD PTR [RSP+128]
            mov RDI,RBP
            subsd XMM0,QWORD PTR [RSP]
            mov R13,QWORD PTR [R12+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+16],XMM6
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+112]
            movq XMM3,QWORD PTR [RIP+.L_425f90]
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_425f10]
            movsd XMM5,QWORD PTR [RSP+128]
            andpd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+136]
            subsd XMM2,QWORD PTR [RIP+.L_425f08]
            andpd XMM2,XMM3
            ucomisd XMM4,XMM2
            jbe .L_425740

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_4254f8

            movsd QWORD PTR [RSP+112],XMM2
            movsd XMM4,QWORD PTR [RIP+.L_425f18]
.L_425307:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM5
            addsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_425ef0]
            movapd XMM1,XMM0
            andpd XMM1,XMM3
            ucomisd XMM1,XMM4
            jbe .L_4258a0

            ucomisd XMM1,QWORD PTR [RIP+.L_425f38]
            ja .L_4257b0

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_4257d8

            movsd XMM6,QWORD PTR [RIP+.L_425ec8]
            movsd XMM2,QWORD PTR [RIP+.L_425ed8]
            movsd QWORD PTR [RSP],XMM6
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RIP+.L_425ee0]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM0,QWORD PTR [RIP+.L_425ee8]
            movsd XMM6,QWORD PTR [RIP+.L_425f48]
.L_42538a:

            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+80],XMM6
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+32],XMM1
            call acos@PLT

            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+112],XMM1
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+96]
.L_4253dc:

            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM6
            andpd XMM3,XMM1
            ucomisd XMM0,XMM3
            jbe .L_42543f

            movsd XMM7,QWORD PTR [RSP+112]
            movapd XMM4,XMM1
            ucomisd XMM7,XMM2
            ja .L_42540e

            xorpd XMM4,XMMWORD PTR [RIP+.L_425fa0]
.L_42540e:

            addsd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM5,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
.L_42543f:

            movapd XMM0,XMM1
            mov RSI,RBX
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM2
            movsd XMM0,QWORD PTR [RSP+136]
            movsd XMM1,QWORD PTR [RSP+128]
            mulsd XMM0,XMM5
            jbe .L_425490

            xorpd XMM5,XMMWORD PTR [RIP+.L_425fa0]
.L_425490:

            mov EAX,DWORD PTR [R13]
            mulsd XMM1,XMM5
            test EAX,EAX
            addsd XMM1,QWORD PTR [RSP]
            je .L_425732

            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_425f68]
            movsd XMM2,QWORD PTR [RIP+.L_425f70]
            xorpd XMM3,XMMWORD PTR [RIP+.L_425fa0]
            movapd XMM5,XMM1
            add RSP,152
.L_4254cc:

            mulsd XMM1,XMM4
            mulsd XMM5,XMM2
            mulsd XMM0,XMM2
            mulsd XMM3,XMM4
            pop RBX
            pop RBP
            subsd XMM0,XMM1
            subsd XMM3,XMM5
            pop R12
            pop R13
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4254f8:

            movsd XMM7,QWORD PTR [RIP+.L_425eb0]
            movsd QWORD PTR [RSP+112],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_44f380-169160]
            movsd QWORD PTR [RSP+32],XMM7
.L_425514:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,RBX
            mov RDI,RBP
            movaps XMMWORD PTR [RSP+48],XMM3
            addsd XMM0,QWORD PTR [RIP+.L_425f20]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RIP+.L_425f28]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            movapd XMM3,XMMWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RIP+.L_425f30]
            movsd XMM1,QWORD PTR [RSP+128]
            movsd XMM4,QWORD PTR [RIP+.L_425ef0]
            mulsd XMM0,XMM1
            movsd XMM6,QWORD PTR [RSP+136]
            addsd XMM0,XMM2
            movapd XMM2,XMM0
            andpd XMM2,XMM3
            ucomisd XMM2,XMM4
            jbe .L_425850

            ucomisd XMM2,QWORD PTR [RIP+.L_425f38]
            ja .L_4257b0

            pxor XMM2,XMM2
            movapd XMM7,XMM4
            ucomisd XMM2,XMM0
            ja .L_425810
.L_4255ab:

            movsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM0,QWORD PTR [RIP+.L_425f78]
            jbe .L_425908

            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM6,QWORD PTR [RIP+.L_425ec0]
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_425ed0]
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM5
.L_4255e6:

            movsd XMM0,QWORD PTR [RIP+.L_425f40]
            movsd QWORD PTR [RSP+96],XMM4
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+80],XMM2
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_425f48]
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            call pow@PLT

            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM8,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_425f50]
            movsd XMM2,QWORD PTR [RSP+80]
            subsd XMM0,XMM7
            movsd XMM6,QWORD PTR [RSP+32]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+96]
            mulsd XMM0,QWORD PTR [RIP+.L_425f40]
            ucomisd XMM2,XMM0
            ja .L_425710

            movapd XMM5,XMM8
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+120],XMM4
            mulsd XMM5,QWORD PTR [RIP+.L_425f58]
            movsd QWORD PTR [RSP+80],XMM8
            movaps XMMWORD PTR [RSP+96],XMM3
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+64],XMM5
            call pow@PLT

            movsd XMM8,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+96]
            addsd XMM0,XMM8
            movsd XMM4,QWORD PTR [RSP+120]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+64]
            divsd XMM0,QWORD PTR [RIP+.L_425f60]
            movapd XMM1,XMM0
            andpd XMM1,XMM3
            ucomisd XMM1,XMM4
            jbe .L_425992

            ucomisd XMM1,QWORD PTR [RIP+.L_425f38]
            movsd XMM2,QWORD PTR [RSP+32]
            ja .L_425710

            ucomisd XMM2,XMM0
            ja .L_4258f0

            movapd XMM0,XMM4
            movsd XMM2,QWORD PTR [RIP+.L_425ed8]
            jmp .L_4253dc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425710:

            mov ESI,4294967276
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM2
.L_425732:

            add RSP,152
.L_425739:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_425740:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_425f18]
            divsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            movaps XMMWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            call atan2@PLT

            movsd XMM2,QWORD PTR [RIP+.L_425ed8]
            movsd QWORD PTR [RSP+112],XMM0
            ucomisd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+80]
            ja .L_425514

            jmp .L_425307
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4257b0:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,152
.L_4257c8:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4257d8:

            movsd XMM7,QWORD PTR [RIP+.L_425ec8]
            movsd QWORD PTR [RSP],XMM7
.L_4257e5:

            mov RDI,R12
            mov ESI,4294967276
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP]
            add RSP,152
            pop RBX
            pxor XMM0,XMM0
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425810:

            movsd XMM7,QWORD PTR [RSP+32]
            ucomisd XMM7,QWORD PTR [RIP+.L_425f78]
            ja .L_425980

            mulsd XMM1,QWORD PTR [RIP+.L_425f80]
            movapd XMM0,XMM6
            mulsd XMM5,QWORD PTR [RSP+32]
            addsd XMM1,XMM5
            call atan2@PLT

            movsd XMM6,QWORD PTR [RIP+.L_425ec0]
            movsd QWORD PTR [RSP],XMM6
            jmp .L_4257e5
          .byte 0x66
          .byte 0x90
.L_425850:

            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+48],XMM5
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM1
            call acos@PLT

            pxor XMM2,XMM2
            movapd XMM7,XMM0
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            movapd XMM3,XMMWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+64]
            jmp .L_4255ab
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4258a0:

            movsd QWORD PTR [RSP+48],XMM4
            movaps XMMWORD PTR [RSP+32],XMM3
            call acos@PLT

            pxor XMM2,XMM2
            movapd XMM7,XMM0
            movsd XMM6,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RIP+.L_425ed8]
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM6,QWORD PTR [RIP+.L_425ec8]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM6
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM3,XMMWORD PTR [RSP+32]
            jmp .L_4255e6
.L_4258f0:

            movsd XMM0,QWORD PTR [RIP+.L_425ef8]
            movsd XMM2,QWORD PTR [RIP+.L_425ed8]
            jmp .L_4253dc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425908:

            mulsd XMM1,QWORD PTR [RIP+.L_425f80]
            movsd QWORD PTR [RSP+96],XMM4
            movsd QWORD PTR [RSP+80],XMM2
            movaps XMMWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM1,XMM5
            addsd XMM1,XMM0
            movapd XMM0,XMM6
            call atan2@PLT

            movsd XMM4,QWORD PTR [RIP+.L_425ed0]
            movsd XMM6,QWORD PTR [RIP+.L_425ec0]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP],XMM6
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM3,XMMWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+96]
            jmp .L_4255e6
.L_425980:

            movsd XMM5,QWORD PTR [RIP+.L_425ec0]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_4257e5
.L_425992:

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM2,QWORD PTR [RIP+.L_425ed8]
            movsd QWORD PTR [RSP+112],XMM4
            jmp .L_42538a
.L_4259b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4259c0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_4259c9:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            je .L_425a1b

            movapd XMM4,XMM1
            xorpd XMM1,XMMWORD PTR [RIP+.L_425fa0]
            movapd XMM7,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_425f68]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_425f70]
            mulsd XMM3,XMM2
            mulsd XMM4,XMM0
            mulsd XMM1,XMM2
            mulsd XMM0,XMM7
            subsd XMM4,XMM3
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM4
.L_425a1b:

            pxor XMM4,XMM4
            ucomisd XMM4,QWORD PTR [RSP+40]
            ja .L_425cf8

            addsd XMM1,QWORD PTR [RIP+.L_425ec0]
            movsd XMM4,QWORD PTR [RIP+.L_425f18]
            movsd XMM7,QWORD PTR [RIP+.L_425ed8]
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+88],XMM7
            movsd QWORD PTR [RSP+64],XMM4
            movapd XMM2,XMM1
.L_425a59:

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+48],XMM0
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+40]
            call atan2@PLT

            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+80],XMM0
            movapd XMM4,XMM0
            movsd QWORD PTR [RSP+56],XMM0
            movapd XMM5,XMM0
            ucomisd XMM3,QWORD PTR [RSP+40]
            andpd XMM4,XMMWORD PTR [RIP+.L_425f90]
            movsd QWORD PTR [RSP+32],XMM4
            ja .L_425ac5

            xorpd XMM5,XMMWORD PTR [RIP+.L_425fa0]
            movsd QWORD PTR [RSP+56],XMM5
.L_425ac5:

            movsd XMM2,QWORD PTR [RSP+48]
            mov EBX,10
            jmp .L_425b20
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425ad8:

            addsd XMM0,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM2
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+16]
.L_425af5:

            subsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_425f10]
            andpd XMM2,XMMWORD PTR [RIP+.L_425f90]
            ucomisd XMM3,XMM2
            ja .L_425bf0

            sub EBX,1
            je .L_425bd0

            movapd XMM2,XMM0
.L_425b20:

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_425f88]
            movsd QWORD PTR [RSP+24],XMM2
            divsd XMM0,QWORD PTR [RIP+.L_425f58]
            call pow@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM6,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_425f40]
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM0,XMM6
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_425f48]
            call pow@PLT

            movsd XMM7,QWORD PTR [RIP+.L_425f50]
            movsd QWORD PTR [RSP+16],XMM0
            subsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RIP+.L_425f40]
            mulsd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_425f48]
            call pow@PLT

            addsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,QWORD PTR [RIP+.L_425f60]
            call acos@PLT

            ucomisd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            ja .L_425ad8

            movapd XMM0,XMM2
            jmp .L_425af5
.L_425bd0:

            mov RDI,RBP
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,120
.L_425be5:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425bf0:

            lea RBX,QWORD PTR [RSP+104]
            lea RBP,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+80]
            mov RSI,RBP
            movsd XMM5,QWORD PTR [RSP+88]
            mov RDI,RBX
            divsd XMM1,QWORD PTR [RIP+.L_425f48]
            movsd XMM3,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            subsd XMM5,XMM1
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+96]
            mulsd XMM3,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM2
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            mulsd XMM4,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM0,XMM5
            subsd XMM1,XMM4
            call atan2@PLT

            pxor XMM3,XMM3
            ucomisd XMM3,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            ja .L_425d38

            movsd XMM2,QWORD PTR [RIP+.L_425f00]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
.L_425ce7:

            add RSP,120
.L_425ceb:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425cf8:

            movsd XMM2,QWORD PTR [RIP+.L_425ec0]
            movsd XMM3,QWORD PTR [RIP+.L_425ed0]
            movsd XMM5,QWORD PTR [RIP+.L_425f28]
            subsd XMM2,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_425f30]
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+72],XMM5
            movsd QWORD PTR [RSP+64],XMM7
            jmp .L_425a59
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425d38:

            subsd XMM0,QWORD PTR [RIP+.L_425f20]
            jmp .L_425ce7
.L_425d42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d50:

            test RDI,RDI
            je .L_425d70

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425d70:

            ret 
.L_425d72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425d80:

            push RBP
            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_425d93:

            call .L_403c70

            test RAX,RAX
            je .L_425de8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_425e63]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            call .L_4043f0

            mov DWORD PTR [RBP],EAX
            lea RAX,QWORD PTR [RIP+.L_4259c0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_425230]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_425dde:

            add RSP,8
.L_425de2:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425de8:

            test RBX,RBX
            je .L_425e08

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425e08:

            xor EAX,EAX
            jmp .L_425dde
.L_425e0c:

            nop
            nop
            nop
            nop
.L_425e10:

            test RDI,RDI
            je .L_425e20

            jmp .L_425d80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425e20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_425e4e

            lea RDX,QWORD PTR [RIP+.L_425d50]
            lea RCX,QWORD PTR [RIP+.L_425e80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_425e4e:

            add RSP,8
            ret 
.L_425e53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425e60:

            xor EAX,EAX
            ret 
.L_425e63:
          .string "bns"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425e80:
          .string "Bipolar conic of western hemisphere\n\tConic Sph."
.L_425eb0:

            sbb BYTE PTR [RIP+.L_65fea8+567784530],CH
            or DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_425ec0:
          .byte 0x90
          .byte 0x3e
          .byte 0xca
          .byte 0xe0
          .byte 0x3e
          .byte 0x50
          .byte 0xf3
          .byte 0x3f
.L_425ec8:
          .byte 0x90
          .byte 0x3e
          .byte 0xca
          .byte 0xe0
          .byte 0x3e
          .byte 0x50
          .byte 0xf3
          .byte 0xbf
.L_425ed0:
          .byte 0x7d
          .byte 0xeb
          .byte 0x1f
          .byte 0x86
          .byte 0xc5
          .byte 0x20
          .byte 0xea
          .byte 0x3f
.L_425ed8:
          .byte 0x39
          .byte 0x5b
          .byte 0xab
          .byte 0xf3
          .byte 0x71
          .byte 0x29
          .byte 0xfd
          .byte 0x3f
.L_425ee0:
          .byte 0xd1
          .byte 0x52
          .byte 0xd9
          .byte 0x74
          .byte 0xde
          .byte 0xbb
          .byte 0xf4
          .byte 0x3f
.L_425ee8:
          .byte 0xa3
          .byte 0xa9
          .byte 0xa7
          .byte 0x92
          .byte 0xcd
          .byte 0x74
          .byte 0xef
          .byte 0x3f
.L_425ef0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_425ef8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_425f00:
          .byte 0xbc
          .byte 0xb6
          .byte 0x95
          .byte 0x67
          .byte 0x31
          .byte 0x55
          .byte 0xd6
          .byte 0xbf
.L_425f08:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_425f10:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_425f18:

            int 59
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_425f20:
          .byte 0x3a
          .byte 0xfe
          .byte 0xfd
          .byte 0x66
          .byte 0xc1
          .byte 0xb7
          .byte 0xfe
          .byte 0x3f
.L_425f28:
          .byte 0x1c
          .byte 0x2d
          .byte 0x52
          .byte 0x42
          .byte 0xf6
          .byte 0x11
          .byte 0xee
          .byte 0x3f
.L_425f30:
          .byte 0xf5
          .byte 0xb
          .byte 0x8a
          .byte 0x74
          .byte 0xa8
          .byte 0xe3
          .byte 0xd5
          .byte 0xbf
.L_425f38:
          .byte 0x30
          .byte 0xb8
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_425f40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_425f48:
          .byte 0x6a
          .byte 0xc0
          .byte 0x7b
          .byte 0xe9
          .byte 0x88
          .byte 0x2d
          .byte 0xe4
          .byte 0x3f
.L_425f50:
          .byte 0x7d
          .byte 0x3f
          .byte 0xc6
          .byte 0xc7
          .byte 0xd2
          .byte 0xa
          .byte 0xfd
          .byte 0x3f
.L_425f58:
          .byte 0x10
          .byte 0x15
          .byte 0xdb
          .byte 0x1d
          .byte 0x20
          .byte 0x5b
          .byte 0xfe
          .byte 0x3f
.L_425f60:

            mov BH,155
            popfq 
            adc AL,5
            pop RSP
            hlt 
          .byte 0x3f
.L_425f68:
          .byte 0xad
          .byte 0xe
          .byte 0x53
          .byte 0x2b
          .byte 0x21
          .byte 0x4d
          .byte 0xe6
          .byte 0x3f
.L_425f70:
          .byte 0xb3
          .byte 0x4a
          .byte 0xbc
          .byte 0xec
          .byte 0xeb
          .byte 0xf2
          .byte 0xe6
          .byte 0x3f
.L_425f78:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_425f80:
          .byte 0xf5
          .byte 0xb
          .byte 0x8a
          .byte 0x74
          .byte 0xa8
          .byte 0xe3
          .byte 0xd5
          .byte 0x3f
.L_425f88:
          .byte 0xab
          .byte 0x6f
          .byte 0x1a
          .byte 0x48
          .byte 0xd4
          .byte 0x5f
          .byte 0xf9
          .byte 0x3f
.L_425f90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425fa0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_425fb0:

            test RDI,RDI
            je .L_425fe0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_425fd8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+32]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_425fd8:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_425fe0:

            xor EAX,EAX
            ret 
.L_425fe3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ff0:

            jmp .L_425fb0
.L_425ff2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426000:

            sub RSP,56
.L_426004:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RAX+8]
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM2,QWORD PTR [RAX]
            subsd XMM2,XMM1
            movapd XMM4,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            andpd XMM4,XMMWORD PTR [RIP+.L_426730]
            ucomisd XMM4,QWORD PTR [RIP+.L_426740]
            jbe .L_426098

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM0,XMM2
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            add RSP,56
.L_426089:

            subsd XMM3,XMM2
            movapd XMM1,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426098:

            pxor XMM1,XMM1
            add RSP,56
            pxor XMM0,XMM0
            ret 
.L_4260a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4260b0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_4260bd:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX+32]
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM4
            addsd XMM3,QWORD PTR [RBX+24]
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+32],XMM3
            call .L_44c7f0

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [R13+176]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM1,XMM5
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_426748]
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM1,XMM5
            mulsd XMM4,QWORD PTR [RSP+8]
            subsd XMM0,XMM1
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4261bb
.L_426170:

            mulsd XMM1,XMM3
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            divsd XMM4,XMM1
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RSP+56]
            add RSP,72
.L_4261ac:

            pop RBX
            pop RBP
            subsd XMM1,XMM2
            pop R12
            pop R13
            movapd XMM0,XMM3
            ret 
.L_4261bb:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_426170
.L_4261e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4261f0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_4261f9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM3,QWORD PTR [RBX+8]
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movapd XMM5,XMM0
            movq XMM1,QWORD PTR [RIP+.L_426730]
            addsd XMM2,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RIP+.L_426750]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMM1
            ucomisd XMM0,XMM4
            ja .L_4262d0

            subsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_426740]
            andpd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM4,XMM1
            jb .L_426280
.L_426270:

            add RSP,40
.L_426274:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426280:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            divsd XMM0,XMM1
            jmp .L_426270
          .byte 0x66
          .byte 0x90
.L_4262d0:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
.L_4262ed:

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
.L_4262f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426300:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM7,XMM0
            sub RSP,72
.L_42630d:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            movapd XMM5,XMM0
            movapd XMM0,XMM7
            subsd XMM5,XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP],XMM5
            call hypot@PLT

            movapd XMM6,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RBP+176]
            subsd XMM0,XMM6
            call .L_44c830

            movq XMM1,QWORD PTR [RIP+.L_426730]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_426750]
            andpd XMM0,XMM1
            ucomisd XMM2,XMM0
            ja .L_4263b0

            subsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_426740]
            andpd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM2,XMM1
            jb .L_426448
.L_42639f:

            add RSP,72
.L_4263a3:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4263b0:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,XMM4
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_426748]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            pxor XMM4,XMM4
            subsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_426476
.L_426431:

            mulsd XMM2,XMM1
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+24]
            jmp .L_42639f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426448:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,72
.L_42646f:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
.L_426476:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_426431
.L_42649f:

            nop
.L_4264a0:

            push R12
            push RBP
            mov ESI,40
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_4264b5:

            call .L_403c70

            test RAX,RAX
            je .L_426575

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4266e3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [RIP+.L_426740]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM1
            movsd QWORD PTR [RBP],XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_426730]
            ucomisd XMM3,XMM2
            ja .L_426568

            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM4
            jp .L_426598

            jne .L_426598

            addsd XMM2,XMM3
            ucomisd XMM2,QWORD PTR [RIP+.L_426750]
            jae .L_426588

            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_426748]
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_426543:

            lea RAX,QWORD PTR [RIP+.L_4261f0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_426000]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_42655d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426568:

            mov ESI,4294967273
            mov RDI,RBX
            call .L_415fe0
.L_426575:

            add RSP,48
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_425fb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426588:

            mov QWORD PTR [RBP+8],0
            jmp .L_426543
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426598:

            movsd QWORD PTR [RSP+24],XMM4
            call .L_44c700

            movsd XMM5,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBP+32],RAX
            mov R12,RAX
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM2,XMM3
            movsd QWORD PTR [RBP+16],XMM1
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44c7f0

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBP+24],XMM0
            mulsd XMM2,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_426748]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_426660
.L_426631:

            mulsd XMM1,XMM2
            lea RAX,QWORD PTR [RIP+.L_426300]
            divsd XMM3,XMM1
            movsd QWORD PTR [RBP+16],XMM3
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4260b0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_426658:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_426660:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_426631
.L_426684:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426690:

            test RDI,RDI
            je .L_4266a0

            jmp .L_4264a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4266a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4266ce

            lea RDX,QWORD PTR [RIP+.L_425ff0]
            lea RCX,QWORD PTR [RIP+.L_426700]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4266ce:

            add RSP,8
            ret 
.L_4266d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4266e0:

            xor EAX,EAX
            ret 
.L_4266e3:
          .string "rlat_1"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_426700:

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            and BYTE PTR GS:[RAX],CH
            push RDI
            jb .L_426779
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x3d
          .byte 0x39
          .byte 0x30
          .byte 0x29
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x26
          .byte 0x45
          .byte 0x6c
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x3d
          .byte 0x0
          .byte 0x90
.L_426730:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426740:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_426748:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_426750:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426760:

            test RDI,RDI
            je .L_426798

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_426790

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+48]
            test RDI,RDI
.L_426779:

            je .L_426784

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_426784:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_426790:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426798:

            xor EAX,EAX
            ret 
.L_42679b:

            nop
            nop
            nop
            nop
            nop
.L_4267a0:

            jmp .L_426760
.L_4267a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4267b0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            movapd XMM0,XMM1
            sub RSP,56
.L_4267c0:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBP+32]
            mov RDX,QWORD PTR [RIP+.L_426ed8]
            or DWORD PTR [RBX+96],4
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            mov QWORD PTR [RBX+32],RDX
            mov EDX,DWORD PTR [RAX+56]
            movsd XMM7,QWORD PTR [RAX+16]
            movsd XMM3,QWORD PTR [RAX+40]
            test EDX,EDX
            movsd XMM4,QWORD PTR [RSP]
            je .L_426850

            mov RDI,QWORD PTR [RAX+48]
            movapd XMM2,XMM6
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM5
            call .L_44c7f0

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM4,XMM0
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
.L_426850:

            subsd XMM3,XMM4
            movsd XMM2,QWORD PTR [RBP+176]
            movapd XMM1,XMM6
            movapd XMM0,XMM5
            mulsd XMM3,XMM7
            movsd QWORD PTR [RSP],XMM3
            call .L_44ca40

            movsd XMM3,QWORD PTR [RSP]
            divsd XMM3,XMM0
            movsd QWORD PTR [RBX+40],XMM3
            add RSP,56
.L_426884:

            pop RBX
            pop RBP
            ret 
.L_426887:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426890:

            push R12
            push RBP
            push RBX
            movapd XMM4,XMM0
            movapd XMM5,XMM1
            sub RSP,48
.L_4268a0:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+56]
            movsd XMM3,QWORD PTR [RBX+40]
            test EAX,EAX
            jne .L_426910

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
.L_4268ba:

            mulsd XMM4,QWORD PTR [RBX+16]
            subsd XMM3,XMM5
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RBX+24],XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+32]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,48
.L_4268fc:

            pop RBX
            pop RBP
            subsd XMM1,XMM3
            pop R12
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426910:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+40]
            call .L_44c7f0

            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_4268ba
.L_42696f:

            nop
.L_426970:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_426979:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RBX+32]
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call hypot@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBX+24],XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM1
            jp .L_4269be

            je .L_426a08
.L_4269be:

            ucomisd XMM1,QWORD PTR [RBX+16]
            ja .L_426a80

            mov EAX,DWORD PTR [RBX+56]
            movsd XMM3,QWORD PTR [RBX+40]
            subsd XMM3,XMM0
            test EAX,EAX
            jne .L_426a50
.L_4269d9:

            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RBX+16]
            add RSP,40
.L_4269fd:

            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426a08:

            movsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM0,XMM1
            jbe .L_426a30

            movsd XMM3,QWORD PTR [RIP+.L_426ee8]
            add RSP,40
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426a30:

            movsd XMM3,QWORD PTR [RIP+.L_426ee0]
            add RSP,40
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426a50:

            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RBP+176]
            call .L_44c830

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            jmp .L_4269d9
          .byte 0x66
          .byte 0x90
.L_426a80:

            movq XMM1,QWORD PTR [RIP+.L_426f00]
            mov EAX,DWORD PTR [RBX+56]
            xorpd XMM3,XMM1
            xorpd XMM0,XMM1
            test EAX,EAX
            xorpd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM3,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+24],XMM0
            subsd XMM3,XMM0
            je .L_4269d9

            jmp .L_426a50
.L_426ab5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426ac0:

            push R13
            push R12
            mov ESI,64
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_426ad7:

            call .L_403c70

            test RAX,RAX
            je .L_426c28

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_426e73]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_426e7a]
            mov QWORD PTR [RBP],RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM7,QWORD PTR [RIP+.L_426ef0]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM0
            addsd XMM0,QWORD PTR [RBP]
            andpd XMM0,XMMWORD PTR [RIP+.L_426f10]
            ucomisd XMM7,XMM0
            ja .L_426d60

            movsd XMM0,QWORD PTR [RBX+176]
            call .L_44c700

            test RAX,RAX
            mov QWORD PTR [RBP+48],RAX
            je .L_426c28

            movsd XMM1,QWORD PTR [RBP]
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xor EAX,EAX
            movsd XMM6,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+56]
            subsd XMM0,XMM6
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBP+16],XMM4
            movapd XMM5,XMM0
            pxor XMM0,XMM0
            andpd XMM5,XMMWORD PTR [RIP+.L_426f10]
            ucomisd XMM2,XMM0
            seta AL
            mov DWORD PTR [RBP+56],EAX
            ja .L_426c90

            ucomisd XMM5,QWORD PTR [RIP+.L_426ef0]
            jae .L_426c40
.L_426bdb:

            divsd XMM3,XMM4
            addsd XMM3,XMM1
            movsd QWORD PTR [RBP+40],XMM3
            subsd XMM3,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+32],XMM3
.L_426bf5:

            lea RAX,QWORD PTR [RIP+.L_426970]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_426890]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4267b0]
            mov QWORD PTR [RBX+104],RAX
            mov RAX,RBX
.L_426c19:

            add RSP,72
.L_426c1d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426c28:

            add RSP,72
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_426760
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426c40:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+8]
            movapd XMM4,XMM3
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM4,XMM0
            subsd XMM6,XMM1
            divsd XMM4,XMM6
            movsd QWORD PTR [RBP+16],XMM4
            jmp .L_426bdb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426c90:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call .L_44ca40

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM2,XMM3
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RBP]
            call .L_44c7f0

            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM6,XMM0
            ucomisd XMM5,QWORD PTR [RIP+.L_426ef0]
            jae .L_426d80

            movsd XMM0,QWORD PTR [RBP+16]
.L_426cf4:

            movsd XMM3,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            movsd XMM4,QWORD PTR [RBX+336]
            divsd XMM3,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            addsd XMM3,XMM6
            movsd QWORD PTR [RBP+40],XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+48]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movapd XMM0,XMM4
            call .L_44c7f0

            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            movsd QWORD PTR [RBP+32],XMM3
            jmp .L_426bf5

            nop
            nop
            nop
.L_426d60:

            mov ESI,4294967275
            mov RDI,RBX
            call .L_415fe0

            mov RDI,RBX
            call .L_426760

            xor EAX,EAX
            jmp .L_426c19
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_426d80:

            movsd QWORD PTR [RSP+40],XMM0
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RBP+8]
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movapd XMM1,XMM5
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            call .L_44ca40

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RBP+48]
            subsd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM2,XMM5
            movapd XMM1,XMM3
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_44c7f0

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+16]
            subsd XMM0,XMM6
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+16],XMM4
            jmp .L_426cf4
.L_426e17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e20:

            test RDI,RDI
            je .L_426e30

            jmp .L_426ac0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426e30:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_426e5e

            lea RDX,QWORD PTR [RIP+.L_4267a0]
            lea RCX,QWORD PTR [RIP+.L_426ea0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_426e5e:

            add RSP,8
            ret 
.L_426e63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426e70:

            xor EAX,EAX
            ret 
.L_426e73:
          .string "rlat_1"
.L_426e7a:
          .string "rlat_2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_426ea0:

            jno .L_426f18
          .byte 0x69
          .byte 0x64
          .byte 0x69
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x43
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x26
          .byte 0x45
          .byte 0x6c
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x3d
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x32
          .byte 0x3d
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426ed8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_426ee0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_426ee8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_426ef0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426f00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426f10:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
.L_426f18:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_426f20:

            test RDI,RDI
            je .L_426f48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_426f3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_426f3e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_426f48:

            xor EAX,EAX
            ret 
.L_426f4b:

            nop
            nop
            nop
            nop
            nop
.L_426f50:

            jmp .L_426f20
.L_426f52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426f60:

            push RBX
            mov RBX,RDI
            sub RSP,16

            xorpd XMM0,XMMWORD PTR [RIP+.L_428700]
            movsd XMM1,QWORD PTR [RIP+.L_428730]
            mulsd XMM0,QWORD PTR [RIP+.L_428720]
            divsd XMM0,QWORD PTR [RIP+.L_428728]
            ucomisd XMM0,XMM1
            jb .L_426f9a

            nop
            nop
.L_426f90:

            subsd XMM0,XMM1
            ucomisd XMM0,XMM1
            jae .L_426f90
.L_426f9a:

            movsd XMM2,QWORD PTR [RIP+.L_428738]
            ucomisd XMM2,XMM0
            jb .L_426fba

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426fb0:

            addsd XMM0,XMM1
            ucomisd XMM2,XMM0
            jae .L_426fb0
.L_426fba:

            lea RDI,QWORD PTR [RSP+8]
            mov RSI,RSP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM0,QWORD PTR [RSP]
            movapd XMM2,XMM1
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM5,XMM3
            mulsd XMM2,XMM0
            mulsd XMM1,XMM4
            mulsd XMM5,XMM4
            mulsd XMM0,XMM3
            addsd XMM2,XMM5
            subsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM2
            movsd QWORD PTR [RBX+8],XMM0
            add RSP,16

            pop RBX
            ret 
.L_42700a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427010:

            divsd XMM1,QWORD PTR [RIP+.L_428740]
            movsd XMM3,QWORD PTR [RIP+.L_428748]
            movq XMM8,QWORD PTR [RIP+.L_428710]
            movsd XMM7,QWORD PTR [RIP+.L_428750]
            movapd XMM4,XMM1
            divsd XMM1,XMM0
            mulsd XMM4,XMM3
            movapd XMM6,XMM1
            subsd XMM2,XMM4
            movapd XMM9,XMM1
            addsd XMM6,XMM3
            xorpd XMM9,XMMWORD PTR [RIP+.L_428700]
            divsd XMM2,XMM0
            movapd XMM0,XMM8
            movapd XMM4,XMM6
            movapd XMM5,XMM6
            andpd XMM4,XMM8
            ucomisd XMM7,XMM4
            subsd XMM9,XMM2
            jbe .L_4270b4

            cvttsd2si RAX,XMM6
            pxor XMM4,XMM4
            movsd XMM10,QWORD PTR [RIP+.L_428758]
            andnpd XMM0,XMM6
            cvtsi2sd XMM4,RAX
            movapd XMM12,XMM4
            cmpnlesd XMM12,XMM6
            movapd XMM5,XMM12
            andpd XMM5,XMM10
            subsd XMM4,XMM5
            movapd XMM5,XMM4
            orpd XMM5,XMM0
.L_4270b4:

            movapd XMM4,XMM2
            cvttsd2si EDX,XMM5
            movapd XMM0,XMM8
            addsd XMM4,XMM3
            movapd XMM6,XMM4
            movapd XMM10,XMM4
            andpd XMM6,XMM8
            ucomisd XMM7,XMM6
            jbe .L_427116

            cvttsd2si RAX,XMM4
            pxor XMM6,XMM6
            movsd XMM11,QWORD PTR [RIP+.L_428758]
            andnpd XMM0,XMM10
            cvtsi2sd XMM6,RAX
            movapd XMM13,XMM6
            cmpnlesd XMM13,XMM4
            movapd XMM4,XMM13
            andpd XMM4,XMM11
            subsd XMM6,XMM4
            movapd XMM4,XMM6
            orpd XMM4,XMM0
.L_427116:

            addsd XMM3,XMM9
            cvttsd2si EAX,XMM4
            movapd XMM6,XMM8
            movapd XMM0,XMM3
            movapd XMM10,XMM3
            andpd XMM3,XMM8
            ucomisd XMM7,XMM3
            jbe .L_427170

            cvttsd2si RCX,XMM0
            pxor XMM3,XMM3
            andnpd XMM6,XMM10
            cvtsi2sd XMM3,RCX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM0
            movapd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_428758]
            andpd XMM0,XMM7
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            orpd XMM0,XMM6
.L_427170:

            cvttsd2si R8D,XMM0
            lea ECX,DWORD PTR [RDX+RAX*1]
            add ECX,R8D
            je .L_4271b0

            subsd XMM5,XMM1
            subsd XMM4,XMM2
            subsd XMM0,XMM9
            andpd XMM5,XMM8
            andpd XMM4,XMM8
            andpd XMM0,XMM8
            ucomisd XMM5,XMM4
            jb .L_4271d8

            ucomisd XMM5,XMM0
            jb .L_4271d8

            sub EDX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4271b0:

            test EDX,EDX
            js .L_4271f0
.L_4271b4:

            lea R8D,DWORD PTR [RDX+1]
            mov DWORD PTR [RDI],EDX
            imul EDX,EDX,100
            mov ECX,R8D
            shr ECX,31
            add ECX,R8D
            sar ECX,1
            neg ECX
            sub ECX,EAX
            add EAX,EDX
            mov DWORD PTR [RSI],ECX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4271d8:

            ucomisd XMM4,XMM5
            jb .L_4271b0

            mov R9D,EAX
            sub R9D,ECX
            ucomisd XMM4,XMM0
            cmovae EAX,R9D
            test EDX,EDX
            jns .L_4271b4
.L_4271f0:

            mov ECX,EDX
            mov DWORD PTR [RDI],EDX
            shr ECX,31
            add ECX,EDX
            sar ECX,1
            imul EDX,EDX,100
            neg ECX
            sub ECX,EAX
            mov DWORD PTR [RSI],ECX
            add EAX,EDX
            ret 
.L_427207:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427210:

            sub EDI,1
            mov EDX,1717986919
            push RBP
            mov EAX,EDI
            mov ECX,EDI
            push RBX
            imul EDX
            sar ECX,31
            mov RBX,RSI
            sub RSP,8
            mov EAX,EDX
            sar EDX,1
            sub EDX,ECX
            sar EAX,2
            sub EAX,ECX
            lea ECX,DWORD PTR [RDX+RDX*4]
            lea EAX,DWORD PTR [RAX+RAX*4]
            sub EDI,ECX
            mov ECX,EDX
            shr ECX,31
            lea EBP,DWORD PTR [RAX+RDI*1+1]
            add EDX,ECX
            and EDX,1
            sub EDX,ECX
            cmp EDX,1
            je .L_427270

            movsd XMM0,QWORD PTR [RIP+.L_428770]
            mov RDI,RSI
            call .L_426f60

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427270:

            movsd XMM0,QWORD PTR [RIP+.L_428760]
            mov RDI,RSI
            call .L_426f60

            movsd XMM0,QWORD PTR [RIP+.L_428748]
            mov EAX,EBP
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_428768]
            addsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+8],XMM0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4272ab:

            nop
            nop
            nop
            nop
            nop
.L_4272b0:

            mov EDX,DWORD PTR [RDI+4]
            mov ECX,DWORD PTR [RDI+8]
            test EDX,EDX
            js .L_4272e0

            lea ESI,DWORD PTR [RDX+1]
            neg EDX
            mov DWORD PTR [RDI],1
            mov EAX,ESI
            shr EAX,31
            add EAX,ESI
            sar EAX,1
            neg EAX
            sub EAX,ECX
            sub EDX,EAX
            mov DWORD PTR [RDI+8],EAX
            mov DWORD PTR [RDI+12],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4272e0:

            mov EAX,EDX
            mov DWORD PTR [RDI],1
            shr EAX,31
            add EAX,EDX
            neg EDX
            sar EAX,1
            neg EAX
            sub EAX,ECX
            sub EDX,EAX
            mov DWORD PTR [RDI+8],EAX
            mov DWORD PTR [RDI+12],EDX
            ret 
.L_4272fe:

            nop
            nop
.L_427300:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov EDI,ESI
            mov R13,RCX
            sub RSP,88
.L_427312:

            movdqa XMM0,XMMWORD PTR [RDX]
            lea RSI,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_427210

            mov EBX,EAX
            movabs RAX,8589934591
            movabs RDX,4294967299
            and RAX,QWORD PTR [R12+40]
            cmp RAX,RDX
            je .L_427520

            mov EAX,DWORD PTR [R12+40]
            mov EBP,DWORD PTR [R12+44]
            pxor XMM1,XMM1
            test EAX,EAX
            cvtsi2sd XMM1,EBP
            jg .L_427490
.L_427373:

            movdqa XMM0,XMMWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+32]
            movaps XMMWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM0,QWORD PTR [RIP+.L_428780]
            call .L_426f60

            movsd XMM1,QWORD PTR [RSP+8]
            lea R10,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RIP+.L_428758]
            lea RSI,QWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RSP+52]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+32]
            call .L_427010

            mov RDI,R10
            mov DWORD PTR [RSP+48],0
            call .L_4272b0

            cmp EBX,5
            jg .L_427450

            mov EDX,DWORD PTR [RSP+52]
            mov ECX,EBP
            mov EAX,DWORD PTR [RSP+60]
            neg ECX
            test EDX,EDX
            jne .L_4274c0

            cmp EAX,ECX
            je .L_427620
.L_4273f9:

            pxor XMM0,XMM0
            neg EAX
            cmp EBP,EDX
            cvtsi2sd XMM0,EAX
            je .L_4275e0
.L_42740b:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            nop
            nop
            nop
            nop
            nop
.L_427418:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            movsd QWORD PTR [R13],XMM1
            mov EAX,EBX
            movsd QWORD PTR [R13+8],XMM0
            mov DWORD PTR [R12+64],EBX
            jne .L_4276cb

            add RSP,88
.L_427443:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427450:

            mov EAX,DWORD PTR [RSP+60]
            mov EDX,DWORD PTR [RSP+52]
            test EAX,EAX
            jne .L_4274f0

            cmp EBP,EDX
            je .L_427609
.L_427468:

            add EBP,DWORD PTR [RSP+56]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,EDX
            je .L_4275f0

            neg EAX
.L_42747c:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            jmp .L_427418
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427490:

            pxor XMM0,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_428748]
            cvtsi2sd XMM0,EAX
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_428748]
            pxor XMM1,XMM1
            cvttsd2si EBP,XMM0
            cvtsi2sd XMM1,EBP
            jmp .L_427373
          .byte 0x66
          .byte 0x90
.L_4274c0:

            cmp EAX,ECX
            jne .L_4273f9

            add EBX,1
            pxor XMM0,XMM0
            cmp EBX,6
            mov EAX,1
            cmove EBX,EAX
            sub EBP,EDX
            cvtsi2sd XMM0,EBP
            pxor XMM1,XMM1
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4274f0:

            cmp EBP,EDX
            jne .L_427468

            add EBX,1
            mov EAX,6
            cmp EBX,11
            pxor XMM1,XMM1
            cmove EBX,EAX
            add EBP,DWORD PTR [RSP+56]
            cvtsi2sd XMM1,EBP
            movapd XMM0,XMM1
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427520:

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_428778]
            cvtsi2sd XMM1,DWORD PTR [R12+44]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_428758]
            lea R11,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RIP+.L_428748]
            lea RSI,QWORD PTR [RSP+56]
            addsd XMM1,XMM0
            lea RDI,QWORD PTR [RSP+52]
            mulsd XMM1,XMM2
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RSP+24]
            cvttsd2si R10D,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_428740]
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+16]
            call .L_427010

            mov RDI,R11
            mov DWORD PTR [RSP+48],0
            call .L_4272b0

            mov EAX,DWORD PTR [RSP+52]
            mov ECX,DWORD PTR [RSP+56]
            mov EDX,EAX
            sub EDX,DWORD PTR [RSP+60]
            cmp EBX,5
            lea EAX,DWORD PTR [RAX+RCX*2]
            jg .L_427600

            test EDX,EDX
            jne .L_4275c0

            cmp R10D,EAX
            je .L_427670
.L_4275c0:

            cmp R10D,EAX
            je .L_4276a8

            pxor XMM0,XMM0
            cmp R10D,EDX
            cvtsi2sd XMM0,EAX
            jne .L_42740b

            nop
            nop
            nop
            nop
            nop
            nop
.L_4275e0:

            add EBX,5
            pxor XMM1,XMM1
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4275f0:

            sub EBX,4
            movapd XMM0,XMM1
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427600:

            test EAX,EAX
            jne .L_427630

            cmp R10D,EDX
            jne .L_427630
.L_427609:

            pxor XMM0,XMM0
            mov EBX,11
            pxor XMM1,XMM1
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427620:

            xor EBX,EBX
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            jmp .L_427418
          .byte 0x90
.L_427630:

            cmp R10D,EDX
            je .L_427680

            pxor XMM1,XMM1
            cmp R10D,EAX
            cvtsi2sd XMM1,EDX
            jne .L_42747c

            lea ECX,DWORD PTR [RBX-4]
            mov EDX,3435973837
            pxor XMM0,XMM0
            mov EAX,ECX
            mul EDX
            mov EBX,EDX
            shr EBX,2
            lea EAX,DWORD PTR [RBX+RBX*4]
            sub ECX,EAX
            mov EBX,ECX
            jmp .L_427418
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427670:

            pxor XMM0,XMM0
            xor EBX,EBX
            pxor XMM1,XMM1
            jmp .L_427418
          .byte 0x90
.L_427680:

            add EBX,1
            pxor XMM1,XMM1
            cmp EBX,11
            mov EDX,6
            cmove EBX,EDX
            sub R10D,EAX
            cvtsi2sd XMM1,R10D
            pxor XMM0,XMM0
            jmp .L_427418
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4276a8:

            add EBX,1
            pxor XMM0,XMM0
            cmp EBX,6
            mov EAX,1
            cmove EBX,EAX
            sub R10D,EDX
            cvtsi2sd XMM0,R10D
            pxor XMM1,XMM1
            jmp .L_427418
.L_4276cb:

            call __stack_chk_fail@PLT
.L_4276d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,168
.L_4276e1:

            mov R14,QWORD PTR [RDI+32]
            lea RBX,QWORD PTR [RSP+104]
            lea RBP,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+96]
            mov RSI,RBP
            movsd XMM1,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [R14+8]
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM6,QWORD PTR [RIP+.L_428720]
            mov RSI,RBP
            movsd XMM4,QWORD PTR [RSP+8]
            mov RDI,RBX
            addsd XMM6,QWORD PTR [R14+16]
            movsd XMM7,QWORD PTR [R14+24]
            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM2,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            subsd XMM4,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movapd XMM4,XMM2
            mulsd XMM2,XMM3
            mulsd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,XMM6
            mulsd XMM0,XMM6
            mulsd XMM3,QWORD PTR [RSP+104]
            mulsd XMM4,XMM1
            mulsd XMM1,XMM5
            subsd XMM4,XMM0
            addsd XMM1,XMM2
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            call atan2@PLT

            addsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_428730]
            call fmod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_428720]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            jbe .L_42782a

            nop
            nop
            nop
            nop
            nop
.L_427818:

            subsd XMM1,QWORD PTR [RIP+.L_428730]
            ucomisd XMM1,QWORD PTR [RIP+.L_428720]
            ja .L_427818
.L_42782a:

            movsd XMM2,QWORD PTR [RIP+.L_4287a8]
            ucomisd XMM2,XMM1
            jbe .L_42784e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427840:

            addsd XMM1,QWORD PTR [RIP+.L_428730]
            ucomisd XMM2,XMM1
            ja .L_427840
.L_42784e:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call asin@PLT

            movsd XMM3,QWORD PTR [RIP+.L_428720]
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            subsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM0,QWORD PTR [RIP+.L_428720]
            addsd XMM0,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_428720]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_428730]
            call fmod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_428720]
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            jbe .L_4278e8
.L_4278c0:

            subsd XMM3,QWORD PTR [RIP+.L_428730]
            ucomisd XMM3,QWORD PTR [RIP+.L_428720]
            ja .L_4278c0

            ucomisd XMM2,XMM3
            jbe .L_4278ee

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4278e0:

            addsd XMM3,QWORD PTR [RIP+.L_428730]
.L_4278e8:

            ucomisd XMM2,XMM3
            ja .L_4278e0
.L_4278ee:

            movsd XMM0,QWORD PTR [RSP+88]
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM3
            lea R12,QWORD PTR [RIP+.L_65f4f0]
            mov R13D,1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+96]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+56],XMM3
.L_427936:

            movsd XMM0,QWORD PTR [R12+8]
            mov RSI,RBP
            mov RDI,RBX
            mov R15D,R13D
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+96]
            mov RDI,RBX
            subsd XMM5,QWORD PTR [R12]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM6
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+96]
            mulsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+48],XMM5
            mulsd XMM0,XMM3
            addsd XMM0,XMM1
            call acos@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_4287b0]
            movsd XMM3,QWORD PTR [RSP+24]
            jbe .L_427a20
.L_4279cb:

            add R13,1
            add R12,16
            cmp R13,21
            jne .L_427936

            movsd XMM1,QWORD PTR [RIP+.L_428810]
            mov RDI,QWORD PTR [RIP+stderr]
            movsd XMM3,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_428558]
            mov ESI,1
            mov EAX,2
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RSP+88]
            movapd XMM0,XMM3
            call __fprintf_chk@PLT

            mov EDI,1
            call exit@PLT
.L_427a20:

            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RSP+80],XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM2,XMM3
            mulsd XMM0,XMM7
            subsd XMM1,XMM2
            call atan2@PLT

            lea RAX,QWORD PTR [RIP+.L_428620]
            lea RCX,QWORD PTR [RIP+.L_65f640]
            movsd QWORD PTR [RSP+72],XMM0
            mov RSI,RBP
            mov RDI,RBX
            movsxd RAX,DWORD PTR [RAX+R13*4]
            shl RAX,4
            add RAX,RCX
            movsd XMM0,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+64],RAX
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+96]
            mov RSI,RBP
            movsd XMM6,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM0,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            call sincos@PLT

            mov RAX,QWORD PTR [RSP+64]
            mov RSI,RBP
            mov RDI,RBX
            movsd XMM1,QWORD PTR [RSP+96]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,QWORD PTR [R12]
            movsd QWORD PTR [RSP+24],XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            mulsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RSP+104]
            mulsd XMM3,QWORD PTR [RSP+96]
            movapd XMM0,XMM4
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            pxor XMM7,XMM7
            subsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+80]
            ucomisd XMM7,XMM2
            jbe .L_427b40

            addsd XMM2,QWORD PTR [RIP+.L_428730]
.L_427b40:

            pxor XMM6,XMM6
            xor EAX,EAX
            movsd XMM4,QWORD PTR [RIP+.L_4287b8]
            ucomisd XMM6,XMM2
            jbe .L_427ef0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427b60:

            addsd XMM2,QWORD PTR [RIP+.L_4287b8]
            pxor XMM7,XMM7
            sub EAX,1
            ucomisd XMM7,XMM2
            ja .L_427b60

            ucomisd XMM2,XMM4
            jbe .L_427b8d

            nop
            nop
            nop
            nop
            nop
.L_427b80:

            subsd XMM2,XMM4
            add EAX,1
.L_427b87:

            ucomisd XMM2,XMM4
            ja .L_427b80
.L_427b8d:

            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM5
            mov DWORD PTR [RSP+64],EAX
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+48],XMM2
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+104]
            movsd XMM1,QWORD PTR [RIP+.L_4287c0]
            movsd XMM8,QWORD PTR [RSP+96]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            movsd XMM0,QWORD PTR [RIP+.L_4287c8]
            movsd QWORD PTR [RSP+16],XMM8
            addsd XMM1,XMM8
            call atan2@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4287d0]
            movsd XMM5,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            ucomisd XMM5,XMM1
            ja .L_4279cb

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RSP+16]
            mulsd XMM6,QWORD PTR [RIP+.L_4287d8]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM8,QWORD PTR [RIP+.L_4287e8]
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM0,QWORD PTR [RIP+.L_4287e0]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM4
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM2
            subsd XMM0,XMM8
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_4287f8]
            addsd XMM2,QWORD PTR [RIP+.L_4287f0]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_4287c0]
            subsd XMM0,QWORD PTR [RIP+.L_428720]
            addsd XMM0,XMM0
            mulsd XMM2,XMM0
            subsd XMM1,XMM2
            call atan2@PLT

            mov RSI,RBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RIP+.L_428748]
            mulsd XMM0,XMM7
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_428748]
            mulsd XMM0,XMM5
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4287c0]
            mov EAX,DWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RIP+.L_428800]
            mov RSI,RBP
            mulsd XMM2,QWORD PTR [RSP+104]
            mov RDI,RBX
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM2,QWORD PTR [RSP+96]
            divsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_428808]
            mulsd XMM6,XMM2
            divsd XMM1,XMM6
            mulsd XMM1,XMM2
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [R14+56]
            movsd XMM0,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [R14+48]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+96]
            cmp EAX,4
            mov DWORD PTR [R14+60],R15D
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+120],XMM1
            je .L_427fc0

            divsd XMM0,XMM3
            cmp EAX,8
            divsd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_428828]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_428748]
            addsd XMM1,QWORD PTR [RIP+.L_428830]
            movsd QWORD PTR [RSP+112],XMM0
            movsd QWORD PTR [RSP+120],XMM1
            ja .L_427ea0

            lea RDX,QWORD PTR [RIP+.L_4285a0]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_427ddb:

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtsi2sd XMM0,DWORD PTR [R14+40]
            cvtsi2sd XMM1,DWORD PTR [R14+44]
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_428748]
            cmp EBX,11
            cvttsd2si EAX,XMM0
            je .L_428099

            mov ECX,DWORD PTR [R14+40]
            sub EBX,1
            mov EDX,DWORD PTR [R14+44]
            imul EBX,EAX
            cmp ECX,3
            jne .L_427e32

            mov ESI,EDX
            shr ESI,31
            lea EAX,DWORD PTR [RDX+RSI*1]
            and EAX,1
            sub EAX,ESI
            cmp EAX,1
            je .L_4280bd
.L_427e32:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            cvtsi2sd XMM1,EDX
            cvtsi2sd XMM0,ECX
            mulsd XMM1,QWORD PTR [RIP+.L_428748]
            call pow@PLT

            movapd XMM2,XMM0
            pxor XMM3,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_428748]
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            cvtsi2sd XMM3,EBX
            cvttsd2si EAX,XMM2
            pxor XMM2,XMM2
            cvtsi2sd XMM2,EAX
            mulsd XMM2,XMM0
            addsd XMM2,XMM3
            addsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_428778]
            cvttsd2si EAX,XMM2
.L_427e99:

            cdqe 
            mov QWORD PTR [R14+72],RAX
            nop
.L_427ea0:

            mov RAX,QWORD PTR [RSP+152]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42810e

            add RSP,168
.L_427ebe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427ed0:

            lea RSI,QWORD PTR [RSP+112]
            mov EDI,R15D
            call .L_427210

            movsd XMM1,QWORD PTR [RSP+120]
            mov DWORD PTR [R14+64],EAX
            movsd XMM0,QWORD PTR [RSP+112]
            jmp .L_427ea0
          .byte 0x90
.L_427ef0:

            movsd XMM4,QWORD PTR [RIP+.L_4287b8]
            jmp .L_427b87
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427f00:

            lea RDX,QWORD PTR [RSP+112]
            lea RCX,QWORD PTR [RSP+128]
            mov ESI,R15D
            mov RDI,R14
            call .L_427300

            cvttsd2si EDX,QWORD PTR [RSP+128]
            pxor XMM0,XMM0
            shl EDX,4
            add EAX,EDX
            movsd XMM1,QWORD PTR [RSP+136]
            cvtsi2sd XMM0,EAX
            jmp .L_427ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427f40:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RSP+112]
            mov ESI,R15D
            mov RDI,R14
            call .L_427300

            mov DWORD PTR [R14+64],EAX
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            jmp .L_427ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427f78:

            lea RCX,QWORD PTR [RSP+128]
            lea RDX,QWORD PTR [RSP+112]
            mov ESI,R15D
            mov RDI,R14
            call .L_427300

            mov EBX,DWORD PTR [R14+64]
            test EBX,EBX
            jne .L_427ddb

            mov QWORD PTR [R14+72],1
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+128]
            jmp .L_427ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427fc0:

            sub R15D,1
            mov EDX,3435973837
            mov EAX,R15D
            mul EDX
            shr EDX,2
            test DL,1
            mov EBX,EDX
            jne .L_42806a
.L_427fdc:

            mov EAX,R15D
            mov EDX,3435973837
            mov ECX,R15D
            mul EDX
            pxor XMM2,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_428818]
            shr EDX,2
            lea EAX,DWORD PTR [RDX+RDX*4]
            sub ECX,EAX
            mov EAX,ECX
            sub EAX,2
            cmp R15D,9
            cvtsi2sd XMM2,EAX
            mulsd XMM2,XMM4
            addsd XMM2,XMM2
            jle .L_428018

            addsd XMM2,XMM4
.L_428018:

            cmp EBX,2
            je .L_428060

            cmp EBX,3
            je .L_428056

            cmp EBX,1
            je .L_42804c

            movsd XMM4,QWORD PTR [RIP+.L_428788]
.L_42802f:

            mulsd XMM2,QWORD PTR [RIP+.L_428820]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM4
            addsd XMM0,XMM2
            addsd XMM1,XMM3
            jmp .L_427ea0
.L_42804c:

            movsd XMM4,QWORD PTR [RIP+.L_428790]
            jmp .L_42802f
.L_428056:

            movsd XMM4,QWORD PTR [RIP+.L_4287a0]
            jmp .L_42802f
.L_428060:

            movsd XMM4,QWORD PTR [RIP+.L_428798]
            jmp .L_42802f
.L_42806a:

            movsd XMM0,QWORD PTR [RIP+.L_428728]
            lea RDI,QWORD PTR [RSP+112]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_426f60

            movsd XMM0,QWORD PTR [RSP+112]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_427fdc
.L_428099:

            lea EAX,DWORD PTR [RAX+RAX*4]
            movsd XMM1,QWORD PTR [RSP+136]
            movsd XMM0,QWORD PTR [RSP+128]
            lea EAX,DWORD PTR [RAX+RAX*1+2]
            cdqe 
            mov QWORD PTR [R14+72],RAX
            jmp .L_427ea0
.L_4280bd:

            pxor XMM1,XMM1
            sub EDX,1
            movsd XMM0,QWORD PTR [RIP+.L_428838]
            cvtsi2sd XMM1,EDX
            mulsd XMM1,QWORD PTR [RIP+.L_428748]
            call pow@PLT

            cvttsd2si ECX,XMM0
            movsd XMM0,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+136]
            cvttsd2si EAX,XMM0
            imul EAX,ECX
            mov ESI,EAX
            cvttsd2si EAX,XMM1
            cdq 
            idiv ECX
            add EAX,ESI
            lea EAX,DWORD PTR [RAX+RBX*1+2]
            jmp .L_427e99
.L_42810e:

            call __stack_chk_fail@PLT
.L_428113:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428120:

            push RBP
            push RBX
            mov ESI,80
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_428133:

            call .L_403c70

            test RAX,RAX
            je .L_4284a5

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            lea RAX,QWORD PTR [RIP+.L_4276d0]
            lea RDX,QWORD PTR [RIP+.L_428674]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,QWORD PTR [RIP+.L_428840]
            mov QWORD PTR [RBP+44],6
            mov DWORD PTR [RBP],20
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_428848]
            mov QWORD PTR [RBP+16],RAX
            movabs RAX,17179869190
            mov QWORD PTR [RBP+36],RAX
            add RAX,1072693242
            mov QWORD PTR [RBP+52],RAX
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            call .L_4043f0

            test RAX,RAX
            je .L_428208

            lea RDI,QWORD PTR [RIP+.L_42867c]
            mov ECX,5
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_428340

            lea RDI,QWORD PTR [RIP+.L_428681]
            mov RSI,RAX
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428498

            mov RAX,QWORD PTR [RIP+.L_428850]
            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
.L_428208:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428686]
            call .L_4043f0

            test EAX,EAX
            jne .L_4283b8
.L_428223:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428690]
            call .L_4043f0

            test EAX,EAX
            jne .L_428438
.L_42823e:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42869e]
            call .L_4043f0

            test EAX,EAX
            jne .L_428418
.L_428259:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286ac]
            call .L_4043f0

            test EAX,EAX
            jne .L_4283f8
.L_428274:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286c0]
            call .L_4043f0

            test EAX,EAX
            jne .L_4283d8
.L_42828f:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286d8]
            call .L_4043f0

            test RAX,RAX
            je .L_4282cd

            lea RDI,QWORD PTR [RIP+.L_4286de]
            mov ECX,6
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_428368

            mov DWORD PTR [RBP+56],4
.L_4282cd:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286ee]
            call .L_4043f0

            test EAX,EAX
            je .L_4282ef

            mov RAX,QWORD PTR [RIP+.L_428828]
            mov QWORD PTR [RBP+48],RAX
.L_4282ef:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286c0]
            call .L_4043f0

            test EAX,EAX
            jne .L_428458

            mov DWORD PTR [RBP+44],4
.L_428311:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286ac]
            call .L_4043f0

            test EAX,EAX
            jne .L_4284c8

            mov DWORD PTR [RBP+40],3
            add RSP,8
.L_428337:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428340:

            mov RAX,QWORD PTR [RIP+.L_428840]
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RIP+.L_428848]
            mov QWORD PTR [RBP+16],RAX
            jmp .L_428208
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428368:

            lea RDI,QWORD PTR [RIP+.L_4286e4]
            mov ECX,3
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_4284b8

            lea RDI,QWORD PTR [RIP+.L_4286e7]
            mov ECX,3
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_428478

            mov DWORD PTR [RBP+56],5
            jmp .L_4282cd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4283b8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42868b]
            call .L_4043f0

            mov QWORD PTR [RBP+24],RAX
            jmp .L_428223
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4283d8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286cc]
            call .L_4043f0

            mov DWORD PTR [RBP+44],EAX
            jmp .L_42828f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4283f8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286b6]
            call .L_4043f0

            mov DWORD PTR [RBP+40],EAX
            jmp .L_428274
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428418:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286a5]
            call .L_4043f0

            mov QWORD PTR [RBP+8],RAX
            jmp .L_428259
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428438:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_428697]
            call .L_4043f0

            mov QWORD PTR [RBP+16],RAX
            jmp .L_42823e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428458:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286cc]
            call .L_4043f0

            mov DWORD PTR [RBP+44],EAX
            jmp .L_428311
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428478:

            lea RDI,QWORD PTR [RIP+.L_4286ea]
            mov RSI,RAX
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_4284f0

            nop
            nop
            nop
            nop
            nop
            nop
.L_428498:

            mov ESI,4294967262
            mov RDI,RBX
            call .L_415fe0
.L_4284a5:

            add RSP,8
.L_4284a9:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_426f20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4284b8:

            mov DWORD PTR [RBP+56],1
            jmp .L_4282cd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4284c8:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4286b6]
            call .L_4043f0

            mov DWORD PTR [RBP+40],EAX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4284f0:

            mov DWORD PTR [RBP+56],8
            jmp .L_4282cd
.L_4284fc:

            nop
            nop
            nop
            nop
.L_428500:

            test RDI,RDI
            je .L_428510

            jmp .L_428120
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428510:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42853e

            lea RDX,QWORD PTR [RIP+.L_426f50]
            lea RCX,QWORD PTR [RIP+.L_4285e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42853e:

            add RSP,8
            ret 
.L_428543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428550:

            xor EAX,EAX
            ret 
.L_428553:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428558:
          .string "impossible transform: %f %f is not on any triangle\n"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4285a0:
          .long .L_427ea0-.L_4285a0
          .long .L_427f40-.L_4285a0
          .long .L_427f78-.L_4285a0
          .long .L_427ea0-.L_4285a0
          .long .L_427ea0-.L_4285a0
          .long .L_427ed0-.L_4285a0
          .long .L_427ea0-.L_4285a0
          .long .L_427ed0-.L_4285a0
          .long .L_427f00-.L_4285a0
          .zero 28
.L_4285e0:
          .string "Icosahedral Snyder Equal Area\n\tSph"
          .zero 29
.L_428620:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428674:
          .string "sorient"
.L_42867c:
          .byte 0x69
          .byte 0x73
          .byte 0x65
          .byte 0x61
          .byte 0x0
.L_428681:
          .byte 0x70
          .byte 0x6f
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_428686:
          .string "tazi"
.L_42868b:
          .string "razi"
.L_428690:
          .string "tlon_0"
.L_428697:
          .string "rlon_0"
.L_42869e:
          .string "tlat_0"
.L_4286a5:
          .string "rlat_0"
.L_4286ac:
          .string "taperture"
.L_4286b6:
          .string "iaperture"
.L_4286c0:
          .string "tresolution"
.L_4286cc:
          .string "iresolution"
.L_4286d8:
          .string "smode"
.L_4286de:
          .string "plane"
.L_4286e4:
          .byte 0x64
          .byte 0x69
          .byte 0x0
.L_4286e7:
          .byte 0x64
          .byte 0x64
          .byte 0x0
.L_4286ea:
          .byte 0x68
          .byte 0x65
          .byte 0x78
          .byte 0x0
.L_4286ee:
          .string "trescale"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428700:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428710:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428720:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_428728:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x66
          .byte 0x40
.L_428730:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_428738:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0xc0
.L_428740:
          .byte 0xab
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_428748:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_428750:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_428758:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_428760:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x40
.L_428768:
          .byte 0xaa
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_428770:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_428778:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_428780:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xc0
.L_428788:
          .byte 0xba
          .byte 0x86
          .byte 0x3c
          .byte 0x58
          .byte 0x9f
          .byte 0xd1
          .byte 0xeb
          .byte 0x3f
.L_428790:
          .byte 0x2e
          .byte 0xd2
          .byte 0x96
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xc6
          .byte 0x3f
.L_428798:
          .byte 0x2e
          .byte 0xd2
          .byte 0x96
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xc6
          .byte 0xbf
.L_4287a0:
          .byte 0xba
          .byte 0x86
          .byte 0x3c
          .byte 0x58
          .byte 0x9f
          .byte 0xd1
          .byte 0xeb
          .byte 0xbf
.L_4287a8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_4287b0:
          .byte 0xf8
          .byte 0x1c
          .byte 0xce
          .byte 0xa9
          .byte 0x28
          .byte 0xe0
          .byte 0xe4
          .byte 0x3f
.L_4287b8:
          .byte 0x66
          .byte 0x73
          .byte 0x2d
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x0
          .byte 0x40
.L_4287c0:
          .byte 0xab
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0x3f
.L_4287c8:
          .byte 0x95
          .byte 0xb5
          .byte 0x9d
          .byte 0x91
          .byte 0x21
          .byte 0x72
          .byte 0xe8
          .byte 0x3f
.L_4287d0:

            int1 
          .byte 0x68
          .byte 0xe3
          .byte 0x88
          .byte 0xb5
          .byte 0xf8
          .byte 0xd4
          .byte 0x3e
.L_4287d8:
          .byte 0x5e
          .byte 0x5a
          .byte 0x75
          .byte 0x4
          .byte 0x23
          .byte 0xcf
          .byte 0xe2
          .byte 0x3f
.L_4287e0:
          .byte 0x22
          .byte 0x92
          .byte 0x44
          .byte 0x37
          .byte 0xcf
          .byte 0x6d
          .byte 0xe9
          .byte 0x3f
.L_4287e8:
          .byte 0xa8
          .byte 0xf4
          .byte 0x97
          .byte 0x9b
          .byte 0x77
          .byte 0xe3
          .byte 0xe9
          .byte 0x3f
.L_4287f0:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
.L_4287f8:

            popfq 
            mov WORD PTR [RDI+RDI*1-100],FS
            hlt 
          .byte 0xde
          .byte 0x3f
.L_428800:
          .byte 0xde
          .byte 0x1c
          .byte 0xa1
          .byte 0x46
          .byte 0x4c
          .byte 0x41
          .byte 0xe6
          .byte 0x3f
.L_428808:
          .byte 0x2f
          .byte 0x3
          .byte 0xa0
          .byte 0x1e
          .byte 0xdc
          .byte 0x21
          .byte 0xfd
          .byte 0x3f
.L_428810:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_428818:
          .byte 0x53
          .byte 0x35
          .byte 0x71
          .byte 0x56
          .byte 0xb3
          .byte 0x2b
          .byte 0xe5
          .byte 0x3f
.L_428820:
          .byte 0x2f
          .byte 0x3
          .byte 0xa0
          .byte 0x1e
          .byte 0xdc
          .byte 0x21
          .byte 0xed
          .byte 0x3f
.L_428828:
          .byte 0xa3
          .byte 0x46
          .byte 0x1f
          .byte 0x3
          .byte 0xa6
          .byte 0x90
          .byte 0xea
          .byte 0x3f
.L_428830:
          .byte 0x1c
          .byte 0x33
          .byte 0x90
          .byte 0x45
          .byte 0xa7
          .byte 0x79
          .byte 0xd2
          .byte 0x3f
.L_428838:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_428840:
          .byte 0x8d
          .byte 0xe
          .byte 0xd0
          .byte 0x8a
          .byte 0x8a
          .byte 0x46
          .byte 0xf0
          .byte 0x3f
.L_428848:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xc9
          .byte 0x3f
.L_428850:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428860:

            test RDI,RDI
            je .L_428898

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_428890

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+96]
            test RDI,RDI
            je .L_428884

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_428884:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_428890:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428898:

            xor EAX,EAX
            ret 
.L_42889b:

            nop
            nop
            nop
            nop
            nop
.L_4288a0:

            jmp .L_428860
.L_4288a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4288b0:

            pxor XMM3,XMM3
            movapd XMM2,XMM1
            movapd XMM5,XMM0
            ucomisd XMM1,XMM3
            jp .L_4288d0

            pxor XMM1,XMM1
            jne .L_4288d0

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4288d0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            mov R12,RDX
            sub RSP,96
.L_4288e5:

            lea R13,QWORD PTR [RSP+88]
            lea R14,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+56],XMM3
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RBX+96]
            movsd XMM2,QWORD PTR [RSP+80]
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+40],XMM6
            movsd XMM0,QWORD PTR [RSP+8]
            call .L_44c7f0

            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RBX]
            mulsd XMM2,XMM0
            mulsd XMM0,QWORD PTR [RBX+16]
            addsd XMM2,QWORD PTR [RBX+8]
            addsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            call tan@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RBP]
            movapd XMM4,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4295c0]
            mulsd XMM1,XMM6
            movapd XMM0,XMM7
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM1,XMM6
            subsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM1,XMM0
            ja .L_428c89
.L_4289b4:

            mulsd XMM4,XMM1
            movapd XMM1,XMM7
            mulsd XMM2,XMM2
            divsd XMM1,XMM4
            movapd XMM6,XMM1
            mulsd XMM6,XMM1
            movapd XMM0,XMM6
            subsd XMM0,XMM2
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_428cdb
.L_4289e2:

            ucomisd XMM3,QWORD PTR [RSP+8]
            jbe .L_4289f2

            xorpd XMM2,XMMWORD PTR [RIP+.L_429610]
.L_4289f2:

            mov EBP,DWORD PTR [RBX+104]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RBX+64]
            subsd XMM0,XMM1
            test EBP,EBP
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            js .L_428b58

            movsd XMM0,QWORD PTR [RSP+16]
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+72],XMM7
            mulsd XMM0,QWORD PTR [RBX+56]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            test EBP,EBP
            movsd XMM8,QWORD PTR [RBX+40]
            movapd XMM0,XMM7
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+56]
            subsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM2,XMM8
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+64]
            mulsd XMM0,XMM8
            addsd XMM4,XMM0
            je .L_428b5e

            pxor XMM0,XMM0
            mov QWORD PTR [R12],0
            movsd XMM5,QWORD PTR [RSP+32]
.L_428aac:

            subsd XMM4,XMM0
            subsd XMM2,XMM5
            addsd XMM1,QWORD PTR [RSP+24]
            divsd XMM2,XMM4
            movapd XMM4,XMM1
            subsd XMM4,XMM0
            movapd XMM0,XMM6
            mulsd XMM4,XMM2
            addsd XMM4,XMM5
            movapd XMM5,XMM2
            mulsd XMM5,XMM2
            addsd XMM5,XMM7
            movapd XMM7,XMM4
            mulsd XMM7,XMM4
            mulsd XMM0,XMM5
            subsd XMM0,XMM7
            ucomisd XMM3,XMM0
            sqrtsd XMM7,XMM0
            ja .L_428c2b
.L_428afc:

            mulsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM3
            jbe .L_428bf0

            subsd XMM4,XMM2
            divsd XMM4,XMM5
            movapd XMM0,XMM4
            movapd XMM5,XMM4
            mulsd XMM0,XMM4
            subsd XMM6,XMM0
            ucomisd XMM3,XMM6
            sqrtsd XMM2,XMM6
            ja .L_428d2d
.L_428b36:

            xorpd XMM2,XMMWORD PTR [RIP+.L_429610]
.L_428b3e:

            add RSP,96
.L_428b42:

            addsd XMM1,XMM2
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428b58:

            movsd XMM2,QWORD PTR [RSP+16]
.L_428b5e:

            movsd XMM0,QWORD PTR [RSP+16]
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+72],XMM7
            mulsd XMM0,QWORD PTR [RBX+48]
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM8,QWORD PTR [RBX+32]
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+64]
            subsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM5,XMM8
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,XMM8
            movsd QWORD PTR [R12],XMM0
            jmp .L_428aac

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428bf0:

            addsd XMM4,XMM2
            divsd XMM4,XMM5
            movapd XMM0,XMM4
            movapd XMM5,XMM4
            mulsd XMM0,XMM4
            subsd XMM6,XMM0
            ucomisd XMM3,XMM6
            sqrtsd XMM2,XMM6
            ja .L_428d2d
.L_428c16:

            movsd XMM6,QWORD PTR [RSP+8]
            ucomisd XMM6,XMM3
            jbe .L_428b3e

            jmp .L_428b36
.L_428c2b:

            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_428afc
.L_428c89:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_4289b4
.L_428cdb:

            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            jmp .L_4289e2
.L_428d2d:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            jmp .L_428c16
.L_428d6b:

            nop
            nop
            nop
            nop
            nop
.L_428d70:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            lea R14,QWORD PTR [R12+176]
            mov EBX,1000
            sub RSP,48
.L_428d8c:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+32],0
            lea R13,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            movsd XMM2,QWORD PTR [RBP+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP]
            divsd XMM3,XMM0
            jmp .L_428ded
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428de8:

            mov RDI,QWORD PTR [R12+32]
.L_428ded:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            mov RDX,R13
            mov RSI,R14
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_4288b0

            movsd XMM7,QWORD PTR [RSP+24]
            sub EBX,1
            movsd XMM4,QWORD PTR [RBP+72]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM6,XMM7
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM6,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM4
            mulsd XMM2,XMM6
            movapd XMM6,XMM1
            subsd XMM6,XMM5
            divsd XMM2,XMM6
            addsd XMM2,XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            divsd XMM3,XMM0
            je .L_428eb3

            subsd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_429620]
            ucomisd XMM0,QWORD PTR [RIP+.L_4295d0]
            ja .L_428de8

            subsd XMM1,XMM7
            andpd XMM1,XMMWORD PTR [RIP+.L_429620]
            ucomisd XMM1,QWORD PTR [RIP+.L_4295d0]
            ja .L_428de8
.L_428e8e:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM3
            movapd XMM1,XMM2
            jne .L_428ec1

            add RSP,48
.L_428eaa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_428eb3:

            movsd XMM2,QWORD PTR [RIP+.L_4295c8]
            movapd XMM3,XMM2
            jmp .L_428e8e
.L_428ec1:

            call __stack_chk_fail@PLT
.L_428ec6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428ed0:

            sub RSP,24
            lea RSI,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI+32]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4288b0

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428f0c

            add RSP,24
            ret 
.L_428f0c:

            call __stack_chk_fail@PLT
.L_428f11:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428f20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov RBP,R8
            mov R12,RDX
            mov R13,RCX
            mov RBX,R9
            sub RSP,56
.L_428f40:

            movsd QWORD PTR [RSP+16],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [R15]
            pxor XMM4,XMM4
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4295c0]
            movapd XMM5,XMM1
            subsd XMM5,XMM0
            ucomisd XMM4,XMM5
            sqrtsd XMM3,XMM5
            ja .L_42900d
.L_428f9a:

            mulsd XMM2,XMM3
            movapd XMM6,XMM1
            mov RDX,QWORD PTR [R14]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            divsd XMM6,XMM2
            movsd QWORD PTR [RBX],XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM0,QWORD PTR [RDX+88]
            mulsd XMM0,QWORD PTR [RBP]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM1,XMM2
            movsd QWORD PTR [R13],XMM1
            mulsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [R12],XMM0
            add RSP,56
.L_429002:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42900d:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_428f9a
.L_42903f:

            nop
.L_429040:

            push R12
            push RBP
            mov ESI,112
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,96
.L_429055:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_403c70

            test RAX,RAX
            je .L_42939d

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_44c700

            test RAX,RAX
            mov QWORD PTR [RBP+96],RAX
            je .L_42939d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429523]
            mov R12,QWORD PTR [RBX+32]
            call .L_4043f0

            test EAX,EAX
            je .L_429390

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42952a]
            call .L_4043f0

            test EAX,EAX
            je .L_429390

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429531]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429538]
            mov QWORD PTR [R12+72],RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [R12+72]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_4295f0]
            movapd XMM1,XMM0
            movsd QWORD PTR [R12+80],XMM0
            subsd XMM0,XMM3
            addsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4295d0]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movq XMM2,QWORD PTR [RIP+.L_429620]
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            ja .L_429470

            movapd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            ja .L_429470

            movsd XMM3,QWORD PTR [RBP+80]
            movsd XMM0,QWORD PTR [RBP+72]
            ucomisd XMM0,XMM3
            jbe .L_429178

            movsd QWORD PTR [RBP+72],XMM3
            movsd QWORD PTR [RBP+80],XMM0
.L_429178:

            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_42953f]
            movsd QWORD PTR [RSP+8],XMM1
            mov RDI,QWORD PTR [RBX]
            movaps XMMWORD PTR [RSP+16],XMM2
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMMWORD PTR [RSP+16]
            jne .L_4293f0

            mulsd XMM1,QWORD PTR [RIP+.L_4295f8]
            movsd XMM0,QWORD PTR [RIP+.L_4295d8]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_429600]
            ucomisd XMM2,XMM1
            jb .L_4293c8
.L_4291d0:

            movsd QWORD PTR [RBP+88],XMM0
.L_4291d5:

            pxor XMM7,XMM7
            mov DWORD PTR [RBP+104],0
            movsd XMM0,QWORD PTR [RBP+72]
            ucomisd XMM0,XMM7
            jp .L_429440

            jne .L_429440

            movsd XMM0,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+104],1
            mov QWORD PTR [RSP+80],0
            movsd QWORD PTR [RSP+56],XMM0
.L_429210:

            pxor XMM6,XMM6
            movsd XMM0,QWORD PTR [RBP+80]
            ucomisd XMM0,XMM6
            jp .L_429410

            jne .L_429410

            movsd XMM0,QWORD PTR [RBP+88]
            mov DWORD PTR [RBP+104],4294967295
            mov QWORD PTR [RSP+72],0
            movsd QWORD PTR [RSP+64],XMM0
.L_429244:

            movsd XMM3,QWORD PTR [RBP+72]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+96]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBP+48]
            movapd XMM0,XMM3
            call .L_44c7f0

            movsd XMM3,QWORD PTR [RBP+80]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP+96]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RBP+56]
            movapd XMM0,XMM3
            call .L_44c7f0

            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM9,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM5,XMM7
            movapd XMM1,XMM0
            subsd XMM9,XMM4
            pxor XMM6,XMM6
            subsd XMM5,XMM8
            movapd XMM0,XMM9
            movapd XMM2,XMM5
            mulsd XMM0,XMM9
            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM2,XMM0
            ja .L_42947a
.L_4292fc:

            movsd XMM6,QWORD PTR [RSP+80]
            lea RAX,QWORD PTR [RIP+.L_428ed0]
            movsd XMM3,QWORD PTR [RIP+.L_4295c0]
            addsd XMM2,XMM6
            divsd XMM3,XMM9
            movapd XMM9,XMM4
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBP+64],XMM0
            movapd XMM0,XMM6
            mulsd XMM9,XMM2
            subsd XMM2,XMM6
            mulsd XMM0,XMM1
            mulsd XMM4,XMM7
            mulsd XMM1,XMM8
            mulsd XMM2,XMM3
            subsd XMM0,XMM9
            subsd XMM1,XMM4
            movsd QWORD PTR [RBP+16],XMM2
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM3,XMM5
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RBP+24],XMM3
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_428d70]
            mov QWORD PTR [RBX+48],RAX
            mov RAX,RBX
            jmp .L_4293a5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429390:

            mov ESI,4294967255
.L_429395:

            mov RDI,RBX
            call .L_415fe0
.L_42939d:

            mov RDI,RBX
            call .L_428860
.L_4293a5:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4294c6

            add RSP,96
.L_4293bd:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4293c8:

            movsd XMM2,QWORD PTR [RIP+.L_429608]
            movsd XMM0,QWORD PTR [RIP+.L_4295e0]
            ucomisd XMM2,XMM1
            jae .L_4291d0

            movsd XMM0,QWORD PTR [RIP+.L_4295e8]
            jmp .L_4291d0
          .byte 0x90
.L_4293f0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429546]
            call .L_4043f0

            mov QWORD PTR [RBP+88],RAX
            jmp .L_4291d5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429410:

            lea RCX,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBX+176]
            lea RDI,QWORD PTR [RBX+32]
            lea R9,QWORD PTR [RBP+40]
            lea R8,QWORD PTR [RBP+56]
            call .L_428f20

            jmp .L_429244
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429440:

            lea RCX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RBX+176]
            lea RDI,QWORD PTR [RBX+32]
            lea R9,QWORD PTR [RBP+32]
            lea R8,QWORD PTR [RBP+48]
            call .L_428f20

            jmp .L_429210
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429470:

            mov ESI,4294967254
            jmp .L_429395
.L_42947a:

            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM5,XMM7
            movsd XMM9,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            subsd XMM5,XMM8
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4292fc
.L_4294c6:

            call __stack_chk_fail@PLT
.L_4294cb:

            nop
            nop
            nop
            nop
            nop
.L_4294d0:

            test RDI,RDI
            je .L_4294e0

            jmp .L_429040
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4294e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42950e

            lea RDX,QWORD PTR [RIP+.L_4288a0]
            lea RCX,QWORD PTR [RIP+.L_429560]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42950e:

            add RSP,8
            ret 
.L_429513:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429520:

            xor EAX,EAX
            ret 
.L_429523:
          .string "tlat_1"
.L_42952a:
          .string "tlat_2"
.L_429531:
          .string "rlat_1"
.L_429538:
          .string "rlat_2"
.L_42953f:
          .string "tlon_1"
.L_429546:
          .string "rlon_1"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429560:
          .string "International Map of the World Polyconic\n\tMod. Polyconic, Ell\n\tlat_1= and lat_2= [lon_1=]"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4295c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4295c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_4295d0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4295d8:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xa1
          .byte 0x3f
.L_4295e0:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xb1
          .byte 0x3f
.L_4295e8:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0xc1
          .byte 0x3f
.L_4295f0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4295f8:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_429600:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_429608:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x40
.L_429610:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429620:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429630:

            test RDI,RDI
            je .L_429658

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42964e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42964e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429658:

            xor EAX,EAX
            ret 
.L_42965b:

            nop
            nop
            nop
            nop
            nop
.L_429660:

            jmp .L_429630
.L_429662:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429670:

            push R12
            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,64
.L_42967c:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM1,QWORD PTR [RDI+168]
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_429f50]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RBX]
            movapd XMM5,XMM0
            addsd XMM5,XMM4
            subsd XMM4,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_429f48]
            divsd XMM5,XMM4
            movapd XMM0,XMM5
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RIP+.L_429f58]
            mulsd XMM2,QWORD PTR [RIP+.L_429f48]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM6,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM7,XMM2
            movapd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_429f58]
            mov RSI,R12
            mov RDI,RBP
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R12
            movsd XMM0,QWORD PTR [RBX]
            mov RDI,RBP
            xorpd XMM3,XMMWORD PTR [RIP+.L_429fd0]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+48]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RSP+40],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RIP+.L_429f60]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RIP+.L_429f58]
            mulsd XMM2,QWORD PTR [RIP+.L_429f48]
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM7,XMM2
            movapd XMM0,XMM7
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RSP+16]
            pxor XMM1,XMM1
            cvtsi2sd XMM1,DWORD PTR [RBX+40]
            divsd XMM2,XMM0
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            add RSP,64
.L_4298a5:

            pop RBX
            pop RBP
            movapd XMM0,XMM3
            pop R12
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            ret 
.L_4298b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4298c0:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            pxor XMM2,XMM2
            sub RSP,72
.L_4298d1:

            mov RBX,QWORD PTR [RDI+32]
            cvtsi2sd XMM2,DWORD PTR [RBX+40]
            mulsd XMM1,XMM2
            mulsd XMM2,XMM0
            movapd XMM0,XMM1
            movapd XMM3,XMM2
            mulsd XMM0,XMM1
            mulsd XMM3,XMM2
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
            ja .L_429b6a
.L_42990d:

            movapd XMM0,XMM2
            lea RBP,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call atan2@PLT

            divsd XMM0,QWORD PTR [RIP+.L_429f68]
            mov RDI,RBP
            mov RSI,R13
            call sincos@PLT

            movsd XMM0,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RIP+.L_429f50]
            divsd XMM0,QWORD PTR [RSP]
            divsd XMM1,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_429f60]
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_429f58]
            mov RDI,RBP
            mov RSI,R13
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            mov RDI,RBP
            movsd XMM1,QWORD PTR [RSP+56]
            mov RSI,R13
            movsd XMM0,QWORD PTR [RBX+32]
            mov EBP,100
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM3
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [R12+328]
            divsd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM7
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM1
            jmp .L_429a4a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429a38:

            sub EBP,1
            je .L_429b50

            movsd XMM2,QWORD PTR [RBX]
            movsd QWORD PTR [RSP],XMM1
.L_429a4a:

            movsd XMM1,QWORD PTR [RIP+.L_429f70]
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM2
            call pow@PLT

            movsd XMM4,QWORD PTR [RIP+.L_429f48]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM4,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RIP+.L_429f58]
            addsd XMM0,XMM4
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_429f50]
            divsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            movsd XMM1,QWORD PTR [R12+168]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RIP+.L_429f50]
            mulsd XMM0,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_429f50]
            mulsd XMM1,QWORD PTR [RIP+.L_429f48]
            subsd XMM5,XMM0
            addsd XMM2,XMM0
            divsd XMM2,XMM5
            movapd XMM0,XMM2
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM1
            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_429f58]
            movsd XMM3,QWORD PTR [RIP+.L_429f78]
            movapd XMM1,XMM0
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_429fe0]
            ucomisd XMM3,XMM0
            jbe .L_429a38
.L_429b35:

            movsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [R12+328]
            add RSP,72
.L_429b49:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_429b50:

            mov RDI,QWORD PTR [R12]
            mov ESI,4294967243
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_429b35
.L_429b6a:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42990d
.L_429b8c:

            nop
            nop
            nop
            nop
.L_429b90:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_429ba3:

            call .L_403c70

            test RAX,RAX
            je .L_429e80

            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            mov RAX,QWORD PTR [RIP+.L_429f80]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429f13]
            mov QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RIP+.L_429f88]
            mov QWORD PTR [RBX+176],RAX
            mov RAX,QWORD PTR [RIP+.L_429f90]
            mov QWORD PTR [RBX+168],RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_429c07

            mov RAX,QWORD PTR [RIP+.L_429f98]
            mov QWORD PTR [RBX+336],RAX
.L_429c07:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429f1a]
            call .L_4043f0

            test EAX,EAX
            jne .L_429c2c

            mov RAX,QWORD PTR [RIP+.L_429fa0]
            mov QWORD PTR [RBX+328],RAX
.L_429c2c:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429f21]
            call .L_4043f0

            test EAX,EAX
            jne .L_429c51

            mov RAX,QWORD PTR [RIP+.L_429fa8]
            mov QWORD PTR [RBX+360],RAX
.L_429c51:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_429f24]
            mov DWORD PTR [RBP+40],1
            call .L_4043f0

            test EAX,EAX
            je .L_429e70
.L_429c73:

            movsd XMM5,QWORD PTR [RBX+176]
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_429fb0]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_429f50]
            mulsd XMM0,QWORD PTR [RSP]
            subsd XMM1,QWORD PTR [RBX+176]
            pxor XMM6,XMM6
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_429f50]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_429ea0
.L_429ccd:

            movsd QWORD PTR [RBP],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            divsd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RIP+.L_429f50]
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_429f50]
            mulsd XMM1,QWORD PTR [RBP]
            subsd XMM4,XMM0
            addsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_429f48]
            divsd XMM3,XMM4
            movapd XMM0,XMM3
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RIP+.L_429f48]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM5,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_429f58]
            addsd XMM0,XMM5
            call tan@PLT

            movsd XMM6,QWORD PTR [RIP+.L_429f48]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM6,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RIP+.L_429f58]
            addsd XMM0,XMM6
            call tan@PLT

            movsd XMM1,QWORD PTR [RBP]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+176]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_429f50]
            pxor XMM7,XMM7
            subsd XMM0,XMM1
            mulsd XMM2,QWORD PTR [RSP]
            ucomisd XMM7,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RBP+8],XMM2
            ja .L_429e8e
.L_429de5:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            mulsd XMM0,XMM0
            mov RAX,QWORD PTR [RIP+.L_429f68]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RIP+.L_429f50]
            movsd XMM4,QWORD PTR [RSP]
            mov QWORD PTR [RBP+16],RAX
            mulsd XMM0,XMM1
            mov RAX,QWORD PTR [RIP+.L_429fc0]
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mov QWORD PTR [RBP+32],RAX
            lea RAX,QWORD PTR [RIP+.L_4298c0]
            divsd XMM4,XMM7
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RIP+.L_429fb8]
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_429670]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_429e64:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429e70:

            mov DWORD PTR [RBP+40],4294967295
            jmp .L_429c73
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429e80:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_429630
.L_429e8e:

            call sqrt@PLT

            movsd XMM1,QWORD PTR [RBX+176]
            jmp .L_429de5
.L_429ea0:

            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_429ccd
.L_429eb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429ec0:

            test RDI,RDI
            je .L_429ed0

            jmp .L_429b90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429ed0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_429efe

            lea RDX,QWORD PTR [RIP+.L_429660]
            lea RCX,QWORD PTR [RIP+.L_429f30]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_429efe:

            add RSP,8
            ret 
.L_429f03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f10:

            xor EAX,EAX
            ret 
.L_429f13:
          .string "tlat_0"
.L_429f1a:
          .string "tlon_0"
.L_429f21:
          .string "tk"
.L_429f24:
          .string "tczech"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429f30:
          .string "Krovak\n\tPCyl., Ellps."
          .byte 0x66
          .byte 0x90
.L_429f48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_429f50:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_429f58:
          .byte 0x15
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_429f60:
          .byte 0x6e
          .byte 0xe8
          .byte 0x5f
          .byte 0x2e
          .byte 0xad
          .byte 0xdc
          .byte 0x23
          .byte 0x40
.L_429f68:
          .byte 0x12
          .byte 0x72
          .byte 0xdc
          .byte 0xd
          .byte 0x8b
          .byte 0x5b
          .byte 0xef
          .byte 0x3f
.L_429f70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_429f78:
          .byte 0x16
          .byte 0x56
          .byte 0xe7
          .byte 0x9e
          .byte 0xaf
          .byte 0x3
          .byte 0xd2
          .byte 0x3c
.L_429f80:
          .byte 0x1f
          .byte 0x85
          .byte 0xeb
          .byte 0x49
          .byte 0xed
          .byte 0x53
          .byte 0x58
          .byte 0x41
.L_429f88:
          .byte 0x32
          .byte 0xa5
          .byte 0x3a
          .byte 0x27
          .byte 0x96
          .byte 0x56
          .byte 0x7b
          .byte 0x3f
.L_429f90:
          .byte 0x88
          .byte 0xa0
          .byte 0x41
          .byte 0x62
          .byte 0x15
          .byte 0xea
          .byte 0xb4
          .byte 0x3f
.L_429f98:
          .byte 0x33
          .byte 0xcb
          .byte 0x17
          .byte 0x43
          .byte 0x61
          .byte 0xa5
          .byte 0xeb
          .byte 0x3f
.L_429fa0:
          .byte 0xaf
          .byte 0x8e
          .byte 0x45
          .byte 0xa1
          .byte 0x35
          .byte 0xbd
          .byte 0xdb
          .byte 0x3f
.L_429fa8:
          .byte 0x1e
          .byte 0xa7
          .byte 0xe8
          .byte 0x48
          .byte 0x2e
          .byte 0xff
          .byte 0xef
          .byte 0x3f
.L_429fb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_429fb8:
          .byte 0x28
          .byte 0x9f
          .byte 0xbc
          .byte 0xec
          .byte 0x1e
          .byte 0xa9
          .byte 0x13
          .byte 0x40
.L_429fc0:
          .byte 0x8a
          .byte 0x9c
          .byte 0x39
          .byte 0xc5
          .byte 0x84
          .byte 0xea
          .byte 0xe0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429fd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429fe0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429ff0:

            test RDI,RDI
            je .L_42a018

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42a00e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42a00e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a018:

            xor EAX,EAX
            ret 
.L_42a01b:

            nop
            nop
            nop
            nop
            nop
.L_42a020:

            jmp .L_429ff0
.L_42a022:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a030:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM4,XMM1
            mov RBX,RSI
            sub RSP,48
.L_42a042:

            mov RBP,QWORD PTR [RDI+32]
            movq XMM1,QWORD PTR [RIP+.L_42ab90]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            movsd XMM3,QWORD PTR [RBP+16]
            andpd XMM0,XMM1
            subsd XMM0,QWORD PTR [RIP+.L_42abb0]
            andpd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42abb8]
            ucomisd XMM1,XMM0
            jbe .L_42a120

            movapd XMM1,XMM4
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            ucomisd XMM0,XMM1
            jae .L_42a10d

            movsd QWORD PTR [RSP+8],XMM0
.L_42a096:

            movapd XMM0,XMM4
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            or DWORD PTR [RBX+96],12
            movsd XMM2,QWORD PTR [R12+176]
            mulsd XMM3,QWORD PTR [R12+360]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            mulsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44ca40

            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RBX+32],XMM3
            movsd QWORD PTR [RBX+40],XMM3
            movsd QWORD PTR [RBX+64],XMM0
.L_42a10d:

            add RSP,48
.L_42a111:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a120:

            mov EAX,DWORD PTR [RBP+40]
            movsd XMM6,QWORD PTR [RBP+32]
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM6
            test EAX,EAX
            movsd QWORD PTR [RSP+16],XMM4
            jne .L_42a190

            mulsd XMM0,QWORD PTR [RIP+.L_42abc0]
            addsd XMM0,QWORD PTR [RIP+.L_42abc8]
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            xorpd XMM1,XMMWORD PTR [RIP+.L_42aba0]
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
.L_42a174:

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_42a096
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a190:

            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [R12+168]
            movapd XMM0,XMM4
            call .L_44d4b0

            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_42a174
.L_42a1c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a1d0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM4,XMM0
            sub RSP,56
.L_42a1dd:

            movapd XMM3,XMM1
            movq XMM0,QWORD PTR [RIP+.L_42ab90]
            mov RBX,QWORD PTR [RDI+32]
            andpd XMM1,XMM0
            movsd XMM5,QWORD PTR [RBX+16]
            subsd XMM1,QWORD PTR [RIP+.L_42abb0]
            andpd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42abb8]
            ucomisd XMM0,XMM1
            jbe .L_42a280

            mulsd XMM3,XMM5
            pxor XMM2,XMM2
            ucomisd XMM2,XMM3
            jae .L_42a340
.L_42a222:

            mulsd XMM4,XMM5
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBX+24]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RBP+360]
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
.L_42a270:

            add RSP,56
.L_42a274:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a280:

            mov EAX,DWORD PTR [RBX+40]
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP],XMM6
            test EAX,EAX
            jne .L_42a2f0

            mulsd XMM3,QWORD PTR [RIP+.L_42abc0]
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_42abc8]
            movapd XMM0,XMM3
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            xorpd XMM5,XMMWORD PTR [RIP+.L_42aba0]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
.L_42a2d3:

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+16]
            mulsd XMM2,XMM0
            jmp .L_42a222
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a2f0:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBP+168]
            movapd XMM0,XMM3
            call .L_44d4b0

            movsd XMM5,QWORD PTR [RSP+16]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_42a2d3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a340:

            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM2
            movapd XMM1,XMM2
            jmp .L_42a270
.L_42a361:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a370:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM4,XMM0
            sub RSP,40
.L_42a37d:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RDI+360]
            divsd XMM1,XMM2
            divsd XMM4,XMM2
            movsd XMM0,QWORD PTR [RBX+24]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM4
            call hypot@PLT

            pxor XMM2,XMM2
            ucomisd XMM0,XMM2
            jp .L_42a3bf

            je .L_42a430
.L_42a3bf:

            movsd XMM3,QWORD PTR [RBX+16]
            ucomisd XMM2,XMM3
            ja .L_42a4c0
.L_42a3ce:

            mov EAX,DWORD PTR [RBX+40]
            movsd XMM1,QWORD PTR [RIP+.L_42abd8]
            movsd XMM2,QWORD PTR [RBX+32]
            divsd XMM1,XMM3
            test EAX,EAX
            jne .L_42a460

            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call pow@PLT

            call atan@PLT

            addsd XMM0,XMM0
            movapd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_42abb0]
.L_42a408:

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM0,QWORD PTR [RBX+16]
            jmp .L_42a44b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a430:

            movsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM0,XMM2
            jbe .L_42a4f8

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_42abb0]
.L_42a44b:

            movapd XMM1,XMM3
.L_42a44f:

            add RSP,40
.L_42a453:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a460:

            divsd XMM0,XMM2
            movsd XMM3,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+24],XMM3
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM3
            call .L_44cf90

            ucomisd XMM0,QWORD PTR [RIP+.L_42abe0]
            movapd XMM3,XMM0
            jbe .L_42a408

            mov ESI,4294967276
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM0
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            movapd XMM1,XMM3
            jmp .L_42a44f
          .byte 0x90
.L_42a4c0:

            movq XMM1,QWORD PTR [RIP+.L_42aba0]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            xorpd XMM5,XMM1
            xorpd XMM6,XMM1
            xorpd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_42a3ce
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a4f8:

            movsd XMM3,QWORD PTR [RIP+.L_42abd0]
            pxor XMM0,XMM0
            jmp .L_42a44b
.L_42a509:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a510:

            push R13
            push R12
            mov ESI,48
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_42a527:

            call .L_403c70

            test RAX,RAX
            je .L_42a76d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42ab13]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42ab1a]
            mov QWORD PTR [RBP],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_42a720

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42ab21]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+8],XMM4
.L_42a594:

            movapd XMM0,XMM1
            movsd XMM7,QWORD PTR [RIP+.L_42abb8]
            addsd XMM0,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_42ab90]
            ucomisd XMM7,XMM0
            ja .L_42a760

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xor EAX,EAX
            pxor XMM3,XMM3
            mov EDX,1
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+16]
            ucomisd XMM2,XMM3
            subsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP],XMM7
            setp AL
            movsd QWORD PTR [RBP+16],XMM5
            movapd XMM6,XMM0
            cmovne EAX,EDX
            mov DWORD PTR [RBP+40],EAX
            andpd XMM6,XMMWORD PTR [RIP+.L_42ab90]
            jp .L_42a780

            jne .L_42a780

            ucomisd XMM6,QWORD PTR [RIP+.L_42abb8]
            jae .L_42a8c8

            movsd XMM7,QWORD PTR [RIP+.L_42abc0]
            movsd XMM6,QWORD PTR [RIP+.L_42abc8]
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM6
.L_42a667:

            mulsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBP+16]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd XMM7,QWORD PTR [RIP+.L_42abb8]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            divsd XMM2,XMM1
            andpd XMM4,XMMWORD PTR [RIP+.L_42ab90]
            movsd QWORD PTR [RBP+32],XMM2
            subsd XMM4,QWORD PTR [RIP+.L_42abb0]
            andpd XMM4,XMMWORD PTR [RIP+.L_42ab90]
            ucomisd XMM7,XMM4
            jbe .L_42a880
.L_42a6ea:

            movsd QWORD PTR [RBP+24],XMM3
.L_42a6ef:

            lea RAX,QWORD PTR [RIP+.L_42a370]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42a1d0]
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_42a030]
            mov QWORD PTR [RBX+104],RAX
            add RSP,72
.L_42a714:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_42a720:

            movsd XMM0,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42ab28]
            movsd QWORD PTR [RBP+8],XMM0
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RBP]
            jne .L_42a74e

            movsd QWORD PTR [RBX+336],XMM1
.L_42a74e:

            movsd XMM4,QWORD PTR [RBP+8]
            jmp .L_42a594
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a760:

            mov ESI,4294967275
            mov RDI,RBX
            call .L_415fe0
.L_42a76d:

            add RSP,72
.L_42a771:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_429ff0
          .byte 0x90
.L_42a780:

            ucomisd XMM3,XMM2
            sqrtsd XMM1,XMM2
            ja .L_42aa6e
.L_42a78e:

            movsd QWORD PTR [RBX+168],XMM1
            movapd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            call .L_44ca40

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RBP]
            call .L_44d4b0

            movsd XMM6,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            ucomisd XMM6,QWORD PTR [RIP+.L_42abb8]
            jae .L_42a9c0

            movsd XMM1,QWORD PTR [RBP+16]
.L_42a7fa:

            xorpd XMM1,XMMWORD PTR [RIP+.L_42aba0]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RBX+336]
            mulsd XMM1,XMM0
            movsd XMM5,QWORD PTR [RBP+16]
            movapd XMM2,XMM4
            movsd XMM6,QWORD PTR [RIP+.L_42abb8]
            andpd XMM2,XMMWORD PTR [RIP+.L_42ab90]
            divsd XMM1,XMM5
            subsd XMM2,QWORD PTR [RIP+.L_42abb0]
            andpd XMM2,XMMWORD PTR [RIP+.L_42ab90]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+32],XMM1
            ucomisd XMM6,XMM2
            jbe .L_42a970
.L_42a869:

            mulsd XMM3,XMM1
            movsd QWORD PTR [RBP+24],XMM3
            jmp .L_42a6ef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a880:

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,QWORD PTR [RSP+16]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP]
            xorpd XMM1,XMMWORD PTR [RIP+.L_42aba0]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM3,XMM2
            mulsd XMM3,XMM0
            jmp .L_42a6ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a8c8:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            call cos@PLT

            movsd XMM7,QWORD PTR [RSP]
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            call log@PLT

            movsd XMM6,QWORD PTR [RIP+.L_42abc0]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            movsd XMM5,QWORD PTR [RIP+.L_42abc8]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            addsd XMM0,XMM5
            call tan@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RSP+16]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RBP]
            divsd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBP+16],XMM5
            jmp .L_42a667
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a970:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBX+168]
            movapd XMM0,XMM4
            call .L_44d4b0

            movsd XMM5,QWORD PTR [RSP+8]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM1,QWORD PTR [RBP+24]
            movapd XMM3,XMM0
            jmp .L_42a869
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a9c0:

            movsd QWORD PTR [RSP+16],XMM0
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+24],XMM3
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call .L_44ca40

            movsd XMM6,QWORD PTR [RSP]
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            call log@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM1,XMM5
            movsd XMM2,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RBP+8]
            call .L_44d4b0

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            divsd XMM7,XMM0
            movapd XMM0,XMM7
            call log@PLT

            movsd XMM1,QWORD PTR [RBP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+16],XMM1
            jmp .L_42a7fa
.L_42aa6e:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_42a78e
.L_42aab4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aac0:

            test RDI,RDI
            je .L_42aad0

            jmp .L_42a510
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42aad0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42aafe

            lea RDX,QWORD PTR [RIP+.L_42a020]
            lea RCX,QWORD PTR [RIP+.L_42ab40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42aafe:

            add RSP,8
            ret 
.L_42ab03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ab10:

            xor EAX,EAX
            ret 
.L_42ab13:
          .string "rlat_1"
.L_42ab1a:
          .string "tlat_2"
.L_42ab21:
          .string "rlat_2"
.L_42ab28:
          .string "tlat_0"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab40:
          .string "Lambert Conformal Conic\n\tConic, Sph&Ell\n\tlat_1= and lat_2= or lat_0"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_42ab90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42aba0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42abb0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_42abb8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_42abc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42abc8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_42abd0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_42abd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42abe0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42abf0:

            test RDI,RDI
            je .L_42ac28

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42ac20

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            je .L_42ac14

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_42ac14:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42ac20:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ac28:

            xor EAX,EAX
            ret 
.L_42ac2b:

            nop
            nop
            nop
            nop
            nop
.L_42ac30:

            jmp .L_42abf0
.L_42ac32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac40:

            movapd XMM2,XMM0
            movapd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_42b550]
            andpd XMM0,XMMWORD PTR [RIP+.L_42b530]
            ucomisd XMM3,XMM0
            jae .L_42ad00

            push RBX
            movapd XMM0,XMM1
            mov RBX,RDI
            sub RSP,48
.L_42ac6e:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_42b558]
            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM3,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_42b558]
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX+336]
            movsd XMM2,QWORD PTR [RSP+40]
            add RSP,48
.L_42ace5:

            mulsd XMM2,XMM3
            pop RBX
            mulsd XMM0,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ad00:

            mov RAX,QWORD PTR [RDI+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RAX]
            ret 
.L_42ad0d:

            nop
            nop
            nop
.L_42ad10:

            addsd XMM1,QWORD PTR [RDI+336]
            movsd XMM7,QWORD PTR [RIP+.L_42b550]
            movapd XMM2,XMM0
            movapd XMM3,XMM1
            andpd XMM3,XMMWORD PTR [RIP+.L_42b530]
            ucomisd XMM7,XMM3
            jae .L_42ae30

            push RBP
            push RBX
            mulsd XMM2,XMM0
            movapd XMM3,XMM1
            mov RBP,RDI
            sub RSP,40
.L_42ad4b:

            mov EBX,10
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            movsd QWORD PTR [RSP+16],XMM2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ad70:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM4,XMM3
            mulsd XMM2,XMM3
            mulsd XMM4,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_42b558]
            addsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,XMM1
            mulsd XMM4,QWORD PTR [RIP+.L_42b568]
            subsd XMM2,XMM3
            mulsd XMM4,XMM0
            subsd XMM2,XMM4
            movapd XMM4,XMM3
            subsd XMM4,XMM1
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_42b558]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            subsd XMM3,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_42b530]
            ucomisd XMM0,QWORD PTR [RIP+.L_42b550]
            jbe .L_42ae40

            sub EBX,1
            jne .L_42ad70

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
.L_42ae1f:

            pxor XMM0,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ae30:

            pxor XMM3,XMM3
            movapd XMM1,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ae40:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
            divsd XMM2,XMM0
            movapd XMM1,XMM3
            pop RBX
            pop RBP
            movapd XMM0,XMM2
            ret 
.L_42ae8b:

            nop
            nop
            nop
            nop
            nop
.L_42ae90:

            push R13
            push R12
            push RBP
            push RBX
            movapd XMM4,XMM1
            sub RSP,88
.L_42ae9e:

            mov RBP,QWORD PTR [RDI+32]
            movq XMM2,QWORD PTR [RIP+.L_42b530]
            movsd XMM6,QWORD PTR [RIP+.L_42b550]
            andpd XMM4,XMM2
            ucomisd XMM6,XMM4
            jae .L_42afb0

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mov RBX,RDI
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM2,XMMWORD PTR [RSP]
            andpd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+72]
            ucomisd XMM2,QWORD PTR [RIP+.L_42b550]
            ja .L_42afd0

            pxor XMM6,XMM6
            movsd QWORD PTR [RSP],XMM6
.L_42af18:

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+56],XMM5
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+48],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP+8]
            movsd XMM5,QWORD PTR [RSP+56]
            mulsd XMM3,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+48]
            movapd XMM2,XMM5
            movsd XMM7,QWORD PTR [RSP+64]
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+40],XMM3
            call .L_44c7f0

            movsd XMM1,QWORD PTR [RIP+.L_42b558]
            subsd XMM0,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+40]
            subsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP]
            add RSP,88
.L_42af9b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42afb0:

            movsd XMM1,QWORD PTR [RBP]
            movapd XMM3,XMM0
            xorpd XMM1,XMMWORD PTR [RIP+.L_42b540]
            add RSP,88
            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_42afd0:

            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM4
            movsd XMM2,QWORD PTR [RBX+176]
            call .L_44ca40

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+40]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM0
            jmp .L_42af18
.L_42b009:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b010:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,80
.L_42b01c:

            mov R12,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RIP+.L_42b550]
            addsd XMM1,QWORD PTR [R12]
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM5,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_42b530]
            ucomisd XMM3,XMM1
            jae .L_42b260

            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+48],XMM0
            mov RBX,RDI
            mov EBP,20
            lea R14,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM5
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_42b1fb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b088:

            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM6,QWORD PTR [RIP+.L_42b558]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM4,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            ja .L_42b31a
.L_42b0ba:

            movapd XMM7,XMM1
            mov RDI,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+24],XMM10
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM7,XMM4
            movsd QWORD PTR [RSP],XMM5
            divsd XMM7,XMM2
            movsd QWORD PTR [RSP+8],XMM7
            call .L_44c7f0

            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            movapd XMM3,XMM0
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movapd XMM0,XMM4
            movsd XMM9,QWORD PTR [RBX+216]
            mulsd XMM0,XMM4
            movapd XMM1,XMM7
            movsd XMM10,QWORD PTR [RSP+24]
            addsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM3
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM4,XMM0
            movapd XMM0,XMM3
            movapd XMM8,XMM5
            addsd XMM0,XMM3
            movsd XMM6,QWORD PTR [RBX+176]
            addsd XMM1,QWORD PTR [RIP+.L_42b558]
            divsd XMM9,XMM4
            movapd XMM4,XMM7
            addsd XMM8,XMM5
            subsd XMM5,XMM3
            mulsd XMM4,XMM2
            mulsd XMM1,XMM8
            mulsd XMM3,XMM8
            addsd XMM0,XMM4
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42b570]
            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42b558]
            subsd XMM4,XMM1
            movapd XMM1,XMM7
            divsd XMM0,XMM10
            mulsd XMM1,XMM9
            mulsd XMM10,XMM6
            subsd XMM1,XMM0
            movapd XMM0,XMM5
            addsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM10
            divsd XMM0,XMM7
            addsd XMM0,XMM1
            subsd XMM0,XMM9
            subsd XMM0,XMM9
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            addsd XMM5,XMM4
            andpd XMM0,XMMWORD PTR [RIP+.L_42b530]
            ucomisd XMM3,XMM0
            jae .L_42b280

            sub EBP,1
            je .L_42b310
.L_42b1fb:

            movapd XMM0,XMM5
            mov RSI,R13
            mov RDI,R14
            movsd QWORD PTR [RSP],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RIP+.L_42b570]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_42b530]
            movapd XMM10,XMM1
            mulsd XMM10,XMM2
            ucomisd XMM6,XMM0
            jbe .L_42b088
.L_42b248:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_415fe0

            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_42b26c
.L_42b260:

            pxor XMM5,XMM5
            movapd XMM2,XMM0
.L_42b268:

            movapd XMM0,XMM2
.L_42b26c:

            add RSP,80
.L_42b270:

            movapd XMM1,XMM5
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b280:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM5
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM5
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM6,XMM3
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42b558]
            pxor XMM7,XMM7
            mulsd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM0,XMM6
            ucomisd XMM7,XMM0
            sqrtsd XMM3,XMM0
            ja .L_42b360
.L_42b2e6:

            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM2
            call asin@PLT

            movapd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+8]
            divsd XMM2,QWORD PTR [RSP]
            jmp .L_42b268
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b310:

            movsd QWORD PTR [RSP],XMM5
            jmp .L_42b248
.L_42b31a:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM10
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_42b0ba
.L_42b360:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_42b2e6
.L_42b38e:

            nop
            nop
.L_42b390:

            push R12
            push RBP
            mov ESI,16
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_42b3a5:

            call .L_403c70

            test RAX,RAX
            je .L_42b480

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_42b560]
            jp .L_42b408

            jne .L_42b408

            movsd XMM0,QWORD PTR [RBX+336]
            xorpd XMM0,XMMWORD PTR [RIP+.L_42b540]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_42ad10]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42ac40]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_42b3fc:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b408:

            call .L_44c700

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_42b480

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM3
            call .L_44c7f0

            lea RAX,QWORD PTR [RIP+.L_42b010]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42ae90]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_42b477:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_42b480:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42abf0
.L_42b490:

            test RDI,RDI
            je .L_42b4a0

            jmp .L_42b390
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b4a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42b4ce

            lea RDX,QWORD PTR [RIP+.L_42ac30]
            lea RCX,QWORD PTR [RIP+.L_42b500]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42b4ce:

            add RSP,8
            ret 
.L_42b4d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b4e0:

            xor EAX,EAX
            ret 
.L_42b4e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b500:

            push RAX
            outsd DX,DWORD PTR [RSI]
            insb BYTE PTR [RDI],DX
            jns .L_42b568
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0x20
          .byte 0x28
          .byte 0x41
          .byte 0x6d
          .byte 0x65
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x6e
          .byte 0x29
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x26
          .byte 0x45
          .byte 0x6c
          .byte 0x6c
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_42b530:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b540:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b550:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_42b558:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42b560:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_42b568:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 177023
.L_42b570:

            adc EDX,EBP
            sub EAX,1905760641
            cmp EAX,8658703
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_42b580:

            test RDI,RDI
            je .L_42b5a8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42b59e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42b59e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b5a8:

            xor EAX,EAX
            ret 
.L_42b5ab:

            nop
            nop
            nop
            nop
            nop
.L_42b5b0:

            jmp .L_42b580
.L_42b5b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b5c0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_42b5c9:

            mov RBP,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBP+24]
            test EAX,EAX
            je .L_42b6b8

            mulsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,XMM0
.L_42b5f5:

            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_42b860]
            movsd XMM3,QWORD PTR [RBX+336]
            andpd XMM0,XMMWORD PTR [RIP+.L_42b870]
            ucomisd XMM4,XMM0
            ja .L_42b6d0

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            movsd XMM4,QWORD PTR [RIP+.L_42b868]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM4,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            call atan@PLT

            addsd XMM0,XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RIP+.L_42b868]
            movsd XMM4,QWORD PTR [RSP+8]
            subsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+40]
            add RSP,56
.L_42b6a0:

            subsd XMM1,XMM3
            mulsd XMM0,XMM4
            pop RBX
            mulsd XMM2,XMM4
            pop RBP
            addsd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b6b8:

            movsd XMM2,QWORD PTR [RIP+.L_42b858]
            mulsd XMM2,XMM0
            jmp .L_42b5f5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b6d0:

            xorpd XMM3,XMMWORD PTR [RIP+.L_42b880]
            addsd XMM2,XMM2
            add RSP,56
            pop RBX
            pop RBP
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            ret 
.L_42b6eb:

            nop
            nop
            nop
            nop
            nop
.L_42b6f0:

            push RBP
            push RBX
            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_42b703:

            call .L_403c70

            test RAX,RAX
            je .L_42b798

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42b803]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_42b870]
            ucomisd XMM0,QWORD PTR [RIP+.L_42b860]
            movsd QWORD PTR [RBP],XMM0
            seta AL
            mov DWORD PTR [RBP+24],EAX
            jbe .L_42b774

            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_42b858]
            mulsd XMM0,XMM1
            divsd XMM1,XMM0
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
.L_42b774:

            lea RAX,QWORD PTR [RIP+.L_42b5c0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_42b78e:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b798:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_42b580
.L_42b7a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b7b0:

            test RDI,RDI
            je .L_42b7c0

            jmp .L_42b6f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b7c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42b7ee

            lea RDX,QWORD PTR [RIP+.L_42b5b0]
            lea RCX,QWORD PTR [RIP+.L_42b820]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42b7ee:

            add RSP,8
            ret 
.L_42b7f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b800:

            xor EAX,EAX
            ret 
.L_42b803:
          .string "rlat_ts"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_42b820:
          .string "Rectangular Polyconic\n\tConic, Sph., no inv.\n\tlat_ts="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42b860:
          .byte 0x95
          .byte 0xd6
          .byte 0x26
          .byte 0xe8
          .byte 0xb
          .byte 0x2e
          .byte 0x11
          .byte 0x3e
.L_42b868:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42b870:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b880:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_42b890:

            test RDI,RDI
            je .L_42b8b8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42b8ae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42b8ae:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b8b8:

            xor EAX,EAX
            ret 
.L_42b8bb:

            nop
            nop
            nop
            nop
            nop
.L_42b8c0:

            jmp .L_42b890
.L_42b8c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b8d0:

            push RBX
            movapd XMM3,XMM0
            sub RSP,32
.L_42b8d9:

            mov RBX,QWORD PTR [RDI+32]
            mov EAX,DWORD PTR [RBX+48]
            cmp EAX,2
            je .L_42b970

            cmp EAX,4
            je .L_42b940

            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM1
.L_42b8f7:

            mulsd XMM3,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM3,XMM2
            mulsd XMM2,QWORD PTR [RSP+24]
            add RSP,32
.L_42b933:

            pop RBX
            subsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42b940:

            subsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RBX+40]
            jmp .L_42b8f7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b970:

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            subsd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM2,XMM0
            jmp .L_42b8f7
.L_42b998:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b9a0:

            push RBX
            sub RSP,16
.L_42b9a5:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM3,QWORD PTR [RBX+16]
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call hypot@PLT

            movapd XMM4,XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM0,QWORD PTR [RBX]
            jbe .L_42b9f3

            movq XMM0,QWORD PTR [RIP+.L_42c550]
            xorpd XMM4,XMM0
            xorpd XMM2,XMM0
            xorpd XMM3,XMM0
.L_42b9f3:

            movapd XMM0,XMM2
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM4
            call atan2@PLT

            mov EAX,DWORD PTR [RBX+48]
            movapd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP]
            divsd XMM2,QWORD PTR [RBX]
            cmp EAX,2
            je .L_42ba70

            cmp EAX,4
            je .L_42ba38

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RBX+8]
            add RSP,16
.L_42ba2c:

            pop RBX
            subsd XMM1,XMM4
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ba38:

            divsd XMM4,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP],XMM2
            movsd XMM0,QWORD PTR [RBX+32]
            subsd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba70:

            subsd XMM4,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,16
            subsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_42ba9b:

            nop
            nop
            nop
            nop
            nop
.L_42baa0:

            push R12
            push RBP
            mov R12D,ESI
            push RBX
            mov ESI,56
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_42bab8:

            call .L_403c70

            test RAX,RAX
            je .L_42bbd5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42c353]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+48],R12D
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            je .L_42bbc8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42c35a]
            call .L_4043f0

            test EAX,EAX
            je .L_42bbc8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42c361]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_42c368]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM1
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM3,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM2,XMM3
            movsd XMM4,QWORD PTR [RIP+.L_42c570]
            movsd XMM5,QWORD PTR [RIP+.L_42c578]
            subsd XMM2,XMM1
            addsd XMM1,XMM3
            movq XMM3,QWORD PTR [RIP+.L_42c560]
            mulsd XMM2,XMM4
            mulsd XMM1,XMM4
            movapd XMM0,XMM2
            movsd QWORD PTR [RAX+24],XMM1
            andpd XMM0,XMM3
            ucomisd XMM5,XMM0
            ja .L_42c018

            andpd XMM1,XMM3
            ucomisd XMM5,XMM1
            ja .L_42c018

            cmp DWORD PTR [RBP+48],6
            ja .L_42bc59

            mov EAX,DWORD PTR [RBP+48]
            lea RDX,QWORD PTR [RIP+.L_42c380]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bbc8:

            mov ESI,4294967255
.L_42bbcd:

            mov RDI,RBX
            call .L_415fe0
.L_42bbd5:

            add RSP,48
.L_42bbd9:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42b890
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bbe8:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call tan@PLT

            movsd XMM6,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP],XMM0
.L_42bc26:

            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+8],XMM2
            subsd XMM2,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM2
.L_42bc59:

            lea RAX,QWORD PTR [RIP+.L_42b9a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42b8d0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_42bc7e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bc90:

            movsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            divsd XMM1,XMM0
            divsd XMM0,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+32]
            pxor XMM2,XMM2
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            divsd XMM0,XMM3
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c02c
.L_42bd1c:

            movsd QWORD PTR [RBP+16],XMM1
            jmp .L_42bc59
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bd30:

            movsd XMM6,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+40]
            divsd XMM0,XMM2
            mulsd XMM2,XMM4
            movsd QWORD PTR [RBP],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call tan@PLT

            movsd QWORD PTR [RSP+32],XMM0
            jmp .L_42bc26
          .byte 0x66
          .byte 0x90
.L_42bda0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM3,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            divsd XMM1,XMM2
            movapd XMM0,XMM1
            addsd XMM0,XMM3
            movsd QWORD PTR [RBP+8],XMM0
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd QWORD PTR [RBP],XMM0
            jmp .L_42bc59
.L_42be10:

            movapd XMM0,XMM2
            call cos@PLT

            sqrtsd XMM7,XMM0
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP+8],XMM7
            ucomisd XMM1,XMM0
            ja .L_42c022
.L_42be31:

            movsd XMM2,QWORD PTR [RBP+24]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+16],XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM0
            jmp .L_42bc59
          .byte 0x90
.L_42bea0:

            movsd XMM1,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM2
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+32],XMM2
            divsd XMM0,XMM3
            addsd XMM0,XMM1
            movsd QWORD PTR [RBP+8],XMM0
            subsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RBP+16],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM2,XMM2
            mulsd XMM0,XMM4
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP],XMM0
            jmp .L_42bc59
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42bf58:

            movsd XMM7,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+40],XMM5
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM7
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RBP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RIP+.L_42c580]
            movapd XMM3,XMMWORD PTR [RSP+16]
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd XMM5,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+32],XMM1
            andpd XMM3,XMM0
            subsd XMM3,XMM5
            ucomisd XMM3,QWORD PTR [RIP+.L_42c588]
            jae .L_42c008

            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM1,XMM0
            mulsd XMM1,QWORD PTR [RSP+32]
            jmp .L_42bd1c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c008:

            mov ESI,4294967253
            jmp .L_42bbcd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c018:

            mov ESI,4294967254
            jmp .L_42bbcd
.L_42c022:

            call sqrt@PLT

            jmp .L_42be31
.L_42c02c:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42bd1c
.L_42c042:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c050:

            test RDI,RDI
            je .L_42c060

            xor ESI,ESI
            jmp .L_42baa0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c060:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c08e

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c520]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c08e:

            add RSP,8
            ret 
.L_42c093:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c0a0:

            xor ESI,ESI
            jmp .L_42baa0
.L_42c0a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c0b0:

            test RDI,RDI
            je .L_42c0c0

            mov ESI,5
            jmp .L_42baa0
          .byte 0x90
.L_42c0c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c0ee

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c3e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c0ee:

            add RSP,8
            ret 
.L_42c0f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c100:

            mov ESI,5
            jmp .L_42baa0
.L_42c10a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c110:

            test RDI,RDI
            je .L_42c120

            mov ESI,1
            jmp .L_42baa0
          .byte 0x90
.L_42c120:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c14e

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c4e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c14e:

            add RSP,8
            ret 
.L_42c153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c160:

            mov ESI,1
            jmp .L_42baa0
.L_42c16a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c170:

            test RDI,RDI
            je .L_42c180

            mov ESI,2
            jmp .L_42baa0
          .byte 0x90
.L_42c180:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c1ae

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c4a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c1ae:

            add RSP,8
            ret 
.L_42c1b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1c0:

            mov ESI,2
            jmp .L_42baa0
.L_42c1ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1d0:

            test RDI,RDI
            je .L_42c1e0

            mov ESI,3
            jmp .L_42baa0
          .byte 0x90
.L_42c1e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c20e

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c460]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c20e:

            add RSP,8
            ret 
.L_42c213:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c220:

            mov ESI,3
            jmp .L_42baa0
.L_42c22a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c230:

            test RDI,RDI
            je .L_42c240

            mov ESI,4
            jmp .L_42baa0
          .byte 0x90
.L_42c240:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c26e

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c420]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c26e:

            add RSP,8
            ret 
.L_42c273:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c280:

            mov ESI,4
            jmp .L_42baa0
.L_42c28a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c290:

            test RDI,RDI
            je .L_42c2a0

            mov ESI,6
            jmp .L_42baa0
          .byte 0x90
.L_42c2a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42c2ce

            lea RDX,QWORD PTR [RIP+.L_42b8c0]
            lea RCX,QWORD PTR [RIP+.L_42c3a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42c2ce:

            add RSP,8
            ret 
.L_42c2d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c2e0:

            mov ESI,6
            jmp .L_42baa0
.L_42c2ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42c2f0:

            xor EAX,EAX
            ret 
.L_42c2f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c300:

            xor EAX,EAX
            ret 
.L_42c303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c310:

            xor EAX,EAX
            ret 
.L_42c313:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c320:

            xor EAX,EAX
            ret 
.L_42c323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c330:

            xor EAX,EAX
            ret 
.L_42c333:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c340:

            xor EAX,EAX
            ret 
.L_42c343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c350:

            xor EAX,EAX
            ret 
.L_42c353:
          .string "tlat_1"
.L_42c35a:
          .string "tlat_2"
.L_42c361:
          .string "rlat_1"
.L_42c368:
          .string "rlat_2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c380:
          .long .L_42bd30-.L_42c380
          .long .L_42bda0-.L_42c380
          .long .L_42be10-.L_42c380
          .long .L_42bea0-.L_42c380
          .long .L_42bf58-.L_42c380
          .long .L_42bc90-.L_42c380
          .long .L_42bbe8-.L_42c380
          .zero 4
.L_42c3a0:
          .string "Vitkovsky I\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 21
.L_42c3e0:
          .string "Tissot\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 26
.L_42c420:
          .string "Perspective Conic\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 15
.L_42c460:
          .string "Murdoch III\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 21
.L_42c4a0:

            jne .L_42c515
          .byte 0x64
          .byte 0x6f
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x49
          .byte 0x49
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x6f
          .byte 0x6e
          .byte 0x69
          .byte 0x63
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0xa
          .byte 0x9
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x3d
          .byte 0x20
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x32
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c4e0:
          .string "Murdoch I\n\tConic, Sph\n\tlat_1= and lat_2="
          .zero 12
.L_42c515:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
          .zero 5
.L_42c520:
          .string "Euler\n\tConic, Sph\n\tlat_1= and lat_2="
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_42c550:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c560:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c570:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42c578:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_42c580:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42c588:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_42c590:

            test RDI,RDI
            je .L_42c5d0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42c5c3

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+272]
            test RDI,RDI
            je .L_42c5b7

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_42c5b7:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42c5c3:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c5d0:

            xor EAX,EAX
            ret 
.L_42c5d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c5e0:

            jmp .L_42c590
.L_42c5e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c5f0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_42c5f9:

            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM5
            mov RDI,QWORD PTR [RBX+272]
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call .L_44ccf0

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBP+176]
            movapd XMM3,XMM0
            movsd XMM8,QWORD PTR [RIP+.L_42d088]
            mulsd XMM1,XMM4
            subsd XMM3,QWORD PTR [RBX]
            movapd XMM0,XMM8
            pxor XMM2,XMM2
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM1,XMM4
            mulsd XMM5,QWORD PTR [RSP+8]
            movapd XMM7,XMM3
            subsd XMM0,XMM1
            mulsd XMM7,XMM3
            ucomisd XMM2,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42c777
.L_42c6a8:

            divsd XMM5,XMM1
            movsd XMM0,QWORD PTR [RBX+96]
            movsd XMM1,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RBX+72]
            movapd XMM6,XMM5
            mulsd XMM1,XMM7
            movsd XMM4,QWORD PTR [RBP+360]
            mulsd XMM6,XMM5
            mulsd XMM5,XMM4
            addsd XMM1,QWORD PTR [RBX+64]
            mulsd XMM0,XMM6
            subsd XMM2,XMM0
            mulsd XMM1,XMM7
            movapd XMM0,XMM3
            mulsd XMM0,XMM6
            mulsd XMM2,XMM6
            addsd XMM2,XMM8
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+104]
            mulsd XMM1,XMM3
            addsd XMM1,QWORD PTR [RBX+88]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM0,XMM7
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+80]
            mulsd XMM1,XMM6
            addsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM2,XMM3
            mulsd XMM3,QWORD PTR [RBX+24]
            addsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM0,XMM7
            mulsd XMM7,QWORD PTR [RBX+40]
            addsd XMM3,QWORD PTR [RBX+16]
            mulsd XMM1,XMM6
            addsd XMM0,XMM8
            addsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RBX+48]
            addsd XMM3,XMM7
            add RSP,72
.L_42c75c:

            mulsd XMM2,XMM6
            pop RBX
            mulsd XMM1,XMM4
            pop RBP
            addsd XMM3,XMM2
            mulsd XMM3,XMM6
            subsd XMM0,XMM3
            mulsd XMM0,XMM5
            ret 
.L_42c777:

            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_42c6a8
.L_42c7bf:

            nop
.L_42c7c0:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_42c7c8:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RDI+360]
            mov RDI,QWORD PTR [RDI]
            divsd XMM1,XMM2
            mov RSI,QWORD PTR [RAX+272]
            divsd XMM0,XMM2
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RAX+136]
            movsd XMM3,QWORD PTR [RAX+144]
            mulsd XMM2,XMM1
            movapd XMM5,XMM0
            mulsd XMM4,XMM1
            movsd XMM6,QWORD PTR [RAX+120]
            mulsd XMM5,XMM0
            addsd XMM2,QWORD PTR [RAX+128]
            mulsd XMM6,XMM4
            mulsd XMM3,XMM5
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RAX+152]
            mulsd XMM3,XMM4
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RAX+168]
            mulsd XMM3,XMM5
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42d088]
            movapd XMM7,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM5
            subsd XMM7,XMM6
            movsd XMM6,QWORD PTR [RAX+160]
            mulsd XMM6,XMM4
            addsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RAX+176]
            mulsd XMM7,XMM5
            mulsd XMM7,XMM1
            subsd XMM6,XMM7
            mulsd XMM6,XMM4
            addsd XMM2,XMM6
            movsd XMM6,QWORD PTR [RAX+248]
            mulsd XMM6,XMM5
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RAX+264]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            movsd XMM2,QWORD PTR [RAX+256]
            subsd XMM0,QWORD PTR [RAX+232]
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RAX+224]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+216]
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RAX+208]
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+200]
            subsd XMM2,XMM6
            mulsd XMM2,XMM5
            mulsd XMM0,XMM1
            subsd XMM0,QWORD PTR [RAX+184]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RAX+240]
            mulsd XMM2,XMM4
            mulsd XMM0,XMM5
            subsd XMM2,QWORD PTR [RAX+192]
            mulsd XMM4,XMM2
            addsd XMM4,XMM3
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RAX]
            addsd XMM0,XMM1
            call .L_44cde0

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            sqrtsd XMM2,XMM3
            ja .L_42c999
.L_42c986:

            movsd XMM0,QWORD PTR [RSP]
            add RSP,48
.L_42c98f:

            pop RBX
            mulsd XMM0,XMM2
            divsd XMM0,XMM4
            ret 
.L_42c999:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42c986
.L_42c9c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c9d0:

            push R12
            push RBP
            mov ESI,280
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,64
.L_42c9e5:

            call .L_403c70

            test RAX,RAX
            je .L_42cfa8

            movsd XMM0,QWORD PTR [RBP+176]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_44cab0

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBX+272],RAX
            je .L_42cfa8

            movsd XMM4,QWORD PTR [RBP+336]
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM1,XMM3
            movsd XMM2,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call .L_44ccf0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM9,QWORD PTR [RIP+.L_42d088]
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX],XMM0
            movapd XMM6,XMM9
            pxor XMM0,XMM0
            mulsd XMM1,XMM3
            subsd XMM6,XMM1
            ucomisd XMM0,XMM6
            sqrtsd XMM2,XMM6
            ja .L_42cfb8
.L_42caa1:

            mulsd XMM6,XMM6
            movapd XMM4,XMM9
            movsd XMM0,QWORD PTR [RBP+336]
            divsd XMM4,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+16],XMM9
            divsd XMM6,QWORD PTR [RBP+216]
            movsd QWORD PTR [RSP+32],XMM4
            movapd XMM3,XMM6
            movsd QWORD PTR [RSP+8],XMM6
            mulsd XMM3,XMM6
            movsd QWORD PTR [RSP+24],XMM3
            call tan@PLT

            movapd XMM2,XMM0
            lea RAX,QWORD PTR [RIP+.L_42c5f0]
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_42d090]
            movapd XMM5,XMM6
            movsd XMM9,QWORD PTR [RSP+16]
            mulsd XMM5,XMM7
            movapd XMM8,XMM6
            movapd XMM10,XMM2
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM10,XMM2
            movsd XMM11,QWORD PTR [RIP+.L_42d098]
            movsd QWORD PTR [RBX+8],XMM5
            addsd XMM1,XMM1
            mulsd XMM8,XMM0
            movsd QWORD PTR [RBX+120],XMM5
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM5,XMM10
            movsd XMM15,QWORD PTR [RIP+.L_44f380-139992]
            movapd XMM13,XMM3
            subsd XMM5,XMM9
            movsd XMM14,QWORD PTR [RIP+.L_44f380-140000]
            divsd XMM13,XMM15
            subsd XMM5,XMM1
            mulsd XMM5,XMM6
            mulsd XMM14,XMM2
            movsd QWORD PTR [RBX+32],XMM13
            movapd XMM13,XMM2
            divsd XMM5,XMM11
            movapd XMM4,XMM14
            movsd QWORD PTR [RSP+8],XMM14
            movapd XMM14,XMM0
            addsd XMM4,XMM9
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM13,XMM11
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+128],XMM5
            movapd XMM5,XMM4
            movsd XMM4,QWORD PTR [RSP+32]
            mulsd XMM5,XMM8
            movapd XMM12,XMM4
            mulsd XMM12,XMM11
            divsd XMM5,XMM12
            movsd XMM12,QWORD PTR [RIP+.L_44f380-139984]
            addsd XMM12,XMM13
            movsd QWORD PTR [RBX+24],XMM5
            movapd XMM5,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_44f380-139984]
            mulsd XMM12,XMM2
            subsd XMM13,XMM10
            addsd XMM10,XMM9
            subsd XMM12,XMM9
            mulsd XMM13,XMM2
            movsd QWORD PTR [RSP+24],XMM10
            mulsd XMM12,XMM3
            divsd XMM12,XMM15
            movsd QWORD PTR [RBX+40],XMM12
            movsd XMM12,QWORD PTR [RIP+.L_44f380-139976]
            subsd XMM13,XMM12
            mulsd XMM13,XMM3
            divsd XMM13,QWORD PTR [RIP+.L_44f380-139968]
            movsd QWORD PTR [RBX+48],XMM13
            movapd XMM13,XMM4
            addsd XMM13,XMM4
            divsd XMM14,XMM13
            movapd XMM13,XMM6
            divsd XMM13,XMM11
            movapd XMM11,XMM10
            subsd XMM11,XMM1
            movapd XMM1,XMM12
            movsd QWORD PTR [RBX+184],XMM14
            movsd QWORD PTR [RBX+56],XMM14
            subsd XMM1,XMM2
            mulsd XMM11,XMM6
            movapd XMM6,XMM4
            mulsd XMM1,XMM8
            mulsd XMM6,XMM15
            movsd QWORD PTR [RBX+64],XMM13
            mulsd XMM11,XMM7
            divsd XMM1,XMM6
            movsd QWORD PTR [RBX+72],XMM11
            movsd QWORD PTR [RBX+80],XMM1
            movsd XMM6,QWORD PTR [RIP+.L_42d0c8]
            movsd XMM10,QWORD PTR [RIP+.L_42d0d0]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX+192],XMM13
            addsd XMM1,XMM10
            movsd XMM7,QWORD PTR [RIP+.L_42d0d8]
            movsd QWORD PTR [RBX+200],XMM11
            mulsd XMM7,XMM2
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM1,XMM8
            divsd XMM1,XMM6
            movapd XMM6,XMM7
            subsd XMM7,XMM10
            mulsd XMM7,XMM2
            movsd QWORD PTR [RBX+88],XMM1
            subsd XMM7,XMM12
            movsd XMM1,QWORD PTR [RIP+.L_44f380-139936]
            movsd XMM12,QWORD PTR [RIP+.L_42d0f8]
            mulsd XMM7,XMM3
            divsd XMM7,XMM1
            movsd QWORD PTR [RBX+96],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_42d0e8]
            addsd XMM7,XMM5
            addsd XMM5,QWORD PTR [RIP+.L_44f380-139888]
            mulsd XMM7,XMM2
            mulsd XMM5,XMM2
            addsd XMM7,XMM10
            movapd XMM10,XMM2
            addsd XMM10,XMM9
            addsd XMM5,QWORD PTR [RIP+.L_44f380-140000]
            mulsd XMM7,XMM3
            mulsd XMM10,XMM8
            divsd XMM7,XMM15
            movapd XMM14,XMM10
            mulsd XMM5,XMM3
            movsd QWORD PTR [RBX+104],XMM7
            movapd XMM7,XMM3
            divsd XMM5,XMM15
            divsd XMM7,QWORD PTR [RIP+.L_44f380-139920]
            movsd QWORD PTR [RBX+152],XMM5
            movsd XMM15,QWORD PTR [RIP+.L_44f380-139872]
            movsd XMM5,QWORD PTR [RIP+.L_44f380-139864]
            mulsd XMM15,XMM2
            movsd QWORD PTR [RBX+112],XMM7
            movapd XMM7,XMM4
            addsd XMM5,XMM15
            movapd XMM15,XMM4
            mulsd XMM7,XMM12
            mulsd XMM15,XMM1
            mulsd XMM1,XMM2
            mulsd XMM5,XMM2
            divsd XMM14,XMM7
            addsd XMM5,QWORD PTR [RIP+.L_44f380-139984]
            movsd XMM7,QWORD PTR [RIP+.L_44f380-139904]
            mulsd XMM5,XMM0
            mulsd XMM7,XMM2
            movsd QWORD PTR [RBX+136],XMM14
            movapd XMM14,XMM3
            divsd XMM5,XMM15
            addsd XMM7,QWORD PTR [RIP+.L_44f380-139896]
            mulsd XMM7,XMM2
            movsd XMM15,QWORD PTR [RIP+.L_42d130]
            movsd QWORD PTR [RBX+168],XMM5
            mulsd XMM15,XMM4
            subsd XMM7,XMM12
            movsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            mulsd XMM7,XMM3
            divsd XMM5,XMM15
            divsd XMM7,QWORD PTR [RIP+.L_44f380-139968]
            movsd QWORD PTR [RBX+176],XMM5
            movsd QWORD PTR [RBX+144],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_44f380-139880]
            mulsd XMM14,XMM7
            movsd QWORD PTR [RBX+160],XMM14
            divsd XMM10,QWORD PTR [RSP+32]
            addsd XMM6,QWORD PTR [RIP+.L_42d0d8]
            addsd XMM12,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_42d170]
            mulsd XMM6,XMM2
            mulsd XMM8,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RIP+.L_44f380-140000]
            mulsd XMM1,XMM2
            mulsd XMM5,XMM4
            addsd XMM9,XMM6
            mulsd XMM4,QWORD PTR [RIP+.L_42d168]
            movsd QWORD PTR [RBX+208],XMM10
            addsd XMM1,QWORD PTR [RIP+.L_42d178]
            divsd XMM8,XMM5
            movapd XMM5,XMM3
            mulsd XMM9,XMM3
            divsd XMM3,QWORD PTR [RIP+.L_44f380-139840]
            movsd QWORD PTR [RBX+216],XMM8
            mulsd XMM5,XMM2
            mulsd XMM1,XMM0
            mulsd XMM7,XMM9
            mulsd XMM12,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_44f380-139832]
            movsd QWORD PTR [RBX+240],XMM3
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+224],XMM7
            mulsd XMM5,XMM2
            movsd XMM3,QWORD PTR [RIP+.L_44f380-139824]
            mulsd XMM12,QWORD PTR [RIP+.L_42d138]
            movsd QWORD PTR [RBX+256],XMM1
            subsd XMM3,XMM5
            mulsd XMM3,XMM2
            movsd QWORD PTR [RBX+232],XMM12
            mulsd XMM2,QWORD PTR [RIP+.L_44f380-139776]
            subsd XMM3,QWORD PTR [RIP+.L_44f380-139816]
            addsd XMM2,QWORD PTR [RIP+.L_42d188]
            mulsd XMM3,XMM0
            mulsd XMM0,XMM2
            divsd XMM3,QWORD PTR [RIP+.L_42d160]
            divsd XMM0,XMM4
            movsd QWORD PTR [RBX+248],XMM3
            movsd QWORD PTR [RBX+264],XMM0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_42c7c0]
            mov QWORD PTR [RBP+48],RAX
            add RSP,64
.L_42cf99:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cfa8:

            add RSP,64
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_42c590
.L_42cfb8:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_42caa1
.L_42cff8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d000:

            test RDI,RDI
            je .L_42d010

            jmp .L_42c9d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d010:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42d03e

            lea RDX,QWORD PTR [RIP+.L_42c5e0]
            lea RCX,QWORD PTR [RIP+.L_42d060]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d03e:

            add RSP,8
            ret 
.L_42d043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d050:

            xor EAX,EAX
            ret 
.L_42d053:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d060:
          .string "Roussilhe Stereographic\n\tAzi., Ellps."
# WARNING: found overlapping blocks at address 2ce36
# WARNING: found overlapping blocks at address 2ce3f
# WARNING: found overlapping blocks at address 2ce43
          .byte 0x66
          .byte 0x90
.L_42d088:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42d090:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sar BYTE PTR [RDI],1
.L_42d098:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sub BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],DL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            cmp BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI],AH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],CH
.L_42d0c8:

            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_42d0d0:
          .zero 2

            add BYTE PTR [RAX],AL
.L_42d0d4:

            add BYTE PTR [RAX],AL
            adc AL,64
.L_42d0d8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sbb BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+64],CL
.L_42d0e8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            xor EAX,DWORD PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],BL
.L_42d0f8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            or BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI],DH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sub AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+63],DH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],DH
            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x40
          .byte 0x40
.L_42d130:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x40
.L_42d138:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sar BYTE PTR [RDI],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+RAX*2],DL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDX],BH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+102],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            xor EAX,64
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],0
# WARNING: found overlapping blocks at address 2cf30
.set .L_42d160, . - 12
# WARNING: found overlapping blocks at address 2cf38
.set .L_42d168, . - 4
# WARNING: found overlapping blocks at address 2cf3a
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x40
# WARNING: found overlapping blocks at address 2cf3c
.L_42d170:

            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x55
          .byte 0x40
.L_42d178:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            cmp EAX,64
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],AL
.L_42d188:

            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x42
          .byte 0x40
.L_42d190:

            test RDI,RDI
            je .L_42d1c0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42d1b7

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42d1b7:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42d1c0:

            xor EAX,EAX
            ret 
.L_42d1c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d1d0:

            jmp .L_42d190
.L_42d1d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d1e0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_42d1e9:

            movsd QWORD PTR [RSP+16],XMM0
            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            mov RBP,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            call .L_44c7f0

            movsd XMM8,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movapd XMM0,XMM8
            pxor XMM5,XMM5
            mulsd XMM0,XMM4
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM0,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_42d858]
            movapd XMM6,XMM4
            subsd XMM6,XMM0
            ucomisd XMM5,XMM6
            sqrtsd XMM2,XMM6
            ja .L_42d3b0
.L_42d283:

            movapd XMM6,XMM4
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+56],XMM3
            divsd XMM6,XMM2
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM7,XMM0
            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM2,XMM3
            movapd XMM6,XMM4
            mulsd XMM7,XMM0
            subsd XMM6,XMM8
            mulsd XMM2,XMM8
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RIP+.L_42d868]
            mulsd XMM5,XMM3
            divsd XMM2,XMM6
            movapd XMM8,XMM5
            mulsd XMM8,XMM5
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42d860]
            mulsd XMM0,XMM6
            subsd XMM3,XMM7
            mulsd XMM6,XMM5
            mulsd XMM9,XMM2
            mulsd XMM0,XMM8
            addsd XMM3,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_42d880]
            mulsd XMM2,XMM9
            mulsd XMM3,XMM8
            mulsd XMM3,QWORD PTR [RIP+.L_42d870]
            addsd XMM3,QWORD PTR [RIP+.L_42d878]
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            subsd XMM0,XMM3
            movapd XMM3,XMM0
            movapd XMM0,XMM9
            subsd XMM1,XMM3
            subsd XMM0,XMM7
            mulsd XMM7,XMM8
            addsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42d890]
            mulsd XMM2,XMM8
            mulsd XMM2,QWORD PTR [RIP+.L_42d888]
            add RSP,88
.L_42d399:

            pop RBX
            pop RBP
            subsd XMM0,XMM2
            mulsd XMM7,XMM0
            movapd XMM0,XMM6
            subsd XMM4,XMM7
            mulsd XMM0,XMM4
            ret 
.L_42d3b0:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RBX+176]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_42d283
.L_42d3f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d400:

            push RBX
            mov RBX,RDI
            sub RSP,80
.L_42d408:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM1,QWORD PTR [RAX+8]
            mov RSI,QWORD PTR [RAX]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            call .L_44c830

            lea RDI,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            call tan@PLT

            movsd XMM9,QWORD PTR [RBX+176]
            movapd XMM10,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM2,XMM0
            mulsd XMM10,XMM0
            movapd XMM0,XMM9
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42d858]
            movapd XMM5,XMM3
            movapd XMM6,XMM3
            subsd XMM5,XMM0
            pxor XMM0,XMM0
            divsd XMM6,XMM5
            ucomisd XMM0,XMM6
            sqrtsd XMM7,XMM6
            ja .L_42d555
.L_42d4c3:

            movsd XMM8,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_42d898]
            divsd XMM8,XMM7
            mulsd XMM4,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_42d8a0]
            mulsd XMM2,XMM7
            movapd XMM5,XMM8
            addsd XMM4,XMM3
            mulsd XMM5,XMM8
            mulsd XMM4,XMM5
            mulsd XMM10,XMM5
            mulsd XMM0,XMM4
            mulsd XMM4,QWORD PTR [RIP+.L_42d870]
            subsd XMM0,QWORD PTR [RIP+.L_42d8a8]
            mulsd XMM0,XMM10
            addsd XMM0,XMM3
            subsd XMM3,XMM9
            mulsd XMM0,XMM8
            mulsd XMM3,XMM7
            divsd XMM0,QWORD PTR [RSP]
            mulsd XMM3,XMM6
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_42d878]
            add RSP,80
.L_42d543:

            pop RBX
            subsd XMM3,XMM4
            mulsd XMM2,XMM5
            mulsd XMM2,XMM3
            subsd XMM1,XMM2
            ret 
.L_42d555:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM10
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM6
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            jmp .L_42d4c3
.L_42d5b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d5c0:

            push RBX
            mov RBX,RDI
            sub RSP,48

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            call atan2@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            subsd XMM1,QWORD PTR [RBX+336]
            add RSP,48

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_42d637:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d640:

            sub RSP,56
.L_42d644:

            addsd XMM1,QWORD PTR [RDI+336]
            lea RAX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM0
            mov RDI,RAX
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+40]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            add RSP,56
.L_42d6b0:

            movapd XMM1,XMM2
            ret 
.L_42d6b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d6c0:

            push R12
            push RBP
            mov ESI,16
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_42d6d5:

            call .L_403c70

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_42d770

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            call .L_44c700

            mov QWORD PTR [RBP],RAX
            mov RBP,QWORD PTR [RBX+32]
            mov R12,QWORD PTR [RBP]
            test R12,R12
            je .L_42d770

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM3
            call .L_44c7f0

            lea RAX,QWORD PTR [RIP+.L_42d400]
            movsd QWORD PTR [RBP+8],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d1e0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_42d766:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_42d770:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42d190
.L_42d780:

            test RDI,RDI
            je .L_42d7b8

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_42d7b0

            jne .L_42d7b0

            lea RAX,QWORD PTR [RIP+.L_42d640]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d5c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_42d7b0:

            jmp .L_42d6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d7b8:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42d7e6

            lea RDX,QWORD PTR [RIP+.L_42d1d0]
            lea RCX,QWORD PTR [RIP+.L_42d840]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d7e6:

            add RSP,8
            ret 
.L_42d7eb:

            nop
            nop
            nop
            nop
            nop
.L_42d7f0:

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RDI+176]
            jp .L_42d820

            jne .L_42d820

            lea RAX,QWORD PTR [RIP+.L_42d640]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d5c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d820:

            jmp .L_42d6c0
.L_42d825:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d830:

            xor EAX,EAX
            ret 
.L_42d833:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d840:
          .string "Cassini\n\tCyl, Sph&Ell"
          .byte 0x66
          .byte 0x90
.L_42d858:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42d860:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_42d868:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_42d870:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xa5
          .byte 0x3f
.L_42d878:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42d880:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_42d888:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x81
          .byte 0x3f
.L_42d890:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xc5
          .byte 0x3f
.L_42d898:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_42d8a0:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xb1
          .byte 0x3f
.L_42d8a8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_42d8b0:

            jmp .L_403ca0
.L_42d8b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d8c0:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_42d8e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d8f0:

            sub RSP,24
.L_42d8f4:

            movapd XMM2,XMM1
            movq XMM4,QWORD PTR [RIP+.L_42da40]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42da58]
            andpd XMM2,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_42da50]
            andpd XMM2,XMM4
            ucomisd XMM0,XMM2
            jae .L_42d950

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,24
.L_42d93b:

            movapd XMM1,XMM0
            movapd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d950:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM2,XMM2
            add RSP,24
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_42d96b:

            nop
            nop
            nop
            nop
            nop
.L_42d970:

            test RDI,RDI
            je .L_42d9a0

            lea RAX,QWORD PTR [RIP+.L_42d8c0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42d8f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d9a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42d9ce

            lea RDX,QWORD PTR [RIP+.L_42d8b0]
            lea RCX,QWORD PTR [RIP+.L_42da20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42d9ce:

            add RSP,8
            ret 
.L_42d9d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d9e0:

            lea RDX,QWORD PTR [RIP+.L_42d8c0]
            lea RCX,QWORD PTR [RIP+.L_42d8f0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_42da05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42da10:

            xor EAX,EAX
            ret 
.L_42da13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42da20:

            outsb DX,BYTE PTR GS:[RSI]
            je .L_42da97
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
.L_42da3a:

            push RBX
            jo .L_42daa5
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_42da40:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42da50:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_42da58:

            mov EBX,3755595709
            jl .L_42da3a
          .byte 0x3d
.L_42da60:

            test RDI,RDI
            je .L_42da90

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42da88

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+8]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42da88:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42da90:

            xor EAX,EAX
            ret 
.L_42da93:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x66
.L_42da97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42daa0:

            jmp .L_42da60
.L_42daa2:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
.L_42daa5:

            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dab0:

            sub RSP,24
            movsd XMM3,QWORD PTR [RDI+360]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            add RSP,24
            mulsd XMM2,XMM3
            divsd XMM1,XMM3
            movapd XMM0,XMM2
            ret 
.L_42daf0:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd XMM3,QWORD PTR [RDI+360]
            mulsd XMM3,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM2,QWORD PTR [RBX+216]
            call .L_44d3b0

            movsd XMM1,QWORD PTR [RIP+.L_42df10]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            movapd XMM0,XMM3
            divsd XMM1,QWORD PTR [RBX+360]
            add RSP,16

            pop RBX
            ret 
.L_42db4c:

            nop
            nop
            nop
            nop
.L_42db50:

            addsd XMM1,XMM1
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_42db5d:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RDI+360]
            mov RBP,QWORD PTR [RAX+8]
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RAX]
            call asin@PLT

            mov RDI,RBP
            call .L_44a3e0

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RBX+360]
            add RSP,24
.L_42db9e:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            ret 
.L_42dba5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dbb0:

            sub RSP,24
.L_42dbb4:

            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RDI+360]
            movsd XMM4,QWORD PTR [RIP+.L_42df30]
            mulsd XMM1,XMM3
            movapd XMM5,XMM1
            andpd XMM5,XMMWORD PTR [RIP+.L_42df40]
            movapd XMM0,XMM5
            subsd XMM0,QWORD PTR [RIP+.L_42df28]
            ucomisd XMM4,XMM0
            jb .L_42dc10

            ucomisd XMM5,XMM4
            jb .L_42dc30

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_42dc60

            movsd XMM1,QWORD PTR [RIP+.L_42df18]
.L_42dc02:

            divsd XMM2,XMM3
            add RSP,24
.L_42dc0a:

            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_42dc10:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,24
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dc30:

            movapd XMM0,XMM1
            mov QWORD PTR [RSP+8],RDI
            movsd QWORD PTR [RSP],XMM2
            call asin@PLT

            mov RDI,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RDI+360]
            jmp .L_42dc02

            nop
            nop
            nop
            nop
            nop
.L_42dc60:

            movsd XMM1,QWORD PTR [RIP+.L_42df20]
            jmp .L_42dc02
.L_42dc6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42dc70:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_42dc83:

            call .L_403c70

            test RAX,RAX
            je .L_42de10

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42deb3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            pxor XMM1,XMM1
            pxor XMM3,XMM3
            jne .L_42dcf0
.L_42dcb7:

            movsd XMM2,QWORD PTR [RBX+176]
            ucomisd XMM2,XMM1
            jp .L_42dd48

            jne .L_42dd48

            lea RAX,QWORD PTR [RIP+.L_42dbb0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42dab0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_42dce4:

            add RSP,24
.L_42dce8:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dcf0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42debb]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM3
            call cos@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBX+360],XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM1,XMM0
            jbe .L_42dcb7

            mov ESI,4294967272
            mov RDI,RBX
            call .L_415fe0

            mov RDI,RBX
            call .L_42da60

            xor EAX,EAX
            jmp .L_42dce4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dd48:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RIP+.L_42df30]
            movapd XMM3,XMM2
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM3,XMM0
            mulsd XMM0,XMM3
            subsd XMM4,XMM0
            ucomisd XMM1,XMM4
            sqrtsd XMM3,XMM4
            movapd XMM0,XMM4
            ja .L_42de1e
.L_42dd91:

            movsd XMM0,QWORD PTR [RBX+360]
            ucomisd XMM1,XMM2
            divsd XMM0,XMM3
            sqrtsd XMM3,XMM2
            movsd QWORD PTR [RBX+360],XMM0
            ja .L_42de40
.L_42ddb3:

            movsd QWORD PTR [RBX+168],XMM3
            movapd XMM0,XMM2
            call .L_44a350

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_42de10

            movsd XMM2,QWORD PTR [RBX+216]
            movsd XMM1,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RIP+.L_42df30]
            call .L_44d3b0

            lea RAX,QWORD PTR [RIP+.L_42db50]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42daf0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_42de09:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_42de10:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_42da60
.L_42de1e:

            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42dd91
.L_42de40:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42ddb3
.L_42de60:

            test RDI,RDI
            je .L_42de70

            jmp .L_42dc70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42de70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42de9e

            lea RDX,QWORD PTR [RIP+.L_42daa0]
            lea RCX,QWORD PTR [RIP+.L_42dee0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42de9e:

            add RSP,8
            ret 
.L_42dea3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42deb0:

            xor EAX,EAX
            ret 
.L_42deb3:
          .string "tlat_ts"
.L_42debb:
          .string "rlat_ts"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dee0:
          .string "Equal Area Cylindrical\n\tCyl, Sph&Ell\n\tlat_ts="
          .byte 0x66
          .byte 0x90
.L_42df10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_42df18:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_42df20:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_42df28:

            mov EBX,3755595709
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_42df30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42df40:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42df50:

            mov RAX,QWORD PTR [RDI+32]
            subsd XMM1,QWORD PTR [RDI+336]
            mulsd XMM0,QWORD PTR [RAX]
            ret 
.L_42df61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42df70:

            mov RAX,QWORD PTR [RDI+32]
            addsd XMM1,QWORD PTR [RDI+336]
            divsd XMM0,QWORD PTR [RAX]
            ret 
.L_42df81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42df90:

            test RDI,RDI
            je .L_42dfb8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42dfae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42dfae:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42dfb8:

            xor EAX,EAX
            ret 
.L_42dfbb:

            nop
            nop
            nop
            nop
            nop
.L_42dfc0:

            jmp .L_42df90
.L_42dfc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dfd0:

            push RBP
            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_42dfe3:

            call .L_403c70

            test RAX,RAX
            je .L_42e065

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42e0d3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            pxor XMM1,XMM1
            movsd QWORD PTR [RBP],XMM0
            ucomisd XMM1,XMM0
            jae .L_42e058

            lea RAX,QWORD PTR [RIP+.L_42df70]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42df50]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_42e04b:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e058:

            mov ESI,4294967272
            mov RDI,RBX
            call .L_415fe0
.L_42e065:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_42df90
.L_42e073:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e080:

            test RDI,RDI
            je .L_42e090

            jmp .L_42dfd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e090:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42e0be

            lea RDX,QWORD PTR [RIP+.L_42dfc0]
            lea RCX,QWORD PTR [RIP+.L_42e0e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42e0be:

            add RSP,8
            ret 
.L_42e0c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e0d0:

            xor EAX,EAX
            ret 
.L_42e0d3:
          .string "rlat_ts"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e0e0:
          .string "Equidistant Cylindrical (Plate Caree)\n\tCyl, Sph\n\tlat_ts=[, lat_0=0]"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_42e130:

            test RDI,RDI
            je .L_42e140

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e140:

            ret 
.L_42e142:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e150:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_42e2a8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_42e2b0]
            mulsd XMM1,QWORD PTR [RIP+.L_42e2b8]
            add RSP,24
            movapd XMM0,XMM2
            ret 
.L_42e18e:

            nop
            nop
.L_42e190:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_42e2c0]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_42e2c8]
            add RSP,24
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            ret 
.L_42e1ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e1d0:

            test RDI,RDI
            je .L_42e200

            lea RAX,QWORD PTR [RIP+.L_42e190]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42e150]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e200:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42e22e

            lea RDX,QWORD PTR [RIP+.L_42e130]
            lea RCX,QWORD PTR [RIP+.L_42e280]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42e22e:

            add RSP,8
            ret 
.L_42e233:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e240:

            lea RDX,QWORD PTR [RIP+.L_42e190]
            lea RCX,QWORD PTR [RIP+.L_42e150]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_42e265:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e270:

            xor EAX,EAX
            ret 
.L_42e273:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e280:
          .string "Gall (Gall Stereographic)\n\tCyl, Sph"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e2a8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 188607
.L_42e2b0:

            int 59
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_42e2b8:
          .byte 0xe6
          .byte 0x9d
          .byte 0x3f
          .byte 0x33
          .byte 0x4f
          .byte 0x50
          .byte 0xfb
          .byte 0x3f
.L_42e2c0:

            mov BYTE PTR [ECX],AL
            xor EAX,EBX
            mov ESI,1003306978
# WARNING: found overlapping blocks at address 2e098
.set .L_42e2c8, . - 2

          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xf6
          .byte 0x3f
.L_42e2d0:

            test RDI,RDI
            je .L_42e2f8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42e2ee

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42e2ee:

            jmp .L_403ca0

            nop
            nop
            nop
            nop
            nop
.L_42e2f8:

            xor EAX,EAX
            ret 
.L_42e2fb:

            nop
            nop
            nop
            nop
            nop
.L_42e300:

            jmp .L_42e2d0
.L_42e302:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e310:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_42e319:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42ee50]
            movsd XMM7,QWORD PTR [RBX+16]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM7
            addsd XMM0,QWORD PTR [RIP+.L_42ee58]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_42ee60]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_42ee50]
            movapd XMM4,XMM0
            addsd XMM4,XMM1
            subsd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RBX+16]
            movapd XMM6,XMM4
            divsd XMM6,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM6
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP+16]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            addsd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            movapd XMM5,XMM0
            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            subsd XMM5,QWORD PTR [RIP+.L_42ee58]
            addsd XMM5,XMM5
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RBX+16]
            movapd XMM11,XMM2
            movsd XMM4,QWORD PTR [RIP+.L_42ee50]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM11,XMM2
            mulsd XMM4,XMM6
            movapd XMM10,XMM3
            mulsd XMM2,XMM6
            mulsd XMM10,XMM3
            movsd XMM9,QWORD PTR [RIP+.L_42ee68]
            movsd XMM7,QWORD PTR [RSP+40]
            mulsd XMM4,XMM2
            movapd XMM0,XMM2
            movapd XMM5,XMM10
            mulsd XMM9,XMM11
            movapd XMM8,XMM7
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM4,XMM3
            movapd XMM3,XMM6
            movapd XMM12,XMM9
            mulsd XMM8,XMM7
            mulsd XMM3,XMM2
            subsd XMM9,XMM10
            movsd XMM2,QWORD PTR [RIP+.L_42ee70]
            mulsd XMM12,XMM11
            mulsd XMM2,XMM11
            subsd XMM11,XMM10
            mulsd XMM3,XMM6
            mulsd XMM7,XMM1
            subsd XMM5,XMM2
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM2,XMM10
            subsd XMM5,QWORD PTR [RBX+8]
            addsd XMM2,XMM12
            movapd XMM12,XMM6
            mulsd XMM12,XMM6
            mulsd XMM2,XMM12
            divsd XMM2,QWORD PTR [RIP+.L_44f380-132360]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM11
            mulsd XMM2,XMM8
            divsd XMM3,QWORD PTR [RIP+.L_42ee80]
            addsd XMM2,XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM4
            mulsd XMM2,XMM8
            mulsd XMM3,XMM6
            addsd XMM2,XMM0
            mulsd XMM3,XMM9
            mulsd XMM2,XMM7
            divsd XMM3,QWORD PTR [RIP+.L_44f380-132344]
            movapd XMM0,XMM2
            movapd XMM6,XMM2
            mulsd XMM0,XMM2
            mulsd XMM6,XMM0
            mulsd XMM3,XMM8
            addsd XMM3,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_44f380-132336]
            mulsd XMM0,XMM4
            mulsd XMM3,XMM8
            addsd XMM3,XMM5
            movapd XMM5,XMM2
            mulsd XMM5,XMM4
            movsd XMM4,QWORD PTR [RBX+32]
            mulsd XMM3,XMM1
            movapd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM5,XMM1
            mulsd XMM1,XMM3
            subsd XMM5,XMM6
            movsd XMM6,QWORD PTR [RBX+40]
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            movapd XMM7,XMM6
            add RSP,72
.L_42e582:

            pop RBX
            mulsd XMM0,XMM5
            mulsd XMM7,XMM1
            mulsd XMM5,XMM6
            mulsd XMM1,XMM4
            pop RBP
            addsd XMM0,XMM7
            subsd XMM1,XMM5
            addsd XMM0,XMM2
            addsd XMM1,XMM3
            ret 
.L_42e5a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e5b0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM9,XMM0
            movapd XMM6,XMM1
            mulsd XMM1,XMM1
            sub RSP,80
.L_42e5c8:

            mulsd XMM9,XMM0
            mov RBX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_44f380-132336]
            mov EBP,20
            movapd XMM3,XMM0
            mulsd XMM2,XMM0
            movapd XMM7,XMM1
            mulsd XMM3,XMM9
            movapd XMM5,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_44f380-132328]
            mulsd XMM7,XMM6
            mulsd XMM2,XMM1
            mulsd XMM5,XMM4
            movsd XMM10,QWORD PTR [RBX+32]
            subsd XMM2,XMM3
            movapd XMM3,XMM4
            addsd XMM5,XMM9
            movapd XMM4,XMM10
            mulsd XMM3,XMM9
            xorpd XMM4,XMMWORD PTR [RIP+.L_42eec0]
            movapd XMM8,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44f380-132336]
            addsd XMM3,XMM1
            mulsd XMM5,XMM9
            mulsd XMM2,XMM9
            mulsd XMM4,XMM8
            mulsd XMM3,XMM1
            mulsd XMM2,XMM6
            subsd XMM7,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_42ee68]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42ee68]
            mulsd XMM1,XMM9
            addsd XMM5,XMM2
            movsd XMM2,QWORD PTR [RBX+40]
            movapd XMM11,XMM2
            mulsd XMM2,XMM8
            mulsd XMM9,XMM1
            mulsd XMM11,XMM7
            mulsd XMM5,XMM0
            movsd XMM1,QWORD PTR [RBX+48]
            addsd XMM3,XMM9
            mulsd XMM7,XMM10
            movsd XMM9,QWORD PTR [RBX+56]
            subsd XMM4,XMM11
            movapd XMM11,XMM1
            mulsd XMM3,XMM6
            subsd XMM2,XMM7
            mulsd XMM11,XMM5
            mulsd XMM5,XMM9
            mulsd XMM1,XMM3
            addsd XMM4,XMM11
            movapd XMM11,XMM9
            subsd XMM2,XMM5
            mulsd XMM11,XMM3
            addsd XMM1,XMM2
            addsd XMM4,XMM11
            addsd XMM1,XMM6
            addsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+48],XMM4
            addsd XMM1,XMM0
            movsd QWORD PTR [RSP+40],XMM1
            addsd XMM1,QWORD PTR [RDI+336]
            subsd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM1
            jmp .L_42e729
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e720:

            sub EBP,1
            je .L_42e82c
.L_42e729:

            movsd XMM0,QWORD PTR [RIP+.L_42ee50]
            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM0,QWORD PTR [RIP+.L_42ee58]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [R12+168]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RIP+.L_42ee60]
            mulsd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_42ee60]
            mulsd XMM1,QWORD PTR [RIP+.L_42ee50]
            movsd XMM7,QWORD PTR [RBX+16]
            addsd XMM5,XMM0
            subsd XMM4,XMM0
            movapd XMM2,XMM5
            mulsd XMM7,XMM1
            divsd XMM2,XMM4
            movsd QWORD PTR [RSP+32],XMM7
            movapd XMM0,XMM2
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            addsd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_42ee58]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_42eea0]
            addsd XMM0,XMM0
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM6,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_42eed0]
            movsd QWORD PTR [RSP+8],XMM6
            ucomisd XMM4,XMM0
            jbe .L_42e720
.L_42e82c:

            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            mulsd XMM0,QWORD PTR [R12+168]
            movsd XMM3,QWORD PTR [RIP+.L_42ee60]
            movsd XMM6,QWORD PTR [R12+216]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM0,XMM0
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            sqrtsd XMM6,XMM3
            movsd QWORD PTR [RSP+24],XMM6
            ja .L_42e9f0
.L_42e879:

            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+72],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            mulsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM2,XMM0
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM7,XMM1
            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+32],XMM7
            mulsd XMM4,QWORD PTR [R12+360]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM8,QWORD PTR [RIP+.L_42eea8]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+32]
            mulsd XMM0,XMM8
            movapd XMM9,XMM7
            movsd XMM3,QWORD PTR [RIP+.L_44f380-132360]
            mulsd XMM1,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM0,QWORD PTR [RIP+.L_42eeb0]
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM6,XMM5
            mulsd XMM8,XMM4
            addsd XMM4,XMM4
            mulsd XMM6,XMM5
            mulsd XMM9,XMM1
            mulsd XMM0,XMM2
            mulsd XMM3,XMM9
            mulsd XMM9,QWORD PTR [RIP+.L_42ee80]
            addsd XMM0,QWORD PTR [RIP+.L_42ee68]
            mulsd XMM3,XMM7
            mulsd XMM7,XMM8
            divsd XMM0,XMM3
            movapd XMM3,XMM2
            addsd XMM3,XMM2
            addsd XMM3,QWORD PTR [RIP+.L_42ee60]
            divsd XMM3,XMM9
            mulsd XMM0,XMM6
            subsd XMM0,XMM3
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42ee60]
            mulsd XMM3,XMM6
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44f380-132336]
            mulsd XMM1,XMM2
            addsd XMM0,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_42ee68]
            mulsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM5
            divsd XMM5,XMM4
            divsd XMM1,XMM7
            mulsd XMM1,XMM6
            subsd XMM1,XMM5
            mulsd XMM1,XMM6
            addsd XMM1,QWORD PTR [RSP+8]
            add RSP,80
.L_42e9eb:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42e9f0:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            jmp .L_42e879
.L_42ea0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42ea10:

            push RBP
            push RBX
            mov ESI,72
            mov RBX,RDI
            mov EDI,1
            sub RSP,88
.L_42ea23:

            call .L_403c70

            test RAX,RAX
            je .L_42ece0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_42ee13]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            sete AL
            lea RDX,QWORD PTR [RIP+.L_42ee1b]
            movzx EAX,AL
            mov DWORD PTR [RBP+64],EAX
            call .L_4043f0

            movsd XMM0,QWORD PTR [RBX+336]
            mov QWORD PTR [RSP+24],RAX
            call sin@PLT

            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RIP+.L_42ee60]
            mulsd XMM0,XMM3
            movapd XMM2,XMM1
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            subsd XMM2,XMM0
            ucomisd XMM4,XMM2
            sqrtsd XMM5,XMM2
            ja .L_42ed70
.L_42eab1:

            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM6,QWORD PTR [RBX+360]
            divsd XMM7,XMM5
            mulsd XMM0,XMM7
            movapd XMM5,XMM7
            divsd XMM0,XMM2
            movapd XMM2,XMM0
            movapd XMM0,XMM7
            mulsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM7,XMM0
            ja .L_42ed14
.L_42eaef:

            divsd XMM2,XMM5
            mulsd XMM6,XMM7
            ucomisd XMM4,XMM2
            sqrtsd XMM7,XMM2
            movsd QWORD PTR [RBP],XMM6
            movsd QWORD PTR [RSP],XMM7
            ja .L_42ecee
.L_42eb0f:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP]
            call atan@PLT

            movsd QWORD PTR [RBP+8],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+168]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM4,XMM3
            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+40],XMM2
            movapd XMM6,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM4,XMM0
            movapd XMM0,XMM3
            subsd XMM6,XMM3
            addsd XMM0,XMM1
            divsd XMM0,XMM6
            movsd QWORD PTR [RBP+16],XMM4
            movsd QWORD PTR [RSP+48],XMM4
            call log@PLT

            movsd XMM7,QWORD PTR [RIP+.L_42ee50]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM7,QWORD PTR [RBX+336]
            movsd XMM0,QWORD PTR [RBP+16]
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_42ee58]
            xorpd XMM3,XMMWORD PTR [RIP+.L_42eec0]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RIP+.L_42ee50]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM5,QWORD PTR [RBP+8]
            movsd XMM0,QWORD PTR [RIP+.L_42ee58]
            addsd XMM0,XMM5
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RSP+64]
            mulsd XMM2,QWORD PTR [RIP+.L_42ee50]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RSP]
            addsd XMM2,XMM3
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_42e5b0]
            movsd XMM2,QWORD PTR [RIP+.L_44f380-132344]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM3
            movapd XMM6,XMM1
            movsd XMM0,QWORD PTR [RSP+72]
            subsd XMM1,QWORD PTR [RSP+64]
            mulsd XMM2,XMM3
            divsd XMM6,XMM2
            mulsd XMM1,XMM6
            mulsd XMM0,XMM6
            movapd XMM2,XMM1
            movsd QWORD PTR [RBP+32],XMM1
            movapd XMM3,XMM0
            movsd QWORD PTR [RBP+40],XMM0
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_42ee80]
            subsd XMM2,XMM3
            mulsd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_44f380-132336]
            movsd QWORD PTR [RBP+56],XMM1
            movsd QWORD PTR [RBP+48],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42e310]
            mov QWORD PTR [RBX+40],RAX
            add RSP,88
.L_42ecd3:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ece0:

            add RSP,88
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_42e2d0
.L_42ecee:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_42eb0f
.L_42ed14:

            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_42eaef
.L_42ed70:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_42eab1
.L_42edb8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42edc0:

            test RDI,RDI
            je .L_42edd0

            jmp .L_42ea10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42edd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_42edfe

            lea RDX,QWORD PTR [RIP+.L_42e300]
            lea RCX,QWORD PTR [RIP+.L_42ee20]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_42edfe:

            add RSP,8
            ret 
.L_42ee03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ee10:

            xor EAX,EAX
            ret 
.L_42ee13:
          .string "bno_rot"
.L_42ee1b:
          .string "razi"
.L_42ee20:
          .string "Laborde\n\tCyl, Sph\n\tSpecial for Madagascar"
# WARNING: found overlapping blocks at address 2ebfc
# WARNING: found overlapping blocks at address 2ec01
# WARNING: found overlapping blocks at address 2ec06
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ee50:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 191591
.L_42ee58:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_42ee60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42ee68:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            adc AL,64
.L_42ee70:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            xor AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RSI+64],BL
.L_42ee80:

            add BYTE PTR [RAX],AL
.L_42ee82:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            sbb BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],CH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            or BYTE PTR [RAX],AL
.L_42ee99:

            add BYTE PTR [RAX],AL
.L_42ee9b:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+RAX*8],AH
.L_42eea0:

            mov EBX,3755595709
            jl .L_42ee82
          .byte 0x3d
.L_42eea8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x40
.L_42eeb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eec0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eed0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42eee0:

            test RDI,RDI
            je .L_42ef08

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_42eefe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_42eefe:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ef08:

            xor EAX,EAX
            ret 
.L_42ef0b:

            nop
            nop
            nop
            nop
            nop
.L_42ef10:

            jmp .L_42eee0
.L_42ef12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ef20:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,152
.L_42ef30:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM1,QWORD PTR [RIP+.L_430260]
            movsd QWORD PTR [RSP+8],XMM0
            ja .L_42ef90

            movapd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_430280]
            ucomisd XMM1,XMM5
            jbe .L_42f23c

            movsd XMM5,QWORD PTR [RIP+.L_430268]
            movsd XMM0,QWORD PTR [RIP+.L_430278]
            movsd QWORD PTR [RSP+88],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_430270]
            movsd QWORD PTR [RSP+104],XMM1
            movsd QWORD PTR [RSP+72],XMM5
            pxor XMM5,XMM5
            movsd QWORD PTR [RSP+96],XMM5
            jmp .L_42efc1
.L_42ef90:

            movsd XMM5,QWORD PTR [RIP+.L_430258]
            mov RAX,QWORD PTR [RIP+.L_430260]
            movsd XMM0,QWORD PTR [RIP+.L_430288]
            movsd QWORD PTR [RSP+88],XMM5
            pxor XMM5,XMM5
            mov QWORD PTR [RSP+104],RAX
            mov QWORD PTR [RSP+72],RAX
            movsd QWORD PTR [RSP+96],XMM5
.L_42efc1:

            movsd XMM6,QWORD PTR [R13+216]
            mov R12D,3
            movsd XMM7,QWORD PTR [RBP+80]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+112],XMM6
            movsd XMM5,QWORD PTR [RBP+72]
            movsd XMM4,QWORD PTR [RBP+88]
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM5,QWORD PTR [RSP+72]
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+120],XMM7
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+80],XMM0
.L_42f020:

            movsd XMM5,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RIP+.L_430260]
            ucomisd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+88]
            ja .L_42f1c0

            movsd XMM5,QWORD PTR [RSP+72]
            subsd XMM5,XMM0
            movsd QWORD PTR [RSP+40],XMM5
.L_42f050:

            movsd XMM3,QWORD PTR [RSP+80]
            mov EBX,50
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_42f09d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f068:

            sub EBX,1
            cmp EBX,-1
            je .L_42f147

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM3,XMM0
            movapd XMM1,XMM2
.L_42f09d:

            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RIP+.L_4302a0]
            andpd XMM2,XMMWORD PTR [RIP+.L_430380]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            jbe .L_42f0cb

            subsd XMM0,XMM7
.L_42f0cb:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd QWORD PTR [RSP+64],XMM0
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+56]
            divsd XMM0,XMM3
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_4302a0]
            andpd XMM1,XMMWORD PTR [RIP+.L_430380]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_430380]
            subsd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_430380]
            ucomisd XMM7,XMM1
            jbe .L_42f068

            test EBX,EBX
            je .L_42f1e0
.L_42f147:

            sub R12D,1
            je .L_42f1d8

            movsd XMM0,QWORD PTR [RBP+104]
            ucomisd XMM2,XMM0
            jbe .L_42f16b

            movsd XMM1,QWORD PTR [RBP+112]
            ucomisd XMM1,XMM2
            ja .L_42f288
.L_42f16b:

            ucomisd XMM0,XMM2
            jae .L_42f200

            ucomisd XMM2,QWORD PTR [RBP+112]
            jb .L_42f020

            movsd XMM0,QWORD PTR [RIP+.L_430260]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_430258]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_430260]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42f020
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f1c0:

            addsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_42f050
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f1d8:

            test EBX,EBX
            jne .L_42f288
.L_42f1e0:

            movsd XMM1,QWORD PTR [RIP+.L_430298]
            movapd XMM3,XMM1
.L_42f1ec:

            add RSP,152
.L_42f1f3:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_42f200:

            movsd XMM0,QWORD PTR [RIP+.L_430290]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_430258]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RIP+.L_430290]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42f020
.L_42f23c:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM5
            call tan@PLT

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+104]
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+96],XMM6
            jb .L_42f503

            mov RAX,QWORD PTR [RIP+.L_430260]
            movsd XMM5,QWORD PTR [RIP+.L_430258]
            movsd QWORD PTR [RSP+88],XMM5
            mov QWORD PTR [RSP+72],RAX
            jmp .L_42efc1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f288:

            lea RBX,QWORD PTR [RSP+136]
            lea R12,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+8],XMM2
            movsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+112]
            mulsd XMM0,QWORD PTR [RSP+128]
            mulsd XMM1,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RIP+.L_430258]
            movsd XMM7,QWORD PTR [RSP+96]
            movapd XMM6,XMM5
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM1,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM3
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM6,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            ucomisd XMM7,XMM0
            ja .L_42f524
.L_42f32c:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+48],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R13]
            movsd XMM5,QWORD PTR [RSP+128]
            divsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM3,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+8],XMM3
            call .L_449c40

            mulsd XMM0,QWORD PTR [RIP+.L_4302a8]
            addsd XMM0,QWORD PTR [RIP+.L_4302b0]
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM3,XMM5
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM4,QWORD PTR [RBP+64]
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBP+72]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RBP+40]
            mulsd XMM1,QWORD PTR [RBP+80]
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+96]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM4
            divsd XMM0,XMM3
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_42f540
.L_42f403:

            mulsd XMM1,XMM3
            movsd XMM4,QWORD PTR [RBP+96]
            movapd XMM0,XMM4
            movapd XMM3,XMM1
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            addsd XMM0,XMM3
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM5
            movsd XMM5,QWORD PTR [RSP+96]
            ucomisd XMM5,XMM0
            ja .L_42f568
.L_42f43a:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4302b8]
            mulsd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RBP+16]
            mulsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM3,XMM2
            divsd XMM1,QWORD PTR [RSP+24]
            addsd XMM3,XMM5
            addsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_4302c0]
            subsd XMM3,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP+32]
            mulsd XMM1,QWORD PTR [RBP+24]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RSP+24]
            addsd XMM1,XMM0
            jmp .L_42f1ec
.L_42f503:

            movsd XMM5,QWORD PTR [RIP+.L_430268]
            movsd QWORD PTR [RSP+88],XMM5
            movsd XMM5,QWORD PTR [RIP+.L_430270]
            movsd QWORD PTR [RSP+72],XMM5
            jmp .L_42efc1
.L_42f524:

            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_42f32c
.L_42f540:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_42f403
.L_42f568:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_42f43a
.L_42f58f:

            nop
.L_42f590:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,50
            push RBX
            movapd XMM5,XMM0
            sub RSP,96
.L_42f5a8:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+72],XMM0
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM1
            divsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_42f5de
          .byte 0x66
          .byte 0x90
.L_42f5d0:

            sub EBP,1
            je .L_42f74f

            movsd QWORD PTR [RSP],XMM1
.L_42f5de:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RBX+48]
            movapd XMM1,XMM2
            movsd XMM3,QWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RBX+72]
            mulsd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM4,QWORD PTR [RBX+80]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RBX+40]
            addsd XMM0,QWORD PTR [RIP+.L_430258]
            mulsd XMM4,QWORD PTR [RSP+80]
            addsd XMM3,QWORD PTR [RIP+.L_430258]
            addsd XMM1,QWORD PTR [RIP+.L_430258]
            mulsd XMM1,XMM3
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42faca
.L_42f655:

            movsd XMM7,QWORD PTR [RSP]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RBX+96]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            call sin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4302b8]
            mulsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4302c0]
            movsd XMM6,QWORD PTR [RBX+24]
            mulsd XMM0,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM4
            divsd XMM0,XMM5
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM6,QWORD PTR [RBX]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,XMM0
            subsd XMM1,XMM6
            subsd XMM1,XMM3
            subsd XMM1,XMM2
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_430380]
            ucomisd XMM0,QWORD PTR [RIP+.L_4302a0]
            jae .L_42f5d0
.L_42f74f:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            pxor XMM7,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM4,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM5
            divsd XMM4,XMM5
            addsd XMM4,QWORD PTR [RIP+.L_430258]
            ucomisd XMM7,XMM4
            sqrtsd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            ja .L_42faf8
.L_42f7c5:

            movsd XMM0,QWORD PTR [RIP+.L_4302c0]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP]
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+64]
            subsd XMM7,XMM2
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            call exp@PLT

            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RIP+.L_4302b0]
            movsd XMM5,QWORD PTR [RIP+.L_4302a0]
            andpd XMM3,XMMWORD PTR [RIP+.L_430380]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM0
            mulsd XMM2,XMM2
            ucomisd XMM5,XMM3
            jbe .L_42f84e

            subsd XMM1,XMM5
.L_42f84e:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP],XMM5
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [R14+224]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_430258]
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX+40]
            subsd XMM4,XMM6
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM7,XMM6
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM7
            movsd XMM3,QWORD PTR [RBX+56]
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_430258]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_430258]
            subsd XMM2,XMM5
            mulsd XMM5,XMM3
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_42fb22
.L_42f929:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+56],XMM3
            call cos@PLT

            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_430258]
            movsd XMM2,QWORD PTR [RIP+.L_430258]
            divsd XMM0,XMM5
            mulsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+16]
            subsd XMM5,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM2
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_430258]
            movsd XMM1,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            jae .L_42f9c0

            movsd XMM2,QWORD PTR [RIP+.L_430268]
.L_42f9c0:

            pxor XMM4,XMM4
            pxor XMM3,XMM3
            ucomisd XMM5,XMM4
            jae .L_42f9d6

            movsd XMM3,QWORD PTR [RIP+.L_4302c8]
.L_42f9d6:

            mulsd XMM2,XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM7,QWORD PTR [RIP+.L_4302a0]
            movsd XMM4,QWORD PTR [R14+216]
            subsd XMM0,XMM2
            movapd XMM3,XMM0
            subsd XMM3,XMM1
            movapd XMM1,XMM6
            andpd XMM1,XMMWORD PTR [RIP+.L_430380]
            ucomisd XMM7,XMM1
            ja .L_42fa80

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+88]
            mulsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+88]
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM4
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
.L_42fa67:

            add RSP,96
.L_42fa6b:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fa80:

            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM4,XMM4
            mulsd XMM0,QWORD PTR [R14+176]
            pxor XMM6,XMM6
            addsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_42fb3c
.L_42faa8:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_42fa67
.L_42faca:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_42f655
.L_42faf8:

            movapd XMM0,XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_42f7c5
.L_42fb22:

            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+56]
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_42f929
.L_42fb3c:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_42faa8
.L_42fb5c:

            nop
            nop
            nop
            nop
.L_42fb60:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_42fb68:

            mulsd XMM0,QWORD PTR [RIP+.L_4302d0]
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM4,XMM4
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM7,QWORD PTR [RIP+.L_430258]
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            mulsd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+72]
            addsd XMM2,XMM7
            movsd XMM5,QWORD PTR [RSP+80]
            addsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RBX+80]
            addsd XMM0,XMM7
            movapd XMM6,XMM2
            mulsd XMM6,XMM3
            mulsd XMM1,XMM5
            divsd XMM0,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42fd4e
.L_42fbf7:

            movapd XMM0,XMM3
            mulsd XMM1,XMM8
            divsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_42fe07
.L_42fc13:

            mulsd XMM3,XMM3
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+72]
            mulsd XMM7,XMM1
            mulsd XMM0,QWORD PTR [RBX+88]
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RBX+96]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM8
            addsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_42fdbc
.L_42fc55:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4302b8]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            addsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4302c0]
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM5,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX+24],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            add RSP,96
.L_42fd4c:

            pop RBX
            ret 
.L_42fd4e:

            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            addsd XMM3,XMM7
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_42fbf7
.L_42fdbc:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+96]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_42fc55
.L_42fe07:

            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM4,XMM7
            movapd XMM2,XMM4
            jmp .L_42fc13
.L_42fe74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fe80:

            push R12
            push RBP
            mov ESI,120
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_42fe95:

            call .L_403c70

            test RAX,RAX
            je .L_430155

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_430203]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov R12,RAX
            lea EAX,DWORD PTR [RAX-1]
            mov ESI,4294967268
            cmp EAX,4
            ja .L_43014d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_430209]
            call .L_4043f0

            test EAX,EAX
            jle .L_430148

            cmp R12D,3
            jg .L_430168

            cmp EAX,251
            jg .L_430148

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_430320]
            movsd XMM2,QWORD PTR [RIP+.L_430300]
            cvtsi2sd XMM0,EAX
            movsd XMM3,QWORD PTR [RIP+.L_430308]
            mulsd XMM0,QWORD PTR [RIP+.L_430318]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_430310]
            movsd QWORD PTR [RBX+328],XMM1
.L_42ff3d:

            movsd XMM4,QWORD PTR [RBX+176]
            mov RAX,QWORD PTR [RIP+.L_430368]
            mov R12D,5
            movsd QWORD PTR [RBP+72],XMM0
            mov RDI,QWORD PTR [RBX+32]
            movapd XMM1,XMM4
            movapd XMM0,XMM4
            movsd QWORD PTR [RBP+88],XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+80],XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM1
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_430258]
            movsd XMM1,QWORD PTR [RBX+224]
            subsd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RIP+.L_430258]
            movsd QWORD PTR [RBP+64],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_430338]
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+48],XMM0
            movsd QWORD PTR [RBP+56],XMM1
            movsd XMM1,QWORD PTR [RBX+216]
            mov QWORD PTR [RBP+104],RAX
            movapd XMM0,XMM1
            mov RAX,QWORD PTR [RIP+.L_430370]
            mov QWORD PTR [RBP+32],0
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+16],0
            mulsd XMM0,XMM1
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+112],RAX
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_430258]
            movsd QWORD PTR [RBP+96],XMM0
            pxor XMM0,XMM0
            call .L_42fb60

            movsd XMM2,QWORD PTR [RIP+.L_4302d8]
.L_430042:

            mov RDI,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_4302b8]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42fb60

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_4302e0]
            jne .L_430042

            movsd XMM2,QWORD PTR [RIP+.L_4302e0]
            mov R12D,4
.L_43007f:

            mov RDI,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_430338]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_42fb60

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_4302e0]
            jne .L_43007f

            mov RDI,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RIP+.L_430258]
            movsd XMM0,QWORD PTR [RIP+.L_430340]
            call .L_42fb60

            movsd XMM0,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_42f590]
            movsd XMM1,QWORD PTR [RIP+.L_430348]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RBP+8]
            divsd XMM0,QWORD PTR [RIP+.L_430350]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+16],XMM0
            movsd XMM0,QWORD PTR [RBP+24]
            divsd XMM0,QWORD PTR [RIP+.L_430358]
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RBP+32]
            divsd XMM0,QWORD PTR [RIP+.L_430360]
            movsd QWORD PTR [RBP+32],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_42ef20]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_43013b:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430148:

            mov ESI,4294967267
.L_43014d:

            mov RDI,RBX
            call .L_415fe0
.L_430155:

            add RSP,16
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_42eee0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430168:

            cmp EAX,233
            jg .L_430148

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_430330]
            movsd XMM2,QWORD PTR [RIP+.L_4302e8]
            cvtsi2sd XMM0,EAX
            movsd XMM3,QWORD PTR [RIP+.L_44f380-127120]
            mulsd XMM0,QWORD PTR [RIP+.L_430328]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4302f8]
            movsd QWORD PTR [RBX+328],XMM1
            jmp .L_42ff3d
.L_4301b0:

            test RDI,RDI
            je .L_4301c0

            jmp .L_42fe80
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4301c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4301ee

            lea RDX,QWORD PTR [RIP+.L_42ef10]
            lea RCX,QWORD PTR [RIP+.L_430220]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4301ee:

            add RSP,8
            ret 
.L_4301f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430200:

            xor EAX,EAX
            ret 
.L_430203:
          .string "ilsat"
.L_430209:
          .string "ipath"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430220:
          .string "Space oblique for LANDSAT\n\tCyl, Sph&Ell\n\tlsat= path="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430258:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_430260:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_430268:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_430270:

            shl BYTE PTR [RCX],CL
            xor EDI,DWORD PTR [RDI+124]
            fst DWORD PTR [RDX]
            mov BPL,205
            xor DWORD PTR [RSI+RDX*4+2],EDI
            ret 
# WARNING: found overlapping blocks at address 30048
.set .L_430278, . - 8

.L_430280:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_430288:
          .byte 0xb5
          .byte 0xcd
          .byte 0x31
          .byte 0x7c
          .byte 0x96
          .byte 0x2
          .byte 0x4d
          .byte 0x43
.L_430290:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0x1f
          .byte 0x40
.L_430298:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_4302a0:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_4302a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4302b0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_4302b8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            adc BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],CL
            sbb BYTE PTR [RIP+.L_65fea8+567826538],BPL
# WARNING: found overlapping blocks at address 30090
.set .L_4302c0, . - 14

# WARNING: found overlapping blocks at address 30098
.set .L_4302c8, . - 6

          .byte 0x9
          .byte 0x40
.L_4302d0:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_4302d8:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            and AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDX],DH
            fnsave DWORD PTR [RSI]
            stosb BYTE PTR [RDI]
            ret 22975
# WARNING: found overlapping blocks at address 300b0
.set .L_4302e0, . - 17
# WARNING: found overlapping blocks at address 300b8
.set .L_4302e8, . - 9

# WARNING: found overlapping blocks at address 300b9

            insd DWORD PTR [RDI],DX
            ret 
          .byte 0x33
          .byte 0x3f
          .byte 0xac
          .byte 0xef
          .byte 0x3f
.L_4302f8:
          .byte 0x7e
          .byte 0x43
          .byte 0xa2
          .byte 0x80
          .byte 0x53
          .byte 0x94
          .byte 0xb1
          .byte 0x3f
.L_430300:
          .byte 0x44
          .byte 0xfe
          .byte 0x8b
          .byte 0x7c
          .byte 0x1
          .byte 0x3a
          .byte 0xc4
          .byte 0xbf
.L_430308:
          .byte 0xb6
          .byte 0x99
          .byte 0x85
          .byte 0x21
          .byte 0x13
          .byte 0x99
          .byte 0xef
          .byte 0x3f
.L_430310:
          .byte 0x77
          .byte 0x4f
          .byte 0xe8
          .byte 0xf6
          .byte 0xca
          .byte 0x5b
          .byte 0xb2
          .byte 0x3f
.L_430318:
          .byte 0xbb
          .byte 0x53
          .byte 0xa1
          .byte 0x12
          .byte 0x26
          .byte 0xa2
          .byte 0x99
          .byte 0x3f
.L_430320:
          .byte 0xd
          .byte 0xdb
          .byte 0x39
          .byte 0x9d
          .byte 0x5f
          .byte 0xfe
          .byte 0x1
          .byte 0x40
.L_430328:
          .byte 0x13
          .byte 0x6f
          .byte 0x88
          .byte 0x88
          .byte 0x18
          .byte 0x9d
          .byte 0x9b
          .byte 0x3f
.L_430330:
          .byte 0x39
          .byte 0xa7
          .byte 0xf8
          .byte 0x59
          .byte 0xbe
          .byte 0xd
          .byte 0x2
          .byte 0x40
.L_430338:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_430340:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_430348:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_430350:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_430358:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
.L_430360:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_430368:
          .byte 0x23
          .byte 0x16
          .byte 0xec
          .byte 0x9f
          .byte 0x6a
          .byte 0x25
          .byte 0xfa
          .byte 0x3f
.L_430370:
          .byte 0xa1
          .byte 0x32
          .byte 0x3f
          .byte 0xfc
          .byte 0x55
          .byte 0xab
          .byte 0x1f
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430380:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430390:

            test RDI,RDI
            je .L_4303b8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4303ae

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4303ae:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4303b8:

            xor EAX,EAX
            ret 
.L_4303bb:

            nop
            nop
            nop
            nop
            nop
.L_4303c0:

            jmp .L_430390
.L_4303c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4303d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,152
.L_4303e0:

            mov RBP,QWORD PTR [RDI+32]
            ucomisd XMM1,QWORD PTR [RIP+.L_431658]
            movsd QWORD PTR [RSP+8],XMM0
            ja .L_430440

            movapd XMM5,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_431678]
            ucomisd XMM1,XMM5
            jbe .L_43094e

            pxor XMM5,XMM5
            movsd QWORD PTR [RSP+104],XMM1
            movsd XMM4,QWORD PTR [RIP+.L_431660]
            movsd XMM7,QWORD PTR [RIP+.L_431668]
            movsd QWORD PTR [RSP+96],XMM4
            movsd XMM0,QWORD PTR [RIP+.L_431670]
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+88],XMM5
            jmp .L_430471
.L_430440:

            pxor XMM6,XMM6
            mov RAX,QWORD PTR [RIP+.L_431658]
            movsd XMM5,QWORD PTR [RIP+.L_431650]
            movsd XMM0,QWORD PTR [RIP+.L_431680]
            movsd QWORD PTR [RSP+96],XMM5
            mov QWORD PTR [RSP+104],RAX
            mov QWORD PTR [RSP+72],RAX
            movsd QWORD PTR [RSP+88],XMM6
.L_430471:

            movsd XMM7,QWORD PTR [R13+216]
            mov R12D,3
            movsd XMM4,QWORD PTR [RBP+80]
            mulsd XMM0,XMM7
            movsd QWORD PTR [RSP+112],XMM7
            movsd XMM5,QWORD PTR [RBP+72]
            movsd XMM6,QWORD PTR [RBP+88]
            movsd QWORD PTR [RSP+32],XMM5
            mulsd XMM5,QWORD PTR [RSP+72]
            mulsd XMM0,XMM4
            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM0,XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+80],XMM0
.L_4304d0:

            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RIP+.L_431658]
            ucomisd XMM5,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+96]
            ja .L_430660

            movsd XMM5,QWORD PTR [RSP+72]
            subsd XMM5,XMM0
            movsd QWORD PTR [RSP+40],XMM5
.L_430500:

            movsd XMM3,QWORD PTR [RSP+80]
            mov EBX,50
            movsd XMM1,QWORD PTR [RSP+72]
            jmp .L_43054a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430518:

            sub EBX,1
            je .L_430940

            movsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM3,XMM0
            movapd XMM1,XMM2
.L_43054a:

            movapd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RIP+.L_431698]
            andpd XMM2,XMMWORD PTR [RIP+.L_431740]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM2
            addsd XMM0,QWORD PTR [RSP+8]
            jbe .L_430578

            subsd XMM0,XMM7
.L_430578:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd QWORD PTR [RSP+64],XMM0
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+56]
            divsd XMM0,XMM3
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_431698]
            andpd XMM1,XMMWORD PTR [RIP+.L_431740]
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_431740]
            subsd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_431740]
            ucomisd XMM7,XMM1
            jbe .L_430518

            sub R12D,1
            je .L_430678

            movsd XMM0,QWORD PTR [RBP+104]
            ucomisd XMM2,XMM0
            jbe .L_43060c

            movsd XMM1,QWORD PTR [RBP+112]
            ucomisd XMM1,XMM2
            ja .L_430678
.L_43060c:

            ucomisd XMM0,XMM2
            jae .L_430900

            ucomisd XMM2,QWORD PTR [RBP+112]
            jb .L_4304d0

            movsd XMM0,QWORD PTR [RIP+.L_431658]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_431650]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RIP+.L_431658]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_4304d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430660:

            addsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_430500
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430678:

            lea RBX,QWORD PTR [RSP+136]
            lea R12,QWORD PTR [RSP+128]
            movsd QWORD PTR [RSP+24],XMM2
            movsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+120]
            movsd XMM1,QWORD PTR [RSP+112]
            mulsd XMM0,QWORD PTR [RSP+128]
            mulsd XMM1,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+136]
            movsd XMM5,QWORD PTR [RIP+.L_431650]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM6,XMM5
            mulsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM1,XMM3
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [R13+176]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            mulsd XMM0,XMM3
            subsd XMM6,XMM0
            movapd XMM0,XMM6
            sqrtsd XMM7,XMM6
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM6,QWORD PTR [RSP+88]
            ucomisd XMM6,XMM0
            ja .L_430a02
.L_43071c:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+48],XMM5
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R13]
            movsd XMM5,QWORD PTR [RSP+128]
            divsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM3,QWORD PTR [RSP+136]
            movsd QWORD PTR [RSP+24],XMM3
            call .L_449c40

            mulsd XMM0,QWORD PTR [RIP+.L_4316a0]
            addsd XMM0,QWORD PTR [RIP+.L_4316a8]
            call tan@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM3,XMM5
            movsd XMM0,QWORD PTR [RBP+48]
            movsd XMM4,QWORD PTR [RBP+64]
            mulsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RBP+72]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RBP+40]
            mulsd XMM1,QWORD PTR [RBP+80]
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            addsd XMM3,XMM5
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM4
            divsd XMM0,XMM3
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_4309da
.L_4307f3:

            mulsd XMM1,XMM3
            movsd XMM4,QWORD PTR [RBP+96]
            movapd XMM0,XMM4
            movapd XMM3,XMM1
            mulsd XMM0,XMM4
            mulsd XMM3,XMM1
            addsd XMM0,XMM3
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+16],XMM5
            movsd XMM5,QWORD PTR [RSP+88]
            ucomisd XMM5,XMM0
            ja .L_4309b3
.L_43082a:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+56],XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44f380-122064]
            mulsd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RBP+16]
            mulsd XMM0,QWORD PTR [RBP+8]
            mulsd XMM3,XMM2
            divsd XMM1,QWORD PTR [RSP+16]
            addsd XMM3,XMM5
            addsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_4316b8]
            subsd XMM3,XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RBP+32]
            mulsd XMM1,QWORD PTR [RBP+24]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            divsd XMM0,QWORD PTR [RSP+16]
            addsd XMM1,XMM0
.L_4308ee:

            add RSP,152
.L_4308f5:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_430900:

            movsd XMM0,QWORD PTR [RIP+.L_431688]
            mulsd XMM0,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RIP+.L_431650]
            movsd QWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+96],RAX
            mov RAX,QWORD PTR [RIP+.L_431688]
            mov QWORD PTR [RSP+72],RAX
            jmp .L_4304d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430940:

            movsd XMM1,QWORD PTR [RIP+.L_431690]
            movapd XMM3,XMM1
            jmp .L_4308ee
.L_43094e:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+104],XMM5
            call tan@PLT

            pxor XMM6,XMM6
            movsd XMM5,QWORD PTR [RSP+104]
            ucomisd XMM5,XMM6
            movsd QWORD PTR [RSP+88],XMM6
            jb .L_430992

            mov RAX,QWORD PTR [RIP+.L_431658]
            movsd XMM4,QWORD PTR [RIP+.L_431650]
            movsd QWORD PTR [RSP+96],XMM4
            mov QWORD PTR [RSP+72],RAX
            jmp .L_430471
.L_430992:

            movsd XMM7,QWORD PTR [RIP+.L_431660]
            movsd QWORD PTR [RSP+96],XMM7
            movsd XMM7,QWORD PTR [RIP+.L_431668]
            movsd QWORD PTR [RSP+72],XMM7
            jmp .L_430471
.L_4309b3:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+96]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            jmp .L_43082a
.L_4309da:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_4307f3
.L_430a02:

            movsd QWORD PTR [RSP+32],XMM5
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_43071c
.L_430a1e:

            nop
            nop
.L_430a20:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,50
            push RBX
            movapd XMM5,XMM0
            sub RSP,96
.L_430a38:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+72],XMM0
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM1
            divsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP],XMM5
            jmp .L_430a6e
          .byte 0x66
          .byte 0x90
.L_430a60:

            sub EBP,1
            je .L_430bdf

            movsd QWORD PTR [RSP],XMM1
.L_430a6e:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RBX+48]
            movapd XMM1,XMM2
            movsd XMM3,QWORD PTR [RBX+64]
            movsd XMM4,QWORD PTR [RBX+72]
            mulsd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM4,QWORD PTR [RBX+80]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RBX+40]
            addsd XMM0,QWORD PTR [RIP+.L_431650]
            mulsd XMM4,QWORD PTR [RSP+80]
            addsd XMM3,QWORD PTR [RIP+.L_431650]
            addsd XMM1,QWORD PTR [RIP+.L_431650]
            mulsd XMM1,XMM3
            divsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM1,XMM0
            ja .L_430f5a
.L_430ae5:

            movsd XMM7,QWORD PTR [RSP]
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+56],XMM2
            movapd XMM0,XMM7
            movsd XMM5,QWORD PTR [RBX+96]
            addsd XMM0,XMM7
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            call sin@PLT

            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44f380-122064]
            mulsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4316b8]
            movsd XMM6,QWORD PTR [RBX+24]
            mulsd XMM0,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd XMM2,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,XMM5
            addsd XMM2,XMM0
            movapd XMM0,XMM4
            divsd XMM0,XMM5
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM6,QWORD PTR [RBX]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,XMM0
            subsd XMM1,XMM6
            subsd XMM1,XMM3
            subsd XMM1,XMM2
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RSP]
            andpd XMM0,XMMWORD PTR [RIP+.L_431740]
            ucomisd XMM0,QWORD PTR [RIP+.L_431698]
            jae .L_430a60
.L_430bdf:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM5
            pxor XMM7,XMM7
            movsd XMM5,QWORD PTR [RSP+88]
            mulsd XMM4,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM5
            divsd XMM4,XMM5
            addsd XMM4,QWORD PTR [RIP+.L_431650]
            ucomisd XMM7,XMM4
            sqrtsd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            ja .L_430f88
.L_430c55:

            movsd XMM0,QWORD PTR [RIP+.L_4316b8]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call sin@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM7,QWORD PTR [RSP]
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RSP+64]
            subsd XMM7,XMM2
            subsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM7
            call exp@PLT

            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            subsd XMM0,QWORD PTR [RIP+.L_4316a8]
            movsd XMM5,QWORD PTR [RIP+.L_431698]
            andpd XMM3,XMMWORD PTR [RIP+.L_431740]
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+40]
            addsd XMM0,XMM0
            mulsd XMM2,XMM2
            ucomisd XMM5,XMM3
            jbe .L_430cde

            subsd XMM1,XMM5
.L_430cde:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP],XMM5
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [R14+224]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_431650]
            mulsd XMM6,XMM5
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX+40]
            subsd XMM4,XMM6
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM7,XMM6
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM7
            movsd XMM3,QWORD PTR [RBX+56]
            mulsd XMM0,QWORD PTR [RBX+88]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_431650]
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_431650]
            subsd XMM2,XMM5
            mulsd XMM5,XMM3
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_430fb2
.L_430db9:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+56],XMM3
            call cos@PLT

            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM5
            addsd XMM3,QWORD PTR [RIP+.L_431650]
            movsd XMM2,QWORD PTR [RIP+.L_431650]
            divsd XMM0,XMM5
            mulsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+16]
            subsd XMM5,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM2
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_431650]
            movsd XMM1,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            jae .L_430e50

            movsd XMM2,QWORD PTR [RIP+.L_431660]
.L_430e50:

            pxor XMM4,XMM4
            pxor XMM3,XMM3
            ucomisd XMM5,XMM4
            jae .L_430e66

            movsd XMM3,QWORD PTR [RIP+.L_4316c0]
.L_430e66:

            mulsd XMM2,XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM7,QWORD PTR [RIP+.L_431698]
            movsd XMM4,QWORD PTR [R14+216]
            subsd XMM0,XMM2
            movapd XMM3,XMM0
            subsd XMM3,XMM1
            movapd XMM1,XMM6
            andpd XMM1,XMMWORD PTR [RIP+.L_431740]
            ucomisd XMM7,XMM1
            ja .L_430f10

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+88]
            mulsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM1,QWORD PTR [RBX+88]
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM4,XMM6
            subsd XMM0,XMM1
            divsd XMM0,XMM4
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
.L_430ef7:

            add RSP,96
.L_430efb:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430f10:

            movsd XMM0,QWORD PTR [RSP]
            mulsd XMM4,XMM4
            mulsd XMM0,QWORD PTR [R14+176]
            pxor XMM6,XMM6
            addsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_430fcc
.L_430f38:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_430ef7
.L_430f5a:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_430ae5
.L_430f88:

            movapd XMM0,XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_430c55
.L_430fb2:

            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+56]
            movsd XMM6,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_430db9
.L_430fcc:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_430f38
.L_430fec:

            nop
            nop
            nop
            nop
.L_430ff0:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_430ff8:

            mulsd XMM0,QWORD PTR [RIP+.L_4316c8]
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM4,XMM4
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM7,QWORD PTR [RIP+.L_431650]
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            mulsd XMM0,XMM4
            movsd XMM1,QWORD PTR [RBX+72]
            addsd XMM2,XMM7
            movsd XMM5,QWORD PTR [RSP+80]
            addsd XMM3,XMM7
            mulsd XMM1,QWORD PTR [RBX+80]
            addsd XMM0,XMM7
            movapd XMM6,XMM2
            mulsd XMM6,XMM3
            mulsd XMM1,XMM5
            divsd XMM0,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_4311de
.L_431087:

            movapd XMM0,XMM3
            mulsd XMM1,XMM8
            divsd XMM0,XMM2
            ucomisd XMM6,XMM0
            sqrtsd XMM8,XMM0
            ja .L_431297
.L_4310a3:

            mulsd XMM3,XMM3
            movapd XMM7,XMM1
            movsd XMM0,QWORD PTR [RBX+72]
            mulsd XMM7,XMM1
            mulsd XMM0,QWORD PTR [RBX+88]
            divsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RBX+96]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            mulsd XMM0,XMM3
            mulsd XMM2,XMM8
            addsd XMM0,XMM7
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_43124c
.L_4310e5:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+64],XMM5
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM0
            addsd XMM0,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call cos@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44f380-122064]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            addsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            addsd XMM0,QWORD PTR [RBX+8]
            divsd XMM1,XMM4
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4316b8]
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM5,QWORD PTR [RBX+24]
            movsd QWORD PTR [RBX+24],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            add RSP,96
.L_4311dc:

            pop RBX
            ret 
.L_4311de:

            movsd QWORD PTR [RSP+64],XMM6
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RBX+64]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+64]
            addsd XMM3,XMM7
            movsd XMM5,QWORD PTR [RSP+48]
            addsd XMM2,XMM7
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_431087
.L_43124c:

            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+96]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_4310e5
.L_431297:

            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM4,XMM7
            movapd XMM2,XMM4
            jmp .L_4310a3
.L_431304:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431310:

            push R12
            push RBP
            mov ESI,120
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,16
.L_431325:

            call .L_403c70

            test RAX,RAX
            je .L_4315ad

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_431613]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_4043f0

            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,232
            ja .L_4315a0

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBP+32]
            mov R12D,5
            movsd XMM1,QWORD PTR [RIP+.L_4316e8]
            movsd XMM4,QWORD PTR [RBP+176]
            cvtsi2sd XMM0,EAX
            mov RAX,QWORD PTR [RIP+.L_4316f0]
            movsd XMM2,QWORD PTR [RIP+.L_44f380-121984]
            movsd XMM3,QWORD PTR [RIP+.L_44f380-121992]
            mulsd XMM0,QWORD PTR [RIP+.L_4316e0]
            subsd XMM1,XMM0
            movapd XMM0,XMM4
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBP+328],XMM1
            movapd XMM1,XMM4
            movsd QWORD PTR [RBX+88],XMM2
            mov QWORD PTR [RBX+72],RAX
            mov RAX,QWORD PTR [RIP+.L_431710]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBX+80],XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_431650]
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBP+224]
            subsd XMM0,XMM2
            mulsd XMM0,XMM1
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RIP+.L_431650]
            movsd QWORD PTR [RBX+64],XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBX+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44f380-121976]
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBX+48],XMM0
            movsd QWORD PTR [RBX+56],XMM1
            movsd XMM1,QWORD PTR [RBP+216]
            mov QWORD PTR [RBX+104],0
            movapd XMM0,XMM1
            mov QWORD PTR [RBX+112],RAX
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+16],0
            mulsd XMM0,XMM1
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX],0
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_431650]
            movsd QWORD PTR [RBX+96],XMM0
            pxor XMM0,XMM0
            call .L_430ff0

            movsd XMM2,QWORD PTR [RIP+.L_4316d0]
.L_431498:

            mov RDI,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_44f380-122064]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_430ff0

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_4316d8]
            jne .L_431498

            movsd XMM2,QWORD PTR [RIP+.L_4316d8]
            mov R12D,4
.L_4314d5:

            mov RDI,QWORD PTR [RBP+32]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_44f380-121976]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_430ff0

            movsd XMM2,QWORD PTR [RSP+8]
            sub R12D,1
            addsd XMM2,QWORD PTR [RIP+.L_4316d8]
            jne .L_4314d5

            mov RDI,QWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RIP+.L_431650]
            movsd XMM0,QWORD PTR [RIP+.L_431718]
            call .L_430ff0

            movsd XMM0,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RIP+.L_430a20]
            movsd XMM1,QWORD PTR [RIP+.L_431720]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RBX+8]
            divsd XMM0,QWORD PTR [RIP+.L_431728]
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM0
            movsd XMM0,QWORD PTR [RBX+24]
            divsd XMM0,QWORD PTR [RIP+.L_431730]
            movsd QWORD PTR [RBX+24],XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            divsd XMM0,QWORD PTR [RIP+.L_431738]
            movsd QWORD PTR [RBX+32],XMM0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4303d0]
            mov QWORD PTR [RBP+40],RAX
            add RSP,16
.L_43158f:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4315a0:

            mov ESI,4294967267
            mov RDI,RBP
            call .L_415fe0
.L_4315ad:

            add RSP,16
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            jmp .L_430390
.L_4315bd:

            nop
            nop
            nop
.L_4315c0:

            test RDI,RDI
            je .L_4315d0

            jmp .L_431310
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4315d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4315fe

            lea RDX,QWORD PTR [RIP+.L_4303c0]
            lea RCX,QWORD PTR [RIP+.L_431620]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4315fe:

            add RSP,8
            ret 
.L_431603:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431610:

            xor EAX,EAX
            ret 
.L_431613:
          .string "ipath"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431620:
          .string "Space oblique for MISR\n\tCyl, Sph&Ell\n\tpath="
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431650:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_431658:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_431660:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_431668:

            shl BYTE PTR [RCX],CL
            xor EDI,DWORD PTR [RDI+124]
            fst DWORD PTR [RDX]
            mov BPL,205
            xor DWORD PTR [RSI+RDX*4+2],EDI
            ret 
# WARNING: found overlapping blocks at address 31440
.set .L_431670, . - 8

.L_431678:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_431680:
          .byte 0xb5
          .byte 0xcd
          .byte 0x31
          .byte 0x7c
          .byte 0x96
          .byte 0x2
          .byte 0x4d
          .byte 0x43
.L_431688:
          .byte 0x5e
          .byte 0x38
          .byte 0x55
          .byte 0x29
          .byte 0x7a
          .byte 0x6a
          .byte 0x1f
          .byte 0x40
.L_431690:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_431698:

            scasq RAX,QWORD PTR [RDI]
            mov ESP,2060972698
            add BYTE PTR DS:[RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne OFFSET .L_4316e7
# WARNING: found overlapping blocks at address 31470
.set .L_4316a0, . - 8

.L_4316a8:

            sbb BYTE PTR [RIP+.L_65fea8+567831626],CH
            jmp .L_4316f2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_4316b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_4316c0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_4316c8:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_4316d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
.L_4316d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x40
.L_4316e0:
          .byte 0x13
          .byte 0x6f
          .byte 0x88
          .byte 0x88
          .byte 0x18
          .byte 0x9d
          .byte 0x9b
.L_4316e7:
          .byte 0x3f
.L_4316e8:
          .byte 0xb2
          .byte 0xd0
          .byte 0x33
          .byte 0x98
          .byte 0xf1
          .byte 0xd
          .byte 0x2
          .byte 0x40
.L_4316f0:
          .byte 0x61
          .byte 0x9e
.L_4316f2:

            test AL,127
            and EDX,DWORD PTR [RCX+RSI*4-1915623105]
            int3 

            sbb EAX,2755653546
            int 233

            add BYTE PTR [RBP+124],CH
            ret 191
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_431710:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_431718:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_431720:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_431728:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_431730:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x40
.L_431738:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_431740:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431750:

            jmp .L_403ca0
.L_431755:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431760:

            push RBX
            mov RBX,RDI
            sub RSP,16

            xorpd XMM1,XMMWORD PTR [RIP+.L_431ba0]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            call exp@PLT

            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RBX+360]
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_431bc0]
            add RSP,16

            pop RBX
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            ret 
.L_4317bc:

            nop
            nop
            nop
            nop
.L_4317c0:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_4317c8:

            xorpd XMM1,XMMWORD PTR [RIP+.L_431ba0]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RDI+168]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            call exp@PLT

            movsd XMM2,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX]
            movapd XMM1,XMM2
            call .L_44cf90

            ucomisd XMM0,QWORD PTR [RIP+.L_431bc8]
            ja .L_431830

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            divsd XMM3,QWORD PTR [RBX+360]
            add RSP,16
.L_431825:

            pop RBX
            movapd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_431830:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM0
            call .L_415fe0

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP]
            add RSP,16
            pop RBX
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
.L_431859:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431860:

            sub RSP,40
.L_431864:

            movapd XMM5,XMM1
            movq XMM2,QWORD PTR [RIP+.L_431bb0]
            andpd XMM1,XMM2
            subsd XMM1,QWORD PTR [RIP+.L_431bc0]
            andpd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_431bd8]
            ucomisd XMM2,XMM1
            jae .L_431910

            movsd XMM3,QWORD PTR [RDI+360]
            movapd XMM4,XMM0
            movapd XMM0,XMM5
            mov QWORD PTR [RSP+24],RDI
            mulsd XMM4,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            call sin@PLT

            mov RDI,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RDI+168]
            movapd XMM0,XMM5
            call .L_44d4b0

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_431ba0]
            add RSP,40
.L_4318fd:

            movapd XMM2,XMM4
            movapd XMM1,XMM3
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_431910:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM2,XMM2
            add RSP,40
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_43192b:

            nop
            nop
            nop
            nop
            nop
.L_431930:

            sub RSP,24
.L_431934:

            movapd XMM2,XMM1
            movq XMM3,QWORD PTR [RIP+.L_431bb0]
            andpd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_431bc0]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_431bd8]
            ucomisd XMM3,XMM2
            jae .L_4319b0

            mulsd XMM1,QWORD PTR [RIP+.L_431be0]
            movsd XMM3,QWORD PTR [RDI+360]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            addsd XMM1,QWORD PTR [RIP+.L_431be8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            add RSP,24
.L_4319a2:

            mulsd XMM3,XMM0
            movapd XMM0,XMM2
            movapd XMM1,XMM3
            ret 
          .byte 0x90
.L_4319b0:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM2,XMM2
            add RSP,24
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_4319cb:

            nop
            nop
            nop
            nop
            nop
.L_4319d0:

            push RBX
            mov RBX,RDI
            lea RDX,QWORD PTR [RIP+.L_431b63]
            sub RSP,16
.L_4319df:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            call .L_4043f0

            test EAX,EAX
            jne .L_431a30

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_431ac0

            jne .L_431ac0
.L_431a07:

            lea RAX,QWORD PTR [RIP+.L_431760]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_431930]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_431a20:

            add RSP,16
.L_431a24:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431a30:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_431b6b]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_431bb0]
            ucomisd XMM2,QWORD PTR [RIP+.L_431bc0]
            jae .L_431af0

            movsd XMM3,QWORD PTR [RBX+176]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM3,QWORD PTR [RIP+.L_431bd0]
            jp .L_431a99

            je .L_431ae0
.L_431a99:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            call .L_44ca40

            movsd QWORD PTR [RBX+360],XMM0
.L_431ac0:

            lea RAX,QWORD PTR [RIP+.L_4317c0]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_431860]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_431ada:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_431ae0:

            movsd QWORD PTR [RBX+360],XMM0
            jmp .L_431a07
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431af0:

            mov ESI,4294967272
            mov RDI,RBX
            call .L_415fe0

            mov RDI,RBX
            call .L_403ca0

            xor EAX,EAX
            jmp .L_431a20
.L_431b0c:

            nop
            nop
            nop
            nop
.L_431b10:

            test RDI,RDI
            je .L_431b20

            jmp .L_4319d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431b20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_431b4e

            lea RDX,QWORD PTR [RIP+.L_431750]
            lea RCX,QWORD PTR [RIP+.L_431b80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_431b4e:

            add RSP,8
            ret 
.L_431b53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431b60:

            xor EAX,EAX
            ret 
.L_431b63:
          .string "tlat_ts"
.L_431b6b:
          .string "rlat_ts"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431b80:
          .string "Mercator\n\tCyl, Sph&Ell\n\tlat_ts="
.L_431ba0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431bb0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431bc0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_431bc8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_431bd0:
          .zero 8
.L_431bd8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_431be0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_431be8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_431bf0:

            test RDI,RDI
            je .L_431c00

            jmp .L_403ca0

            nop
            nop
            nop
            nop
            nop
            nop
.L_431c00:

            ret 
.L_431c02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431c10:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_431d80]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_431d88]
            addsd XMM0,XMM1
            call tan@PLT

            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_431d90]
            add RSP,24
            ret 
.L_431c53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431c60:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_431d98]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RIP+.L_431d88]
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_431da0]
            add RSP,24
            ret 
.L_431ca3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431cb0:

            test RDI,RDI
            je .L_431ce0

            lea RAX,QWORD PTR [RIP+.L_431c60]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_431c10]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431ce0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_431d0e

            lea RDX,QWORD PTR [RIP+.L_431bf0]
            lea RCX,QWORD PTR [RIP+.L_431d60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_431d0e:

            add RSP,8
            ret 
.L_431d13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431d20:

            lea RDX,QWORD PTR [RIP+.L_431c60]
            lea RCX,QWORD PTR [RIP+.L_431c10]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_431d45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431d50:

            xor EAX,EAX
            ret 
.L_431d53:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431d60:
          .string "Miller Cylindrical\n\tCyl, Sph"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431d80:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
.L_431d88:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_431d90:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            hlt 
          .byte 0x3f
.L_431d98:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xe9
          .byte 0x3f
.L_431da0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,64
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431db0:

            test RDI,RDI
            je .L_431dd8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_431dce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_431dce:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431dd8:

            xor EAX,EAX
            ret 
.L_431ddb:

            nop
            nop
            nop
            nop
            nop
.L_431de0:

            jmp .L_431db0
.L_431de2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431df0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,64
.L_431dfb:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [RBX+32]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call tan@PLT

            movsd XMM6,QWORD PTR [RBX+24]
            movsd XMM7,QWORD PTR [RBX+16]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM1,XMM7
            movsd QWORD PTR [RSP+40],XMM7
            addsd XMM0,XMM1
            divsd XMM0,QWORD PTR [RSP+8]
            call atan@PLT

            movapd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RSP+8]
            jbe .L_431e88

            addsd XMM3,QWORD PTR [RIP+.L_4324a0]
.L_431e88:

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RBX+8]
            mulsd XMM2,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            subsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RBX]
            add RSP,64
.L_431ed8:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_431edd:

            nop
            nop
            nop
.L_431ee0:

            push RBX
            movapd XMM2,XMM1
            movapd XMM3,XMM0
            sub RSP,64
.L_431eed:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM1,QWORD PTR [RIP+.L_4324a8]
            divsd XMM2,QWORD PTR [RBX]
            divsd XMM3,QWORD PTR [RBX+8]
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            subsd XMM1,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            sqrtsd XMM6,XMM1
            movsd QWORD PTR [RSP+8],XMM6
            ja .L_431fd1
.L_431f26:

            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+24]
            movapd XMM4,XMM2
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            mulsd XMM4,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,XMM3
            addsd XMM0,XMM4
            call asin@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RBX+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM5
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            add RSP,64
.L_431fcb:

            pop RBX
            movapd XMM1,XMM4
            ret 
.L_431fd1:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_431f26
.L_431ff7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432000:

            push R13
            push R12
            mov ESI,48
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,104
.L_432017:

            call .L_403c70

            test RAX,RAX
            je .L_432380

            movsd XMM1,QWORD PTR [RBX+360]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_4323f3]
            movsd XMM0,QWORD PTR [RIP+.L_4324a8]
            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+32],RAX
            movsd QWORD PTR [RAX+8],XMM1
            mov RBP,RAX
            divsd XMM0,XMM1
            movsd QWORD PTR [RAX],XMM0
            call .L_4043f0

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            je .L_4321c8

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4323fa]
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_432401]
            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+32],XMM0
            call .L_4043f0

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            mulsd XMM1,QWORD PTR [RIP+.L_432498]
            divsd XMM0,XMM1
            call atan@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM6,QWORD PTR [RSP+8]
            addsd XMM0,XMM6
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call asin@PLT

            movsd XMM1,QWORD PTR [RBP+32]
            movapd XMM4,XMM0
.L_43210c:

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            mov RSI,R13
            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,R12
            addsd XMM1,QWORD PTR [RIP+.L_4324b8]
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RSP+88]
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            movsd QWORD PTR [RBX+328],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RIP+.L_431ee0]
            movsd XMM1,QWORD PTR [RSP+80]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+24],XMM1
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+40],XMM3
            movsd QWORD PTR [RBP+32],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_431df0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,104
.L_4321b9:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4321c8:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_432407]
            lea R12,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RSP+80]
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43240e]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call .L_4043f0

            mov QWORD PTR [RSP+16],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+16]
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_432415]
            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+48],XMM5
            call .L_4043f0

            mov QWORD PTR [RSP+16],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+72],XMM3
            call sincos@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43241c]
            movsd XMM6,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+64],XMM4
            call .L_4043f0

            mov QWORD PTR [RSP+56],RAX
            mov RSI,R13
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+56]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM1,XMM2
            mulsd XMM4,XMM0
            mulsd XMM2,QWORD PTR [RSP+80]
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM1,XMM4
            subsd XMM0,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM1,XMM0
            movq XMM4,QWORD PTR [RIP+.L_4324c0]
            ucomisd XMM3,QWORD PTR [RIP+.L_4324b0]
            jp .L_432329

            jne .L_432329

            xorpd XMM1,XMM4
.L_432329:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP+16],XMM4
            subsd XMM0,XMM3
            call cos@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call tan@PLT

            movapd XMM4,XMMWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            xorpd XMM2,XMM4
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movapd XMM4,XMM0
            jmp .L_43210c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432380:

            add RSP,104
.L_432384:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_431db0
.L_432392:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4323a0:

            test RDI,RDI
            je .L_4323b0

            jmp .L_432000
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4323b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4323de

            lea RDX,QWORD PTR [RIP+.L_431de0]
            lea RCX,QWORD PTR [RIP+.L_432440]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4323de:

            add RSP,8
            ret 
.L_4323e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4323f0:

            xor EAX,EAX
            ret 
.L_4323f3:
          .string "talpha"
.L_4323fa:
          .string "ralpha"
.L_432401:
          .string "rlonc"
.L_432407:
          .string "rlat_1"
.L_43240e:
          .string "rlat_2"
.L_432415:
          .string "rlon_1"
.L_43241c:
          .string "rlon_2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432440:
          .string "Oblique Cylindrical Equal Area\n\tCyl, Sphlonc= alpha= or\n\tlat_1= lat_2= lon_1= lon_2="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432498:
          .zero 8
.L_4324a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_4324a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4324b0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_4324b8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4324c0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4324d0:

            test RDI,RDI
            je .L_4324f8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4324ee

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4324ee:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4324f8:

            xor EAX,EAX
            ret 
.L_4324fb:

            nop
            nop
            nop
            nop
            nop
.L_432500:

            jmp .L_4324d0
.L_432502:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432510:

            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,88
.L_43251a:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM4,QWORD PTR [RIP+.L_433790]
            movsd XMM6,QWORD PTR [RIP+.L_4337b8]
            andpd XMM2,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_4337b0]
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            ja .L_4325b0

            ucomisd XMM1,QWORD PTR [RIP+.L_4337d0]
            jbe .L_4325a8

            movsd XMM2,QWORD PTR [RBX+88]
.L_432553:

            mulsd XMM1,QWORD PTR [RBX+32]
.L_432558:

            mov EAX,DWORD PTR [RBX+112]
            test EAX,EAX
            jne .L_432596

            movapd XMM5,XMM1
            movsd XMM4,QWORD PTR [RBX+80]
            movsd XMM3,QWORD PTR [RBX+72]
            subsd XMM5,QWORD PTR [RBX+104]
            movapd XMM1,XMM4
            movapd XMM0,XMM3
            mulsd XMM1,XMM2
            mulsd XMM2,XMM3
            mulsd XMM4,XMM5
            mulsd XMM0,XMM5
            subsd XMM4,XMM2
            addsd XMM1,XMM0
            movapd XMM2,XMM4
.L_432596:

            add RSP,88
.L_43259a:

            movapd XMM0,XMM1
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4325a8:

            movsd XMM2,QWORD PTR [RBX+96]
            jmp .L_432553
          .byte 0x90
.L_4325b0:

            movsd XMM5,QWORD PTR [RBX+16]
            mov RBP,RDI
            movsd XMM7,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movaps XMMWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RBP+168]
            movapd XMM0,XMM3
            call .L_44d4b0

            movsd XMM7,QWORD PTR [RSP+24]
            movapd XMM1,XMM7
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RIP+.L_4337c0]
            divsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM2
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM6,QWORD PTR [RBX+8]
            movapd XMM1,XMM5
            movapd XMM5,XMM2
            divsd XMM5,XMM1
            movapd XMM7,XMM1
            movsd QWORD PTR [RSP+64],XMM1
            movapd XMM0,XMM6
            subsd XMM7,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM7,QWORD PTR [RIP+.L_4337c8]
            movsd QWORD PTR [RSP+16],XMM7
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RBX+64]
            addsd XMM1,XMM5
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM7,XMM3
            movapd XMM4,XMMWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RIP+.L_4337c8]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+72]
            subsd XMM0,XMM7
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            andpd XMM0,XMM4
            subsd XMM0,XMM2
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            ja .L_432760

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_4337c8]
            movaps XMMWORD PTR [RSP+32],XMM4
            subsd XMM0,XMM1
            mulsd XMM6,QWORD PTR [RBX+32]
            addsd XMM1,XMM2
            movsd QWORD PTR [RSP+64],XMM3
            divsd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM6
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+24],XMM2
            call cos@PLT

            movapd XMM4,XMMWORD PTR [RSP+32]
            andpd XMM4,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_4337d8]
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM1,XMM4
            movsd XMM3,QWORD PTR [RSP+64]
            jbe .L_432788

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RBX]
            jmp .L_432558
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432760:

            mov RDI,RBP
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM1,XMM1
            add RSP,88
.L_432775:

            pop RBX
            pop RBP
            movapd XMM2,XMM1
            movapd XMM0,XMM1
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432788:

            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RBX+56]
            movapd XMM1,XMM0
            mulsd XMM4,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+24],XMM2
            movsd XMM6,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM3,XMM4
            movapd XMM0,XMM3
            call atan2@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM1,XMM0
            jmp .L_432558
.L_4327cf:

            nop
.L_4327d0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_4327d9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            mov EAX,DWORD PTR [RBX+112]
            test EAX,EAX
            jne .L_432825

            movapd XMM6,XMM0
            movsd XMM2,QWORD PTR [RBX+72]
            movsd XMM0,QWORD PTR [RBX+80]
            movapd XMM4,XMM6
            movapd XMM3,XMM2
            mulsd XMM2,XMM6
            mulsd XMM4,XMM0
            mulsd XMM0,XMM1
            mulsd XMM3,XMM1
            addsd XMM0,XMM2
            subsd XMM4,XMM3
            addsd XMM0,QWORD PTR [RBX+104]
            movapd XMM1,XMM4
            movsd QWORD PTR [RSP],XMM0
.L_432825:

            movsd XMM0,QWORD PTR [RBX+40]
            xorpd XMM0,XMMWORD PTR [RIP+.L_4337a0]
            mulsd XMM0,XMM1
            call exp@PLT

            movsd XMM1,QWORD PTR [RIP+.L_4337c0]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM3,XMM1
            movsd XMM7,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM3,XMM0
            mulsd XMM7,QWORD PTR [RBX+40]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_4337c8]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM7
            call sin@PLT

            movsd XMM2,QWORD PTR [RBX+64]
            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+8]
            addsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM3,QWORD PTR [RIP+.L_4337c8]
            addsd XMM2,XMM0
            divsd XMM2,XMM3
            movq XMM3,QWORD PTR [RIP+.L_433790]
            movapd XMM0,XMM2
            andpd XMM0,XMM3
            subsd XMM0,XMM1
            andpd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4337b8]
            ucomisd XMM3,XMM0
            jbe .L_432918

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_432908

            movsd XMM2,QWORD PTR [RIP+.L_4337b0]
.L_4328f8:

            add RSP,56
.L_4328fc:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432908:

            movsd XMM2,QWORD PTR [RIP+.L_4337e0]
            jmp .L_4328f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432918:

            movapd XMM3,XMM2
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RBX+16]
            addsd XMM3,XMM1
            subsd XMM0,XMM2
            movapd XMM2,XMM3
            divsd XMM2,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            sqrtsd XMM3,XMM2
            ja .L_432a26
.L_432947:

            divsd XMM4,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            divsd XMM1,QWORD PTR [RBX+8]
            movapd XMM0,XMM4
            movsd XMM2,QWORD PTR [RBP+168]
            movsd QWORD PTR [RSP+16],XMM2
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movapd XMM1,XMM2
            call .L_44cf90

            ucomisd XMM0,QWORD PTR [RIP+.L_4337e8]
            movsd XMM5,QWORD PTR [RSP+24]
            ja .L_432a00

            movsd QWORD PTR [RSP+32],XMM5
            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RBX+48]
            mulsd XMM5,QWORD PTR [RBX+40]
            xorpd XMM0,XMMWORD PTR [RIP+.L_4337a0]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            mulsd XMM3,QWORD PTR [RBX+64]
            mulsd XMM5,QWORD PTR [RBX+56]
            subsd XMM3,XMM5
            movapd XMM0,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+16]
            jmp .L_4328f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432a00:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM0
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP]
            add RSP,56
.L_432a1b:

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
.L_432a26:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_432947
.L_432a64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432a70:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov ESI,120
            push RBP
            push RBX
            mov EDI,1
            sub RSP,168
.L_432a8e:

            call .L_403c70

            test RAX,RAX
            je .L_432c3d

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336b3]
            mov QWORD PTR [R15+32],RAX
            mov RBX,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336bb]
            mov DWORD PTR [RBX+112],EAX
            call .L_4043f0

            test EAX,EAX
            mov RBP,RAX
            mov RSI,QWORD PTR [R15+16]
            jne .L_432c60

            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336c9]
            call .L_4043f0

            test EAX,EAX
            mov R14D,EAX
            jne .L_433498

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336ff]
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_433706]
            mov QWORD PTR [RSP+24],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+16],RAX
            lea RDX,QWORD PTR [RIP+.L_43370d]
            mov RDI,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM3
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_433714]
            mov RDI,QWORD PTR [R15]
            mov QWORD PTR [RSP+48],RAX
            call .L_4043f0

            movsd XMM3,QWORD PTR [RSP]
            mov QWORD PTR [RSP+16],RAX
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movq XMM6,QWORD PTR [RIP+.L_433790]
            movsd XMM1,QWORD PTR [RIP+.L_4337d8]
            subsd XMM0,XMM4
            movaps XMMWORD PTR [RSP],XMM6
            andpd XMM0,XMM6
            ucomisd XMM1,XMM0
            jae .L_432c30

            movapd XMM5,XMMWORD PTR [RSP]
            movapd XMM6,XMM5
            andpd XMM6,XMM3
            ucomisd XMM1,XMM6
            movapd XMM0,XMM6
            jae .L_432c30

            movsd XMM2,QWORD PTR [RIP+.L_4337b0]
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_432c30

            movsd XMM0,QWORD PTR [R15+336]
            andpd XMM0,XMM5
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_432c30

            movapd XMM6,XMM5
            andpd XMM6,XMM4
            movapd XMM0,XMM6
            subsd XMM0,XMM2
            andpd XMM0,XMM5
            ucomisd XMM1,XMM0
            jae .L_432c30

            pxor XMM2,XMM2
            mov DWORD PTR [RSP+72],0
            mov DWORD PTR [RSP+84],0
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+96],XMM2
            jmp .L_432d1e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432c30:

            mov ESI,4294967263
            mov RDI,R15
            call .L_415fe0
.L_432c3d:

            add RSP,168
.L_432c44:

            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4324d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432c60:

            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336c2]
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336c9]
            mov QWORD PTR [RSP+64],RAX
            call .L_4043f0

            test EAX,EAX
            mov R14D,EAX
            jne .L_432fa0

            pxor XMM4,XMM4
            mov DWORD PTR [RSP+72],EBP
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+40],XMM4
.L_432ca6:

            mov RSI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_4336d7]
            mov RDI,QWORD PTR [R15]
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336dd]
            mov QWORD PTR [RSP+96],RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_432fd0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336f6]
            call .L_4043f0

            test EAX,EAX
            mov DWORD PTR [RSP+84],EAX
            jne .L_432fd0

            movq XMM5,QWORD PTR [RIP+.L_433790]
            movsd XMM7,QWORD PTR [RSP+16]
            pxor XMM4,XMM4
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+48],XMM7
            movaps XMMWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM7
.L_432d1e:

            movsd XMM0,QWORD PTR [R15+216]
            movsd XMM7,QWORD PTR [RSP+16]
            sqrtsd XMM5,XMM0
            ucomisd XMM7,XMM0
            ja .L_433518
.L_432d3b:

            movsd XMM0,QWORD PTR [R15+336]
            movapd XMM6,XMMWORD PTR [RSP]
            andpd XMM6,XMM0
            ucomisd XMM6,QWORD PTR [RIP+.L_4337b8]
            ja .L_433060

            movsd XMM7,QWORD PTR [RIP+.L_4337c0]
            mov EDX,DWORD PTR [RSP+72]
            lea R12,QWORD PTR [RSP+152]
            lea R13,QWORD PTR [RSP+144]
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+32],XMM7
            test EDX,EDX
            movsd QWORD PTR [RSP+88],XMM7
            divsd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RBX+8],XMM0
            movsd XMM0,QWORD PTR [R15+360]
            movsd QWORD PTR [RBX+16],XMM7
            movsd QWORD PTR [RBX],XMM0
            je .L_4331ed
.L_432db0:

            test EBP,EBP
            je .L_433030

            movsd XMM0,QWORD PTR [RSP+64]
            call sin@PLT

            divsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            test R14D,R14D
            movsd QWORD PTR [RSP+24],XMM0
            jne .L_432de5

            movsd XMM3,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+40],XMM3
.L_432de5:

            movsd XMM0,QWORD PTR [RSP+24]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM1,XMM4
            subsd XMM4,XMM1
            movapd XMM1,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_4337c8]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+72],XMM4
            mulsd XMM0,XMM1
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM7,QWORD PTR [RSP+96]
            divsd XMM0,XMM2
            subsd XMM7,XMM0
            movsd QWORD PTR [R15+328],XMM7
.L_432e3f:

            movsd XMM0,QWORD PTR [RSP+40]
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+88],XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+144]
            mov RSI,R13
            movsd XMM3,QWORD PTR [RSP+152]
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RSP+84]
            movsd XMM0,QWORD PTR [RSP+144]
            movsd XMM4,QWORD PTR [RSP+152]
            movsd XMM2,QWORD PTR [RSP+88]
            test EAX,EAX
            movsd QWORD PTR [RBX+80],XMM1
            movapd XMM1,XMM6
            movsd QWORD PTR [RBX+64],XMM0
            divsd XMM1,XMM2
            movsd QWORD PTR [RBX+56],XMM4
            movsd XMM0,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd QWORD PTR [RBX+48],XMM1
            mulsd XMM1,XMM0
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBX+72],XMM3
            divsd XMM6,XMM1
            movsd QWORD PTR [RBX+32],XMM1
            movsd QWORD PTR [RBX+24],XMM0
            movsd QWORD PTR [RBX+40],XMM6
            je .L_433400

            mov QWORD PTR [RBX+104],0
.L_432f03:

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RIP+.L_433808]
            mulsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM1
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_433808]
            movsd XMM7,QWORD PTR [RBX+32]
            addsd XMM0,XMM2
            movsd QWORD PTR [RBX+88],XMM1
            movsd QWORD PTR [RSP+16],XMM7
            call tan@PLT

            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_4327d0]
            movsd QWORD PTR [RBX+96],XMM0
            mov QWORD PTR [R15+48],RAX
            lea RAX,QWORD PTR [RIP+.L_432510]
            mov QWORD PTR [R15+40],RAX
            add RSP,168
.L_432f8d:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432fa0:

            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+16],XMM2
.L_432faa:

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336d0]
            call .L_4043f0

            mov QWORD PTR [RSP+40],RAX
            mov EAX,R14D
            or EAX,EBP
            mov DWORD PTR [RSP+72],EAX
            jmp .L_432ca6
.L_432fd0:

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336e5]
            call .L_4043f0

            mov RSI,QWORD PTR [R15+16]
            mov RDI,QWORD PTR [R15]
            lea RDX,QWORD PTR [RIP+.L_4336ee]
            call .L_4043f0

            movsd XMM5,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+84],1
            movq XMM2,QWORD PTR [RIP+.L_433790]
            pxor XMM4,XMM4
            movsd QWORD PTR [RSP+48],XMM5
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movaps XMMWORD PTR [RSP],XMM2
            jmp .L_432d1e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433030:

            movsd XMM0,QWORD PTR [RSP+40]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+64],XMM0
            movsd QWORD PTR [RSP+24],XMM6
            jmp .L_432de5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433060:

            lea R12,QWORD PTR [RSP+152]
            lea R13,QWORD PTR [RSP+144]
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+88],XMM4
            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+56],XMM3
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+144]
            movsd XMM2,QWORD PTR [R15+176]
            movsd XMM1,QWORD PTR [RSP+152]
            movapd XMM8,XMM7
            movapd XMM0,XMM2
            mulsd XMM8,XMM7
            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RIP+.L_4337c0]
            movsd XMM4,QWORD PTR [RSP+88]
            mulsd XMM2,XMM8
            movapd XMM6,XMM3
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RBX+8],XMM8
            movsd XMM5,QWORD PTR [RSP+104]
            subsd XMM6,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM8
            divsd XMM0,QWORD PTR [R15+216]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+16]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+56]
            ja .L_4335a2
.L_43311b:

            movsd XMM0,QWORD PTR [R15+360]
            movsd QWORD PTR [RBX+8],XMM2
            mulsd XMM0,XMM2
            mulsd XMM0,XMM5
            mulsd XMM5,XMM2
            sqrtsd XMM2,XMM6
            divsd XMM0,XMM6
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM6
            ja .L_433546
.L_433151:

            mulsd XMM7,XMM2
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM5,XMM7
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM5
            mulsd XMM0,XMM5
            subsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM2,XMM0
            jb .L_4334e8

            movsd XMM0,QWORD PTR [R15+336]
.L_433186:

            addsd XMM2,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM5
            movsd QWORD PTR [RSP+88],XMM2
            movsd QWORD PTR [RBX+16],XMM2
            movsd XMM2,QWORD PTR [R15+168]
            call .L_44d4b0

            movsd XMM5,QWORD PTR [RSP+104]
            movapd XMM1,XMM5
            call pow@PLT

            mulsd XMM0,QWORD PTR [RBX+16]
            mov EDX,DWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+120]
            test EDX,EDX
            movsd QWORD PTR [RBX+16],XMM0
            jne .L_432db0
.L_4331ed:

            movsd XMM5,QWORD PTR [RBX+8]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+88],XMM4
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+40],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [R15+168]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            call .L_44d4b0

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+72],XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+64],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [R15+168]
            movapd XMM0,XMM4
            call .L_44d4b0

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM1,XMM5
            call pow@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMM0
            movapd XMM2,XMM1
            mulsd XMM1,XMM1
            subsd XMM5,XMM3
            movapd XMM4,XMM3
            divsd XMM2,XMM3
            addsd XMM4,XMM0
            mulsd XMM3,XMM0
            movapd XMM0,XMM1
            divsd XMM5,XMM4
            subsd XMM0,XMM3
            addsd XMM3,XMM1
            divsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RIP+.L_4337f0]
            movsd QWORD PTR [RSP+64],XMM0
            movapd XMM0,XMM4
            subsd XMM0,XMM3
            ucomisd XMM1,XMM0
            jbe .L_4334b0

            subsd XMM3,QWORD PTR [RIP+.L_4337f8]
            subsd XMM4,XMM3
            movsd QWORD PTR [RSP+48],XMM3
            movapd XMM0,XMM4
.L_433310:

            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RIP+.L_4337c8]
            movsd QWORD PTR [RSP+96],XMM2
            movsd QWORD PTR [RSP+72],XMM1
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+88],XMM3
            mulsd XMM0,XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RSP+64]
            divsd XMM0,QWORD PTR [RSP+40]
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+72]
            addsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RSP+88]
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_449e30

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RBX+8]
            subsd XMM6,XMM0
            movsd QWORD PTR [R15+328],XMM0
            movsd QWORD PTR [RSP+40],XMM7
            movapd XMM0,XMM6
            call .L_449e30

            mulsd XMM0,QWORD PTR [RSP+40]
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+96]
            addsd XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+32]
            divsd XMM1,XMM2
            subsd XMM2,XMM1
            divsd XMM0,XMM2
            call atan@PLT

            movsd QWORD PTR [RSP+24],XMM0
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+56]
            call asin@PLT

            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+64],XMM0
            jmp .L_432e3f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433400:

            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+16]
            mulsd XMM0,XMM0
            subsd XMM0,QWORD PTR [RSP+32]
            ucomisd XMM6,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP+32],XMM5
            ja .L_43360c
.L_43342a:

            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+40],XMM1
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movapd XMM4,XMMWORD PTR [RSP]
            mulsd XMM1,XMM0
            andpd XMM4,XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [RBX+104],XMM4
            movsd XMM4,QWORD PTR [RSP+16]
            ucomisd XMM4,QWORD PTR [R15+336]
            jbe .L_433488

            xorpd XMM0,XMMWORD PTR [RIP+.L_4337a0]
            movsd QWORD PTR [RBX+104],XMM0
.L_433488:

            movsd XMM1,QWORD PTR [RBX+32]
            jmp .L_432f03
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433498:

            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+64],XMM6
            jmp .L_432faa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4334b0:

            ucomisd XMM0,QWORD PTR [RIP+.L_433800]
            jbe .L_433310

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM6,QWORD PTR [RIP+.L_4337f8]
            movsd QWORD PTR [RSP+48],XMM6
            subsd XMM0,XMM6
            jmp .L_433310
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4334e8:

            sqrtsd XMM2,XMM0
            ja .L_433622
.L_4334f2:

            movsd XMM0,QWORD PTR [R15+336]
            movsd XMM7,QWORD PTR [RSP+16]
            ucomisd XMM7,XMM0
            jbe .L_433186

            xorpd XMM2,XMMWORD PTR [RIP+.L_4337a0]
            jmp .L_433186
.L_433518:

            movsd QWORD PTR [RSP+88],XMM5
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+88]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+32]
            jmp .L_432d3b
.L_433546:

            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+128],XMM7
            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+88],XMM2
            movsd QWORD PTR [RSP+56],XMM5
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd XMM5,QWORD PTR [RSP+56]
            jmp .L_433151
.L_4335a2:

            movsd QWORD PTR [RSP+136],XMM7
            movsd QWORD PTR [RSP+128],XMM6
            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM5
            movsd QWORD PTR [RSP+104],XMM4
            movsd QWORD PTR [RSP+88],XMM3
            movsd QWORD PTR [RSP+56],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+136]
            movsd XMM6,QWORD PTR [RSP+128]
            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM5,QWORD PTR [RSP+112]
            movsd XMM4,QWORD PTR [RSP+104]
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+56]
            jmp .L_43311b
.L_43360c:

            movsd QWORD PTR [RSP+40],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            jmp .L_43342a
.L_433622:

            movsd QWORD PTR [RSP+120],XMM1
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+88],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+120]
            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM2,QWORD PTR [RSP+88]
            jmp .L_4334f2
.L_43365c:

            nop
            nop
            nop
            nop
.L_433660:

            test RDI,RDI
            je .L_433670

            jmp .L_432a70
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433670:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43369e

            lea RDX,QWORD PTR [RIP+.L_432500]
            lea RCX,QWORD PTR [RIP+.L_433720]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43369e:

            add RSP,8
            ret 
.L_4336a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4336b0:

            xor EAX,EAX
            ret 
.L_4336b3:
          .string "tno_rot"
.L_4336bb:
          .string "talpha"
.L_4336c2:
          .string "ralpha"
.L_4336c9:
          .string "tgamma"
.L_4336d0:
          .string "rgamma"
.L_4336d7:
          .string "rlonc"
.L_4336dd:
          .string "tno_off"
.L_4336e5:
          .string "sno_uoff"
.L_4336ee:
          .string "sno_off"
.L_4336f6:
          .string "tno_uoff"
.L_4336ff:
          .string "rlon_1"
.L_433706:
          .string "rlat_1"
.L_43370d:
          .string "rlon_2"
.L_433714:
          .string "rlat_2"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433720:
          .string "Oblique Mercator\n\tCyl, Sph&Ell no_rot\n\talpha= [gamma=] [no_off] lonc= or\n\t lon_1= lat_1= lon_2= lat_2="
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433790:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4337a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4337b0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4337b8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4337c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4337c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4337d0:
          .zero 8
.L_4337d8:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_4337e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_4337e8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_4337f0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_4337f8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_433800:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_433808:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_433810:

            test RDI,RDI
            je .L_433838

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43382e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43382e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433838:

            xor EAX,EAX
            ret 
.L_43383b:

            nop
            nop
            nop
            nop
            nop
.L_433840:

            jmp .L_433810
.L_433842:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433850:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43385d:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RBP+168]
            mulsd XMM1,QWORD PTR [RIP+.L_433fd0]
            mulsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_433fd8]
            movsd XMM7,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+32],XMM4
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM7
            call tan@PLT

            call log@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM2,QWORD PTR [RIP+.L_433fe0]
            movapd XMM0,XMM4
            movsd XMM5,QWORD PTR [RBX+16]
            addsd XMM0,XMM2
            subsd XMM2,XMM4
            movsd QWORD PTR [RSP+16],XMM5
            divsd XMM0,XMM2
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBX]
            call exp@PLT

            call atan@PLT

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            subsd XMM0,QWORD PTR [RIP+.L_433fe8]
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            mulsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RSP+56]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM1,QWORD PTR [RSP+48]
            subsd XMM0,XMM1
            call .L_449c40

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            mulsd XMM6,QWORD PTR [RSP+8]
            movapd XMM1,XMM6
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_433fd0]
            movsd XMM0,QWORD PTR [RIP+.L_433fd8]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM2
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM2,XMM0
            add RSP,72
.L_433a14:

            mulsd XMM3,XMM1
            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            movapd XMM0,XMM3
            pop R12
            pop R13
            ret 
.L_433a27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433a30:

            push R14
            push R13
            push R12
            push RBP
            mov EBP,6
            push RBX
            mov RBX,RDI
            sub RSP,80
.L_433a44:

            mov R12,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            lea R13,QWORD PTR [RSP+72]
            lea R14,QWORD PTR [RSP+64]
            divsd XMM1,QWORD PTR [R12+24]
            movapd XMM0,XMM1
            call exp@PLT

            call atan@PLT

            subsd XMM0,QWORD PTR [RIP+.L_433fd8]
            mov RSI,R14
            mov RDI,R13
            addsd XMM0,XMM0
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R14
            movsd XMM5,QWORD PTR [RSP+64]
            mov RDI,R13
            divsd XMM2,QWORD PTR [R12+24]
            movsd QWORD PTR [RSP+8],XMM5
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [R12+40]
            mulsd XMM1,QWORD PTR [R12+32]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM0,QWORD PTR [RSP+64]
            addsd XMM0,XMM1
            call .L_449c40

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RSP+8]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call .L_449c40

            movsd XMM1,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_433fd0]
            movsd XMM2,QWORD PTR [R12]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM0,QWORD PTR [RIP+.L_433fd8]
            call tan@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            divsd XMM2,QWORD PTR [R12+8]
            movsd QWORD PTR [RSP+48],XMM2
.L_433b76:

            movapd XMM0,XMM1
            mov RSI,R14
            mov RDI,R13
            movsd QWORD PTR [RSP+40],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM3,QWORD PTR [RBX+168]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            call log@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM4,QWORD PTR [RIP+.L_433fe0]
            movsd XMM0,QWORD PTR [RIP+.L_433fe0]
            subsd XMM4,XMM3
            movsd XMM6,QWORD PTR [R12+16]
            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM6
            divsd XMM0,XMM4
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+8]
            addsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM3
            movsd XMM7,QWORD PTR [RIP+.L_433ff0]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_433fe0]
            subsd XMM2,XMM3
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+224]
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_434000]
            ucomisd XMM7,XMM0
            ja .L_433cb8

            sub EBP,1
            je .L_433c90

            movsd XMM0,QWORD PTR [RIP+.L_433fd0]
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_433fd8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_433b76
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433c90:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,80
.L_433ca5:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433cb8:

            movsd XMM6,QWORD PTR [RSP+56]
            divsd XMM6,QWORD PTR [R12+8]
            add RSP,80
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            movapd XMM0,XMM6
            ret 
.L_433cd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433ce0:

            push RBP
            push RBX
            mov ESI,48
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_433cf3:

            call .L_403c70

            test RAX,RAX
            je .L_433ee0

            movsd XMM0,QWORD PTR [RIP+.L_433fd0]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            movsd XMM2,QWORD PTR [RBX+336]
            mulsd XMM0,QWORD PTR [RBX+168]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RAX+16],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movapd XMM1,XMM0
            pxor XMM5,XMM5
            mulsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RBX+224]
            addsd XMM0,QWORD PTR [RIP+.L_433fe0]
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_433f13
.L_433d74:

            movapd XMM0,XMM2
            movsd QWORD PTR [RBP+8],XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            mov RDI,QWORD PTR [RBX]
            divsd XMM0,XMM3
            movsd QWORD PTR [RBP+40],XMM0
            call .L_449c40

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP+32],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_433fd0]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RBX+168]
            addsd XMM0,QWORD PTR [RIP+.L_433fd8]
            movsd QWORD PTR [RSP+24],XMM1
            call tan@PLT

            call log@PLT

            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_433fd0]
            movsd XMM6,QWORD PTR [RBP+8]
            mulsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM6
            addsd XMM0,QWORD PTR [RIP+.L_433fd8]
            call tan@PLT

            call log@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM4,QWORD PTR [RIP+.L_433fe0]
            movsd XMM0,QWORD PTR [RIP+.L_433fe0]
            subsd XMM4,XMM1
            movsd XMM7,QWORD PTR [RBP+16]
            addsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM7
            divsd XMM0,XMM4
            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+32]
            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM5,XMM0
            mulsd XMM2,QWORD PTR [RSP+8]
            subsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RBX+360]
            movsd QWORD PTR [RBP],XMM3
            sqrtsd XMM3,XMM0
            ja .L_433eee
.L_433ea1:

            mulsd XMM1,XMM1
            lea RAX,QWORD PTR [RIP+.L_433a30]
            movsd XMM0,QWORD PTR [RIP+.L_433fe0]
            mulsd XMM2,XMM3
            subsd XMM0,XMM1
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+24],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_433850]
            mov QWORD PTR [RBX+40],RAX
            add RSP,56
.L_433ed8:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_433ee0:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_433810
.L_433eee:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_433ea1
.L_433f13:

            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+336]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_433d74
.L_433f31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433f40:

            test RDI,RDI
            je .L_433f50

            jmp .L_433ce0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433f50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_433f7e

            lea RDX,QWORD PTR [RIP+.L_433840]
            lea RCX,QWORD PTR [RIP+.L_433fa0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_433f7e:

            add RSP,8
            ret 
.L_433f83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433f90:

            xor EAX,EAX
            ret 
.L_433f93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433fa0:

            push RBX
            ja .L_43400c
          .byte 0x73
          .byte 0x73
          .byte 0x2e
          .byte 0x20
          .byte 0x4f
          .byte 0x62
          .byte 0x6c
          .byte 0x2e
          .byte 0x20
          .byte 0x4d
          .byte 0x65
          .byte 0x72
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
          .byte 0x45
          .byte 0x6c
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x46
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x43
          .byte 0x48
          .byte 0x31
          .byte 0x39
          .byte 0x30
          .byte 0x33
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433fd0:

            add BYTE PTR [RAX],AL
.L_433fd2:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 212455
.L_433fd8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_433fe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_433fe8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_433ff0:

            mov EBX,3755595709
            jl .L_433fd2
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434000:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43400c:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_434010:

            jmp .L_403ca0
.L_434015:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434020:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_434028:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4341f8]
            movapd XMM1,XMM2
            mulsd XMM1,XMM2
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_434200]
            ucomisd XMM1,XMM0
            ja .L_4340d0

            pxor XMM1,XMM1
            sqrtsd XMM4,XMM0
            movsd QWORD PTR [RSP+16],XMM4
            ucomisd XMM1,XMM0
            ja .L_4340ef
.L_434092:

            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            divsd XMM2,QWORD PTR [RSP+16]
            add RSP,48
.L_4340c1:

            pop RBX
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4340d0:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM2,XMM2
            add RSP,48
            pop RBX
            movapd XMM1,XMM2
            movapd XMM0,XMM2
            ret 
.L_4340ef:

            movsd QWORD PTR [RSP+24],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_434092
.L_434102:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434110:

            test RDI,RDI
            je .L_434140

            lea RAX,QWORD PTR [RIP+.L_434020]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434140:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43416e

            lea RDX,QWORD PTR [RIP+.L_434010]
            lea RCX,QWORD PTR [RIP+.L_4341c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43416e:

            add RSP,8
            ret 
.L_434173:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434180:

            lea RDX,QWORD PTR [RIP+.L_434020]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4341a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4341b0:

            xor EAX,EAX
            ret 
.L_4341b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4341c0:

            push RSP
            jb .L_434224

            outsb DX,BYTE PTR [RSI]
            jae .L_43423c

            jb .L_43423c

            and BYTE PTR GS:[RBX+101],AL
            outsb DX,BYTE PTR [RSI]
            je .L_434242
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x72
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4341f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_434200:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb

            cmp EAX,8658703
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_434210:

            jmp .L_403ca0
.L_434215:
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434220:

            push RBX
            mov RBX,RDI
.L_434224:

            sub RSP,48

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT
.L_43423c:

            movsd XMM3,QWORD PTR [RSP+40]
.L_434242:

            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RBX+360]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM3,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RBX+336]
            add RSP,48

            pop RBX
            movapd XMM0,XMM3
            mulsd XMM1,XMM2
            divsd XMM0,XMM2
            ret 
.L_4342ab:

            nop
            nop
            nop
            nop
            nop
.L_4342b0:

            sub RSP,56
.L_4342b4:

            movsd XMM2,QWORD PTR [RDI+360]
            divsd XMM1,XMM2
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_434470]
            addsd XMM1,QWORD PTR [RDI+336]
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            subsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM5,XMM0
            movsd QWORD PTR [RSP],XMM5
            ja .L_434357
.L_4342f3:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM0,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+16],XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,56
.L_434352:

            movapd XMM1,XMM3
            ret 
.L_434357:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4342f3
.L_434379:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434380:

            test RDI,RDI
            je .L_4343b0

            lea RAX,QWORD PTR [RIP+.L_4342b0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_434220]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4343b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4343de

            lea RDX,QWORD PTR [RIP+.L_434210]
            lea RCX,QWORD PTR [RIP+.L_434440]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4343de:

            add RSP,8
            ret 
.L_4343e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4343f0:

            lea RDX,QWORD PTR [RIP+.L_4342b0]
            lea RCX,QWORD PTR [RIP+.L_434220]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_434415:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434420:

            xor EAX,EAX
            ret 
.L_434423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434440:

            push RSP
            jb .L_4344a4

            outsb DX,BYTE PTR [RSI]
            jae .L_4344bc

            jb .L_4344bc

            and BYTE PTR GS:[RBX+121],AL
            insb BYTE PTR [RDI],DX
            imul EBP,DWORD PTR [RSI+100],1633905010
            insb BYTE PTR [RDI],DX
            and BYTE PTR [RBP+113],AL
            jne .L_4344bc
          .byte 0x6c
          .byte 0x20
          .byte 0x41
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434470:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434480:

            test RDI,RDI
            je .L_434490

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434490:

            ret 
.L_434492:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4344a0:

            sub RSP,24
.L_4344a4:

            mulsd XMM1,QWORD PTR [RIP+.L_434650]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT
          .byte 0x66
          .byte 0xf
.L_4344bc:

            sub AL,BL
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_434658]
            movapd XMM0,XMM3
            call sin@PLT

            mulsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_434668]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_434660]
            mulsd XMM1,QWORD PTR [RIP+.L_434670]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP]
            add RSP,24
.L_434504:

            mulsd XMM0,XMM2
            ret 
.L_434509:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434510:

            sub RSP,40
.L_434514:

            divsd XMM1,QWORD PTR [RIP+.L_434670]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_434658]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_434668]
            mulsd XMM2,XMM2
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM1,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_434660]
            add RSP,40
.L_43457a:

            subsd XMM0,XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM3
            ret 
.L_434587:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434590:

            test RDI,RDI
            je .L_4345c0

            lea RAX,QWORD PTR [RIP+.L_434510]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4344a0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4345c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4345ee

            lea RDX,QWORD PTR [RIP+.L_434480]
            lea RCX,QWORD PTR [RIP+.L_434640]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4345ee:

            add RSP,8
            ret 
.L_4345f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434600:

            lea RDX,QWORD PTR [RIP+.L_434510]
            lea RCX,QWORD PTR [RIP+.L_4344a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_434625:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434630:

            xor EAX,EAX
            ret 
.L_434633:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434640:

            push RSP
            imul EBP,DWORD PTR [RBP+101],1124665971
            jns .L_4346b6
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x0
.L_434650:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_434658:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_434660:
          .byte 0x6d
          .byte 0xca
          .byte 0x15
          .byte 0xde
          .byte 0xe5
          .byte 0x22
          .byte 0xd6
          .byte 0x3f
.L_434668:
          .byte 0xda
          .byte 0x3
          .byte 0xad
          .byte 0xc0
          .byte 0x90
          .byte 0xd5
          .byte 0xe7
          .byte 0x3f
.L_434670:
          .byte 0xff
          .byte 0xca
          .byte 0x4a
          .byte 0x93
          .byte 0x52
          .byte 0x50
          .byte 0xfb
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434680:

            test RDI,RDI
            je .L_4346b0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4346a8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX+16]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4346a8:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4346b0:

            xor EAX,EAX
            ret 
.L_4346b3:

            nop
            nop
            nop
.L_4346b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4346c0:

            jmp .L_434680
.L_4346c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4346d0:

            push RBP
            push RBX
            mov RBX,RDI
            movapd XMM6,XMM0
            sub RSP,104
.L_4346dd:

            movsd XMM0,QWORD PTR [RIP+.L_435450]
            ucomisd XMM0,XMM6
            ja .L_434a00

            ucomisd XMM6,QWORD PTR [RIP+.L_435458]
            ja .L_434a00

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+80]
            movsd XMM5,QWORD PTR [RSP+88]
            movapd XMM0,XMM2
            movsd XMM12,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+16]
            andpd XMM0,XMMWORD PTR [RIP+.L_4355a0]
            ucomisd XMM0,QWORD PTR [RIP+.L_435468]
            ja .L_434a20

            pxor XMM1,XMM1
            pxor XMM4,XMM4
.L_434757:

            movsd XMM0,QWORD PTR [RBX+176]
            movapd XMM9,XMM2
            movsd XMM10,QWORD PTR [RIP+.L_435470]
            mov RBP,QWORD PTR [RBX+32]
            mulsd XMM0,XMM5
            movapd XMM7,XMM10
            mulsd XMM9,XMM6
            mulsd XMM0,XMM5
            movapd XMM8,XMM9
            mulsd XMM8,XMM9
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            sqrtsd XMM3,XMM7
            movapd XMM0,XMM7
            ja .L_434a35
.L_4347a3:

            movapd XMM0,XMM4
            divsd XMM9,XMM3
            mov RDI,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+72],XMM6
            subsd XMM0,QWORD PTR [RIP+.L_435478]
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+48],XMM8
            movsd QWORD PTR [RSP+40],XMM10
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM0,XMM4
            movsd XMM11,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RIP+.L_435488]
            mulsd XMM11,XMM2
            movsd QWORD PTR [RSP+24],XMM9
            mulsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_435480]
            movsd XMM7,QWORD PTR [RBX+360]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_435490]
            mulsd XMM11,XMM2
            movsd QWORD PTR [RSP+32],XMM7
            subsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_4354b0]
            mulsd XMM3,XMM8
            movsd QWORD PTR [RSP+56],XMM11
            mulsd XMM0,XMM11
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_435498]
            subsd XMM1,XMM4
            mulsd XMM1,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_4354a0]
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_4354a8]
            mulsd XMM1,XMM3
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4354b8]
            mulsd XMM0,XMM8
            addsd XMM3,XMM1
            movapd XMM1,XMM5
            mulsd XMM3,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM4
            addsd XMM0,XMM11
            addsd XMM3,XMM0
            movapd XMM0,XMM8
            mulsd XMM0,QWORD PTR [RIP+.L_4354c0]
            mulsd XMM3,XMM0
            movapd XMM0,XMM7
            mulsd XMM0,XMM9
            addsd XMM3,XMM10
            mulsd XMM3,XMM0
            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+16],XMM3
            call .L_44c7f0

            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM12,QWORD PTR [RIP+.L_4354c8]
            subsd XMM0,QWORD PTR [RBP+8]
            movapd XMM2,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_4354d0]
            mulsd XMM12,XMM4
            subsd XMM2,QWORD PTR [RIP+.L_435488]
            movsd XMM11,QWORD PTR [RSP+56]
            movsd XMM8,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+8]
            subsd XMM1,XMM12
            movsd XMM12,QWORD PTR [RIP+.L_4354f0]
            movsd XMM9,QWORD PTR [RSP+24]
            mulsd XMM12,XMM8
            mulsd XMM2,XMM4
            mulsd XMM1,XMM11
            mulsd XMM5,XMM9
            movsd XMM6,QWORD PTR [RSP+72]
            addsd XMM2,QWORD PTR [RIP+.L_4354a8]
            movsd XMM10,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM6,XMM5
            movsd XMM7,QWORD PTR [RSP+32]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4354d8]
            mulsd XMM6,QWORD PTR [RIP+.L_435518]
            subsd XMM1,XMM4
            mulsd XMM1,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_4354e0]
            mulsd XMM1,XMM4
            addsd XMM1,QWORD PTR [RIP+.L_4354e8]
            mulsd XMM1,XMM12
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4354f8]
            mulsd XMM1,XMM8
            mulsd XMM8,QWORD PTR [RIP+.L_435510]
            mulsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_435500]
            mulsd XMM1,XMM11
            addsd XMM1,QWORD PTR [RIP+.L_435508]
            mulsd XMM1,XMM11
            movsd XMM11,QWORD PTR [RIP+.L_435480]
            add RSP,104
.L_4349d4:

            pop RBX
            subsd XMM11,XMM4
            pop RBP
            addsd XMM1,XMM11
            addsd XMM1,XMM2
            mulsd XMM1,XMM8
            addsd XMM1,XMM10
            mulsd XMM1,XMM6
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM1,XMM7
            ret 
          .byte 0x90
.L_434a00:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404af0

            movsd XMM0,QWORD PTR [RIP+.L_435460]
            add RSP,104
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
.L_434a20:

            movapd XMM4,XMM5
            pxor XMM1,XMM1
            divsd XMM4,XMM2
            mulsd XMM4,XMM4
            jmp .L_434757
.L_434a35:

            movsd QWORD PTR [RSP+72],XMM10
            movsd QWORD PTR [RSP+64],XMM12
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM10,QWORD PTR [RSP+72]
            movsd XMM12,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM9,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_4347a3
.L_434ab3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434ac0:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_434ac8:

            movsd QWORD PTR [RSP+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_435450]
            ucomisd XMM1,XMM0
            ja .L_434c30

            ucomisd XMM0,QWORD PTR [RIP+.L_435458]
            ja .L_434c30

            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+88]
            movq XMM3,QWORD PTR [RIP+.L_4355a0]
            movapd XMM1,XMM0
            mulsd XMM4,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_435470]
            movsd XMM6,QWORD PTR [RIP+.L_435468]
            movapd XMM0,XMM4
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            andpd XMM0,XMM3
            ucomisd XMM6,XMM0
            jae .L_434c50

            movapd XMM0,XMM4
            movapd XMM6,XMM5
            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+48],XMM1
            subsd XMM6,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM4
            movsd XMM7,QWORD PTR [RAX+8]
            movaps XMMWORD PTR [RSP+64],XMM3
            divsd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM7
            call log@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM4,XMM4
            movapd XMM3,XMMWORD PTR [RSP+64]
            mulsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            mulsd XMM1,QWORD PTR [RSP+16]
            subsd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            ja .L_434cce
.L_434bd9:

            divsd XMM1,XMM6
            andpd XMM3,XMM1
            ucomisd XMM3,XMM5
            jb .L_434c70

            subsd XMM3,XMM5
            ucomisd XMM3,QWORD PTR [RIP+.L_435468]
            ja .L_434ca0

            pxor XMM1,XMM1
.L_434c01:

            ucomisd XMM4,QWORD PTR [RSP+8]
            jbe .L_434c11

            xorpd XMM1,XMMWORD PTR [RIP+.L_4355b0]
.L_434c11:

            subsd XMM1,QWORD PTR [RBX+336]
            mov RAX,QWORD PTR [RBX+32]
            movapd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RAX]
            add RSP,96
.L_434c29:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434c30:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404af0

            movsd XMM0,QWORD PTR [RIP+.L_435460]
            movapd XMM1,XMM0
.L_434c49:

            add RSP,96
            pop RBX
            ret 
          .byte 0x90
.L_434c50:

            mov RDI,RBX
            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,96
            pop RBX
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434c70:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call acos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_434c01
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434ca0:

            mov ESI,4294967276
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM2
            jmp .L_434c49
.L_434cce:

            movsd QWORD PTR [RSP+64],XMM5
            movaps XMMWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM3,XMMWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_434bd9
.L_434d1f:

            nop
.L_434d20:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_434d28:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM1
            divsd XMM0,QWORD PTR [RAX]
            call exp@PLT

            movsd XMM4,QWORD PTR [RIP+.L_435470]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RIP+.L_435518]
            movapd XMM5,XMM4
            movsd QWORD PTR [RSP+24],XMM4
            divsd XMM5,XMM0
            subsd XMM0,XMM5
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM0,QWORD PTR [RAX]
            movsd QWORD PTR [RSP+16],XMM2
            addsd XMM0,QWORD PTR [RBX+336]
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            movapd XMM3,XMM2
            mulsd XMM0,XMM0
            movapd XMM6,XMM4
            mulsd XMM3,XMM2
            subsd XMM6,XMM0
            addsd XMM3,XMM4
            movapd XMM0,XMM6
            divsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM4,XMM0
            ja .L_434e6c
.L_434dc4:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            ja .L_434e50
.L_434dfd:

            ucomisd XMM2,XMM3
            mov EDX,1
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_434e30

            ucomisd XMM1,XMM3
            pxor XMM0,XMM0
            setp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_434e30

            add RSP,48
.L_434e26:

            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434e30:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM4
            call atan2@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            add RSP,48
            pop RBX
            movapd XMM1,XMM4
            ret 
          .byte 0x90
.L_434e50:

            movsd XMM0,QWORD PTR [RBX+336]
            subsd XMM0,XMM4
            ucomisd XMM3,XMM0
            jbe .L_434dfd

            xorpd XMM4,XMMWORD PTR [RIP+.L_4355b0]
            jmp .L_434dfd
.L_434e6c:

            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_434dc4
.L_434ea6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434eb0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_434eb9:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            divsd XMM0,QWORD PTR [RDI+360]
            mov RSI,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            addsd XMM0,QWORD PTR [RBP+8]
            call .L_44c830

            movq XMM2,QWORD PTR [RIP+.L_4355a0]
            movapd XMM1,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_435458]
            andpd XMM0,XMM2
            ucomisd XMM0,XMM4
            jb .L_434f30

            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_435450]
            ucomisd XMM0,XMM3
            ja .L_434f28

            movapd XMM1,XMM4
.L_434f28:

            add RSP,104
.L_434f2c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_434f30:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+32],XMM1
            movaps XMMWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM2,XMMWORD PTR [RSP+16]
            andpd XMM2,XMM7
            movsd XMM3,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+32]
            ucomisd XMM2,QWORD PTR [RIP+.L_435468]
            ja .L_4351f0

            pxor XMM4,XMM4
            pxor XMM11,XMM11
.L_434f81:

            movsd XMM14,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RIP+.L_435470]
            movapd XMM0,XMM14
            movsd XMM10,QWORD PTR [RBP]
            movapd XMM13,XMM2
            mulsd XMM0,XMM3
            mulsd XMM10,XMM7
            mulsd XMM0,XMM3
            mulsd XMM10,XMM7
            subsd XMM13,XMM0
            ucomisd XMM4,XMM13
            sqrtsd XMM8,XMM13
            ja .L_435203
.L_434fc9:

            movsd XMM3,QWORD PTR [RIP+.L_435508]
            movapd XMM4,XMM11
            movsd XMM5,QWORD PTR [RIP+.L_435520]
            mulsd XMM3,XMM10
            movapd XMM6,XMM2
            mulsd XMM4,XMM11
            movsd XMM12,QWORD PTR [RIP+.L_435480]
            movsd XMM9,QWORD PTR [RIP+.L_4354a8]
            subsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435500]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM3,XMM10
            mulsd XMM0,XMM8
            mulsd XMM5,XMM4
            movsd XMM15,QWORD PTR [RIP+.L_4354f0]
            subsd XMM6,XMM3
            mulsd XMM11,XMM13
            divsd XMM0,QWORD PTR [RBX+360]
            addsd XMM5,XMM12
            movapd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_435528]
            mulsd XMM3,XMM10
            mulsd XMM6,XMM10
            addsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435530]
            movapd XMM8,XMM0
            mulsd XMM0,XMM0
            subsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_435538]
            mulsd XMM6,XMM4
            mulsd XMM15,XMM0
            mulsd XMM11,XMM0
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_435540]
            mulsd XMM6,XMM10
            mulsd XMM3,XMM4
            addsd XMM3,XMM9
            addsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_435548]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_435550]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_435558]
            mulsd XMM6,XMM4
            addsd XMM6,QWORD PTR [RIP+.L_4354e8]
            mulsd XMM6,XMM15
            subsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_4354f8]
            mulsd XMM6,XMM0
            mulsd XMM3,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_435570]
            mulsd XMM6,XMM10
            subsd XMM5,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435510]
            mulsd XMM3,XMM0
            mulsd XMM5,XMM3
            movapd XMM3,XMM2
            subsd XMM3,XMM5
            movapd XMM5,XMM2
            subsd XMM5,XMM14
            divsd XMM11,XMM5
            movapd XMM5,XMM4
            addsd XMM5,XMM4
            addsd XMM5,XMM2
            addsd XMM5,XMM10
            mulsd XMM10,QWORD PTR [RIP+.L_435578]
            mulsd XMM11,QWORD PTR [RIP+.L_435518]
            mulsd XMM11,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435560]
            mulsd XMM3,XMM4
            subsd XMM1,XMM11
            addsd XMM3,QWORD PTR [RIP+.L_435568]
            addsd XMM3,XMM6
            mulsd XMM3,XMM4
            addsd XMM12,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435580]
            mulsd XMM3,XMM4
            addsd XMM12,XMM10
            movsd XMM10,QWORD PTR [RIP+.L_4354b8]
            addsd XMM3,QWORD PTR [RIP+.L_435588]
            mulsd XMM10,XMM0
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_435590]
            mulsd XMM3,XMM4
            movsd XMM4,QWORD PTR [RIP+.L_4354b0]
            mulsd XMM4,XMM0
            addsd XMM3,XMM9
            mulsd XMM0,QWORD PTR [RIP+.L_4354c0]
            add RSP,104
.L_4351be:

            pop RBX
            pop RBP
            mulsd XMM3,XMM4
            subsd XMM12,XMM3
            mulsd XMM12,XMM10
            subsd XMM5,XMM12
            mulsd XMM0,XMM5
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM8
            divsd XMM0,XMM7
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4351f0:

            movapd XMM11,XMM3
            pxor XMM4,XMM4
            divsd XMM11,XMM7
            jmp .L_434f81
.L_435203:

            movapd XMM0,XMM13
            movsd QWORD PTR [RSP+72],XMM2
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM10
            movsd QWORD PTR [RSP+48],XMM11
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+32],XMM13
            call sqrt@PLT

            movsd XMM14,QWORD PTR [RBX+176]
            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM10,QWORD PTR [RSP+56]
            movsd XMM11,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM13,QWORD PTR [RSP+32]
            jmp .L_434fc9
.L_435277:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435280:

            push R12
            push RBP
            mov ESI,24
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_435295:

            call .L_403c70

            test RAX,RAX
            je .L_4353a0

            movsd XMM0,QWORD PTR [RBX+176]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_435448]
            jp .L_435300

            jne .L_435300

            movsd XMM0,QWORD PTR [RBX+360]
            movsd QWORD PTR [RAX],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_435518]
            movsd QWORD PTR [RAX+8],XMM0
            lea RAX,QWORD PTR [RIP+.L_434d20]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_434ac0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_4352f1:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435300:

            call .L_44c700

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP+16],RAX
            je .L_4353a0

            movsd XMM3,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            call .L_44c7f0

            movsd XMM1,QWORD PTR [RIP+.L_435470]
            lea RAX,QWORD PTR [RIP+.L_434eb0]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RBX+176]
            subsd XMM1,XMM0
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4346d0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,32
.L_435390:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4353a0:

            add RSP,32
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_434680
.L_4353b0:

            test RDI,RDI
            je .L_4353c0

            jmp .L_435280
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4353c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4353ee

            lea RDX,QWORD PTR [RIP+.L_4346c0]
            lea RCX,QWORD PTR [RIP+.L_435420]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4353ee:

            add RSP,8
            ret 
.L_4353f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435400:

            xor EAX,EAX
            ret 
.L_435403:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435420:
          .string "Transverse Mercator\n\tCyl, Sph&Ell"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435448:
          .zero 8
.L_435450:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_435458:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_435460:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_435468:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_435470:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_435478:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x40
.L_435480:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_435488:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x40
.L_435490:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x40
.L_435498:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x66
          .byte 0x40
.L_4354a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7d
          .byte 0x40
.L_4354a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x4e
          .byte 0x40
.L_4354b0:
          .byte 0x18
          .byte 0x86
          .byte 0x61
          .byte 0x18
          .byte 0x86
          .byte 0x61
          .byte 0x98
          .byte 0x3f
.L_4354b8:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xa9
          .byte 0x3f
.L_4354c0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xc5
          .byte 0x3f
.L_4354c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x74
          .byte 0x40
.L_4354d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x40
.L_4354d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x80
          .byte 0x40
.L_4354e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0xa8
          .byte 0x40
.L_4354e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x95
          .byte 0x40
.L_4354f0:
          .byte 0x92
          .byte 0x24
          .byte 0x49
          .byte 0x92
          .byte 0x24
          .byte 0x49
          .byte 0x92
          .byte 0x3f
.L_4354f8:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xa1
          .byte 0x3f
.L_435500:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_435508:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
.L_435510:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xb5
          .byte 0x3f
.L_435518:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_435520:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_435528:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x6f
          .byte 0x40
.L_435530:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x56
          .byte 0x40
.L_435538:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x46
          .byte 0x40
.L_435540:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x40
.L_435548:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x98
          .byte 0x40
.L_435550:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0xaf
          .byte 0x40
.L_435558:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0xac
          .byte 0x40
.L_435560:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x40
.L_435568:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x40
.L_435570:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_435578:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_435580:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x40
.L_435588:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x94
          .byte 0x40
.L_435590:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x84
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4355a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4355b0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4355c0:

            test RDI,RDI
            je .L_4355e8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4355de

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4355de:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4355e8:

            xor EAX,EAX
            ret 
.L_4355eb:

            nop
            nop
            nop
            nop
            nop
.L_4355f0:

            jmp .L_4355c0
.L_4355f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435600:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
            sub RSP,64
.L_43560f:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBP,QWORD PTR [R14+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RBP+32]
            test EBX,EBX
            js .L_435774

            cmp EBX,1
            movsd XMM1,QWORD PTR [RSP]
            jle .L_435728

            cmp EBX,3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            jg .L_435774

            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP]
            cmp EBX,3
            movsd XMM5,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM5
            jne .L_4356ab

            mulsd XMM0,QWORD PTR [RBP+16]
            movsd XMM1,QWORD PTR [RBP+8]
            mulsd XMM1,XMM6
            addsd XMM0,XMM1
.L_4356ab:

            mov ECX,DWORD PTR [RBP+36]
            test ECX,ECX
            jne .L_4356c4

            movsd XMM1,QWORD PTR [RIP+.L_435b68]
            ucomisd XMM1,XMM0
            ja .L_4358a0
.L_4356c4:

            movsd XMM3,QWORD PTR [RIP+.L_435b70]
            movapd XMM7,XMM3
            subsd XMM7,XMM0
            movapd XMM1,XMM7
            andpd XMM1,XMMWORD PTR [RIP+.L_435bb0]
            ucomisd XMM1,QWORD PTR [RIP+.L_435b78]
            ja .L_435790

            movsd XMM1,QWORD PTR [RIP+.L_435b80]
            subsd XMM1,QWORD PTR [RBP+24]
.L_4356fb:

            movapd XMM0,XMM1
            cmp EBX,3
            mulsd XMM0,XMM5
            mulsd XMM0,XMM2
            je .L_4358c0

            add RSP,64
.L_435714:

            mulsd XMM1,XMM6
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435728:

            movsd XMM0,QWORD PTR [RBP]
            mov EDX,DWORD PTR [RBP+36]
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_435b78]
            test EDX,EDX
            andpd XMM0,XMMWORD PTR [RIP+.L_435bb0]
            jne .L_43575e

            movapd XMM3,XMM0
            subsd XMM3,XMM1
            ucomisd XMM3,QWORD PTR [RIP+.L_435b88]
            ja .L_4358a0
.L_43575e:

            movsd XMM3,QWORD PTR [RIP+.L_435b80]
            mulsd XMM3,XMM0
            ucomisd XMM3,XMM1
            ja .L_435818
.L_435774:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
.L_43577c:

            add RSP,64
.L_435780:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435790:

            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_435b80]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM3,XMM0
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call log@PLT

            movapd XMM1,XMM0
            mov EBX,DWORD PTR [RBP+32]
            movsd XMM7,QWORD PTR [RSP+16]
            xorpd XMM1,XMMWORD PTR [RIP+.L_435bc0]
            movsd XMM0,QWORD PTR [RBP+24]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            divsd XMM1,XMM7
            divsd XMM0,XMM3
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+40]
            subsd XMM1,XMM0
            jmp .L_4356fb

            nop
            nop
            nop
            nop
.L_435818:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RBP+24]
            divsd XMM0,XMM5
            test EAX,EAX
            mulsd XMM1,XMM5
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            addsd XMM1,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_435b90]
            mulsd XMM2,XMM1
            mulsd XMM1,XMM4
            movapd XMM0,XMM2
            jne .L_43577c

            xorpd XMM1,XMMWORD PTR [RIP+.L_435bc0]
            jmp .L_43577c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4358a0:

            mov ESI,4294967276
            mov RDI,R14
            call .L_415fe0

            pxor XMM0,XMM0
            movapd XMM1,XMM0
            jmp .L_43577c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4358c0:

            mulsd XMM5,QWORD PTR [RBP+8]
            mulsd XMM6,QWORD PTR [RBP+16]
            mulsd XMM4,XMM5
            subsd XMM6,XMM4
            mulsd XMM1,XMM6
            jmp .L_43577c
.L_4358db:

            nop
            nop
            nop
            nop
            nop
.L_4358e0:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_4358f3:

            call .L_403c70

            test RAX,RAX
            je .L_435a70

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_435b23]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_435b2b]
            mov DWORD PTR [RBP+36],EAX
            call .L_4043f0

            movsd XMM4,QWORD PTR [RIP+.L_435b88]
            mov QWORD PTR [RSP],RAX
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM1,XMM4
            movq XMM2,QWORD PTR [RIP+.L_435bb0]
            movsd XMM3,QWORD PTR [RIP+.L_435b78]
            subsd XMM1,XMM6
            mulsd XMM1,QWORD PTR [RIP+.L_435b80]
            movapd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jbe .L_4359e0

            mov RAX,QWORD PTR [RIP+.L_435b98]
            mov QWORD PTR [RBP+24],RAX
.L_43597b:

            movsd XMM0,QWORD PTR [RBX+336]
            movapd XMM5,XMM0
            andpd XMM5,XMM2
            movapd XMM1,XMM5
            subsd XMM1,XMM4
            andpd XMM1,XMM2
            ucomisd XMM3,XMM1
            jbe .L_435a58

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_435ab8

            movsd QWORD PTR [RBP],XMM4
            mov DWORD PTR [RBP+32],0
.L_4359bb:

            lea RAX,QWORD PTR [RIP+.L_435600]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,72
.L_4359d5:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4359e0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movaps XMMWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM5,QWORD PTR [RIP+.L_435b70]
            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM5,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP+24],XMM5
            movsd QWORD PTR [RSP],XMM5
            call cos@PLT

            call log@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+40]
            mulsd XMM5,XMM0
            movapd XMM2,XMMWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            mulsd XMM5,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBP+24],XMM5
            jmp .L_43597b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435a58:

            ucomisd XMM3,XMM5
            jbe .L_435a80

            mov DWORD PTR [RBP+32],2
            jmp .L_4359bb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435a70:

            add RSP,72
.L_435a74:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4355c0
          .byte 0x66
          .byte 0x90
.L_435a80:

            lea RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            mov DWORD PTR [RBP+32],3
            movsd QWORD PTR [RBP+16],XMM0
            movsd QWORD PTR [RBP+8],XMM1
            jmp .L_4359bb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435ab8:

            mov RAX,QWORD PTR [RIP+.L_435ba0]
            mov DWORD PTR [RBP+32],1
            mov QWORD PTR [RBP],RAX
            jmp .L_4359bb
.L_435acf:

            nop
.L_435ad0:

            test RDI,RDI
            je .L_435ae0

            jmp .L_4358e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435ae0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_435b0e

            lea RDX,QWORD PTR [RIP+.L_4355f0]
            lea RCX,QWORD PTR [RIP+.L_435b40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_435b0e:

            add RSP,8
            ret 
.L_435b13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435b20:

            xor EAX,EAX
            ret 
.L_435b23:
          .string "bno_cut"
.L_435b2b:
          .string "rlat_b"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435b40:
          .string "Airy\n\tMisc Sph, no inv.\n\tno_cut lat_b="
          .byte 0x90
.L_435b68:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0xbd
.L_435b70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_435b78:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_435b80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_435b88:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_435b90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_435b98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xbf
.L_435ba0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435bb0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435bc0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_435bd0:

            test RDI,RDI
            je .L_435bf8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_435bee

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_435bee:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435bf8:

            xor EAX,EAX
            ret 
.L_435bfb:

            nop
            nop
            nop
            nop
            nop
.L_435c00:

            jmp .L_435bd0
.L_435c02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435c10:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_435c1b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,RBP
            mov RDI,RBX
            call sincos@PLT

            movsd XMM4,QWORD PTR [RIP+.L_436630]
            mov RSI,RBP
            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBX
            mulsd XMM4,QWORD PTR [RSP]
            mov R12,QWORD PTR [R12+32]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM6
            movapd XMM0,XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+56]
            mulsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+32],XMM7
            call acos@PLT

            pxor XMM1,XMM1
            movapd XMM2,XMM0
            ucomisd XMM0,XMM1
            jp .L_435ce0

            pxor XMM0,XMM0
            jne .L_435ce0
.L_435ca9:

            mov EAX,DWORD PTR [R12+8]
            test EAX,EAX
            je .L_435cd7

            movsd XMM2,QWORD PTR [RSP]
            addsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [R12]
            mulsd XMM1,QWORD PTR [RIP+.L_436630]
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_436630]
.L_435cd7:

            add RSP,64
.L_435cdb:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_435ce0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_436638]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM1,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,XMM1
            mulsd XMM1,XMM2
            jmp .L_435ca9
.L_435d25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435d30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,104
.L_435d42:

            mov R13,QWORD PTR [RDI+32]
            andpd XMM2,XMMWORD PTR [RIP+.L_436670]
            movsd XMM3,QWORD PTR [RIP+.L_436640]
            ucomisd XMM3,XMM2
            jbe .L_435d72

            movapd XMM2,XMM1
            andpd XMM2,XMMWORD PTR [RIP+.L_436670]
            ucomisd XMM3,XMM2
            ja .L_4363a8
.L_435d72:

            lea RBP,QWORD PTR [RSP+88]
            lea R12,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+64],XMM0
            movapd XMM0,XMM1
            mov R15,RDI
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+72],XMM1
            call sincos@PLT

            movsd XMM3,QWORD PTR [RIP+.L_436630]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+80]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RSP+64]
            xor R14D,R14D
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM10
            nop
            nop
            nop
            nop
            nop
.L_435e10:

            xor EBX,EBX
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM10,QWORD PTR [RSP+24]
            jmp .L_435e8b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435e30:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_436630]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+80]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM10,QWORD PTR [RSP+88]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+24]
.L_435e8b:

            movapd XMM0,XMM9
            movsd XMM8,QWORD PTR [RIP+.L_436638]
            movsd QWORD PTR [RSP+56],XMM10
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM9
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM1,XMM0
            mulsd XMM1,XMM0
            subsd XMM8,XMM1
            movsd QWORD PTR [RSP+16],XMM8
            call acos@PLT

            movsd XMM8,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_436648]
            movapd XMM0,XMM8
            call pow@PLT

            movsd XMM10,QWORD PTR [RSP+56]
            mov ECX,DWORD PTR [R13+8]
            movsd XMM9,QWORD PTR [RSP+40]
            movapd XMM1,XMM10
            movsd XMM11,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+48]
            test ECX,ECX
            mulsd XMM1,XMM9
            divsd XMM11,XMM0
            movapd XMM6,XMM2
            mulsd XMM1,XMM2
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM3,XMM5
            mulsd XMM6,XMM11
            mulsd XMM1,XMM5
            movapd XMM7,XMM8
            mulsd XMM3,XMM5
            movapd XMM4,XMM11
            mulsd XMM7,XMM11
            movapd XMM0,XMM6
            mulsd XMM6,XMM5
            divsd XMM1,XMM8
            addsd XMM4,XMM11
            mulsd XMM3,XMM10
            mulsd XMM0,XMM10
            mulsd XMM7,XMM2
            mulsd XMM6,XMM5
            mulsd XMM3,XMM10
            subsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM4,XMM8
            mulsd XMM0,XMM11
            divsd XMM3,XMM8
            addsd XMM1,XMM1
            mulsd XMM0,XMM9
            mulsd XMM6,XMM10
            mulsd XMM4,XMM5
            mulsd XMM0,XMM2
            mulsd XMM6,XMM9
            mulsd XMM4,XMM10
            mulsd XMM0,XMM2
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM2,XMM5
            mulsd XMM0,XMM9
            mulsd XMM2,XMM10
            divsd XMM0,XMM8
            divsd XMM2,XMM8
            movapd XMM12,XMM0
            movapd XMM0,XMM11
            mulsd XMM0,XMM10
            subsd XMM2,XMM6
            mulsd XMM0,XMM10
            mulsd XMM2,QWORD PTR [RIP+.L_436630]
            mulsd XMM0,XMM5
            addsd XMM0,XMM12
            je .L_43605c

            movsd XMM5,QWORD PTR [R13]
            addsd XMM7,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_436638]
            addsd XMM3,XMM5
            mulsd XMM1,QWORD PTR [RIP+.L_436630]
            mulsd XMM6,XMM5
            mulsd XMM2,QWORD PTR [RIP+.L_436630]
            mulsd XMM7,QWORD PTR [RIP+.L_436630]
            addsd XMM4,XMM6
            mulsd XMM3,QWORD PTR [RIP+.L_436630]
            mulsd XMM0,QWORD PTR [RIP+.L_436630]
            mulsd XMM4,QWORD PTR [RIP+.L_436630]
.L_43605c:

            subsd XMM7,QWORD PTR [RSP+72]
            movapd XMM6,XMM3
            subsd XMM4,QWORD PTR [RSP+64]
            movapd XMM5,XMM1
            mulsd XMM6,XMM0
            mulsd XMM5,XMM2
            mulsd XMM1,XMM7
            mulsd XMM0,XMM4
            subsd XMM5,XMM6
            mulsd XMM3,XMM7
            mulsd XMM2,XMM4
            subsd XMM1,XMM0
            subsd XMM2,XMM3
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_436650]
            divsd XMM2,XMM5
            divsd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM2
            call fmod@PLT

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+16]
            subsd XMM7,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_436670]
            movsd QWORD PTR [RSP],XMM7
            ucomisd XMM2,QWORD PTR [RIP+.L_436640]
            movsd XMM7,QWORD PTR [RSP+8]
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP+8],XMM7
            ja .L_4360fb

            andpd XMM0,XMMWORD PTR [RIP+.L_436670]
            ucomisd XMM0,QWORD PTR [RIP+.L_436640]
            jbe .L_436107
.L_4360fb:

            add EBX,1
            cmp EBX,11
            jne .L_435e30
.L_436107:

            movsd XMM4,QWORD PTR [RSP]
            ucomisd XMM4,QWORD PTR [RIP+.L_436658]
            jbe .L_43612f

            movapd XMM0,XMM4
            subsd XMM0,QWORD PTR [RIP+.L_436658]
            addsd XMM0,XMM0
            subsd XMM4,XMM0
            movsd QWORD PTR [RSP],XMM4
.L_43612f:

            movsd XMM4,QWORD PTR [RIP+.L_436660]
            movsd XMM7,QWORD PTR [RSP]
            ucomisd XMM4,XMM7
            jbe .L_43615b

            movsd XMM0,QWORD PTR [RIP+.L_436658]
            addsd XMM0,XMM7
            addsd XMM0,XMM0
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM7
.L_43615b:

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RIP+.L_436640]
            andpd XMM0,XMMWORD PTR [RIP+.L_436670]
            subsd XMM0,QWORD PTR [RIP+.L_436658]
            andpd XMM0,XMMWORD PTR [RIP+.L_436670]
            ucomisd XMM3,XMM0
            ja .L_436310

            movsd XMM1,QWORD PTR [RIP+.L_436630]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+88]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM4
            call cos@PLT

            movsd QWORD PTR [RSP+40],XMM0
.L_4361da:

            movsd XMM0,QWORD PTR [RSP]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+88]
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call acos@PLT

            pxor XMM3,XMM3
            movapd XMM1,XMM0
            movsd XMM5,QWORD PTR [RSP+40]
            ucomisd XMM0,XMM3
            jp .L_43622b

            je .L_436370
.L_43622b:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RIP+.L_436638]
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM3,XMM0
            movapd XMM0,XMM1
            addsd XMM0,XMM1
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
.L_436278:

            mov EAX,DWORD PTR [R13+8]
            test EAX,EAX
            je .L_4362a5

            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [R13]
            mulsd XMM1,QWORD PTR [RIP+.L_436630]
            addsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_436630]
.L_4362a5:

            movsd XMM3,QWORD PTR [RSP+64]
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_436670]
            ucomisd XMM0,QWORD PTR [RIP+.L_436640]
            ja .L_4362e5

            movsd XMM0,QWORD PTR [RSP+72]
            subsd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_436670]
            ucomisd XMM0,QWORD PTR [RIP+.L_436640]
            jbe .L_4363bf
.L_4362e5:

            add R14D,1
            cmp R14D,21
            jne .L_435e10
.L_4362f3:

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,104
.L_436302:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436310:

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            je .L_436380

            movsd XMM1,QWORD PTR [RIP+.L_436630]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+88]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM7
            call cos@PLT

            movsd QWORD PTR [RSP+40],XMM0
            jmp .L_4361da
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436370:

            pxor XMM1,XMM1
            pxor XMM0,XMM0
            jmp .L_436278
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436380:

            mov RAX,QWORD PTR [RIP+.L_436638]
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+32],RAX
            jmp .L_4361da
.L_4363a8:

            pxor XMM0,XMM0
            add RSP,104
.L_4363b0:

            pop RBX
            pop RBP
            movapd XMM1,XMM0
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4363bf:

            cmp EBX,10
            jne .L_4362f3

            cmp R14D,20
            jne .L_4362f3

            mov RDI,QWORD PTR [R15]
            mov ESI,4294967243
            call .L_404af0

            jmp .L_4362f3
.L_4363e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4363f0:

            push RBX
.L_4363f1:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436440

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+8],0
            lea RAX,QWORD PTR [RIP+.L_435d30]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_435c10]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_436438:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436440:

            mov RDI,RBX
            pop RBX
            jmp .L_435bd0
.L_436449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436450:

            test RDI,RDI
            je .L_436460

            jmp .L_4363f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436460:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43648e

            lea RDX,QWORD PTR [RIP+.L_435c00]
            lea RCX,QWORD PTR [RIP+.L_436610]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43648e:

            add RSP,8
            ret 
.L_436493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4364a0:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_4364b3:

            call .L_403c70

            test RAX,RAX
            je .L_436561

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4365d3]
            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX+8],1
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_436520

            mov RAX,QWORD PTR [RIP+.L_436668]
            mov QWORD PTR [RBP],RAX
.L_4364f1:

            lea RAX,QWORD PTR [RIP+.L_435d30]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_435c10]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_436516:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436520:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4365da]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_436628]
            movsd QWORD PTR [RBP],XMM0
            jp .L_4364f1

            jne .L_4364f1

            mov ESI,4294967274
            mov RDI,RBX
            call .L_415fe0
.L_436561:

            add RSP,24
.L_436565:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_435bd0
.L_43656f:

            nop
.L_436570:

            test RDI,RDI
            je .L_436580

            jmp .L_4364a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436580:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4365ae

            lea RDX,QWORD PTR [RIP+.L_435c00]
            lea RCX,QWORD PTR [RIP+.L_4365f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4365ae:

            add RSP,8
            ret 
.L_4365b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4365c0:

            xor EAX,EAX
            ret 
.L_4365c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4365d0:

            xor EAX,EAX
            ret 
.L_4365d3:
          .string "tlat_1"
.L_4365da:
          .string "rlat_1"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4365f0:
          .string "Winkel Tripel\n\tMisc Sph\n\tlat_1"
          .zero 1
.L_436610:
          .string "Aitoff\n\tMisc Sph"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436628:
          .zero 8
.L_436630:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_436638:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_436640:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_436648:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_436650:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_436658:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_436660:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_436668:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xe4
          .byte 0x3f
.L_436670:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436680:

            jmp .L_403ca0
.L_436685:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436690:

            sub RSP,56
.L_436694:

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_436888]
            mulsd XMM0,XMM1
            call tan@PLT

            movapd XMM1,XMM0
            mulsd XMM0,XMM0
            movsd XMM7,QWORD PTR [RIP+.L_436890]
            pxor XMM3,XMM3
            subsd XMM7,XMM0
            ucomisd XMM3,XMM7
            sqrtsd XMM2,XMM7
            ja .L_43677f
.L_4366d1:

            movsd XMM0,QWORD PTR [RIP+.L_436888]
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+40]
            movapd XMM3,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_436898]
            addsd XMM0,QWORD PTR [RIP+.L_436890]
            divsd XMM2,XMM0
            divsd XMM3,XMM0
            movapd XMM4,XMM2
            mulsd XMM4,XMM2
            movapd XMM6,XMM3
            movapd XMM0,XMM4
            mulsd XMM4,XMM5
            mulsd XMM6,XMM3
            addsd XMM0,XMM5
            addsd XMM4,XMM5
            movapd XMM1,XMM6
            mulsd XMM1,XMM5
            subsd XMM4,XMM6
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_4368a0]
            add RSP,56
.L_43676e:

            mulsd XMM2,XMM1
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            mulsd XMM1,XMM4
            ret 
.L_43677f:

            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_4366d1
.L_4367a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4367b0:

            test RDI,RDI
            je .L_4367e0

            lea RAX,QWORD PTR [RIP+.L_436690]
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4367e0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43680e

            lea RDX,QWORD PTR [RIP+.L_436680]
            lea RCX,QWORD PTR [RIP+.L_436860]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43680e:

            add RSP,8
            ret 
.L_436813:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436820:

            lea RDX,QWORD PTR [RIP+.L_436690]
            mov RAX,RDI
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_436842:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436850:

            xor EAX,EAX
            ret 
.L_436853:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436860:

            jne .L_4368ca

            jne .L_4368d8
          .byte 0x74
          .byte 0x20
          .byte 0x45
          .byte 0x70
          .byte 0x69
          .byte 0x63
          .byte 0x79
          .byte 0x63
          .byte 0x6c
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x61
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x4d
          .byte 0x69
          .byte 0x73
          .byte 0x63
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0x0
          .byte 0x90
.L_436888:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_436890:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_436898:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_4368a0:
          .byte 0x54
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xf5
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4368b0:

            test RDI,RDI
            je .L_4368d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4368ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0
.L_4368ca:

            mov RDI,RBX
            pop RBX
.L_4368ce:

            jmp .L_403ca0

            nop
            nop
            nop
            nop
            nop
.L_4368d8:

            xor EAX,EAX
            ret 
.L_4368db:

            nop
            nop
            nop
            nop
            nop
.L_4368e0:

            jmp .L_4368b0
.L_4368e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4368f0:

            push RBX
            movapd XMM5,XMM0
            movapd XMM4,XMM1
            sub RSP,48
.L_4368fd:

            mov RBX,QWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RBX]
            test EDX,EDX
            je .L_436932

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_436d68]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP]
.L_436932:

            movapd XMM2,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_436d70]
            andpd XMM2,XMMWORD PTR [RIP+.L_436d90]
            ucomisd XMM2,XMM0
            jb .L_4369c0

            mov EAX,DWORD PTR [RBX+4]
            test EAX,EAX
            je .L_436961

            movsd XMM3,QWORD PTR [RIP+.L_436d68]
            ucomisd XMM2,XMM3
            jae .L_4369d0
.L_436961:

            movsd XMM3,QWORD PTR [RIP+.L_436d78]
            movapd XMM0,XMM4
            pxor XMM1,XMM1
            divsd XMM3,XMM2
            mulsd XMM0,XMM4
            addsd XMM3,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_436d80]
            subsd XMM2,XMM3
            mulsd XMM3,XMM3
            subsd XMM3,XMM0
            ucomisd XMM1,XMM3
            sqrtsd XMM6,XMM3
            ja .L_436a00
.L_43699b:

            addsd XMM2,XMM6
            movapd XMM0,XMM2
.L_4369a3:

            ucomisd XMM1,XMM5
            jbe .L_4369b1

            xorpd XMM0,XMMWORD PTR [RIP+.L_436da0]
.L_4369b1:

            add RSP,48
.L_4369b5:

            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4369c0:

            add RSP,48
            pxor XMM0,XMM0
            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_4369d0:

            mulsd XMM1,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_436d78]
            subsd XMM6,XMM1
            pxor XMM1,XMM1
            addsd XMM0,XMM6
            ucomisd XMM1,XMM0
            sqrtsd XMM6,XMM0
            ja .L_436a48
.L_4369f2:

            addsd XMM2,XMM6
            subsd XMM2,XMM3
            movapd XMM0,XMM2
            jmp .L_4369a3
.L_436a00:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43699b
.L_436a48:

            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM6
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            jmp .L_4369f2
.L_436a98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436aa0:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436ae0

            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],1
            lea RAX,QWORD PTR [RIP+.L_4368f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_436ae0:

            mov RDI,RBX
            pop RBX
            jmp .L_4368b0
.L_436ae9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436af0:

            test RDI,RDI
            je .L_436b00

            jmp .L_436aa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436b00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436b2e

            lea RDX,QWORD PTR [RIP+.L_4368e0]
            lea RCX,QWORD PTR [RIP+.L_436cc0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_436b2e:

            add RSP,8
            ret 
.L_436b33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436b40:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436b80

            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],0
            lea RAX,QWORD PTR [RIP+.L_4368f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_436b80:

            mov RDI,RBX
            pop RBX
            jmp .L_4368b0
.L_436b89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436b90:

            test RDI,RDI
            je .L_436ba0

            jmp .L_436b40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436ba0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436bce

            lea RDX,QWORD PTR [RIP+.L_4368e0]
            lea RCX,QWORD PTR [RIP+.L_436d40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_436bce:

            add RSP,8
            ret 
.L_436bd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436be0:

            push RBX
.L_436be1:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436c28

            movabs RDX,4294967296
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_4368f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_436c23:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436c28:

            mov RDI,RBX
            pop RBX
            jmp .L_4368b0
.L_436c31:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436c40:

            test RDI,RDI
            je .L_436c50

            jmp .L_436be0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436c50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_436c7e

            lea RDX,QWORD PTR [RIP+.L_4368e0]
            lea RCX,QWORD PTR [RIP+.L_436d00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_436c7e:

            add RSP,8
            ret 
.L_436c83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436c90:

            xor EAX,EAX
            ret 
.L_436c93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436ca0:

            xor EAX,EAX
            ret 
.L_436ca3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436cb0:

            xor EAX,EAX
            ret 
.L_436cb3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436cc0:
          .string "Bacon Globular\n\tMisc Sph, no inv."
          .zero 30
.L_436d00:
          .string "Ortelius Oval\n\tMisc Sph, no inv."
          .zero 31
.L_436d40:

            jo .L_436dac
          .byte 0x61
          .byte 0x6e
          .byte 0x20
          .byte 0x47
          .byte 0x6c
          .byte 0x6f
          .byte 0x62
          .byte 0x75
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x49
          .byte 0xa
          .byte 0x9
          .byte 0x4d
          .byte 0x69
          .byte 0x73
          .byte 0x63
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436d68:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_436d70:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_436d78:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x3
          .byte 0x40
.L_436d80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436d90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436da0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_436dac:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_436db0:

            test RDI,RDI
            je .L_436dd8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_436dce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_436dce:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436dd8:

            xor EAX,EAX
            ret 
.L_436ddb:

            nop
            nop
            nop
            nop
            nop
.L_436de0:

            jmp .L_436db0
.L_436de2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436df0:

            push RBX
            mov RBX,RDI
            add RSP,-128
.L_436df8:

            movsd QWORD PTR [RSP+48],XMM0
            lea RDI,QWORD PTR [RSP+120]
            lea RSI,QWORD PTR [RSP+112]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+64],XMM5
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movq XMM1,QWORD PTR [RIP+.L_437760]
            movapd XMM0,XMM6
            movsd XMM3,QWORD PTR [RIP+.L_437780]
            movsd XMM4,QWORD PTR [RSP+112]
            andpd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM0,XMM3
            movsd XMM4,QWORD PTR [RSP+120]
            mulsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+80],XMM4
            ja .L_436e8f

            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM0,XMM5
            andpd XMM0,XMM1
            ucomisd XMM0,XMM3
            jbe .L_436f30
.L_436e8f:

            movsd XMM0,QWORD PTR [RSP+32]
            mov RDI,RBX
            mulsd XMM2,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+40]
            movaps XMMWORD PTR [RSP+48],XMM1
            addsd XMM0,XMM2
            call .L_449ce0

            movapd XMM1,XMMWORD PTR [RSP+48]
            movapd XMM2,XMM0
.L_436ebc:

            andpd XMM1,XMM2
            ucomisd XMM1,QWORD PTR [RIP+.L_437790]
            ja .L_436ee0

            pxor XMM2,XMM2
            sub RSP,-128
.L_436ed2:

            pxor XMM1,XMM1
            pop RBX
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436ee0:

            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM3,XMM6
            movsd QWORD PTR [RSP+48],XMM2
            mulsd XMM1,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+80]
            mulsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM0,XMM6
            subsd XMM1,XMM3
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            sub RSP,-128
.L_436f25:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0x90
.L_436f30:

            movsd XMM0,QWORD PTR [RIP+.L_437788]
            movaps XMMWORD PTR [RSP+96],XMM1
            mulsd XMM0,XMM6
            movsd QWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+88],XMM5
            call sin@PLT

            movsd XMM5,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_437788]
            mulsd XMM0,XMM5
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM2,XMM0
            movapd XMM1,XMMWORD PTR [RSP+96]
            mulsd XMM3,XMM3
            mulsd XMM0,XMM2
            addsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_436fc3
.L_436f9f:

            movapd XMM0,XMM2
            mov RDI,RBX
            movaps XMMWORD PTR [RSP+48],XMM1
            call .L_449c40

            movapd XMM2,XMM0
            movapd XMM1,XMMWORD PTR [RSP+48]
            addsd XMM2,XMM0
            jmp .L_436ebc
.L_436fc3:

            movaps XMMWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+48],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movapd XMM1,XMMWORD PTR [RSP+64]
            jmp .L_436f9f
.L_436fe1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436ff0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            xor R13D,R13D
            sub RSP,152
.L_437007:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM0
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM1
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            lea RBX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+56],RSI
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [R12+32]
            movsd XMM6,QWORD PTR [RSP+72]
            mov R15,RBX
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM6
            mov R14,RBP
.L_43706e:

            movsd XMM0,QWORD PTR [RSP+40]
            movsxd RAX,R13D
            movsd XMM5,QWORD PTR [RSP+32]
            mov RCX,RAX
            subsd XMM0,QWORD PTR [R14]
            mov RDI,QWORD PTR [R12]
            shl RCX,4
            subsd XMM5,QWORD PTR [R14+8]
            movsd XMM1,QWORD PTR [R14+16]
            movsd XMM4,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP],RCX
            movsd XMM3,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM2,QWORD PTR [R14+24]
            call .L_436df0

            mov RCX,QWORD PTR [RSP]
            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+RCX*1+80],XMM0
            movsd QWORD PTR [RSP+RCX*1+88],XMM1
            ucomisd XMM6,QWORD PTR [R15]
            jp .L_4370df

            mov RAX,QWORD PTR [RSP+8]
            je .L_437268
.L_4370df:

            movsd XMM0,QWORD PTR [R15+8]
            add R13D,1
            add R14,72
            add R15,16
            subsd XMM0,QWORD PTR [R14-32]
            call .L_449e30

            movsd QWORD PTR [R15-8],XMM0
            cmp R13D,3
            jne .L_43706e

            movsd XMM7,QWORD PTR [RBP+216]
            xor R14D,R14D
            movsd XMM3,QWORD PTR [RBP+224]
            movsd QWORD PTR [RSP],XMM7
            movsd QWORD PTR [RSP+8],XMM3
.L_43712a:

            lea R13D,DWORD PTR [R14+1]
            cmp R14,2
            mov EAX,0
            movsd XMM1,QWORD PTR [RBX]
            mov R15D,R14D
            cmovne EAX,R13D
            mov RDI,QWORD PTR [R12]
            cdqe 
            movapd XMM4,XMM1
            shl RAX,4
            movsd QWORD PTR [RSP+16],XMM1
            movsd XMM3,QWORD PTR [RSP+RAX*1+80]
            lea RAX,QWORD PTR [R14+R14*8]
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RBP+RAX*8+32]
            mulsd XMM3,XMM3
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            mulsd XMM2,XMM1
            addsd XMM0,XMM4
            subsd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_437788]
            divsd XMM0,XMM2
            call .L_449ce0

            pxor XMM7,XMM7
            movsd XMM1,QWORD PTR [RSP+16]
            ucomisd XMM7,QWORD PTR [RBX+8]
            jbe .L_4371ac

            xorpd XMM0,XMMWORD PTR [RIP+.L_437770]
.L_4371ac:

            test R14,R14
            movsd QWORD PTR [RSP+16],XMM1
            je .L_437280

            cmp R15D,1
            je .L_4372c4

            movsd XMM2,QWORD PTR [RBP+248]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            cmp R13D,3
            movsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RSP]
            addsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            je .L_437228
.L_437216:

            add R14,1
            add RBX,16
            jmp .L_43712a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437228:

            movsd XMM1,QWORD PTR [RIP+.L_437798]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+8]
.L_43723a:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43731c

            add RSP,152
.L_437258:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437268:

            lea RAX,QWORD PTR [RAX+RAX*8]
            lea RAX,QWORD PTR [RBP+RAX*8+48]
            movsd XMM0,QWORD PTR [RAX]
            movsd XMM1,QWORD PTR [RAX+8]
            jmp .L_43723a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437280:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            addsd XMM0,QWORD PTR [RSP]
            subsd XMM7,XMM1
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_437216
.L_4372c4:

            movsd XMM2,QWORD PTR [RBP+240]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd XMM7,QWORD PTR [RSP+8]
            subsd XMM6,XMM0
            subsd XMM7,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM7
            jmp .L_437216
.L_43731c:

            call __stack_chk_fail@PLT
.L_437321:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437330:

            push R15
            push R14
            mov ESI,256
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,72
.L_43734b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            call .L_403c70

            test RAX,RAX
            je .L_43766d

            lea R13,QWORD PTR [RSP+46]
            mov RBP,RAX
            mov QWORD PTR [RBX+32],RAX
            mov R15,RAX
            mov R12,RAX
            xor R14D,R14D
.L_43737e:

            add R14D,1
            lea RCX,QWORD PTR [RIP+.L_4376e3]
            mov EDX,10
            mov R8D,R14D
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            add R12,72
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_4043f0

            lea RCX,QWORD PTR [RIP+.L_4376eb]
            mov R8D,R14D
            mov QWORD PTR [R12-72],RAX
            mov EDX,10
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            mov RDX,R13
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12-64],XMM0
            subsd XMM0,QWORD PTR [RBX+328]
            call .L_449e30

            movsd XMM1,QWORD PTR [R12-72]
            movsd QWORD PTR [R12-64],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [R12-56],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd QWORD PTR [R12-48],XMM0
            cmp R14D,3
            jne .L_43737e

            xor R12D,R12D
.L_43744b:

            cmp R12D,2
            je .L_437677

            lea EAX,DWORD PTR [R12+1]
.L_43745a:

            cdqe 
            movsxd RDX,R12D
            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RAX+RAX*8]
            lea RDX,QWORD PTR [RDX+RDX*8]
            movsd XMM1,QWORD PTR [R15+16]
            lea RAX,QWORD PTR [RBP+RAX*8]
            movsd XMM2,QWORD PTR [R15+24]
            lea R13,QWORD PTR [RBP+RDX*8]
            movsd XMM5,QWORD PTR [RAX+8]
            movsd XMM0,QWORD PTR [RAX]
            subsd XMM5,QWORD PTR [R15+8]
            movsd XMM4,QWORD PTR [RAX+24]
            subsd XMM0,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RAX+16]
            call .L_436df0

            pxor XMM6,XMM6
            movsd QWORD PTR [R13+32],XMM0
            movsd QWORD PTR [R13+40],XMM1
            ucomisd XMM6,QWORD PTR [R15+32]
            jp .L_4374c1

            je .L_437660
.L_4374c1:

            add R12D,1
            add R15,72
            cmp R12D,3
            jne .L_43744b

            movsd XMM3,QWORD PTR [RBP+32]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBP+176]
            movapd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBP+104]
            movapd XMM4,XMM1
            mulsd XMM0,XMM3
            mulsd XMM4,XMM1
            mulsd XMM2,XMM2
            mulsd XMM1,XMM3
            addsd XMM0,XMM4
            subsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_437788]
            divsd XMM0,XMM1
            call .L_449ce0

            movsd XMM3,QWORD PTR [RBP+32]
            mov RDI,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBP+104]
            movsd QWORD PTR [RBP+232],XMM0
            movapd XMM0,XMM3
            movapd XMM4,XMM1
            mulsd XMM0,XMM3
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RBP+176]
            mulsd XMM1,XMM3
            mulsd XMM2,XMM2
            addsd XMM0,XMM4
            subsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_437788]
            divsd XMM0,XMM1
            call .L_449ce0

            movsd XMM3,QWORD PTR [RBP+232]
            lea RDI,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP+240],XMM0
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_436ff0]
            movsd XMM2,QWORD PTR [RIP+.L_4377a0]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,XMM3
            movsd XMM0,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+200],0
            movsd QWORD PTR [RBP+248],XMM2
            movsd XMM2,QWORD PTR [RBP+176]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RBP+128],XMM0
            movsd QWORD PTR [RBP+56],XMM0
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+224],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_437788]
            mulsd XMM0,QWORD PTR [RBP+32]
            movapd XMM3,XMM0
            movsd QWORD PTR [RBP+120],XMM0
            subsd XMM1,XMM0
            xorpd XMM3,XMMWORD PTR [RIP+.L_437770]
            movsd QWORD PTR [RBP+192],XMM1
            movsd QWORD PTR [RBP+216],XMM1
            movsd QWORD PTR [RBP+48],XMM3
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            mov QWORD PTR [RBX+176],0
.L_43763a:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43767e

            add RSP,72
.L_43764e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437660:

            mov ESI,4294967271
            mov RDI,RBX
            call .L_415fe0
.L_43766d:

            mov RDI,RBX
            call .L_436db0

            jmp .L_43763a
.L_437677:

            xor EAX,EAX
            jmp .L_43745a
.L_43767e:

            call __stack_chk_fail@PLT
.L_437683:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437690:

            test RDI,RDI
            je .L_4376a0

            jmp .L_437330
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4376a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4376ce

            lea RDX,QWORD PTR [RIP+.L_436de0]
            lea RCX,QWORD PTR [RIP+.L_437700]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4376ce:

            add RSP,8
            ret 
.L_4376d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4376e0:

            xor EAX,EAX
            ret 
.L_4376e3:
          .string "rlat_%d"
.L_4376eb:
          .string "rlon_%d"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437700:
          .string "Chamberlin Trimetric\n\tMisc Sph, no inv.\n\tlat_1= lon_1= lat_2= lon_2= lat_3= lon_3="
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437760:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437770:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437780:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_437788:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_437790:
          .byte 0x95
          .byte 0xd6
          .byte 0x26
          .byte 0xe8
          .byte 0xb
          .byte 0x2e
          .byte 0x11
          .byte 0x3e
.L_437798:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_4377a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4377b0:

            test RDI,RDI
            je .L_4377d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4377ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4377ce:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4377d8:

            xor EAX,EAX
            ret 
.L_4377db:

            nop
            nop
            nop
            nop
            nop
.L_4377e0:

            jmp .L_4377b0
.L_4377e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4377f0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,40
.L_4377fd:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM4,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_437c18]
            movsd XMM5,QWORD PTR [RIP+.L_437c20]
            movsd XMM0,QWORD PTR [RBX]
            movapd XMM1,XMM0
            mulsd XMM1,XMM2
            mulsd XMM2,XMM4
            mulsd XMM1,XMM0
            movapd XMM0,XMM5
            mulsd XMM2,XMM4
            mulsd XMM1,XMM3
            mulsd XMM1,XMM3
            subsd XMM0,XMM1
            pxor XMM1,XMM1
            subsd XMM0,XMM2
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_437904
.L_437853:

            movapd XMM1,XMM2
            addsd XMM1,XMM2
            mulsd XMM1,XMM2
            subsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_437c28]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_437c40]
            ucomisd XMM5,XMM0
            ja .L_4378e0

            mulsd XMM3,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            call .L_449db0

            movapd XMM3,XMM0
            mov RDI,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM3,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM2,XMM4
            movsd QWORD PTR [RSP],XMM3
            movapd XMM0,XMM2
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP]
            add RSP,40
.L_4378cd:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4378e0:

            mov RDI,RBP
            mov ESI,4294967282
            call .L_415fe0

            movsd XMM1,QWORD PTR [RIP+.L_437c10]
            add RSP,40
            pop RBX
            movapd XMM3,XMM1
            pop RBP
            movapd XMM0,XMM3
            ret 
.L_437904:

            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_437853
.L_43793c:

            nop
            nop
            nop
            nop
.L_437940:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_43794b:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+32]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RSP+40]
            mov RDI,RBP
            mulsd XMM3,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RIP+.L_437c30]
            mulsd XMM1,XMM4
            movsd XMM3,QWORD PTR [RSP+40]
            addsd XMM1,QWORD PTR [RIP+.L_437c20]
            divsd XMM0,XMM1
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_4379fe
.L_4379d6:

            movsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM1,XMM2
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM1,QWORD PTR [RSP]
            add RSP,48
.L_4379ed:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            pop R12
            mulsd XMM0,XMM4
            mulsd XMM0,XMM3
            ret 
.L_4379fe:

            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_4379d6
.L_437a29:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437a30:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_437a43:

            call .L_403c70

            test RAX,RAX
            je .L_437b26

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_437bd3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_437ae0

            mov RAX,QWORD PTR [RIP+.L_437c38]
            mov QWORD PTR [RBP],RAX
.L_437a7a:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_437bd9]
            call .L_4043f0

            test EAX,EAX
            jne .L_437b38

            movsd XMM1,QWORD PTR [RIP+.L_437c20]
            movapd XMM0,XMM1
.L_437aa1:

            divsd XMM0,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RIP+.L_437940]
            movsd QWORD PTR [RBP+16],XMM1
            movsd QWORD PTR [RBP+8],XMM0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4377f0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            add RSP,24
.L_437ad5:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437ae0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_437bd6]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_437c40]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            jb .L_437a7a
.L_437b19:

            mov ESI,4294967269
            mov RDI,RBX
            call .L_415fe0
.L_437b26:

            add RSP,24
.L_437b2a:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4377b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437b38:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_437bdc]
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMMWORD PTR [RIP+.L_437c40]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP+8],XMM0
            jae .L_437b19

            movsd XMM1,QWORD PTR [RIP+.L_437c20]
            divsd XMM1,XMM0
            jmp .L_437aa1
.L_437b7e:

            nop
            nop
.L_437b80:

            test RDI,RDI
            je .L_437b90

            jmp .L_437a30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437b90:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_437bbe

            lea RDX,QWORD PTR [RIP+.L_4377e0]
            lea RCX,QWORD PTR [RIP+.L_437be0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_437bbe:

            add RSP,8
            ret 
.L_437bc3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437bd0:

            xor EAX,EAX
            ret 
.L_437bd3:
          .string "tW"
.L_437bd6:
          .string "dW"
.L_437bd9:
          .string "tM"
.L_437bdc:
          .string "dM"
          .byte 0x90
.L_437be0:
          .string "Hammer & Eckert-Greifendorff\n\tMisc Sph, \n\tW= M="
.L_437c10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_437c18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_437c20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_437c28:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_437c30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_437c38:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_437c40:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437c50:

            test RDI,RDI
            je .L_437c78

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_437c6e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_437c6e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437c78:

            xor EAX,EAX
            ret 
.L_437c7b:

            nop
            nop
            nop
            nop
            nop
.L_437c80:

            jmp .L_437c50
.L_437c82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437c90:

            movq XMM3,QWORD PTR [RIP+.L_437ff0]
            movapd XMM2,XMM1
            andpd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_437fd0]
            andpd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_437fd8]
            ucomisd XMM3,XMM2
            jbe .L_437ce8

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_437cd8

            movsd XMM1,QWORD PTR [RIP+.L_437fc0]
            pxor XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437cd8:

            movsd XMM1,QWORD PTR [RIP+.L_437fc8]
            pxor XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437ce8:

            push RBP
.L_437ce9:

            push RBX
            mov RBX,RDI
            sub RSP,56
.L_437cf1:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_437fe0]
            movapd XMM6,XMM0
            movsd XMM5,QWORD PTR [RBP]
            movapd XMM7,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            addsd XMM6,XMM4
            movsd XMM1,QWORD PTR [RBP+8]
            subsd XMM7,XMM0
            movsd QWORD PTR [RSP],XMM5
            divsd XMM6,XMM7
            movapd XMM0,XMM6
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBP+16]
            divsd XMM4,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM4
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+40]
            addsd XMM2,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_437fe8]
            addsd XMM2,QWORD PTR [RSP+32]
            ucomisd XMM3,XMM2
            ja .L_437dd0

            addsd XMM0,XMM0
            subsd XMM1,XMM4
            divsd XMM0,XMM2
            divsd XMM1,XMM2
.L_437dc3:

            add RSP,56
.L_437dc7:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437dd0:

            mov ESI,4294967276
            mov RDI,RBX
            call .L_415fe0

            pxor XMM0,XMM0
            movapd XMM1,XMM0
            jmp .L_437dc3
.L_437de7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437df0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_437e03:

            call .L_403c70

            test RAX,RAX
            je .L_437f1d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_437f83]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            pxor XMM0,XMM0
            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RSP]
            mov ESI,4294967269
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RBP+16],XMM1
            jae .L_437f15

            movsd XMM2,QWORD PTR [RIP+.L_437fe0]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_437f86]
            mov RDI,QWORD PTR [RBX]
            movapd XMM4,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM4,XMM1
            movapd XMM1,XMM4
            movsd QWORD PTR [RBP+16],XMM4
            mulsd XMM1,QWORD PTR [RIP+.L_437fe8]
            movsd QWORD PTR [RBP+8],XMM1
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            call sin@PLT

            movq XMM3,QWORD PTR [RIP+.L_437ff0]
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            andpd XMM1,XMM3
            subsd XMM1,XMM2
            andpd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_437fd8]
            ucomisd XMM3,XMM1
            ja .L_437f10

            movapd XMM1,XMM2
            subsd XMM1,XMM0
            addsd XMM0,XMM2
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBP+8]
            call pow@PLT

            lea RAX,QWORD PTR [RIP+.L_437c90]
            movsd QWORD PTR [RBP],XMM0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_437f02:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437f10:

            mov ESI,4294967274
.L_437f15:

            mov RDI,RBX
            call .L_415fe0
.L_437f1d:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_437c50
.L_437f2b:

            nop
            nop
            nop
            nop
            nop
.L_437f30:

            test RDI,RDI
            je .L_437f40

            jmp .L_437df0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437f40:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_437f6e

            lea RDX,QWORD PTR [RIP+.L_437c80]
            lea RCX,QWORD PTR [RIP+.L_437fa0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_437f6e:

            add RSP,8
            ret 
.L_437f73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437f80:

            xor EAX,EAX
            ret 
.L_437f83:
          .string "dW"
.L_437f86:
          .string "rlat_1"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437fa0:
          .string "Lagrange\n\tMisc Sph, no inv.\n\tW="
.L_437fc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_437fc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_437fd0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_437fd8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_437fe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_437fe8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_437ff0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438000:

            test RDI,RDI
            je .L_438010

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438010:

            ret 
.L_438012:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438020:

            sub RSP,56
.L_438024:

            movsd XMM4,QWORD PTR [RIP+.L_438190]
            movsd QWORD PTR [RSP+32],XMM0
            mulsd XMM4,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call cos@PLT

            sqrtsd XMM7,XMM0
            pxor XMM2,XMM2
            movsd QWORD PTR [RSP+16],XMM7
            movsd XMM1,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM0
            ja .L_4380ca
.L_438065:

            movsd XMM0,QWORD PTR [RIP+.L_438190]
            movsd QWORD PTR [RSP+40],XMM1
            mulsd XMM0,XMM1
            call cos@PLT

            movsd XMM6,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM6,QWORD PTR [RIP+.L_438198]
            movapd XMM0,XMM6
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            addsd XMM2,QWORD PTR [RIP+.L_4381a0]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM0
            divsd XMM1,XMM3
            mulsd XMM2,QWORD PTR [RSP+8]
            add RSP,56
.L_4380c5:

            movapd XMM0,XMM2
            ret 
.L_4380ca:

            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_438065
.L_4380d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4380e0:

            test RDI,RDI
            je .L_438100

            lea RAX,QWORD PTR [RIP+.L_438020]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_438100:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43812e

            lea RDX,QWORD PTR [RIP+.L_438000]
            lea RCX,QWORD PTR [RIP+.L_438170]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43812e:

            add RSP,8
            ret 
.L_438133:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438140:

            lea RDX,QWORD PTR [RIP+.L_438020]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43815a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438160:

            xor EAX,EAX
            ret 
.L_438163:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438170:
          .string "Larrivee\n\tMisc Sph, no inv."
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438190:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_438198:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xc5
          .byte 0x3f
.L_4381a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4381b0:

            movapd XMM5,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_438330]
            movapd XMM4,XMM1
            mulsd XMM5,XMM0
            mulsd XMM4,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_438340]
            mulsd XMM3,XMM5
            mulsd XMM2,XMM4
            subsd XMM3,QWORD PTR [RIP+.L_438338]
            addsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_438350]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM4
            addsd XMM2,QWORD PTR [RIP+.L_438358]
            addsd XMM3,QWORD PTR [RIP+.L_438348]
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_438360]
            mulsd XMM3,XMM5
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_438370]
            mulsd XMM3,XMM4
            mulsd XMM2,XMM5
            addsd XMM3,QWORD PTR [RIP+.L_438378]
            addsd XMM2,QWORD PTR [RIP+.L_438368]
            mulsd XMM3,XMM4
            addsd XMM2,XMM3
            mulsd XMM1,XMM2
            ret 
.L_438245:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438250:

            test RDI,RDI
            je .L_438270

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438270:

            ret 
.L_438272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438280:

            test RDI,RDI
            je .L_4382a0

            lea RAX,QWORD PTR [RIP+.L_4381b0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4382a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4382ce

            lea RDX,QWORD PTR [RIP+.L_438250]
            lea RCX,QWORD PTR [RIP+.L_438310]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4382ce:

            add RSP,8
            ret 
.L_4382d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4382e0:

            lea RDX,QWORD PTR [RIP+.L_4381b0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4382fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438300:

            xor EAX,EAX
            ret 
.L_438303:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438310:
          .string "Laskowski\n\tMisc Sph, no inv."
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438330:
          .byte 0xca
          .byte 0x67
          .byte 0x1e
          .byte 0x65
          .byte 0x69
          .byte 0x4c
          .byte 0x8d
          .byte 0xbf
.L_438338:
          .byte 0x7b
          .byte 0x6a
          .byte 0xf5
          .byte 0xd5
          .byte 0x55
          .byte 0x81
          .byte 0xbe
          .byte 0x3f
.L_438340:
          .byte 0xd8
          .byte 0x9f
          .byte 0x1f
          .byte 0xa1
          .byte 0xc1
          .byte 0x1
          .byte 0xac
          .byte 0xbf
.L_438348:
          .byte 0xa3
          .byte 0x5a
          .byte 0x44
          .byte 0x14
          .byte 0x93
          .byte 0x37
          .byte 0xef
          .byte 0x3f
.L_438350:
          .byte 0xea
          .byte 0x4
          .byte 0x34
          .byte 0x11
          .byte 0x36
          .byte 0x3c
          .byte 0x9d
          .byte 0xbf
.L_438358:
          .byte 0x8b
          .byte 0x28
          .byte 0x37
          .byte 0x9b
          .byte 0xd8
          .byte 0x8d
          .byte 0xb4
          .byte 0x3f
.L_438360:
          .byte 0x37
          .byte 0xad
          .byte 0x6f
          .byte 0xbb
          .byte 0x2b
          .byte 0x16
          .byte 0x2a
          .byte 0x3f
.L_438368:
          .byte 0x8f
          .byte 0xaa
          .byte 0x26
          .byte 0x88
          .byte 0xba
          .byte 0xf
          .byte 0xf0
          .byte 0x3f
.L_438370:
          .byte 0x5e
          .byte 0x5
          .byte 0x42
          .byte 0xfc
          .byte 0xd
          .byte 0x24
          .byte 0xa9
          .byte 0xbf
.L_438378:
          .byte 0x78
          .byte 0x2
          .byte 0xab
          .byte 0x34
          .byte 0x73
          .byte 0x92
          .byte 0xb9
          .byte 0x3f
.L_438380:

            test RDI,RDI
            je .L_438390

            jmp .L_403ca0

            nop
            nop
            nop
            nop
            nop
            nop
.L_438390:

            ret 
.L_438392:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4383a0:

            movq XMM7,QWORD PTR [RIP+.L_4387f0]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_438810]
            movapd XMM4,XMM1
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_438430

            movapd XMM8,XMM1
            movapd XMM5,XMM0
            andpd XMM8,XMM7
            ucomisd XMM6,XMM8
            ja .L_438420

            sub RSP,120
.L_4383db:

            movsd XMM9,QWORD PTR [RIP+.L_438818]
            movsd QWORD PTR [RSP],XMM0
            subsd XMM2,XMM9
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_438440

            subsd XMM8,XMM9
            pxor XMM5,XMM5
            andpd XMM7,XMM8
            ucomisd XMM6,XMM7
            jbe .L_4384a0
.L_438410:

            movapd XMM0,XMM5
            movapd XMM1,XMM4
            add RSP,120
.L_43841c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438420:

            pxor XMM4,XMM4
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438430:

            pxor XMM5,XMM5
            movapd XMM1,XMM4
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438440:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM5,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+24],XMM5
            call sin@PLT

            movsd XMM9,QWORD PTR [RSP+16]
            movapd XMM4,XMM0
            movsd XMM5,QWORD PTR [RSP]
            add RSP,120

            mulsd XMM4,XMM9
            movapd XMM0,XMM5
            movapd XMM1,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4384a0:

            movsd QWORD PTR [RSP+24],XMM0
            lea RDI,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+96]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM9
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM11,XMM9
            movapd XMM2,XMM3
            movapd XMM4,XMM1
            divsd XMM11,XMM3
            divsd XMM4,XMM9
            divsd XMM2,XMM9
            movsd XMM12,QWORD PTR [RIP+.L_438820]
            movsd XMM7,QWORD PTR [RSP+104]
            movapd XMM10,XMM12
            movsd XMM13,QWORD PTR [RIP+.L_438828]
            subsd XMM11,XMM2
            movapd XMM2,XMM4
            movapd XMM6,XMM7
            mulsd XMM2,XMM4
            subsd XMM6,XMM4
            movsd XMM0,QWORD PTR [RSP+96]
            movapd XMM8,XMM11
            movapd XMM4,XMM7
            mulsd XMM0,XMM0
            subsd XMM10,XMM2
            divsd XMM10,XMM6
            movapd XMM6,XMM11
            mulsd XMM6,XMM7
            mulsd XMM11,XMM13
            divsd XMM8,XMM10
            divsd XMM6,XMM10
            mulsd XMM8,XMM8
            mulsd XMM13,XMM10
            subsd XMM6,XMM11
            movapd XMM11,XMM12
            movapd XMM2,XMM8
            divsd XMM4,XMM8
            addsd XMM2,XMM12
            divsd XMM6,XMM2
            addsd XMM13,XMM4
            movapd XMM4,XMM13
            divsd XMM0,XMM2
            movapd XMM2,XMM6
            divsd XMM11,XMM8
            mulsd XMM2,XMM6
            pxor XMM13,XMM13
            addsd XMM11,XMM12
            addsd XMM0,XMM2
            divsd XMM4,XMM11
            ucomisd XMM13,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43868b
.L_4385c4:

            ucomisd XMM13,XMM3
            ja .L_438630
.L_4385cb:

            movapd XMM5,XMM2
            movapd XMM2,XMM7
            movapd XMM0,XMM4
            addsd XMM5,XMM6
            mulsd XMM2,XMM7
            mulsd XMM7,XMM10
            mulsd XMM0,XMM4
            mulsd XMM5,XMM9
            divsd XMM2,XMM8
            addsd XMM2,XMM7
            subsd XMM2,XMM12
            divsd XMM2,XMM11
            subsd XMM0,XMM2
            ucomisd XMM13,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43863a
.L_43860f:

            ucomisd XMM13,XMM1
            ja .L_43861e

            xorpd XMM2,XMMWORD PTR [RIP+.L_438800]
.L_43861e:

            addsd XMM4,XMM2
            mulsd XMM4,XMM9
            jmp .L_438410
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438630:

            xorpd XMM2,XMMWORD PTR [RIP+.L_438800]
            jmp .L_4385cb
.L_43863a:

            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM9
            movsd QWORD PTR [RSP+24],XMM13
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM13,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43860f
.L_43868b:

            movsd QWORD PTR [RSP+88],XMM1
            movsd QWORD PTR [RSP+80],XMM3
            movsd QWORD PTR [RSP+72],XMM12
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM13
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM10
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM11
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM12,QWORD PTR [RSP+72]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM13,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM10,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM11,QWORD PTR [RSP]
            jmp .L_4385c4
.L_43872f:

            nop
.L_438730:

            test RDI,RDI
            je .L_438750

            lea RAX,QWORD PTR [RIP+.L_4383a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_438750:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43877e

            lea RDX,QWORD PTR [RIP+.L_438380]
            lea RCX,QWORD PTR [RIP+.L_4387c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43877e:

            add RSP,8
            ret 
.L_438783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438790:

            lea RDX,QWORD PTR [RIP+.L_4383a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4387aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4387b0:

            xor EAX,EAX
            ret 
.L_4387b3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4387c0:
          .string "Nicolosi Globular\n\tMisc Sph, no inv."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4387f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438800:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438810:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_438818:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_438820:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_438828:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 230975
.L_438830:

            test RDI,RDI
            je .L_438868

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_438860

            push RBX
            mov RDX,QWORD PTR [RAX]
            mov RBX,RDI
            test RDX,RDX
            je .L_438854

            mov RDI,RDX
            call QWORD PTR [RDX+112]

            mov RAX,QWORD PTR [RBX+32]
.L_438854:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_438860:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438868:

            xor EAX,EAX
            ret 
.L_43886b:

            nop
            nop
            nop
            nop
            nop
.L_438870:

            jmp .L_438830
.L_438872:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438880:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_43888d:

            mov RBP,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RBP]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            ucomisd XMM0,QWORD PTR [RIP+.L_439478]
            movapd XMM2,XMM0
            ja .L_438951

            lea R12,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,R12
            subsd XMM2,QWORD PTR [RBP+8]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RSP+40]
            xorpd XMM1,XMMWORD PTR [RIP+.L_4394a0]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_449db0

            movsd XMM4,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
.L_438951:

            add RSP,56
.L_438955:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_438960:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43896d:

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR [RBX]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            ucomisd XMM0,QWORD PTR [RIP+.L_439478]
            movapd XMM2,XMM0
            movapd XMM3,XMM1
            ja .L_438a67

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM4,QWORD PTR [RSP+48]
            mov RDI,R12
            subsd XMM2,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movapd XMM0,XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RBX+24]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+24],XMM6
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            call .L_449c40

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM4
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM4
            mulsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBX+16]
            subsd XMM1,XMM2
            call .L_449db0

            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM2,XMM0
.L_438a67:

            add RSP,72
.L_438a6b:

            movapd XMM0,XMM2
            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_438a7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438a80:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_438a8b:

            lea RBX,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RBP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM3
            call .L_449db0

            addsd XMM0,QWORD PTR [RBX+8]
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP+16],XMM0
            xorpd XMM2,XMMWORD PTR [RIP+.L_4394a0]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            call .L_449c40

            mov RDI,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            mov RAX,QWORD PTR [RDI+40]
            add RSP,48
.L_438b46:

            pop RBX
            pop RBP
            pop R12
            jmp RAX
.L_438b4c:

            nop
            nop
            nop
            nop
.L_438b50:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_438b5b:

            lea RBX,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            mov RSI,R12
            mov RDI,RBX
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM6,QWORD PTR [RSP+32]
            mov RDI,RBX
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RBX+24]
            movapd XMM5,XMM3
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            mulsd XMM5,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+16],XMM2
            mulsd XMM4,XMM2
            mulsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM4
            addsd XMM1,XMM5
            call .L_449db0

            addsd XMM0,QWORD PTR [RBX+8]
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM3,QWORD PTR [RBX+24]
            mulsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            call .L_449c40

            mov RDI,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movapd XMM0,XMM4
            mov RAX,QWORD PTR [RDI+40]
            add RSP,48
.L_438c41:

            pop RBX
            pop RBP
            pop R12
            jmp RAX
.L_438c47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438c50:

            push R15
            push R14
            mov ESI,32
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,120
.L_438c6b:

            call .L_403c70

            test RAX,RAX
            je .L_438fa3

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439333]
            mov QWORD PTR [RBX+32],RAX
            mov R13,RAX
            call .L_4043f0

            test RAX,RAX
            mov R14,RAX
            mov ESI,4294967270
            je .L_438f9b

            lea RDI,QWORD PTR [RIP+.L_43933b]
            mov RSI,RAX
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_438fc0

            mov RSI,QWORD PTR [RIP+.L_65dbe0]
            test RSI,RSI
            je .L_438fc0

            lea RBP,QWORD PTR [RIP+.L_65dbf8]
            xor R12D,R12D
            jmp .L_438cf5
          .byte 0x66
          .byte 0x90
.L_438ce0:

            add RBP,24
            mov RSI,QWORD PTR [RBP-24]
            add R12D,1
            test RSI,RSI
            je .L_438fc0
.L_438cf5:

            mov RDI,R14
            call strcmp@PLT

            test EAX,EAX
            jne .L_438ce0

            movsxd R12,R12D
            lea RAX,QWORD PTR [RIP+.L_65dbe0]
            xor EDI,EDI
            lea RDX,QWORD PTR [R12+R12*2]
            lea RBP,QWORD PTR [RAX+RDX*8]
            call QWORD PTR [RBP+8]

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            je .L_438fc0

            mov RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+176],0
            mov RDI,RAX
            movsd XMM0,QWORD PTR [RBX+128]
            mov QWORD PTR [RAX+16],RDX
            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX],RDX
            mov EDX,DWORD PTR [RBX+304]
            mov DWORD PTR [RAX+304],EDX
            mov EDX,DWORD PTR [RBX+308]
            movsd QWORD PTR [RAX+128],XMM0
            movsd XMM0,QWORD PTR [RBX+144]
            mov QWORD PTR [RAX+176],0
            movsd QWORD PTR [RAX+144],XMM0
            mov DWORD PTR [RAX+308],EDX
            movsd XMM0,QWORD PTR [RBX+328]
            movsd QWORD PTR [RAX+328],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RAX+336],XMM0
            movsd XMM0,QWORD PTR [RBX+344]
            movsd QWORD PTR [RAX+344],XMM0
            movsd XMM0,QWORD PTR [RBX+352]
            movsd QWORD PTR [RAX+352],XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mov QWORD PTR [RAX+168],0
            movsd QWORD PTR [RAX+360],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439480]
            movsd QWORD PTR [RAX+224],XMM0
            movsd QWORD PTR [RAX+216],XMM0
            call QWORD PTR [RBP+8]

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            je .L_438fa3

            cmp QWORD PTR [RAX+40],0
            je .L_438fa3

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439343]
            call .L_4043f0

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            jne .L_438fd0

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439367]
            call .L_4043f0

            test EAX,EAX
            mov RSI,QWORD PTR [RBX+16]
            je .L_438f00

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439370]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439379]
            mov QWORD PTR [R13+8],RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movq XMM2,QWORD PTR [RIP+.L_4394b0]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_439490]
.L_438e8d:

            andpd XMM2,XMM0
            mov RAX,QWORD PTR [R13]
            ucomisd XMM2,XMM3
            mov RBP,QWORD PTR [RAX+48]
            jbe .L_439100

            lea RDI,QWORD PTR [RSP+104]
            lea RSI,QWORD PTR [RSP+96]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RIP+.L_438b50]
            movsd XMM1,QWORD PTR [RSP+96]
            test RBP,RBP
            movsd QWORD PTR [R13+24],XMM0
            movsd QWORD PTR [R13+16],XMM1
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_438960]
            cmovne RBP,RAX
            mov QWORD PTR [RBX+48],RBP
.L_438ee7:

            add RSP,120
.L_438eeb:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438f00:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439382]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43938b]
            mov RBP,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_439394]
            mov RDI,QWORD PTR [RBX]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM4
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_43939d]
            mov R12,RAX
            mov RDI,QWORD PTR [RBX]
            call .L_4043f0

            movsd XMM4,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            movq XMM2,QWORD PTR [RIP+.L_4394b0]
            movsd XMM3,QWORD PTR [RIP+.L_439490]
            subsd XMM0,XMM1
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jb .L_439128
.L_438f96:

            mov ESI,4294967264
.L_438f9b:

            mov RDI,RBX
            call .L_415fe0
.L_438fa3:

            add RSP,120
.L_438fa7:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_438830
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438fc0:

            mov ESI,4294967259
            mov RDI,RBX
            call .L_415fe0

            jmp .L_438fa3
          .byte 0x90
.L_438fd0:

            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43934c]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439355]
            mov QWORD PTR [RSP+16],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43935e]
            mov QWORD PTR [RSP+8],RAX
            call .L_4043f0

            movsd XMM0,QWORD PTR [RSP+8]
            mov R14,RAX
            movq XMM2,QWORD PTR [RIP+.L_4394b0]
            mov ESI,4294967263
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_439490]
            andpd XMM1,XMM2
            subsd XMM1,QWORD PTR [RIP+.L_439488]
            andpd XMM1,XMM2
            ucomisd XMM3,XMM1
            jae .L_438f9b

            lea RBP,QWORD PTR [RSP+104]
            lea R12,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+56],XMM3
            movaps XMMWORD PTR [RSP+32],XMM2
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+48],R14
            movsd XMM7,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM7
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+104]
            movq XMM5,QWORD PTR [RIP+.L_4394a0]
            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RSP+96]
            movsd QWORD PTR [RSP+48],XMM4
            xorpd XMM1,XMM5
            xorpd XMM0,XMM5
            mulsd XMM1,QWORD PTR [RSP+24]
            call .L_449db0

            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RBX]
            movsd QWORD PTR [R13+8],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            call .L_449c40

            movapd XMM2,XMMWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+56]
            jmp .L_438e8d
          .byte 0x90
.L_439100:

            lea RAX,QWORD PTR [RIP+.L_438a80]
            test RBP,RBP
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_438880]
            cmovne RBP,RAX
            mov QWORD PTR [RBX+48],RBP
            jmp .L_438ee7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439128:

            movapd XMM0,XMM4
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_438f96

            movsd XMM5,QWORD PTR [RIP+.L_439488]
            subsd XMM0,XMM5
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_438f96

            movapd XMM0,XMM1
            andpd XMM0,XMM2
            subsd XMM0,XMM5
            andpd XMM0,XMM2
            ucomisd XMM3,XMM0
            jae .L_438f96

            lea R14,QWORD PTR [RSP+104]
            lea R15,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+8],RBP
            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,R15
            mov RDI,R14
            movsd QWORD PTR [RSP+88],XMM3
            movaps XMMWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+48],XMM1
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+96]
            mov RSI,R15
            mov QWORD PTR [RSP+16],R12
            mov RDI,R14
            movsd QWORD PTR [RSP+8],XMM6
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+80],XMM6
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            mov RSI,R15
            movsd XMM7,QWORD PTR [RSP+104]
            mov RDI,R14
            movsd XMM5,QWORD PTR [RSP+96]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            mov RSI,R15
            movsd XMM5,QWORD PTR [RSP+96]
            mov RDI,R14
            movapd XMM0,XMM4
            movsd XMM1,QWORD PTR [RSP+104]
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+48],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+96]
            mulsd XMM5,QWORD PTR [RSP+104]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+80]
            movapd XMM0,XMM1
            mulsd XMM7,XMM5
            mulsd XMM6,XMM0
            mulsd XMM5,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+8]
            movapd XMM1,XMM7
            subsd XMM1,XMM6
            subsd XMM0,XMM5
            call atan2@PLT

            mov QWORD PTR [RSP+8],RBP
            movsd QWORD PTR [R13+8],XMM0
            movsd XMM6,QWORD PTR [RSP+8]
            subsd XMM0,XMM6
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            xorpd XMM1,XMMWORD PTR [RIP+.L_4394a0]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+88]
            movapd XMM2,XMMWORD PTR [RSP+64]
            jmp .L_438e8d
.L_4392d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4392e0:

            test RDI,RDI
            je .L_4392f0

            jmp .L_438c50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4392f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43931e

            lea RDX,QWORD PTR [RIP+.L_438870]
            lea RCX,QWORD PTR [RIP+.L_4393c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43931e:

            add RSP,8
            ret 
.L_439323:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439330:

            xor EAX,EAX
            ret 
.L_439333:
          .string "so_proj"
.L_43933b:
          .string "ob_tran"
.L_439343:
          .string "to_alpha"
.L_43934c:
          .string "ro_lon_c"
.L_439355:
          .string "ro_lat_c"
.L_43935e:
          .string "ro_alpha"
.L_439367:
          .string "to_lat_p"
.L_439370:
          .string "ro_lon_p"
.L_439379:
          .string "ro_lat_p"
.L_439382:
          .string "ro_lon_1"
.L_43938b:
          .string "ro_lat_1"
.L_439394:
          .string "ro_lon_2"
.L_43939d:
          .string "ro_lat_2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4393c0:
          .string "General Oblique Transformation\n\tMisc Sph\n\to_proj= plus parameters for projection\n\to_lat_p= o_lon_p= (new pole) or\n\to_alpha= o_lon_c= o_lat_c= or\n\to_lon_1= o_lat_1= o_lon_2= o_lat_2="
          .byte 0x66
          .byte 0x90
.L_439478:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_439480:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_439488:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_439490:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4394a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4394b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4394c0:

            test RDI,RDI
            je .L_4394e8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4394de

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4394de:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4394e8:

            xor EAX,EAX
            ret 
.L_4394eb:

            nop
            nop
            nop
            nop
            nop
.L_4394f0:

            jmp .L_4394c0
.L_4394f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439500:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_43950d:

            mov RBX,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+32],XMM0
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RBX+48]
            movsd XMM5,QWORD PTR [RBX+64]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call .L_449c40

            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RBX+32]
            movsd XMM6,QWORD PTR [RBX+56]
            mulsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RBP]
            mulsd XMM3,QWORD PTR [RBX+40]
            mulsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RSP+48]
            call .L_449c40

            movsd XMM1,QWORD PTR [RSP+8]
            mov RSI,R13
            mov RDI,R12
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM1,QWORD PTR [RBX+24]
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            addsd XMM2,XMM2
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            divsd XMM2,QWORD PTR [RSP+48]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call .L_449db0

            subsd XMM0,QWORD PTR [RBX]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+56]
            movapd XMM1,XMM2
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+24],XMM5
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_439af0]
            mov RDI,QWORD PTR [RBP]
            call .L_449c40

            addsd XMM0,XMM0
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+48]
            movapd XMM6,XMM3
            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM6,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM2,QWORD PTR [RBX+80]
            mulsd XMM0,XMM6
            addsd XMM0,XMM2
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBX+80]
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            subsd XMM1,XMM2
            call .L_449db0

            movsd XMM4,QWORD PTR [RSP+8]
            add RSP,72
.L_4396f1:

            pop RBX
            movapd XMM1,XMM4
            pop RBP
            pop R12
            pop R13
            ret 
.L_4396fc:

            nop
            nop
            nop
            nop
.L_439700:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_43970d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM6,QWORD PTR [RSP+48]
            mov RDI,RBP
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RBX+80]
            movapd XMM1,XMM3
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM5,XMM2
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+32],XMM2
            mulsd XMM4,XMM2
            mulsd XMM5,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            subsd XMM1,XMM5
            call .L_449db0

            addsd XMM0,QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [R13]
            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM2,QWORD PTR [RBX+72]
            mulsd XMM3,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM7
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            addsd XMM0,XMM3
            call .L_449ce0

            mulsd XMM0,QWORD PTR [RIP+.L_439af0]
            call sin@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [R13]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM4,XMM0
            movapd XMM0,XMM4
            call .L_449c40

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM7,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            mulsd XMM7,QWORD PTR [RBX+24]
            movapd XMM0,XMM7
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [R13]
            mulsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call .L_449c40

            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM0,QWORD PTR [RBX+32]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+56]
            mulsd XMM2,QWORD PTR [RBX+24]
            mulsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM1
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+48]
            add RSP,72
.L_4398df:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4398e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4398f0:

            push RBP
            push RBX
            mov ESI,88
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_439903:

            call .L_403c70

            test RAX,RAX
            je .L_439a4d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439ab3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            pxor XMM4,XMM4
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM4,XMM0
            movsd QWORD PTR [RBP+16],XMM0
            jae .L_439a40

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439ab6]
            call .L_4043f0

            pxor XMM5,XMM5
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RBP+8],XMM0
            jae .L_439a40

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_439ab9]
            call .L_4043f0

            movsd XMM0,QWORD PTR [RBX+336]
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBP],RAX
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_439700]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+72],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439af8]
            movsd QWORD PTR [RBP+80],XMM1
            movapd XMM1,XMM0
            divsd XMM0,XMM3
            movsd XMM2,QWORD PTR [RBP+16]
            divsd XMM1,XMM2
            movsd QWORD PTR [RBP+40],XMM0
            addsd XMM0,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439af0]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBP+48],XMM1
            mulsd XMM2,XMM0
            addsd XMM1,XMM1
            movsd QWORD PTR [RBP+56],XMM3
            movsd QWORD PTR [RBP+32],XMM1
            movsd QWORD PTR [RBP+64],XMM2
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_439500]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            add RSP,40
.L_439a37:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439a40:

            mov ESI,4294967257
            mov RDI,RBX
            call .L_415fe0
.L_439a4d:

            add RSP,40
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4394c0
.L_439a5b:

            nop
            nop
            nop
            nop
            nop
.L_439a60:

            test RDI,RDI
            je .L_439a70

            jmp .L_4398f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439a70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_439a9e

            lea RDX,QWORD PTR [RIP+.L_4394f0]
            lea RCX,QWORD PTR [RIP+.L_439ac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_439a9e:

            add RSP,8
            ret 
.L_439aa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439ab0:

            xor EAX,EAX
            ret 
.L_439ab3:
          .string "dn"
.L_439ab6:
          .string "dm"
.L_439ab9:
          .string "rtheta"
.L_439ac0:
          .string "Oblated Equal Area\n\tMisc Sph\n\tn= m= theta="
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439af0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_439af8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_439b00:

            test RDI,RDI
            je .L_439b28

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_439b1e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_439b1e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439b28:

            xor EAX,EAX
            ret 
.L_439b2b:

            nop
            nop
            nop
            nop
            nop
.L_439b30:

            jmp .L_439b00
.L_439b32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439b40:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_439b4d:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            mov RBX,QWORD PTR [RBP+32]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+48]
            mov RSI,R13
            movsd XMM7,QWORD PTR [RSP+56]
            mov RDI,R12
            addsd XMM6,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM7
            movapd XMM0,XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX]
            mulsd XMM1,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,XMM1
            call .L_449ce0

            movsd XMM6,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd QWORD PTR [RSP+24],XMM0
            mov RDI,R12
            subsd XMM6,QWORD PTR [RBX+72]
            movapd XMM0,XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM1,QWORD PTR [RBX+24]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+32],XMM6
            mulsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,XMM1
            call .L_449ce0

            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM5,XMM0
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM4,XMM4
            mulsd XMM5,XMM0
            movapd XMM7,XMM1
            movsd XMM2,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+24],XMM1
            subsd XMM4,XMM5
            mulsd XMM7,XMM4
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM7,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43a340]
            subsd XMM7,XMM4
            movapd XMM4,XMM7
            movapd XMM0,XMM2
            mulsd XMM4,XMM7
            mulsd XMM0,XMM5
            subsd XMM0,XMM4
            call .L_449d70

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            mulsd XMM3,QWORD PTR [RBX+40]
            mulsd XMM6,QWORD PTR [RBX+48]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RBX+32]
            mulsd XMM1,XMM0
            pxor XMM0,XMM0
            subsd XMM3,XMM6
            movsd XMM7,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            subsd XMM2,XMM3
            ucomisd XMM0,XMM2
            jbe .L_439cd5

            xorpd XMM1,XMMWORD PTR [RIP+.L_43a360]
.L_439cd5:

            add RSP,72
.L_439cd9:

            movapd XMM0,XMM7
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_439ce4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439cf0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM7,XMM1
            sub RSP,72
.L_439d01:

            mov RBX,QWORD PTR [RDI+32]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            addsd XMM1,QWORD PTR [RBX+80]
            call hypot@PLT

            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            subsd XMM3,QWORD PTR [RBX+80]
            movsd XMM0,QWORD PTR [RSP+16]
            movapd XMM1,XMM3
            call hypot@PLT

            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM2
            subsd XMM2,XMM0
            addsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            mulsd XMM1,QWORD PTR [RBX+88]
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movq XMM4,QWORD PTR [RIP+.L_43a360]
            mulsd XMM3,QWORD PTR [RBX+88]
            xorpd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+32]
            movaps XMMWORD PTR [RSP],XMM4
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RBX+96]
            mov RDI,QWORD PTR [RBP]
            call .L_449ce0

            pxor XMM1,XMM1
            movapd XMM4,XMMWORD PTR [RSP]
            ucomisd XMM1,QWORD PTR [RSP+16]
            jbe .L_439dd2

            xorpd XMM0,XMM4
.L_439dd2:

            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            mov RDI,R12
            mov RSI,R13
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+48]
            mov RDI,R12
            subsd XMM0,QWORD PTR [RBX+120]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP],XMM6
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RBX+104]
            movsd XMM2,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RBX+112]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+24],XMM7
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            call .L_449c40

            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RBX+112]
            movsd XMM2,QWORD PTR [RSP+40]
            mulsd XMM1,XMM5
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM5
            mulsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RBX+104]
            subsd XMM1,XMM2
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            addsd XMM0,QWORD PTR [RBX+128]
            add RSP,72
.L_439ea0:

            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            ret 
.L_439eab:

            nop
            nop
            nop
            nop
            nop
.L_439eb0:

            push R13
            push R12
            mov ESI,136
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            sub RSP,88
.L_439ec7:

            call .L_403c70

            test RAX,RAX
            je .L_439f9e

            mov RSI,QWORD PTR [RBP+16]
            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_43a2e3]
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+8],RAX
            lea RDX,QWORD PTR [RIP+.L_43a2ea]
            mov RDI,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM2
            call .L_4043f0

            mov RSI,QWORD PTR [RBP+16]
            lea RDX,QWORD PTR [RIP+.L_43a2f1]
            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RAX
            call .L_4043f0

            mov RSI,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+16],RAX
            lea RDX,QWORD PTR [RIP+.L_43a2f8]
            mov RDI,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM0
            call .L_4043f0

            movsd XMM0,QWORD PTR [RSP+24]
            mov EDX,0
            movsd XMM2,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            movsd XMM1,QWORD PTR [RSP+16]
            ucomisd XMM2,XMM0
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_439fb0

            movsd XMM7,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM1
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            je .L_439fb0

            mov ESI,4294967271
            mov RDI,RBP
            call .L_415fe0
.L_439f9e:

            add RSP,88
.L_439fa2:

            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_439b00
.L_439fb0:

            lea R12,QWORD PTR [RSP+72]
            lea R13,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+56],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            mov RSI,R13
            movsd XMM5,QWORD PTR [RSP+64]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+64]
            addsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_43a348]
            call .L_449e30

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+328],XMM0
            subsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            call .L_449e30

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+72],XMM6
            movapd XMM6,XMM3
            movsd XMM5,QWORD PTR [RSP+48]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RBX],XMM3
            mulsd XMM3,XMM5
            movsd QWORD PTR [RBX+24],XMM4
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBX+16],XMM5
            movsd QWORD PTR [RBX+40],XMM6
            movapd XMM6,XMM5
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX+8],XMM2
            mulsd XMM6,XMM2
            mulsd XMM3,XMM0
            mulsd XMM2,XMM4
            movsd QWORD PTR [RBX+32],XMM1
            movsd QWORD PTR [RBX+48],XMM6
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            call .L_449ce0

            movsd QWORD PTR [RBX+64],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_43a348]
            mov RSI,R13
            movsd XMM2,QWORD PTR [RBX+16]
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RBX+80],XMM0
            movsd XMM0,QWORD PTR [RBX+72]
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM3,XMM2
            mulsd XMM1,QWORD PTR [RBX+24]
            mulsd XMM2,QWORD PTR [RSP+72]
            mulsd XMM3,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            subsd XMM1,XMM3
            call atan2@PLT

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RBP]
            movsd XMM5,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            mulsd XMM0,QWORD PTR [RBX]
            call .L_449c40

            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+72]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBX+112],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+104],XMM1
            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RBX+8]
            call atan2@PLT

            subsd XMM0,QWORD PTR [RBX+80]
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_43a348]
            mulsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+120],XMM0
            mulsd XMM4,QWORD PTR [RBX+72]
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+72],XMM4
            call atan2@PLT

            movsd XMM1,QWORD PTR [RIP+.L_43a350]
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+80]
            subsd XMM0,QWORD PTR [RBX+72]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RBX+128],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+88],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM5,QWORD PTR [RIP+.L_43a348]
            lea RAX,QWORD PTR [RIP+.L_439cf0]
            movsd XMM1,QWORD PTR [RBX+64]
            divsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43a348]
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+96],XMM5
            mulsd XMM1,XMM1
            movsd QWORD PTR [RBX+56],XMM0
            movsd QWORD PTR [RBX+64],XMM1
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_439b40]
            mov QWORD PTR [RBP+176],0
            mov QWORD PTR [RBP+40],RAX
            add RSP,88
.L_43a285:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_43a28f:

            nop
.L_43a290:

            test RDI,RDI
            je .L_43a2a0

            jmp .L_439eb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a2a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43a2ce

            lea RDX,QWORD PTR [RIP+.L_439b30]
            lea RCX,QWORD PTR [RIP+.L_43a300]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43a2ce:

            add RSP,8
            ret 
.L_43a2d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a2e0:

            xor EAX,EAX
            ret 
.L_43a2e3:
          .string "rlat_1"
.L_43a2ea:

            jb .L_43a358

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            pop RDI
            xor DWORD PTR [RAX],EAX
.L_43a2f1:
          .string "rlat_2"
.L_43a2f8:

            jb .L_43a366

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            pop RDI
            xor AL,BYTE PTR [RAX]
            nop
.L_43a300:
          .string "Two Point Equidistant\n\tMisc Sph\n\tlat_1= lon_1= lat_2= lon_2="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a340:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_43a348:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43a350:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43a358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a360:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43a366:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43a370:

            test RDI,RDI
            je .L_43a380

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43a380:

            ret 
.L_43a382:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a390:

            movapd XMM2,XMM1
            sub RSP,104
.L_43a398:

            movq XMM5,QWORD PTR [RIP+.L_43ae00]
            divsd XMM2,QWORD PTR [RIP+.L_43ad78]
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_43ad80]
            movsd XMM4,QWORD PTR [RIP+.L_43ad60]
            andpd XMM2,XMM5
            movapd XMM0,XMM2
            subsd XMM0,XMM3
            ucomisd XMM0,XMM4
            ja .L_43a5d0

            movapd XMM7,XMM4
            movapd XMM0,XMM6
            minsd XMM7,XMM2
            movapd XMM2,XMM7
            movapd XMM7,XMM1
            andpd XMM7,XMM5
            ucomisd XMM3,XMM7
            jb .L_43a400

            pxor XMM3,XMM3
.L_43a3f4:

            movapd XMM1,XMM3
.L_43a3f8:

            add RSP,104
.L_43a3fc:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a400:

            andpd XMM0,XMM5
            ucomisd XMM3,XMM0
            jae .L_43a580

            movapd XMM0,XMM2
            subsd XMM0,XMM4
            andpd XMM0,XMM5
            ucomisd XMM3,XMM0
            ja .L_43a580

            movsd XMM10,QWORD PTR [RIP+.L_43ad70]
            movapd XMM0,XMM6
            movapd XMM3,XMM4
            movapd XMM7,XMM10
            divsd XMM0,XMM10
            divsd XMM7,XMM6
            subsd XMM7,XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            andpd XMM7,XMM5
            subsd XMM3,XMM0
            mulsd XMM7,QWORD PTR [RIP+.L_43ad88]
            movapd XMM0,XMM3
            sqrtsd XMM8,XMM3
            pxor XMM3,XMM3
            movapd XMM11,XMM7
            ucomisd XMM3,XMM0
            mulsd XMM11,XMM7
            ja .L_43a6ce
.L_43a480:

            movapd XMM0,XMM2
            movsd XMM9,QWORD PTR [RIP+.L_43ad90]
            movapd XMM12,XMM11
            addsd XMM0,XMM8
            divsd XMM9,XMM2
            subsd XMM0,XMM4
            divsd XMM8,XMM0
            subsd XMM9,XMM4
            mulsd XMM9,XMM8
            movapd XMM0,XMM8
            mulsd XMM8,XMM8
            mulsd XMM9,XMM9
            subsd XMM0,XMM9
            addsd XMM12,XMM9
            subsd XMM8,XMM9
            mulsd XMM11,XMM0
            movapd XMM2,XMM0
            mulsd XMM8,XMM12
            mulsd XMM2,XMM7
            mulsd XMM11,XMM0
            subsd XMM11,XMM8
            ucomisd XMM3,XMM11
            sqrtsd XMM8,XMM11
            ja .L_43a63a
.L_43a4f9:

            addsd XMM2,XMM8
            ucomisd XMM3,XMM6
            mulsd XMM2,XMM10
            divsd XMM2,XMM12
            ja .L_43a5f0
.L_43a512:

            movapd XMM0,XMM2
            addsd XMM7,XMM7
            divsd XMM0,XMM10
            andpd XMM0,XMM5
            movapd XMM5,XMM7
            addsd XMM5,XMM0
            mulsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43ad98]
            subsd XMM4,XMM5
            ucomisd XMM0,XMM4
            ja .L_43a600

            ucomisd XMM3,XMM4
            movapd XMM0,XMM2
            ja .L_43a3f4

            sqrtsd XMM5,XMM4
            ja .L_43a75d
.L_43a55d:

            ucomisd XMM3,XMM1
            ja .L_43a62d

            movapd XMM1,XMM10
.L_43a56c:

            mulsd XMM5,XMM1
            movapd XMM0,XMM2
            movapd XMM3,XMM5
            jmp .L_43a3f4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a580:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call asin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_43ad88]
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_43ad70]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            jbe .L_43a3f4

            xorpd XMM3,XMMWORD PTR [RIP+.L_43ae10]
            jmp .L_43a3f4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a5d0:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,104
.L_43a5e2:

            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a5f0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_43ae10]
            jmp .L_43a512
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43a600:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM0,XMM2
            movapd XMM1,XMM4
            jmp .L_43a3f8
.L_43a62d:

            movsd XMM1,QWORD PTR [RIP+.L_43ad68]
            jmp .L_43a56c
.L_43a63a:

            movapd XMM0,XMM11
            movsd QWORD PTR [RSP+72],XMM3
            movaps XMMWORD PTR [RSP+80],XMM5
            mov QWORD PTR [RSP+48],RDI
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM12
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+8],XMM8
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM12,QWORD PTR [RSP+24]
            movsd XMM7,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43a4f9
.L_43a6ce:

            movaps XMMWORD PTR [RSP+80],XMM5
            mov QWORD PTR [RSP+48],RDI
            movsd QWORD PTR [RSP+72],XMM3
            movsd QWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM11
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+48]
            movsd XMM10,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM11,QWORD PTR [RSP+16]
            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43a480
.L_43a75d:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM10,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43a55d
.L_43a7a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a7b0:

            movapd XMM6,XMM0
            sub RSP,168
.L_43a7bb:

            movapd XMM7,XMM0
            mulsd XMM6,XMM0
            movapd XMM0,XMM1
            movq XMM5,QWORD PTR [RIP+.L_43ae00]
            movsd XMM9,QWORD PTR [RIP+.L_43ad80]
            andpd XMM0,XMM5
            ucomisd XMM9,XMM0
            jbe .L_43a850

            andpd XMM5,XMM7
            pxor XMM0,XMM0
            ucomisd XMM9,XMM5
            jb .L_43a800
.L_43a7f2:

            pxor XMM1,XMM1
            add RSP,168
.L_43a7fd:

            ret 
          .byte 0x66
          .byte 0x90
.L_43a800:

            movsd XMM1,QWORD PTR [RIP+.L_43adb0]
            movapd XMM2,XMM6
            addsd XMM1,XMM6
            mulsd XMM2,XMM6
            subsd XMM6,QWORD PTR [RIP+.L_43adc0]
            mulsd XMM1,QWORD PTR [RIP+.L_43adb8]
            addsd XMM1,XMM2
            ucomisd XMM0,XMM1
            sqrtsd XMM2,XMM1
            ja .L_43ac59
.L_43a836:

            addsd XMM6,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_43ad88]
            mulsd XMM0,XMM6
            divsd XMM0,XMM7
            jmp .L_43a7f2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43a850:

            movsd XMM3,QWORD PTR [RIP+.L_43ad78]
            movsd XMM14,QWORD PTR [RIP+.L_43ad70]
            movapd XMM13,XMM1
            addsd XMM3,XMM0
            movapd XMM12,XMM6
            mulsd XMM13,XMM1
            movsd XMM10,QWORD PTR [RIP+.L_43ad68]
            movsd XMM2,QWORD PTR [RIP+.L_43adc0]
            mulsd XMM3,XMM14
            addsd XMM12,XMM13
            mulsd XMM10,XMM0
            movsd XMM15,QWORD PTR [RIP+.L_43add8]
            addsd XMM3,XMM13
            mulsd XMM0,XMM12
            movapd XMM8,XMM12
            addsd XMM2,XMM12
            movapd XMM4,XMM12
            mulsd XMM3,XMM14
            mulsd XMM4,XMM12
            mulsd XMM10,XMM2
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43add0]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM0,XMM13
            movapd XMM11,XMM10
            mulsd XMM3,QWORD PTR [RIP+.L_43adc8]
            subsd XMM8,XMM0
            mulsd XMM8,QWORD PTR [RIP+.L_43adc0]
            addsd XMM3,XMM4
            movapd XMM4,XMM1
            mulsd XMM4,XMM14
            divsd XMM11,XMM3
            addsd XMM8,XMM10
            divsd XMM8,XMM3
            mulsd XMM15,XMM8
            movapd XMM0,XMM15
            mulsd XMM0,XMM8
            subsd XMM11,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43ade0]
            mulsd XMM0,XMM11
            sqrtsd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM2
            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_43ab7c
.L_43a94c:

            mulsd XMM4,XMM4
            mulsd XMM10,XMM15
            movsd XMM0,QWORD PTR [RIP+.L_43ade8]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,XMM8
            subsd XMM4,XMM10
            addsd XMM2,XMM2
            mulsd XMM0,XMM8
            divsd XMM4,XMM3
            mulsd XMM8,XMM0
            mulsd XMM11,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_43ad60]
            addsd XMM4,XMM8
            mulsd XMM4,QWORD PTR [RIP+.L_43add0]
            divsd XMM4,XMM11
            movapd XMM3,XMM4
            andpd XMM3,XMM5
            movapd XMM8,XMM3
            subsd XMM8,XMM9
            ucomisd XMM0,XMM8
            jb .L_43aa68

            ucomisd XMM3,XMM0
            jbe .L_43aad8

            pxor XMM3,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_43ada8]
            ucomisd XMM4,XMM3
            ja .L_43a9df

            movsd XMM0,QWORD PTR [RIP+.L_43ada0]
.L_43a9df:

            mulsd XMM2,XMM0
            pxor XMM3,XMM3
            subsd XMM2,XMM15
            ucomisd XMM3,XMM1
            mulsd XMM2,XMM14
            jbe .L_43a9ff

            xorpd XMM2,XMMWORD PTR [RIP+.L_43ae10]
.L_43a9ff:

            andpd XMM5,XMM7
            pxor XMM0,XMM0
            ucomisd XMM9,XMM5
            jae .L_43aa55

            subsd XMM6,XMM13
            movsd XMM0,QWORD PTR [RIP+.L_43adb0]
            pxor XMM1,XMM1
            subsd XMM12,QWORD PTR [RIP+.L_43adc0]
            addsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RIP+.L_43adb8]
            addsd XMM0,QWORD PTR [RSP+16]
            ucomisd XMM1,XMM0
            jb .L_43aa88
.L_43aa40:

            movapd XMM0,XMM12
            addsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_43ad88]
            divsd XMM0,XMM7
.L_43aa55:

            movapd XMM1,XMM2
            add RSP,168
.L_43aa60:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43aa68:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,168
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43aa88:

            pxor XMM5,XMM5
            sqrtsd XMM1,XMM0
            ucomisd XMM5,XMM0
            jbe .L_43aa40

            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM12
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM12,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_43aa40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43aad8:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+96],XMM9
            movaps XMMWORD PTR [RSP+80],XMM5
            movsd QWORD PTR [RSP+72],XMM14
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+40],XMM12
            movsd QWORD PTR [RSP+32],XMM13
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+8],XMM15
            call acos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_43add8]
            addsd XMM0,QWORD PTR [RIP+.L_43adf0]
            call cos@PLT

            movsd XMM15,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM13,QWORD PTR [RSP+32]
            movsd XMM12,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM14,QWORD PTR [RSP+72]
            movapd XMM5,XMMWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+96]
            jmp .L_43a9df
.L_43ab7c:

            movsd QWORD PTR [RSP+152],XMM9
            mov QWORD PTR [RSP+120],RDI
            movaps XMMWORD PTR [RSP+128],XMM5
            movsd QWORD PTR [RSP+144],XMM14
            movsd QWORD PTR [RSP+112],XMM1
            movsd QWORD PTR [RSP+104],XMM7
            movsd QWORD PTR [RSP+96],XMM11
            movsd QWORD PTR [RSP+80],XMM8
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+64],XMM3
            movsd QWORD PTR [RSP+56],XMM10
            movsd QWORD PTR [RSP+48],XMM12
            movsd QWORD PTR [RSP+40],XMM13
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM15
            call sqrt@PLT

            movsd XMM9,QWORD PTR [RSP+152]
            movapd XMM5,XMMWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+120]
            movsd XMM14,QWORD PTR [RSP+144]
            movsd XMM1,QWORD PTR [RSP+112]
            movsd XMM7,QWORD PTR [RSP+104]
            movsd XMM11,QWORD PTR [RSP+96]
            movsd XMM8,QWORD PTR [RSP+80]
            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM3,QWORD PTR [RSP+64]
            movsd XMM10,QWORD PTR [RSP+56]
            movsd XMM12,QWORD PTR [RSP+48]
            movsd XMM13,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM15,QWORD PTR [RSP+24]
            jmp .L_43a94c
.L_43ac59:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM6
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_43a836
.L_43ac8b:

            nop
            nop
            nop
            nop
            nop
.L_43ac90:

            test RDI,RDI
            je .L_43acc0

            lea RAX,QWORD PTR [RIP+.L_43a7b0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43a390]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43acc0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43acee

            lea RDX,QWORD PTR [RIP+.L_43a370]
            lea RCX,QWORD PTR [RIP+.L_43ad40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43acee:

            add RSP,8
            ret 
.L_43acf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad00:

            lea RDX,QWORD PTR [RIP+.L_43a7b0]
            lea RCX,QWORD PTR [RIP+.L_43a390]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43ad25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ad30:

            xor EAX,EAX
            ret 
.L_43ad33:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ad40:
          .string "van der Grinten (I)\n\tMisc Sph"
          .byte 0x66
          .byte 0x90
.L_43ad60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43ad68:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_43ad70:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_43ad78:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43ad80:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_43ad88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43ad90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_43ad98:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0xbd
.L_43ada0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43ada8:
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdf
          .byte 0xbf
.L_43adb0:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x13
          .byte 0x40
.L_43adb8:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x33
          .byte 0x40
.L_43adc0:
          .byte 0xde
          .byte 0x45
          .byte 0xbe
          .byte 0xc9
          .byte 0x3c
          .byte 0xbd
          .byte 0x23
          .byte 0x40
.L_43adc8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_43add0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_43add8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_43ade0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0xbf
.L_43ade8:
          .byte 0x68
          .byte 0x2f
          .byte 0xa1
          .byte 0xbd
          .byte 0x84
          .byte 0xf6
          .byte 0xb2
          .byte 0x3f
.L_43adf0:

            jae .L_43ae20
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0x10
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ae00:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ae10:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43ae20:

            test RDI,RDI
            je .L_43ae48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43ae3e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43ae3e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ae48:

            xor EAX,EAX
            ret 
.L_43ae4b:

            nop
            nop
            nop
            nop
            nop
.L_43ae50:

            jmp .L_43ae20
.L_43ae52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ae60:

            push RBX
            movapd XMM5,XMM0
            movapd XMM6,XMM1
            sub RSP,96
.L_43ae6d:

            pxor XMM10,XMM10
            movsd XMM0,QWORD PTR [RIP+.L_43b3c8]
            mov RBX,QWORD PTR [RDI+32]
            movsd XMM7,QWORD PTR [RIP+.L_43b3d0]
            mulsd XMM0,XMM1
            movapd XMM4,XMM7
            movq XMM3,QWORD PTR [RIP+.L_43b3f0]
            movapd XMM1,XMM0
            mulsd XMM0,XMM0
            andpd XMM1,XMM3
            subsd XMM4,XMM0
            movapd XMM0,XMM4
            pxor XMM4,XMM4
            ucomisd XMM4,XMM0
            jbe .L_43b028
.L_43aeb8:

            movapd XMM0,XMM5
            movsd XMM9,QWORD PTR [RIP+.L_43b3d8]
            andpd XMM0,XMM3
            ucomisd XMM9,XMM0
            jbe .L_43af00

            ucomisd XMM4,XMM6
            ja .L_43b090

            mulsd XMM1,QWORD PTR [RIP+.L_43b3e0]
.L_43aee2:

            movapd XMM0,XMM10
            pxor XMM3,XMM3
            addsd XMM0,XMM7
            divsd XMM1,XMM0
.L_43aef3:

            add RSP,96
.L_43aef7:

            movapd XMM0,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43af00:

            movsd XMM8,QWORD PTR [RIP+.L_43b3e0]
            mov EAX,DWORD PTR [RBX]
            movapd XMM0,XMM5
            movapd XMM2,XMM8
            divsd XMM0,XMM8
            test EAX,EAX
            divsd XMM2,XMM5
            subsd XMM2,XMM0
            andpd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_43b3e8]
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            movapd XMM12,XMM3
            addsd XMM12,XMM7
            jne .L_43afe8

            ucomisd XMM4,XMM12
            sqrtsd XMM11,XMM12
            ja .L_43b0a5
.L_43af57:

            movapd XMM0,XMM11
            movapd XMM11,XMM10
            mulsd XMM3,XMM1
            mulsd XMM11,XMM2
            addsd XMM2,XMM2
            mulsd XMM0,XMM10
            mulsd XMM1,XMM3
            mulsd XMM10,XMM11
            addsd XMM1,XMM7
            subsd XMM0,XMM10
            divsd XMM0,XMM1
            addsd XMM2,XMM0
            movapd XMM3,XMM0
            mulsd XMM3,XMM8
            mulsd XMM2,XMM0
            subsd XMM7,XMM2
            movapd XMM0,XMM7
            addsd XMM0,XMM9
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43b13e
.L_43afb5:

            mulsd XMM1,XMM8
.L_43afba:

            ucomisd XMM4,XMM5
            jbe .L_43afc8

            xorpd XMM3,XMMWORD PTR [RIP+.L_43b400]
.L_43afc8:

            ucomisd XMM4,XMM6
            jbe .L_43aef3

            xorpd XMM1,XMMWORD PTR [RIP+.L_43b400]
            add RSP,96
.L_43afde:

            movapd XMM0,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43afe8:

            movapd XMM0,XMM10
            addsd XMM0,XMM7
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            subsd XMM12,XMM0
            ucomisd XMM4,XMM12
            sqrtsd XMM3,XMM12
            ja .L_43b190
.L_43b012:

            subsd XMM3,XMM2
            mulsd XMM1,XMM8
            mulsd XMM3,XMM8
            jmp .L_43afba
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b028:

            sqrtsd XMM10,XMM0
            jbe .L_43aeb8

            movsd QWORD PTR [RSP+56],XMM7
            movaps XMMWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM10
            call sqrt@PLT

            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM3,XMMWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM10,QWORD PTR [RSP]
            jmp .L_43aeb8
.L_43b090:

            xorpd XMM1,XMMWORD PTR [RIP+.L_43b400]
            mulsd XMM1,QWORD PTR [RIP+.L_43b3e0]
            jmp .L_43aee2
.L_43b0a5:

            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+88],XMM8
            movsd QWORD PTR [RSP+80],XMM9
            movsd QWORD PTR [RSP+72],XMM7
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM10
            movsd QWORD PTR [RSP],XMM11
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+88]
            movsd XMM9,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+8]
            movsd XMM11,QWORD PTR [RSP]
            jmp .L_43af57
.L_43b13e:

            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43afb5
.L_43b190:

            movapd XMM0,XMM12
            movsd QWORD PTR [RSP+56],XMM8
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM8,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_43b012
.L_43b1f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b200:

            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43b238

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX],0
            lea RAX,QWORD PTR [RIP+.L_43ae60]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b238:

            mov RDI,RBX
            pop RBX
            jmp .L_43ae20
.L_43b241:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b250:

            test RDI,RDI
            je .L_43b260

            jmp .L_43b200
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b260:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43b28e

            lea RDX,QWORD PTR [RIP+.L_43ae50]
            lea RCX,QWORD PTR [RIP+.L_43b3a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43b28e:

            add RSP,8
            ret 
.L_43b293:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b2a0:

            push RBX
            mov ESI,4
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43b2e0

            mov QWORD PTR [RBX+32],RAX
            mov DWORD PTR [RAX],1
            lea RAX,QWORD PTR [RIP+.L_43ae60]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b2e0:

            mov RDI,RBX
            pop RBX
            jmp .L_43ae20
.L_43b2e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b2f0:

            test RDI,RDI
            je .L_43b300

            jmp .L_43b2a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b300:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43b32e

            lea RDX,QWORD PTR [RIP+.L_43ae50]
            lea RCX,QWORD PTR [RIP+.L_43b360]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43b32e:

            add RSP,8
            ret 
.L_43b333:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b340:

            xor EAX,EAX
            ret 
.L_43b343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b350:

            xor EAX,EAX
            ret 
.L_43b353:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b360:
          .string "van der Grinten III\n\tMisc Sph, no inv."
          .zero 25
.L_43b3a0:

            jbe .L_43b403
          .byte 0x6e
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x47
          .byte 0x72
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x6e
          .byte 0x20
          .byte 0x49
          .byte 0x49
          .byte 0xa
          .byte 0x9
          .byte 0x4d
          .byte 0x69
          .byte 0x73
          .byte 0x63
          .byte 0x20
          .byte 0x53
.L_43b3ba:

            jo .L_43b424
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_43b3c8:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xe4
          .byte 0x3f
.L_43b3d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43b3d8:

            mov EBX,3755595709
            jl .L_43b3ba
          .byte 0x3d
.L_43b3e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_43b3e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43b3f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b400:
          .zero 3
.L_43b403:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43b410:

            test RDI,RDI
            je .L_43b420

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43b420:

            ret 
.L_43b422:
          .byte 0xf
          .byte 0x1f
.L_43b424:

            add BYTE PTR [RSI+46],SPL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b430:

            movq XMM2,QWORD PTR [RIP+.L_43b910]
            movapd XMM3,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_43b930]
            andpd XMM3,XMM2
            ucomisd XMM6,XMM3
            ja .L_43b480

            movapd XMM8,XMM0
            pxor XMM5,XMM5
            andpd XMM8,XMM2
            ucomisd XMM6,XMM8
            ja .L_43b479

            movsd XMM7,QWORD PTR [RIP+.L_43b938]
            subsd XMM3,XMM7
            andpd XMM3,XMM2
            ucomisd XMM6,XMM3
            jbe .L_43b490
.L_43b479:

            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0x90
.L_43b480:

            movapd XMM5,XMM0
            pxor XMM1,XMM1
            movapd XMM0,XMM5
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b490:

            sub RSP,136
.L_43b497:

            movapd XMM3,XMM0
            movapd XMM14,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_43b940]
            movapd XMM4,XMM1
            movsd XMM9,QWORD PTR [RIP+.L_43b948]
            mulsd XMM14,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_43b950]
            movsd XMM10,QWORD PTR [RIP+.L_43b968]
            mulsd XMM0,XMM3
            movapd XMM1,XMM14
            mulsd XMM14,XMM14
            movsd XMM13,QWORD PTR [RIP+.L_43b970]
            andpd XMM1,XMM2
            addsd XMM9,XMM14
            mulsd XMM9,XMM1
            subsd XMM6,XMM9
            movapd XMM9,XMM1
            subsd XMM9,XMM10
            mulsd XMM6,XMM1
            mulsd XMM9,XMM14
            subsd XMM6,QWORD PTR [RIP+.L_43b958]
            mulsd XMM6,QWORD PTR [RIP+.L_43b960]
            divsd XMM6,XMM9
            movapd XMM9,XMM0
            movapd XMM0,XMM10
            divsd XMM0,XMM9
            movapd XMM12,XMM6
            mulsd XMM12,XMM6
            addsd XMM0,XMM9
            pxor XMM9,XMM9
            mulsd XMM0,XMM0
            subsd XMM0,XMM13
            ucomisd XMM9,XMM0
            sqrtsd XMM11,XMM0
            ja .L_43b78f
.L_43b559:

            subsd XMM8,XMM7
            ucomisd XMM9,XMM8
            jbe .L_43b56e

            xorpd XMM11,XMMWORD PTR [RIP+.L_43b920]
.L_43b56e:

            movapd XMM5,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_43b978]
            movapd XMM15,XMM12
            addsd XMM5,XMM6
            movapd XMM8,XMM11
            mulsd XMM0,XMM6
            mulsd XMM15,XMM13
            mulsd XMM8,XMM11
            mulsd XMM5,XMM5
            addsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_44f380-80384]
            mulsd XMM0,XMM0
            mulsd XMM6,XMM1
            movapd XMM1,XMM12
            addsd XMM0,XMM15
            mulsd XMM1,XMM8
            addsd XMM6,XMM15
            mulsd XMM0,XMM14
            mulsd XMM6,XMM12
            addsd XMM12,XMM5
            addsd XMM6,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM14
            addsd XMM14,XMM1
            mulsd XMM0,XMM6
            subsd XMM14,XMM10
            mulsd XMM14,XMM5
            addsd XMM14,XMM0
            movapd XMM0,XMM12
            subsd XMM0,XMM10
            ucomisd XMM9,XMM14
            sqrtsd XMM1,XMM14
            mulsd XMM0,XMM11
            movapd XMM12,XMM0
            ja .L_43b6e6
.L_43b61b:

            addsd XMM1,XMM1
            mulsd XMM13,XMM5
            movapd XMM0,XMM1
            addsd XMM8,XMM13
            addsd XMM0,XMM12
            divsd XMM0,XMM8
            andpd XMM2,XMM0
            movapd XMM5,XMM0
            mulsd XMM0,XMM0
            mulsd XMM2,XMM11
            mulsd XMM5,XMM7
            addsd XMM2,XMM10
            subsd XMM2,XMM0
            ucomisd XMM9,XMM2
            sqrtsd XMM1,XMM2
            ja .L_43b68e
.L_43b660:

            ucomisd XMM9,XMM3
            mulsd XMM1,XMM7
            jbe .L_43b673

            xorpd XMM5,XMMWORD PTR [RIP+.L_43b920]
.L_43b673:

            ucomisd XMM9,XMM4
            jbe .L_43b682

            xorpd XMM1,XMMWORD PTR [RIP+.L_43b920]
.L_43b682:

            movapd XMM0,XMM5
            add RSP,136
.L_43b68d:

            ret 
.L_43b68e:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_43b660
.L_43b6e6:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM14
            movsd QWORD PTR [RSP+112],XMM4
            movsd QWORD PTR [RSP+104],XMM3
            movsd QWORD PTR [RSP+96],XMM10
            movsd QWORD PTR [RSP+80],XMM7
            movaps XMMWORD PTR [RSP+64],XMM2
            movsd QWORD PTR [RSP+56],XMM9
            movsd QWORD PTR [RSP+48],XMM13
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM8
            movsd QWORD PTR [RSP+24],XMM11
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+112]
            movsd XMM3,QWORD PTR [RSP+104]
            movsd XMM10,QWORD PTR [RSP+96]
            movsd XMM7,QWORD PTR [RSP+80]
            movapd XMM2,XMMWORD PTR [RSP+64]
            movsd XMM9,QWORD PTR [RSP+56]
            movsd XMM13,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM11,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM12,QWORD PTR [RSP+8]
            jmp .L_43b61b
.L_43b78f:

            movsd QWORD PTR [RSP+120],XMM4
            movsd QWORD PTR [RSP+112],XMM3
            movsd QWORD PTR [RSP+104],XMM10
            movsd QWORD PTR [RSP+96],XMM7
            movaps XMMWORD PTR [RSP+80],XMM2
            movsd QWORD PTR [RSP+64],XMM9
            movsd QWORD PTR [RSP+56],XMM13
            movsd QWORD PTR [RSP+48],XMM12
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM14
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM11
            movsd QWORD PTR [RSP+8],XMM8
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+120]
            movsd XMM3,QWORD PTR [RSP+112]
            movsd XMM10,QWORD PTR [RSP+104]
            movsd XMM7,QWORD PTR [RSP+96]
            movapd XMM2,XMMWORD PTR [RSP+80]
            movsd XMM9,QWORD PTR [RSP+64]
            movsd XMM13,QWORD PTR [RSP+56]
            movsd XMM12,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM14,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM11,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+8]
            jmp .L_43b559
.L_43b842:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b850:

            test RDI,RDI
            je .L_43b870

            lea RAX,QWORD PTR [RIP+.L_43b430]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_43b870:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43b89e

            lea RDX,QWORD PTR [RIP+.L_43b410]
            lea RCX,QWORD PTR [RIP+.L_43b8e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43b89e:

            add RSP,8
            ret 
.L_43b8a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b8b0:

            lea RDX,QWORD PTR [RIP+.L_43b430]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43b8ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43b8d0:

            xor EAX,EAX
            ret 
.L_43b8d3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43b8e0:
          .string "van der Grinten IV\n\tMisc Sph, no inv."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b910:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b920:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b930:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_43b938:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43b940:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xe4
          .byte 0x3f
.L_43b948:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_43b950:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x40
.L_43b958:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_43b960:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43b968:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43b970:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_43b978:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            or BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],CH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b990:

            jmp .L_403ca0
.L_43b995:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b9a0:

            sub RSP,56
.L_43b9a4:

            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_43bb70]
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call asin@PLT

            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM0
            lea RSI,QWORD PTR [RSP+32]
            divsd XMM3,QWORD PTR [RIP+.L_43bb78]
            movapd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RIP+.L_43bb80]
            movsd XMM3,QWORD PTR [RIP+.L_43bb88]
            mulsd XMM4,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM4,QWORD PTR [RSP+40]
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_43bb90]
            ucomisd XMM0,XMM2
            sqrtsd XMM5,XMM2
            ja .L_43ba5b
.L_43ba3e:

            divsd XMM3,XMM5
            mulsd XMM4,XMM3
            mulsd XMM3,QWORD PTR [RIP+.L_43bb98]
            add RSP,56
.L_43ba52:

            movapd XMM0,XMM4
            mulsd XMM1,XMM3
            ret 
.L_43ba5b:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_43ba3e
.L_43ba94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43baa0:

            test RDI,RDI
            je .L_43bad0

            lea RAX,QWORD PTR [RIP+.L_43b9a0]
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bad0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43bafe

            lea RDX,QWORD PTR [RIP+.L_43b990]
            lea RCX,QWORD PTR [RIP+.L_43bb50]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43bafe:

            add RSP,8
            ret 
.L_43bb03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bb10:

            lea RDX,QWORD PTR [RIP+.L_43b9a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43bb32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bb40:

            xor EAX,EAX
            ret 
.L_43bb43:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43bb50:
          .string "Wagner VII\n\tMisc Sph, no inv."
          .byte 0x66
          .byte 0x90
.L_43bb70:
          .byte 0x67
          .byte 0xd7
          .byte 0x2d
          .byte 0x30
          .byte 0x79
          .byte 0x0
          .byte 0xed
          .byte 0x3f
.L_43bb78:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            or BYTE PTR [RAX-40],AL
            cmpsd DWORD PTR [RSI],DWORD PTR [RDI]
            scasb AL,BYTE PTR [RDI]
            jl .L_43bbdc
# WARNING: found overlapping blocks at address 3b950
.set .L_43bb80, . - 6

          .byte 0x5
          .byte 0x40
.L_43bb88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43bb90:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 244135
.L_43bb98:

            or BYTE PTR [RDX+80],DH
            ret 56140
          .byte 0xf3
          .byte 0x3f
.L_43bba0:

            test RDI,RDI
            je .L_43bbd0

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43bbc7

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            call .L_403ca0

            mov RDI,QWORD PTR [RBX+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43bbc7:

            jmp .L_403ca0

            nop
            nop
            nop
            nop
.L_43bbd0:

            xor EAX,EAX
            ret 
.L_43bbd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
# WARNING: found overlapping blocks at address 3b9ac
.set .L_43bbdc, . - 4

.L_43bbe0:

            jmp .L_43bba0
.L_43bbe2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bbf0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_43bbfd:

            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            mov RBX,QWORD PTR [R13+32]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movapd XMM0,XMM3
            mov RDI,QWORD PTR [RBX]
            call .L_44c7f0

            subsd XMM0,QWORD PTR [RBX+24]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RBX+8]
            mov RSI,R12
            mulsd XMM4,QWORD PTR [RBX+16]
            mov RDI,RBP
            movapd XMM5,XMM3
            movsd XMM1,QWORD PTR [R13+360]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM1
            movapd XMM2,XMM0
            mulsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RBX+32]
            addsd XMM2,QWORD PTR [RIP+.L_43c080]
            mulsd XMM2,XMM0
            movapd XMM0,XMM4
            subsd XMM5,XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_43bcc6:

            pop RBX
            mulsd XMM0,XMM1
            pop RBP
            pop R12
            subsd XMM3,XMM2
            pop R13
            mulsd XMM1,XMM3
            ret 
.L_43bcd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bce0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_43bce9:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RDI+360]
            divsd XMM1,XMM3
            divsd XMM0,XMM3
            movapd XMM3,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd XMM1,QWORD PTR [RBX+8]
            subsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            call atan2@PLT

            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_43c088]
            call tan@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            mov EAX,10
            movsd XMM2,QWORD PTR [RSP+16]
            divsd XMM4,QWORD PTR [RBX+16]
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RBX+32]
            movapd XMM1,XMM3
            movsd XMM8,QWORD PTR [RIP+.L_43c090]
            movq XMM7,QWORD PTR [RIP+.L_43c0b0]
            subsd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM4
            movsd XMM6,QWORD PTR [RIP+.L_43c098]
            movsd XMM4,QWORD PTR [RIP+.L_43c080]
            movapd XMM0,XMM1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bd90:

            movapd XMM2,XMM0
            movapd XMM3,XMM0
            mulsd XMM2,XMM0
            mulsd XMM3,XMM8
            mulsd XMM2,XMM5
            mulsd XMM3,XMM0
            addsd XMM2,XMM4
            mulsd XMM3,XMM5
            mulsd XMM2,XMM0
            addsd XMM3,XMM4
            subsd XMM2,XMM1
            divsd XMM2,XMM3
            subsd XMM0,XMM2
            andpd XMM2,XMM7
            ucomisd XMM6,XMM2
            ja .L_43be00

            sub EAX,1
            jne .L_43bd90

            mov RDI,RBP
            mov ESI,4294967276
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
.L_43bdeb:

            pxor XMM1,XMM1
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43be00:

            addsd XMM0,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RBP+176]
            call .L_44c830

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,40
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_43be2e:

            nop
            nop
.L_43be30:

            push R12
            push RBP
            mov ESI,40
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,48
.L_43be45:

            call .L_403c70

            test RAX,RAX
            je .L_43bf9d

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_44c700

            test RAX,RAX
            mov R12,RAX
            mov QWORD PTR [RBP],RAX
            je .L_43bf9d

            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RBX+336]
            ucomisd XMM3,XMM5
            jp .L_43be8f

            je .L_43bf90
.L_43be8f:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            mov RDI,R12
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM0,XMM3
            movsd QWORD PTR [RBP+16],XMM1
            call .L_44c7f0

            movsd QWORD PTR [RBP+24],XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            movsd XMM2,QWORD PTR [RIP+.L_43c080]
            mulsd XMM0,XMM0
            movapd XMM6,XMM2
            movapd XMM3,XMM2
            mulsd XMM0,QWORD PTR [RBX+176]
            subsd XMM6,XMM0
            divsd XMM3,XMM6
            pxor XMM6,XMM6
            ucomisd XMM6,XMM3
            sqrtsd XMM4,XMM3
            ja .L_43bfad
.L_43bf0b:

            movapd XMM1,XMM4
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM2
            mulsd XMM1,QWORD PTR [RBX+216]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_43bce0]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM1,QWORD PTR [RIP+.L_43c0a0]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM7,XMM4
            divsd XMM7,XMM0
            mulsd XMM1,XMM4
            movsd QWORD PTR [RBP+8],XMM7
            divsd XMM2,XMM1
            movsd QWORD PTR [RBP+32],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43bbf0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,48
.L_43bf88:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_43bf90:

            mov ESI,4294967241
            mov RDI,RBX
            call .L_415fe0
.L_43bf9d:

            add RSP,48
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_43bba0
.L_43bfad:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_43bf0b
.L_43bfdf:

            nop
.L_43bfe0:

            test RDI,RDI
            je .L_43bff0

            jmp .L_43be30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43bff0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43c01e

            lea RDX,QWORD PTR [RIP+.L_43bbe0]
            lea RCX,QWORD PTR [RIP+.L_43c040]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43c01e:

            add RSP,8
            ret 
.L_43c023:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c030:

            xor EAX,EAX
            ret 
.L_43c033:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c040:
          .string "Lambert Conformal Conic Alternative\n\tConic, Sph&Ell\n\tlat_0="
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c080:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43c088:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43c090:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_43c098:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_43c0a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c0b0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c0c0:

            test RDI,RDI
            je .L_43c0e8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43c0de

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43c0de:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c0e8:

            xor EAX,EAX
            ret 
.L_43c0eb:

            nop
            nop
            nop
            nop
            nop
.L_43c0f0:

            jmp .L_43c0c0
.L_43c0f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c100:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,64
.L_43c10b:

            lea RBX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RDI,RBX
            mov RSI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RDI,RBX
            movsd XMM3,QWORD PTR [RSP+48]
            mov RSI,RBP
            movsd XMM7,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [R12+32]
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM3,XMM2
            mov EAX,DWORD PTR [RBX+64]
            movsd XMM6,QWORD PTR [RBX+40]
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM6
            movapd XMM1,XMM3
            movsd XMM3,QWORD PTR [RBX+32]
            test EAX,EAX
            subsd XMM3,XMM1
            jne .L_43c210

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            divsd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            call atan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM5,XMM0
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM1,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM5
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+16]
            add RSP,64
.L_43c1fe:

            mulsd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c210:

            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            call hypot@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            divsd XMM4,XMM3
            mulsd XMM5,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM5
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM5,QWORD PTR [RSP+8]
            add RSP,64
.L_43c27a:

            mulsd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM5
            pop RBP
            pop R12
            ret 
.L_43c287:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c290:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,72
.L_43c29d:

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [R13+32]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+16]
            call atan@PLT

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM5,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RSP+48]
            movapd XMM0,XMM5
            movsd XMM6,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+24],XMM5
            mulsd XMM0,XMM3
            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM6
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+40]
            divsd XMM5,XMM0
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM2,XMM5
            mulsd XMM4,XMM5
            mulsd XMM6,XMM5
            pxor XMM1,XMM1
            mulsd XMM2,XMM3
            mulsd XMM4,XMM3
            movapd XMM5,XMM6
            movsd XMM6,QWORD PTR [RBX+32]
            subsd XMM6,XMM2
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            mulsd XMM2,XMM6
            subsd XMM2,XMM0
            movapd XMM0,XMM5
            mulsd XMM0,XMM5
            mulsd XMM0,QWORD PTR [RBX+24]
            subsd XMM2,XMM0
            ucomisd XMM1,XMM2
            ja .L_43c4a0

            mov EAX,DWORD PTR [RBX+64]
            movsd XMM7,QWORD PTR [RBX+40]
            movsd QWORD PTR [RSP+8],XMM7
            test EAX,EAX
            jne .L_43c430

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM4
            divsd XMM0,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP+24]
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM1,XMM6
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+16],XMM2
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
.L_43c41f:

            add RSP,72
.L_43c423:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_43c430:

            movapd XMM1,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+32],XMM4
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM4,XMM0
            movapd XMM0,XMM4
            call atan@PLT

            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM5,XMM6
            mulsd XMM2,XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM2
            call atan@PLT

            movsd XMM1,QWORD PTR [RBX+40]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,XMM0
            jmp .L_43c41f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c4a0:

            mov RDI,R13
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,72
.L_43c4bd:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            pop R12
            pop R13
            ret 
.L_43c4c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c4d0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_43c4d9:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM7,QWORD PTR [RIP+.L_43cc10]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM5,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM3,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            subsd XMM3,XMM7
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            call tan@PLT

            mov EAX,DWORD PTR [RBX+64]
            movapd XMM6,XMM0
            movsd XMM4,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+16]
            test EAX,EAX
            movsd XMM5,QWORD PTR [RSP+24]
            je .L_43c640

            movapd XMM2,XMM4
            pxor XMM1,XMM1
            mulsd XMM2,XMM4
            movapd XMM0,XMM2
            addsd XMM0,XMM7
            ucomisd XMM1,XMM0
            sqrtsd XMM3,XMM0
            ja .L_43c6e7
.L_43c577:

            mulsd XMM6,XMM3
            movapd XMM3,XMM6
            mulsd XMM3,XMM6
.L_43c583:

            addsd XMM2,XMM3
            movapd XMM3,XMM5
            addsd XMM3,XMM5
            addsd XMM2,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_43cc18]
            movapd XMM0,XMM3
            mulsd XMM7,XMM2
            mulsd XMM0,XMM3
            mulsd XMM7,QWORD PTR [RBX+48]
            subsd XMM0,XMM7
            ucomisd XMM1,XMM0
            ja .L_43c670

            sqrtsd XMM1,XMM0
            ja .L_43c73c
.L_43c5c4:

            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+24],XMM4
            subsd XMM3,XMM1
            divsd XMM3,XMM2
            subsd XMM5,XMM3
            mulsd XMM6,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+8],XMM5
            movapd XMM0,XMM6
            call atan2@PLT

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM4,XMM3
            mulsd XMM0,XMM4
            divsd XMM0,XMM5
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP]
            add RSP,56
.L_43c62d:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c640:

            movapd XMM3,XMM0
            pxor XMM1,XMM1
            mulsd XMM3,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM7
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43c692
.L_43c65e:

            mulsd XMM4,XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM4
            jmp .L_43c583
          .byte 0x90
.L_43c670:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP]
            add RSP,56
.L_43c68b:

            pop RBX
            movapd XMM0,XMM1
            pop RBP
            ret 
.L_43c692:

            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43c65e
.L_43c6e7:

            movsd QWORD PTR [RSP+40],XMM7
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM7,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_43c577
.L_43c73c:

            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_43c5c4
.L_43c785:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c790:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_43c799:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM3,QWORD PTR [RBX+40]
            divsd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM1
            call tan@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM0
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            call tan@PLT

            mov EAX,DWORD PTR [RBX+64]
            test EAX,EAX
            je .L_43c900

            movsd XMM3,QWORD PTR [RIP+.L_43cc10]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM4,XMM0
.L_43c818:

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RBX+32]
            divsd XMM2,QWORD PTR [RBX+8]
            movapd XMM1,XMM5
            addsd XMM1,XMM5
            mulsd XMM2,XMM2
            movapd XMM0,XMM2
            movapd XMM2,XMM4
            mulsd XMM2,XMM4
            addsd XMM2,XMM0
            movapd XMM0,XMM1
            mulsd XMM0,XMM1
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43cc18]
            mulsd XMM3,XMM2
            mulsd XMM3,QWORD PTR [RBX+48]
            subsd XMM0,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM0
            ja .L_43c940

            sqrtsd XMM3,XMM0
            ja .L_43c968
.L_43c87d:

            subsd XMM1,XMM3
            addsd XMM2,XMM2
            divsd XMM1,XMM2
            mulsd XMM4,XMM1
            subsd XMM5,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM1,XMM5
            call atan2@PLT

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+24]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM1
            divsd XMM0,XMM5
            call atan@PLT

            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+24]
            call atan@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            add RSP,56
.L_43c8f1:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c900:

            movsd XMM3,QWORD PTR [RIP+.L_43cc10]
            movapd XMM1,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call hypot@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_43c818
          .byte 0x66
          .byte 0x90
.L_43c940:

            mov RDI,RBP
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,56
.L_43c95d:

            pop RBX
            movapd XMM0,XMM3
            movapd XMM1,XMM3
            pop RBP
            ret 
.L_43c968:

            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            jmp .L_43c87d
.L_43c9a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c9b0:

            push RBP
            push RBX
            mov ESI,72
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_43c9c3:

            call .L_403c70

            test RAX,RAX
            je .L_43ca60

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43cbc3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov ESI,4294967266
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            jae .L_43ca58

            ucomisd XMM1,QWORD PTR [RBX+336]
            jp .L_43ca70

            jne .L_43ca70

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43cbc6]
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_43ca80

            cmp BYTE PTR [RAX+1],0
            jne .L_43ca53

            movzx EAX,BYTE PTR [RAX]
            lea EDX,DWORD PTR [RAX-120]
            cmp DL,1
            jbe .L_43caf8
.L_43ca53:

            mov ESI,4294967247
.L_43ca58:

            mov RDI,RBX
            call .L_415fe0
.L_43ca60:

            add RSP,24
.L_43ca64:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43c0c0
          .byte 0x66
          .byte 0x90
.L_43ca70:

            mov ESI,4294967250
            mov RDI,RBX
            call .L_415fe0

            jmp .L_43ca60
          .byte 0x90
.L_43ca80:

            mov DWORD PTR [RBP+64],0
.L_43ca87:

            movsd XMM0,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RIP+.L_43cc10]
            divsd XMM0,QWORD PTR [RBX+128]
            ucomisd XMM1,QWORD PTR [RBX+176]
            movsd QWORD PTR [RBP+40],XMM0
            addsd XMM0,XMM2
            movsd QWORD PTR [RBP+32],XMM0
            mulsd XMM0,XMM0
            subsd XMM0,XMM2
            movsd QWORD PTR [RBP+48],XMM0
            jp .L_43cb08

            jne .L_43cb08

            lea RAX,QWORD PTR [RIP+.L_43c4d0]
            movsd QWORD PTR [RBP+24],XMM2
            movsd QWORD PTR [RBP+16],XMM2
            movsd QWORD PTR [RBP+8],XMM2
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43c100]
            mov QWORD PTR [RBX+40],RAX
.L_43cae8:

            add RSP,24
.L_43caec:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43caf8:

            cmp AL,120
            sete AL
            movzx EAX,AL
            mov DWORD PTR [RBP+64],EAX
            jmp .L_43ca87
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cb08:

            movsd XMM0,QWORD PTR [RBX+216]
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43cb49
.L_43cb1a:

            movsd QWORD PTR [RBP+16],XMM0
            lea RAX,QWORD PTR [RIP+.L_43c790]
            movsd XMM0,QWORD PTR [RBX+224]
            movsd QWORD PTR [RBP+8],XMM2
            movsd QWORD PTR [RBP+24],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43c290]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_43cae8
.L_43cb49:

            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+216]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_43cb1a
.L_43cb64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cb70:

            test RDI,RDI
            je .L_43cb80

            jmp .L_43c9b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cb80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43cbae

            lea RDX,QWORD PTR [RIP+.L_43c0f0]
            lea RCX,QWORD PTR [RIP+.L_43cbe0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43cbae:

            add RSP,8
            ret 
.L_43cbb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cbc0:

            xor EAX,EAX
            ret 
.L_43cbc3:
          .string "dh"
.L_43cbc6:
          .string "ssweep"
# WARNING: found overlapping blocks at address 3c998
# WARNING: found overlapping blocks at address 3c99a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cbe0:
          .string "Geostationary Satellite View\n\tAzi, Sph&Ell\n\th="
          .byte 0x90
.L_43cc10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43cc18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_43cc20:

            test RDI,RDI
            je .L_43cc48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43cc3e

            push RBX
.L_43cc2f:

            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43cc3e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cc48:

            xor EAX,EAX
            ret 
.L_43cc4b:

            nop
            nop
            nop
            nop
            nop
.L_43cc50:

            jmp .L_43cc20
.L_43cc52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cc60:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov RBX,RDI
            mov R12,RDX
            sub RSP,48
.L_43cc71:

            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM9,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM8
            call sinh@PLT

            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP]
            call cosh@PLT

            movsd XMM9,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RBX+40]
            movsd XMM8,QWORD PTR [RSP+16]
            movapd XMM7,XMM9
            movsd XMM6,QWORD PTR [RIP+.L_43dc40]
            movsd XMM10,QWORD PTR [RSP+8]
            addsd XMM7,XMM9
            mulsd XMM6,XMM8
            movsd XMM4,QWORD PTR [RBX+40]
            pxor XMM5,XMM5
            pxor XMM3,XMM3
            mulsd XMM7,XMM0
            mulsd XMM6,XMM10
            pxor XMM11,XMM11
            jmp .L_43cd18
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cd10:

            movapd XMM3,XMM2
            movapd XMM4,XMM1
.L_43cd18:

            movapd XMM1,XMM7
            movapd XMM2,XMM6
            sub RAX,8
            mulsd XMM1,XMM4
            cmp RAX,RBX
            mulsd XMM2,XMM3
            subsd XMM1,XMM11
            movapd XMM11,XMM7
            mulsd XMM11,XMM3
            subsd XMM1,XMM2
            movapd XMM2,XMM6
            mulsd XMM2,XMM4
            addsd XMM1,QWORD PTR [RAX]
            subsd XMM2,XMM5
            movapd XMM5,XMM3
            addsd XMM2,XMM11
            movapd XMM11,XMM4
            jne .L_43cd10

            mulsd XMM0,XMM8
            mulsd XMM9,XMM10
            movapd XMM3,XMM0
            mulsd XMM0,XMM2
            movapd XMM4,XMM9
            mulsd XMM9,XMM1
            mulsd XMM3,XMM1
            mulsd XMM4,XMM2
            addsd XMM0,XMM9
            subsd XMM3,XMM4
            movsd QWORD PTR [RBP],XMM3
            movsd QWORD PTR [R12],XMM0
            movsd XMM0,QWORD PTR [RBP]
            add RSP,48
.L_43cda3:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_43cda8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43cdb0:

            push RBX
            movapd XMM5,XMM0
            addsd XMM0,XMM0
            mov RBX,RDI
            sub RSP,32

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM5
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RBX+40]
            movsd XMM0,QWORD PTR [RSP+24]
            addsd XMM4,XMM4
            movsd XMM2,QWORD PTR [RBX+40]
            pxor XMM3,XMM3
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_43ce04
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ce00:

            movapd XMM2,XMM1
.L_43ce04:

            movapd XMM1,XMM4
            sub RAX,8
            cmp RAX,RBX
            mulsd XMM1,XMM2
            subsd XMM1,XMM3
            movapd XMM3,XMM2
            addsd XMM1,QWORD PTR [RAX]
            jne .L_43ce00

            mulsd XMM0,XMM1
            add RSP,32

            pop RBX
            addsd XMM0,XMM5
            ret 
.L_43ce2f:

            nop
.L_43ce30:

            push R12
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,96
.L_43ce3c:

            mov RBX,QWORD PTR [RDI+32]
            movsd XMM4,QWORD PTR [RIP+.L_43dc50]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            movsd XMM3,QWORD PTR [RBX]
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_43df10]
            ucomisd XMM4,XMM0
            jae .L_43cea0

            movsd XMM1,QWORD PTR [RIP+.L_43dc48]
            movapd XMM2,XMM1
.L_43ce7e:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            movapd XMM0,XMM2
            jne .L_43cfb9

            add RSP,96
.L_43ce9a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_43cea0:

            subsd XMM1,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            lea RDI,QWORD PTR [RBX+112]
            movsd QWORD PTR [RSP+24],XMM2
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM1
            movapd XMM1,XMM2
            addsd XMM1,XMM2
            call .L_43cc60

            movsd XMM3,QWORD PTR [RSP+8]
            mov RSI,R12
            mov RDI,RBP
            addsd XMM0,XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+56]
            addsd XMM2,QWORD PTR [RSP+80]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP+16],XMM3
            movapd XMM0,XMM2
            call sinh@PLT

            call atan@PLT

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+56]
            mulsd XMM3,XMM4
            movsd QWORD PTR [RSP+40],XMM4
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM5
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+32],XMM3
            call atan2@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM5
            call hypot@PLT

            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM4
            call atan2@PLT

            lea RDI,QWORD PTR [RBX+16]
            call .L_43cdb0

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            jmp .L_43ce7e
.L_43cfb9:

            call __stack_chk_fail@PLT
.L_43cfbe:

            nop
            nop
.L_43cfc0:

            push R12
            push RBP
            push RBX
            sub RSP,112
.L_43cfc8:

            mov RBX,QWORD PTR [RDI+32]
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+64]
            movsd XMM0,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_43cdb0

            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+56]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+24],XMM4
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            call atan2@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM4
            call hypot@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM3
            call atan2@PLT

            call tan@PLT

            movapd XMM5,XMM0
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM3,QWORD PTR [RIP+.L_43dc58]
            movapd XMM1,XMM0
            andpd XMM5,XMMWORD PTR [RIP+.L_43df10]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call hypot@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+32]
            addsd XMM0,XMM3
            pxor XMM1,XMM1
            movapd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            addsd XMM2,XMM3
            mulsd XMM2,XMM5
            movapd XMM0,XMM2
            addsd XMM0,XMM3
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+88]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            ucomisd XMM0,XMM1
            jp .L_43d1e0

            jne .L_43d1e0
.L_43d130:

            ucomisd XMM1,XMM4
            jbe .L_43d13e

            xorpd XMM2,XMMWORD PTR [RIP+.L_43df20]
.L_43d13e:

            movapd XMM1,XMM2
            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            movsd XMM6,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBX+160]
            addsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM6
            addsd XMM0,XMM6
            call .L_43cc60

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_43dc50]
            addsd XMM2,QWORD PTR [RSP+80]
            movapd XMM3,XMM2
            andpd XMM3,XMMWORD PTR [RIP+.L_43df10]
            ucomisd XMM4,XMM3
            jb .L_43d1d0

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RBX]
            addsd XMM1,XMM0
            mulsd XMM1,XMM3
            mulsd XMM3,XMM2
            addsd XMM1,QWORD PTR [RBX+8]
            movapd XMM0,XMM3
.L_43d1b5:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43d222

            add RSP,112
.L_43d1c9:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_43d1d0:

            movsd XMM1,QWORD PTR [RIP+.L_43dc48]
            movapd XMM0,XMM1
            jmp .L_43d1b5
          .byte 0x66
          .byte 0x90
.L_43d1e0:

            movsd XMM0,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+96]
            mulsd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+16]
            divsd XMM2,XMM3
            jmp .L_43d130
.L_43d222:

            call __stack_chk_fail@PLT
.L_43d227:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d230:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM5,XMM5
            sub RSP,72
.L_43d23d:

            movsd XMM1,QWORD PTR [RDI+176]
            ucomisd XMM5,XMM1
            jae .L_43d878

            movsd XMM3,QWORD PTR [RIP+.L_43dc58]
            mov RBX,QWORD PTR [RDI+32]
            movapd XMM0,XMM3
            subsd XMM0,XMM1
            ucomisd XMM5,XMM0
            sqrtsd XMM2,XMM0
            ja .L_43d896
.L_43d271:

            addsd XMM2,XMM3
            movapd XMM0,XMM1
            movsd XMM10,QWORD PTR [RIP+.L_43dc80]
            lea RDI,QWORD PTR [RBX+64]
            movsd QWORD PTR [RSP+40],XMM5
            divsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43dc60]
            movapd XMM1,XMM2
            subsd XMM1,XMM0
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dc68]
            mulsd XMM1,XMM0
            movapd XMM6,XMM0
            movapd XMM8,XMM0
            mulsd XMM6,XMM0
            movapd XMM7,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dc70]
            mulsd XMM8,XMM6
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dc78]
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            mulsd XMM1,XMM0
            subsd XMM1,XMM10
            mulsd XMM1,XMM0
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+16],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dc88]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dc90]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_43dc98]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dca0]
            mulsd XMM1,XMM0
            addsd XMM1,XMM10
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43dcc0]
            mulsd XMM1,XMM0
            movsd QWORD PTR [RBX+64],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dca8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dcb0]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_43dcb8]
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dcc8]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+24],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dcd0]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dcd8]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_43dce0]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_43dce8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dcf0]
            mulsd XMM1,XMM6
            movsd QWORD PTR [RBX+72],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dcf8]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44f380-71296]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44f380-71288]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dd10]
            mulsd XMM1,XMM8
            movsd QWORD PTR [RBX+32],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dd18]
            mulsd XMM1,XMM0
            addsd XMM1,XMM2
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_43dd20]
            mulsd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_43dd28]
            mulsd XMM1,XMM8
            movsd QWORD PTR [RBX+80],XMM1
            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_43dd30]
            mulsd XMM1,XMM8
            mulsd XMM2,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_44f380-71168]
            movsd XMM9,QWORD PTR [RBP+360]
            mulsd XMM7,XMM1
            subsd XMM2,QWORD PTR [RIP+.L_43dd38]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_43dd40]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RBX+40],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43dd48]
            mulsd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_43dd50]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_43dd58]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RBX+88],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43dd60]
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_44f380-71192]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RBX+48],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43dd70]
            mulsd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_44f380-71176]
            mulsd XMM2,XMM7
            movsd QWORD PTR [RBX+96],XMM2
            movapd XMM2,XMM0
            mulsd XMM2,XMM7
            mulsd XMM4,XMM2
            movsd QWORD PTR [RBX+56],XMM4
            movsd XMM4,QWORD PTR [RIP+.L_44f380-71160]
            mulsd XMM4,XMM2
            movsd QWORD PTR [RBX+104],XMM4
            movsd XMM4,QWORD PTR [RIP+.L_43dd90]
            mulsd XMM4,XMM6
            addsd XMM4,QWORD PTR [RIP+.L_43dd98]
            mulsd XMM4,XMM6
            addsd XMM4,QWORD PTR [RIP+.L_43dda0]
            mulsd XMM4,XMM6
            addsd XMM4,XMM3
            addsd XMM3,XMM0
            divsd XMM9,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43dda8]
            mulsd XMM3,XMM0
            mulsd XMM4,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43ddc8]
            addsd XMM3,QWORD PTR [RIP+.L_43ddb0]
            movsd QWORD PTR [RBX],XMM4
            movsd QWORD PTR [RSP+8],XMM4
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43ddb8]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43ddc0]
            mulsd XMM3,XMM0
            addsd XMM3,XMM10
            mulsd XMM3,XMM0
            subsd XMM3,XMM9
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+112],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43ddd0]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43ddd8]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43dde0]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43dde8]
            mulsd XMM3,XMM0
            subsd XMM3,XMM10
            mulsd XMM3,XMM0
            addsd XMM3,XMM9
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+160],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43ddf0]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43ddf8]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de00]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de08]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de10]
            mulsd XMM3,XMM6
            movsd QWORD PTR [RBX+120],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43de18]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de20]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de28]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de30]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de38]
            mulsd XMM6,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43de40]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+168],XMM6
            addsd XMM3,QWORD PTR [RIP+.L_43de48]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de50]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de58]
            mulsd XMM3,XMM8
            movsd QWORD PTR [RBX+128],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43de60]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de68]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de70]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43de78]
            mulsd XMM8,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43de80]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RBX+176],XMM8
            addsd XMM3,QWORD PTR [RIP+.L_43de88]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43de90]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RBX+136],XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43de98]
            mulsd XMM3,XMM0
            subsd XMM3,QWORD PTR [RIP+.L_43dea0]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43dea8]
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBX+184],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43deb0]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_43dec0]
            subsd XMM1,QWORD PTR [RIP+.L_43deb8]
            mulsd XMM1,XMM7
            movsd QWORD PTR [RBX+144],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43dec8]
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43ded0]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43ded8]
            mulsd XMM1,XMM7
            movsd QWORD PTR [RBX+152],XMM0
            movsd XMM0,QWORD PTR [RBP+336]
            movsd QWORD PTR [RBX+192],XMM1
            movsd QWORD PTR [RBX+200],XMM2
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+32],XMM1
            call .L_43cdb0

            movsd XMM4,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+56]
            movapd XMM6,XMM0
            lea RSI,QWORD PTR [RSP+48]
            xorpd XMM4,XMMWORD PTR [RIP+.L_43df20]
            addsd XMM0,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+8],XMM4
            call sincos@PLT

            lea RDX,QWORD PTR [RBX+200]
            lea RAX,QWORD PTR [RBX+160]
            movsd XMM3,QWORD PTR [RSP+48]
            cmp RDX,RAX
            movsd XMM4,QWORD PTR [RSP+56]
            addsd XMM3,XMM3
            movsd XMM6,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            je .L_43d890

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            jmp .L_43d825
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d818:

            movapd XMM5,XMM2
            movsd XMM1,QWORD PTR [RDX-8]
            movapd XMM2,XMM0
.L_43d825:

            movapd XMM0,XMM3
            sub RDX,8
            cmp RDX,RAX
            mulsd XMM0,XMM2
            subsd XMM0,XMM5
            addsd XMM0,XMM1
            jne .L_43d818
.L_43d83e:

            mulsd XMM0,XMM4
            lea RAX,QWORD PTR [RIP+.L_43ce30]
            addsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX+8],XMM0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43cfc0]
            mov QWORD PTR [RBP+40],RAX
            add RSP,72
.L_43d86b:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d878:

            mov ESI,4294967262
            call .L_415fe0

            add RSP,72
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_43cc20
.L_43d890:

            movapd XMM0,XMM2
            jmp .L_43d83e
.L_43d896:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43d271
.L_43d8d0:

            push RBX
            mov ESI,208
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43d8f8

            mov QWORD PTR [RBX+32],RAX
            mov RDI,RBX
            pop RBX
            jmp .L_43d230
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43d8f8:

            mov RDI,RBX
            pop RBX
            jmp .L_43cc20
.L_43d901:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d910:

            test RDI,RDI
            je .L_43d920

            jmp .L_43d8d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d920:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43d94e

            lea RDX,QWORD PTR [RIP+.L_43cc50]
            lea RCX,QWORD PTR [RIP+.L_43dc00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43d94e:

            add RSP,8
            ret 
.L_43d953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d960:

            xor EAX,EAX
            ret 
.L_43d963:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43d970:

            push RBX
.L_43d971:

            mov ESI,208
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43da35

            pxor XMM7,XMM7
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM7,QWORD PTR [RBX+176]
            jp .L_43d9a4

            je .L_43da28
.L_43d9a4:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43db93]
            call .L_4043f0

            test EAX,EAX
            movsd XMM0,QWORD PTR [RIP+.L_43dee0]
            jne .L_43d9c7

            pxor XMM0,XMM0
.L_43d9c7:

            mov RAX,QWORD PTR [RIP+.L_43dee8]
            mov RSI,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+352],XMM0
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43db9a]
            mov QWORD PTR [RBX+344],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_43da40

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_43dba0]
            call .L_4043f0

            sub EAX,1
            cmp EAX,59
            ja .L_43db30

            movsd XMM2,QWORD PTR [RIP+.L_43def0]
            movsd XMM4,QWORD PTR [RIP+.L_43def8]
            jmp .L_43daa4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43da28:

            mov ESI,4294967262
.L_43da2d:

            mov RDI,RBX
            call .L_415fe0
.L_43da35:

            mov RDI,RBX
            pop RBX
.L_43da39:

            jmp .L_43cc20
          .byte 0x66
          .byte 0x90
.L_43da40:

            movsd XMM0,QWORD PTR [RBX+328]
            call .L_449e30

            movsd XMM2,QWORD PTR [RIP+.L_43def0]
            movsd XMM4,QWORD PTR [RIP+.L_43def8]
            addsd XMM0,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_43df10]
            movsd XMM6,QWORD PTR [RIP+.L_43df00]
            mulsd XMM0,XMM4
            divsd XMM0,XMM2
            movapd XMM3,XMM0
            movapd XMM1,XMM0
            andpd XMM3,XMM5
            ucomisd XMM6,XMM3
            ja .L_43daf0
.L_43da8b:

            cvttsd2si EAX,XMM1
            mov EDX,59
            cmp EAX,59
            cmovg EAX,EDX
            mov EDX,0
            test EAX,EAX
            cmovs EAX,EDX
.L_43daa4:

            pxor XMM0,XMM0
            mov QWORD PTR [RBX+336],0
            mov RDI,RBX
            cvtsi2sd XMM0,EAX
            mov RAX,QWORD PTR [RIP+.L_43df08]
            mov QWORD PTR [RBX+360],RAX
            addsd XMM0,QWORD PTR [RIP+.L_43ddc8]
            mulsd XMM0,XMM2
            divsd XMM0,XMM4
            subsd XMM0,XMM2
            movsd QWORD PTR [RBX+328],XMM0
            pop RBX

            jmp .L_43d230
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43daf0:

            cvttsd2si RAX,XMM0
            pxor XMM3,XMM3
            andnpd XMM5,XMM0
            cvtsi2sd XMM3,RAX
            movapd XMM6,XMM3
            cmpnlesd XMM6,XMM0
            movapd XMM1,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_43dc58]
            andpd XMM1,XMM6
            subsd XMM3,XMM1
            movapd XMM1,XMM3
            orpd XMM1,XMM5
            jmp .L_43da8b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43db30:

            mov ESI,4294967261
            jmp .L_43da2d
.L_43db3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43db40:

            test RDI,RDI
            je .L_43db50

            jmp .L_43d970
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43db50:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43db7e

            lea RDX,QWORD PTR [RIP+.L_43cc50]
            lea RCX,QWORD PTR [RIP+.L_43dbc0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43db7e:

            add RSP,8
            ret 
.L_43db83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43db90:

            xor EAX,EAX
            ret 
.L_43db93:
          .string "bsouth"
.L_43db9a:

            je .L_43dc16
          .byte 0x6f
          .byte 0x6e
          .byte 0x65
          .byte 0x0
.L_43dba0:
          .string "izone"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43dbc0:
          .string "Universal Transverse Mercator (UTM)\n\tCyl, Sph\n\tzone= south"
          .zero 5
.L_43dc00:
          .byte 0x45
          .byte 0x78
          .byte 0x74
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x54
          .byte 0x72
          .byte 0x61
          .byte 0x6e
          .byte 0x73
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x20
          .byte 0x4d
          .byte 0x65
.L_43dc16:

            jb .L_43dc7b
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0xa
          .byte 0x9
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x74
          .byte 0x73
          .byte 0x3d
          .byte 0x28
          .byte 0x30
          .byte 0x29
          .byte 0xa
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x30
          .byte 0x3d
          .byte 0x28
          .byte 0x30
          .byte 0x29
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43dc40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
.L_43dc48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_43dc50:
          .byte 0xc9
          .byte 0xed
          .byte 0x64
          .byte 0x9a
          .byte 0xb6
          .byte 0xfc
          .byte 0x4
          .byte 0x40
.L_43dc58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43dc60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_43dc68:

            int 193
          .byte 0xb
          .byte 0xab
          .byte 0x9f
          .byte 0xe9
          .byte 0x10
          .byte 0xc0
.L_43dc70:
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xe2
          .byte 0x3f
.L_43dc78:

            cmc 
            lahf 
.L_43dc7b:

            hlt 

            lahf 
.L_43dc7e:

            add AL,64
.L_43dc80:

            push RBP
            push RBP
            push RBP
            push RBP
            push RBP
            push RBP
            in EAX,63
.L_43dc88:

            push 421770333
            jo .L_43dc7e
          .byte 0x3f
.L_43dc90:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0xe6
          .byte 0x3f
.L_43dc98:
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0xfd
          .byte 0x3f
.L_43dca0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xf5
          .byte 0x3f
.L_43dca8:
          .byte 0xa6
          .byte 0xba
          .byte 0xff
          .byte 0x50
          .byte 0x65
          .byte 0xaa
          .byte 0x3
          .byte 0x40
.L_43dcb0:
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0x21
          .byte 0x40
.L_43dcb8:
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0x14
          .byte 0x40
.L_43dcc0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xf9
          .byte 0x3f
.L_43dcc8:

            stosd DWORD PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            add AL,BYTE PTR [RAX+79]
            pushfq 
            outsd DX,DWORD PTR [RSI]
            movsb 
            int1 
# WARNING: found overlapping blocks at address 3daa0
.set .L_43dcd0, . - 5

          .byte 0xc4
          .byte 0xf9
          .byte 0xbf
.L_43dcd8:
          .byte 0x57
          .byte 0x6f
          .byte 0xf5
          .byte 0x56
          .byte 0x6f
          .byte 0xf5
          .byte 0x6
          .byte 0x40
.L_43dce0:
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xf7
          .byte 0x3f
.L_43dce8:

            adc DWORD PTR [RCX],EDX
            adc DWORD PTR [RCX],EDX
            adc DWORD PTR [RCX],EDX
            int1 
          .byte 0x3f
.L_43dcf0:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xfa
          .byte 0x3f
.L_43dcf8:

            sub EDI,DWORD PTR [R11+36]
            or DWORD PTR FS:[RDX],EDI
            pushfq 
            ror BYTE PTR [RCX],156
            ror BYTE PTR [RCX],40
            pop RDI
            int1 
          .byte 0x15
          .byte 0x5f
          .byte 0xf1
          .byte 0x15
          .byte 0xf
          .byte 0x40
.L_43dd10:
          .byte 0xde
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xdd
          .byte 0xd
          .byte 0x40
.L_43dd18:
          .byte 0xd
          .byte 0x49
          .byte 0xad
          .byte 0x9b
          .byte 0x2c
          .byte 0xe6
          .byte 0x11
          .byte 0xc0
.L_43dd20:
          .byte 0x7a
          .byte 0x9e
          .byte 0xe7
          .byte 0x79
          .byte 0x9e
          .byte 0xe7
          .byte 0xf9
          .byte 0x3f
.L_43dd28:
          .byte 0xbc
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xbb
          .byte 0xfb
          .byte 0x3f
.L_43dd30:
          .byte 0xc0
          .byte 0xbe
          .byte 0x2
          .byte 0x98
          .byte 0x41
          .byte 0x30
          .byte 0x3c
          .byte 0xc0
.L_43dd38:
          .byte 0x8b
          .byte 0xaf
          .byte 0xf8
          .byte 0x8a
          .byte 0xaf
          .byte 0xf8
          .byte 0x22
          .byte 0x40
.L_43dd40:
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0xb1
          .byte 0x12
          .byte 0x2b
          .byte 0x1b
          .byte 0x40
.L_43dd48:
          .byte 0x88
          .byte 0xd1
          .byte 0x12
          .byte 0xd2
          .byte 0x70
          .byte 0x7
          .byte 0xfc
          .byte 0xbf
.L_43dd50:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_43dd58:
          .byte 0xa7
          .byte 0x76
          .byte 0x6a
          .byte 0xa7
          .byte 0x76
          .byte 0x6a
          .byte 0xff
          .byte 0x3f
.L_43dd60:

            sub AL,BYTE PTR [RAX]
            sub AL,16
            out DX,AL
            cmp BYTE PTR [RDI],DH
.L_43dd67:

            rol BYTE PTR [RDI],104
            add BYTE PTR [RSI],104
            sub BYTE PTR [RDX],64
.L_43dd70:

            mov BL,38
            mov DH,227
            xchg EBP,EAX
            sbb EAX,709050380
            movsb 
            sub SPL,BYTE PTR [RDX+R8*1-1452672704]
            jns .L_43dd67

            add BH,BYTE PTR [RBX]
            iretd 
            test BYTE PTR [RCX],DH
            xor ESP,DWORD PTR [RDI]
            int3 
          .byte 0x6
          .byte 0x40
.L_43dd90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3f
.L_43dd98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3f
.L_43dda0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_43dda8:
          .byte 0x27
          .byte 0xfc
          .byte 0x4a
          .byte 0x38
          .byte 0xd
          .byte 0x5c
          .byte 0xc4
          .byte 0xbf
.L_43ddb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc4
          .byte 0x3f
.L_43ddb8:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0x66
          .byte 0x3f
.L_43ddc0:
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xd8
          .byte 0x3f
.L_43ddc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43ddd0:
          .byte 0x22
          .byte 0x45
          .byte 0x74
          .byte 0x66
          .byte 0x89
          .byte 0xb8
          .byte 0xca
          .byte 0x3f
.L_43ddd8:
          .byte 0x8e
          .byte 0xe3
          .byte 0x38
          .byte 0x8e
          .byte 0xe3
          .byte 0x38
          .byte 0xdc
          .byte 0x3f
.L_43dde0:
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0x7d
          .byte 0xd2
          .byte 0x27
          .byte 0xcd
          .byte 0x3f
.L_43dde8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3f
.L_43ddf0:
          .byte 0x35
          .byte 0x9e
          .byte 0x38
          .byte 0xdf
          .byte 0x48
          .byte 0x7f
          .byte 0xd2
          .byte 0x3f
.L_43ddf8:
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0x9c
          .byte 0xc0
          .byte 0x9
          .byte 0xdc
          .byte 0x3f
.L_43de00:
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xd3
          .byte 0x3f
.L_43de08:
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0x11
          .byte 0xb1
          .byte 0x3f
.L_43de10:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x95
          .byte 0x3f
.L_43de18:
          .byte 0x3c
          .byte 0x13
          .byte 0x89
          .byte 0xe6
          .byte 0xbd
          .byte 0x65
          .byte 0xf0
          .byte 0xbf
.L_43de20:
          .byte 0xbd
          .byte 0xc8
          .byte 0x8b
          .byte 0xbc
          .byte 0xc8
          .byte 0x8b
          .byte 0xdc
          .byte 0x3f
.L_43de28:
          .byte 0x17
          .byte 0x6c
          .byte 0xc1
          .byte 0x16
          .byte 0x6c
          .byte 0xc1
          .byte 0xd8
          .byte 0x3f
.L_43de30:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xe3
          .byte 0x3f
.L_43de38:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd1
          .byte 0x3f
.L_43de40:
          .byte 0x37
          .byte 0x4c
          .byte 0xfc
          .byte 0x52
          .byte 0x13
          .byte 0x6e
          .byte 0xaf
          .byte 0xbf
.L_43de48:
          .byte 0x2c
          .byte 0xbe
          .byte 0xe2
          .byte 0x2b
          .byte 0xbe
          .byte 0xe2
          .byte 0xa7
          .byte 0x3f
.L_43de50:
          .byte 0xd7
          .byte 0x68
          .byte 0x8d
          .byte 0xd6
          .byte 0x68
          .byte 0x8d
          .byte 0xa6
          .byte 0x3f
.L_43de58:
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0x22
          .byte 0xa2
          .byte 0x3f
.L_43de60:
          .byte 0x4a
          .byte 0x26
          .byte 0x48
          .byte 0xbb
          .byte 0x42
          .byte 0x8f
          .byte 0xed
          .byte 0x3f
.L_43de68:
          .byte 0xe0
          .byte 0x4
          .byte 0x4e
          .byte 0xe0
          .byte 0x4
          .byte 0xee
          .byte 0xe1
          .byte 0x3f
.L_43de70:
          .byte 0xb0
          .byte 0xf8
          .byte 0x8a
          .byte 0xaf
          .byte 0xf8
          .byte 0x8a
          .byte 0xe7
          .byte 0x3f
.L_43de78:
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0x44
          .byte 0xd0
          .byte 0x3f
.L_43de80:
          .byte 0x81
          .byte 0x1b
          .byte 0x13
          .byte 0xe2
          .byte 0x26
          .byte 0x49
          .byte 0xbd
          .byte 0x3f
.L_43de88:
          .byte 0x96
          .byte 0x65
          .byte 0x59
          .byte 0x96
          .byte 0x65
          .byte 0x59
          .byte 0x96
          .byte 0x3f
.L_43de90:
          .byte 0xae
          .byte 0xde
          .byte 0xea
          .byte 0xad
          .byte 0xde
          .byte 0xea
          .byte 0x9b
          .byte 0x3f
.L_43de98:
          .byte 0x42
          .byte 0xf7
          .byte 0x9b
          .byte 0x3c
          .byte 0x9c
          .byte 0x1b
          .byte 0xed
          .byte 0x3f
.L_43dea0:

            ret 
          .byte 0x30
          .byte 0xc
          .byte 0xc3
          .byte 0x30
          .byte 0xc
.L_43dea6:

            int1 
          .byte 0x3f
.L_43dea8:
          .byte 0xac
          .byte 0xc4
          .byte 0x4a
          .byte 0xac
          .byte 0xc4
          .byte 0xaa
          .byte 0xd3
          .byte 0x3f
.L_43deb0:
          .byte 0x5f
          .byte 0xab
          .byte 0x34
          .byte 0xf0
          .byte 0x43
          .byte 0xec
          .byte 0x9b
          .byte 0x3f
.L_43deb8:
          .byte 0x93
          .byte 0x31
          .byte 0x19
          .byte 0x93
          .byte 0x31
          .byte 0x19
          .byte 0x9d
          .byte 0x3f
.L_43dec0:
          .byte 0x3a
          .byte 0x9c
          .byte 0x59
          .byte 0x9c
          .byte 0x7a
          .byte 0x68
          .byte 0xfb
          .byte 0xbf
.L_43dec8:
          .byte 0x1
          .byte 0xd
          .byte 0xd0
          .byte 0x0
          .byte 0xd
          .byte 0x90
          .byte 0xdb
          .byte 0x3f
.L_43ded0:
          .byte 0xc0
          .byte 0x43
          .byte 0x16
          .byte 0xab
          .byte 0xaa
          .byte 0x8d
          .byte 0xa0
          .byte 0xbf
.L_43ded8:
          .byte 0xac
          .byte 0x2b
          .byte 0xf5
          .byte 0xb3
          .byte 0x3b
          .byte 0x48
          .byte 0xe5
          .byte 0x3f
.L_43dee0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x12
          .byte 0x63
          .byte 0x41
.L_43dee8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x84
          .byte 0x1e
          .byte 0x41
.L_43def0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_43def8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x40
.L_43df00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_43df08:

            js .L_43dea6
          .byte 0xa2
          .byte 0x23
          .byte 0xb9
          .byte 0xfc
          .byte 0xef
          .byte 0x3f
.L_43df10:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43df20:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43df30:

            jmp .L_403ca0
.L_43df35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43df40:

            push R12
            push RBP
            push RBX
            sub RSP,64
.L_43df48:

            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_43e1a8]
            movsd QWORD PTR [RSP+24],XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_43e190]
            subsd XMM0,QWORD PTR [RIP+.L_43e1a0]
            andpd XMM0,XMMWORD PTR [RIP+.L_43e190]
            ucomisd XMM4,XMM0
            ja .L_43e0b8

            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            mov EBX,20
            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RIP+.L_43e1b0]
            movsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM3,XMM1
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+16],XMM3
            jmp .L_43dffc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43dfd0:

            sub EBX,1
            je .L_43e02c

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+8]
.L_43dffc:

            addsd XMM1,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e1a8]
            addsd XMM0,QWORD PTR [RIP+.L_43e1b8]
            subsd XMM1,QWORD PTR [RSP+16]
            divsd XMM1,XMM0
            subsd XMM2,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_43e190]
            ucomisd XMM6,XMM1
            jbe .L_43dfd0
.L_43e02c:

            mulsd XMM2,QWORD PTR [RIP+.L_43e1c0]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_43e1b8]
            movsd XMM4,QWORD PTR [RIP+.L_44f380-70064]
            divsd XMM1,QWORD PTR [RSP+40]
            divsd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_43e1c8]
            addsd XMM1,XMM4
            divsd XMM3,XMM1
.L_43e079:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_43e1d8]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM1,QWORD PTR [RIP+.L_44f380-70048]
            add RSP,64
.L_43e0b0:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e0b8:

            movsd XMM2,QWORD PTR [RSP+24]
            pxor XMM3,XMM3
            jmp .L_43e079
.L_43e0c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e0d0:

            test RDI,RDI
            je .L_43e0f0

            lea RAX,QWORD PTR [RIP+.L_43df40]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_43e0f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43e11e

            lea RDX,QWORD PTR [RIP+.L_43df30]
            lea RCX,QWORD PTR [RIP+.L_43e160]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e11e:

            add RSP,8
            ret 
.L_43e123:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e130:

            lea RDX,QWORD PTR [RIP+.L_43df40]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43e14a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43e150:

            xor EAX,EAX
            ret 
.L_43e153:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e160:
          .string "Boggs Eumorphic\n\tPCyl., no inv., Sph."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e190:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e1a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43e1a8:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_43e1b0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_43e1b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43e1c0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 253911
.L_43e1c8:

            in EAX,237
            or BYTE PTR [RDI-1119879163],AH
            xor EAX,3313653168
            int1 
          .byte 0x3f
.L_43e1d8:

            int 59
          .byte 0x7f
          .byte 0x66

            sahf 
            movabs AL,BYTE PTR [-814608218295025674]
            fistp QWORD PTR [RDI]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e1f0:

            jmp .L_403ca0
.L_43e1f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e200:

            sub RSP,40
.L_43e204:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_43e4a0]
            movapd XMM3,XMM1
            subsd XMM3,XMM0
            pxor XMM0,XMM0
            ucomisd XMM0,XMM3
            jae .L_43e260

            sqrtsd XMM2,XMM3
            ja .L_43e26e
.L_43e233:

            subsd XMM1,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_43e498]
.L_43e23f:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_43e4a8]
            add RSP,40
.L_43e251:

            mulsd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e260:

            movsd XMM1,QWORD PTR [RIP+.L_43e498]
            pxor XMM2,XMM2
            jmp .L_43e23f
.L_43e26e:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_43e233
.L_43e291:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e2a0:

            sub RSP,40
.L_43e2a4:

            movapd XMM3,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_43e498]
            movsd XMM2,QWORD PTR [RIP+.L_43e4a0]
            movapd XMM5,XMM2
            subsd XMM1,XMM2
            mulsd XMM1,XMM1
            subsd XMM5,XMM1
            movapd XMM0,XMM5
            andpd XMM0,XMMWORD PTR [RIP+.L_43e4d0]
            ucomisd XMM2,XMM0
            ja .L_43e320

            ucomisd XMM0,QWORD PTR [RIP+.L_43e4c8]
            ja .L_43e300

            pxor XMM0,XMM0
            ucomisd XMM0,XMM5
            ja .L_43e378

            movsd XMM1,QWORD PTR [RIP+.L_43e4c0]
.L_43e2fa:

            add RSP,40
.L_43e2fe:

            ret 
          .byte 0x90
.L_43e300:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM5
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,40
            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_43e320:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            subsd XMM2,XMM0
            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            ucomisd XMM0,XMM2
            jae .L_43e2fa

            sqrtsd XMM4,XMM2
            ja .L_43e395

            mulsd XMM4,QWORD PTR [RIP+.L_43e4a8]
            movapd XMM0,XMM4
            jmp .L_43e388
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e378:

            movsd XMM0,QWORD PTR [RIP+.L_43e4b0]
            movsd XMM1,QWORD PTR [RIP+.L_43e4b8]
.L_43e388:

            divsd XMM3,XMM0
            add RSP,40

            movapd XMM0,XMM3
            ret 
.L_43e395:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM4,QWORD PTR [RIP+.L_43e4a8]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM4
            jmp .L_43e388
.L_43e3d0:

            test RDI,RDI
            je .L_43e400

            lea RAX,QWORD PTR [RIP+.L_43e2a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e200]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e400:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43e42e

            lea RDX,QWORD PTR [RIP+.L_43e1f0]
            lea RCX,QWORD PTR [RIP+.L_43e480]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e42e:

            add RSP,8
            ret 
.L_43e433:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e440:

            lea RDX,QWORD PTR [RIP+.L_43e2a0]
            lea RCX,QWORD PTR [RIP+.L_43e200]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43e465:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e470:

            xor EAX,EAX
            ret 
.L_43e473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e480:
          .string "Collignon\n\tPCyl, Sph."
# WARNING: found overlapping blocks at address 3e25f
# WARNING: found overlapping blocks at address 3e264
          .byte 0x66
          .byte 0x90
.L_43e498:
          .byte 0x6b
          .byte 0xef
          .byte 0xb4
          .byte 0x91
          .byte 0xf8
          .byte 0x5b
          .byte 0xfc
          .byte 0x3f
.L_43e4a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43e4a8:
          .byte 0x6d
          .byte 0x9b
          .byte 0x42
          .byte 0x50
          .byte 0xd7
          .byte 0xd
          .byte 0xf2
          .byte 0x3f
.L_43e4b0:
          .byte 0x51
          .byte 0x36
          .byte 0xd4
          .byte 0x33
          .byte 0x45
          .byte 0x88
          .byte 0xf9
          .byte 0x3f
.L_43e4b8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_43e4c0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43e4c8:
          .byte 0x9b
          .byte 0xf2
          .byte 0xd7
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43e4d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e4e0:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_43e710]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_43e718]
.L_43e4fc:

            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_43e720]
            mulsd XMM1,XMM2
            ret 
.L_43e50d:

            nop
            nop
            nop
.L_43e510:

            jmp .L_403ca0
.L_43e515:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e520:

            movsd XMM2,QWORD PTR [RIP+.L_43e728]
            ucomisd XMM1,XMM2
            ja .L_43e600

            movsd XMM3,QWORD PTR [RIP+.L_43e730]
            movapd XMM2,XMM1
            cmpnltsd XMM2,XMM3
            andpd XMM1,XMM2
            andnpd XMM2,XMM3
            orpd XMM1,XMM2
.L_43e54f:

            movapd XMM3,XMM1
            mov EAX,100
            movsd XMM10,QWORD PTR [RIP+.L_43e710]
            movsd XMM9,QWORD PTR [RIP+.L_43e718]
            movsd XMM4,QWORD PTR [RIP+.L_43e720]
            movsd XMM8,QWORD PTR [RIP+.L_43e738]
            movsd XMM7,QWORD PTR [RIP+.L_43e740]
            movq XMM6,QWORD PTR [RIP+.L_43e750]
            movsd XMM5,QWORD PTR [RIP+.L_43e748]
            jmp .L_43e59d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e598:

            sub EAX,1
            je .L_43e610
.L_43e59d:

            movapd XMM11,XMM3
            mulsd XMM11,XMM3
            movapd XMM2,XMM11
            movapd XMM12,XMM11
            mulsd XMM2,XMM10
            mulsd XMM12,XMM8
            addsd XMM2,XMM9
            addsd XMM12,XMM7
            mulsd XMM2,XMM11
            mulsd XMM11,XMM12
            addsd XMM2,XMM4
            addsd XMM11,XMM4
            mulsd XMM2,XMM3
            subsd XMM2,XMM1
            divsd XMM2,XMM11
            subsd XMM3,XMM2
            andpd XMM2,XMM6
            ucomisd XMM5,XMM2
            jbe .L_43e598

            movapd XMM1,XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e600:

            movapd XMM1,XMM2
            jmp .L_43e54f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e610:

            sub RSP,24

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM3
            call .L_404af0

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM3
            ret 
.L_43e640:

            test RDI,RDI
            je .L_43e670

            lea RAX,QWORD PTR [RIP+.L_43e520]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e4e0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e670:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43e69e

            lea RDX,QWORD PTR [RIP+.L_43e510]
            lea RCX,QWORD PTR [RIP+.L_43e6f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e69e:

            add RSP,8
            ret 
.L_43e6a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e6b0:

            lea RDX,QWORD PTR [RIP+.L_43e520]
            lea RCX,QWORD PTR [RIP+.L_43e4e0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43e6d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e6e0:

            xor EAX,EAX
            ret 
.L_43e6e3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e6f0:
          .string "Compact Miller\n\tCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e710:
          .byte 0xbd
          .byte 0x1d
          .byte 0xe1
          .byte 0xb4
          .byte 0xe0
          .byte 0x45
          .byte 0x9f
          .byte 0xbf
.L_43e718:
          .byte 0x9c
          .byte 0xa2
          .byte 0x23
.L_43e71b:

            mov ECX,1069844476
.L_43e720:

            jb .L_43e71b
          .byte 0xf
          .byte 0xe9
          .byte 0xb7
          .byte 0xaf
          .byte 0xef
          .byte 0x3f
.L_43e728:
          .byte 0x6
          .byte 0x12
          .byte 0x7
          .byte 0x9b
          .byte 0xb
          .byte 0x29
          .byte 0xfe
          .byte 0x3f
.L_43e730:
          .byte 0x6
          .byte 0x12
          .byte 0x7
          .byte 0x9b
          .byte 0xb
          .byte 0x29
          .byte 0xfe
          .byte 0xbf
.L_43e738:
          .byte 0x96
          .byte 0xb2
          .byte 0xc
          .byte 0x71
          .byte 0xac
          .byte 0x8b
          .byte 0xc3
          .byte 0xbf
.L_43e740:
          .byte 0xea
          .byte 0x73
          .byte 0xb5
          .byte 0x15
          .byte 0xfb
          .byte 0xcb
          .byte 0xde
          .byte 0x3f
.L_43e748:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
.L_43e750:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e760:

            jmp .L_403ca0
.L_43e765:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e770:

            sub RSP,40
.L_43e774:

            mulsd XMM1,QWORD PTR [RIP+.L_43e950]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            addsd XMM0,XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            addsd XMM2,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_43e958]
            mulsd XMM1,QWORD PTR [RIP+.L_43e968]
            subsd XMM2,QWORD PTR [RIP+.L_43e960]
            add RSP,40
.L_43e7da:

            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            ret 
.L_43e7e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e7f0:

            sub RSP,24
.L_43e7f4:

            mulsd XMM1,QWORD PTR [RIP+.L_43e970]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movsd XMM1,QWORD PTR [RIP+.L_43e978]
            mulsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_43e950]
            call cos@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM3,QWORD PTR [RIP+.L_43e980]
            movapd XMM2,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_43e960]
            add RSP,24
.L_43e858:

            divsd XMM3,XMM2
            movapd XMM0,XMM3
            ret 
.L_43e861:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e870:

            test RDI,RDI
            je .L_43e8a0

            lea RAX,QWORD PTR [RIP+.L_43e7f0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43e770]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e8a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43e8ce

            lea RDX,QWORD PTR [RIP+.L_43e760]
            lea RCX,QWORD PTR [RIP+.L_43e920]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43e8ce:

            add RSP,8
            ret 
.L_43e8d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e8e0:

            lea RDX,QWORD PTR [RIP+.L_43e7f0]
            lea RCX,QWORD PTR [RIP+.L_43e770]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43e905:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e910:

            xor EAX,EAX
            ret 
.L_43e913:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43e920:
          .string "Craster Parabolic (Putnins P4)\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e950:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_43e958:
          .byte 0x9a
          .byte 0x74
          .byte 0x57
          .byte 0x78
          .byte 0x43
          .byte 0x45
          .byte 0xef
          .byte 0x3f
.L_43e960:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43e968:
          .byte 0x93
          .byte 0x15
          .byte 0x3a
          .byte 0xbd
          .byte 0x51
          .byte 0x8f
          .byte 0x8
          .byte 0x40
.L_43e970:
          .byte 0x11
          .byte 0xa3
          .byte 0x8f
          .byte 0xa5
          .byte 0xd7
          .byte 0xd8
          .byte 0xd4
          .byte 0x3f
.L_43e978:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_43e980:
          .byte 0x62
          .byte 0xe
          .byte 0x7c
          .byte 0xd3
          .byte 0x8b
          .byte 0x5f
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e990:

            jmp .L_403ca0
.L_43e995:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e9a0:

            movapd XMM3,XMM0
            mulsd XMM0,XMM0
            sub RSP,24
.L_43e9ac:

            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_43eaf0]
            andpd XMM2,XMMWORD PTR [RIP+.L_43eb20]
            subsd XMM0,QWORD PTR [RIP+.L_43eaf8]
            mulsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43eb08]
            mulsd XMM2,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_43eb00]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_43eb10]
            mulsd XMM2,XMM1
            mulsd XMM0,XMM2
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
.L_43ea1b:

            mulsd XMM0,XMM3
            ret 
.L_43ea20:

            test RDI,RDI
            je .L_43ea40

            lea RAX,QWORD PTR [RIP+.L_43e9a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_43ea40:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43ea6e

            lea RDX,QWORD PTR [RIP+.L_43e990]
            lea RCX,QWORD PTR [RIP+.L_43eac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ea6e:

            add RSP,8
            ret 
.L_43ea73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ea80:

            lea RDX,QWORD PTR [RIP+.L_43e9a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_43ea9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43eaa0:

            xor EAX,EAX
            ret 
.L_43eaa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43eac0:
          .string "Denoyer Semi-Elliptical\n\tPCyl., no inv., Sph."
          .byte 0x66
          .byte 0x90
.L_43eaf0:
          .byte 0x4e
          .byte 0x1b
          .byte 0xe8
          .byte 0xb4
          .byte 0x81
          .byte 0x4e
          .byte 0x5b
          .byte 0x3f
.L_43eaf8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xb5
          .byte 0x3f
.L_43eb00:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0xee
          .byte 0x3f
.L_43eb08:

            mov EAX,1374389534
            mov EAX,3436003230
            int3 
# WARNING: found overlapping blocks at address 3e8e0
.set .L_43eb10, . - 3

            int3 

            int3 

            int3 
          .byte 0xec
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43eb20:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43eb30:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_43eca8]
            andpd XMM3,XMMWORD PTR [RIP+.L_43ec90]
            mulsd XMM3,QWORD PTR [RIP+.L_43eca0]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43ecb0]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            ret 
.L_43eb65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43eb70:

            movsd XMM4,QWORD PTR [RIP+.L_43ecb0]
            movsd XMM2,QWORD PTR [RIP+.L_43eca8]
            divsd XMM1,XMM4
            movapd XMM3,XMM1
            andpd XMM3,XMMWORD PTR [RIP+.L_43ec90]
            mulsd XMM3,QWORD PTR [RIP+.L_43eca0]
            subsd XMM2,XMM3
            mulsd XMM2,XMM4
            divsd XMM0,XMM2
            ret 
.L_43eba5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ebb0:

            jmp .L_403ca0
.L_43ebb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ebc0:

            test RDI,RDI
            je .L_43ebf0

            lea RAX,QWORD PTR [RIP+.L_43eb70]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43eb30]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ebf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43ec1e

            lea RDX,QWORD PTR [RIP+.L_43ebb0]
            lea RCX,QWORD PTR [RIP+.L_43ec70]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ec1e:

            add RSP,8
            ret 
.L_43ec23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ec30:

            lea RDX,QWORD PTR [RIP+.L_43eb70]
            lea RCX,QWORD PTR [RIP+.L_43eb30]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43ec55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ec60:

            xor EAX,EAX
            ret 
.L_43ec63:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ec70:
          .string "Eckert I\n\tPCyl., Sph."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ec90:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43eca0:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xd4
          .byte 0x3f
.L_43eca8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43ecb0:
          .byte 0x5a
          .byte 0xc5
          .byte 0xfa
          .byte 0x52
          .byte 0x6f
          .byte 0x7b
          .byte 0xed
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ecc0:

            jmp .L_403ca0
.L_43ecc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ecd0:

            sub RSP,40
.L_43ecd4:

            mulsd XMM0,QWORD PTR [RIP+.L_43ef78]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_43efd0]
            call sin@PLT

            movsd XMM2,QWORD PTR [RIP+.L_43ef80]
            pxor XMM4,XMM4
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43ef88]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43ed58
.L_43ed24:

            movsd XMM2,QWORD PTR [RIP+.L_43ef90]
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM2,XMM1
            ucomisd XMM4,XMM3
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43ef98]
            mulsd XMM1,XMM2
            jbe .L_43ed53

            xorpd XMM1,XMMWORD PTR [RIP+.L_43efe0]
.L_43ed53:

            add RSP,40
.L_43ed57:

            ret 
.L_43ed58:

            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43ed24
.L_43ed83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ed90:

            sub RSP,24
.L_43ed94:

            movapd XMM3,XMM1
            movq XMM5,QWORD PTR [RIP+.L_43efd0]
            movsd XMM2,QWORD PTR [RIP+.L_43ef90]
            movapd XMM4,XMM0
            andpd XMM3,XMM5
            divsd XMM3,QWORD PTR [RIP+.L_43ef98]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_43ef78]
            mulsd XMM3,XMM2
            divsd XMM4,XMM3
            movapd XMM3,XMM2
            mulsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43ef88]
            subsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_43efb0]
            andpd XMM5,XMM2
            ucomisd XMM5,QWORD PTR [RIP+.L_43efb8]
            jb .L_43ee68

            ucomisd XMM5,QWORD PTR [RIP+.L_43efc0]
            ja .L_43ee38

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_43ee98

            movsd XMM2,QWORD PTR [RIP+.L_43efa0]
.L_43ee16:

            ucomisd XMM0,XMM1
            jbe .L_43ee24

            xorpd XMM2,XMMWORD PTR [RIP+.L_43efe0]
.L_43ee24:

            movapd XMM0,XMM4
            add RSP,24
.L_43ee2c:

            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ee38:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call .L_415fe0

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM4
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ee68:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM4
            call asin@PLT

            movsd XMM4,QWORD PTR [RSP]
            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            jmp .L_43ee16
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ee98:

            movsd XMM2,QWORD PTR [RIP+.L_43efa8]
            jmp .L_43ee16
.L_43eea5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43eeb0:

            test RDI,RDI
            je .L_43eee0

            lea RAX,QWORD PTR [RIP+.L_43ed90]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43ecd0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43eee0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43ef0e

            lea RDX,QWORD PTR [RIP+.L_43ecc0]
            lea RCX,QWORD PTR [RIP+.L_43ef60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43ef0e:

            add RSP,8
            ret 
.L_43ef13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ef20:

            lea RDX,QWORD PTR [RIP+.L_43ed90]
            lea RCX,QWORD PTR [RIP+.L_43ecd0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43ef45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ef50:

            xor EAX,EAX
            ret 
.L_43ef53:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ef60:
          .string "Eckert II\n\tPCyl. Sph."
          .byte 0x66
          .byte 0x90
.L_43ef78:
          .byte 0x5a
          .byte 0xc5
          .byte 0xfa
          .byte 0x52
          .byte 0x6f
          .byte 0x7b
          .byte 0xdd
          .byte 0x3f
.L_43ef80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_43ef88:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_43ef90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_43ef98:
          .byte 0xbb
          .byte 0x83
          .byte 0x75
          .byte 0xd1
          .byte 0xbd
          .byte 0x27
          .byte 0xf7
          .byte 0x3f
.L_43efa0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_43efa8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_43efb0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_43efb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43efc0:
          .byte 0x9b
          .byte 0xf2
          .byte 0xd7
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43efd0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43efe0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43eff0:

            test RDI,RDI
            je .L_43f018

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43f00e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43f00e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f018:

            xor EAX,EAX
            ret 
.L_43f01b:

            nop
            nop
            nop
            nop
            nop
.L_43f020:

            jmp .L_43eff0
.L_43f022:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f030:

            sub RSP,40
.L_43f034:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RAX+24]
            mulsd XMM0,QWORD PTR [RAX]
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RAX+8]
            movsd XMM5,QWORD PTR [RAX+16]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43f528]
            movsd QWORD PTR [RSP+24],XMM3
            subsd XMM0,XMM2
            call .L_449d70

            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM3
            mulsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
.L_43f094:

            ret 
.L_43f095:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f0a0:

            sub RSP,40
.L_43f0a4:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43f528]
            divsd XMM1,QWORD PTR [RAX+8]
            movsd XMM4,QWORD PTR [RAX+24]
            movsd XMM5,QWORD PTR [RAX]
            movsd XMM3,QWORD PTR [RAX+16]
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            mulsd XMM4,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            movapd XMM2,XMM4
            mulsd XMM2,XMM1
            subsd XMM0,XMM2
            call .L_449d70

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            mulsd XMM2,QWORD PTR [RSP]
            ucomisd XMM2,QWORD PTR [RIP+.L_43f538]
            jp .L_43f118

            movsd XMM0,QWORD PTR [RIP+.L_43f530]
            je .L_43f122
.L_43f118:

            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,XMM2
.L_43f122:

            add RSP,40
.L_43f126:

            ret 
.L_43f127:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f130:

            push RBX
.L_43f131:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f1a0

            mov RDX,QWORD PTR [RIP+.L_43f540]
            mov QWORD PTR [RBX+32],RAX
            mov RCX,QWORD PTR [RIP+.L_43f548]
            mov RSI,QWORD PTR [RIP+.L_43f528]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_43f550]
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_43f0a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f030]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43f19c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f1a0:

            mov RDI,RBX
            pop RBX
            jmp .L_43eff0
.L_43f1a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f1b0:

            test RDI,RDI
            je .L_43f1c0

            jmp .L_43f130
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f1c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f1ee

            lea RDX,QWORD PTR [RIP+.L_43f020]
            lea RCX,QWORD PTR [RIP+.L_43f510]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f1ee:

            add RSP,8
            ret 
.L_43f1f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f200:

            push RBX
.L_43f201:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f270

            mov RDX,QWORD PTR [RIP+.L_43f558]
            mov RCX,QWORD PTR [RIP+.L_43f528]
            mov RSI,QWORD PTR [RIP+.L_43f560]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+24],RSI
            lea RAX,QWORD PTR [RIP+.L_43f0a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f030]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43f269:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f270:

            mov RDI,RBX
            pop RBX
            jmp .L_43eff0
.L_43f279:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f280:

            test RDI,RDI
            je .L_43f290

            jmp .L_43f200
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f290:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f2be

            lea RDX,QWORD PTR [RIP+.L_43f020]
            lea RCX,QWORD PTR [RIP+.L_43f4b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f2be:

            add RSP,8
            ret 
.L_43f2c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f2d0:

            push RBX
.L_43f2d1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f340

            mov RDX,QWORD PTR [RIP+.L_43f560]
            movsd XMM0,QWORD PTR [RIP+.L_43f568]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+16],0
            movsd QWORD PTR [RAX+8],XMM0
            movsd QWORD PTR [RAX],XMM0
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_43f0a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f030]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43f335:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f340:

            mov RDI,RBX
            pop RBX
            jmp .L_43eff0
.L_43f349:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f350:

            test RDI,RDI
            je .L_43f360

            jmp .L_43f2d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f360:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f38e

            lea RDX,QWORD PTR [RIP+.L_43f020]
            lea RCX,QWORD PTR [RIP+.L_43f4d0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f38e:

            add RSP,8
            ret 
.L_43f393:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f3a0:

            push RBX
.L_43f3a1:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f410

            mov RDX,QWORD PTR [RIP+.L_43f570]
            mov QWORD PTR [RBX+32],RAX
            mov RCX,QWORD PTR [RIP+.L_43f568]
            mov RSI,QWORD PTR [RIP+.L_43f578]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_43f560]
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            lea RAX,QWORD PTR [RIP+.L_43f0a0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f030]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_43f40c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f410:

            mov RDI,RBX
            pop RBX
            jmp .L_43eff0
.L_43f419:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f420:

            test RDI,RDI
            je .L_43f430

            jmp .L_43f3a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f430:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f45e

            lea RDX,QWORD PTR [RIP+.L_43f020]
            lea RCX,QWORD PTR [RIP+.L_43f4f0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f45e:

            add RSP,8
            ret 
.L_43f463:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f470:

            xor EAX,EAX
            ret 
.L_43f473:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f480:

            xor EAX,EAX
            ret 
.L_43f483:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f490:

            xor EAX,EAX
            ret 
.L_43f493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f4a0:

            xor EAX,EAX
            ret 
.L_43f4a3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f4b0:
          .string "Kavraisky VII\n\tPCyl, Sph."
          .zero 6
.L_43f4d0:
          .string "Wagner VI\n\tPCyl, Sph."
          .zero 10
.L_43f4f0:
          .string "Putnins P1\n\tPCyl, Sph."
          .zero 9
.L_43f510:
          .string "Eckert III\n\tPCyl, Sph."
          .byte 0x90
.L_43f528:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43f530:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_43f538:
          .zero 7
.L_43f53f:
          .zero 1
.L_43f540:
          .byte 0xc0
          .byte 0x99
          .byte 0x5e
          .byte 0x5f
          .byte 0xf3
          .byte 0x5
          .byte 0xdb
          .byte 0x3f
.L_43f548:
          .byte 0xc0
          .byte 0x99
          .byte 0x5e
          .byte 0x5f
          .byte 0xf3
          .byte 0x5
          .byte 0xeb
          .byte 0x3f
.L_43f550:
          .byte 0x20
          .byte 0xc7
          .byte 0x22
          .byte 0x62
          .byte 0x2f
          .byte 0xf0
          .byte 0xd9
          .byte 0x3f
.L_43f558:
          .byte 0x4e
          .byte 0x4b
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_43f560:

            pop RAX
            adc EAX,1948486042
            sar DWORD PTR [RDI],CL
.L_43f568:

            loope 258885
            xchg EBX,EAX
            test EAX,1072583042
.L_43f570:

            loope 258893
            xchg EBX,EAX
            test EAX,1073631618
.L_43f578:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne OFFSET .L_43f53f
.L_43f580:

            test RDI,RDI
            je .L_43f590

            jmp .L_403ca0

            nop
            nop
            nop
            nop
            nop
            nop
.L_43f590:

            ret 
.L_43f592:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f5a0:

            push R12
            push RBP
            push RBX
            mov EBX,6
            sub RSP,48
.L_43f5ad:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_43f898]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43f8a0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_43f8a8]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_43f8b0]
            mulsd XMM1,XMM0
.L_43f60c:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RIP+.L_43f8b8]
            movsd XMM0,QWORD PTR [RSP+40]
            addsd XMM3,XMM4
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_43f8c8]
            movapd XMM2,XMM3
            mulsd XMM3,XMM4
            mulsd XMM2,XMM0
            mulsd XMM0,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43f8c0]
            addsd XMM2,XMM1
            subsd XMM2,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            divsd XMM2,XMM3
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_43f8e0]
            ucomisd XMM6,XMM2
            ja .L_43f6b8

            sub EBX,1
            jne .L_43f60c

            pxor XMM2,XMM2
            movsd XMM0,QWORD PTR [RSP+24]
            ucomisd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_43f8d0]
            ja .L_43f700

            movsd XMM1,QWORD PTR [RIP+.L_43f888]
            add RSP,48
.L_43f6ac:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f6b8:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RIP+.L_43f8c0]
            mulsd XMM1,QWORD PTR [RIP+.L_43f8d0]
            addsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_43f888]
            mulsd XMM1,QWORD PTR [RSP+40]
            add RSP,48
.L_43f6f9:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_43f700:

            movsd XMM1,QWORD PTR [RIP+.L_43f890]
            add RSP,48
            pop RBX
            pop RBP
            pop R12
            ret 
.L_43f711:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f720:

            push RBX
            mov RBX,RDI
            sub RSP,32

            mov RDI,QWORD PTR [RDI]
            divsd XMM1,QWORD PTR [RIP+.L_43f888]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call .L_449c40

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RIP+.L_43f8c0]
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RIP+.L_43f8b8]
            mulsd XMM0,QWORD PTR [RIP+.L_43f8d0]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_43f898]
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_43f7bd:

            nop
            nop
            nop
.L_43f7c0:

            test RDI,RDI
            je .L_43f7f0

            lea RAX,QWORD PTR [RIP+.L_43f720]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f5a0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f7f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f81e

            lea RDX,QWORD PTR [RIP+.L_43f580]
            lea RCX,QWORD PTR [RIP+.L_43f870]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f81e:

            add RSP,8
            ret 
.L_43f823:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f830:

            lea RDX,QWORD PTR [RIP+.L_43f720]
            lea RCX,QWORD PTR [RIP+.L_43f5a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43f855:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f860:

            xor EAX,EAX
            ret 
.L_43f863:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43f870:
          .string "Eckert IV\n\tPCyl, Sph."
          .byte 0x66
          .byte 0x90
.L_43f888:
          .byte 0x4f
          .byte 0x67
          .byte 0x52
          .byte 0x83
          .byte 0x58
          .byte 0x39
          .byte 0xf5
          .byte 0x3f
.L_43f890:
          .byte 0x4f
          .byte 0x67
          .byte 0x52
          .byte 0x83
          .byte 0x58
          .byte 0x39
          .byte 0xf5
          .byte 0xbf
.L_43f898:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0xc
          .byte 0x40
.L_43f8a0:
          .byte 0xdd
          .byte 0xfc
          .byte 0x33
          .byte 0x41
          .byte 0xdc
          .byte 0xee
          .byte 0x80
          .byte 0x3f
.L_43f8a8:
          .byte 0x24
          .byte 0xdc
          .byte 0x1a
          .byte 0xc7
          .byte 0xfe
          .byte 0x68
          .byte 0x96
          .byte 0x3f
.L_43f8b0:
          .byte 0x90
          .byte 0x9f
          .byte 0x8d
          .byte 0x5c
          .byte 0x37
          .byte 0xa5
          .byte 0xec
          .byte 0x3f
.L_43f8b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_43f8c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43f8c8:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_43f8d0:
          .byte 0xc0
          .byte 0x99
          .byte 0x5e
          .byte 0x5f
          .byte 0xf3
          .byte 0x5
          .byte 0xdb
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f8e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f8f0:

            test RDI,RDI
            je .L_43f900

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f900:

            ret 
.L_43f902:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f910:

            sub RSP,24
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            addsd XMM0,QWORD PTR [RIP+.L_43fa68]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RIP+.L_43fa78]
            mulsd XMM0,QWORD PTR [RIP+.L_43fa70]
            mulsd XMM0,QWORD PTR [RSP]
            add RSP,24
            ret 
.L_43f950:

            sub RSP,24
            mulsd XMM1,QWORD PTR [RIP+.L_43fa80]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM0,QWORD PTR [RIP+.L_43fa68]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_43fa88]
            add RSP,24
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_43f998:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9a0:

            test RDI,RDI
            je .L_43f9d0

            lea RAX,QWORD PTR [RIP+.L_43f950]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43f910]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f9d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43f9fe

            lea RDX,QWORD PTR [RIP+.L_43f8f0]
            lea RCX,QWORD PTR [RIP+.L_43fa50]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43f9fe:

            add RSP,8
            ret 
.L_43fa03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa10:

            lea RDX,QWORD PTR [RIP+.L_43f950]
            lea RCX,QWORD PTR [RIP+.L_43f910]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43fa35:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa40:

            xor EAX,EAX
            ret 
.L_43fa43:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fa50:
          .string "Eckert V\n\tPCyl, Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fa68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43fa70:
          .byte 0x7f
          .byte 0x37
          .byte 0xeb
          .byte 0xa1
          .byte 0x8d
          .byte 0x39
          .byte 0xdc
          .byte 0x3f
.L_43fa78:
          .byte 0x7f
          .byte 0x37
          .byte 0xeb
          .byte 0xa1
          .byte 0x8d
          .byte 0x39
          .byte 0xec
          .byte 0x3f
.L_43fa80:
          .byte 0xca
          .byte 0x3e
          .byte 0xa3
          .byte 0x3f
          .byte 0xdb
          .byte 0x23
          .byte 0xf2
          .byte 0x3f
.L_43fa88:
          .byte 0xca
          .byte 0x3e
          .byte 0xa3
          .byte 0x3f
          .byte 0xdb
          .byte 0x23
          .byte 0x2
          .byte 0x40
.L_43fa90:

            test RDI,RDI
            je .L_43faa0

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43faa0:

            ret 
.L_43faa2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fab0:

            sub RSP,24
.L_43fab4:

            mulsd XMM1,QWORD PTR [RIP+.L_43fc98]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call tan@PLT

            movapd XMM3,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM3,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_43fca0]
            movsd XMM0,QWORD PTR [RIP+.L_43fca8]
            subsd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM2
            call .L_449d70

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RIP+.L_43fcb0]
            add RSP,24
.L_43fb12:

            ret 
.L_43fb13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fb20:

            sub RSP,40
.L_43fb24:

            divsd XMM1,QWORD PTR [RIP+.L_43fcb0]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_43fcb8]
            mulsd XMM2,XMM2
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43fca8]
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            andpd XMM2,XMMWORD PTR [RIP+.L_43fcc0]
            ucomisd XMM3,XMM2
            jbe .L_43fb88

            pxor XMM0,XMM0
            add RSP,40
.L_43fb81:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fb88:

            pxor XMM3,XMM3
            sqrtsd XMM2,XMM0
            ucomisd XMM3,XMM0
            ja .L_43fbad
.L_43fb96:

            mulsd XMM2,QWORD PTR [RIP+.L_43fca0]
            movsd XMM0,QWORD PTR [RSP+16]
            add RSP,40
            divsd XMM0,XMM2
            ret 
.L_43fbad:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_43fb96
.L_43fbcc:

            nop
            nop
            nop
            nop
.L_43fbd0:

            test RDI,RDI
            je .L_43fc00

            lea RAX,QWORD PTR [RIP+.L_43fb20]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43fab0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fc00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_43fc2e

            lea RDX,QWORD PTR [RIP+.L_43fa90]
            lea RCX,QWORD PTR [RIP+.L_43fc80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_43fc2e:

            add RSP,8
            ret 
.L_43fc33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fc40:

            lea RDX,QWORD PTR [RIP+.L_43fb20]
            lea RCX,QWORD PTR [RIP+.L_43fab0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_43fc65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fc70:

            xor EAX,EAX
            ret 
.L_43fc73:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fc80:
          .string "Fahey\n\tPcyl, Sph."
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fc98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43fca0:
          .byte 0xe9
          .byte 0x7e
          .byte 0x4e
          .byte 0x41
          .byte 0x7e
          .byte 0x36
          .byte 0xea
          .byte 0x3f
.L_43fca8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_43fcb0:
          .byte 0x75
          .byte 0x3f
          .byte 0xa7
          .byte 0x20
          .byte 0x3f
          .byte 0x1b
          .byte 0xfd
          .byte 0x3f
.L_43fcb8:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0xb0
          .byte 0x3e
.L_43fcc0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fcd0:

            test RDI,RDI
            je .L_43fcf8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_43fcee

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_43fcee:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fcf8:

            xor EAX,EAX
            ret 
.L_43fcfb:

            nop
            nop
            nop
            nop
            nop
.L_43fd00:

            jmp .L_43fcd0
.L_43fd02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fd10:

            push RBX
            mov RBX,RDI
            sub RSP,32

            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RAX+8]
            mulsd XMM3,XMM2
            mulsd XMM2,XMM4
            movsd XMM5,QWORD PTR [RAX]
            mulsd XMM4,QWORD PTR [RSP+24]
            add RSP,32

            mulsd XMM1,XMM5
            movapd XMM0,XMM3
            addsd XMM2,XMM5
            pop RBX
            divsd XMM0,XMM2
            addsd XMM1,XMM4
            ret 
.L_43fd7c:

            nop
            nop
            nop
            nop
.L_43fd80:

            push R12
            push RBP
            push RBX
            pxor XMM7,XMM7
            sub RSP,64
.L_43fd8c:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movsd QWORD PTR [RSP+32],XMM1
            movsd XMM4,QWORD PTR [RBX]
            ucomisd XMM4,XMM7
            jp .L_43fdac

            je .L_43fea0
.L_43fdac:

            movsd XMM1,QWORD PTR [RSP+32]
            lea R12,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RBX+8]
            mov EBX,10
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fdd0:

            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM0,XMM4
            movsd XMM3,QWORD PTR [RSP+56]
            mulsd XMM0,XMM1
            mulsd XMM3,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_440078]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RSP+48]
            mulsd XMM3,XMM2
            subsd XMM0,QWORD PTR [RSP+32]
            addsd XMM3,XMM4
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_440090]
            ucomisd XMM6,XMM0
            ja .L_43fee8

            sub EBX,1
            jne .L_43fdd0

            pxor XMM7,XMM7
            movsd XMM0,QWORD PTR [RIP+.L_440060]
            movsd XMM1,QWORD PTR [RIP+.L_440068]
            ucomisd XMM7,QWORD PTR [RSP+32]
            jbe .L_43fe7c

            movsd XMM1,QWORD PTR [RIP+.L_440070]
.L_43fe7c:

            mulsd XMM2,XMM0
            addsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RSP+40]
            add RSP,64
.L_43fe8e:

            pop RBX
            pop RBP
            pop R12
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fea0:

            mov RDI,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RSP+32]
            call .L_449c40

            movsd XMM4,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+24]
            jmp .L_43fe7c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fee8:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_43fe7c
.L_43ff0e:

            nop
            nop
.L_43ff10:

            push RBP
            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_43ff23:

            call .L_403c70

            test RAX,RAX
            je .L_43ff7c

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_440023]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RBP],XMM0
            ja .L_43ff6f

            movsd XMM1,QWORD PTR [RIP+.L_440080]
            ucomisd XMM0,XMM1
            jbe .L_43ff90
.L_43ff6f:

            mov ESI,4294967256
            mov RDI,RBX
            call .L_415fe0
.L_43ff7c:

            add RSP,24
.L_43ff80:

            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_43fcd0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ff90:

            subsd XMM1,XMM0
            lea RAX,QWORD PTR [RIP+.L_43fd80]
            movsd QWORD PTR [RBP+8],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_43fd10]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_43ffc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ffd0:

            test RDI,RDI
            je .L_43ffe0

            jmp .L_43ff10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ffe0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44000e

            lea RDX,QWORD PTR [RIP+.L_43fd00]
            lea RCX,QWORD PTR [RIP+.L_440040]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44000e:

            add RSP,8
            ret 
.L_440013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440020:

            xor EAX,EAX
            ret 
.L_440023:

            outsb DX,BYTE PTR FS:[RSI]
            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440040:
          .string "Foucaut Sinusoidal\n\tPCyl., Sph."
.L_440060:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
.L_440068:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_440070:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_440078:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_440080:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440090:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4400a0:

            movapd XMM2,XMM1
            movapd XMM6,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_440210]
            mulsd XMM2,XMM1
            mulsd XMM6,XMM0
            movsd XMM4,QWORD PTR [RIP+.L_440220]
            movsd XMM5,QWORD PTR [RIP+.L_440218]
            mulsd XMM3,XMM2
            mulsd XMM4,XMM6
            movapd XMM7,XMM5
            mulsd XMM2,QWORD PTR [RIP+.L_440230]
            subsd XMM7,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_440228]
            mulsd XMM4,XMM6
            mulsd XMM0,XMM7
            addsd XMM2,XMM5
            subsd XMM3,XMM4
            mulsd XMM1,XMM2
            mulsd XMM0,XMM3
            ret 
.L_440101:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440110:

            test RDI,RDI
            je .L_440120

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440120:

            ret 
.L_440122:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440130:

            test RDI,RDI
            je .L_440160

            lea RAX,QWORD PTR [RIP+.L_4400a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440160:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44018e

            lea RDX,QWORD PTR [RIP+.L_440110]
            lea RCX,QWORD PTR [RIP+.L_4401e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44018e:

            add RSP,8
            ret 
.L_440193:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4401a0:

            lea RDX,QWORD PTR [RIP+.L_4400a0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_4401c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4401d0:

            xor EAX,EAX
            ret 
.L_4401d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4401e0:

            imul R13D,DWORD PTR [R14+115],1735554402
            and BYTE PTR [RSI+73],DL
            and BYTE PTR [R8],BPL
            push RSP
            jae .L_440240

            imul ECX,DWORD PTR [R11+41],1129318666
            jns .L_44026b
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0x0
          .byte 0x90
.L_440210:
          .byte 0x1
          .byte 0xa5
          .byte 0xa1
          .byte 0x46
          .byte 0x21
          .byte 0xc9
          .byte 0xc4
          .byte 0x3f
.L_440218:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_440220:
          .byte 0xc7
          .byte 0x4f
          .byte 0xcc
          .byte 0x42
          .byte 0x87
          .byte 0x35
          .byte 0x4f
          .byte 0x3f
.L_440228:

            xlatb 
            movabs DWORD PTR [6148891148401917296],EAX
            push RBP
            push RBP
            push RBP
            push RBP
            mov CH,63
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
# WARNING: found overlapping blocks at address 40000
.set .L_440230, . - 16

.L_440240:

            test RDI,RDI
            je .L_440268

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_44025e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_44025e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440268:

            xor EAX,EAX
            ret 
.L_44026b:

            nop
            nop
            nop
            nop
            nop
.L_440270:

            jmp .L_440240
.L_440272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440280:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_440289:

            mov RBX,QWORD PTR [RDI+32]
            lea RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP],XMM1
            movsd XMM3,QWORD PTR [RBX+24]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            call sincos@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RBX+16]
            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM7
            movsd QWORD PTR [RSP+32],XMM5
            call sin@PLT

            movq XMM4,QWORD PTR [RIP+.L_440850]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RBP+168]
            xorpd XMM1,XMM4
            xorpd XMM0,XMM4
            movaps XMMWORD PTR [RSP],XMM4
            call .L_44d4b0

            call log@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            mulsd XMM3,XMM0
            addsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+40],XMM3
            call cosh@PLT

            movsd XMM5,QWORD PTR [RSP+32]
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            call asin@PLT

            movapd XMM4,XMMWORD PTR [RSP]
            pxor XMM2,XMM2
            xorpd XMM0,XMM4
            pxor XMM1,XMM1
            call .L_44d4b0

            call log@PLT

            movsd XMM1,QWORD PTR [RBX+32]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RBX+48]
            mulsd XMM2,XMM1
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP],XMM7
            addsd XMM2,QWORD PTR [RBX+40]
            mulsd XMM2,QWORD PTR [RBP+144]
            movsd QWORD PTR [RSP+16],XMM2
            call sinh@PLT

            divsd XMM0,QWORD PTR [RSP+24]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            addsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RBP+144]
            add RSP,72
.L_4403c8:

            pop RBX
            pop RBP
            ret 
.L_4403cb:

            nop
            nop
            nop
            nop
            nop
.L_4403d0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,72
.L_4403d9:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM0,QWORD PTR [RDI+128]
            movsd QWORD PTR [RSP+8],XMM1
            subsd XMM0,QWORD PTR [RBX+40]
            divsd XMM0,QWORD PTR [RBX+32]
            call sinh@PLT

            movsd XMM2,QWORD PTR [RBP+128]
            lea RDI,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+32],XMM2
            movsd XMM4,QWORD PTR [RBX+32]
            movsd QWORD PTR [RSP+16],XMM4
            movapd XMM0,XMM1
            subsd XMM0,QWORD PTR [RBX+48]
            divsd XMM0,XMM4
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+56]
            divsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM3
            call atan@PLT

            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP],XMM0
            mulsd XMM2,XMM5
            movsd XMM4,QWORD PTR [RSP+16]
            movapd XMM0,XMM2
            subsd XMM0,QWORD PTR [RBX+40]
            divsd XMM0,XMM4
            call cosh@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            call asin@PLT

            movq XMM4,QWORD PTR [RIP+.L_440850]
            pxor XMM2,XMM2
            xorpd XMM0,XMM4
            pxor XMM1,XMM1
            movaps XMMWORD PTR [RSP+16],XMM4
            call .L_44d4b0

            call log@PLT

            subsd XMM0,QWORD PTR [RBX+16]
            movsd XMM2,QWORD PTR [RBX+24]
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RBP+168]
            divsd XMM3,XMM2
            movsd QWORD PTR [RSP],XMM1
            divsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call exp@PLT

            mov RDI,QWORD PTR [RBP]
            movsd XMM1,QWORD PTR [RSP]
            call .L_44cf90

            movapd XMM4,XMMWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            add RSP,72
.L_440518:

            xorpd XMM1,XMM4
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
.L_440523:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440530:

            push RBP
            push RBX
            mov ESI,56
            mov RBX,RDI
            mov EDI,1
            sub RSP,40
.L_440543:

            call .L_403c70

            test RAX,RAX
            je .L_440738

            movsd XMM0,QWORD PTR [RBX+328]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            movsd XMM5,QWORD PTR [RBX+176]
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM5
            call cos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_440860]
            call pow@PLT

            movsd XMM1,QWORD PTR [RIP+.L_440868]
            mulsd XMM0,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RBX+176]
            pxor XMM6,XMM6
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_440868]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_440758
.L_4405c0:

            movsd QWORD PTR [RBP+24],XMM1
            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            divsd XMM0,XMM1
            call asin@PLT

            movsd QWORD PTR [RBP+8],XMM0
            xorpd XMM0,XMMWORD PTR [RIP+.L_440850]
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            call .L_44d4b0

            call log@PLT

            movsd XMM2,QWORD PTR [RBX+336]
            movsd XMM7,QWORD PTR [RBP+24]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM7
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            xorpd XMM2,XMMWORD PTR [RIP+.L_440850]
            xorpd XMM1,XMMWORD PTR [RIP+.L_440850]
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RBX+168]
            call .L_44d4b0

            call log@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RBX+176]
            pxor XMM4,XMM4
            subsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RBX+360]
            mulsd XMM0,QWORD PTR [RBX+128]
            movsd QWORD PTR [RBP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_440868]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            ja .L_440746
.L_4406b5:

            movsd XMM0,QWORD PTR [RBX+336]
            movsd QWORD PTR [RSP+24],XMM2
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RIP+.L_4403d0]
            movsd XMM1,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+40],0
            mulsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_440868]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            divsd XMM1,XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP+32],XMM1
            xorpd XMM0,XMMWORD PTR [RIP+.L_440850]
            mulsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+48],XMM0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_440280]
            mov QWORD PTR [RBX+40],RAX
            add RSP,40
.L_44072f:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440738:

            add RSP,40
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_440240
.L_440746:

            call sqrt@PLT

            movsd XMM2,QWORD PTR [RBX+176]
            jmp .L_4406b5
.L_440758:

            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_4405c0
.L_44076e:

            nop
            nop
.L_440770:

            test RDI,RDI
            je .L_440780

            jmp .L_440530
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440780:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4407ae

            lea RDX,QWORD PTR [RIP+.L_440270]
            lea RCX,QWORD PTR [RIP+.L_4407e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4407ae:

            add RSP,8
            ret 
.L_4407b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4407c0:

            xor EAX,EAX
            ret 
.L_4407c3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4407e0:
          .string "Gauss-Schreiber Transverse Mercator (aka Gauss-Laborde Reunion)\n\tCyl, Sph&Ell\n\tlat_0= lon_0= k_0="
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440850:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440860:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_440868:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_440870:

            test RDI,RDI
            je .L_4408a8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_44089f

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_440893

            call .L_403c60

            mov RAX,QWORD PTR [RBX+32]
.L_440893:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_44089f:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4408a8:

            xor EAX,EAX
            ret 
.L_4408ab:

            nop
            nop
            nop
            nop
            nop
.L_4408b0:

            jmp .L_440870
.L_4408b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4408c0:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_4408c8:

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+24]
            movapd XMM2,XMM3
            mov RDI,QWORD PTR [RAX]
            movapd XMM1,XMM4
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM4
            call .L_44c7f0

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RBX+176]
            movapd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_441290]
            mulsd XMM2,XMM4
            movsd XMM3,QWORD PTR [RSP+16]
            mulsd XMM3,QWORD PTR [RSP]
            mulsd XMM2,XMM4
            pxor XMM4,XMM4
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_440969
.L_44095b:

            divsd XMM3,XMM2
            add RSP,48
.L_440963:

            pop RBX
            movapd XMM0,XMM3
            ret 
.L_440969:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44095b
.L_440992:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4409a0:

            push RBX
            pxor XMM4,XMM4
            lea RAX,QWORD PTR [RIP+.L_440cc0]
            sub RSP,16
.L_4409b0:

            mov RBX,QWORD PTR [RDI+32]
            mov QWORD PTR [RDI+176],0
            movsd XMM3,QWORD PTR [RIP+.L_441290]
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_440b50]
            movsd XMM2,QWORD PTR [RBX+8]
            mov QWORD PTR [RDI+40],RAX
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RBX+16]
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_440a06
.L_4409f2:

            movsd QWORD PTR [RBX+32],XMM1
            divsd XMM1,XMM2
            movsd QWORD PTR [RBX+24],XMM1
            add RSP,16
.L_440a04:

            pop RBX
            ret 
.L_440a06:

            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM3,QWORD PTR [RBX+8]
            movapd XMM2,XMM3
            jmp .L_4409f2
.L_440a2c:

            nop
            nop
            nop
            nop
.L_440a30:

            push RBX
            mov RBX,RDI
            sub RSP,48
.L_440a38:

            mov RAX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+176]
            mov RDI,QWORD PTR [RDI]
            mov RSI,QWORD PTR [RAX]
            call .L_44c830

            movapd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_4412d0]
            movsd XMM3,QWORD PTR [RIP+.L_4412a0]
            ucomisd XMM3,XMM0
            ja .L_440ac0

            movapd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM2,QWORD PTR [RIP+.L_4412a8]
            ucomisd XMM3,XMM2
            jbe .L_440a90

            add RSP,48
.L_440a8c:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_440a90:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call .L_415fe0

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,48
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440ac0:

            movapd XMM0,XMM1
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBX+176]
            pxor XMM4,XMM4
            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_441290]
            subsd XMM0,XMM2
            ucomisd XMM4,XMM0
            sqrtsd XMM2,XMM0
            ja .L_440b28
.L_440b15:

            movsd XMM0,QWORD PTR [RSP]
            add RSP,48
.L_440b1e:

            pop RBX
            mulsd XMM0,XMM2
            divsd XMM0,XMM3
            ret 
.L_440b28:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_440b15
.L_440b4d:

            nop
            nop
            nop
.L_440b50:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,48
.L_440b63:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM7,QWORD PTR [RBP+8]
            movsd XMM3,QWORD PTR [RBP+16]
            ucomisd XMM7,QWORD PTR [RIP+.L_441298]
            movsd QWORD PTR [RSP+8],XMM7
            jp .L_440b8d

            je .L_440c40
.L_440b8d:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            lea R13,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM2
            lea R12,QWORD PTR [RSP+32]
            mov EBX,8
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM0
.L_440bc5:

            movapd XMM0,XMM2
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP],XMM2
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM4
            movsd XMM6,QWORD PTR [RIP+.L_4412b0]
            addsd XMM4,QWORD PTR [RSP+32]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RSP+40]
            subsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM4
            subsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_4412d0]
            ucomisd XMM6,XMM0
            ja .L_440c4c

            sub EBX,1
            jne .L_440bc5

            mov ESI,4294967276
            mov RDI,R14
            call .L_415fe0

            pxor XMM0,XMM0
            movapd XMM2,XMM0
            jmp .L_440c79
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440c40:

            ucomisd XMM3,QWORD PTR [RIP+.L_441290]
            jp .L_440c90

            jne .L_440c90
.L_440c4c:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RBP+24]
            mulsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM0,XMM1
.L_440c79:

            add RSP,48
.L_440c7d:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440c90:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            mov RDI,QWORD PTR [R14]
            mulsd XMM0,XMM3
            call .L_449c40

            movsd XMM5,QWORD PTR [RBP+8]
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP+8],XMM5
            jmp .L_440c4c
.L_440cc0:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM1
            sub RSP,40
.L_440ccd:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM2,QWORD PTR [RBX+8]
            divsd XMM3,QWORD PTR [RBX+32]
            ucomisd XMM2,QWORD PTR [RIP+.L_441298]
            movsd XMM1,QWORD PTR [RBX+16]
            jp .L_440d90

            jne .L_440d90

            ucomisd XMM1,QWORD PTR [RIP+.L_441290]
            jp .L_440d50

            jne .L_440d50

            movapd XMM1,XMM3
.L_440d09:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP]
            addsd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RBX+24]
            add RSP,40
.L_440d3c:

            pop RBX
            pop RBP
            divsd XMM5,XMM0
            movapd XMM0,XMM5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d50:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+16]
.L_440d6b:

            divsd XMM0,XMM1
            mov RDI,QWORD PTR [RBP]
            call .L_449c40

            movsd XMM2,QWORD PTR [RBX+8]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_440d09
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d90:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            addsd XMM0,XMM4
            jmp .L_440d6b
.L_440dcf:

            nop
.L_440dd0:

            test RDI,RDI
            je .L_440e08

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_440deb

            mov ESI,4294967257
            call .L_404af0
.L_440deb:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_440df9

            call .L_403ca0
.L_440df9:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440e08:

            xor EAX,EAX
            ret 
.L_440e0b:

            nop
            nop
            nop
            nop
            nop
.L_440e10:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,8
.L_440e23:

            call .L_403c70

            test RAX,RAX
            je .L_440ea8

            movsd XMM0,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_44c700

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_440ea8

            pxor XMM0,XMM0
            ucomisd XMM0,QWORD PTR [RBX+176]
            jp .L_440e5a

            je .L_440e80
.L_440e5a:

            lea RAX,QWORD PTR [RIP+.L_440a30]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4408c0]
            mov QWORD PTR [RBX+40],RAX
            add RSP,8
.L_440e74:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440e80:

            mov RAX,QWORD PTR [RIP+.L_441290]
            mov QWORD PTR [RBP+8],0
            mov RDI,RBX
            mov QWORD PTR [RBP+16],RAX
            call .L_4409a0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440ea8:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_440870
.L_440eb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440ec0:

            test RDI,RDI
            je .L_440ed0

            jmp .L_440e10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440ed0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_440efe

            lea RDX,QWORD PTR [RIP+.L_4408b0]
            lea RCX,QWORD PTR [RIP+.L_441220]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_440efe:

            add RSP,8
            ret 
.L_440f03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440f10:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_440f50

            mov RDX,QWORD PTR [RIP+.L_441290]
            mov RCX,QWORD PTR [RIP+.L_4412b8]
            mov RDI,RBX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            call .L_4409a0

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x90
.L_440f50:

            mov RDI,RBX
            pop RBX
            jmp .L_440870
.L_440f59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440f60:

            test RDI,RDI
            je .L_440f70

            jmp .L_440f10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440f70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_440f9e

            lea RDX,QWORD PTR [RIP+.L_4408b0]
            lea RCX,QWORD PTR [RIP+.L_441200]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_440f9e:

            add RSP,8
            ret 
.L_440fa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440fb0:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_440ff0

            mov RDX,QWORD PTR [RIP+.L_4412c0]
            mov RCX,QWORD PTR [RIP+.L_4412c8]
            mov RDI,RBX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            call .L_4409a0

            mov RAX,RBX
            pop RBX
            ret 

            nop
.L_440ff0:

            mov RDI,RBX
            pop RBX
            jmp .L_440870
.L_440ff9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441000:

            test RDI,RDI
            je .L_441010

            jmp .L_440fb0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441010:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44103e

            lea RDX,QWORD PTR [RIP+.L_4408b0]
            lea RCX,QWORD PTR [RIP+.L_4411c0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44103e:

            add RSP,8
            ret 
.L_441043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441050:

            push RBP
            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_441063:

            call .L_403c70

            test RAX,RAX
            je .L_4410b0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4411a3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            je .L_4410a2

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4411a6]
            call .L_4043f0

            test EAX,EAX
            jne .L_4410c0
.L_4410a2:

            mov RDI,RBX
.L_4410a5:

            add RSP,24
.L_4410a9:

            pop RBX
            pop RBP
            jmp .L_440dd0
.L_4410b0:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_440870
          .byte 0x66
          .byte 0x90
.L_4410c0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4411a9]
            call .L_4043f0

            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_4411ac]
            mov QWORD PTR [RBP+16],RAX
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,RBX
            ucomisd XMM1,QWORD PTR [RBP+16]
            movsd QWORD PTR [RBP+8],XMM0
            ja .L_4410a5

            ucomisd XMM1,XMM0
            ja .L_4410a5

            call .L_4409a0

            add RSP,24
.L_441117:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_44111d:

            nop
            nop
            nop
.L_441120:

            test RDI,RDI
            je .L_441130

            jmp .L_441050
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441130:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44115e

            lea RDX,QWORD PTR [RIP+.L_4408b0]
            lea RCX,QWORD PTR [RIP+.L_441260]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44115e:

            add RSP,8
            ret 
.L_441163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441170:

            xor EAX,EAX
            ret 
.L_441173:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441180:

            xor EAX,EAX
            ret 
.L_441183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441190:

            xor EAX,EAX
            ret 
.L_441193:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4411a0:

            xor EAX,EAX
            ret 
.L_4411a3:
          .string "tn"
.L_4411a6:
          .string "tm"
.L_4411a9:
          .string "dn"
.L_4411ac:
          .string "dm"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4411c0:
          .string "McBryde-Thomas Flat-Polar Sinusoidal\n\tPCyl, Sph."
          .zero 15
.L_441200:
          .string "Eckert VI\n\tPCyl, Sph."
          .zero 10
.L_441220:
          .string "Sinusoidal (Sanson-Flamsteed)\n\tPCyl, Sph&Ell"
          .zero 19
.L_441260:
          .string "General Sinusoidal Series\n\tPCyl, Sph.\n\tm= n="
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441290:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_441298:
          .zero 8
.L_4412a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4412a8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4412b0:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_4412b8:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0x4
          .byte 0x40
.L_4412c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4412c8:
          .byte 0x8c
          .byte 0x16
          .byte 0x22
          .byte 0xaa
          .byte 0xfd
          .byte 0x90
          .byte 0xfc
          .byte 0x3f
.L_4412d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4412e0:

            sub RSP,24
.L_4412e4:

            movapd XMM2,XMM1
            andpd XMM1,XMMWORD PTR [RIP+.L_4415a0]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM3,QWORD PTR [RIP+.L_44f380-56816]
            ucomisd XMM3,XMM1
            jae .L_441340

            mov RAX,QWORD PTR [RAX+8]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_441580]
            ucomisd XMM2,QWORD PTR [RIP+.L_441598]
            jb .L_441358
.L_44132e:

            subsd XMM1,XMM3
            add RSP,24
.L_441336:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441340:

            mov RAX,QWORD PTR [RAX]
            movapd XMM1,XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441358:

            movsd XMM3,QWORD PTR [RIP+.L_441588]
            jmp .L_44132e
.L_441362:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441370:

            movapd XMM2,XMM1
            sub RSP,8
            movsd XMM3,QWORD PTR [RIP+.L_44f380-56816]
            mov RAX,QWORD PTR [RDI+32]
            andpd XMM2,XMMWORD PTR [RIP+.L_4415a0]
            ucomisd XMM3,XMM2
            jb .L_4413a0

            mov RAX,QWORD PTR [RAX]
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            add RSP,8
            ret 
.L_4413a0:

            ucomisd XMM1,QWORD PTR [RIP+.L_441598]
            movsd XMM2,QWORD PTR [RIP+.L_441580]
            jae .L_4413ba

            movsd XMM2,QWORD PTR [RIP+.L_441588]
.L_4413ba:

            mov RAX,QWORD PTR [RAX+8]
            addsd XMM1,XMM2
            mov RDI,RAX
            call QWORD PTR [RAX+48]

            add RSP,8
            ret 
.L_4413cd:

            nop
            nop
            nop
.L_4413d0:

            test RDI,RDI
            je .L_441420

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_441411

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_4413f3

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_4413f3:

            mov RDI,QWORD PTR [RAX+8]
            test RDI,RDI
            je .L_441405

            call .L_403ca0

            mov RAX,QWORD PTR [RBX+32]
.L_441405:

            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_441411:

            jmp .L_403ca0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441420:

            xor EAX,EAX
            ret 
.L_441423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441430:

            jmp .L_4413d0
.L_441432:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441440:

            push RBP
            push RBX
            mov RBP,RDI
            mov ESI,16
            mov EDI,1
            sub RSP,8
.L_441453:

            call .L_403c70

            test RAX,RAX
            je .L_4414f0

            xor EDI,EDI
            mov QWORD PTR [RBP+32],RAX
            mov QWORD PTR [RBP+176],0
            mov RBX,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4414f0

            xor EDI,EDI
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_4414f0

            mov RDI,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBP]
            mov QWORD PTR [RDI],RDX
            mov RDX,QWORD PTR [RBP]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RAX],RDX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4414f0

            mov RDI,QWORD PTR [RBX+8]
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_4414f0

            lea RAX,QWORD PTR [RIP+.L_4412e0]
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_441370]
            mov QWORD PTR [RBP+48],RAX
            add RSP,8
.L_4414e7:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4414f0:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_4413d0
.L_4414fe:

            nop
            nop
.L_441500:

            test RDI,RDI
            je .L_441510

            jmp .L_441440
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441510:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44153e

            lea RDX,QWORD PTR [RIP+.L_441430]
            lea RCX,QWORD PTR [RIP+.L_441560]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44153e:

            add RSP,8
            ret 
.L_441543:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441550:

            xor EAX,EAX
            ret 
.L_441553:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441560:
          .string "Goode Homolosine\n\tPCyl, Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441580:
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x8
          .byte 0xab
          .byte 0x3f
.L_441588:

            and EAX,144310901
            stosd DWORD PTR [RDI]
            mov EDI,3913955908
            int1 
          .byte 0xbf
          .byte 0xe6
          .byte 0x3f
.L_441598:
          .zero 8
.L_4415a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4415b0:

            ucomisd XMM1,QWORD PTR [RIP+.L_442030]
            push RBX
            mov RDX,QWORD PTR [RDI+32]
            jb .L_441600

            movsd XMM2,QWORD PTR [RIP+.L_442038]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
.L_4415d0:

            cdqe 
            lea RBX,QWORD PTR [RDX+RAX*8]
            mov RAX,QWORD PTR [RBX]
            subsd XMM0,QWORD PTR [RAX+328]
            mov RDI,RAX
            call QWORD PTR [RAX+40]

            mov RAX,QWORD PTR [RBX]
            pop RBX
            addsd XMM0,QWORD PTR [RAX+344]
            addsd XMM1,QWORD PTR [RAX+352]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441600:

            ucomisd XMM1,QWORD PTR [RIP+.L_442040]
            jb .L_441620

            movsd XMM2,QWORD PTR [RIP+.L_442038]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,2
            jmp .L_4415d0
.L_441620:

            ucomisd XMM1,QWORD PTR [RIP+.L_442048]
            jb .L_441670

            movsd XMM2,QWORD PTR [RIP+.L_442050]
            mov EAX,4
            ucomisd XMM2,XMM0
            jae .L_4415d0

            movsd XMM2,QWORD PTR [RIP+.L_442058]
            mov EAX,5
            ucomisd XMM2,XMM0
            jae .L_4415d0

            movsd XMM2,QWORD PTR [RIP+.L_442060]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,6
            jmp .L_4415d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441670:

            movsd XMM2,QWORD PTR [RIP+.L_442050]
            mov EAX,8
            ucomisd XMM2,XMM0
            jae .L_4415d0

            movsd XMM2,QWORD PTR [RIP+.L_442058]
            mov EAX,9
            ucomisd XMM2,XMM0
            jae .L_4415d0

            movsd XMM2,QWORD PTR [RIP+.L_442060]
            xor EAX,EAX
            ucomisd XMM2,XMM0
            setb AL
            add EAX,10
            jmp .L_4415d0
.L_4416b7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4416c0:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_442070]
            movsd XMM3,QWORD PTR [RIP+.L_442078]
            addsd XMM2,QWORD PTR [RAX+96]
            movapd XMM4,XMM2
            addsd XMM4,XMM3
            ucomisd XMM1,XMM4
            ja .L_4416f1

            subsd XMM3,XMM2
            ucomisd XMM3,XMM1
            jbe .L_441700
.L_4416f1:

            movsd XMM0,QWORD PTR [RIP+.L_442068]
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0x90
.L_441700:

            push RBP
.L_441701:

            push RBX
            sub RSP,8
.L_441706:

            ucomisd XMM1,QWORD PTR [RIP+.L_442030]
            jae .L_441790

            ucomisd XMM1,QWORD PTR [RIP+.L_442040]
            jb .L_441960

            movsd XMM2,QWORD PTR [RIP+.L_442038]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,3
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,4
.L_441740:

            movsxd RDX,EDX
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [RBP]
            subsd XMM0,QWORD PTR [RAX+344]
            mov RDI,RAX
            subsd XMM1,QWORD PTR [RAX+352]
            call QWORD PTR [RAX+48]

            mov RAX,QWORD PTR [RBP]
            cmp EBX,12
            movapd XMM2,XMM1
            addsd XMM0,QWORD PTR [RAX+328]
            ja .L_441918

            lea RDX,QWORD PTR [RIP+.L_441fc0]
            movsxd RAX,DWORD PTR [RDX+RBX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441790:

            movsd XMM2,QWORD PTR [RIP+.L_442038]
            xor EDX,EDX
            ucomisd XMM2,XMM0
            setb DL
            sbb EBX,EBX
            not EBX
            add EBX,2
            jmp .L_441740
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4417b0:

            ucomisd XMM0,QWORD PTR [RIP+.L_442080]
            jb .L_4417e8

            movsd XMM2,QWORD PTR [RIP+.L_4420d0]
            ucomisd XMM2,XMM0
            jb .L_4417e8
.L_4417c8:

            add RSP,8
.L_4417cc:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4417d0:

            ucomisd XMM0,QWORD PTR [RIP+.L_4420d8]
            jb .L_4417e8

            movsd XMM2,QWORD PTR [RIP+.L_4420e0]
            ucomisd XMM2,XMM0
            jae .L_4417c8
.L_4417e8:

            movsd XMM0,QWORD PTR [RIP+.L_442068]
            add RSP,8
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441800:

            ucomisd XMM0,QWORD PTR [RIP+.L_4420e8]
            jb .L_4417e8

            movsd XMM2,QWORD PTR [RIP+.L_4420f0]
            ucomisd XMM2,XMM0
            jae .L_4417c8

            jmp .L_4417e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441820:

            ucomisd XMM0,QWORD PTR [RIP+.L_4420f8]
            jb .L_4417e8
.L_44182a:

            movsd XMM2,QWORD PTR [RIP+.L_4420b0]
            ucomisd XMM2,XMM0
            jae .L_4417c8

            jmp .L_4417e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441840:

            ucomisd XMM0,QWORD PTR [RIP+.L_442090]
            jb .L_44185c

            movsd XMM3,QWORD PTR [RIP+.L_4420b0]
            ucomisd XMM3,XMM0
            jae .L_4417c8
.L_44185c:

            ucomisd XMM0,QWORD PTR [RIP+.L_442080]
            jb .L_441890

            movsd XMM3,QWORD PTR [RIP+.L_4420b8]
            ucomisd XMM3,XMM0
            jb .L_441890

            ucomisd XMM2,QWORD PTR [RIP+.L_4420c0]
            jb .L_441890

            movsd XMM3,QWORD PTR [RIP+.L_4420a8]
            ucomisd XMM3,XMM2
            jae .L_4417c8
.L_441890:

            ucomisd XMM0,QWORD PTR [RIP+.L_4420c8]
            jb .L_4417e8

            movsd XMM3,QWORD PTR [RIP+.L_442088]
            ucomisd XMM3,XMM0
            jb .L_4417e8
.L_4418b0:

            ucomisd XMM2,QWORD PTR [RIP+.L_4420a0]
            jb .L_4417e8

            movsd XMM3,QWORD PTR [RIP+.L_4420a8]
            ucomisd XMM3,XMM2
            jae .L_4417c8

            jmp .L_4417e8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4418d8:

            ucomisd XMM0,QWORD PTR [RIP+.L_442090]
            jb .L_4417e8

            jmp .L_44182a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4418f0:

            ucomisd XMM0,QWORD PTR [RIP+.L_442080]
            jb .L_4417e8

            movsd XMM2,QWORD PTR [RIP+.L_442088]
            ucomisd XMM2,XMM0
            jae .L_4417c8

            jmp .L_4417e8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441918:

            ucomisd XMM0,QWORD PTR [RIP+.L_442080]
            jb .L_441934

            movsd XMM3,QWORD PTR [RIP+.L_442088]
            ucomisd XMM3,XMM0
            jae .L_4417c8
.L_441934:

            ucomisd XMM0,QWORD PTR [RIP+.L_442090]
            jb .L_4417e8

            movsd XMM3,QWORD PTR [RIP+.L_442098]
            ucomisd XMM3,XMM0
            jb .L_4417e8

            jmp .L_4418b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441960:

            ucomisd XMM1,QWORD PTR [RIP+.L_442048]
            movsd XMM2,QWORD PTR [RIP+.L_442050]
            jb .L_4419b0

            ucomisd XMM2,XMM0
            jae .L_4419f0

            movsd XMM2,QWORD PTR [RIP+.L_442058]
            ucomisd XMM2,XMM0
            jae .L_441a0f

            movsd XMM2,QWORD PTR [RIP+.L_442060]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,7
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,8
            jmp .L_441740
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4419b0:

            ucomisd XMM2,XMM0
            jae .L_441a00

            movsd XMM2,QWORD PTR [RIP+.L_442058]
            ucomisd XMM2,XMM0
            jae .L_441a1e

            movsd XMM2,QWORD PTR [RIP+.L_442060]
            ucomisd XMM2,XMM0
            sbb EDX,EDX
            not EDX
            add EDX,11
            ucomisd XMM2,XMM0
            sbb EBX,EBX
            not EBX
            add EBX,12
            jmp .L_441740
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4419f0:

            mov EDX,4
            mov EBX,5
            jmp .L_441740
          .byte 0x90
.L_441a00:

            mov EDX,8
            mov EBX,9
            jmp .L_441740
.L_441a0f:

            mov EDX,5
            mov EBX,6
            jmp .L_441740
.L_441a1e:

            mov EDX,9
            mov EBX,10
            jmp .L_441740
.L_441a2d:

            nop
            nop
            nop
.L_441a30:

            test RDI,RDI
            je .L_441a81

            push RBP
            push RBX
            mov RBP,RDI
            xor EBX,EBX
            sub RSP,8
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_441a73

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441a50:

            movsxd RAX,EBX
            mov RAX,QWORD PTR [RDI+RAX*8]
            test RAX,RAX
            je .L_441a66

            mov RDI,RAX
            call QWORD PTR [RAX+112]

            mov RDI,QWORD PTR [RBP+32]
.L_441a66:

            add EBX,1
            cmp EBX,12
            jne .L_441a50

            call .L_403ca0
.L_441a73:

            add RSP,8
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_403ca0
.L_441a81:

            xor EAX,EAX
            ret 
.L_441a84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441a90:

            jmp .L_441a30
.L_441a92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441aa0:

            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM4,XMM4
            mov ESI,104
            sub RSP,40
.L_441ab2:

            mov EDI,1
            movsd XMM5,QWORD PTR [RIP+.L_442030]
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            call .L_403c70

            test RAX,RAX
            je .L_441f48

            xor EDI,EDI
            mov QWORD PTR [RBP+32],RAX
            mov RBX,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_442050]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RIP+.L_442100]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_442108]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_442110]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+48],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RIP+.L_442118]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_440ec0

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RIP+.L_442120]
            xor EDI,EDI
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            mov RDI,RAX
            movapd XMM0,XMM3
            mov QWORD PTR [RAX+352],0
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_442050]
            movsd QWORD PTR [RSP+24],XMM3
            movapd XMM1,XMM2
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            call QWORD PTR [RAX+40]

            movsd XMM2,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM1,XMM2
            mov RDI,RAX
            movapd XMM0,XMM3
            call QWORD PTR [RAX+40]

            subsd XMM1,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX]
            xor EDI,EDI
            movsd QWORD PTR [RBX+96],XMM1
            movsd QWORD PTR [RAX+352],XMM1
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_441f48

            mov RDX,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RBX+96]
            xor EDI,EDI
            movsd QWORD PTR [RAX+352],XMM0
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_442100]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_441f48

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RSI,QWORD PTR [RIP+.L_442108]
            xorpd XMM0,XMMWORD PTR [RIP+.L_442130]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RSI
            mov QWORD PTR [RAX+328],RSI
            movsd QWORD PTR [RAX+352],XMM0
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_441f48

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RCX,QWORD PTR [RIP+.L_442110]
            xorpd XMM0,XMMWORD PTR [RIP+.L_442130]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            movsd QWORD PTR [RAX+352],XMM0
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            je .L_441f48

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xor EDI,EDI
            mov RCX,QWORD PTR [RIP+.L_442118]
            xorpd XMM0,XMMWORD PTR [RIP+.L_442130]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+344],RCX
            mov QWORD PTR [RAX+328],RCX
            movsd QWORD PTR [RAX+352],XMM0
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+88],RAX
            je .L_441f48

            mov RDI,RAX
            call .L_443940

            test RAX,RAX
            mov QWORD PTR [RBX+88],RAX
            je .L_441f48

            movsd XMM0,QWORD PTR [RBX+96]
            mov RDX,QWORD PTR [RBP]
            xorpd XMM0,XMMWORD PTR [RIP+.L_442130]
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [RIP+.L_442120]
            mov QWORD PTR [RAX+344],RDX
            mov QWORD PTR [RAX+328],RDX
            movsd QWORD PTR [RAX+352],XMM0
            lea RAX,QWORD PTR [RIP+.L_4416c0]
            mov QWORD PTR [RBP+176],0
            mov QWORD PTR [RBP+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4415b0]
            mov QWORD PTR [RBP+40],RAX
            add RSP,40
.L_441f3f:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441f48:

            add RSP,40
            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_441a30
.L_441f56:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f60:

            test RDI,RDI
            je .L_441f70

            jmp .L_441aa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441f70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_441f9e

            lea RDX,QWORD PTR [RIP+.L_441a90]
            lea RCX,QWORD PTR [RIP+.L_442000]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_441f9e:

            add RSP,8
            ret 
.L_441fa3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441fb0:

            xor EAX,EAX
            ret 
.L_441fb3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441fc0:
          .long .L_441918-.L_441fc0
          .long .L_441918-.L_441fc0
          .long .L_441840-.L_441fc0
          .long .L_4418f0-.L_441fc0
          .long .L_4418d8-.L_441fc0
          .long .L_4417b0-.L_441fc0
          .long .L_4417d0-.L_441fc0
          .long .L_441800-.L_441fc0
          .long .L_441820-.L_441fc0
          .long .L_4417b0-.L_441fc0
          .long .L_4417d0-.L_441fc0
          .long .L_441800-.L_441fc0
          .long .L_441820-.L_441fc0
          .zero 12
.L_442000:
          .string "Interrupted Goode Homolosine\n\tPCyl, Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442030:
          .byte 0x5b
          .byte 0xda
          .byte 0x9b
          .byte 0xe2
          .byte 0x69
          .byte 0xc0
          .byte 0xe6
          .byte 0x3f
.L_442038:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_442040:
          .zero 8
.L_442048:
          .byte 0x5b
          .byte 0xda
          .byte 0x9b
          .byte 0xe2
          .byte 0x69
          .byte 0xc0
          .byte 0xe6
          .byte 0xbf
.L_442050:
          .byte 0xa9
          .byte 0x15
          .byte 0xa1
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_442058:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_442060:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_442068:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_442070:

            int 59
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xf6
          .byte 0x3f
.L_442078:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_442080:
          .byte 0xb4
          .byte 0x9c
          .byte 0x47
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_442088:
          .byte 0x17
          .byte 0x86
          .byte 0xd9
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_442090:
          .byte 0xf7
          .byte 0x2
          .byte 0xf5
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xe6
          .byte 0xbf
.L_442098:
          .byte 0xc7
          .byte 0x4a
          .byte 0xb0
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xc6
          .byte 0xbf
.L_4420a0:
          .byte 0x2d
          .byte 0x94
          .byte 0x26
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xf0
          .byte 0x3f
.L_4420a8:
          .byte 0x50
          .byte 0xc
          .byte 0x4b
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4420b0:
          .byte 0xb4
          .byte 0x9c
          .byte 0x47
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_4420b8:
          .byte 0xeb
          .byte 0xd4
          .byte 0xe3
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0x6
          .byte 0xc0
.L_4420c0:
          .byte 0x39
          .byte 0x57
          .byte 0x93
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xeb
          .byte 0x3f
.L_4420c8:
          .byte 0x19
          .byte 0xd4
          .byte 0xae
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xeb
          .byte 0xbf
.L_4420d0:
          .byte 0x71
          .byte 0x36
          .byte 0x9a
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_4420d8:
          .byte 0xe1
          .byte 0xf4
          .byte 0xa7
          .byte 0x5d
          .byte 0xde
          .byte 0xec
          .byte 0xfb
          .byte 0xbf
.L_4420e0:
          .byte 0xa7
          .byte 0xc7
          .byte 0xcb
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_4420e8:
          .byte 0x67
          .byte 0xc1
          .byte 0x2
          .byte 0x4b
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0xbf
.L_4420f0:
          .byte 0xbf
          .byte 0x23
          .byte 0xee
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_4420f8:
          .byte 0x4f
          .byte 0x65
          .byte 0xe0
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xf6
          .byte 0x3f
.L_442100:

            jae .L_442130
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xe0
          .byte 0x3f
.L_442108:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0x6
          .byte 0xc0
.L_442110:

            jae .L_442140
          .byte 0x38
          .byte 0x52
          .byte 0xc1
          .byte 0xf0
          .byte 0xbf
.L_442118:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xd6
          .byte 0x3f
.L_442120:
          .byte 0xf6
          .byte 0x5b
          .byte 0x8a
          .byte 0x41
          .byte 0x35
          .byte 0x8c
          .byte 0x3
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442130:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_442140:

            test RDI,RDI
            je .L_442150

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442150:

            ret 
.L_442152:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442160:

            push R12
            push RBP
            push RBX
            sub RSP,48
.L_442168:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM1
            ja .L_442270

            movsd XMM2,QWORD PTR [RIP+.L_442638]
.L_442199:

            mulsd XMM0,XMM2
            mov EBX,20
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_4421bd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4421b8:

            sub EBX,1
            je .L_442214
.L_4421bd:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_442650]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_442658]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_4426d0]
            ucomisd XMM4,XMM2
            jbe .L_4421b8
.L_442214:

            mulsd XMM1,QWORD PTR [RIP+.L_442660]
            mov RSI,R12
            mov RDI,RBP
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            pxor XMM6,XMM6
            mulsd XMM0,QWORD PTR [RIP+.L_442668]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            ucomisd XMM6,XMM1
            mulsd XMM0,QWORD PTR [RSP+32]
            ja .L_442280

            movsd XMM1,QWORD PTR [RIP+.L_442648]
            add RSP,48
.L_442267:

            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            pop R12
            ret 
.L_442270:

            movsd XMM2,QWORD PTR [RIP+.L_442630]
            jmp .L_442199
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442280:

            movsd XMM1,QWORD PTR [RIP+.L_442640]
            add RSP,48
            pop RBX
            mulsd XMM1,XMM2
            pop RBP
            pop R12
            ret 
.L_442295:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4422a0:

            pxor XMM5,XMM5
            sub RSP,72
.L_4422a8:

            movapd XMM3,XMM0
            movapd XMM0,XMM1
            ucomisd XMM5,XMM1
            ja .L_442358

            mulsd XMM0,QWORD PTR [RIP+.L_4426a0]
            movq XMM4,QWORD PTR [RIP+.L_4426d0]
            movsd XMM6,QWORD PTR [RIP+.L_442650]
            movapd XMM2,XMM0
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            jbe .L_4424a0
.L_4422e4:

            ucomisd XMM2,QWORD PTR [RIP+.L_4426a8]
            ja .L_442450

            ucomisd XMM0,XMM5
            movsd XMM2,QWORD PTR [RIP+.L_442698]
            jbe .L_442470
.L_442304:

            mulsd XMM3,QWORD PTR [RIP+.L_4426b0]
            ucomisd XMM5,XMM1
            divsd XMM3,QWORD PTR [RIP+.L_4426c0]
            jbe .L_442531

            mulsd XMM2,QWORD PTR [RIP+.L_442670]
.L_442326:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call .L_415fe0

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            add RSP,72
.L_44234c:

            movapd XMM0,XMM3
            movapd XMM1,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442358:

            mulsd XMM0,QWORD PTR [RIP+.L_4426b8]
            movq XMM4,QWORD PTR [RIP+.L_4426d0]
            movsd XMM6,QWORD PTR [RIP+.L_442650]
            movapd XMM2,XMM0
            andpd XMM2,XMM4
            ucomisd XMM2,XMM6
            ja .L_4422e4

            movaps XMMWORD PTR [RSP+48],XMM4
            mov QWORD PTR [RSP+24],RDI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_4426b0]
            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_442670]
            addsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+40]
            movapd XMM4,XMMWORD PTR [RSP+48]
.L_44240e:

            mulsd XMM2,XMM1
            andpd XMM4,XMM2
            ucomisd XMM4,XMM6
            jbe .L_442480

            ucomisd XMM4,QWORD PTR [RIP+.L_4426a8]
            ja .L_442326

            ucomisd XMM2,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_442688]
            ja .L_442440

            movsd XMM1,QWORD PTR [RIP+.L_442680]
.L_442440:

            movapd XMM0,XMM3
            add RSP,72
.L_442448:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442450:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,72
            movapd XMM1,XMM0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442470:

            movsd XMM2,QWORD PTR [RIP+.L_442690]
            jmp .L_442304

            nop
            nop
            nop
.L_442480:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call asin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_442440
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4424a0:

            movaps XMMWORD PTR [RSP+48],XMM4
            mov QWORD PTR [RSP+24],RDI
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM3
            call asin@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM3,QWORD PTR [RIP+.L_4426b0]
            addsd XMM2,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            divsd XMM3,XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM3
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_442678]
            mov RDI,QWORD PTR [RSP+24]
            addsd XMM2,XMM0
            movapd XMM4,XMMWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+16]
            jmp .L_44240e
.L_442531:

            mulsd XMM2,QWORD PTR [RIP+.L_442678]
            jmp .L_442326
.L_44253e:

            nop
            nop
.L_442540:

            test RDI,RDI
            je .L_442570

            lea RAX,QWORD PTR [RIP+.L_4422a0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_442160]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442570:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44259e

            lea RDX,QWORD PTR [RIP+.L_442140]
            lea RCX,QWORD PTR [RIP+.L_442600]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44259e:

            add RSP,8
            ret 
.L_4425a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4425b0:

            lea RDX,QWORD PTR [RIP+.L_4422a0]
            lea RCX,QWORD PTR [RIP+.L_442160]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4425d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4425e0:

            xor EAX,EAX
            ret 
.L_4425e3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442600:
          .string "Hatano Asymmetrical Equal Area\n\tPCyl, Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x44
.L_44262e:

            add BYTE PTR [RAX],AL
.L_442630:

            jrcxz .L_44262e
          .byte 0x4d
          .byte 0x28
          .byte 0x44
          .byte 0x80
          .byte 0x3
          .byte 0x40
.L_442638:
          .byte 0x7f
          .byte 0xd9
          .byte 0x3d
          .byte 0x79
          .byte 0x58
          .byte 0x68
          .byte 0x5
          .byte 0x40
.L_442640:
          .byte 0xfa
          .byte 0x61
          .byte 0x84
          .byte 0xf0
          .byte 0x68
          .byte 0xe3
          .byte 0xfe
          .byte 0x3f
.L_442648:
          .byte 0x89
          .byte 0x29
          .byte 0x91
          .byte 0x44
          .byte 0x2f
          .byte 0x23
          .byte 0xfc
          .byte 0x3f
.L_442650:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_442658:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_442660:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_442668:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xeb
          .byte 0x3f
.L_442670:
          .byte 0x58
          .byte 0xd0
          .byte 0xab
          .byte 0x55
          .byte 0x48
          .byte 0x41
          .byte 0xda
          .byte 0x3f
.L_442678:
          .byte 0x20
          .byte 0x1c
          .byte 0x78
          .byte 0x76
          .byte 0xaf
          .byte 0xea
          .byte 0xd7
          .byte 0x3f
.L_442680:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_442688:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_442690:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_442698:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_4426a0:
          .byte 0x65
          .byte 0x5e
          .byte 0xb7
          .byte 0x1
          .byte 0x47
          .byte 0x32
          .byte 0xe2
          .byte 0x3f
.L_4426a8:
          .byte 0xb
          .byte 0x7a
          .byte 0x6f
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4426b0:
          .byte 0xd3
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xd2
          .byte 0xf2
          .byte 0x3f
.L_4426b8:
          .byte 0x4e
          .byte 0xb7
          .byte 0x6e
          .byte 0x91
          .byte 0x6a
          .byte 0x93
          .byte 0xe0
          .byte 0x3f
.L_4426c0:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4426d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4426e0:

            test RDI,RDI
            je .L_442708

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4426fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4426fe:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442708:

            xor EAX,EAX
            ret 
.L_44270b:

            nop
            nop
            nop
            nop
            nop
.L_442710:

            jmp .L_4426e0
.L_442712:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442720:

            push RBX
            movapd XMM3,XMM1
            sub RSP,16
.L_442729:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM5,QWORD PTR [RIP+.L_442a30]
            movsd XMM4,QWORD PTR [RIP+.L_442a40]
            subsd XMM3,QWORD PTR [RBX]
            movapd XMM2,XMM3
            andpd XMM2,XMM5
            ucomisd XMM4,XMM2
            ja .L_442798

            movsd XMM2,QWORD PTR [RIP+.L_442a48]
            pxor XMM6,XMM6
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_442a50]
            movapd XMM1,XMM2
            andpd XMM1,XMM5
            ucomisd XMM4,XMM1
            ja .L_442787

            subsd XMM1,QWORD PTR [RIP+.L_442a58]
            andpd XMM5,XMM1
            ucomisd XMM4,XMM5
            jbe .L_4427b0
.L_442787:

            add RSP,16
.L_44278b:

            movapd XMM0,XMM6
            movapd XMM1,XMM3
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442798:

            movsd XMM6,QWORD PTR [RBX+8]
            add RSP,16
            movapd XMM1,XMM3
            mulsd XMM6,XMM0
            pop RBX
            movapd XMM0,XMM6
            ret 
          .byte 0x90
.L_4427b0:

            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call tan@PLT

            divsd XMM0,QWORD PTR [RBX+16]
            call log@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RSP]
            add RSP,16
            movapd XMM1,XMM3
            mulsd XMM6,XMM3
            pop RBX
            divsd XMM6,XMM0
            movapd XMM0,XMM6
            ret 
.L_4427ef:

            nop
.L_4427f0:

            push RBX
            movapd XMM5,XMM1
            sub RSP,32
.L_4427f9:

            mov RBX,QWORD PTR [RDI+32]
            movq XMM3,QWORD PTR [RIP+.L_442a30]
            movsd XMM2,QWORD PTR [RIP+.L_442a40]
            andpd XMM5,XMM3
            movsd XMM4,QWORD PTR [RBX]
            ucomisd XMM2,XMM5
            addsd XMM4,XMM1
            ja .L_442868

            movsd XMM7,QWORD PTR [RIP+.L_442a48]
            pxor XMM6,XMM6
            mulsd XMM7,XMM4
            addsd XMM7,QWORD PTR [RIP+.L_442a50]
            movapd XMM5,XMM7
            andpd XMM5,XMM3
            ucomisd XMM2,XMM5
            ja .L_442857

            subsd XMM5,QWORD PTR [RIP+.L_442a58]
            andpd XMM3,XMM5
            ucomisd XMM2,XMM3
            jbe .L_442880
.L_442857:

            add RSP,32
.L_44285b:

            movapd XMM0,XMM6
            movapd XMM1,XMM4
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442868:

            movapd XMM6,XMM0
            movapd XMM1,XMM4
            divsd XMM6,QWORD PTR [RBX+8]
            add RSP,32
            pop RBX
            movapd XMM0,XMM6
            ret 
          .byte 0x90
.L_442880:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM7
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM1
            call tan@PLT

            divsd XMM0,QWORD PTR [RBX+16]
            call log@PLT

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+24]
            mulsd XMM6,XMM0
            movapd XMM1,XMM4
            divsd XMM6,QWORD PTR [RSP+16]
            add RSP,32
.L_4428c3:

            pop RBX
            movapd XMM0,XMM6
            ret 
.L_4428c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4428d0:

            push RBP
            push RBX
            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            sub RSP,24
.L_4428e3:

            call .L_403c70

            test RAX,RAX
            je .L_44299d

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_442a03]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM1
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RIP+.L_442a40]
            movsd QWORD PTR [RBP+8],XMM0
            ucomisd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            ja .L_442990

            mulsd XMM1,QWORD PTR [RIP+.L_442a48]
            movsd XMM0,QWORD PTR [RIP+.L_442a50]
            addsd XMM0,XMM1
            call tan@PLT

            lea RAX,QWORD PTR [RIP+.L_4427f0]
            movsd QWORD PTR [RBP+16],XMM0
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_442720]
            mov QWORD PTR [RBX+40],RAX
            add RSP,24
.L_442980:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442990:

            mov ESI,4294967274
            mov RDI,RBX
            call .L_415fe0
.L_44299d:

            add RSP,24
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4426e0
.L_4429ab:

            nop
            nop
            nop
            nop
            nop
.L_4429b0:

            test RDI,RDI
            je .L_4429c0

            jmp .L_4428d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4429c0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4429ee

            lea RDX,QWORD PTR [RIP+.L_442710]
            lea RCX,QWORD PTR [RIP+.L_442a10]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4429ee:

            add RSP,8
            ret 
.L_4429f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442a00:

            xor EAX,EAX
            ret 
.L_442a03:
          .string "rlat_1"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442a10:
          .string "Loximuthal\n\tPCyl Sph"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_442a30:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442a40:
          .byte 0x3a
          .byte 0x8c
          .byte 0x30
          .byte 0xe2
          .byte 0x8e
          .byte 0x79
          .byte 0x45
          .byte 0x3e
.L_442a48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_442a50:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_442a58:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_442a60:

            test RDI,RDI
            je .L_442a70

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442a70:

            ret 
.L_442a72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442a80:

            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,64
.L_442a8d:

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_442db8]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
.L_442ac0:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+24],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            mov RSI,R12
            movsd XMM3,QWORD PTR [RSP+48]
            mov RDI,RBP
            movapd XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+56]
            divsd XMM0,QWORD PTR [RIP+.L_442dc0]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_442dc8]
            movsd XMM2,QWORD PTR [RIP+.L_442dd0]
            mulsd XMM0,QWORD PTR [RSP+56]
            mulsd XMM2,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RIP+.L_442dd8]
            addsd XMM0,QWORD PTR [RSP+16]
            addsd XMM2,QWORD PTR [RSP+8]
            subsd XMM0,QWORD PTR [RSP+32]
            divsd XMM0,XMM2
            subsd XMM1,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_442e00]
            ucomisd XMM6,XMM0
            ja .L_442b65

            sub EBX,1
            jne .L_442ac0
.L_442b65:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            divsd XMM0,QWORD PTR [RIP+.L_442dc0]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM0,XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_442de0]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RIP+.L_442df0]
            divsd XMM0,QWORD PTR [RSP+48]
            addsd XMM0,QWORD PTR [RIP+.L_442de8]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_442df8]
            mulsd XMM1,QWORD PTR [RSP+56]
            add RSP,64
.L_442bcb:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_442bd0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_442bdb:

            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            divsd XMM0,QWORD PTR [RIP+.L_442df8]
            call .L_449c40

            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+16],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM4,QWORD PTR [RSP+32]
            mov RDI,RBP
            mulsd XMM1,QWORD PTR [RIP+.L_442dc0]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RIP+.L_442de0]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RIP+.L_442dc8]
            movsd XMM0,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM1,QWORD PTR [RSP]
            addsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RIP+.L_442db8]
            addsd XMM1,QWORD PTR [RIP+.L_442de8]
            mulsd XMM1,QWORD PTR [RIP+.L_442df0]
            divsd XMM3,XMM1
            movsd QWORD PTR [RSP],XMM3
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP]
            add RSP,48
.L_442ca7:

            movapd XMM1,XMM0
            pop RBX
            movapd XMM0,XMM3
            pop RBP
            pop R12
            ret 
.L_442cb4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442cc0:

            test RDI,RDI
            je .L_442cf0

            lea RAX,QWORD PTR [RIP+.L_442bd0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_442a80]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442cf0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_442d1e

            lea RDX,QWORD PTR [RIP+.L_442a60]
            lea RCX,QWORD PTR [RIP+.L_442d80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_442d1e:

            add RSP,8
            ret 
.L_442d23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442d30:

            lea RDX,QWORD PTR [RIP+.L_442bd0]
            lea RCX,QWORD PTR [RIP+.L_442a80]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_442d55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442d60:

            xor EAX,EAX
            ret 
.L_442d63:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442d80:
          .string "McBryde-Thomas Flat-Pole Sine (No. 2)\n\tCyl., Sph."
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442db8:
          .byte 0x12
          .byte 0xbd
          .byte 0x8c
          .byte 0x62
          .byte 0xb9
          .byte 0xa5
          .byte 0xf6
          .byte 0x3f
.L_442dc0:
          .byte 0xd6
          .byte 0x8b
          .byte 0xa1
          .byte 0x9c
          .byte 0x68
          .byte 0xd7
          .byte 0xf5
          .byte 0x3f
.L_442dc8:
          .byte 0x73
          .byte 0xba
          .byte 0x2c
          .byte 0x26
          .byte 0x36
          .byte 0x1f
          .byte 0xdd
          .byte 0x3f
.L_442dd0:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_442dd8:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_442de0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_442de8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_442df0:
          .byte 0x60
          .byte 0xcd
          .byte 0x1
          .byte 0x82
          .byte 0x39
          .byte 0x7a
          .byte 0xcc
          .byte 0x3f
.L_442df8:
          .byte 0x91
          .byte 0x61
          .byte 0x15
          .byte 0x6f
          .byte 0x64
          .byte 0x1e
          .byte 0xf7
          .byte 0x3f
.L_442e00:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442e10:

            test RDI,RDI
            je .L_442e20

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442e20:

            ret 
.L_442e22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442e30:

            sub RSP,40
.L_442e34:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_443150]
            call asin@PLT

            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_443158]
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_443160]
            movapd XMM0,XMM1
            call sin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            addsd XMM2,XMM2
            mulsd XMM3,QWORD PTR [RIP+.L_443168]
            mulsd XMM1,QWORD PTR [RIP+.L_443178]
            subsd XMM2,QWORD PTR [RIP+.L_443170]
            add RSP,40
.L_442eb0:

            movapd XMM0,XMM3
            mulsd XMM0,XMM2
            ret 
.L_442eb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442ec0:

            sub RSP,56
.L_442ec4:

            movapd XMM2,XMM0
            divsd XMM1,QWORD PTR [RIP+.L_443178]
            movq XMM3,QWORD PTR [RIP+.L_4431c0]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_443170]
            jb .L_442f60

            ucomisd XMM0,QWORD PTR [RIP+.L_4431a0]
            ja .L_442f40

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_443030

            movsd XMM1,QWORD PTR [RIP+.L_443198]
.L_442f0a:

            divsd XMM2,QWORD PTR [RIP+.L_4431b0]
.L_442f12:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+32]
            add RSP,56
.L_442f38:

            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_442f40:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,56
            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_442f60:

            movapd XMM0,XMM1
            mov QWORD PTR [RSP+40],RDI
            movaps XMMWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM4,QWORD PTR [RIP+.L_4431a8]
            mulsd XMM4,XMM0
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+32],XMM4
            mulsd XMM0,QWORD PTR [RIP+.L_443158]
            call cos@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+32]
            movapd XMM1,XMM0
            movapd XMM0,XMM4
            subsd XMM1,QWORD PTR [RIP+.L_443170]
            mulsd XMM1,QWORD PTR [RIP+.L_443168]
            divsd XMM2,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sin@PLT

            movapd XMM1,XMM0
            movapd XMM3,XMMWORD PTR [RSP+16]
            divsd XMM1,QWORD PTR [RIP+.L_443150]
            movsd XMM2,QWORD PTR [RSP+8]
            andpd XMM3,XMM1
            ucomisd XMM3,QWORD PTR [RIP+.L_443170]
            jb .L_443040

            ucomisd XMM3,QWORD PTR [RIP+.L_4431a0]
            mov RDI,QWORD PTR [RSP+40]
            ja .L_442f12

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_443060

            movsd XMM1,QWORD PTR [RIP+.L_443180]
.L_44301e:

            movapd XMM0,XMM2
            add RSP,56

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443030:

            movsd XMM1,QWORD PTR [RIP+.L_443190]
            jmp .L_442f0a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443040:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_44301e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443060:

            movsd XMM1,QWORD PTR [RIP+.L_443188]
            jmp .L_44301e
.L_44306a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_443070:

            test RDI,RDI
            je .L_4430a0

            lea RAX,QWORD PTR [RIP+.L_442ec0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_442e30]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4430a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4430ce

            lea RDX,QWORD PTR [RIP+.L_442e10]
            lea RCX,QWORD PTR [RIP+.L_443120]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4430ce:

            add RSP,8
            ret 
.L_4430d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4430e0:

            lea RDX,QWORD PTR [RIP+.L_442ec0]
            lea RCX,QWORD PTR [RIP+.L_442e30]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_443105:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443110:

            xor EAX,EAX
            ret 
.L_443113:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443120:
          .string "McBride-Thomas Flat-Polar Parabolic\n\tCyl., Sph."
.L_443150:
          .byte 0xf3
          .byte 0x88
          .byte 0x63
          .byte 0xad
          .byte 0x87
          .byte 0x7b
          .byte 0xee
          .byte 0x3f
.L_443158:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xe5
          .byte 0x3f
.L_443160:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_443168:
          .byte 0x4
          .byte 0x15
          .byte 0x50
          .byte 0x79
          .byte 0x51
          .byte 0xa0
          .byte 0xed
          .byte 0x3f
.L_443170:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_443178:
          .byte 0xe3
          .byte 0xf6
          .byte 0x7c
          .byte 0x23
          .byte 0xa4
          .byte 0x36
          .byte 0xb
          .byte 0x40
.L_443180:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_443188:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_443190:
          .byte 0x3
          .byte 0x41
          .byte 0xe3
          .byte 0x7e
          .byte 0xe7
          .byte 0xcb
          .byte 0xf0
          .byte 0x3f
.L_443198:
          .byte 0x3
          .byte 0x41
          .byte 0xe3
          .byte 0x7e
          .byte 0xe7
          .byte 0xcb
          .byte 0xf0
          .byte 0xbf
.L_4431a0:
          .byte 0x9b
          .byte 0xf2
          .byte 0xd7
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4431a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_4431b0:

            ret 
          .byte 0xf
          .byte 0xfc
          .byte 0x1a
          .byte 0x3d
          .byte 0x38
          .byte 0x6
          .byte 0xc0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4431c0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4431d0:

            test RDI,RDI
            je .L_4431e0

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4431e0:

            ret 
.L_4431e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4431f0:

            push R12
            push RBP
            push RBX
            mov EBX,20
            sub RSP,64
.L_4431fd:

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_443610]
            movsd QWORD PTR [RSP+32],XMM0
            jmp .L_443239
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443230:

            sub EBX,1
            je .L_4432d3
.L_443239:

            movsd XMM0,QWORD PTR [RSP+8]
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_443618]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+8]
            addsd XMM1,QWORD PTR [RSP+56]
            movsd XMM5,QWORD PTR [RIP+.L_443620]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_443618]
            subsd XMM0,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RSP+48]
            addsd XMM1,QWORD PTR [RSP+16]
            divsd XMM0,XMM1
            subsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_443690]
            movsd QWORD PTR [RSP+8],XMM2
            ucomisd XMM5,XMM0
            jbe .L_443230
.L_4432d3:

            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            movsd QWORD PTR [RSP+16],XMM0
            mov RSI,R12
            mov RDI,RBP
            movsd XMM0,QWORD PTR [RIP+.L_443618]
            mulsd XMM0,QWORD PTR [RSP+8]
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            addsd XMM1,XMM1
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+40]
            divsd XMM0,QWORD PTR [RSP+48]
            mulsd XMM1,QWORD PTR [RIP+.L_443630]
            addsd XMM0,QWORD PTR [RIP+.L_443628]
            mulsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_443638]
            mulsd XMM1,QWORD PTR [RSP+56]
            add RSP,64
.L_44333d:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_443342:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443350:

            push RBX
            movapd XMM2,XMM0
            mov RBX,RDI
            sub RSP,80
.L_44335c:

            mulsd XMM1,QWORD PTR [RIP+.L_443660]
            movq XMM3,QWORD PTR [RIP+.L_443690]
            movsd XMM4,QWORD PTR [RIP+.L_443628]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            ucomisd XMM0,XMM4
            jbe .L_443400

            ucomisd XMM0,QWORD PTR [RIP+.L_443668]
            ja .L_4433d8

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_4434d8

            movsd XMM1,QWORD PTR [RIP+.L_44f380-48424]
.L_4433a2:

            mulsd XMM2,QWORD PTR [RIP+.L_443678]
            divsd XMM2,QWORD PTR [RIP+.L_443680]
.L_4433b2:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call asin@PLT

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
.L_4433cb:

            add RSP,80
.L_4433cf:

            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4433d8:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415fe0

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,80
            pxor XMM0,XMM0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443400:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+56],XMM4
            movaps XMMWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+48],XMM2
            movsd QWORD PTR [RSP+24],XMM1
            call asin@PLT

            movapd XMM5,XMM0
            addsd XMM5,XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM0,QWORD PTR [RIP+.L_443618]
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+64]
            movapd XMM0,XMM5
            call sincos@PLT

            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM1,QWORD PTR [RSP+24]
            addsd XMM5,XMM5
            movapd XMM3,XMMWORD PTR [RSP+32]
            addsd XMM1,QWORD PTR [RSP+72]
            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+56]
            divsd XMM5,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RIP+.L_443670]
            mulsd XMM2,QWORD PTR [RIP+.L_443678]
            addsd XMM5,XMM4
            andpd XMM3,XMM1
            ucomisd XMM3,XMM4
            divsd XMM2,XMM5
            jbe .L_4433b2

            ucomisd XMM3,QWORD PTR [RIP+.L_443668]
            ja .L_4434e8

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_443520

            movsd XMM1,QWORD PTR [RIP+.L_443640]
            jmp .L_4433cb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4434d8:

            movsd XMM1,QWORD PTR [RIP+.L_44f380-48432]
            jmp .L_4433a2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4434e8:

            mov RDI,RBX
            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,80
.L_443511:

            movapd XMM0,XMM2
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443520:

            movsd XMM1,QWORD PTR [RIP+.L_443648]
            jmp .L_4433cb
.L_44352d:

            nop
            nop
            nop
.L_443530:

            test RDI,RDI
            je .L_443560

            lea RAX,QWORD PTR [RIP+.L_443350]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4431f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443560:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44358e

            lea RDX,QWORD PTR [RIP+.L_4431d0]
            lea RCX,QWORD PTR [RIP+.L_4435e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44358e:

            add RSP,8
            ret 
.L_443593:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4435a0:

            lea RDX,QWORD PTR [RIP+.L_443350]
            lea RCX,QWORD PTR [RIP+.L_4431f0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4435c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4435d0:

            xor EAX,EAX
            ret 
.L_4435d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4435e0:

            movsxd R8,DWORD PTR [R10+114]
            jns .L_44364a
          .byte 0x65
          .byte 0x2d
          .byte 0x54
          .byte 0x68
          .byte 0x6f
          .byte 0x6d
          .byte 0x61
          .byte 0x73
          .byte 0x20
          .byte 0x46
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x2d
          .byte 0x50
          .byte 0x6f
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x51
          .byte 0x75
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x69
          .byte 0x63
          .byte 0xa
          .byte 0x9
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_443610:
          .byte 0xe6
          .byte 0x9d
          .byte 0x3f
          .byte 0x33
          .byte 0x4f
          .byte 0x50
          .byte 0xfb
          .byte 0x3f
.L_443618:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_443620:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_443628:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_443630:
          .byte 0x1a
          .byte 0x2b
          .byte 0x59
          .byte 0x7
          .byte 0x57
          .byte 0xff
          .byte 0xd3
          .byte 0x3f
.L_443638:
          .byte 0xa7
          .byte 0xc0
          .byte 0x5
          .byte 0x8b
          .byte 0x2
          .byte 0xff
          .byte 0xfd
          .byte 0x3f
.L_443640:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_443648:
          .byte 0x18
          .byte 0x2d
.L_44364a:

            push RSP
            sti 
            and ECX,EDI
            mov EDI,855738472
            ret 

            mov ESI,2288566242
            add DWORD PTR [RBX],ESI
            ret 
          .byte 0xbe
          .byte 0xe2
          .byte 0x3f
.L_443660:
          .byte 0x82
          .byte 0x29
          .byte 0x2b
          .byte 0x46
          .byte 0xa1
          .byte 0x11
          .byte 0xe1
          .byte 0x3f
.L_443668:
          .byte 0xb
          .byte 0x7a
          .byte 0x6f
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_443670:
          .byte 0x67
          .byte 0x88
          .byte 0x1
          .byte 0x33
          .byte 0xc3
          .byte 0xbe
          .byte 0xe2
          .byte 0x3f
.L_443678:

            mov R14D,2591156544
            or DWORD PTR [RAX-75],EAX
            int 49
# WARNING: found overlapping blocks at address 43450
.set .L_443680, . - 3

            jl 275435
            add BL,BYTE PTR [RBP-61]
# WARNING: found overlapping blocks at address 43453
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
# WARNING: found overlapping blocks at address 43458
.L_443690:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
# WARNING: found overlapping blocks at address 43460
.L_4436a0:

            test RDI,RDI
            je .L_4436c8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4436be

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4436be:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4436c8:

            xor EAX,EAX
            ret 
.L_4436cb:

            nop
            nop
            nop
            nop
            nop
.L_4436d0:

            jmp .L_4436a0
.L_4436d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4436e0:

            push R13
            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_4436ef:

            mov R13,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            mulsd XMM0,QWORD PTR [R13+16]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            nop
            nop
            nop
            nop
.L_443728:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_443bb8]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_443bd0]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_443c30]
            ucomisd XMM4,XMM2
            ja .L_4437a0

            sub EBX,1
            jne .L_443728

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_4437e8

            movsd XMM1,QWORD PTR [RIP+.L_443bb8]
            movsd XMM2,QWORD PTR [RIP+.L_443bc0]
            jmp .L_4437c3
.L_4437a0:

            mulsd XMM1,QWORD PTR [RIP+.L_443bd8]
            mov RSI,R12
            mov RDI,RBP
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
.L_4437c3:

            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM1,QWORD PTR [R13+8]
            mulsd XMM0,QWORD PTR [R13]
            add RSP,56
.L_4437d9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            mulsd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4437e8:

            movsd XMM1,QWORD PTR [RIP+.L_443bc8]
            movsd XMM2,QWORD PTR [RIP+.L_443bc0]
            jmp .L_4437c3
.L_4437fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_443800:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_443809:

            mov RBP,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+8],XMM0
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call .L_449c40

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBP]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_443be8]
            movsd XMM1,QWORD PTR [RSP]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_443c30]
            ucomisd XMM3,XMM0
            ja .L_443878

            movsd XMM1,QWORD PTR [RIP+.L_443be0]
            add RSP,24
.L_443868:

            pop RBX
            movapd XMM2,XMM1
            pop RBP
            movapd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443878:

            addsd XMM1,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RBX]
            addsd XMM1,XMM0
            divsd XMM1,QWORD PTR [RBP+16]
            movapd XMM0,XMM1
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_4438bf:

            nop
.L_4438c0:

            push RBX
.L_4438c1:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_443928

            mov RDX,QWORD PTR [RIP+.L_443bf0]
            mov RCX,QWORD PTR [RIP+.L_443bf8]
            mov RSI,QWORD PTR [RIP+.L_443be8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_443800]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4436e0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_443921:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443928:

            mov RDI,RBX
            pop RBX
            jmp .L_4436a0
.L_443931:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443940:

            test RDI,RDI
            je .L_443950

            jmp .L_4438c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443950:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44397e

            lea RDX,QWORD PTR [RIP+.L_4436d0]
            lea RCX,QWORD PTR [RIP+.L_443ba0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44397e:

            add RSP,8
            ret 
.L_443983:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443990:

            push RBX
.L_443991:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4439f8

            mov RDX,QWORD PTR [RIP+.L_44f380-46976]
            mov RCX,QWORD PTR [RIP+.L_443c08]
            mov RSI,QWORD PTR [RIP+.L_443c10]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_443800]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4436e0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_4439f1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4439f8:

            mov RDI,RBX
            pop RBX
            jmp .L_4436a0
.L_443a01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443a10:

            test RDI,RDI
            je .L_443a20

            jmp .L_443990
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443a20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_443a4e

            lea RDX,QWORD PTR [RIP+.L_4436d0]
            lea RCX,QWORD PTR [RIP+.L_443b80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_443a4e:

            add RSP,8
            ret 
.L_443a53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443a60:

            push RBX
.L_443a61:

            mov ESI,24
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_443ac8

            mov RDX,QWORD PTR [RIP+.L_443c18]
            mov RCX,QWORD PTR [RIP+.L_443c20]
            mov RSI,QWORD PTR [RIP+.L_443c28]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RAX+16],RSI
            lea RAX,QWORD PTR [RIP+.L_443800]
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4436e0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_443ac1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443ac8:

            mov RDI,RBX
            pop RBX
            jmp .L_4436a0
.L_443ad1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443ae0:

            test RDI,RDI
            je .L_443af0

            jmp .L_443a60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443af0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_443b1e

            lea RDX,QWORD PTR [RIP+.L_4436d0]
            lea RCX,QWORD PTR [RIP+.L_443b60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_443b1e:

            add RSP,8
            ret 
.L_443b23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443b30:

            xor EAX,EAX
            ret 
.L_443b33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443b40:

            xor EAX,EAX
            ret 
.L_443b43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443b50:

            xor EAX,EAX
            ret 
.L_443b53:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443b60:
          .string "Wagner V\n\tPCyl., Sph."
          .zero 10
.L_443b80:
          .string "Wagner IV\n\tPCyl., Sph."
          .zero 9
.L_443ba0:
          .string "Mollweide\n\tPCyl., Sph."
          .byte 0x90
.L_443bb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_443bc0:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
.L_443bc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_443bd0:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_443bd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_443be0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_443be8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_443bf0:
          .byte 0x22
          .byte 0x66
          .byte 0xbe
          .byte 0x29
          .byte 0x64
          .byte 0xcf
          .byte 0xec
          .byte 0x3f
.L_443bf8:

            int 59

            jg .L_443c62

            sahf 
            movabs AL,BYTE PTR [-7027389048048500746]
          .byte 0xeb
          .byte 0x3f
.L_443c08:
          .byte 0x26
          .byte 0x68
          .byte 0xc3
          .byte 0x3d
          .byte 0x36
          .byte 0xc
          .byte 0xf9
          .byte 0x3f
.L_443c10:
          .byte 0x90
          .byte 0x86
          .byte 0x43
          .byte 0xf2
          .byte 0xf0
          .byte 0xae
          .byte 0x7
          .byte 0x40
.L_443c18:
          .byte 0xb0
          .byte 0x38
          .byte 0x9c
          .byte 0xf9
          .byte 0xd5
          .byte 0x1c
          .byte 0xed
          .byte 0x3f
.L_443c20:
          .byte 0x9e
          .byte 0x24
          .byte 0x5d
          .byte 0x33
          .byte 0xf9
          .byte 0x66
          .byte 0xfa
          .byte 0x3f
.L_443c28:
          .byte 0xfc
          .byte 0xc6
          .byte 0xd7
          .byte 0x9e
          .byte 0x59
          .byte 0x12
          .byte 0x8
          .byte 0x40
.L_443c30:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443c40:

            test RDI,RDI
            je .L_443c50

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443c50:

            ret 
.L_443c52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443c60:

            push R12
.L_443c62:

            push RBP
            push RBX
            mov EBX,10
            sub RSP,48
.L_443c6d:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea R12,QWORD PTR [RSP+40]
            lea RBP,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM0,XMM0
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_443eb8]
            mulsd XMM0,XMM2
            subsd XMM0,QWORD PTR [RIP+.L_443ec0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_443ec8]
            mulsd XMM1,XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443cd0:

            movapd XMM0,XMM1
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_443ed0]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_443ed8]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_443ef0]
            ucomisd XMM4,XMM2
            ja .L_443d2c

            sub EBX,1
            jne .L_443cd0
.L_443d2c:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RIP+.L_443ed0]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RIP+.L_443ee0]
            add RSP,48
.L_443d5b:

            pop RBX
            pop RBP
            pop R12
            mulsd XMM0,XMM2
            ret 
.L_443d64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443d70:

            push RBX
            mov RBX,RDI
            sub RSP,32

            movsd QWORD PTR [RSP],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_443ed0]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM2,XMM2
            addsd XMM1,QWORD PTR [RSP+24]
            divsd XMM2,XMM0
            mulsd XMM1,QWORD PTR [RIP+.L_443ee0]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_443de9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443df0:

            test RDI,RDI
            je .L_443e20

            lea RAX,QWORD PTR [RIP+.L_443d70]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_443c60]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443e20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_443e4e

            lea RDX,QWORD PTR [RIP+.L_443c40]
            lea RCX,QWORD PTR [RIP+.L_443ea0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_443e4e:

            add RSP,8
            ret 
.L_443e53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443e60:

            lea RDX,QWORD PTR [RIP+.L_443d70]
            lea RCX,QWORD PTR [RIP+.L_443c60]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_443e85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443e90:

            xor EAX,EAX
            ret 
.L_443e93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443ea0:

            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            or CL,BYTE PTR [RCX]
            push RAX
            jns .L_443f16
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443eb8:
          .byte 0xd
          .byte 0x70
          .byte 0x41
          .byte 0xb6
          .byte 0x2c
          .byte 0x5f
          .byte 0x87
          .byte 0xbf
.L_443ec0:
          .byte 0xaf
          .byte 0x3c
          .byte 0xed
          .byte 0x95
          .byte 0x1e
          .byte 0xf2
          .byte 0xb7
          .byte 0x3f
.L_443ec8:
          .byte 0xc9
          .byte 0xb0
          .byte 0x8a
          .byte 0x37
          .byte 0x32
          .byte 0xf
          .byte 0xf0
          .byte 0x3f
.L_443ed0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_443ed8:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_443ee0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443ef0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443f00:

            test RDI,RDI
            je .L_443f10

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443f10:

            ret 
.L_443f12:

            nop
            nop
            nop
            nop
.L_443f16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443f20:

            sub RSP,40
.L_443f24:

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RIP+.L_4441b0]
            movsd QWORD PTR [RSP+24],XMM0
            mulsd XMM4,XMM1
            movapd XMM0,XMM4
            call tan@PLT

            movsd XMM2,QWORD PTR [RIP+.L_4441b0]
            movsd XMM3,QWORD PTR [RSP+24]
            mulsd XMM2,QWORD PTR [RSP+8]
            addsd XMM3,QWORD PTR [RIP+.L_4441b8]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,40
.L_443f80:

            subsd XMM1,XMM0
            mulsd XMM2,XMM3
            addsd XMM1,XMM1
            movapd XMM0,XMM2
            ret 
.L_443f91:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443fa0:

            push RBX
            pxor XMM4,XMM4
            mov EBX,9
            sub RSP,48
.L_443fae:

            movsd XMM3,QWORD PTR [RIP+.L_4441b0]
            movsd QWORD PTR [RSP+40],XMM0
            mulsd XMM1,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_4441b8]
            movsd QWORD PTR [RSP+32],XMM1
            pxor XMM1,XMM1
            jmp .L_444020
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443fd8:

            movapd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd XMM4,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
.L_444020:

            mulsd XMM0,XMM0
            movapd XMM5,XMM3
            movapd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_4441b8]
            subsd XMM2,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_4441d0]
            divsd XMM5,XMM0
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM6,XMM5
            divsd XMM2,XMM6
            movapd XMM0,XMM2
            subsd XMM1,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_4441e0]
            ucomisd XMM7,XMM0
            ja .L_4440a0

            sub EBX,1
            jne .L_443fd8

            pxor XMM5,XMM5
            movsd XMM1,QWORD PTR [RIP+.L_4441c0]
            ucomisd XMM5,QWORD PTR [RSP+32]
            ja .L_44408d

            movsd XMM1,QWORD PTR [RIP+.L_4441c8]
.L_44408d:

            movsd XMM0,QWORD PTR [RSP+40]
            add RSP,48
.L_444097:

            pop RBX
            addsd XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4440a0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            addsd XMM0,QWORD PTR [RIP+.L_4441b8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,48
            addsd XMM2,XMM2
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_4440d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4440e0:

            test RDI,RDI
            je .L_444110

            lea RAX,QWORD PTR [RIP+.L_443fa0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_443f20]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444110:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44413e

            lea RDX,QWORD PTR [RIP+.L_443f00]
            lea RCX,QWORD PTR [RIP+.L_444190]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44413e:

            add RSP,8
            ret 
.L_444143:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444150:

            lea RDX,QWORD PTR [RIP+.L_443fa0]
            lea RCX,QWORD PTR [RIP+.L_443f20]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_444175:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444180:

            xor EAX,EAX
            ret 
.L_444183:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444190:
          .string "Nell-Hammer\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4441b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4441b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4441c0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_4441c8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4441d0:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4441e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4441f0:

            movapd XMM3,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_444440]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM3
            subsd XMM2,QWORD PTR [RIP+.L_444448]
            mulsd XMM2,XMM3
            mulsd XMM3,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_444450]
            mulsd XMM2,XMM3
            addsd XMM2,QWORD PTR [RIP+.L_444458]
            mulsd XMM1,XMM2
            ret 
.L_44422d:

            nop
            nop
            nop
.L_444230:

            test RDI,RDI
            je .L_444240

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444240:

            ret 
.L_444242:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444250:

            movsd XMM6,QWORD PTR [RIP+.L_444460]
            ucomisd XMM1,XMM6
            ja .L_44426a

            movsd XMM6,QWORD PTR [RIP+.L_444468]
            maxsd XMM6,XMM1
.L_44426a:

            mov EAX,100
            movsd XMM14,QWORD PTR [RIP+.L_444440]
            movsd XMM13,QWORD PTR [RIP+.L_444448]
            movsd XMM12,QWORD PTR [RIP+.L_444450]
            movsd XMM5,QWORD PTR [RIP+.L_444458]
            movsd XMM11,QWORD PTR [RIP+.L_444470]
            movsd XMM10,QWORD PTR [RIP+.L_444478]
            movsd XMM9,QWORD PTR [RIP+.L_444480]
            movq XMM8,QWORD PTR [RIP+.L_444490]
            movsd XMM7,QWORD PTR [RIP+.L_444488]
            jmp .L_4442c5
.L_4442c0:

            sub EAX,1
            je .L_444338
.L_4442c5:

            movapd XMM3,XMM1
            mulsd XMM3,XMM1
            movapd XMM2,XMM3
            movapd XMM15,XMM3
            movapd XMM4,XMM3
            mulsd XMM2,XMM14
            mulsd XMM15,XMM11
            mulsd XMM4,XMM3
            subsd XMM2,XMM13
            subsd XMM15,XMM10
            mulsd XMM2,XMM3
            mulsd XMM3,XMM15
            addsd XMM2,XMM12
            addsd XMM3,XMM9
            mulsd XMM2,XMM4
            mulsd XMM4,XMM3
            addsd XMM2,XMM5
            addsd XMM4,XMM5
            mulsd XMM2,XMM1
            subsd XMM2,XMM6
            divsd XMM2,XMM4
            subsd XMM1,XMM2
            andpd XMM2,XMM8
            ucomisd XMM7,XMM2
            jbe .L_4442c0

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444338:

            sub RSP,24

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
            ret 
.L_444364:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444370:

            test RDI,RDI
            je .L_4443a0

            lea RAX,QWORD PTR [RIP+.L_444250]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4441f0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4443a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4443ce

            lea RDX,QWORD PTR [RIP+.L_444230]
            lea RCX,QWORD PTR [RIP+.L_444420]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4443ce:

            add RSP,8
            ret 
.L_4443d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4443e0:

            lea RDX,QWORD PTR [RIP+.L_444250]
            lea RCX,QWORD PTR [RIP+.L_4441f0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_444405:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444410:

            xor EAX,EAX
            ret 
.L_444413:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444420:
          .string "Patterson Cylindrical\n\tCyl."
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444440:
          .byte 0x89
          .byte 0x29
          .byte 0x91
          .byte 0x44
          .byte 0x2f
          .byte 0xa3
          .byte 0x98
          .byte 0x3f
.L_444448:
          .byte 0x2
          .byte 0x9f
          .byte 0x1f
          .byte 0x46
          .byte 0x8
          .byte 0x8f
          .byte 0xc2
          .byte 0x3f
.L_444450:

            int3 

            out DX,AL
            leave 
            ret 

            lodsd EAX,DWORD PTR [RSI]
            int 63
.L_444458:
          .byte 0x5b
          .byte 0xb1
          .byte 0xbf
          .byte 0xec
          .byte 0x9e
          .byte 0x3c
          .byte 0xf0
          .byte 0x3f
.L_444460:
          .byte 0xc0
          .byte 0xaa
          .byte 0x8c
          .byte 0xdc
          .byte 0x59
          .byte 0xa7
          .byte 0xfc
          .byte 0x3f
.L_444468:
          .byte 0xc0
          .byte 0xaa
          .byte 0x8c
          .byte 0xdc
          .byte 0x59
          .byte 0xa7
          .byte 0xfc
          .byte 0xbf
.L_444470:
          .byte 0xba
          .byte 0x4e
          .byte 0x23
          .byte 0x2d
          .byte 0x95
          .byte 0xb7
          .byte 0xcb
          .byte 0x3f
.L_444478:
          .byte 0x22
          .byte 0xab
          .byte 0x5b
          .byte 0x3d
          .byte 0x27
          .byte 0x3d
          .byte 0xf0
          .byte 0x3f
.L_444480:
          .byte 0x40
          .byte 0x35
          .byte 0x5e
          .byte 0xba
          .byte 0x49
          .byte 0x8c
          .byte 0xf2
          .byte 0x3f
.L_444488:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
.L_444490:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4444a0:

            test RDI,RDI
            je .L_4444b0

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4444b0:

            ret 
.L_4444b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4444c0:

            push R12
            push RBP
            push RBX
            mov EBX,10
            sub RSP,48
.L_4444cd:

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RIP+.L_4447c0]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_4447c8]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4447d0]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_4447d8]
            mulsd XMM1,XMM0
            nop
            nop
            nop
            nop
.L_444530:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_4447e8]
            subsd XMM3,QWORD PTR [RIP+.L_4447e0]
            movapd XMM2,XMM3
            mulsd XMM3,XMM0
            mulsd XMM2,XMM4
            mulsd XMM4,XMM4
            addsd XMM3,QWORD PTR [RIP+.L_4447e0]
            addsd XMM2,XMM1
            subsd XMM2,QWORD PTR [RSP+16]
            subsd XMM3,XMM4
            divsd XMM2,XMM3
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_444810]
            ucomisd XMM6,XMM2
            ja .L_4445e8

            sub EBX,1
            jne .L_444530

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_444620

            movsd XMM1,QWORD PTR [RIP+.L_4447a8]
            movsd XMM2,QWORD PTR [RIP+.L_4447b0]
.L_4445c6:

            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,QWORD PTR [RIP+.L_444800]
            add RSP,48
.L_4445d8:

            pop RBX
            pop RBP
            pop R12
            mulsd XMM0,XMM2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4445e8:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RIP+.L_4447f8]
            subsd XMM0,QWORD PTR [RIP+.L_4447f0]
            mulsd XMM1,QWORD PTR [RSP+40]
            movapd XMM2,XMM0
            jmp .L_4445c6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444620:

            movsd XMM1,QWORD PTR [RIP+.L_4447b8]
            movsd XMM2,QWORD PTR [RIP+.L_4447b0]
            jmp .L_4445c6
.L_444632:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444640:

            push RBX
            mov RBX,RDI
            sub RSP,32

            mov RDI,QWORD PTR [RDI]
            divsd XMM1,QWORD PTR [RIP+.L_4447f8]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM1
            call .L_449c40

            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM1,QWORD PTR [RIP+.L_4447e0]
            subsd XMM0,QWORD PTR [RIP+.L_4447f0]
            mulsd XMM0,QWORD PTR [RIP+.L_444800]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            addsd XMM0,XMM3
            divsd XMM0,QWORD PTR [RIP+.L_4447c0]
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP]
            add RSP,32

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_4446dd:

            nop
            nop
            nop
.L_4446e0:

            test RDI,RDI
            je .L_444710

            lea RAX,QWORD PTR [RIP+.L_444640]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4444c0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444710:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44473e

            lea RDX,QWORD PTR [RIP+.L_4444a0]
            lea RCX,QWORD PTR [RIP+.L_444790]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44473e:

            add RSP,8
            ret 
.L_444743:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444750:

            lea RDX,QWORD PTR [RIP+.L_444640]
            lea RCX,QWORD PTR [RIP+.L_4444c0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_444775:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444780:

            xor EAX,EAX
.L_444782:

            ret 
.L_444783:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444790:
          .string "Putnins P2\n\tPCyl., Sph."
.L_4447a8:
          .byte 0xca
          .byte 0x7b
          .byte 0x40
          .byte 0x70
          .byte 0xdc
          .byte 0xcf
          .byte 0xf7
          .byte 0x3f
.L_4447b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x3c
.L_4447b8:
          .byte 0xca
          .byte 0x7b
          .byte 0x40
          .byte 0x70
          .byte 0xdc
          .byte 0xcf
          .byte 0xf7
          .byte 0xbf
.L_4447c0:

            jbe .L_444782
          .byte 0x2e
          .byte 0xfc
          .byte 0x66
          .byte 0xa7
          .byte 0xe3
          .byte 0x3f
.L_4447c8:
          .byte 0x80
          .byte 0xcf
          .byte 0xb4
          .byte 0x69
          .byte 0x11
          .byte 0xf6
          .byte 0x72
          .byte 0x3f
.L_4447d0:
          .byte 0x53
          .byte 0x5f
          .byte 0x12
          .byte 0x3e
          .byte 0xc6
          .byte 0xa2
          .byte 0x82
          .byte 0x3f
.L_4447d8:
          .byte 0xa9
          .byte 0x4a
          .byte 0x5b
          .byte 0x5c
          .byte 0xe3
          .byte 0xb3
          .byte 0xe3
          .byte 0x3f
.L_4447e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4447e8:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_4447f0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 280071
.L_4447f8:

            add CL,BYTE PTR [RAX+109]
          .byte 0xe2
          .byte 0xe4
          .byte 0x7e
          .byte 0xfb
          .byte 0x3f
.L_444800:
          .byte 0xe1
          .byte 0xb
          .byte 0x93
          .byte 0xa9
          .byte 0x82
          .byte 0x51
          .byte 0xfe
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444810:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444820:

            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_444a98]
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM3,XMM1
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_444aa0]
            mulsd XMM0,XMM3
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            ret 
.L_444851:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444860:

            movsd XMM4,QWORD PTR [RIP+.L_444aa0]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_444a98]
            divsd XMM1,XMM4
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM3,XMM1
            mulsd XMM3,XMM1
            subsd XMM2,XMM3
            mulsd XMM2,XMM4
            divsd XMM0,XMM2
            ret 
.L_444891:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4448a0:

            test RDI,RDI
            je .L_4448c8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4448be

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4448be:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4448c8:

            xor EAX,EAX
            ret 
.L_4448cb:

            nop
            nop
            nop
            nop
            nop
.L_4448d0:

            jmp .L_4448a0
.L_4448d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4448e0:

            push RBX
.L_4448e1:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444930

            mov RDX,QWORD PTR [RIP+.L_444aa8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_444860]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444820]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_44492b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444930:

            mov RDI,RBX
            pop RBX
            jmp .L_4448a0
.L_444939:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444940:

            test RDI,RDI
            je .L_444950

            jmp .L_4448e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444950:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44497e

            lea RDX,QWORD PTR [RIP+.L_4448d0]
            lea RCX,QWORD PTR [RIP+.L_444a80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44497e:

            add RSP,8
            ret 
.L_444983:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444990:

            push RBX
.L_444991:

            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4449e0

            mov RDX,QWORD PTR [RIP+.L_444ab0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            lea RAX,QWORD PTR [RIP+.L_444860]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444820]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_4449db:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4449e0:

            mov RDI,RBX
            pop RBX
            jmp .L_4448a0
.L_4449e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4449f0:

            test RDI,RDI
            je .L_444a00

            jmp .L_444990
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444a00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444a2e

            lea RDX,QWORD PTR [RIP+.L_4448d0]
            lea RCX,QWORD PTR [RIP+.L_444a60]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_444a2e:

            add RSP,8
            ret 
.L_444a33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444a40:

            xor EAX,EAX
            ret 
.L_444a43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444a50:

            xor EAX,EAX
            ret 
.L_444a53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444a60:
          .string "Putnins P3\'\n\tPCyl., Sph."
# WARNING: found overlapping blocks at address 44833
# WARNING: found overlapping blocks at address 44841
          .zero 7
.L_444a80:
          .string "Putnins P3\n\tPCyl., Sph."
# WARNING: found overlapping blocks at address 44860
# WARNING: found overlapping blocks at address 44866
.L_444a98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_444aa0:
          .byte 0x0
          .byte 0xde
          .byte 0x65
          .byte 0x33
          .byte 0x45
          .byte 0x88
          .byte 0xe9
          .byte 0x3f
.L_444aa8:

            sbb BH,BYTE PTR [RDX]
            hlt 
          .byte 0x61
          .byte 0x2f
          .byte 0xf0
          .byte 0xd9
          .byte 0x3f
.L_444ab0:

            sbb BH,BYTE PTR [RDX]
            hlt 
          .byte 0x61
          .byte 0x2f
          .byte 0xf0
          .byte 0xc9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444ac0:

            test RDI,RDI
            je .L_444ae8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_444ade

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
.L_444add:

            pop RBX
.L_444ade:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444ae8:

            xor EAX,EAX
            ret 
.L_444aeb:

            nop
            nop
            nop
            nop
            nop
.L_444af0:

            jmp .L_444ac0
.L_444af2:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444afe:

            add BYTE PTR [RAX],AL
.L_444b00:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_444b09:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_444e10]
            mov RDI,QWORD PTR [RBP]
            call .L_449c40

            movsd QWORD PTR [RSP+16],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RIP+.L_444e18]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM2,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RSP+40]
            mulsd XMM1,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            divsd XMM0,QWORD PTR [RSP+32]
            add RSP,56
.L_444b88:

            pop RBX
            pop RBP
            ret 
.L_444b8b:

            nop
            nop
            nop
            nop
            nop
.L_444b90:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_444b99:

            mov RBP,QWORD PTR [RDI+32]
            mov RDI,QWORD PTR [RDI]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call .L_449c40

            movsd QWORD PTR [RSP+24],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+8],XMM0
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM1,QWORD PTR [RIP+.L_444e20]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            movsd XMM0,QWORD PTR [RIP+.L_444e28]
            mulsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RSP+40]
            divsd XMM2,QWORD PTR [RBP]
            divsd XMM2,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_449c40

            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,56
.L_444c23:

            movapd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
.L_444c2e:

            nop
            nop
.L_444c30:

            push RBX
.L_444c31:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444c90

            mov RDX,QWORD PTR [RIP+.L_444e30]
            mov RCX,QWORD PTR [RIP+.L_444e38]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_444b90]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444b00]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_444c86:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444c90:

            mov RDI,RBX
            pop RBX
            jmp .L_444ac0
.L_444c99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444ca0:

            test RDI,RDI
            je .L_444cb0

            jmp .L_444c30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444cb0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444cde

            lea RDX,QWORD PTR [RIP+.L_444af0]
            lea RCX,QWORD PTR [RIP+.L_444df0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_444cde:

            add RSP,8
            ret 
.L_444ce3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444cf0:

            push RBX
.L_444cf1:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444d50

            mov RDX,QWORD PTR [RIP+.L_444e40]
            mov RCX,QWORD PTR [RIP+.L_444e48]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_444b90]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444b00]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_444d46:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444d50:

            mov RDI,RBX
            pop RBX
            jmp .L_444ac0
.L_444d59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d60:

            test RDI,RDI
            je .L_444d70

            jmp .L_444cf0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444d70:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_444d9e

            lea RDX,QWORD PTR [RIP+.L_444af0]
            lea RCX,QWORD PTR [RIP+.L_444dd0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_444d9e:

            add RSP,8
            ret 
.L_444da3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444db0:

            xor EAX,EAX
            ret 
.L_444db3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444dc0:

            xor EAX,EAX
            ret 
.L_444dc3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444dd0:
          .string "Werenskiold I\n\tPCyl., Sph."
          .zero 5
.L_444df0:
          .string "Putnins P4\'\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444e10:
          .byte 0x35
          .byte 0xa2
          .byte 0xdc
          .byte 0xff
          .byte 0xc5
          .byte 0x48
          .byte 0xec
          .byte 0x3f
.L_444e18:
          .byte 0x4f
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_444e20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_444e28:
          .byte 0x11
          .byte 0x5d
          .byte 0x6
          .byte 0x52
          .byte 0x18
          .byte 0x1a
          .byte 0xf2
          .byte 0x3f
.L_444e30:
          .byte 0x61
          .byte 0x57
          .byte 0x9d
          .byte 0x19
          .byte 0x20
          .byte 0xf8
          .byte 0xeb
          .byte 0x3f
.L_444e38:
          .byte 0xfb
          .byte 0xe
          .byte 0x34
          .byte 0x55
          .byte 0xe6
          .byte 0x10
          .byte 0xf
          .byte 0x40
.L_444e40:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_444e48:

            stosb BYTE PTR [RDI]
            ficomp DWORD PTR [RDX]
            add EBP,17
          .byte 0x40
.L_444e50:

            test RDI,RDI
            je .L_444e78

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_444e6e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_444e6e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444e78:

            xor EAX,EAX
            ret 
.L_444e7b:

            nop
            nop
            nop
            nop
            nop
.L_444e80:

            jmp .L_444e50
.L_444e82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444e90:

            sub RSP,56
.L_444e94:

            movapd XMM4,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_4451f0]
            mov RAX,QWORD PTR [RDI+32]
            pxor XMM0,XMM0
            mulsd XMM2,XMM1
            movsd XMM6,QWORD PTR [RIP+.L_4451e8]
            movsd XMM3,QWORD PTR [RAX]
            mulsd XMM4,XMM6
            mulsd XMM2,XMM1
            movsd XMM5,QWORD PTR [RAX+8]
            addsd XMM2,QWORD PTR [RIP+.L_4451f8]
            ucomisd XMM0,XMM2
            sqrtsd XMM7,XMM2
            ja .L_444ef0
.L_444ed7:

            mulsd XMM5,XMM7
            add RSP,56
.L_444edf:

            mulsd XMM1,XMM6
            subsd XMM3,XMM5
            mulsd XMM3,XMM4
            movapd XMM0,XMM3
            ret 
.L_444ef0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_444ed7
.L_444f41:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444f50:

            sub RSP,56
.L_444f54:

            movapd XMM4,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_4451e8]
            mov RAX,QWORD PTR [RDI+32]
            movsd XMM2,QWORD PTR [RIP+.L_4451f0]
            divsd XMM1,XMM6
            pxor XMM0,XMM0
            movsd XMM3,QWORD PTR [RAX]
            movsd XMM5,QWORD PTR [RAX+8]
            mulsd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_4451f8]
            ucomisd XMM0,XMM2
            sqrtsd XMM7,XMM2
            ja .L_444fb0
.L_444f97:

            mulsd XMM5,XMM7
            add RSP,56
.L_444f9f:

            subsd XMM3,XMM5
            mulsd XMM3,XMM6
            divsd XMM4,XMM3
            movapd XMM0,XMM4
            ret 
.L_444fb0:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+40],XMM6
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM7
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM7,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_444f97
.L_445001:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445010:

            push RBX
.L_445011:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_445070

            mov RDX,QWORD PTR [RIP+.L_445200]
            mov RCX,QWORD PTR [RIP+.L_4451f8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_444f50]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444e90]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_445066:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445070:

            mov RDI,RBX
            pop RBX
            jmp .L_444e50
.L_445079:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445080:

            test RDI,RDI
            je .L_445090

            jmp .L_445010
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445090:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4450be

            lea RDX,QWORD PTR [RIP+.L_444e80]
            lea RCX,QWORD PTR [RIP+.L_4451d0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4450be:

            add RSP,8
            ret 
.L_4450c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4450d0:

            push RBX
.L_4450d1:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_445130

            mov RDX,QWORD PTR [RIP+.L_445208]
            mov RCX,QWORD PTR [RIP+.L_445210]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_444f50]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_444e90]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_445126:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445130:

            mov RDI,RBX
            pop RBX
            jmp .L_444e50
.L_445139:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445140:

            test RDI,RDI
            je .L_445150

            jmp .L_4450d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445150:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44517e

            lea RDX,QWORD PTR [RIP+.L_444e80]
            lea RCX,QWORD PTR [RIP+.L_4451b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44517e:

            add RSP,8
            ret 
.L_445183:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445190:

            xor EAX,EAX
            ret 
.L_445193:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4451a0:

            xor EAX,EAX
            ret 
.L_4451a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4451b0:
          .string "Putnins P5\'\n\tPCyl., Sph."
# WARNING: found overlapping blocks at address 44f91
# WARNING: found overlapping blocks at address 44f97
          .zero 7
.L_4451d0:
          .string "Putnins P5\n\tPCyl., Sph."
.L_4451e8:
          .byte 0xd7
          .byte 0xdd
          .byte 0x3c
          .byte 0xd5
          .byte 0x21
          .byte 0x37
          .byte 0xf0
          .byte 0x3f
.L_4451f0:
          .byte 0x95
          .byte 0x44
          .byte 0x9b
          .byte 0x88
          .byte 0x23
          .byte 0x74
          .byte 0xf3
          .byte 0x3f
.L_4451f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_445200:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_445208:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
.L_445210:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 282663
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445220:

            test RDI,RDI
            je .L_445248

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_44523e

            push RBX
.L_44522f:

            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_44523e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445248:

            xor EAX,EAX
            ret 
.L_44524b:

            nop
            nop
            nop
            nop
            nop
.L_445250:

            jmp .L_445220
.L_445252:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445260:

            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_44526b:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RBP+24]
            mulsd XMM1,QWORD PTR [RIP+.L_445730]
            movsd QWORD PTR [RSP+32],XMM0
            nop
            nop
            nop
.L_4452a0:

            movapd XMM0,XMM1
            pxor XMM5,XMM5
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_445738]
            ucomisd XMM5,XMM0
            sqrtsd XMM3,XMM0
            ja .L_445400
.L_4452c2:

            movsd XMM2,QWORD PTR [RBP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            subsd XMM2,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            addsd XMM0,XMM1
            mulsd XMM2,XMM1
            movsd QWORD PTR [RSP+24],XMM2
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            addsd XMM3,XMM3
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RIP+.L_445740]
            subsd XMM2,QWORD PTR [RSP+32]
            subsd XMM0,XMM3
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_4457a0]
            ucomisd XMM7,XMM2
            ja .L_445390

            sub EBX,1
            jne .L_4452a0

            pxor XMM4,XMM4
            movsd XMM1,QWORD PTR [RIP+.L_445720]
            ucomisd XMM4,QWORD PTR [RSP+32]
            ja .L_44535a

            movsd XMM1,QWORD PTR [RIP+.L_445728]
.L_44535a:

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM3,QWORD PTR [RBP]
            movsd XMM4,QWORD PTR [RIP+.L_445718]
.L_445372:

            subsd XMM2,XMM4
            mulsd XMM1,QWORD PTR [RBP+8]
            add RSP,56
.L_44537f:

            pop RBX
            pop RBP
            movapd XMM0,XMM2
            mulsd XMM0,XMM3
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445390:

            movapd XMM0,XMM1
            pxor XMM6,XMM6
            mulsd XMM0,XMM1
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RBP+32]
            mulsd XMM3,QWORD PTR [RBP]
            addsd XMM0,QWORD PTR [RIP+.L_445738]
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            jbe .L_445372

            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_445372
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445400:

            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4452c2
.L_445422:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445430:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,40
.L_44543d:

            mov RBX,QWORD PTR [RDI+32]
            pxor XMM0,XMM0
            divsd XMM1,QWORD PTR [RBX+8]
            movapd XMM2,XMM1
            mulsd XMM2,XMM1
            addsd XMM2,QWORD PTR [RIP+.L_445738]
            ucomisd XMM0,XMM2
            sqrtsd XMM4,XMM2
            ja .L_4454cc
.L_445464:

            movsd XMM2,QWORD PTR [RBX+32]
            subsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RBX]
            divsd XMM3,XMM2
            movsd XMM2,QWORD PTR [RBX+16]
            subsd XMM2,XMM4
            movsd QWORD PTR [RSP+16],XMM3
            mulsd XMM2,XMM1
            addsd XMM1,XMM4
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call log@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBP]
            subsd XMM2,XMM0
            movapd XMM0,XMM2
            divsd XMM0,QWORD PTR [RBX+24]
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP+16]
            add RSP,40
.L_4454c1:

            movapd XMM1,XMM0
            movapd XMM0,XMM3
            pop RBX
            pop RBP
            ret 
.L_4454cc:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_445464
.L_4454fe:

            nop
            nop
.L_445500:

            push RBX
.L_445501:

            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_445580

            mov RDX,QWORD PTR [RIP+.L_445748]
            mov RCX,QWORD PTR [RIP+.L_445750]
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RIP+.L_445758]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov RDX,QWORD PTR [RIP+.L_445760]
            mov RCX,QWORD PTR [RIP+.L_445768]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RCX
            lea RAX,QWORD PTR [RIP+.L_445430]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_445260]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_445577:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445580:

            mov RDI,RBX
            pop RBX
            jmp .L_445220
.L_445589:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445590:

            test RDI,RDI
            je .L_4455a0

            jmp .L_445500
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4455a0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4455ce

            lea RDX,QWORD PTR [RIP+.L_445250]
            lea RCX,QWORD PTR [RIP+.L_445700]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4455ce:

            add RSP,8
            ret 
.L_4455d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4455e0:

            push RBX
.L_4455e1:

            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_445660

            mov RDX,QWORD PTR [RIP+.L_445770]
            mov RCX,QWORD PTR [RIP+.L_445778]
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RIP+.L_445780]
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            mov RDX,QWORD PTR [RIP+.L_445788]
            mov RCX,QWORD PTR [RIP+.L_445790]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RAX+32],RCX
            lea RAX,QWORD PTR [RIP+.L_445430]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_445260]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_445657:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445660:

            mov RDI,RBX
            pop RBX
            jmp .L_445220
.L_445669:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445670:

            test RDI,RDI
            je .L_445680

            jmp .L_4455e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445680:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4456ae

            lea RDX,QWORD PTR [RIP+.L_445250]
            lea RCX,QWORD PTR [RIP+.L_4456e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4456ae:

            add RSP,8
            ret 
.L_4456b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4456c0:

            xor EAX,EAX
            ret 
.L_4456c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4456d0:

            xor EAX,EAX
            ret 
.L_4456d3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4456e0:
          .string "Putnins P6\'\n\tPCyl., Sph."
          .zero 7
.L_445700:
          .string "Putnins P6\n\tPCyl., Sph."
.L_445718:
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
.L_445720:
          .byte 0xa9
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0xbf
.L_445728:
          .byte 0xa9
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xfb
          .byte 0x3f
.L_445730:
          .byte 0x97
          .byte 0xac
          .byte 0xab
          .byte 0x7e
          .byte 0x7c

            movsb 
            int1 
          .byte 0x3f
.L_445738:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_445740:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
.L_445748:
          .byte 0xd7
          .byte 0xdd
          .byte 0x3c
          .byte 0xd5
          .byte 0x21
          .byte 0x37
          .byte 0xf0
          .byte 0x3f
.L_445750:
          .byte 0x7e
          .byte 0x1d
          .byte 0x38
          .byte 0x67
          .byte 0x44
          .byte 0x69
          .byte 0xed
          .byte 0x3f
.L_445758:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_445760:
          .byte 0x90
          .byte 0x4a
          .byte 0x8c
          .byte 0xaf
          .byte 0x59
          .byte 0x2d
          .byte 0x1
          .byte 0x40
.L_445768:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_445770:
          .byte 0xad
          .byte 0x34
          .byte 0x29
          .byte 0x5
          .byte 0xdd
          .byte 0x5e
          .byte 0xdc
          .byte 0x3f
.L_445778:
          .byte 0x7b
          .byte 0xa0
          .byte 0x15
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xe9
          .byte 0x3f
.L_445780:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x40
.L_445788:
          .byte 0x52
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x71
          .byte 0x16
          .byte 0x40
.L_445790:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4457a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4457b0:

            test RDI,RDI
            je .L_4457d8

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4457ce

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4457ce:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4457d8:

            xor EAX,EAX
            ret 
.L_4457db:

            nop
            nop
            nop
            nop
            nop
.L_4457e0:

            jmp .L_4457b0
.L_4457e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4457f0:

            movapd XMM2,XMM0
            mulsd XMM0,XMM0
            movapd XMM3,XMM1
            mulsd XMM1,XMM1
            pxor XMM6,XMM6
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            addsd XMM0,XMM1
            sub RSP,64
.L_445817:

            mov RBX,QWORD PTR [RDI+32]
            ucomisd XMM6,XMM0
            sqrtsd XMM1,XMM0
            ja .L_445f0d
.L_445829:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP],XMM2
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            pxor XMM7,XMM7
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM1,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM2,XMM7
            jb .L_4458a8

            movapd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_446e50]
            ucomisd XMM2,XMM0
            jb .L_4458a8

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            xor R14D,R14D
            movsd QWORD PTR [RSP],XMM6
            jmp .L_4458e3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4458a8:

            pxor XMM7,XMM7
            ucomisd XMM3,XMM7
            jb .L_445af8

            movapd XMM0,XMM2
            andpd XMM0,XMMWORD PTR [RIP+.L_446e50]
            ucomisd XMM3,XMM0
            jb .L_445af8

            movsd XMM5,QWORD PTR [RIP+.L_446dc8]
            mov R14D,1
            subsd XMM1,XMM5
            movsd QWORD PTR [RSP],XMM5
.L_4458e3:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM1
            lea R12,QWORD PTR [RSP+56]
            lea R13,QWORD PTR [RSP+48]
            call tan@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_446dd8]
            mov RSI,R13
            mov RDI,R12
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+48]
            movsd XMM0,QWORD PTR [RSP+56]
            subsd XMM2,QWORD PTR [RIP+.L_446de0]
            divsd XMM0,XMM2
            call atan@PLT

            mov RSI,R13
            mov RDI,R12
            movsd QWORD PTR [RSP+32],XMM0
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+56]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+40],XMM5
            call cos@PLT

            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            call tan@PLT

            movsd XMM3,QWORD PTR [RIP+.L_446db8]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            divsd XMM0,QWORD PTR [RSP+48]
            call atan@PLT

            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            mulsd XMM1,XMM1
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM6,XMM3
            movapd XMM7,XMM3
            mulsd XMM1,XMM4
            subsd XMM6,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446db0]
            mulsd XMM1,XMM4
            mulsd XMM1,XMM6
            subsd XMM7,XMM1
            ucomisd XMM0,XMM7
            movapd XMM1,XMM7
            ja .L_445be0

            movapd XMM7,XMM3
            mov EAX,DWORD PTR [RBX]
            minsd XMM7,XMM1
            cmp EAX,4
            movapd XMM1,XMM7
            je .L_445bef
.L_4459f6:

            cmp EAX,5
            je .L_445d50

            movapd XMM4,XMM1
            pxor XMM0,XMM0
            pxor XMM2,XMM2
            mulsd XMM4,XMM1
            ucomisd XMM4,XMM3
            jb .L_445e30
.L_445a19:

            addsd XMM4,XMM0
            pxor XMM5,XMM5
            ucomisd XMM4,XMM3
            jb .L_445de0
.L_445a2b:

            cmp R14D,1
            movq XMM0,QWORD PTR [RIP+.L_446e60]
            je .L_445ca8

            cmp R14D,2
            je .L_445dd0

            cmp R14D,3
            je .L_445ce8
.L_445a51:

            mov EAX,DWORD PTR [RBX]
            cmp EAX,1
            je .L_445c90

            cmp EAX,2
            je .L_445d90

            cmp EAX,3
            je .L_445cd0
.L_445a6e:

            xorpd XMM0,XMM2
            movsd QWORD PTR [RSP+24],XMM5
            movsd QWORD PTR [RSP+16],XMM1
            call acos@PLT

            movapd XMM3,XMM0
            movsd XMM5,QWORD PTR [RSP+24]
            subsd XMM3,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM3
            call atan2@PLT

            mov EAX,DWORD PTR [RBX]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+8]
            cmp EAX,1
            je .L_445c40

            cmp EAX,2
            je .L_445da0

            cmp EAX,3
            je .L_445c70

            nop
            nop
.L_445ad0:

            pxor XMM6,XMM6
            ucomisd XMM6,QWORD PTR [RBP+176]
            jp .L_445b28

            jne .L_445b28
.L_445ae0:

            add RSP,64
.L_445ae4:

            movapd XMM0,XMM2
            pop RBX
            movapd XMM1,XMM3
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445af8:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            ja .L_445d00
.L_445b06:

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            mov R14D,3
            movsd QWORD PTR [RSP],XMM6
            addsd XMM1,XMM6
            jmp .L_4458e3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445b28:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call tan@PLT

            mulsd XMM0,XMM0
            pxor XMM7,XMM7
            movsd XMM4,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            ucomisd XMM7,XMM0
            sqrtsd XMM1,XMM0
            ja .L_445f75
.L_445b67:

            divsd XMM4,XMM1
            movsd XMM1,QWORD PTR [RBP+128]
            pxor XMM6,XMM6
            mulsd XMM1,XMM1
            movapd XMM0,XMM4
            mulsd XMM0,XMM4
            subsd XMM1,XMM0
            ucomisd XMM6,XMM1
            sqrtsd XMM5,XMM1
            ja .L_445f39
.L_445b95:

            mulsd XMM4,QWORD PTR [RBX+24]
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            divsd XMM5,XMM4
            movapd XMM0,XMM5
            call atan@PLT

            pxor XMM5,XMM5
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            ucomisd XMM5,XMM3
            movapd XMM3,XMM0
            jbe .L_445ae0

            xorpd XMM3,XMMWORD PTR [RIP+.L_446e60]
            jmp .L_445ae0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445be0:

            mov EAX,DWORD PTR [RBX]
            movapd XMM1,XMM0
            cmp EAX,4
            jne .L_4459f6
.L_445bef:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movsd XMM7,QWORD PTR [RSP]
            test R14D,R14D
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM7
            subsd XMM3,XMM0
            je .L_445cc0

            cmp R14D,1
            je .L_445ea0

            cmp R14D,2
            jne .L_445ad0
.L_445c2e:

            subsd XMM2,QWORD PTR [RSP]
            jmp .L_445ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445c40:

            subsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_446de8]
            ucomisd XMM0,XMM2
            ja .L_445c83
.L_445c53:

            ucomisd XMM2,QWORD PTR [RIP+.L_446dd0]
            jbe .L_445ad0
.L_445c61:

            subsd XMM2,QWORD PTR [RIP+.L_446df0]
            jmp .L_445ad0
          .byte 0x66
          .byte 0x90
.L_445c70:

            addsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RIP+.L_446de8]
            ucomisd XMM0,XMM2
            jbe .L_445c53
.L_445c83:

            addsd XMM2,QWORD PTR [RIP+.L_446df0]
            jmp .L_445ad0
.L_445c90:

            xorpd XMM5,XMM0
            movapd XMM3,XMM5
            movapd XMM5,XMM1
            movapd XMM1,XMM3
            jmp .L_445a6e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445ca8:

            xorpd XMM2,XMM0
            movapd XMM3,XMM2
            movapd XMM2,XMM5
            movapd XMM5,XMM3
            jmp .L_445a51
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445cc0:

            addsd XMM2,XMM7
            jmp .L_445ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445cd0:

            movapd XMM3,XMM1
            movapd XMM1,XMM5
            xorpd XMM3,XMM0
            movapd XMM5,XMM3
            jmp .L_445a6e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445ce8:

            xorpd XMM5,XMM0
            movapd XMM3,XMM5
            movapd XMM5,XMM2
            movapd XMM2,XMM3
            jmp .L_445a51
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445d00:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            andpd XMM3,XMMWORD PTR [RIP+.L_446e50]
            ucomisd XMM2,XMM3
            jb .L_445b06

            pxor XMM6,XMM6
            ucomisd XMM6,XMM1
            ja .L_445ec0

            movsd XMM7,QWORD PTR [RIP+.L_446dc8]
            subsd XMM1,QWORD PTR [RIP+.L_446dd0]
            mov R14D,2
            movsd QWORD PTR [RSP],XMM7
            jmp .L_4458e3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445d50:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call acos@PLT

            movsd XMM7,QWORD PTR [RSP]
            test R14D,R14D
            movapd XMM3,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            subsd XMM3,XMM7
            jne .L_445e60

            subsd XMM7,XMM2
            movapd XMM2,XMM7
            jmp .L_445ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445d90:

            xorpd XMM1,XMM0
            xorpd XMM5,XMM0
            jmp .L_445a6e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445da0:

            movsd XMM0,QWORD PTR [RIP+.L_446dd0]
            movsd XMM1,QWORD PTR [RIP+.L_446de8]
            subsd XMM2,XMM0
            ucomisd XMM1,XMM2
            ja .L_445c83

            ucomisd XMM2,XMM0
            jbe .L_445ad0

            jmp .L_445c61
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445dd0:

            xorpd XMM5,XMM0
            xorpd XMM2,XMM0
            jmp .L_445a51
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445de0:

            subsd XMM3,XMM4
            pxor XMM6,XMM6
            ucomisd XMM6,XMM3
            sqrtsd XMM5,XMM3
            jbe .L_445a2b

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_445a2b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445e30:

            movapd XMM0,XMM3
            pxor XMM6,XMM6
            subsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM2,XMM0
            ja .L_445fad
.L_445e4a:

            mulsd XMM2,QWORD PTR [RSP+40]
            movapd XMM0,XMM2
            mulsd XMM0,XMM2
            jmp .L_445a19
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445e60:

            cmp R14D,1
            je .L_445ee0

            cmp R14D,2
            je .L_445e90

            pxor XMM6,XMM6
            ucomisd XMM6,XMM2
            ja .L_445ef0

            movsd XMM0,QWORD PTR [RIP+.L_446dd0]
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            jmp .L_445ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445e90:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            jmp .L_445c2e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445ea0:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            ja .L_445f00
.L_445eaa:

            subsd XMM2,QWORD PTR [RIP+.L_446dd0]
            jmp .L_445ad0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445ec0:

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            addsd XMM1,QWORD PTR [RIP+.L_446dd0]
            mov R14D,2
            movsd QWORD PTR [RSP],XMM6
            jmp .L_4458e3
.L_445ee0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            jmp .L_445ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445ef0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            jmp .L_445eaa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445f00:

            addsd XMM2,QWORD PTR [RIP+.L_446dd0]
            jmp .L_445ad0
.L_445f0d:

            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            jmp .L_445829
.L_445f39:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_445b95
.L_445f75:

            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_445b67
.L_445fad:

            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_445e4a
.L_445fe7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445ff0:

            push RBX
.L_445ff1:

            mov RBX,RDI
            call atan2@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_446df8]
            andpd XMM2,XMMWORD PTR [RIP+.L_446e50]
            ucomisd XMM1,XMM2
            jae .L_446070

            ucomisd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_446e00]
            ja .L_446050
.L_446021:

            ucomisd XMM0,XMM1
            ja .L_446035

            movsd XMM1,QWORD PTR [RIP+.L_44f380-34168]
            ucomisd XMM1,XMM0
            jb .L_446090
.L_446035:

            ucomisd XMM0,QWORD PTR [RIP+.L_446dc0]
            mov DWORD PTR [RBX],2
            jb .L_446080

            subsd XMM0,QWORD PTR [RIP+.L_446dd0]
            pop RBX
.L_44604e:

            ret 
          .byte 0x90
.L_446050:

            ucomisd XMM1,XMM0
            jb .L_446021

            mov DWORD PTR [RBX],1
            subsd XMM0,QWORD PTR [RIP+.L_446dc8]
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446070:

            mov DWORD PTR [RBX],0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446080:

            addsd XMM0,QWORD PTR [RIP+.L_446dd0]
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446090:

            mov DWORD PTR [RBX],3
            addsd XMM0,QWORD PTR [RIP+.L_446dc8]
            pop RBX
            ret 
.L_4460a0:

            push R12
            pxor XMM6,XMM6
            push RBP
            push RBX
            movapd XMM2,XMM0
            sub RSP,96
.L_4460b0:

            mov RBX,QWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            ucomisd XMM6,QWORD PTR [RDI+176]
            jp .L_4462e0

            movapd XMM3,XMM1
            jne .L_4462e0

            mov EBX,DWORD PTR [RBX]
            movsd QWORD PTR [RSP],XMM2
            cmp EBX,4
            je .L_446311
.L_4460ec:

            cmp EBX,5
            je .L_4463c0

            cmp EBX,1
            je .L_4466b0

            cmp EBX,2
            je .L_4465b0

            cmp EBX,3
            je .L_4467c0

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+16],XMM3
            movsd XMM0,QWORD PTR [RSP]
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movapd XMM1,XMM0
            test EBX,EBX
            movsd XMM0,QWORD PTR [RSP+64]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP],XMM1
            jne .L_446b2b

            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446e20]
            ucomisd XMM0,XMM2
            jbe .L_4468c8

            movapd XMM0,XMM2
            mov DWORD PTR [RSP+84],0
            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+16],XMM6
.L_4461d0:

            movsd QWORD PTR [RSP+40],XMM2
            call acos@PLT

            addsd XMM0,QWORD PTR [RSP]
            subsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [RIP+.L_446e28]
            call atan@PLT

            movsd QWORD PTR [RSP+32],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            divsd XMM0,QWORD PTR [RSP+56]
            call atan@PLT

            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+24]
            movapd XMM1,XMM2
            pxor XMM5,XMM5
            mulsd XMM3,XMM3
            subsd XMM2,XMM0
            subsd XMM1,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+32]
            divsd XMM1,XMM3
            divsd XMM1,XMM2
            movapd XMM0,XMM1
            sqrtsd XMM1,XMM1
            ucomisd XMM5,XMM0
            ja .L_446b06
.L_446264:

            mov EAX,DWORD PTR [RSP+84]
            cmp EAX,1
            je .L_446690

            cmp EAX,2
            je .L_4466a0

            cmp EAX,3
            jne .L_446290

            addsd XMM4,QWORD PTR [RIP+.L_446e30]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446290:

            movapd XMM0,XMM4
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RSP+72]
            jne .L_446b26

            add RSP,96
.L_4462d1:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4462e0:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+32]
            call atan@PLT

            mov EBX,DWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd QWORD PTR [RSP],XMM2
            cmp EBX,4
            jne .L_4460ec
.L_446311:

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            movsd QWORD PTR [RSP+24],XMM2
            movapd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM6
            subsd XMM0,XMM3
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP+48],XMM0
            ucomisd XMM2,QWORD PTR [RIP+.L_446df8]
            movsd XMM0,QWORD PTR [RIP+.L_446e00]
            jb .L_446470

            movsd XMM5,QWORD PTR [RSP]
            ucomisd XMM0,XMM5
            jb .L_446470

            subsd XMM5,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],0
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM5
            movapd XMM0,XMM5
.L_44638a:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34160]
            movsd XMM5,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM5
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            jmp .L_4461d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4463c0:

            movsd XMM7,QWORD PTR [RIP+.L_446dc8]
            movsd QWORD PTR [RSP+24],XMM2
            addsd XMM3,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            movapd XMM0,XMM3
            call cos@PLT

            movsd XMM5,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446df8]
            movsd XMM2,QWORD PTR [RSP+24]
            ucomisd XMM5,XMM0
            jb .L_446540

            movsd XMM1,QWORD PTR [RIP+.L_446e00]
            ucomisd XMM1,XMM5
            jb .L_446540

            movsd XMM7,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],0
            subsd XMM7,XMM5
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM7
            movapd XMM0,XMM7
.L_446441:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34160]
            movsd XMM6,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM6
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            jmp .L_4461d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446470:

            ucomisd XMM2,XMM0
            jbe .L_4464e0
.L_446476:

            pxor XMM6,XMM6
            mov DWORD PTR [RSP+84],1
            ucomisd XMM2,XMM6
            jbe .L_4467b0

            subsd XMM2,QWORD PTR [RIP+.L_446dd0]
.L_446494:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
.L_4464ad:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34160]
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM4
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            jmp .L_4461d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4464e0:

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34168]
            ucomisd XMM0,XMM2
            jae .L_446476

            ucomisd XMM2,XMM0
            ja .L_446848
.L_4464f8:

            mov DWORD PTR [RSP+84],3
.L_446500:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movapd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
.L_446514:

            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34160]
            movsd XMM7,QWORD PTR [RSP+64]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM7
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            jmp .L_4461d0
.L_446540:

            ucomisd XMM0,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_446e18]
            jbe .L_446558

            ucomisd XMM2,XMM0
            jae .L_446820
.L_446558:

            ucomisd XMM0,XMM2
            jbe .L_44656c

            ucomisd XMM2,QWORD PTR [RIP+.L_44f380-34168]
            jae .L_446890
.L_44656c:

            pxor XMM4,XMM4
            mov DWORD PTR [RSP+84],3
            ucomisd XMM2,XMM4
            jbe .L_446a28

            movsd XMM0,QWORD PTR [RIP+.L_446dd0]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            subsd XMM0,XMM2
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM0
            jmp .L_44638a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4465b0:

            movsd XMM1,QWORD PTR [RIP+.L_446dd0]
            addsd XMM2,XMM1
            movapd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_446de8]
            ucomisd XMM2,XMM0
            ja .L_446800

            ucomisd XMM0,XMM1
            ja .L_446a48

            movsd XMM7,QWORD PTR [RIP+.L_446dc8]
            movsd QWORD PTR [RSP+16],XMM7
            nop
            nop
            nop
            nop
            nop
            nop
.L_4465f0:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+32],XMM3
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            mov RSI,RBP
            movsd XMM1,QWORD PTR [RSP+64]
            mov RDI,R12
            movsd XMM4,QWORD PTR [RSP+72]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+64]
            cmp EBX,2
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+72]
            mulsd XMM1,XMM2
            mulsd XMM2,QWORD PTR [RSP]
            je .L_446948

            cmp EBX,3
            je .L_4469a8
.L_446664:

            pxor XMM0,XMM0
            mov DWORD PTR [RSP+84],0
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM2
            jmp .L_4461d0
          .byte 0x66
          .byte 0x90
.L_446690:

            addsd XMM4,QWORD PTR [RSP+16]
            jmp .L_446290
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4466a0:

            addsd XMM4,QWORD PTR [RIP+.L_446dd0]
            jmp .L_446290
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4466b0:

            movsd XMM7,QWORD PTR [RIP+.L_446dc8]
            movsd XMM1,QWORD PTR [RIP+.L_446de8]
            addsd XMM2,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            ucomisd XMM1,XMM2
            movapd XMM0,XMM2
            jbe .L_446790

            addsd XMM0,QWORD PTR [RIP+.L_446df0]
.L_4466e0:

            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP],XMM3
            mov RSI,RBP
            mov RDI,R12
            call sincos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RSP+64]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM6
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM0,XMM3
            call cos@PLT

            movsd QWORD PTR [RSP],XMM0
            mulsd XMM0,QWORD PTR [RSP+72]
            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446e20]
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            jbe .L_446a68
.L_446753:

            movapd XMM0,XMM2
            mov DWORD PTR [RSP+84],0
.L_44675f:

            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            pxor XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            movsd QWORD PTR [RSP],XMM0
            movsd QWORD PTR [RSP+56],XMM2
            jmp .L_4461d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446790:

            ucomisd XMM2,QWORD PTR [RIP+.L_446dd0]
            jbe .L_4466e0

            subsd XMM0,QWORD PTR [RIP+.L_446df0]
            jmp .L_4466e0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4467b0:

            addsd XMM2,QWORD PTR [RIP+.L_446dd0]
            jmp .L_446494
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4467c0:

            movsd XMM7,QWORD PTR [RIP+.L_446dc8]
            movsd XMM1,QWORD PTR [RIP+.L_446de8]
            subsd XMM2,XMM7
            movsd QWORD PTR [RSP+16],XMM7
            ucomisd XMM1,XMM2
            movapd XMM0,XMM2
            ja .L_446838

            ucomisd XMM2,QWORD PTR [RIP+.L_446dd0]
            jbe .L_4465f0

            subsd XMM0,QWORD PTR [RIP+.L_446df0]
            jmp .L_4465f0
          .byte 0x90
.L_446800:

            movsd XMM4,QWORD PTR [RIP+.L_446dc8]
            addsd XMM0,QWORD PTR [RIP+.L_446df0]
            movsd QWORD PTR [RSP+16],XMM4
            jmp .L_4465f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446820:

            mov DWORD PTR [RSP+84],1
            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            jmp .L_446494
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446838:

            addsd XMM0,QWORD PTR [RIP+.L_446df0]
            jmp .L_4465f0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446848:

            movsd XMM0,QWORD PTR [RIP+.L_446e18]
            ucomisd XMM0,XMM2
            jb .L_4464f8

            addsd XMM2,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],2
            mov RSI,RBP
            mov RDI,R12
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            jmp .L_446441
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446890:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            lea R12,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+84],2
            mov RDI,R12
            mov RSI,RBP
            subsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM2
            jmp .L_44638a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4468c8:

            lea RDI,QWORD PTR [RSP+84]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+24],XMM2
            call .L_445ff0

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            movsd QWORD PTR [RSP+48],XMM0
            mov RSI,RBP
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_44f380-34160]
            movsd XMM5,QWORD PTR [RSP+64]
            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            mulsd XMM0,QWORD PTR [RSP+72]
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd XMM2,QWORD PTR [RIP+.L_446db8]
            jmp .L_4461d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446948:

            movq XMM5,QWORD PTR [RIP+.L_446e60]
            movsd QWORD PTR [RSP+32],XMM3
            xorpd XMM1,XMM5
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP],XMM5
            movapd XMM0,XMM1
            call acos@PLT

            movapd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446e20]
            movapd XMM5,XMMWORD PTR [RSP]
            ucomisd XMM0,XMM4
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            jbe .L_446ac0

            mov DWORD PTR [RSP+84],0
            movapd XMM0,XMM4
            jmp .L_44675f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4469a8:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP],XMM1
            movapd XMM0,XMM2
            call acos@PLT

            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_446e20]
            movsd XMM1,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            movsd XMM3,QWORD PTR [RSP+24]
            ja .L_446753

            lea RDI,QWORD PTR [RSP+84]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM2
            call .L_445ff0

            movsd XMM2,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_4464ad
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446a28:

            xorpd XMM2,XMMWORD PTR [RIP+.L_446e60]
            subsd XMM2,QWORD PTR [RIP+.L_446dd0]
            movsd QWORD PTR [RSP],XMM2
            jmp .L_446500
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446a48:

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            subsd XMM0,QWORD PTR [RIP+.L_446df0]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_4465f0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446a68:

            mulsd XMM1,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RSP+84]
            movsd QWORD PTR [RSP+40],XMM2
            movsd XMM0,QWORD PTR [RSP+32]
            xorpd XMM1,XMMWORD PTR [RIP+.L_446e60]
            call .L_445ff0

            movsd XMM2,QWORD PTR [RSP+40]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM2
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_446514
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446ac0:

            xorpd XMM2,XMM5
            lea RDI,QWORD PTR [RSP+84]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movapd XMM1,XMM2
            call .L_445ff0

            movsd XMM4,QWORD PTR [RSP+24]
            movsd QWORD PTR [RSP],XMM0
            movapd XMM0,XMM4
            call cos@PLT

            mov RSI,RBP
            movsd QWORD PTR [RSP+48],XMM0
            mov RDI,R12
            movsd XMM0,QWORD PTR [RSP]
            jmp .L_44638a
.L_446b06:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_446264
.L_446b26:

            call __stack_chk_fail@PLT
.L_446b2b:

            movsd XMM6,QWORD PTR [RIP+.L_446dc8]
            movsd QWORD PTR [RSP+16],XMM6
            jmp .L_446664
.L_446b3e:

            nop
            nop
.L_446b40:

            push RBX
            mov ESI,40
            mov RBX,RDI
            mov EDI,1
            sub RSP,32
.L_446b52:

            call .L_403c70

            test RAX,RAX
            je .L_446cb0

            movsd XMM0,QWORD PTR [RBX+336]
            lea RCX,QWORD PTR [RIP+.L_4457f0]
            lea RDX,QWORD PTR [RIP+.L_4460a0]
            mov QWORD PTR [RBX+32],RAX
            ucomisd XMM0,QWORD PTR [RIP+.L_446e38]
            mov QWORD PTR [RBX+48],RCX
            mov QWORD PTR [RBX+40],RDX
            jae .L_446bc8

            movsd XMM1,QWORD PTR [RIP+.L_446e40]
            ucomisd XMM1,XMM0
            jb .L_446c50

            pxor XMM3,XMM3
            mov DWORD PTR [RAX],5
.L_446ba8:

            movsd XMM0,QWORD PTR [RBX+176]
            ucomisd XMM0,XMM3
            jp .L_446bd8

            jne .L_446bd8

            add RSP,32
.L_446bbc:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446bc8:

            mov DWORD PTR [RAX],4
            pxor XMM3,XMM3
            jmp .L_446ba8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446bd8:

            movsd XMM2,QWORD PTR [RBX+128]
            movapd XMM1,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RAX+8],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_446db8]
            movapd XMM5,XMM1
            subsd XMM5,XMM0
            ucomisd XMM3,XMM5
            sqrtsd XMM4,XMM5
            movapd XMM0,XMM5
            ja .L_446ccf

            movapd XMM3,XMM2
.L_446c13:

            mulsd XMM2,XMM4
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RAX+16],XMM2
            divsd XMM0,XMM3
            subsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RAX+24],XMM1
            mulsd XMM0,XMM1
            movsd QWORD PTR [RAX+32],XMM0
            add RSP,32
.L_446c42:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446c50:

            movsd XMM1,QWORD PTR [RBX+328]
            movsd XMM2,QWORD PTR [RIP+.L_446df8]
            movapd XMM0,XMM1
            andpd XMM0,XMMWORD PTR [RIP+.L_446e50]
            ucomisd XMM2,XMM0
            jae .L_446ca0

            movsd XMM2,QWORD PTR [RIP+.L_446e00]
            ucomisd XMM2,XMM0
            jb .L_446cc0

            pxor XMM3,XMM3
            xor EDX,EDX
            ucomisd XMM1,XMM3
            setbe DL
            lea EDX,DWORD PTR [RDX+RDX*1+1]
            mov DWORD PTR [RAX],EDX
            jmp .L_446ba8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446ca0:

            mov DWORD PTR [RAX],0
            pxor XMM3,XMM3
            jmp .L_446ba8
          .byte 0x90
.L_446cb0:

            add RSP,32
.L_446cb4:

            mov RDI,RBX
            pop RBX
            jmp .L_4457b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446cc0:

            mov DWORD PTR [RAX],2
            pxor XMM3,XMM3
            jmp .L_446ba8
.L_446ccf:

            movsd QWORD PTR [RSP+24],XMM1
            mov QWORD PTR [RSP+16],RAX
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+128]
            movsd XMM2,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_446c13
.L_446d0d:

            nop
            nop
            nop
.L_446d10:

            test RDI,RDI
            je .L_446d20

            jmp .L_446b40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446d20:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_446d4e

            lea RDX,QWORD PTR [RIP+.L_4457e0]
            lea RCX,QWORD PTR [RIP+.L_446d80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_446d4e:

            add RSP,8
            ret 
.L_446d53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446d60:

            xor EAX,EAX
            ret 
.L_446d63:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446d80:
          .string "Quadrilateralized Spherical Cube\n\tAzi, Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446db0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_446db8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_446dc0:
          .zero 8
.L_446dc8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_446dd0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_446dd8:
          .byte 0x65
          .byte 0x73
          .byte 0x2d

            cmp BYTE PTR [RDX-63],DL
            sar BYTE PTR [RDI],1
.L_446de0:

            int3 
          .byte 0x3b
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_446de8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0xc0
.L_446df0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_446df8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_446e00:

            shl BYTE PTR [RCX],CL
.L_446e02:

            xor EDI,DWORD PTR [RDI+124]
            fld DWORD PTR [RDX]
            shl BYTE PTR [RCX],CL
            xor EDI,DWORD PTR [RDI+124]
            fld DWORD PTR [RDX]
            ror CH,59
            jg .L_446e7a
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_446e18:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0xbf
.L_446e20:

            mov EBX,3755595709
            jl .L_446e02
          .byte 0x3d
.L_446e28:
          .byte 0xc4
          .byte 0xac
          .byte 0xae
          .byte 0xa4
          .byte 0xc8
          .byte 0x8e
          .byte 0xe
          .byte 0x40
.L_446e30:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0x12
          .byte 0x40
.L_446e38:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0xf2
          .byte 0x3f
.L_446e40:
          .byte 0xd2
          .byte 0x21
          .byte 0x33
          .byte 0x7f
          .byte 0x7c
          .byte 0xd9
          .byte 0xf2
          .byte 0xbf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446e50:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446e60:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_446e70:

            test RDI,RDI
            je .L_446e80

            jmp .L_403ca0
.L_446e7a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_446e80:

            ret 
.L_446e82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446e90:

            movq XMM4,QWORD PTR [RIP+.L_447650]
            movapd XMM2,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_447670]
            movsd XMM7,QWORD PTR [RIP+.L_447678]
            andpd XMM2,XMM4
            mulsd XMM5,XMM2
            movapd XMM6,XMM5
            movapd XMM3,XMM5
            andpd XMM6,XMM4
            ucomisd XMM7,XMM6
            jbe .L_446edc

            cvttsd2si RAX,XMM5
            pxor XMM3,XMM3
            andnpd XMM4,XMM5
            cvtsi2sd XMM3,RAX
            orpd XMM3,XMM4
.L_446edc:

            cvttsd2si EAX,XMM3
            test EAX,EAX
            js .L_446fd0

            pxor XMM3,XMM3
            cmp EAX,17
            mov EDX,17
            cmovg EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_447500]
            pxor XMM4,XMM4
            cvtsi2sd XMM3,EAX
            cdqe 
            shl RAX,4
            add RDX,RAX
            cvtss2sd XMM4,DWORD PTR [RDX+8]
            mulsd XMM3,QWORD PTR [RIP+.L_447680]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_447688]
            mulsd XMM3,XMM2
            pxor XMM2,XMM2
            cvtss2sd XMM2,DWORD PTR [RDX+12]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RDX+4]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RDX]
            lea RDX,QWORD PTR [RIP+.L_4473c0]
            mulsd XMM2,XMM3
            add RAX,RDX
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RAX+8]
            mulsd XMM2,QWORD PTR [RIP+.L_447690]
            mulsd XMM0,XMM2
            pxor XMM2,XMM2
            cvtss2sd XMM2,DWORD PTR [RAX+12]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RAX+4]
            mulsd XMM2,XMM3
            addsd XMM2,XMM4
            mulsd XMM2,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX]
            addsd XMM2,XMM3
            pxor XMM3,XMM3
            ucomisd XMM3,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_447698]
            jbe .L_446fc9

            xorpd XMM2,XMMWORD PTR [RIP+.L_447660]
.L_446fc9:

            movapd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0x90
.L_446fd0:

            sub RSP,8
.L_446fd4:

            mov ESI,4294967276
            call .L_415fe0

            pxor XMM0,XMM0
            add RSP,8
            movapd XMM1,XMM0
            ret 
.L_446feb:

            nop
            nop
            nop
            nop
            nop
.L_446ff0:

            push RBP
            push RBX
            movapd XMM2,XMM1
            sub RSP,40
.L_446ffa:

            divsd XMM2,QWORD PTR [RIP+.L_447698]
            movq XMM8,QWORD PTR [RIP+.L_447650]
            divsd XMM0,QWORD PTR [RIP+.L_447690]
            andpd XMM2,XMM8
            ucomisd XMM2,QWORD PTR [RIP+.L_4476b0]
            jb .L_447088

            ucomisd XMM2,QWORD PTR [RIP+.L_4476b8]
            ja .L_447058

            pxor XMM2,XMM2
            ucomisd XMM2,XMM1
            ja .L_4472b0

            movsd XMM2,QWORD PTR [RIP+.L_4476a8]
.L_447042:

            divsd XMM0,QWORD PTR [RIP+.L_4476c0]
.L_44704a:

            add RSP,40
.L_44704e:

            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_447058:

            mov ESI,4294967276
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM0
            call .L_415fe0

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            add RSP,40
            movapd XMM1,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_447088:

            movsd XMM5,QWORD PTR [RIP+.L_4476c8]
            movsd XMM7,QWORD PTR [RIP+.L_447678]
            movapd XMM4,XMM8
            mulsd XMM5,XMM2
            movapd XMM6,XMM5
            movapd XMM3,XMM5
            andpd XMM6,XMM8
            ucomisd XMM7,XMM6
            ja .L_447280
.L_4470b8:

            cvttsd2si EBX,XMM3
            cmp EBX,17
            ja .L_447058

            lea RDX,QWORD PTR [RIP+.L_4473c0]
            movsxd RAX,EBX
            shl RAX,4
            movss XMM3,DWORD PTR [RDX+RAX*1]
            nop
            nop
            nop
            nop
.L_4470d8:

            pxor XMM5,XMM5
            cvtss2sd XMM5,XMM3
            ucomisd XMM5,XMM2
            jbe .L_447103
.L_4470e6:

            sub EBX,1
            pxor XMM5,XMM5
            movsxd RAX,EBX
            shl RAX,4
            movss XMM3,DWORD PTR [RDX+RAX*1]
            cvtss2sd XMM5,XMM3
            ucomisd XMM5,XMM2
            ja .L_4470e6
.L_447103:

            lea ECX,DWORD PTR [RBX+1]
            pxor XMM4,XMM4
            movsxd RAX,ECX
            shl RAX,4
            movss XMM6,DWORD PTR [RDX+RAX*1]
            cvtss2sd XMM4,XMM6
            ucomisd XMM2,XMM4
            jb .L_447130

            movaps XMM3,XMM6
            mov EBX,ECX
            jmp .L_4470d8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447130:

            movapd XMM4,XMM2
            movsxd RBP,EBX
            mov RAX,RBP
            subss XMM6,XMM3
            subsd XMM4,XMM5
            shl RAX,4
            add RDX,RAX
            subsd XMM5,XMM2
            mov EAX,100
            movss XMM9,DWORD PTR [RDX+8]
            movaps XMM10,XMM9
            cvtss2sd XMM6,XMM6
            mulsd XMM4,QWORD PTR [RIP+.L_4476d0]
            addss XMM10,XMM9
            pxor XMM7,XMM7
            cvtsd2ss XMM5,XMM5
            cvtss2sd XMM9,XMM9
            cvtss2sd XMM5,XMM5
            cvtss2sd XMM7,DWORD PTR [RDX+4]
            cvtss2sd XMM10,XMM10
            divsd XMM4,XMM6
            pxor XMM6,XMM6
            movsd XMM12,QWORD PTR [RIP+.L_4476d8]
            movsd XMM11,QWORD PTR [RIP+.L_4476e0]
            cvtss2sd XMM6,DWORD PTR [RDX+12]
            jmp .L_4471b9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4471b0:

            sub EAX,1
            je .L_4472c0
.L_4471b9:

            movapd XMM2,XMM4
            movapd XMM3,XMM4
            mulsd XMM2,XMM6
            mulsd XMM3,XMM12
            addsd XMM2,XMM9
            mulsd XMM3,XMM6
            mulsd XMM2,XMM4
            addsd XMM3,XMM10
            addsd XMM2,XMM7
            mulsd XMM3,XMM4
            mulsd XMM2,XMM4
            addsd XMM3,XMM7
            addsd XMM2,XMM5
            divsd XMM2,XMM3
            subsd XMM4,XMM2
            andpd XMM2,XMM8
            ucomisd XMM11,XMM2
            jbe .L_4471b0
.L_447204:

            pxor XMM2,XMM2
            lea EDX,DWORD PTR [RBX+RBX*4]
            pxor XMM3,XMM3
            cvtsi2sd XMM2,EDX
            ucomisd XMM3,XMM1
            addsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RIP+.L_4476e8]
            ja .L_4472a0
.L_447225:

            lea RAX,QWORD PTR [RIP+.L_447500]
            pxor XMM1,XMM1
            shl RBP,4
            pxor XMM3,XMM3
            add RAX,RBP
            cvtss2sd XMM1,DWORD PTR [RAX+12]
            cvtss2sd XMM3,DWORD PTR [RAX+8]
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RAX+4]
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            mulsd XMM4,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RAX]
            addsd XMM4,XMM1
            divsd XMM0,XMM4
            jmp .L_44704a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447280:

            cvttsd2si RAX,XMM5
            pxor XMM3,XMM3
            andnpd XMM4,XMM5
            cvtsi2sd XMM3,RAX
            orpd XMM3,XMM4
            jmp .L_4470b8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4472a0:

            xorpd XMM2,XMMWORD PTR [RIP+.L_447660]
            jmp .L_447225
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4472b0:

            movsd XMM2,QWORD PTR [RIP+.L_4476a0]
            jmp .L_447042
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4472c0:

            mov RDI,QWORD PTR [RDI]
            mov ESI,4294967243
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404af0

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            jmp .L_447204
.L_4472f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447300:

            test RDI,RDI
            je .L_447330

            lea RAX,QWORD PTR [RIP+.L_446ff0]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_446e90]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447330:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44735e

            lea RDX,QWORD PTR [RIP+.L_446e70]
            lea RCX,QWORD PTR [RIP+.L_447630]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44735e:

            add RSP,8
            ret 
.L_447363:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447370:

            lea RDX,QWORD PTR [RIP+.L_446ff0]
            lea RCX,QWORD PTR [RIP+.L_446e90]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_447395:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4473a0:

            xor EAX,EAX
            ret 
.L_4473a3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4473c0:
          .byte 0xff
          .byte 0xff
          .byte 0xbf
          .byte 0xa2
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x56
          .byte 0x33
          .byte 0xb3
          .byte 0x21
          .byte 0x42
          .byte 0xe1
          .byte 0xb9
          .byte 0xae
          .byte 0xb6
          .byte 0xf3
          .byte 0x7d
          .byte 0x3d
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x52
          .byte 0x43
          .byte 0xae
          .byte 0xb0
          .byte 0x93
          .byte 0x59
          .byte 0xe8
          .byte 0x2f
          .byte 0xb6
          .byte 0xf3
          .byte 0xfd
          .byte 0x3d
          .byte 0x5f
          .byte 0x29
          .byte 0x4b
          .byte 0x3c
          .byte 0x3c
          .byte 0x43
          .byte 0xae
          .byte 0x31
          .byte 0x82
          .byte 0xbb
          .byte 0xdc
          .byte 0xb0
          .byte 0xc9
          .byte 0x76
          .byte 0x3e
          .byte 0x3e
          .byte 0xf3
          .byte 0x28
          .byte 0x4b
          .byte 0x3c
          .byte 0x1
          .byte 0x5f
          .byte 0xa3
          .byte 0xb2
          .byte 0xee
          .byte 0x35
          .byte 0xce
          .byte 0x31
          .byte 0xb6
          .byte 0xf3
          .byte 0x7d
          .byte 0x3e
          .byte 0x35
          .byte 0x2a
          .byte 0x4b
          .byte 0x3c
          .byte 0xcf
          .byte 0x7a
          .byte 0x98
          .byte 0x33
          .byte 0x1f
          .byte 0x6a
          .byte 0xc0
          .byte 0xb2
          .byte 0x52
          .byte 0xb8
          .byte 0x9e
          .byte 0x3e
          .byte 0x4
          .byte 0x26
          .byte 0x4b
          .byte 0x3c
          .byte 0xe9
          .byte 0x44
          .byte 0x8e
          .byte 0xb4
          .byte 0xd1
          .byte 0x86
          .byte 0xb3
          .byte 0x33
          .byte 0xc9
          .byte 0x76
          .byte 0xbe
          .byte 0x3e
          .byte 0x88
          .byte 0x35
          .byte 0x4b
          .byte 0x3c
          .byte 0x32
          .byte 0xbd
          .byte 0x84
          .byte 0x35
          .byte 0x21
          .byte 0x80
          .byte 0xa7
          .byte 0xb4
          .byte 0x3f
          .byte 0x35
          .byte 0xde
          .byte 0x3e
          .byte 0x7e
          .byte 0xfc
          .byte 0x4a
          .byte 0x3c
          .byte 0xb2
          .byte 0xb1
          .byte 0x77
          .byte 0xb6
          .byte 0x4b
          .byte 0xdf
          .byte 0xe9
          .byte 0xb4
          .byte 0x7f
          .byte 0xd9
          .byte 0xfd
          .byte 0x3e
          .byte 0xfd
          .byte 0xd8
          .byte 0x49
          .byte 0x3c
          .byte 0xe6
          .byte 0x8c
          .byte 0x2b
          .byte 0xb7
          .byte 0x52
          .byte 0x80
          .byte 0xb9
          .byte 0xb4
          .byte 0x1b
          .byte 0x9e
          .byte 0xe
          .byte 0x3f
          .byte 0x47
          .byte 0xbf
          .byte 0x47
          .byte 0x3c
          .byte 0xa5
          .byte 0x40
          .byte 0x81
          .byte 0xb7
          .byte 0x87
          .byte 0x4e
          .byte 0x1c
          .byte 0xb5
          .byte 0x9
          .byte 0x1b
          .byte 0x1e
          .byte 0x3f
          .byte 0xa5
          .byte 0x81
          .byte 0x44
          .byte 0x3c
          .byte 0x69
          .byte 0x85
          .byte 0xca
          .byte 0xb7
          .byte 0x32
          .byte 0x4
          .byte 0xd
          .byte 0xb5
          .byte 0x52
          .byte 0x49
          .byte 0x2d
          .byte 0x3f
          .byte 0xe2
          .byte 0xe7
          .byte 0x3f
          .byte 0x3c
          .byte 0xaf
          .byte 0x4f
          .byte 0x6
          .byte 0xb8
          .byte 0x15
          .byte 0x9f
          .byte 0xa
          .byte 0xb5
          .byte 0xbf
          .byte 0xe
          .byte 0x3c
          .byte 0x3f
          .byte 0x8c
          .byte 0x6
          .byte 0x3a
          .byte 0x3c
          .byte 0xff
          .byte 0xcc
          .byte 0x26
          .byte 0xb8
          .byte 0xbc
          .byte 0x7d
          .byte 0x23
          .byte 0xb5
          .byte 0x1a
          .byte 0x51
          .byte 0x4a
          .byte 0x3f
          .byte 0xcb
          .byte 0xc2
          .byte 0x32
          .byte 0x3c
          .byte 0x7c
          .byte 0x1e
          .byte 0x4d
          .byte 0xb8
          .byte 0xc
          .byte 0x94
          .byte 0x8c
          .byte 0xb5
          .byte 0x9e
          .byte 0xef
          .byte 0x57
          .byte 0x3f
          .byte 0x1b
          .byte 0x76
          .byte 0x29
          .byte 0x3c
          .byte 0xea
          .byte 0x81
          .byte 0x87
          .byte 0xb8
          .byte 0xb6
          .byte 0xed
          .byte 0xc0
          .byte 0xb0
          .byte 0xf8
          .byte 0xc2
          .byte 0x64
          .byte 0x3f
          .byte 0x94
          .byte 0xdf
          .byte 0x1e
          .byte 0x3c
          .byte 0x30
          .byte 0x8d
          .byte 0x87
          .byte 0xb8
          .byte 0x16
          .byte 0x65
          .byte 0xf
          .byte 0xb7
          .byte 0x85
          .byte 0x7c
          .byte 0x70
          .byte 0x3f
          .byte 0xe0
          .byte 0xc7
          .byte 0x9
          .byte 0x3c
          .byte 0x5d
          .byte 0x35
          .byte 0x4a
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0xb1
          .byte 0xe1
          .byte 0x79
          .byte 0x3f
          .byte 0x9
          .byte 0x6
          .byte 0xca
          .byte 0x3b
          .byte 0xbd
          .byte 0x37
          .byte 0x86
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0x26
          .byte 0x94
          .byte 0x57
          .byte 0x3b
          .byte 0xcc
          .byte 0x54
          .byte 0xa7
          .byte 0xb9
          .byte 0xc7
          .byte 0x48
          .byte 0x8d
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447500:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0xe8
          .byte 0xbf
          .byte 0xcc
          .byte 0x23
          .byte 0xeb
          .byte 0xd
          .byte 0x96
          .byte 0xb8
          .byte 0x8c
          .byte 0xba
          .byte 0x50
          .byte 0x36
          .byte 0x40
          .byte 0xa4
          .byte 0x7f
          .byte 0x3f
          .byte 0x8f
          .byte 0xd5
          .byte 0xfc
          .byte 0xb9
          .byte 0xe6
          .byte 0xd9
          .byte 0xd0
          .byte 0xb7
          .byte 0x60
          .byte 0xa1
          .byte 0xb2
          .byte 0xb5
          .byte 0x89
          .byte 0xd2
          .byte 0x7e
          .byte 0x3f
          .byte 0x7b
          .byte 0xd9
          .byte 0x59
          .byte 0xba
          .byte 0x98
          .byte 0x28
          .byte 0x3c
          .byte 0xb8
          .byte 0xca
          .byte 0x6e
          .byte 0x84
          .byte 0xb5
          .byte 0xa4
          .byte 0x70
          .byte 0x7d
          .byte 0x3f
          .byte 0x9f
          .byte 0x6c
          .byte 0xb1
          .byte 0xba
          .byte 0x83
          .byte 0x3c
          .byte 0x7a
          .byte 0xb8
          .byte 0x68
          .byte 0xce
          .byte 0x76
          .byte 0x36
          .byte 0x76
          .byte 0x71
          .byte 0x7b
          .byte 0x3f
          .byte 0x36
          .byte 0x78
          .byte 0xdb
          .byte 0xba
          .byte 0xcb
          .byte 0xd7
          .byte 0x96
          .byte 0xb6
          .byte 0xbb
          .byte 0x11
          .byte 0xc0
          .byte 0xb6
          .byte 0x87
          .byte 0x16
          .byte 0x79
          .byte 0x3f
          .byte 0xde
          .byte 0xd0
          .byte 0xc
          .byte 0xbb
          .byte 0x19
          .byte 0x7e
          .byte 0xbd
          .byte 0xb8
          .byte 0xe6
          .byte 0xf0
          .byte 0xa0
          .byte 0x32
          .byte 0x8f
          .byte 0xc2
          .byte 0x75
          .byte 0x3f
          .byte 0xc5
          .byte 0xf0
          .byte 0x47
          .byte 0xbb
          .byte 0x3d
          .byte 0xe7
          .byte 0xbc
          .byte 0xb8
          .byte 0xd
          .byte 0x59
          .byte 0xdd
          .byte 0x35
          .byte 0xca
          .byte 0x54
          .byte 0x71
          .byte 0x3f
          .byte 0xd7
          .byte 0xdd
          .byte 0x7a
          .byte 0xbb
          .byte 0x65
          .byte 0x6
          .byte 0x89
          .byte 0xb8
          .byte 0x3b
          .byte 0x84
          .byte 0x2f
          .byte 0xb6
          .byte 0xfa
          .byte 0xed
          .byte 0x6b
          .byte 0x3f
          .byte 0x61
          .byte 0x45
          .byte 0x99
          .byte 0xbb
          .byte 0x97
          .byte 0x4c
          .byte 0xdb
          .byte 0xb8
          .byte 0x75
          .byte 0x7a
          .byte 0xa1
          .byte 0x36
          .byte 0x5d
          .byte 0x6d
          .byte 0x65
          .byte 0x3f
          .byte 0xa5
          .byte 0xb5
          .byte 0xaf
          .byte 0xbb
          .byte 0x17
          .byte 0xd3
          .byte 0x7
          .byte 0xb8
          .byte 0x74
          .byte 0x58
          .byte 0xb6
          .byte 0xb6
          .byte 0xb2
          .byte 0x2e
          .byte 0x5e
          .byte 0x3f
          .byte 0x13
          .byte 0xad
          .byte 0xc7
          .byte 0xbb
          .byte 0x86
          .byte 0xdc
          .byte 0xee
          .byte 0xb8
          .byte 0x51
          .byte 0x20
          .byte 0x5f
          .byte 0x36
          .byte 0x8f
          .byte 0xc2
          .byte 0x55
          .byte 0x3f
          .byte 0xbf
          .byte 0xd3
          .byte 0xe4
          .byte 0xbb
          .byte 0x52
          .byte 0x45
          .byte 0x86
          .byte 0xb8
          .byte 0xe5
          .byte 0xf9
          .byte 0x7a
          .byte 0x35
          .byte 0xd
          .byte 0x71
          .byte 0x4c
          .byte 0x3f
          .byte 0x58
          .byte 0x82
          .byte 0xf7
          .byte 0xbb
          .byte 0xf
          .byte 0xb8
          .byte 0x51
          .byte 0xb8
          .byte 0xfa
          .byte 0x12
          .byte 0x7b
          .byte 0x35
          .byte 0xb3
          .byte 0x7b
          .byte 0x42
          .byte 0x3f
          .byte 0x23
          .byte 0xcc
          .byte 0x2
          .byte 0xbc
          .byte 0x91
          .byte 0xdf
          .byte 0x16
          .byte 0xb8
          .byte 0xd9
          .byte 0xc1
          .byte 0x18
          .byte 0xb6
          .byte 0x2b
          .byte 0xf6
          .byte 0x37
          .byte 0x3f
          .byte 0xec
          .byte 0x7c
          .byte 0xb
          .byte 0xbc
          .byte 0xa6
          .byte 0xa
          .byte 0x93
          .byte 0xb8
          .byte 0xdb
          .byte 0xca
          .byte 0x10
          .byte 0xb7
          .byte 0xd6
          .byte 0x56
          .byte 0x2c
          .byte 0x3f
          .byte 0x9b
          .byte 0x94
          .byte 0x21
          .byte 0xbc
          .byte 0x65
          .byte 0x43
          .byte 0x51
          .byte 0xb9
          .byte 0x1a
          .byte 0xa
          .byte 0xa1
          .byte 0x37
          .byte 0x84
          .byte 0xd
          .byte 0x1f
          .byte 0x3f
          .byte 0x42
          .byte 0xb0
          .byte 0x2a
          .byte 0xbc
          .byte 0x41
          .byte 0x5f
          .byte 0xb9
          .byte 0x38
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
          .byte 0xb3
          .byte 0x7b
          .byte 0x12
          .byte 0x3f
          .byte 0x9a
          .byte 0x89
          .byte 0x14
          .byte 0xbc
          .byte 0x41
          .byte 0xd7
          .byte 0x3e
          .byte 0x39
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
          .byte 0x42
          .byte 0x3e
          .byte 0x8
          .byte 0x3f
          .byte 0xbc
          .byte 0x19
          .byte 0xde
          .byte 0xbb
          .byte 0x7b
          .byte 0x7f
          .byte 0x90
          .byte 0x39
          .byte 0x93
          .byte 0x65
          .byte 0xd1
          .byte 0x36
.L_447630:
          .string "Robinson\n\tPCyl., Sph."
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447650:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447660:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447670:
          .byte 0x93
          .byte 0x1
          .byte 0x83
          .byte 0x7b
          .byte 0x16
          .byte 0xeb
          .byte 0x26
          .byte 0x40
.L_447678:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_447680:
          .byte 0x87
          .byte 0x44
          .byte 0xe7
          .byte 0x4a
          .byte 0x18
          .byte 0x57
          .byte 0xb6
          .byte 0x3f
.L_447688:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_447690:
          .byte 0xb8
          .byte 0xaf
          .byte 0x3
          .byte 0xe7
          .byte 0x8c
          .byte 0x28
          .byte 0xeb
          .byte 0x3f
.L_447698:

            ret 9751
          .byte 0x53
          .byte 0x5
          .byte 0xa3
          .byte 0xf5
          .byte 0x3f
.L_4476a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_4476a8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_4476b0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4476b8:
          .byte 0xb
          .byte 0x7a
          .byte 0x6f
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4476c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0xc8
          .byte 0x7
          .byte 0xe1
          .byte 0x3f
.L_4476c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x40
.L_4476d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_4476d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_4476e0:
          .byte 0x3a
          .byte 0x8c
          .byte 0x30
          .byte 0xe2
          .byte 0x8e
          .byte 0x79
          .byte 0x45
          .byte 0x3e
.L_4476e8:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_4476f0:

            test RDI,RDI
            je .L_447718

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_44770e

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_44770e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447718:

            xor EAX,EAX
            ret 
.L_44771b:

            nop
            nop
            nop
            nop
            nop
.L_447720:

            jmp .L_4476f0
.L_447722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447730:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_447744:

            mov RBX,QWORD PTR [RSI+32]
            movsd XMM0,QWORD PTR [RSI+128]
            mov R12,RSP
            movsd XMM1,QWORD PTR [RSP+96]
            lea R15,QWORD PTR [R12+16]
            lea R14,QWORD PTR [R12+8]
            movsd XMM3,QWORD PTR [RBX+128]
            lea RDI,QWORD PTR [RBX+136]
            mulsd XMM1,XMM0
            mov RCX,R15
            mov RDX,R14
            mulsd XMM0,QWORD PTR [RSP+104]
            mov RSI,R12
            movsd XMM2,QWORD PTR [RSP+112]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            divsd XMM1,XMM3
            divsd XMM0,XMM3
            call .L_40a6b0

            test RAX,RAX
            jne .L_447888

            movsd XMM3,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+184]
            mov RCX,R15
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,R14
            movsd XMM2,QWORD PTR [RBX+80]
            mov RSI,R12
            movsd XMM1,QWORD PTR [RBX+88]
            mulsd XMM2,XMM3
            mulsd XMM1,XMM0
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RBX+64]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+96]
            mulsd XMM5,XMM0
            mulsd XMM1,XMM4
            mulsd XMM0,QWORD PTR [RBX+40]
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+56]
            mulsd XMM1,XMM3
            mulsd XMM3,QWORD PTR [RBX+32]
            addsd XMM2,QWORD PTR [RBX+120]
            addsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RBX+72]
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RBX+48]
            addsd XMM0,XMM3
            addsd XMM1,XMM5
            addsd XMM0,XMM4
            addsd XMM1,QWORD PTR [RBX+112]
            addsd XMM0,QWORD PTR [RBX+104]
            call .L_40a8d0

            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RBP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM0
.L_447863:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4478af

            add RSP,40
.L_44787a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_447888:

            mov ESI,4294967276
            mov RDI,R13
            call .L_415fe0

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            jmp .L_447863
.L_4478af:

            call __stack_chk_fail@PLT
.L_4478b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4478c0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_4478d4:

            mov RBX,QWORD PTR [RSI+32]
            mov R12,RSP
            movsd XMM2,QWORD PTR [RSP+112]
            lea R15,QWORD PTR [R12+16]
            lea R14,QWORD PTR [R12+8]
            mov RSI,R12
            lea RDI,QWORD PTR [RBX+184]
            movsd XMM1,QWORD PTR [RSP+96]
            movsd XMM0,QWORD PTR [RSP+104]
            mov RCX,R15
            mov RDX,R14
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_40a6b0

            test RAX,RAX
            jne .L_447a30

            movsd XMM3,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+136]
            mov RCX,R15
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,R14
            subsd XMM3,QWORD PTR [RBX+104]
            movsd XMM2,QWORD PTR [RBX+48]
            subsd XMM0,QWORD PTR [RBX+112]
            movsd XMM1,QWORD PTR [RBX+72]
            movsd XMM4,QWORD PTR [RSP+16]
            mov RSI,R12
            movsd XMM5,QWORD PTR [RBX+64]
            subsd XMM4,QWORD PTR [RBX+120]
            movsd XMM6,QWORD PTR [RBX+96]
            mulsd XMM2,XMM3
            movsd QWORD PTR [RSP],XMM3
            mulsd XMM1,XMM0
            movsd QWORD PTR [RSP+8],XMM0
            mulsd XMM5,XMM0
            mulsd XMM0,QWORD PTR [RBX+56]
            mulsd XMM6,XMM4
            movsd QWORD PTR [RSP+16],XMM4
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM1,XMM3
            mulsd XMM3,QWORD PTR [RBX+32]
            addsd XMM2,XMM6
            addsd XMM1,XMM5
            movsd XMM5,QWORD PTR [RBX+88]
            mulsd XMM5,XMM4
            mulsd XMM4,QWORD PTR [RBX+80]
            addsd XMM0,XMM3
            addsd XMM1,XMM5
            addsd XMM0,XMM4
            call .L_40a8d0

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [R13+128]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            movsd QWORD PTR [RBP+8],XMM1
            movsd QWORD PTR [RBP],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+16],XMM0
.L_447a05:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_447a57

            add RSP,40
.L_447a1c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447a30:

            mov ESI,4294967276
            mov RDI,R13
            call .L_415fe0

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            jmp .L_447a05
.L_447a57:

            call __stack_chk_fail@PLT
.L_447a5c:

            nop
            nop
            nop
            nop
.L_447a60:

            push R14
            push R13
            mov ESI,232
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,1
            sub RSP,112
.L_447a79:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            call .L_403c70

            test RAX,RAX
            je .L_447ea5

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447fc3]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX+24],0
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            je .L_447e98

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447fcb]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447fd3]
            mov QWORD PTR [RBP],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_447e98

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447fdb]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447fe3]
            mov QWORD PTR [RBP+8],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_447e98

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447feb]
            call .L_4043f0

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447ff3]
            mov QWORD PTR [RBP+16],RAX
            call .L_4043f0

            test EAX,EAX
            jne .L_447ed0
.L_447b57:

            movsd XMM0,QWORD PTR [RIP+.L_448048]
            mov RBP,QWORD PTR [RBX+32]
            pxor XMM3,XMM3
            subsd XMM0,QWORD PTR [RBX+176]
            movsd XMM1,QWORD PTR [RBX+128]
            ucomisd XMM3,XMM0
            sqrtsd XMM2,XMM0
            ja .L_447f03

            movapd XMM0,XMM1
.L_447b89:

            mulsd XMM1,XMM2
            lea R12,QWORD PTR [RBP+184]
            mov RDI,R12
            call .L_40a5e0

            test RAX,RAX
            jne .L_447e98

            lea R13,QWORD PTR [RSP+72]
            lea R14,QWORD PTR [RSP+64]
            movsd XMM0,QWORD PTR [RBP]
            mov RSI,R14
            mov RDI,R13
            call sincos@PLT

            movsd XMM4,QWORD PTR [RSP+64]
            mov RSI,R14
            movsd XMM7,QWORD PTR [RSP+72]
            mov RDI,R13
            movsd XMM0,QWORD PTR [RBP+8]
            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+8],XMM7
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RBX+176]
            movapd XMM0,XMM7
            pxor XMM6,XMM6
            movsd XMM4,QWORD PTR [RSP+64]
            mulsd XMM0,XMM5
            movsd XMM3,QWORD PTR [RSP+72]
            mulsd XMM0,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_448048]
            subsd XMM7,XMM0
            movapd XMM0,XMM7
            sqrtsd XMM7,XMM7
            ucomisd XMM6,XMM0
            ja .L_447f2d
.L_447c2f:

            movsd XMM6,QWORD PTR [RBX+128]
            movapd XMM0,XMM7
            movsd XMM1,QWORD PTR [RIP+.L_448050]
            movapd XMM2,XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            divsd XMM2,XMM7
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+16],XMM6
            movsd QWORD PTR [RSP+24],XMM2
            call pow@PLT

            movsd XMM5,QWORD PTR [RSP+48]
            mov RSI,R14
            movsd XMM1,QWORD PTR [RIP+.L_448048]
            mov RDI,R13
            movsd XMM6,QWORD PTR [RSP+16]
            subsd XMM1,XMM5
            mulsd XMM1,XMM6
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RBP+16]
            movsd QWORD PTR [RSP+16],XMM1
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBP+136]
            movsd XMM6,QWORD PTR [RSP+64]
            movsd XMM5,QWORD PTR [RSP+72]
            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,XMM6
            movsd QWORD PTR [RSP+24],XMM6
            mulsd XMM0,XMM1
            movsd QWORD PTR [RSP+16],XMM5
            mulsd XMM1,XMM5
            mulsd XMM2,XMM6
            mulsd XMM1,XMM5
            addsd XMM1,XMM2
            divsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBP+24]
            movsd QWORD PTR [RBP+128],XMM0
            movapd XMM1,XMM0
            call .L_40a5e0

            test RAX,RAX
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            jne .L_447e98

            movsd XMM8,QWORD PTR [RSP+56]
            movapd XMM2,XMM5
            movsd XMM9,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+80]
            movapd XMM0,XMM8
            mov RDI,R12
            movapd XMM1,XMM9
            movsd QWORD PTR [RBP+80],XMM9
            mulsd XMM0,XMM4
            movapd XMM7,XMM6
            mulsd XMM1,XMM4
            lea RCX,QWORD PTR [RSI+16]
            lea RDX,QWORD PTR [RSI+8]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RBP+32],XMM0
            movq XMM0,QWORD PTR [RIP+.L_44f380-29472]
            mulsd XMM7,XMM1
            xorpd XMM2,XMM0
            mulsd XMM1,XMM5
            xorpd XMM0,XMM4
            mulsd XMM2,XMM3
            mulsd XMM0,XMM6
            subsd XMM2,XMM7
            movapd XMM7,XMM6
            movsd QWORD PTR [RBP+40],XMM2
            movapd XMM2,XMM3
            mulsd XMM2,XMM6
            mulsd XMM6,XMM8
            subsd XMM2,XMM1
            movapd XMM1,XMM8
            movsd QWORD PTR [RBP+88],XMM6
            mulsd XMM1,XMM3
            movsd QWORD PTR [RBP+48],XMM2
            movapd XMM2,XMM4
            movsd QWORD PTR [RBP+56],XMM1
            movapd XMM1,XMM9
            mulsd XMM2,XMM5
            mulsd XMM1,XMM3
            mulsd XMM7,XMM1
            mulsd XMM1,XMM5
            mulsd XMM5,XMM8
            subsd XMM2,XMM7
            subsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBP+8]
            movsd QWORD PTR [RBP+96],XMM5
            movsd QWORD PTR [RBP+64],XMM2
            movsd QWORD PTR [RBP+72],XMM0
            movsd XMM2,QWORD PTR [RBP+24]
            movsd XMM0,QWORD PTR [RBP]
            call .L_40a6b0

            test RAX,RAX
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            jne .L_447eec

            movsd XMM0,QWORD PTR [RBP+128]
            lea RAX,QWORD PTR [RIP+.L_4478c0]
            movsd XMM1,QWORD PTR [RSP+56]
            movsd XMM2,QWORD PTR [RSP+80]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM3,XMM1
            mulsd XMM4,XMM1
            movsd XMM1,QWORD PTR [RSP+88]
            subsd XMM1,XMM3
            subsd XMM2,XMM4
            movsd QWORD PTR [RBP+112],XMM1
            movsd XMM1,QWORD PTR [RSP+96]
            movsd QWORD PTR [RBP+104],XMM2
            subsd XMM1,XMM0
            movsd QWORD PTR [RBP+120],XMM1
            mov QWORD PTR [RBX+56],RAX
            lea RAX,QWORD PTR [RIP+.L_447730]
            mov QWORD PTR [RBX+64],RAX
            mov RAX,RBX
            jmp .L_447ead
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447e98:

            mov ESI,4294967259
            mov RDI,RBX
            call .L_415fe0
.L_447ea5:

            mov RDI,RBX
            call .L_4476f0
.L_447ead:

            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_447f63

            add RSP,112
.L_447ec5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_447ed0:

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_447ff8]
            call .L_4043f0

            mov QWORD PTR [RBP+24],RAX
            jmp .L_447b57
.L_447eec:

            mov RDI,RBX
            mov ESI,4294967282
            call .L_415fe0

            mov RDI,RBX
            call .L_4476f0

            jmp .L_447ead
.L_447f03:

            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+128]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            jmp .L_447b89
.L_447f2d:

            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+176]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            jmp .L_447c2f
.L_447f63:

            call __stack_chk_fail@PLT
.L_447f68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447f70:

            test RDI,RDI
            je .L_447f80

            jmp .L_447a60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447f80:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_447fae

            lea RDX,QWORD PTR [RIP+.L_447720]
            lea RCX,QWORD PTR [RIP+.L_448000]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_447fae:

            add RSP,8
            ret 
.L_447fb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447fc0:

            xor EAX,EAX
            ret 
.L_447fc3:
          .string "tplat_0"
.L_447fcb:
          .string "rplat_0"
.L_447fd3:
          .string "tplon_0"
.L_447fdb:
          .string "rplon_0"
.L_447fe3:
          .string "tphdg_0"
.L_447feb:

            jb .L_44805d
          .byte 0x68
          .byte 0x64
          .byte 0x67
          .byte 0x5f
          .byte 0x30
          .byte 0x0
.L_447ff3:

            je .L_44805d
          .byte 0x5f
          .byte 0x30
          .byte 0x0
.L_447ff8:
          .string "dh_0"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448000:
          .string "Spherical Cross-track Height\n\tMisc\n\tplat_0= plon_0= phdg_0= [h_0=]"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448048:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_448050:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
.L_44805d:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_448070:

            test RDI,RDI
            je .L_448090

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            call .L_403ca0

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448090:

            xor EAX,EAX
            ret 
.L_448093:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4480a0:

            jmp .L_448070
.L_4480a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4480b0:

            push RBX
            sub RSP,48
.L_4480b5:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+32]
            mulsd XMM2,QWORD PTR [RBX]
            mulsd XMM1,QWORD PTR [RBX+16]
            movsd XMM4,QWORD PTR [RBX+8]
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM2,XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call sincos@PLT

            mov EAX,DWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+40]
            test EAX,EAX
            jne .L_448150

            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            add RSP,48
.L_448134:

            divsd XMM5,XMM2
            pop RBX
            mulsd XMM1,XMM0
            movapd XMM2,XMM5
            movapd XMM0,XMM2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448150:

            mulsd XMM2,XMM2
            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM0,XMM1
            mulsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            add RSP,48
            mulsd XMM1,XMM0
            movapd XMM0,XMM2
            pop RBX
            ret 
.L_448189:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448190:

            push RBX
            movapd XMM2,XMM0
            sub RSP,32
.L_448199:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+24],XMM2
            divsd XMM1,QWORD PTR [RBX+8]
            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            movapd XMM0,XMM1
            je .L_448210

            call atan@PLT

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
.L_4481fd:

            add RSP,32
.L_448201:

            pop RBX
            mulsd XMM3,XMM3
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
          .byte 0x90
.L_448210:

            mov RDI,QWORD PTR [RDI]
            call .L_449c40

            movsd QWORD PTR [RSP+8],XMM0
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+16],XMM0
            divsd XMM1,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            mulsd XMM0,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+8]
            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            jne .L_4481fd

            add RSP,32
.L_448268:

            pop RBX
            mulsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
.L_448272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448280:

            push RBX
.L_448281:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4482f0

            lea RDX,QWORD PTR [RIP+.L_448190]
            lea RCX,QWORD PTR [RIP+.L_4480b0]
            mov RSI,QWORD PTR [RIP+.L_4486a0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4486a8]
            mov RCX,QWORD PTR [RIP+.L_4486b0]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],1
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4482e8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4482f0:

            mov RDI,RBX
            pop RBX
            jmp .L_448070
.L_4482f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448300:

            test RDI,RDI
            je .L_448310

            jmp .L_448280
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448310:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44833e

            lea RDX,QWORD PTR [RIP+.L_4480a0]
            lea RCX,QWORD PTR [RIP+.L_448640]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44833e:

            add RSP,8
            ret 
.L_448343:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448350:

            xor EAX,EAX
            ret 
.L_448353:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448360:

            push RBX
.L_448361:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4483d0

            lea RDX,QWORD PTR [RIP+.L_448190]
            lea RCX,QWORD PTR [RIP+.L_4480b0]
            mov RSI,QWORD PTR [RIP+.L_4486b8]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4486c0]
            mov RCX,QWORD PTR [RIP+.L_4486c8]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4483c8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4483d0:

            mov RDI,RBX
            pop RBX
            jmp .L_448070
.L_4483d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4483e0:

            test RDI,RDI
            je .L_4483f0

            jmp .L_448360
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4483f0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44841e

            lea RDX,QWORD PTR [RIP+.L_4480a0]
            lea RCX,QWORD PTR [RIP+.L_448680]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44841e:

            add RSP,8
            ret 
.L_448423:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448430:

            xor EAX,EAX
            ret 
.L_448433:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448440:

            push RBX
.L_448441:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4484b0

            lea RDX,QWORD PTR [RIP+.L_448190]
            lea RCX,QWORD PTR [RIP+.L_4480b0]
            mov RSI,QWORD PTR [RIP+.L_4486a0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4486a8]
            mov RCX,QWORD PTR [RIP+.L_4486b0]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_4484a8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4484b0:

            mov RDI,RBX
            pop RBX
            jmp .L_448070
.L_4484b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4484c0:

            test RDI,RDI
            je .L_4484d0

            jmp .L_448440
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4484d0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4484fe

            lea RDX,QWORD PTR [RIP+.L_4480a0]
            lea RCX,QWORD PTR [RIP+.L_448660]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4484fe:

            add RSP,8
            ret 
.L_448503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448510:

            xor EAX,EAX
            ret 
.L_448513:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448520:

            push RBX
.L_448521:

            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_448590

            lea RDX,QWORD PTR [RIP+.L_448190]
            lea RCX,QWORD PTR [RIP+.L_4480b0]
            mov RSI,QWORD PTR [RIP+.L_4486d0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RDX
            mov QWORD PTR [RBX+40],RCX
            mov RDX,QWORD PTR [RIP+.L_4486d8]
            mov RCX,QWORD PTR [RIP+.L_4486e0]
            mov QWORD PTR [RAX],RSI
            mov DWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RCX
            mov RAX,RBX
            pop RBX
.L_448588:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448590:

            mov RDI,RBX
            pop RBX
            jmp .L_448070
.L_448599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4485a0:

            test RDI,RDI
            je .L_4485b0

            jmp .L_448520
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4485b0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4485de

            lea RDX,QWORD PTR [RIP+.L_4480a0]
            lea RCX,QWORD PTR [RIP+.L_448600]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4485de:

            add RSP,8
            ret 
.L_4485e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4485f0:

            xor EAX,EAX
            ret 
.L_4485f3:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448600:
          .string "McBryde-Thomas Flat-Polar Sine (No. 1)\n\tPCyl., Sph."
          .zero 12
.L_448640:
          .string "Foucaut\n\tPCyl., Sph."
          .zero 11
.L_448660:
          .string "Quartic Authalic\n\tPCyl., Sph."
          .zero 2
.L_448680:
          .string "Kavraisky V\n\tPCyl., Sph."
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4486a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4486a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_4486b0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 296135
.L_4486b8:

            rcr BYTE PTR [RBX],75
            add ECX,EDX
            int3 
          .byte 0xec
          .byte 0x3f
.L_4486c0:
          .byte 0xc0
          .byte 0x78
          .byte 0x6
          .byte 0xd
          .byte 0xfd
          .byte 0x13
          .byte 0xf8
          .byte 0x3f
.L_4486c8:

            int 234
          .byte 0x40
          .byte 0xb9
          .byte 0x7a
          .byte 0xa0
          .byte 0xe7
          .byte 0x3f
.L_4486d0:
          .byte 0x31
          .byte 0xe3
          .byte 0x4f
          .byte 0x52
          .byte 0x8c
          .byte 0x57
          .byte 0xed
          .byte 0x3f
.L_4486d8:

            push RDX
            mov EAX,3521873182
            idiv DWORD PTR [RDI]
.L_4486e0:

            clc 
            jge .L_4486b0
          .byte 0x11
          .byte 0x71
          .byte 0xe7
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4486f0:

            test RDI,RDI
            je .L_448710

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_448707

            call .L_403ca0
.L_448707:

            mov RDI,RBX
            pop RBX
            jmp .L_403ca0
.L_448710:

            xor EAX,EAX
            ret 
.L_448713:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448720:

            jmp .L_4486f0
.L_448722:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448730:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_448739:

            mov RBX,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RBP]
            call .L_449c40

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM3
            mulsd XMM2,QWORD PTR [RBX]
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM0,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_448a10]
            mulsd XMM1,XMM3
            mulsd XMM1,QWORD PTR [RBX+8]
            add RSP,24
.L_448799:

            pop RBX
            pop RBP
            ret 
.L_44879c:

            nop
            nop
            nop
            nop
.L_4487a0:

            push RBP
            push RBX
            mov ESI,32
            mov RBX,RDI
            mov EDI,1
            sub RSP,56
.L_4487b3:

            call .L_403c70

            test RAX,RAX
            je .L_448920

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4489c3]
            mov QWORD PTR [RBX+32],RAX
            mov RBP,RAX
            call .L_4043f0

            test EAX,EAX
            je .L_448900

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_44f380-27066]
            call .L_4043f0

            pxor XMM5,XMM5
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM5,XMM0
            movsd QWORD PTR [RBP+24],XMM0
            jae .L_448900

            movsd XMM2,QWORD PTR [RIP+.L_448a10]
            ucomisd XMM0,XMM2
            ja .L_448900

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4489c9]
            movsd QWORD PTR [RSP+16],XMM2
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            mov RSI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_4489cc]
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RBX]
            divsd XMM0,QWORD PTR [RIP+.L_448a18]
            movsd QWORD PTR [RBP+16],XMM0
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd XMM0,QWORD PTR [RSP+8]
            call sincos@PLT

            movsd XMM4,QWORD PTR [RBP+24]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+16]
            mulsd XMM3,XMM4
            movapd XMM0,XMM2
            pxor XMM6,XMM6
            movsd XMM1,QWORD PTR [RSP+32]
            mulsd XMM3,XMM3
            subsd XMM0,XMM3
            ucomisd XMM6,XMM0
            sqrtsd XMM3,XMM0
            ja .L_44892e
.L_4488b9:

            divsd XMM1,XMM3
            lea RAX,QWORD PTR [RIP+.L_448730]
            movapd XMM0,XMM1
            movsd QWORD PTR [RBP],XMM1
            mulsd XMM0,XMM4
            divsd XMM2,XMM0
            movsd QWORD PTR [RBP+8],XMM2
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],0
            add RSP,56
.L_4488f5:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448900:

            mov RDI,RBX
            mov ESI,4294967256
            call .L_415fe0

            add RSP,56
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448920:

            add RSP,56
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_4486f0
.L_44892e:

            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RBP+24]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_4488b9
.L_448961:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448970:

            test RDI,RDI
            je .L_448980

            jmp .L_4487a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448980:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4489ae

            lea RDX,QWORD PTR [RIP+.L_448720]
            lea RCX,QWORD PTR [RIP+.L_4489e0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4489ae:

            add RSP,8
            ret 
.L_4489b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4489c0:

            xor EAX,EAX
            ret 
.L_4489c3:
          .string "tn"
# WARNING: found overlapping blocks at address 48795

            outsb DX,BYTE PTR FS:[RSI]
.L_4489c9:

            jno .L_4489cc
.L_4489cc:

            jb .L_448a2f
          .byte 0x6c
          .byte 0x70
          .byte 0x68
          .byte 0x61
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4489e0:

            push RBP
            jb .L_448a50
          .byte 0x61
          .byte 0x65
          .byte 0x76
          .byte 0x20
          .byte 0x56
          .byte 0xa
          .byte 0x9
          .byte 0x50
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0xa
          .byte 0x9
          .byte 0x6e
          .byte 0x3d
          .byte 0x20
          .byte 0x71
          .byte 0x3d
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x70
          .byte 0x68
          .byte 0x61
          .byte 0x3d
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448a10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_448a18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_448a20:

            test RDI,RDI
            je .L_448a48

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_448a3e

            push RBX
.L_448a2f:

            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_448a3e:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448a48:

            xor EAX,EAX
            ret 
.L_448a4b:

            nop
            nop
            nop
            nop
            nop
.L_448a50:

            jmp .L_448a20
.L_448a52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448a60:

            push RBX
            mov RBX,RDI
            sub RSP,16

            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBX]
            mulsd XMM0,QWORD PTR [RAX]
            call .L_449c40

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+32]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_448db0]
            mulsd XMM1,QWORD PTR [RAX+8]
            add RSP,16

            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_448ab7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448ac0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_448ac9:

            mov RBP,QWORD PTR [RDI+32]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            divsd XMM1,QWORD PTR [RBP+8]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX]
            movsd XMM3,QWORD PTR [RSP+16]
            divsd XMM0,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM3
            call .L_449c40

            movsd XMM3,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            mulsd XMM3,QWORD PTR [RIP+.L_448db0]
            add RSP,40
.L_448b24:

            pop RBX
            pop RBP
            divsd XMM2,XMM3
            movapd XMM0,XMM2
            ret 
.L_448b2f:

            nop
.L_448b30:

            push RBX
            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_448b42:

            call .L_403c70

            test RAX,RAX
            je .L_448bae

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_448d23]
            mov QWORD PTR [RBX+32],RAX
            call .L_4043f0

            test EAX,EAX
            je .L_448ba1

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_448d26]
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RBX+32]
            ucomisd XMM1,XMM0
            movsd QWORD PTR [RDX],XMM0
            jae .L_448ba1

            ucomisd XMM0,QWORD PTR [RIP+.L_448db8]
            jbe .L_448bc0
.L_448ba1:

            mov ESI,4294967256
            mov RDI,RBX
            call .L_415fe0
.L_448bae:

            add RSP,16
.L_448bb2:

            mov RDI,RBX
            pop RBX
            jmp .L_448a20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448bc0:

            movsd XMM1,QWORD PTR [RIP+.L_448dc0]
            lea RAX,QWORD PTR [RIP+.L_448ac0]
            divsd XMM1,XMM0
            movsd QWORD PTR [RDX+8],XMM1
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_448a60]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
            mov RAX,RBX
            pop RBX
            ret 
.L_448bfb:

            nop
            nop
            nop
            nop
            nop
.L_448c00:

            test RDI,RDI
            je .L_448c10

            jmp .L_448b30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448c10:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_448c3e

            lea RDX,QWORD PTR [RIP+.L_448a50]
            lea RCX,QWORD PTR [RIP+.L_448d80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_448c3e:

            add RSP,8
            ret 
.L_448c43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448c50:

            push RBX
.L_448c51:

            mov ESI,16
            mov RBX,RDI
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_448cb0

            mov RDX,QWORD PTR [RIP+.L_448dc8]
            mov RCX,QWORD PTR [RIP+.L_448dd0]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RCX
            lea RAX,QWORD PTR [RIP+.L_448ac0]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_448a60]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
            pop RBX
.L_448ca6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448cb0:

            mov RDI,RBX
            pop RBX
            jmp .L_448a20
.L_448cb9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448cc0:

            test RDI,RDI
            je .L_448cd0

            jmp .L_448c50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448cd0:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_448cfe

            lea RDX,QWORD PTR [RIP+.L_448a50]
            lea RCX,QWORD PTR [RIP+.L_448d40]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_448cfe:

            add RSP,8
            ret 
.L_448d03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448d10:

            xor EAX,EAX
            ret 
.L_448d13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448d20:

            xor EAX,EAX
            ret 
.L_448d23:
          .string "tn"
.L_448d26:
          .string "dn"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448d40:
          .string "Wagner I (Kavraisky VI)\n\tPCyl, Sph."
          .zero 28
.L_448d80:

            push RBP
            jb .L_448df0
          .byte 0x61
          .byte 0x65
          .byte 0x76
          .byte 0x20
          .byte 0x46
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x2d
          .byte 0x50
          .byte 0x6f
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x53
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x73
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x61
          .byte 0x6c
          .byte 0xa
          .byte 0x9
          .byte 0x50
          .byte 0x43
          .byte 0x79
          .byte 0x6c
          .byte 0x2c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x2e
          .byte 0xa
          .byte 0x9
          .byte 0x6e
          .byte 0x3d
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448db0:
          .byte 0x12
          .byte 0xb2
          .byte 0xf
          .byte 0xd5
          .byte 0x84
          .byte 0x13
          .byte 0xec
          .byte 0x3f
.L_448db8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_448dc0:
          .byte 0xf9
          .byte 0xf2
          .byte 0x24
          .byte 0x32
          .byte 0x6e
          .byte 0x3c
          .byte 0xf2
          .byte 0x3f
.L_448dc8:
          .byte 0xaa
          .byte 0x4c
          .byte 0x58
          .byte 0xe8
          .byte 0x7a
          .byte 0xb6
          .byte 0xeb
          .byte 0x3f
.L_448dd0:
          .byte 0x80
          .byte 0xe9
          .byte 0xcb
          .byte 0x9f
          .byte 0xa3
          .byte 0xe
          .byte 0xf5
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448de0:

            jmp .L_403ca0
.L_448de5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448df0:

            push RBX
            mov RBX,RDI
            sub RSP,16

            mulsd XMM1,QWORD PTR [RIP+.L_448f98]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            call sin@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_448fa0]
            mov RDI,QWORD PTR [RBX]
            call .L_449c40

            movsd QWORD PTR [RSP],XMM0
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RIP+.L_448fa8]
            mulsd XMM1,QWORD PTR [RIP+.L_448fb0]
            add RSP,16

            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_448e4e:

            nop
            nop
.L_448e50:

            push RBX
            mov RBX,RDI
            sub RSP,32

            divsd XMM1,QWORD PTR [RIP+.L_448fb0]
            movsd QWORD PTR [RSP+8],XMM0
            lea RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [RSP+16]
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RIP+.L_448fa8]
            mov RDI,QWORD PTR [RBX]
            movsd XMM2,QWORD PTR [RSP+8]
            mulsd XMM0,QWORD PTR [RSP+16]
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            divsd XMM0,QWORD PTR [RIP+.L_448fa0]
            movsd QWORD PTR [RSP+8],XMM2
            call .L_449c40

            movapd XMM1,XMM0
            movsd XMM2,QWORD PTR [RSP+8]
            divsd XMM1,QWORD PTR [RIP+.L_448f98]
            add RSP,32

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_448ec9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448ed0:

            test RDI,RDI
            je .L_448f00

            lea RAX,QWORD PTR [RIP+.L_448e50]
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_448df0]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448f00:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_448f2e

            lea RDX,QWORD PTR [RIP+.L_448de0]
            lea RCX,QWORD PTR [RIP+.L_448f80]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_448f2e:

            add RSP,8
            ret 
.L_448f33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448f40:

            lea RDX,QWORD PTR [RIP+.L_448e50]
            lea RCX,QWORD PTR [RIP+.L_448df0]
            mov RAX,RDI
            mov QWORD PTR [RDI+176],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_448f65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448f70:

            xor EAX,EAX
            ret 
.L_448f73:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448f80:
          .string "Wagner II\n\tPCyl., Sph."
          .byte 0x90
.L_448f98:
          .byte 0xbc
          .byte 0x74
          .byte 0x93
          .byte 0x18
          .byte 0x4
          .byte 0x56
          .byte 0xec
          .byte 0x3f
.L_448fa0:

            mov AH,31
            sub DWORD PTR [RDX],ESP
            ret 
          .byte 0x2a
          .byte 0xec
          .byte 0x3f
.L_448fa8:
          .byte 0x80
          .byte 0x82
          .byte 0x8b
          .byte 0x15
          .byte 0x35
          .byte 0x98
          .byte 0xed
          .byte 0x3f
.L_448fb0:
          .byte 0x19
          .byte 0x4
          .byte 0x56
          .byte 0xe
          .byte 0x2d
          .byte 0x32
          .byte 0xf6
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448fc0:

            jmp .L_403cc0
.L_448fc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448fd0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4491c8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM2,QWORD PTR [RAX]
            add RSP,16
            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_449011:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449020:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_4491c8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RAX]
            add RSP,16
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_449065:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449070:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_449082:

            call .L_403c70

            test RAX,RAX
            je .L_449120

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449183]
            mov QWORD PTR [RBX+32],RAX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            call cos@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
            addsd XMM1,XMM1
            divsd XMM1,QWORD PTR [RIP+.L_4491d0]
            movapd XMM0,XMM1
            call cos@PLT

            movsd XMM2,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RBX+32]
            divsd XMM2,XMM0
            movsd QWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [RIP+.L_449020]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_448fd0]
            mov QWORD PTR [RBX+40],RAX
            mov RAX,RBX
.L_449114:

            add RSP,16
.L_449118:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449120:

            mov RDI,RBX
            call .L_403cc0

            xor EAX,EAX
            jmp .L_449114
.L_44912c:

            nop
            nop
            nop
            nop
.L_449130:

            test RDI,RDI
            je .L_449140

            jmp .L_449070
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449140:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44916e

            lea RDX,QWORD PTR [RIP+.L_448fc0]
            lea RCX,QWORD PTR [RIP+.L_4491a0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44916e:

            add RSP,8
            ret 
.L_449173:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449180:

            xor EAX,EAX
            ret 
.L_449183:
          .string "rlat_ts"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4491a0:
          .string "Wagner III\n\tPCyl., Sph.\n\tlat_ts="
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4491c8:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xe5
          .byte 0x3f
.L_4491d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4491e0:

            test RDI,RDI
            je .L_449208

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4491fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4491fe:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449208:

            xor EAX,EAX
            ret 
.L_44920b:

            nop
            nop
            nop
            nop
            nop
.L_449210:

            jmp .L_4491e0
.L_449212:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449220:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RAX]
            mulsd XMM2,QWORD PTR [RIP+.L_4493d0]
            add RSP,16
            pop RBX
            mulsd XMM0,XMM2
            ret 
.L_449261:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449270:

            push RBX
            mov RBX,RDI
            sub RSP,16
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM1
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            addsd XMM0,QWORD PTR [RAX]
            add RSP,16
            addsd XMM2,XMM2
            pop RBX
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            ret 
.L_4492b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4492c0:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_4492d2:

            call .L_403c70

            test RAX,RAX
            je .L_449338

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_4493a3]
            mov QWORD PTR [RBX+32],RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_449270]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_449220]
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_449330:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449338:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_4491e0
.L_449345:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449350:

            test RDI,RDI
            je .L_449360

            jmp .L_4492c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449360:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44938e

            lea RDX,QWORD PTR [RIP+.L_449210]
            lea RCX,QWORD PTR [RIP+.L_4493b0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44938e:

            add RSP,8
            ret 
.L_449393:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4493a0:

            xor EAX,EAX
            ret 
.L_4493a3:
          .string "rlat_ts"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4493b0:
          .string "Winkel I\n\tPCyl., Sph.\n\tlat_ts="
          .byte 0x90
.L_4493d0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 299495
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4493e0:

            test RDI,RDI
            je .L_449408

            mov RAX,QWORD PTR [RDI+32]
            test RAX,RAX
            je .L_4493fe

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call .L_403ca0

            mov RDI,RBX
            pop RBX
.L_4493fe:

            jmp .L_403ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449408:

            xor EAX,EAX
            ret 
.L_44940b:

            nop
            nop
            nop
            nop
            nop
.L_449410:

            jmp .L_4493e0
.L_449412:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449420:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EBX,10
            sub RSP,56
.L_449432:

            movsd XMM5,QWORD PTR [RIP+.L_4496c0]
            lea RBP,QWORD PTR [RSP+40]
            lea R12,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM1
            mulsd XMM5,XMM1
            movsd QWORD PTR [RSP],XMM1
            movsd QWORD PTR [RSP+16],XMM5
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM0,QWORD PTR [RIP+.L_4496c8]
            mulsd XMM1,QWORD PTR [RIP+.L_4496d0]
            movsd QWORD PTR [RSP+8],XMM0
            nop
            nop
            nop
.L_449480:

            movapd XMM0,XMM1
            mov RSI,R12
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RIP+.L_4496a8]
            addsd XMM2,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_4496d8]
            addsd XMM0,QWORD PTR [RSP+32]
            subsd XMM2,QWORD PTR [RSP+8]
            divsd XMM2,XMM0
            subsd XMM1,XMM2
            andpd XMM2,XMMWORD PTR [RIP+.L_4496f0]
            ucomisd XMM4,XMM2
            ja .L_449500

            sub EBX,1
            jne .L_449480

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_449560

            movsd XMM1,QWORD PTR [RIP+.L_4496a8]
            movsd XMM0,QWORD PTR [RIP+.L_4496b0]
            movsd XMM2,QWORD PTR [RIP+.L_4496e0]
            jmp .L_449531
          .byte 0x66
          .byte 0x90
.L_449500:

            movsd XMM2,QWORD PTR [RIP+.L_4496e0]
            mov RSI,R12
            mov RDI,RBP
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP],XMM2
            movapd XMM0,XMM1
            call sincos@PLT

            movsd XMM0,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP]
.L_449531:

            mov RAX,QWORD PTR [R13+32]
            addsd XMM1,QWORD PTR [RSP+16]
            mulsd XMM2,QWORD PTR [RSP+24]
            addsd XMM0,QWORD PTR [RAX]
            mulsd XMM1,QWORD PTR [RIP+.L_4496e8]
            add RSP,56
.L_449551:

            pop RBX
            pop RBP
            mulsd XMM0,XMM2
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449560:

            movsd XMM1,QWORD PTR [RIP+.L_4496b8]
            movsd XMM0,QWORD PTR [RIP+.L_4496b0]
            movsd XMM2,QWORD PTR [RIP+.L_4496e0]
            jmp .L_449531
.L_44957a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_449580:

            push RBX
            mov ESI,8
            mov RBX,RDI
            mov EDI,1
            sub RSP,16
.L_449592:

            call .L_403c70

            test RAX,RAX
            je .L_4495f8

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RIP+.L_449663]
            mov QWORD PTR [RBX+32],RAX
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call cos@PLT

            mov RAX,QWORD PTR [RBX+32]
            movsd QWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RIP+.L_449420]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            add RSP,16
.L_4495ed:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4495f8:

            add RSP,16
            mov RDI,RBX
            pop RBX
            jmp .L_4493e0
.L_449605:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449610:

            test RDI,RDI
            je .L_449620

            jmp .L_449580
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449620:

            sub RSP,8
            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44964e

            lea RDX,QWORD PTR [RIP+.L_449410]
            lea RCX,QWORD PTR [RIP+.L_449680]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44964e:

            add RSP,8
            ret 
.L_449653:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449660:

            xor EAX,EAX
            ret 
.L_449663:

            jb .L_4496d1
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_449680:

            push RDI
            imul EBP,DWORD PTR [RSI+107],1226861669
            or CL,BYTE PTR [R9]
            push RAX
            jns .L_4496fb

            sub AL,32
            push RBX
            jo .L_4496fd
          .byte 0x2e
          .byte 0x2c
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x2e
          .byte 0xa
          .byte 0x9
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x31
          .byte 0x3d
          .byte 0x0
.L_4496a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_4496b0:
          .byte 0x7
          .byte 0x5c
          .byte 0x14
          .byte 0x33
          .byte 0x26
          .byte 0xa6
          .byte 0x91
          .byte 0x3c
.L_4496b8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_4496c0:
          .byte 0x83
          .byte 0xc8
          .byte 0xc9
          .byte 0x6d
          .byte 0x30
          .byte 0x5f
          .byte 0xe4
          .byte 0x3f
.L_4496c8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_4496d0:
          .byte 0xcd
.L_4496d1:

            int3 

            int3 

            int3 

            int3 

            int3 
          .byte 0xfc
          .byte 0x3f
.L_4496d8:

            scasq RAX,QWORD PTR [RDI]
            mov ESP,2060972698
            add BYTE PTR DS:[RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 300279
# WARNING: found overlapping blocks at address 494b0
.set .L_4496e0, . - 8

.L_4496e8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_4496f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4496fb:

            add BYTE PTR [RAX],AL
.L_4496fd:

            add BYTE PTR [RAX],AL
            add DL,DH
            movups XMM2,XMMWORD PTR [RDI+128]
            divsd XMM1,XMM2
            divsd XMM0,XMM2
            ret 
# WARNING: found overlapping blocks at address 494d0
.set .L_449700, . - 17
.L_449711:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449720:

            movsd XMM2,QWORD PTR [RDI+128]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            ret 
.L_449731:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449740:

            test RDI,RDI
            je .L_449750

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449750:

            ret 
.L_449752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449760:

            test RDI,RDI
            je .L_4497a0

            lea RAX,QWORD PTR [RIP+.L_449720]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_44f380-23680]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4497a0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_4497ce

            lea RDX,QWORD PTR [RIP+.L_449740]
            lea RCX,QWORD PTR [RIP+.L_449ac0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_4497ce:

            add RSP,8
            ret 
.L_4497d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4497e0:

            lea RDX,QWORD PTR [RIP+.L_449720]
            lea RCX,QWORD PTR [RIP+.L_44f380-23680]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44981a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_449820:

            test RDI,RDI
            je .L_449860

            lea RAX,QWORD PTR [RIP+.L_449720]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_44f380-23680]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_449860:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44988e

            lea RDX,QWORD PTR [RIP+.L_449740]
            lea RCX,QWORD PTR [RIP+.L_449aa0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44988e:

            add RSP,8
            ret 
.L_449893:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4498a0:

            lea RDX,QWORD PTR [RIP+.L_449720]
            lea RCX,QWORD PTR [RIP+.L_44f380-23680]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_4498da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4498e0:

            test RDI,RDI
            je .L_449920

            lea RAX,QWORD PTR [RIP+.L_449720]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_44f380-23680]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_449920:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_44994e

            lea RDX,QWORD PTR [RIP+.L_449740]
            lea RCX,QWORD PTR [RIP+.L_449ae0]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_44994e:

            add RSP,8
            ret 
.L_449953:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449960:

            lea RDX,QWORD PTR [RIP+.L_449720]
            lea RCX,QWORD PTR [RIP+.L_44f380-23680]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_44999a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4499a0:

            test RDI,RDI
            je .L_4499e0

            lea RAX,QWORD PTR [RIP+.L_449720]
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_44f380-23680]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_4499e0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_449a0e

            lea RDX,QWORD PTR [RIP+.L_449740]
            lea RCX,QWORD PTR [RIP+.L_449b00]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_449a0e:

            add RSP,8
            ret 
.L_449a13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449a20:

            lea RDX,QWORD PTR [RIP+.L_449720]
            lea RCX,QWORD PTR [RIP+.L_44f380-23680]
            mov RAX,RDI
            mov DWORD PTR [RDI+312],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_449a5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_449a60:

            xor EAX,EAX
            ret 
.L_449a63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449a70:

            xor EAX,EAX
            ret 
.L_449a73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449a80:

            xor EAX,EAX
            ret 
.L_449a83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449a90:

            xor EAX,EAX
            ret 
.L_449a93:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449aa0:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_449ac0:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_449ae0:
          .string "Lat/long (Geodetic alias)\n\t"
          .zero 4
.L_449b00:
          .string "Lat/long (Geodetic)\n\t"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449b20:

            ret 
.L_449b22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449b30:

            ret 
.L_449b32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449b40:

            test RDI,RDI
            je .L_449b50

            jmp .L_403ca0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449b50:

            ret 
.L_449b52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449b60:

            test RDI,RDI
            je .L_449ba0

            lea RAX,QWORD PTR [RIP+.L_449b30]
            mov DWORD PTR [RDI+316],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RAX
            lea RAX,QWORD PTR [RIP+.L_449b20]
            mov QWORD PTR [RDI+40],RAX
            mov RAX,RDI
            ret 
          .byte 0x90
.L_449ba0:

            sub RSP,8

            mov ESI,640
            mov EDI,1
            call .L_403c70

            test RAX,RAX
            je .L_449bce

            lea RDX,QWORD PTR [RIP+.L_449b40]
            lea RCX,QWORD PTR [RIP+.L_449c28]
            mov QWORD PTR [RAX+112],RDX
            mov QWORD PTR [RAX+8],RCX
.L_449bce:

            add RSP,8
            ret 
.L_449bd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449be0:

            lea RDX,QWORD PTR [RIP+.L_449b30]
            lea RCX,QWORD PTR [RIP+.L_449b20]
            mov RAX,RDI
            mov DWORD PTR [RDI+316],1
            mov QWORD PTR [RDI+344],0
            mov QWORD PTR [RDI+352],0
            mov QWORD PTR [RDI+48],RDX
            mov QWORD PTR [RDI+40],RCX
            ret 
.L_449c1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_449c20:

            xor EAX,EAX
            ret 
.L_449c23:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449c28:
          .string "Geocentric\n\t"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_449c40:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_449e20]
            ucomisd XMM1,QWORD PTR [RIP+.L_449df8]
            jb .L_449cb0

            ucomisd XMM1,QWORD PTR [RIP+.L_449e00]
            ja .L_449c78

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_449cb8

            movsd XMM0,QWORD PTR [RIP+.L_449de8]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449c78:

            sub RSP,24
            mov ESI,4294967277
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404af0

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_449cc8

            movsd XMM0,QWORD PTR [RIP+.L_449de8]
.L_449ca4:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449cb0:

            jmp asin@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449cb8:

            movsd XMM0,QWORD PTR [RIP+.L_449df0]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449cc8:

            movsd XMM0,QWORD PTR [RIP+.L_449df0]
            jmp .L_449ca4
.L_449cd2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449ce0:

            movapd XMM1,XMM0
            andpd XMM1,XMMWORD PTR [RIP+.L_449e20]
            ucomisd XMM1,QWORD PTR [RIP+.L_449df8]
            jb .L_449d40

            ucomisd XMM1,QWORD PTR [RIP+.L_449e00]
            ja .L_449d10

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_449d48

            pxor XMM0,XMM0
            ret 
          .byte 0x90
.L_449d10:

            sub RSP,24
            mov ESI,4294967277
            movsd QWORD PTR [RSP+8],XMM0
            call .L_404af0

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM0
            ja .L_449d58

            pxor XMM0,XMM0
.L_449d38:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449d40:

            jmp acos@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449d48:

            movsd XMM0,QWORD PTR [RIP+.L_449e08]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449d58:

            movsd XMM0,QWORD PTR [RIP+.L_449e08]
            jmp .L_449d38
.L_449d62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449d70:

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            jae .L_449d80

            sqrtsd XMM1,XMM0
            ja .L_449d85
.L_449d80:

            movapd XMM0,XMM1
            ret 
.L_449d85:

            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,24
            movapd XMM0,XMM1
            ret 
.L_449da3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449db0:

            movq XMM2,QWORD PTR [RIP+.L_449e20]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_449e10]
            andpd XMM4,XMM2
            ucomisd XMM3,XMM4
            jbe .L_449dd8

            andpd XMM2,XMM1
            ucomisd XMM3,XMM2
            ja .L_449de0
.L_449dd8:

            jmp atan2@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449de0:

            pxor XMM0,XMM0
            ret 
.L_449de5:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449de8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_449df0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_449df8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_449e00:
          .string "-"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_449e08:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_449e10:
          .byte 0x1f
          .byte 0xb8
          .byte 0xd4
          .byte 0x4a
          .byte 0x7a
          .byte 0xee
          .byte 0x8d
          .byte 0x35
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449e20:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449e30:

            movq XMM1,QWORD PTR [RIP+.L_449ee0]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_449ef0]
            andpd XMM2,XMM1
            ucomisd XMM3,XMM2
            jae .L_449e90

            movsd XMM4,QWORD PTR [RIP+.L_449ef8]
            movsd XMM5,QWORD PTR [RIP+.L_449f00]
            addsd XMM0,XMM4
            movsd XMM7,QWORD PTR [RIP+.L_449f08]
            movapd XMM6,XMM0
            divsd XMM6,XMM5
            movapd XMM3,XMM6
            movapd XMM2,XMM6
            andpd XMM3,XMM1
            ucomisd XMM7,XMM3
            ja .L_449e98

            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            subsd XMM0,XMM4
.L_449e90:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449e98:

            cvttsd2si RAX,XMM6
            pxor XMM3,XMM3
            andnpd XMM1,XMM6
            cvtsi2sd XMM3,RAX
            movapd XMM7,XMM3
            cmpnlesd XMM7,XMM6
            movapd XMM2,XMM7
            movsd XMM7,QWORD PTR [RIP+.L_449f10]
            andpd XMM2,XMM7
            subsd XMM3,XMM2
            movapd XMM2,XMM3
            orpd XMM2,XMM1
            mulsd XMM2,XMM5
            subsd XMM0,XMM2
            subsd XMM0,XMM4
            jmp .L_449e90
.L_449edd:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449ee0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449ef0:
          .byte 0xea
          .byte 0x2e
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_449ef8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_449f00:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x19
          .byte 0x40
.L_449f08:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_449f10:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449f20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_449f34:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RBX
            xor EBX,EBX
            test RDX,RDX
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+32],RDX
            je .L_449f5c

            mov RAX,RDX
            mov QWORD PTR [RAX],RSI
.L_449f5c:

            call __ctype_b_loc@PLT

            mov R13,RAX
            mov RSI,QWORD PTR [RAX]
            jmp .L_449f74
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449f70:

            add R15,1
.L_449f74:

            movsx RCX,BYTE PTR [R15]
            mov RDX,RCX
            movzx ECX,WORD PTR [RSI+RCX*2]
            test CH,32
            jne .L_449f70

            lea RSI,QWORD PTR [RSP+64]
            test CX,CX
            mov QWORD PTR [RSP+16],RSI
            jns .L_44a2b5

            lea R9,QWORD PTR [R15+63]
            mov RCX,R15
            jmp .L_449fa5
.L_449fa0:

            cmp RCX,R9
            je .L_449fcb
.L_449fa5:

            lea RDI,QWORD PTR [RSI+1]
            add RCX,1
            mov QWORD PTR [RSP+56],RDI
            mov BYTE PTR [RSI],DL
            movsx RDI,BYTE PTR [RCX]
            mov RSI,QWORD PTR [R13]
            cmp WORD PTR [RSI+RDI*2],0
            mov RDX,RDI
            mov RSI,QWORD PTR [RSP+56]
            js .L_449fa0
.L_449fcb:

            mov BYTE PTR [RSI],0
            movzx R14D,BYTE PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+16]
            lea ECX,DWORD PTR [R14-43]
            mov QWORD PTR [RSP+56],RAX
            and ECX,253
            jne .L_44a298

            movsx EBX,R14B
            movzx R14D,BYTE PTR [RSP+65]
            lea R9,QWORD PTR [RAX+1]
            mov DWORD PTR [RSP+44],EBX
            mov QWORD PTR [RSP+56],R9
.L_44a005:

            pxor XMM3,XMM3
            lea RBP,QWORD PTR [RSP+56]
            xor EBX,EBX
            movsd QWORD PTR [RSP+8],XMM3
.L_44a016:

            mov RSI,QWORD PTR [R13]
            movsx RCX,R14B
            test BYTE PTR [RSI+RCX*2+1],8
            jne .L_44a02f

            cmp R14B,46
            jne .L_44a2aa
.L_44a02f:

            test R14B,R14B
            je .L_44a06e

            mov ECX,R14D
            mov R12,R9
            and ECX,4294967263
            cmp CL,68
            jne .L_44a060

            jmp .L_44a0f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a050:

            mov ESI,R14D
            and ESI,4294967263
            cmp SIL,68
            je .L_44a0f0
.L_44a060:

            add R12,1
            movzx R14D,BYTE PTR [R12]
            test R14B,R14B
            jne .L_44a050
.L_44a06e:

            mov RSI,RBP
            mov RDI,R9
            call .L_415ac0

            ucomisd XMM0,QWORD PTR [RIP+.L_44a320]
            ja .L_44a118
.L_44a087:

            mov RCX,QWORD PTR [RSP+56]
            movzx R14D,BYTE PTR [RCX]
            cmp R14B,68
            je .L_44a248

            jg .L_44a148

            cmp R14B,34
            je .L_44a220

            cmp R14B,39
            jne .L_44a15e

            cmp EBX,1
            jg .L_44a278

            mulsd XMM0,QWORD PTR [RIP+.L_44a338]
            lea R9,QWORD PTR [RCX+1]
            mov EBX,2
            mov QWORD PTR [RSP+56],R9
            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
.L_44a0df:

            movzx R14D,BYTE PTR [RCX+1]
            jmp .L_44a016
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a0f0:

            mov BYTE PTR [R12],0
            mov RSI,RBP
            mov RDI,R9
            call strtod@PLT

            ucomisd XMM0,QWORD PTR [RIP+.L_44a320]
            mov BYTE PTR [R12],R14B
            jbe .L_44a087

            nop
            nop
            nop
            nop
            nop
            nop
.L_44a118:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44a2bf

            add RSP,152
.L_44a136:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a148:

            cmp R14B,100
            je .L_44a248

            cmp R14B,114
            je .L_44a1d0

            cmp R14B,82
            je .L_44a1d0
.L_44a15e:

            lea RAX,QWORD PTR [RIP+.L_44a300]
            mov R9,RCX
            mulsd XMM0,QWORD PTR [RAX+RBX*8]
            addsd XMM0,QWORD PTR [RSP+8]
.L_44a173:

            test R14B,R14B
            mov QWORD PTR [RSP+8],R9
            je .L_44a1f0
.L_44a17d:

            lea RDI,QWORD PTR [RIP+.L_44a2f5]
            movsx ESI,R14B
            movsd QWORD PTR [RSP+24],XMM0
            call strchr@PLT

            test RAX,RAX
            movsd XMM0,QWORD PTR [RSP+24]
            je .L_44a1f0

            mov R9,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_44a2f5]
            sub RAX,RDX
            add R9,1
            cmp RAX,3
            mov QWORD PTR [RSP+56],R9
            jle .L_44a1f7
.L_44a1bc:

            xorpd XMM0,XMMWORD PTR [RIP+.L_44a340]
            jmp .L_44a1f7

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a1d0:

            test EBX,EBX
            jne .L_44a278

            lea R9,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+56],R9
            movzx R14D,BYTE PTR [RCX+1]
            mov QWORD PTR [RSP+8],R9
            test R14B,R14B
            jne .L_44a17d
.L_44a1f0:

            cmp DWORD PTR [RSP+44],45
            je .L_44a1bc
.L_44a1f7:

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_44a118

            mov R8,QWORD PTR [RSP+56]
            add R8,R15
            sub R8,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],R8
            jmp .L_44a118
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a220:

            mulsd XMM0,QWORD PTR [RIP+.L_44a328]
            lea R9,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+56],R9
            movzx R14D,BYTE PTR [RCX+1]
            addsd XMM0,QWORD PTR [RSP+8]
            jmp .L_44a173
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a248:

            test EBX,EBX
            jg .L_44a278

            mulsd XMM0,QWORD PTR [RIP+.L_44a330]
            lea R9,QWORD PTR [RCX+1]
            mov EBX,1
            mov QWORD PTR [RSP+56],R9
            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_44a0df
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a278:

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,4294967280
            call .L_404af0

            movsd XMM0,QWORD PTR [RIP+.L_44a318]
            jmp .L_44a118
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a298:

            mov R9,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+44],43
            jmp .L_44a005
.L_44a2aa:

            movsd XMM0,QWORD PTR [RSP+8]
            jmp .L_44a173
.L_44a2b5:

            mov RSI,QWORD PTR [RSP+16]
            jmp .L_449fcb
.L_44a2bf:

            call __stack_chk_fail@PLT
.L_44a2c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a2d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_404a50

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            pop RBX
            pop RBP
            mov RDI,RAX
            jmp .L_449f20
.L_44a2f5:
          .string "NnEeSsWw"
          .byte 0x66
          .byte 0x90
.L_44a300:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
          .byte 0xa3
          .byte 0x96
          .byte 0xcf
          .byte 0x57
          .byte 0x4b
          .byte 0x10
          .byte 0x33
          .byte 0x3f
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_44a318:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44a320:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_44a328:
          .byte 0x9d
          .byte 0x8f
          .byte 0xff
          .byte 0xb2
          .byte 0xa5
          .byte 0x55
          .byte 0xd4
          .byte 0x3e
.L_44a330:
          .byte 0x39
          .byte 0x9d
          .byte 0x52
          .byte 0xa2
          .byte 0x46
          .byte 0xdf
          .byte 0x91
          .byte 0x3f
.L_44a338:

            movabs DWORD PTR [17789068609310614],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
# WARNING: found overlapping blocks at address 4a110
.set .L_44a340, . - 16

.L_44a350:

            sub RSP,24
.L_44a354:

            mov EDI,24
            movsd QWORD PTR [RSP+8],XMM0
            call .L_403c30

            test RAX,RAX
            je .L_44a3d5

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_44a488]
            movapd XMM1,XMM0
            movapd XMM2,XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_44a480]
            mulsd XMM3,XMM1
            mulsd XMM2,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_44a498]
            addsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44a490]
            mulsd XMM3,XMM2
            addsd XMM0,XMM3
            movsd QWORD PTR [RAX],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44a4a0]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_44a4a8]
            addsd XMM1,XMM0
            movsd QWORD PTR [RAX+16],XMM2
            movsd QWORD PTR [RAX+8],XMM1
.L_44a3d5:

            add RSP,24
.L_44a3d9:

            ret 
.L_44a3da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_44a3e0:

            movapd XMM3,XMM0
            push RBX
            mov RBX,RDI
            addsd XMM3,XMM0
            sub RSP,48

            movsd QWORD PTR [RSP+40],XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+32],XMM0
            movapd XMM2,XMM3
            movsd QWORD PTR [RSP+24],XMM3
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            call sin@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            addsd XMM2,XMM3
            movapd XMM0,XMM2
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+8]
            mulsd XMM1,QWORD PTR [RBX]
            mulsd XMM4,QWORD PTR [RBX+8]
            movsd XMM5,QWORD PTR [RSP+40]
            mulsd XMM0,QWORD PTR [RBX+16]
            add RSP,48

            pop RBX
            addsd XMM1,XMM5
            addsd XMM1,XMM4
            addsd XMM0,XMM1
            ret 
.L_44a47f:
          .byte 0x90
.L_44a480:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd5
          .byte 0x3f
.L_44a488:
          .byte 0xb6
          .byte 0x60
          .byte 0xb
          .byte 0xb6
          .byte 0x60
          .byte 0xb
          .byte 0xc6
          .byte 0x3f
.L_44a490:
          .byte 0x2a
          .byte 0xa4
          .byte 0x42
          .byte 0x2a
          .byte 0xa4
          .byte 0x42
          .byte 0xba
          .byte 0x3f
.L_44a498:
          .byte 0xb0
          .byte 0x5
          .byte 0x5b
          .byte 0xb0
          .byte 0x5
          .byte 0x5b
          .byte 0xb0
          .byte 0x3f
.L_44a4a0:
          .byte 0xfc
          .byte 0xf
          .byte 0x55
          .byte 0xa6
          .byte 0xba
          .byte 0xff
          .byte 0xb0
          .byte 0x3f
.L_44a4a8:
          .byte 0x8a
          .byte 0xbd
          .byte 0x9f
          .byte 0x6d
          .byte 0xf6
          .byte 0x2d
          .byte 0x91
          .byte 0x3f
.L_44a4b0:

            movapd XMM5,XMM2
            movapd XMM3,XMM0
            movq XMM4,QWORD PTR [RIP+.L_44a6d0]
            addsd XMM5,XMM1
            addsd XMM3,XMM2
            movapd XMM0,XMM5
            andpd XMM0,XMM4
            ucomisd XMM0,QWORD PTR [RIP+.L_44a6e0]
            ja .L_44a6c0

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM0,XMM3
            mov RBX,RSI
            sub RSP,56
.L_44a4ee:

            movapd XMM1,XMM5
            movaps XMMWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            call QWORD PTR [RDI+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_44a6e8]
            ja .L_44a6b0

            movsd XMM6,QWORD PTR [RSP+8]
            movsd XMM5,QWORD PTR [RSP+32]
            addsd XMM6,XMM6
            movapd XMM4,XMMWORD PTR [RSP+16]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+24],XMM1
            subsd XMM5,XMM6
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            andpd XMM4,XMM5
            ucomisd XMM4,QWORD PTR [RIP+.L_44a6e0]
            ja .L_44a6b0

            movsd XMM3,QWORD PTR [RSP+40]
            mov RDI,RBP
            movapd XMM1,XMM5
            movsd QWORD PTR [RSP+32],XMM5
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+16],XMM3
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_44a6e8]
            ja .L_44a6b0

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,RBP
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX],XMM2
            movsd XMM2,QWORD PTR [RBX+24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RSP+16],XMM3
            addsd XMM1,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+24],XMM2
            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RBX+16],XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RBX+8],XMM2
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_44a6e8]
            ja .L_44a6b0

            movsd XMM2,QWORD PTR [RBX]
            mov RDI,RBP
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP+16]
            addsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RBX],XMM2
            movsd XMM2,QWORD PTR [RBX+24]
            subsd XMM2,XMM1
            movsd QWORD PTR [RBX+24],XMM2
            movsd XMM2,QWORD PTR [RBX+8]
            subsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RBX+16]
            subsd XMM0,XMM1
            movapd XMM1,XMM5
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+16],XMM0
            movapd XMM0,XMM3
            call QWORD PTR [RBP+40]

            ucomisd XMM0,QWORD PTR [RIP+.L_44a6e8]
            ja .L_44a6b0

            movsd XMM5,QWORD PTR [RBX+24]
            xor EAX,EAX
            movsd XMM2,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RBX]
            addsd XMM5,XMM1
            movsd XMM4,QWORD PTR [RBX+8]
            subsd XMM2,XMM1
            subsd XMM3,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM4,XMM0
            addsd XMM1,XMM1
            movapd XMM0,XMM3
            divsd XMM5,XMM1
            divsd XMM0,XMM1
            movsd QWORD PTR [RBX+24],XMM5
            divsd XMM4,XMM1
            movsd QWORD PTR [RBX],XMM0
            divsd XMM2,XMM1
            movsd QWORD PTR [RBX+8],XMM4
            movsd QWORD PTR [RBX+16],XMM2
            add RSP,56
.L_44a6ad:

            pop RBX
            pop RBP
            ret 
.L_44a6b0:

            add RSP,56
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a6c0:

            mov EAX,1
            ret 
.L_44a6c6:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a6d0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a6e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44a6e8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_44a6f0:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            xor ESI,ESI
            mov R13,RDX
            mov RBX,RDI
            sub RSP,40
.L_44a70c:

            call .L_404af0

            lea RDX,QWORD PTR [RIP+.L_44af9d]
            mov QWORD PTR [R15],0
            mov RSI,R12
            mov QWORD PTR [R13],0
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_44a780

            lea RDX,QWORD PTR [RIP+.L_44afa0]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [R13],RAX
            ucomisd XMM1,QWORD PTR [R15]
            ja .L_44a9a5
.L_44a75b:

            xor EAX,EAX
            ucomisd XMM1,QWORD PTR [R13]
            jae .L_44aa30
.L_44a769:

            add RSP,40
.L_44a76d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a780:

            lea RDX,QWORD PTR [RIP+.L_44afa3]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_44aa58

            test R12,R12
            je .L_44ac00

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            jne .L_44a7c3

            jmp .L_44ac10
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a7c0:

            mov RBP,RAX
.L_44a7c3:

            mov RAX,QWORD PTR [RBP]
            test RAX,RAX
            jne .L_44a7c0
.L_44a7cc:

            mov RSI,QWORD PTR [RIP+.L_65f700]
            xor R14D,R14D
            test RSI,RSI
            jne .L_44a7ff

            jmp .L_44a9d0
.L_44a7e0:

            add R14,1
            lea RCX,QWORD PTR [RIP+.L_65f700]
            mov RAX,R14
            shl RAX,5
            mov RSI,QWORD PTR [RCX+RAX*1]
            test RSI,RSI
            je .L_44a9d0
.L_44a7ff:

            mov RDI,QWORD PTR [RSP]
            mov DWORD PTR [RSP+8],R14D
            call strcmp@PLT

            test EAX,EAX
            jne .L_44a7e0

            movsxd RAX,DWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RIP+.L_65f700]
            shl RAX,5
            lea R14,QWORD PTR [RCX+RAX*1]
            mov RDI,QWORD PTR [R14+8]
            call .L_4043a0

            mov RDI,QWORD PTR [R14+16]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RSP],RAX
            call .L_4043a0

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RDX],RAX
.L_44a846:

            lea RDX,QWORD PTR [RIP+.L_44afaa]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            lea RDX,QWORD PTR [RIP+.L_44afad]
            mov QWORD PTR [R13],RAX
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            jne .L_44a9f8

            lea RDX,QWORD PTR [RIP+.L_44afb5]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_44aad8

            lea RDX,QWORD PTR [RIP+.L_44afb8]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM4,QWORD PTR [RIP+.L_44b010]
            movsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM0,XMM0
            movsd QWORD PTR [R15],XMM0
.L_44a8c5:

            movsd XMM7,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [R13]
            subsd XMM7,XMM0
            ucomisd XMM1,XMM7
            sqrtsd XMM2,XMM7
            movapd XMM0,XMM7
            ja .L_44ae90
.L_44a8e6:

            mulsd XMM3,XMM2
            movsd QWORD PTR [RSP+16],XMM3
.L_44a8f0:

            lea RDX,QWORD PTR [RIP+.L_44afcf]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44aa60

            movsd XMM2,QWORD PTR [R15]
            movsd XMM0,QWORD PTR [RIP+.L_44b020]
            movsd XMM5,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b028]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b030]
            mulsd XMM0,XMM2
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [R13]
            mulsd XMM0,XMM5
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
.L_44a95f:

            test RBP,RBP
            je .L_44a98b

            mov RAX,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM1
            mov RDI,QWORD PTR [RAX]
            call .L_403c60

            mov RDI,QWORD PTR [RBP]
            call .L_403c60

            movsd XMM1,QWORD PTR [RSP]
            mov QWORD PTR [RBP],0
.L_44a98b:

            mov EDX,DWORD PTR [RBX]
            mov EAX,1
            test EDX,EDX
            jne .L_44a769

            ucomisd XMM1,QWORD PTR [R15]
            jbe .L_44a75b
.L_44a9a5:

            mov RDI,RBX
            mov ESI,4294967284
            call .L_404af0

            add RSP,40
.L_44a9b6:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a9d0:

            mov RDI,RBX
            mov ESI,4294967287
            call .L_404af0

            add RSP,40
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a9f8:

            lea RDX,QWORD PTR [RIP+.L_44afb1]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM6,QWORD PTR [RIP+.L_44b010]
            movsd XMM0,QWORD PTR [RSP]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM6
            movsd QWORD PTR [R15],XMM0
            jmp .L_44a8c5
          .byte 0x66
          .byte 0x90
.L_44aa30:

            mov RDI,RBX
            mov ESI,4294967283
            call .L_404af0

            add RSP,40
.L_44aa41:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aa58:

            xor EBP,EBP
            jmp .L_44a846
          .byte 0x90
.L_44aa60:

            lea RDX,QWORD PTR [RIP+.L_44afd4]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44abb0

            movsd XMM2,QWORD PTR [R15]
            movsd XMM0,QWORD PTR [RIP+.L_44b038]
            movsd XMM4,QWORD PTR [RSP]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b040]
            mulsd XMM0,XMM2
            addsd XMM0,QWORD PTR [RIP+.L_44b030]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            movsd XMM0,QWORD PTR [R13]
            mulsd XMM0,XMM4
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44a95f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44aad8:

            lea RDX,QWORD PTR [RIP+.L_44afbb]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_44ab50

            lea RDX,QWORD PTR [RIP+.L_44afbf]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            pxor XMM1,XMM1
            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM0,XMM1
            movsd QWORD PTR [R15],XMM0
            jp .L_44ab1e

            je .L_44ac4d
.L_44ab1e:

            movsd XMM7,QWORD PTR [RIP+.L_44b010]
            movapd XMM2,XMM7
            movsd QWORD PTR [RSP],XMM7
            divsd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44b018]
            subsd XMM0,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [R15],XMM0
            jmp .L_44a8c5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ab50:

            lea RDX,QWORD PTR [RIP+.L_44afc3]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            je .L_44ac18

            lea RDX,QWORD PTR [RIP+.L_44afc6]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [RIP+.L_44b018]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM6,QWORD PTR [RIP+.L_44b010]
            subsd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM6
            mulsd XMM0,XMM1
            pxor XMM1,XMM1
            movsd QWORD PTR [R15],XMM0
            jmp .L_44a8c5
.L_44abb0:

            lea RDX,QWORD PTR [RIP+.L_44afd9]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44ac69

            movsd XMM0,QWORD PTR [RSP+16]
            addsd XMM0,QWORD PTR [R13]
            mulsd XMM0,QWORD PTR [RIP+.L_44b048]
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44a95f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ac00:

            xor EBP,EBP
            jmp .L_44a7cc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ac10:

            mov RBP,R12
            jmp .L_44a7cc
.L_44ac18:

            lea RDX,QWORD PTR [RIP+.L_44afc9]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            jne .L_44acbb

            movsd XMM4,QWORD PTR [RIP+.L_44b010]
            movsd XMM0,QWORD PTR [R15]
            pxor XMM1,XMM1
            movsd QWORD PTR [RSP],XMM4
            jmp .L_44a8c5
.L_44ac4d:

            mov ESI,4294967286
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44a95f
.L_44ac69:

            lea RDX,QWORD PTR [RIP+.L_44afde]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44ad28

            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,QWORD PTR [R13]
            ucomisd XMM1,XMM0
            sqrtsd XMM2,XMM0
            ja .L_44af83
.L_44aca9:

            movsd QWORD PTR [R13],XMM2
            mov QWORD PTR [R15],0
            jmp .L_44a95f
.L_44acbb:

            lea RDX,QWORD PTR [RIP+.L_44afcc]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            mov QWORD PTR [RSP],RAX
            movsd XMM0,QWORD PTR [R13]
            movsd XMM6,QWORD PTR [RSP]
            mulsd XMM0,XMM0
            movapd XMM1,XMM6
            movsd XMM4,QWORD PTR [RIP+.L_44b010]
            movsd QWORD PTR [RSP+16],XMM6
            mulsd XMM1,XMM6
            movsd QWORD PTR [RSP],XMM4
            divsd XMM1,XMM0
            subsd XMM4,XMM1
            pxor XMM1,XMM1
            ucomisd XMM6,XMM1
            movapd XMM0,XMM4
            movsd QWORD PTR [R15],XMM4
            jp .L_44a8f0

            jne .L_44a8f0

            jmp .L_44a8c5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ad28:

            lea RDX,QWORD PTR [RIP+.L_44afe3]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44ad86

            movsd XMM0,QWORD PTR [R13]
            movsd XMM2,QWORD PTR [RSP+16]
            addsd XMM2,XMM0
            ucomisd XMM2,XMM1
            jp .L_44ad66

            je .L_44ae74
.L_44ad66:

            addsd XMM0,XMM0
            mulsd XMM0,QWORD PTR [RSP+16]
            divsd XMM0,XMM2
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44a95f
.L_44ad86:

            lea RDX,QWORD PTR [RIP+.L_44afe8]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM1
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44aebe

            lea RDX,QWORD PTR [RIP+.L_44affa]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            andpd XMM2,XMMWORD PTR [RIP+.L_44b060]
            ucomisd XMM2,QWORD PTR [RIP+.L_44b050]
            ja .L_44af67

            movsd XMM4,QWORD PTR [R15]
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM2,XMM4
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM4
            mulsd XMM2,XMM0
            mulsd XMM0,XMM2
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            subsd XMM2,XMM4
            movsd XMM1,QWORD PTR [RSP+24]
            mulsd XMM0,XMM3
            addsd XMM2,XMM3
            mulsd XMM2,QWORD PTR [RIP+.L_44b048]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
.L_44ae5c:

            mulsd XMM0,QWORD PTR [R13]
            movsd QWORD PTR [R13],XMM0
            mov QWORD PTR [R15],0
            jmp .L_44a95f
.L_44ae74:

            mov ESI,4294967276
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44a95f
.L_44ae90:

            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+8]
            jmp .L_44a8e6
.L_44aebe:

            lea RDX,QWORD PTR [RIP+.L_44aff1]
            mov RSI,R12
            mov RDI,RBX
            call .L_4043f0

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44a95f

            lea RDX,QWORD PTR [RIP+.L_44b003]
            mov RSI,R12
            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM1
            call .L_4043f0

            mov QWORD PTR [RSP+8],RAX
            movsd XMM0,QWORD PTR [RSP+8]
            call sin@PLT

            movapd XMM2,XMM0
            movsd XMM1,QWORD PTR [RSP+16]
            andpd XMM2,XMMWORD PTR [RIP+.L_44b060]
            ucomisd XMM2,QWORD PTR [RIP+.L_44b050]
            ja .L_44af67

            movsd XMM2,QWORD PTR [R15]
            movsd QWORD PTR [RSP+16],XMM1
            movapd XMM3,XMM2
            mulsd XMM3,XMM0
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP]
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            call sqrt@PLT

            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+16]
            subsd XMM2,QWORD PTR [RSP+8]
            divsd XMM0,XMM2
            jmp .L_44ae5c
.L_44af67:

            mov ESI,4294967285
            mov RDI,RBX
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM1,QWORD PTR [RSP]
            jmp .L_44a95f
.L_44af83:

            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_44aca9
.L_44af9d:
          .string "tR"
.L_44afa0:
          .string "dR"
.L_44afa3:
          .string "sellps"
.L_44afaa:
          .string "da"
.L_44afad:
          .string "tes"
.L_44afb1:
          .string "des"
.L_44afb5:
          .string "te"
.L_44afb8:
          .string "de"
.L_44afbb:
          .string "trf"
.L_44afbf:
          .string "drf"
.L_44afc3:
          .string "tf"
.L_44afc6:
          .string "df"
.L_44afc9:
          .string "tb"
.L_44afcc:
          .string "db"
.L_44afcf:
          .string "bR_A"
.L_44afd4:
          .string "bR_V"
.L_44afd9:
          .string "bR_a"
.L_44afde:
          .string "bR_g"
.L_44afe3:
          .string "bR_h"
.L_44afe8:
          .string "tR_lat_a"
.L_44aff1:
          .string "tR_lat_g"
.L_44affa:
          .string "rR_lat_a"
.L_44b003:
          .string "rR_lat_g"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44b010:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44b018:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_44b020:
          .byte 0x1
          .byte 0x6b
          .byte 0x5
          .byte 0xac
          .byte 0x15
          .byte 0xb0
          .byte 0x96
          .byte 0x3f
.L_44b028:
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xd8
          .byte 0x82
          .byte 0x2d
          .byte 0xa8
          .byte 0x3f
.L_44b030:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xc5
          .byte 0x3f
.L_44b038:
          .byte 0xfd
          .byte 0xb0
          .byte 0x48
          .byte 0x19
          .byte 0x78
          .byte 0xba
          .byte 0xa5
          .byte 0x3f
.L_44b040:
          .byte 0x72
          .byte 0x1c
          .byte 0xc7
          .byte 0x71
          .byte 0x1c
          .byte 0xc7
          .byte 0xb1
          .byte 0x3f
.L_44b048:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_44b050:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b060:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b070:

            lea RAX,QWORD PTR [RIP+.L_65f700]
            ret 
.L_44b078:
          .string "MERIT"
.L_44b07e:
          .string "a=6378137.0"
.L_44b08a:
          .string "rf=298.257"
.L_44b095:
          .string "MERIT 1983"
.L_44b0a0:
          .string "SGS85"
.L_44b0a6:
          .string "a=6378136.0"
.L_44b0b2:
          .string "Soviet Geodetic System 85"
.L_44b0cc:
          .string "GRS80"
.L_44b0d2:
          .string "rf=298.257222101"
.L_44b0e3:
          .string "GRS 1980(IUGG, 1980)"
.L_44b0f8:
          .string "IAU76"
.L_44b0fe:
          .string "a=6378140.0"
.L_44b10a:
          .string "IAU 1976"
.L_44b113:
          .string "airy"
.L_44b118:
          .string "a=6377563.396"
.L_44b126:
          .string "b=6356256.910"
.L_44b134:
          .string "Airy 1830"
.L_44b13e:
          .string "APL4.9"
.L_44b145:
          .string "a=6378137.0."
.L_44b152:
          .string "rf=298.25"
.L_44b15c:
          .string "Appl. Physics. 1965"
.L_44b170:
          .string "NWL9D"
.L_44b176:
          .string "a=6378145.0."
.L_44b183:
          .string "Naval Weapons Lab., 1965"
.L_44b19c:
          .string "mod_airy"
.L_44b1a5:
          .string "a=6377340.189"
.L_44b1b3:
          .string "b=6356034.446"
.L_44b1c1:
          .string "Modified Airy"
.L_44b1cf:
          .string "andrae"
.L_44b1d6:
          .string "a=6377104.43"
.L_44b1e3:
          .string "rf=300.0"
.L_44b1ec:
          .string "Andrae 1876 (Den., Iclnd.)"
.L_44b207:
          .string "aust_SA"
.L_44b20f:
          .string "a=6378160.0"
.L_44b21b:
          .string "GRS67"
.L_44b221:
          .string "rf=298.2471674270"
.L_44b233:
          .string "GRS 67(IUGG 1967)"
.L_44b245:
          .string "bessel"
.L_44b24c:
          .string "a=6377397.155"
.L_44b25a:
          .string "rf=299.1528128"
.L_44b269:
          .string "Bessel 1841"
.L_44b275:
          .string "bess_nam"
.L_44b27e:
          .string "a=6377483.865"
.L_44b28c:
          .string "Bessel 1841 (Namibia)"
.L_44b2a2:
          .string "clrk66"
.L_44b2a9:
          .string "a=6378206.4"
.L_44b2b5:
          .string "b=6356583.8"
.L_44b2c1:
          .string "Clarke 1866"
.L_44b2cd:
          .string "clrk80"
.L_44b2d4:
          .string "a=6378249.145"
.L_44b2e2:
          .string "rf=293.4663"
.L_44b2ee:
          .string "Clarke 1880 mod."
.L_44b2ff:
          .string "clrk80ign"
.L_44b309:
          .string "a=6378249.2"
.L_44b315:
          .string "rf=293.4660212936269"
.L_44b32a:
          .string "Clarke 1880 (IGN)."
.L_44b33d:
          .string "CPM"
.L_44b341:
          .string "a=6375738.7"
.L_44b34d:
          .string "rf=334.29"
.L_44b357:
          .string "delmbr"
.L_44b35e:
          .string "a=6376428."
.L_44b369:
          .string "rf=311.5"
.L_44b372:
          .string "Delambre 1810 (Belgium)"
.L_44b38a:
          .string "engelis"
.L_44b392:
          .string "a=6378136.05"
.L_44b39f:
          .string "rf=298.2566"
.L_44b3ab:
          .string "Engelis 1985"
.L_44b3b8:
          .string "evrst30"
.L_44b3c0:
          .string "a=6377276.345"
.L_44b3ce:
          .string "rf=300.8017"
.L_44b3da:
          .string "Everest 1830"
.L_44b3e7:
          .string "evrst48"
.L_44b3ef:
          .string "a=6377304.063"
.L_44b3fd:
          .string "Everest 1948"
.L_44b40a:
          .string "evrst56"
.L_44b412:
          .string "a=6377301.243"
.L_44b420:
          .string "Everest 1956"
.L_44b42d:
          .string "evrst69"
.L_44b435:
          .string "a=6377295.664"
.L_44b443:
          .string "Everest 1969"
.L_44b450:
          .string "evrstSS"
.L_44b458:
          .string "a=6377298.556"
.L_44b466:
          .string "Everest (Sabah & Sarawak)"
.L_44b480:
          .string "fschr60"
.L_44b488:
          .string "a=6378166."
.L_44b493:
          .string "rf=298.3"
.L_44b49c:
          .string "Fischer (Mercury Datum) 1960"
.L_44b4b9:
          .string "fschr60m"
.L_44b4c2:
          .string "a=6378155."
.L_44b4cd:
          .string "Modified Fischer 1960"
.L_44b4e3:
          .string "fschr68"
.L_44b4eb:
          .string "a=6378150."
.L_44b4f6:
          .string "Fischer 1968"
.L_44b503:
          .string "helmert"
.L_44b50b:
          .string "a=6378200."
.L_44b516:
          .string "Helmert 1906"
.L_44b523:
          .string "hough"
.L_44b529:
          .string "a=6378270.0"
.L_44b535:
          .string "rf=297."
.L_44b53d:
          .string "Hough"
.L_44b543:
          .string "intl"
.L_44b548:
          .string "a=6378388.0"
.L_44b554:
          .string "International 1909 (Hayford)"
.L_44b571:
          .string "krass"
.L_44b577:
          .string "a=6378245.0"
.L_44b583:
          .string "Krassovsky, 1942"
.L_44b594:
          .string "kaula"
.L_44b59a:
          .string "a=6378163."
.L_44b5a5:
          .string "rf=298.24"
.L_44b5af:
          .string "Kaula 1961"
.L_44b5ba:
          .string "lerch"
.L_44b5c0:
          .string "a=6378139."
.L_44b5cb:
          .string "Lerch 1979"
.L_44b5d6:
          .string "mprts"
.L_44b5dc:
          .string "a=6397300."
.L_44b5e7:
          .string "rf=191."
.L_44b5ef:
          .string "Maupertius 1738"
.L_44b5ff:
          .string "new_intl"
.L_44b608:
          .string "a=6378157.5"
.L_44b614:
          .string "b=6356772.2"
.L_44b620:
          .string "New International 1967"
.L_44b637:
          .string "plessis"
.L_44b63f:
          .string "a=6376523."
.L_44b64a:
          .string "b=6355863."
.L_44b655:
          .string "Plessis 1817 (France)"
.L_44b66b:
          .string "SEasia"
.L_44b672:
          .string "a=6378155.0"
.L_44b67e:
          .string "b=6356773.3205"
.L_44b68d:

            push RBX
            outsd DX,DWORD PTR [RSI]
            jne .L_44b705
          .byte 0x68
          .byte 0x65
          .byte 0x61
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x41
          .byte 0x73
          .byte 0x69
          .byte 0x61
          .byte 0x0
.L_44b69c:
          .string "walbeck"
.L_44b6a4:
          .string "a=6376896.0"
.L_44b6b0:
          .string "b=6355834.8467"
.L_44b6bf:
          .string "Walbeck"
.L_44b6c7:
          .string "WGS60"
.L_44b6cd:
          .string "a=6378165.0"
.L_44b6d9:
          .string "WGS 60"
.L_44b6e0:
          .string "WGS66"
.L_44b6e6:
          .string "a=6378145.0"
.L_44b6f2:
          .string "WGS 66"
.L_44b6f9:
          .string "WGS72"
.L_44b6ff:
          .byte 0x61
          .byte 0x3d
          .byte 0x36
          .byte 0x33
          .byte 0x37
          .byte 0x38
.L_44b705:

            xor DWORD PTR [RBX],ESI
            xor EAX,1912614958
            cmp AX,14642
            cmp BYTE PTR [RSI],CH
            xor DH,BYTE PTR [RSI]
            add BYTE PTR [RDI+71],DL
            push RBX
            and BYTE PTR [RDI],DH
            xor AL,BYTE PTR [RAX]
.L_44b71c:

            push RDI
            push R11
            cmp BYTE PTR [RAX+RAX*1],DH
.L_44b722:

            jb .L_44b78a

            cmp EAX,775436594
            xor DH,BYTE PTR [RIP+.L_65fea8+856746686]
            xor EAX,1459630902
            push R11
            and BYTE PTR [RAX],BH
            xor AL,0
.L_44b73a:
          .string "sphere"
.L_44b741:
          .string "a=6370997.0"
.L_44b74d:
          .string "b=6370997.0"
.L_44b759:

            outsd DX,DWORD PTR [RSI]
            jb .L_44b7ca
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x53
          .byte 0x70
          .byte 0x68
          .byte 0x65
          .byte 0x72
          .byte 0x65
          .byte 0x20
          .byte 0x28
          .byte 0x72
          .byte 0x3d
          .byte 0x36
          .byte 0x33
          .byte 0x37
          .byte 0x30
          .byte 0x39
          .byte 0x39
          .byte 0x37
          .byte 0x29
          .byte 0x0

            nop
            nop
            nop
            nop
            nop
.L_44b778:
          .byte 0x41
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x61
          .byte 0x6e
          .byte 0x20
          .byte 0x4e
          .byte 0x61
          .byte 0x74
          .byte 0x6c
          .byte 0x20
          .byte 0x26
          .byte 0x20
.L_44b78a:

            push RBX
            and BYTE PTR CS:[RCX+109],AL
            jb .L_44b7c0

            and BYTE PTR [RCX],DH
            cmp DWORD PTR [RSI],ESI
            cmp DWORD PTR [RAX],EAX
.L_44b798:

            outsd DX,DWORD PTR [RSI]
            insd DWORD PTR [RDI],DX
            insd DWORD PTR [RDI],DX
            and BYTE PTR CS:[RBP+RIZ*2+115],AH
            and BYTE PTR [RAX+111],DL
            imul ESP,DWORD PTR [RBX+RSI*2+32],1293972581
          .byte 0x65
          .byte 0x73
          .byte 0x75
          .byte 0x72
          .byte 0x65

            jae .L_44b7d3
          .byte 0x31
          .byte 0x37
          .byte 0x39
          .byte 0x39
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b7c0:

            lea RAX,QWORD PTR [RIP+.L_65fe9c]
            ret 
.L_44b7c8:
          .byte 0xf
          .byte 0x1f
.L_44b7ca:

            test BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_44b7d0:

            push R12
            push RBP
.L_44b7d3:

            push RBX
            movapd XMM4,XMM0
            movapd XMM0,XMM1
            sub RSP,96
.L_44b7e0:

            mov R12,QWORD PTR [RDI]
            movq XMM3,QWORD PTR [RIP+.L_44be10]
            mov QWORD PTR [RSP+48],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            andpd XMM0,XMM3
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            movapd XMM5,XMM0
            subsd XMM5,QWORD PTR [RIP+.L_44bde8]
            ucomisd XMM5,QWORD PTR [RIP+.L_44bdf0]
            ja .L_44bb08

            andpd XMM3,XMM4
            ucomisd XMM3,QWORD PTR [RIP+.L_44bdf8]
            ja .L_44bb08

            movsd QWORD PTR [RSP+24],XMM2
            mov RBP,RDI
            mov RBX,RSI
            movsd QWORD PTR [RSP+16],XMM1
            mov DWORD PTR [RIP+.L_65fe9c],0
            movsd QWORD PTR [RSP+8],XMM4
            movsd QWORD PTR [RSP],XMM0
            call __errno_location@PLT

            movsd XMM7,QWORD PTR [RIP+.L_44bdf0]
            movsd XMM2,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX],0
            movsd XMM0,QWORD PTR [RSP]
            mov DWORD PTR [R12],0
            ucomisd XMM7,XMM2
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            ja .L_44bb40

            movsd XMM3,QWORD PTR [RIP+.L_44bde8]
            subsd XMM3,XMM2
            ucomisd XMM0,XMM3
            jbe .L_44bb5a
.L_44b8c8:

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            jbe .L_44b8e0

            movapd XMM3,XMM2
            subsd XMM3,QWORD PTR [RIP+.L_44bde8]
            nop
            nop
.L_44b8e0:

            mov EAX,DWORD PTR [RBP+304]
            subsd XMM4,QWORD PTR [RBP+328]
            test EAX,EAX
            je .L_44bbf0
.L_44b8f6:

            mov RAX,QWORD PTR [RBP+104]
            test RAX,RAX
            je .L_44b931

            movsd QWORD PTR [RSP+16],XMM2
            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM4
            movapd XMM1,XMM3
            movsd QWORD PTR [RSP],XMM3
            mov RSI,RBX
            mov RDI,RBP
            call RAX

            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM4,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
.L_44b931:

            mov R12D,DWORD PTR [RBX+96]
            mov EAX,R12D
            and EAX,3
            cmp EAX,3
            je .L_44b972

            lea RSI,QWORD PTR [RSP+48]
            movapd XMM0,XMM4
            movapd XMM1,XMM3
            mov RDI,RBP
            movsd QWORD PTR [RSP],XMM3
            call .L_44a4b0

            mov EDX,EAX
            mov EAX,1
            test EDX,EDX
            jne .L_44bb1a

            mov R12D,DWORD PTR [RBX+96]
            movsd XMM3,QWORD PTR [RSP]
.L_44b972:

            test R12B,1
            jne .L_44b98d

            movsd XMM0,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBX],XMM0
            movsd XMM0,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBX+16],XMM0
.L_44b98d:

            test R12B,2
            je .L_44bba8

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
.L_44b9a1:

            movapd XMM0,XMM3
            lea RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call sincos@PLT

            test R12B,4
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            je .L_44bc88

            pxor XMM4,XMM4
            movsd XMM0,QWORD PTR [RBP+176]
            ucomisd XMM0,XMM4
            jp .L_44b9f8

            je .L_44bc20
.L_44b9f8:

            mulsd XMM0,XMM3
            mulsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44bde0]
            subsd XMM0,XMM3
            mulsd XMM0,XMM0
            movapd XMM3,XMM0
            divsd XMM3,QWORD PTR [RBP+216]
.L_44ba1c:

            and R12D,8
            je .L_44bc30
.L_44ba26:

            mov RDI,QWORD PTR [RBP]
            movsd QWORD PTR [RSP],XMM4
            mulsd XMM1,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RBX+16]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+32]
            subsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RBX+40]
            mulsd XMM0,XMM3
            divsd XMM0,XMM5
            movsd QWORD PTR [RBX+72],XMM0
            divsd XMM0,XMM1
            call .L_449c40

            movsd XMM1,QWORD PTR [RBX+40]
            movsd QWORD PTR [RBX+56],XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM1,XMM1
            mulsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM4,QWORD PTR [RSP]
            addsd XMM3,XMM3
            addsd XMM1,XMM0
            movapd XMM0,XMM3
            addsd XMM0,XMM1
            ucomisd XMM4,XMM0
            sqrtsd XMM5,XMM0
            ja .L_44bd58
.L_44ba9f:

            subsd XMM1,XMM3
            pxor XMM2,XMM2
            movsd QWORD PTR [RBX+80],XMM5
            ucomisd XMM2,XMM1
            jb .L_44bbc8
.L_44bab6:

            movapd XMM1,XMM5
            movsd XMM0,QWORD PTR [RIP+.L_44be00]
            mov RDI,QWORD PTR [RBP]
            subsd XMM1,XMM2
            addsd XMM2,XMM5
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
            movsd QWORD PTR [RBX+88],XMM1
            movapd XMM0,XMM2
            movsd QWORD PTR [RBX+80],XMM2
            addsd XMM2,XMM1
            subsd XMM0,XMM1
            divsd XMM0,XMM2
            call .L_449c40

            addsd XMM0,XMM0
            xor EAX,EAX
            movsd QWORD PTR [RBX+48],XMM0
            jmp .L_44bb1a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bb08:

            mov ESI,4294967282
            mov RDI,R12
            call .L_404af0

            mov EAX,1
.L_44bb1a:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44bd87

            add RSP,96
.L_44bb32:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bb40:

            movsd XMM3,QWORD PTR [RIP+.L_44bdd0]
            movsd XMM2,QWORD PTR [RIP+.L_44bdd8]
            ucomisd XMM0,XMM3
            ja .L_44b8c8
.L_44bb5a:

            mov EDX,DWORD PTR [RBP+308]
            movapd XMM3,XMM1
            test EDX,EDX
            je .L_44b8e0

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBP+224]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM3,XMM0
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_44b8e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bba8:

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+72]
            movsd QWORD PTR [RBX+8],XMM2
            movsd QWORD PTR [RBX+24],XMM1
            jmp .L_44b9a1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bbc8:

            sqrtsd XMM2,XMM1
            jbe .L_44bab6

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call sqrt@PLT

            movsd XMM5,QWORD PTR [RBX+80]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_44bab6
          .byte 0x90
.L_44bbf0:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMM0
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_44b8f6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bc20:

            movsd XMM3,QWORD PTR [RIP+.L_44bde0]
            jmp .L_44ba1c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44bc30:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            call atan2@PLT

            mov EAX,DWORD PTR [RBX+96]
            xorpd XMM0,XMMWORD PTR [RIP+.L_44be20]
            test AL,1
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBX+64],XMM0
            je .L_44bc75

            or EAX,8
            mov DWORD PTR [RBX+96],EAX
.L_44bc75:

            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
            jmp .L_44ba26
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bc88:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM5
            call hypot@PLT

            movsd XMM1,QWORD PTR [RBX+16]
            movsd QWORD PTR [RBX+32],XMM0
            movsd XMM0,QWORD PTR [RBX]
            call hypot@PLT

            movsd XMM5,QWORD PTR [RSP]
            pxor XMM4,XMM4
            divsd XMM0,XMM5
            movsd XMM1,QWORD PTR [RBP+176]
            movsd XMM3,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM4
            movsd QWORD PTR [RBX+40],XMM0
            jp .L_44bcf8

            jne .L_44bcf8

            mov R12D,DWORD PTR [RBX+96]
            movsd XMM1,QWORD PTR [RBX+24]
            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM3,QWORD PTR [RIP+.L_44bde0]
            jmp .L_44ba1c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bcf8:

            mulsd XMM1,XMM3
            mulsd XMM1,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44bde0]
            subsd XMM3,XMM1
            ucomisd XMM4,XMM3
            sqrtsd XMM2,XMM3
            ja .L_44bd8c
.L_44bd16:

            movapd XMM1,XMM3
            movsd XMM6,QWORD PTR [RBP+216]
            mulsd XMM0,XMM2
            mov R12D,DWORD PTR [RBX+96]
            mulsd XMM1,XMM2
            mulsd XMM3,XMM3
            movsd XMM2,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+40],XMM0
            divsd XMM1,XMM6
            divsd XMM3,XMM6
            mulsd XMM1,QWORD PTR [RBX+32]
            movsd QWORD PTR [RBX+32],XMM1
            movsd XMM1,QWORD PTR [RBX+24]
            jmp .L_44ba1c
.L_44bd58:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM5
            movsd QWORD PTR [RSP+16],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RBX+72]
            movsd XMM1,QWORD PTR [RSP+8]
            addsd XMM3,XMM3
            movsd XMM5,QWORD PTR [RSP]
            jmp .L_44ba9f
.L_44bd87:

            call __stack_chk_fail@PLT
.L_44bd8c:

            movapd XMM0,XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM0,QWORD PTR [RBX+40]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_44bd16
.L_44bdcd:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44bdd0:
          .byte 0xa6
          .byte 0x68
          .byte 0xe9
          .byte 0xd7
          .byte 0xf0
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44bdd8:

            int1 
          .byte 0x68
          .byte 0xe3
          .byte 0x88
          .byte 0xb5
          .byte 0xf8
          .byte 0xe4
          .byte 0x3e
.L_44bde0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44bde8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44bdf0:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_44bdf8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_44be00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44be10:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44be20:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_44be30:

            cmp QWORD PTR [RDI+40],0
            je .L_44bf70

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_44be44:

            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_416a10

            test DWORD PTR [RBX+320],4294967293
            mov EBP,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            je .L_44bf10
.L_44be7f:

            mov RDI,RBX
            call QWORD PTR [RBX+40]

            mov RDI,RBX
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_415f90

            test EAX,EAX
            jne .L_44bf59

            mov EAX,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            test EAX,EAX
            jne .L_44bec7

            movsd XMM2,QWORD PTR [RBX+128]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
.L_44bec7:

            addsd XMM0,QWORD PTR [RBX+344]
            movsd XMM2,QWORD PTR [RBX+376]
            addsd XMM1,QWORD PTR [RBX+352]
            mov ESI,EBP
            mov RDI,RBX
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM1
            call .L_416a00

            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            add RSP,40
.L_44bf0d:

            pop RBX
            pop RBP
            ret 
.L_44bf10:

            movq XMM3,QWORD PTR [RIP+.L_44c040]
            movapd XMM0,XMM1
            movsd XMM5,QWORD PTR [RIP+.L_44c010]
            movsd XMM4,QWORD PTR [RIP+.L_44c028]
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            ucomisd XMM0,XMM4
            ja .L_44bf4c

            movapd XMM6,XMM2
            andpd XMM6,XMM3
            ucomisd XMM6,QWORD PTR [RIP+.L_44c030]
            jbe .L_44bf80
.L_44bf4c:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404af0
.L_44bf59:

            movsd XMM0,QWORD PTR [RIP+.L_44c020]
            add RSP,40
.L_44bf65:

            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bf70:

            movsd XMM0,QWORD PTR [RIP+.L_44c020]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44bf80:

            andpd XMM0,XMM3
            ucomisd XMM4,XMM0
            jb .L_44bfd0

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_44c002

            movapd XMM1,XMM5
.L_44bf98:

            subsd XMM2,QWORD PTR [RBX+328]
            mov EDX,DWORD PTR [RBX+304]
            test EDX,EDX
            movapd XMM0,XMM2
            jne .L_44be7f

            movsd QWORD PTR [RSP+8],XMM1
            call .L_449e30

            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_44be7f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bfd0:

            mov ECX,DWORD PTR [RBX+308]
            test ECX,ECX
            je .L_44bf98

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+224]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM1,XMM0
            jmp .L_44bf98
.L_44c002:

            movsd XMM1,QWORD PTR [RIP+.L_44c018]
            jmp .L_44bf98
.L_44c00c:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44c010:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44c018:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_44c020:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44c028:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_44c030:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c040:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c050:

            cmp QWORD PTR [RDI+48],0
            je .L_44c1b8

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
            movsd XMM2,QWORD PTR [RIP+.L_44c1f0]
            ucomisd XMM0,XMM2
            ja .L_44c078

            ucomisd XMM1,XMM2
            jbe .L_44c0a0
.L_44c078:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967281
            call .L_404af0
.L_44c085:

            movsd XMM0,QWORD PTR [RIP+.L_44c1e8]
            add RSP,24
            pop RBX
            movapd XMM1,XMM0
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c0a0:

            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_416a10

            movsd XMM2,QWORD PTR [RBX+368]
            mov EBP,EAX
            movsd XMM0,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            test ESI,ESI
            subsd XMM0,QWORD PTR [RBX+344]
            subsd XMM1,QWORD PTR [RBX+352]
            jne .L_44c0f7

            movsd XMM2,QWORD PTR [RBX+144]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
.L_44c0f7:

            mov RDI,RBX
            call QWORD PTR [RBX+48]

            mov RAX,QWORD PTR [RBX]
            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_44c085

            test DWORD PTR [RBX+320],4294967293
            movapd XMM2,XMM0
            movsd QWORD PTR [RSP],XMM1
            jne .L_44c18c

            mov EDX,DWORD PTR [RBX+304]
            addsd XMM2,QWORD PTR [RBX+328]
            test EDX,EDX
            je .L_44c1c8
.L_44c135:

            mov EAX,DWORD PTR [RBX+308]
            test EAX,EAX
            je .L_44c18c

            movq XMM3,QWORD PTR [RIP+.L_44c210]
            movapd XMM0,XMM1
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_44c1f8]
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_44c200]
            jbe .L_44c18c

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM2
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+216]
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP],XMM0
.L_44c18c:

            mov ESI,EBP
            mov RDI,RBX
            movsd QWORD PTR [RSP+8],XMM2
            call .L_416a00

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP]
            add RSP,24
.L_44c1ab:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c1b8:

            movsd XMM0,QWORD PTR [RIP+.L_44c1e8]
            movapd XMM1,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c1c8:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call .L_449e30

            movsd XMM1,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            jmp .L_44c135
.L_44c1e6:
          .byte 0x66
          .byte 0x90
.L_44c1e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44c1f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_44c1f8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44c200:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c210:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c220:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_44c22b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+56],0
            je .L_44c3a0

            movsd XMM1,QWORD PTR [RSP+80]
            mov RBX,RSI
            mov RDI,RSI
            movsd XMM2,QWORD PTR [RSP+88]
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_416a10

            test DWORD PTR [RBX+320],4294967293
            mov R12D,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            je .L_44c350
.L_44c286:

            movsd QWORD PTR [RSP+80],XMM1
            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
.L_44c295:

            movsd QWORD PTR [RSP+96],XMM2
            mov RDX,QWORD PTR [RBX+56]
            mov RSI,RBX
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            call RDX

            mov RDX,QWORD PTR [RBX]
            add RSP,32
.L_44c2b7:

            mov EDX,DWORD PTR [RDX]
            test EDX,EDX
            jne .L_44c3a0

            mov EAX,DWORD PTR [RBX+324]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+24]
            test EAX,EAX
            jne .L_44c2e7

            movsd XMM2,QWORD PTR [RBX+128]
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
.L_44c2e7:

            addsd XMM1,QWORD PTR [RBX+344]
            movsd XMM2,QWORD PTR [RBX+376]
            addsd XMM0,QWORD PTR [RBX+352]
            mov ESI,R12D
            mov RDI,RBX
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_416a00

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            mov QWORD PTR [RBP+16],RAX
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBP],XMM0
            jmp .L_44c3b7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c350:

            movq XMM3,QWORD PTR [RIP+.L_44c4a0]
            movapd XMM0,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_44c470]
            movsd XMM4,QWORD PTR [RIP+.L_44c488]
            andpd XMM0,XMM3
            subsd XMM0,XMM5
            ucomisd XMM0,XMM4
            ja .L_44c38c

            movapd XMM6,XMM1
            andpd XMM6,XMM3
            ucomisd XMM6,QWORD PTR [RIP+.L_44c490]
            jbe .L_44c3e0
.L_44c38c:

            mov RDI,QWORD PTR [RBX]
            mov ESI,4294967282
            call .L_404af0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c3a0:

            movsd XMM0,QWORD PTR [RIP+.L_44c480]
            movsd QWORD PTR [RBP],XMM0
            movsd QWORD PTR [RBP+8],XMM0
            movsd QWORD PTR [RBP+16],XMM0
.L_44c3b7:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_44c46a

            add RSP,48
.L_44c3d2:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c3e0:

            andpd XMM0,XMM3
            ucomisd XMM4,XMM0
            jb .L_44c430

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_44c460

            movapd XMM2,XMM5
.L_44c3f8:

            mov ECX,DWORD PTR [RBX+304]
            subsd XMM1,QWORD PTR [RBX+328]
            test ECX,ECX
            jne .L_44c286

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_44c286
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c430:

            mov ESI,DWORD PTR [RBX+308]
            test ESI,ESI
            je .L_44c3f8

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBX+224]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM2,XMM0
            jmp .L_44c3f8
.L_44c460:

            movsd XMM2,QWORD PTR [RIP+.L_44c478]
            jmp .L_44c3f8
.L_44c46a:

            call __stack_chk_fail@PLT
.L_44c46f:
          .byte 0x90
.L_44c470:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44c478:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_44c480:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44c488:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_44c490:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c4a0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c4b0:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,48
.L_44c4bb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RSI+64],0
            je .L_44c50f

            movsd XMM1,QWORD PTR [RSP+80]
            mov RBP,RSI
            movsd XMM0,QWORD PTR [RIP+.L_44c6d8]
            ucomisd XMM1,XMM0
            ja .L_44c501

            movsd XMM2,QWORD PTR [RSP+88]
            ucomisd XMM2,XMM0
            ja .L_44c501

            movsd XMM3,QWORD PTR [RSP+96]
            ucomisd XMM3,XMM0
            jbe .L_44c548
.L_44c501:

            mov RDI,QWORD PTR [RBP]
            mov ESI,4294967281
            call .L_404af0
.L_44c50f:

            movsd XMM0,QWORD PTR [RIP+.L_44c6d0]
            movsd QWORD PTR [RBX],XMM0
            movsd QWORD PTR [RBX+8],XMM0
            movsd QWORD PTR [RBX+16],XMM0
.L_44c525:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_44c6c8

            add RSP,48
.L_44c540:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c548:

            mov RDI,RSI
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_416a10

            movsd XMM0,QWORD PTR [RBP+368]
            mov R12D,EAX
            movsd XMM1,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RBP+324]
            movsd XMM2,QWORD PTR [RSP]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
            test ESI,ESI
            subsd XMM1,QWORD PTR [RBP+344]
            subsd XMM2,QWORD PTR [RBP+352]
            jne .L_44c5a3

            movsd XMM0,QWORD PTR [RBP+144]
            mulsd XMM1,XMM0
            mulsd XMM2,XMM0
.L_44c5a3:

            movsd QWORD PTR [RSP+80],XMM1
            lea RDI,QWORD PTR [RSP+16]
            sub RSP,8
.L_44c5b2:

            movsd QWORD PTR [RSP+96],XMM2
            mov RAX,QWORD PTR [RBP+64]
            mov RSI,RBP
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            push QWORD PTR [RSP+104]
            call RAX

            mov RAX,QWORD PTR [RBP]
            add RSP,32
            mov ECX,DWORD PTR [RAX]
            test ECX,ECX
            jne .L_44c50f

            test DWORD PTR [RBP+320],4294967293
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+24]
            jne .L_44c668

            mov EDX,DWORD PTR [RBP+304]
            addsd XMM1,QWORD PTR [RBP+328]
            test EDX,EDX
            je .L_44c6ac
.L_44c60d:

            mov EAX,DWORD PTR [RBP+308]
            test EAX,EAX
            je .L_44c668

            movq XMM3,QWORD PTR [RIP+.L_44c6f0]
            movapd XMM0,XMM2
            andpd XMM0,XMM3
            subsd XMM0,QWORD PTR [RIP+.L_44c6e0]
            andpd XMM0,XMM3
            ucomisd XMM0,QWORD PTR [RIP+.L_44c6e8]
            jbe .L_44c668

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM1
            call tan@PLT

            mulsd XMM0,QWORD PTR [RBP+216]
            call atan@PLT

            movsd XMM1,QWORD PTR [RSP]
            movapd XMM2,XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c668:

            mov ESI,R12D
            mov RDI,RBP
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM1
            call .L_416a00

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM2,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            mov QWORD PTR [RBX+16],RAX
            movdqa XMM0,XMMWORD PTR [RSP+16]
            movups XMMWORD PTR [RBX],XMM0
            jmp .L_44c525
.L_44c6ac:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP],XMM2
            call .L_449e30

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM1,XMM0
            jmp .L_44c60d
.L_44c6c8:

            call __stack_chk_fail@PLT
.L_44c6cd:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c6d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44c6d8:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_44c6e0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44c6e8:
          .byte 0x11
          .byte 0xea
          .byte 0x2d
          .byte 0x81
          .byte 0x99
          .byte 0x97
          .byte 0x71
          .byte 0x3d
.L_44c6f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c700:

            sub RSP,24
.L_44c704:

            mov EDI,40
            movsd QWORD PTR [RSP+8],XMM0
            call .L_403c30

            test RAX,RAX
            je .L_44c7eb

            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RIP+.L_44c9c0]
            movsd XMM3,QWORD PTR [RIP+.L_44c9d8]
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44c9e0]
            addsd XMM1,QWORD PTR [RIP+.L_44c9c8]
            mulsd XMM1,XMM0
            addsd XMM1,QWORD PTR [RIP+.L_44c9d0]
            mulsd XMM1,XMM0
            addsd XMM3,XMM1
            mulsd XMM3,XMM0
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44c9f0]
            mulsd XMM3,XMM0
            movsd QWORD PTR [RAX],XMM2
            movsd XMM2,QWORD PTR [RIP+.L_44c9e8]
            addsd XMM3,QWORD PTR [RIP+.L_44c9f8]
            subsd XMM2,XMM1
            movapd XMM1,XMM2
            mulsd XMM3,XMM0
            mulsd XMM1,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44ca00]
            subsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_44ca08]
            movsd QWORD PTR [RAX+8],XMM1
            movapd XMM1,XMM0
            mulsd XMM3,XMM0
            mulsd XMM1,XMM0
            mulsd XMM2,XMM1
            mulsd XMM1,XMM0
            movsd QWORD PTR [RAX+16],XMM2
            mulsd XMM0,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_44ca10]
            subsd XMM2,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_44ca18]
            mulsd XMM2,XMM1
            movsd QWORD PTR [RAX+32],XMM0
            movsd QWORD PTR [RAX+24],XMM2
.L_44c7eb:

            add RSP,24
.L_44c7ef:

            ret 
.L_44c7f0:

            movapd XMM4,XMM1
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RDI+32]
            mulsd XMM4,XMM1
            mulsd XMM0,QWORD PTR [RDI]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+24]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+16]
            mulsd XMM3,XMM4
            addsd XMM3,QWORD PTR [RDI+8]
            mulsd XMM2,XMM3
            subsd XMM0,XMM2
            ret 
.L_44c829:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c830:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EBP,10
            push RBX
            movapd XMM3,XMM0
            mov RBX,RSI
            sub RSP,80
.L_44c84b:

            movsd XMM6,QWORD PTR [RIP+.L_44c9e0]
            lea R13,QWORD PTR [RSP+72]
            lea R12,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+24],XMM0
            subsd XMM6,XMM1
            movsd QWORD PTR [RSP+32],XMM1
            movapd XMM0,XMM6
            movsd XMM6,QWORD PTR [RIP+.L_44c9e0]
            divsd XMM6,XMM0
            movsd QWORD PTR [RSP+16],XMM6
            nop
            nop
            nop
            nop
            nop
.L_44c888:

            movapd XMM0,XMM3
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM3
            call sincos@PLT

            movsd XMM2,QWORD PTR [RSP+72]
            movsd XMM0,QWORD PTR [RSP+32]
            movapd XMM1,XMM2
            movsd XMM5,QWORD PTR [RIP+.L_44c9e0]
            mulsd XMM0,XMM2
            mulsd XMM1,XMM2
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RBX]
            mulsd XMM0,XMM2
            mulsd XMM2,QWORD PTR [RSP+64]
            mulsd XMM4,XMM3
            pxor XMM7,XMM7
            subsd XMM5,XMM0
            movsd XMM0,QWORD PTR [RBX+32]
            mulsd XMM0,XMM1
            ucomisd XMM7,XMM5
            addsd XMM0,QWORD PTR [RBX+24]
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RBX+16]
            mulsd XMM0,XMM1
            sqrtsd XMM1,XMM5
            addsd XMM0,QWORD PTR [RBX+8]
            mulsd XMM0,XMM2
            subsd XMM4,XMM0
            movapd XMM2,XMM4
            subsd XMM2,QWORD PTR [RSP+24]
            ja .L_44c980
.L_44c919:

            mulsd XMM1,XMM5
            movsd XMM7,QWORD PTR [RIP+.L_44ca20]
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_44ca30]
            ucomisd XMM7,XMM0
            ja .L_44c967

            sub EBP,1
            jne .L_44c888

            mov ESI,4294967279
            mov RDI,R14
            movsd QWORD PTR [RSP+8],XMM3
            call .L_404af0

            movsd XMM3,QWORD PTR [RSP+8]
.L_44c967:

            add RSP,80
.L_44c96b:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c980:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+56],XMM3
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+8],XMM5
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+56]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+8]
            jmp .L_44c919
.L_44c9be:
          .byte 0x66
          .byte 0x90
.L_44c9c0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x85
          .byte 0x3f
.L_44c9c8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x3f
.L_44c9d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x3f
.L_44c9d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x3f
.L_44c9e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44c9e8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x3f
.L_44c9f0:

            stosd DWORD PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            sub BH,BYTE PTR [RBP+63]
.L_44c9f8:

            stosd DWORD PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            mov BH,BYTE PTR [RDI]
.L_44ca00:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            fidivr WORD PTR [RDI]
.L_44ca08:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x77
          .byte 0x3f
.L_44ca10:
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0x55
          .byte 0xd7
          .byte 0x3f
.L_44ca18:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xd3
          .byte 0x3f
.L_44ca20:
          .byte 0x95
          .byte 0x64
          .byte 0x79
          .byte 0xe1
          .byte 0x7f
          .byte 0xfd
          .byte 0xa5
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ca30:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ca40:

            mulsd XMM2,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44caa0]
            mulsd XMM2,XMM0
            pxor XMM0,XMM0
            subsd XMM3,XMM2
            movapd XMM2,XMM3
            sqrtsd XMM3,XMM3
            ucomisd XMM0,XMM2
            ja .L_44ca6f

            divsd XMM1,XMM3
            movapd XMM0,XMM1
            ret 
.L_44ca6f:

            movapd XMM0,XMM2
            sub RSP,24
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            add RSP,24
            divsd XMM1,XMM3
            movapd XMM0,XMM1
            ret 
.L_44ca9f:
          .byte 0x90
.L_44caa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44cab0:

            push RBP
            push RBX
            movapd XMM8,XMM0
            sub RSP,216
.L_44cabe:

            movsd XMM3,QWORD PTR [RIP+.L_44cf58]
            lea RBX,QWORD PTR [RSP+32]
            movsd XMM11,QWORD PTR [RIP+.L_44cf60]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            movsd QWORD PTR [RSP+32],XMM3
            mov EAX,1
            movapd XMM9,XMM3
            movapd XMM7,XMM11
            movapd XMM6,XMM3
            movapd XMM4,XMM3
            movapd XMM2,XMM3
            movapd XMM5,XMM3
            movsd XMM10,QWORD PTR [RIP+.L_44cf70]
            jmp .L_44cb33
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44cb20:

            add RAX,1
            movapd XMM9,XMM1
            cmp RAX,20
            je .L_44cc80
.L_44cb33:

            movapd XMM1,XMM2
            movapd XMM13,XMM9
            addsd XMM6,XMM3
            mov EBP,EAX
            mulsd XMM1,XMM2
            mulsd XMM5,XMM1
            movapd XMM1,XMM4
            mulsd XMM1,XMM7
            mulsd XMM7,XMM11
            movapd XMM12,XMM5
            mulsd XMM1,XMM4
            mulsd XMM4,XMM6
            mulsd XMM1,XMM2
            addsd XMM2,XMM10
            divsd XMM12,XMM1
            movapd XMM1,XMM12
            mulsd XMM1,XMM8
            mulsd XMM8,XMM0
            subsd XMM13,XMM1
            movsd QWORD PTR [RBX+RAX*8],XMM1
            ucomisd XMM13,XMM9
            movapd XMM1,XMM13
            jp .L_44cb20

            jne .L_44cb20

            cdqe 
            movsd QWORD PTR [RSP+24],XMM10
            lea RDI,QWORD PTR [RAX*8+32]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM13
            call malloc@PLT

            test RAX,RAX
            je .L_44cc62

            movsd XMM3,QWORD PTR [RSP+16]
            lea EDX,DWORD PTR [RBP-1]
            cmp EBP,1
            movsd XMM1,QWORD PTR [RSP]
            movapd XMM6,XMM3
            movsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RAX+16],XMM1
            mov DWORD PTR [RAX],EDX
            subsd XMM6,XMM1
            movsd QWORD PTR [RAX+8],XMM0
            movsd XMM10,QWORD PTR [RSP+24]
            movapd XMM1,XMM6
            movsd QWORD PTR [RAX+24],XMM6
            je .L_44cc62
.L_44cc07:

            lea EDX,DWORD PTR [RBP-2]
            movsd XMM5,QWORD PTR [RIP+.L_44cf68]
            movapd XMM4,XMM10
            add RBX,8
            movapd XMM2,XMM3
            lea RCX,QWORD PTR [RDX*8+8]
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44cc30:

            subsd XMM1,QWORD PTR [RBX+RDX*1]
            mulsd XMM2,XMM4
            mulsd XMM3,XMM5
            addsd XMM4,XMM10
            addsd XMM5,XMM10
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            divsd XMM0,XMM3
            movsd QWORD PTR [RAX+RDX*1+32],XMM0
            add RDX,8
            cmp RCX,RDX
            jne .L_44cc30
.L_44cc62:

            mov RSI,QWORD PTR [RSP+200]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44ccea

            add RSP,216
.L_44cc7c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_44cc80:

            mov EDI,192
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM1
            call malloc@PLT

            test RAX,RAX
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+24]
            je .L_44cc62

            movapd XMM7,XMM3
            movsd QWORD PTR [RAX+16],XMM1
            mov DWORD PTR [RAX],19
            movsd QWORD PTR [RAX+8],XMM0
            mov EBP,20
            subsd XMM7,XMM1
            movapd XMM1,XMM7
            movsd QWORD PTR [RAX+24],XMM7
            jmp .L_44cc07
.L_44ccea:

            call __stack_chk_fail@PLT
.L_44ccef:

            nop
.L_44ccf0:

            sub RSP,56
.L_44ccf4:

            mulsd XMM2,XMM1
            mulsd XMM0,QWORD PTR [RDI+16]
            mulsd XMM1,XMM1
            pxor XMM6,XMM6
            movapd XMM3,XMM0
            movsd XMM0,QWORD PTR [RDI+8]
            movapd XMM4,XMM0
            movapd XMM5,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44cf58]
            mulsd XMM4,XMM1
            mulsd XMM5,XMM2
            subsd XMM0,XMM4
            ucomisd XMM6,XMM0
            sqrtsd XMM4,XMM0
            ja .L_44cd8f
.L_44cd34:

            divsd XMM5,XMM4
            movsxd RDX,DWORD PTR [RDI]
            movapd XMM0,XMM3
            test EDX,EDX
            movsd XMM3,QWORD PTR [RDI+RDX*8+24]
            subsd XMM0,XMM5
            je .L_44cd82

            lea EDX,DWORD PTR [RDX-1]
            movsxd RAX,EDX
            mov EDX,EDX
            lea RCX,QWORD PTR [RAX*8+24]
            shl RDX,3
            lea RAX,QWORD PTR [RDI+RCX*1]
            lea RCX,QWORD PTR [RDI+RCX*1-8]
            sub RCX,RDX
            mov RDX,RCX
.L_44cd70:

            mulsd XMM3,XMM1
            sub RAX,8
            addsd XMM3,QWORD PTR [RAX+8]
            cmp RAX,RDX
            jne .L_44cd70
.L_44cd82:

            mulsd XMM2,XMM3
            add RSP,56
.L_44cd8a:

            addsd XMM0,XMM2
            ret 
.L_44cd8f:

            mov QWORD PTR [RSP+40],RDI
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+24],XMM2
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RSP],XMM3
            call sqrt@PLT

            mov RDI,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM5,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP]
            jmp .L_44cd34
.L_44cddd:

            nop
            nop
            nop
.L_44cde0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            movapd XMM3,XMM0
            mov EBX,20
            sub RSP,64
.L_44cdfb:

            movsd XMM2,QWORD PTR [RSI+8]
            lea R13,QWORD PTR [RSP+56]
            lea R12,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RIP+.L_44cf58]
            movsd XMM7,QWORD PTR [RIP+.L_44cf58]
            subsd XMM6,XMM2
            movsd QWORD PTR [RSP+24],XMM0
            divsd XMM7,XMM6
            movsd QWORD PTR [RSP+16],XMM7
            jmp .L_44ce3e
.L_44ce30:

            sub EBX,1
            je .L_44cf00

            movsd XMM2,QWORD PTR [RBP+8]
.L_44ce3e:

            movapd XMM0,XMM3
            mov RSI,R12
            mov RDI,R13
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM3
            call sincos@PLT

            movsd XMM1,QWORD PTR [RSP+56]
            mov RDI,RBP
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_44cf58]
            mulsd XMM2,XMM1
            movsd XMM3,QWORD PTR [RSP]
            movapd XMM0,XMM3
            mulsd XMM2,XMM1
            subsd XMM4,XMM2
            movsd XMM2,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+8],XMM4
            call .L_44ccf0

            pxor XMM6,XMM6
            movsd XMM4,QWORD PTR [RSP+8]
            movapd XMM2,XMM0
            movsd XMM3,QWORD PTR [RSP]
            ucomisd XMM6,XMM4
            sqrtsd XMM1,XMM4
            subsd XMM2,QWORD PTR [RSP+24]
            ja .L_44cf19
.L_44ceb8:

            mulsd XMM1,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_44cf78]
            movapd XMM0,XMM1
            mulsd XMM0,XMM2
            mulsd XMM0,QWORD PTR [RSP+16]
            subsd XMM3,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_44cf80]
            ucomisd XMM5,XMM0
            jbe .L_44ce30
.L_44cee8:

            add RSP,64
.L_44ceec:

            movapd XMM0,XMM3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44cf00:

            mov ESI,4294967279
            mov RDI,R14
            movsd QWORD PTR [RSP],XMM3
            call .L_404af0

            movsd XMM3,QWORD PTR [RSP]
            jmp .L_44cee8
.L_44cf19:

            movapd XMM0,XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM1
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM4
            call sqrt@PLT

            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RSP]
            jmp .L_44ceb8
.L_44cf55:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44cf58:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44cf60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_44cf68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_44cf70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_44cf78:
          .byte 0x9b
          .byte 0x2b
          .byte 0xa1
          .byte 0x86
          .byte 0x9b
          .byte 0x84
          .byte 0x6
          .byte 0x3d
.L_44cf80:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44cf90:

            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM6,XMM1
            mov EBX,15
            sub RSP,40
.L_44cfa2:

            mulsd XMM6,QWORD PTR [RIP+.L_44d098]
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+8],XMM6
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM2,QWORD PTR [RIP+.L_44d0a0]
            subsd XMM2,XMM0
            jmp .L_44cfe1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44cfd8:

            sub EBX,1
            je .L_44d070
.L_44cfe1:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP],XMM2
            call sin@PLT

            mulsd XMM0,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RIP+.L_44d0a8]
            subsd XMM1,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_44d0a8]
            divsd XMM1,XMM0
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+8]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_44d0a0]
            movsd XMM2,QWORD PTR [RSP]
            subsd XMM3,XMM0
            movapd XMM0,XMM3
            subsd XMM0,XMM2
            addsd XMM2,XMM0
            andpd XMM0,XMMWORD PTR [RIP+.L_44d0c0]
            ucomisd XMM0,QWORD PTR [RIP+.L_44d0b0]
            ja .L_44cfd8

            add RSP,40
.L_44d062:

            movapd XMM0,XMM2
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d070:

            mov RDI,RBP
            mov ESI,4294967278
            movsd QWORD PTR [RSP],XMM2
            call .L_404af0

            movsd XMM2,QWORD PTR [RSP]
            add RSP,40
            pop RBX
            movapd XMM0,XMM2
            pop RBP
            ret 
.L_44d092:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d098:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_44d0a0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44d0a8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44d0b0:
          .byte 0xbb
          .byte 0xbd
          .byte 0xd7
          .byte 0xd9
          .byte 0xdf
          .byte 0x7c
          .byte 0xdb
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d0c0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d0d0:

            push R15
            push R14
            xor R14D,R14D
            push R13
            push R12
            mov R12D,ESI
            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,35
            sub RSP,8
.L_44d0ec:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_44d150

            mov EBP,1
            jmp .L_44d11f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d110:

            test AL,AL
            je .L_44d168

            mov R14D,R12D
.L_44d117:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_44d13a
.L_44d11f:

            test R12D,R12D
            movzx EAX,BYTE PTR [RBX+8]
            jne .L_44d110

            test AL,AL
            jne .L_44d168

            mov RBX,QWORD PTR [RBX]
            mov R14D,1
            test RBX,RBX
            jne .L_44d11f
.L_44d13a:

            cmp EBP,1
            jle .L_44d150

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,10
            call _IO_putc@PLT
.L_44d150:

            add RSP,8
.L_44d154:

            mov EAX,R14D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d168:

            lea R13,QWORD PTR [RBX+9]
            mov RDI,R13
            call strlen@PLT

            lea EBP,DWORD PTR [RBP+RAX*1+1]
            mov R15,RAX
            mov RSI,QWORD PTR [RIP+stdout]
            cmp EBP,72
            jg .L_44d1c0
.L_44d187:

            mov EDI,32
            call _IO_putc@PLT

            cmp BYTE PTR [RBX+9],43
            je .L_44d1a8

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,43
            call _IO_putc@PLT
.L_44d1a8:

            mov RSI,QWORD PTR [RIP+stdout]
            mov RDI,R13
            call fputs@PLT

            jmp .L_44d117
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44d1c0:

            lea RDI,QWORD PTR [RIP+.L_44d37c]
            mov RCX,RSI
            mov EDX,2
            mov ESI,1
            lea EBP,DWORD PTR [R15+3]
            call fwrite@PLT

            mov RSI,QWORD PTR [RIP+stdout]
            jmp .L_44d187
.L_44d1e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d1f0:

            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,35
            sub RSP,8
.L_44d1fe:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            mov RBX,QWORD PTR [RBP+8]
            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            jne .L_44d22c

            jmp .L_44d260
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d220:

            add RBX,1
            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            je .L_44d260
.L_44d22c:

            mov RSI,QWORD PTR [RIP+stdout]
            call _IO_putc@PLT

            cmp BYTE PTR [RBX],10
            jne .L_44d220

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,35
            add RBX,1
            call _IO_putc@PLT

            movsx EDI,BYTE PTR [RBX]
            test DIL,DIL
            jne .L_44d22c

            nop
            nop
            nop
            nop
            nop
            nop
.L_44d260:

            mov RSI,QWORD PTR [RIP+stdout]
            mov EDI,10
            add RBP,16
            call _IO_putc@PLT

            xor ESI,ESI
            mov RDI,RBP
            call .L_44d0d0

            test EAX,EAX
            jne .L_44d290

            add RSP,8
.L_44d287:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d290:

            mov RCX,QWORD PTR [RIP+stdout]
            lea RDI,QWORD PTR [RIP+.L_44f380-8192]
            mov ESI,1
            mov EDX,38
            call fwrite@PLT

            add RSP,8
            mov RDI,RBP
            mov ESI,1
            pop RBX
            pop RBP
            jmp .L_44d0d0
.L_44d2c0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_44d2c8:

            mov RBX,RDI
            mov EDI,10
            call .L_403c30

            mov BYTE PTR [RAX],0
            mov RBX,QWORD PTR [RBX+16]
            mov RBP,RAX
            test RBX,RBX
            je .L_44d370

            mov R13D,10
            jmp .L_44d312
.L_44d2f0:

            add RAX,RBP
            mov EDX,11040
            mov RSI,R12
            mov WORD PTR [RAX],DX
            mov BYTE PTR [RAX+2],0
            mov RDI,RBP
            call strcat@PLT
.L_44d30a:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_44d370
.L_44d312:

            cmp BYTE PTR [RBX+8],0
            je .L_44d30a

            lea R12,QWORD PTR [RBX+9]
            mov RDI,R12
            call strlen@PLT

            mov RDI,RBP
            mov R14,RAX
            call strlen@PLT

            lea EDX,DWORD PTR [R14+1]
            movsxd RDX,EDX
            lea RCX,QWORD PTR [RAX+RDX*1+5]
            cmp RCX,R13
            jbe .L_44d2f0

            lea R13,QWORD PTR [RDX+R13*2+5]
            mov RDI,R13
            call .L_403c30

            mov RSI,RBP
            mov RDI,RAX
            mov R14,RAX
            call strcpy@PLT

            mov RDI,RBP
            mov RBP,R14
            call .L_403c60

            mov RDI,R14
            call strlen@PLT

            jmp .L_44d2f0
.L_44d370:

            pop RBX
.L_44d371:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_44d37c:

            or AH,BYTE PTR [RBX]
            add BYTE PTR [RAX+757935395],DL
            and BYTE PTR [RSI+111],AH
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x77
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x73
          .byte 0x70
          .byte 0x65
          .byte 0x63
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x20
          .byte 0x4e
          .byte 0x4f
          .byte 0x54
          .byte 0x20
          .byte 0x75
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0xa
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d3b0:

            ucomisd XMM1,QWORD PTR [RIP+.L_44d490]
            jb .L_44d420

            movapd XMM4,XMM1
            sub RSP,40
.L_44d3c2:

            mov EDX,0
            movsd XMM3,QWORD PTR [RIP+.L_44d498]
            mulsd XMM4,XMM0
            movapd XMM6,XMM3
            movapd XMM5,XMM4
            movapd XMM7,XMM4
            mulsd XMM5,XMM4
            addsd XMM7,XMM3
            subsd XMM6,XMM5
            pxor XMM5,XMM5
            ucomisd XMM6,XMM5
            movsd QWORD PTR [RSP],XMM6
            setnp AL
            cmovne EAX,EDX
            test AL,AL
            jne .L_44d410

            ucomisd XMM7,XMM5
            setnp DL
            cmove EAX,EDX
            test AL,AL
            je .L_44d428
.L_44d410:

            movsd XMM0,QWORD PTR [RIP+.L_44d488]
            add RSP,40
.L_44d41c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44d420:

            addsd XMM0,XMM0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44d428:

            subsd XMM3,XMM4
            movsd QWORD PTR [RSP+24],XMM0
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            movapd XMM0,XMM3
            divsd XMM0,XMM7
            call log@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movapd XMM2,XMM0
            movsd XMM6,QWORD PTR [RSP]
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44d4a0]
            divsd XMM0,XMM6
            divsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM1,XMM2
            subsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RSP+16]
            add RSP,40

            ret 
.L_44d483:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d488:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44d490:
          .byte 0x48
          .byte 0xaf
          .byte 0xbc
          .byte 0x9a
          .byte 0xf2
          .byte 0xd7
          .byte 0x7a
          .byte 0x3e
.L_44d498:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44d4a0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 316087
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d4b0:

            mulsd XMM1,XMM2
            movsd XMM3,QWORD PTR [RIP+.L_44d570]
            movapd XMM5,XMM1
            addsd XMM5,XMM3
            ucomisd XMM5,QWORD PTR [RIP+.L_44d578]
            jp .L_44d4e0

            movsd XMM4,QWORD PTR [RIP+.L_44d568]
            jne .L_44d4e0

            movapd XMM0,XMM4
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44d4e0:

            sub RSP,56
.L_44d4e4:

            movsd QWORD PTR [RSP+8],XMM2
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_44d580]
            movsd QWORD PTR [RSP+40],XMM3
            subsd XMM0,XMM2
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_44d588]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            subsd XMM3,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_44d588]
            movsd QWORD PTR [RSP+16],XMM0
            mulsd XMM1,QWORD PTR [RSP+8]
            divsd XMM3,XMM5
            movapd XMM0,XMM3
            call pow@PLT

            movsd XMM4,QWORD PTR [RSP+16]
            add RSP,56
.L_44d55a:

            divsd XMM4,XMM0
            movapd XMM0,XMM4
            ret 
.L_44d563:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d568:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44d570:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44d578:
          .zero 8
.L_44d580:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44d588:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 316319
.L_44d590:

            movsxd RAX,ESI
            movapd XMM5,XMM0
            shl RAX,4
            add RDI,RAX
            test ESI,ESI
            movsd XMM4,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            jle .L_44d620

            lea EAX,DWORD PTR [RSI-1]
            not RAX
            shl RAX,4
            add RAX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d5c0:

            movapd XMM3,XMM5
            movapd XMM0,XMM1
            sub RDI,16
            mulsd XMM3,XMM4
            cmp RDI,RAX
            mulsd XMM0,XMM2
            mulsd XMM2,XMM5
            mulsd XMM4,XMM1
            addsd XMM3,QWORD PTR [RDI]
            addsd XMM2,QWORD PTR [RDI+8]
            subsd XMM3,XMM0
            addsd XMM2,XMM4
            movapd XMM4,XMM3
            jne .L_44d5c0
.L_44d5f6:

            movapd XMM0,XMM5
            movapd XMM4,XMM1
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            mulsd XMM4,XMM2
            mulsd XMM2,XMM5
            subsd XMM0,XMM4
            addsd XMM1,XMM2
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d620:

            movapd XMM3,XMM4
            jmp .L_44d5f6
.L_44d626:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d630:

            movsxd RAX,ESI
            shl RAX,4
            add RDI,RAX
            test ESI,ESI
            movsd XMM6,QWORD PTR [RDI]
            movsd XMM2,QWORD PTR [RDI+8]
            jle .L_44d700

            lea EAX,DWORD PTR [RSI-1]
            movapd XMM3,XMM2
            movapd XMM7,XMM6
            not RAX
            shl RAX,4
            add RAX,RDI
.L_44d660:

            movapd XMM4,XMM6
            movapd XMM5,XMM1
            sub RDI,16
            mulsd XMM6,XMM1
            mulsd XMM4,XMM0
            cmp RDI,RAX
            mulsd XMM5,XMM2
            mulsd XMM2,XMM0
            addsd XMM4,QWORD PTR [RDI]
            addsd XMM2,QWORD PTR [RDI+8]
            subsd XMM4,XMM5
            movapd XMM5,XMM7
            mulsd XMM7,XMM1
            mulsd XMM5,XMM0
            addsd XMM2,XMM6
            movapd XMM6,XMM3
            mulsd XMM3,XMM0
            mulsd XMM6,XMM1
            addsd XMM5,XMM4
            addsd XMM3,XMM2
            subsd XMM5,XMM6
            movapd XMM6,XMM4
            addsd XMM3,XMM7
            movapd XMM7,XMM5
            jne .L_44d660

            movapd XMM7,XMM4
            movapd XMM8,XMM2
            mulsd XMM2,XMM0
            mulsd XMM7,XMM0
            mulsd XMM8,XMM1
            mulsd XMM1,XMM6
            movapd XMM4,XMM2
.L_44d6e0:

            movapd XMM0,XMM7
            movsd QWORD PTR [RDX],XMM5
            addsd XMM1,XMM4
            movsd QWORD PTR [RDX+8],XMM3
            subsd XMM0,XMM8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d700:

            movapd XMM7,XMM0
            mulsd XMM0,XMM2
            movapd XMM8,XMM1
            mulsd XMM1,XMM6
            mulsd XMM7,XMM6
            mulsd XMM8,XMM2
            addsd XMM2,XMM0
            movapd XMM4,XMM0
            addsd XMM6,XMM7
            movapd XMM3,XMM2
            movapd XMM5,XMM6
            addsd XMM3,XMM1
            subsd XMM5,XMM8
            jmp .L_44d6e0
.L_44d739:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d740:

            cmp EDI,8
            ja .L_44d7a0

            movsd XMM0,QWORD PTR [RIP+.L_44dbb0]
            test EDI,EDI
            push RBX
.L_44d750:

            movsd QWORD PTR [RIP+.L_65fcc8],XMM0
            je .L_44d7a8

            movsd XMM1,QWORD PTR [RIP+.L_44dbc8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_44d768:

            add EAX,1
            mulsd XMM0,XMM1
            cmp EDI,EAX
            jne .L_44d768

            movsd XMM1,QWORD PTR [RIP+.L_44dbc0]
            movsd QWORD PTR [RIP+.L_65fcc8],XMM0
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_44dbd0]
            divsd XMM0,QWORD PTR [RIP+.L_44dbd8]
            jmp .L_44d7b8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d7a0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d7a8:

            movsd XMM0,QWORD PTR [RIP+.L_44dbb8]
            movsd XMM1,QWORD PTR [RIP+.L_44dbc0]
.L_44d7b8:

            test ESI,ESI
            mov EBX,ESI
            movsd QWORD PTR [RIP+.L_65fcc0],XMM1
            movsd QWORD PTR [RIP+.L_65fcb8],XMM0
            jne .L_44d800

            mov R8D,EDI
            lea RCX,QWORD PTR [RIP+.L_44db72]
            lea RDI,QWORD PTR [RIP+.L_65fc80]
            mov EDX,50
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov DWORD PTR [RIP+.L_65fea0],EBX
            pop RBX
.L_44d7f7:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44d800:

            xor EAX,EAX
            test EDI,EDI
            mov R9D,EDI
            setne AL
            lea RCX,QWORD PTR [RIP+.L_44db85]
            mov EDX,50
            lea R8D,DWORD PTR [RDI+RAX*1+2]
            lea RDI,QWORD PTR [RIP+.L_65fc80]
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            mov DWORD PTR [RIP+.L_65fea0],EBX
            pop RBX
            ret 
.L_44d836:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d840:

            pxor XMM5,XMM5
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,24
.L_44d856:

            ucomisd XMM5,XMM0
            ja .L_44dad0
.L_44d860:

            mulsd XMM0,QWORD PTR [RIP+.L_65fcb8]
            movsd XMM3,QWORD PTR [RIP+.L_44dc00]
            movsd XMM6,QWORD PTR [RIP+.L_44dbe8]
            addsd XMM0,QWORD PTR [RIP+.L_44dbe0]
            movapd XMM1,XMM0
            movapd XMM2,XMM0
            andpd XMM1,XMM3
            ucomisd XMM6,XMM1
            jbe .L_44d8c9

            cvttsd2si RAX,XMM0
            pxor XMM1,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_44dbb0]
            andnpd XMM3,XMM0
            cvtsi2sd XMM1,RAX
            movapd XMM7,XMM1
            cmpnlesd XMM7,XMM0
            movapd XMM2,XMM7
            andpd XMM2,XMM4
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM3
.L_44d8c9:

            movapd XMM0,XMM2
            movsd XMM1,QWORD PTR [RIP+.L_44dbc0]
            movsd QWORD PTR [RSP],XMM2
            divsd XMM0,QWORD PTR [RIP+.L_65fcc8]
            call fmod@PLT

            movsd XMM2,QWORD PTR [RSP]
            movapd XMM3,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_44dc00]
            divsd XMM2,QWORD PTR [RIP+.L_65fcc0]
            movsd XMM6,QWORD PTR [RIP+.L_44dbe8]
            movapd XMM0,XMM2
            movapd XMM4,XMM2
            andpd XMM0,XMM1
            ucomisd XMM6,XMM0
            jbe .L_44d951

            cvttsd2si RAX,XMM2
            pxor XMM0,XMM0
            movsd XMM5,QWORD PTR [RIP+.L_44dbb0]
            andnpd XMM1,XMM4
            cvtsi2sd XMM0,RAX
            movapd XMM7,XMM0
            cmpnlesd XMM7,XMM2
            movapd XMM2,XMM7
            andpd XMM2,XMM5
            subsd XMM0,XMM2
            movapd XMM2,XMM0
            orpd XMM2,XMM1
.L_44d951:

            movsd XMM1,QWORD PTR [RIP+.L_44dbc0]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM2
            call fmod@PLT

            movsd XMM2,QWORD PTR [RSP]
            cvttsd2si R9D,XMM0
            divsd XMM2,QWORD PTR [RIP+.L_44dbc0]
            movsd XMM0,QWORD PTR [RIP+.L_44dc00]
            movsd XMM7,QWORD PTR [RIP+.L_44dbe8]
            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM1,XMM2
            movapd XMM4,XMM2
            andpd XMM1,XMM0
            ucomisd XMM7,XMM1
            jbe .L_44d9de

            cvttsd2si RAX,XMM2
            pxor XMM1,XMM1
            andnpd XMM0,XMM4
            cvtsi2sd XMM1,RAX
            movapd XMM5,XMM1
            cmpnlesd XMM5,XMM2
            movapd XMM2,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_44dbb0]
            andpd XMM2,XMM5
            subsd XMM1,XMM2
            movapd XMM2,XMM1
            orpd XMM2,XMM0
.L_44d9de:

            mov R10D,DWORD PTR [RIP+.L_65fea0]
            cvttsd2si R8D,XMM2
            test R10D,R10D
            jne .L_44daf0

            pxor XMM6,XMM6
            ucomisd XMM3,XMM6
            jp .L_44da03

            je .L_44da90
.L_44da03:

            xor R13D,R13D
            test EBP,EBP
            lea RCX,QWORD PTR [RIP+.L_65fc80]
            setne R13B
            sub RSP,8
.L_44da17:

            mov ESI,1
            push RBP
            movapd XMM0,XMM3
            mov RDI,R12
            mov RDX,-1
            mov EAX,1
            call __sprintf_chk@PLT

            add R13,2
            mov RDI,R12
            call strlen@PLT

            sub RAX,R13
            add R12,RAX
            movzx EAX,BYTE PTR [R12]
            mov RDI,R12
            pop RCX
            pop RSI
            cmp AL,48
            jne .L_44da63

            nop
            nop
            nop
.L_44da58:

            sub RDI,1
            movzx EAX,BYTE PTR [RDI]
            cmp AL,48
            je .L_44da58
.L_44da63:

            cmp AL,46
            lea RSI,QWORD PTR [R12+1]
            setne AL
            movzx EAX,AL
            add RDI,RAX
            cmp RDI,RSI
            je .L_44da80

            mov RDX,R13
            call memmove@PLT
.L_44da80:

            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_44da90:

            test R9D,R9D
            jne .L_44db40

            lea RCX,QWORD PTR [RIP+.L_44dba6]
            mov R9D,EBP
            mov RDI,R12
            mov RDX,-1
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            add RSP,24
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44dad0:

            test ESI,ESI
            xorpd XMM0,XMMWORD PTR [RIP+.L_44dbf0]
            jne .L_44db30

            lea R12,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],45
            jmp .L_44d860
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44daf0:

            sub RSP,8
            movapd XMM0,XMM3
            push RBP
            lea RCX,QWORD PTR [RIP+.L_65fc80]
            mov RDI,R12
            mov RDX,-1
            mov ESI,1
            mov EAX,1
            call __sprintf_chk@PLT

            pop RDI
            pop R8
            mov RAX,RBX
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44db30:

            mov EBP,EDX
            jmp .L_44d860
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44db40:

            sub RSP,8
            lea RCX,QWORD PTR [RIP+.L_44db9d]
            mov RDX,-1
            push RBP
            mov RDI,R12
            mov ESI,1
            xor EAX,EAX
            call __sprintf_chk@PLT

            pop RAX
            pop RDX
            mov RAX,RBX
.L_44db67:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44db72:
          .string "%%dd%%d\'%%.%df\"%%c"
.L_44db85:
          .string "%%dd%%02d\'%%0%d.%df\"%%c"
.L_44db9d:
          .string "%dd%d\'%c"
.L_44dba6:
          .string "%dd%c"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44dbb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44dbb8:

            jnp .L_44db67
          .byte 0x31
          .byte 0x73
          .byte 0xc6
          .byte 0x2d
          .byte 0x9
          .byte 0x41
.L_44dbc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x40
.L_44dbc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x40
.L_44dbd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0xc6
          .byte 0x23
          .byte 0x41
.L_44dbd8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
.L_44dbe0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_44dbe8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x43
.L_44dbf0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44dc00:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44dc10:

            lea RAX,QWORD PTR [RIP+.L_44dc20]
            ret 
.L_44dc18:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44dc20:

            push RDX
            insb BYTE PTR [RDI],DX
            and BYTE PTR CS:[RSI+RBP*1],DH
          .byte 0x39
          .byte 0x2e
          .byte 0x33
          .byte 0x2c
          .byte 0x20
          .byte 0x31
          .byte 0x35
          .byte 0x20
          .byte 0x41
          .byte 0x75
          .byte 0x67
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x31
          .byte 0x36
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44dc40:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EDI,32
            mov RBP,RSI
            sub RSP,96
.L_44dc53:

            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP+16],XMM1
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_44ddeb

            lea RDI,QWORD PTR [RSP+88]
            lea RSI,QWORD PTR [RSP+80]
            movsd XMM0,QWORD PTR [RSP+16]
            call sincos@PLT

            movsd XMM7,QWORD PTR [RSP+8]
            movsd XMM4,QWORD PTR [RIP+.L_44e0d8]
            movapd XMM1,XMM7
            pxor XMM6,XMM6
            movapd XMM5,XMM4
            mulsd XMM1,XMM7
            movsd XMM3,QWORD PTR [RSP+80]
            movsd XMM2,QWORD PTR [RSP+88]
            mulsd XMM3,XMM3
            movsd QWORD PTR [RBX+16],XMM7
            subsd XMM5,XMM1
            ucomisd XMM6,XMM5
            sqrtsd XMM7,XMM5
            ja .L_44de0c
.L_44dcca:

            movapd XMM0,XMM1
            mulsd XMM1,XMM3
            movapd XMM8,XMM4
            mulsd XMM0,XMM2
            mulsd XMM1,XMM3
            mulsd XMM0,XMM2
            divsd XMM1,XMM5
            subsd XMM8,XMM0
            divsd XMM7,XMM8
            addsd XMM1,XMM4
            ucomisd XMM6,XMM1
            sqrtsd XMM3,XMM1
            movsd QWORD PTR [RBP],XMM7
            ja .L_44de6e
.L_44dd08:

            ucomisd XMM3,XMM6
            movsd QWORD PTR [RBX],XMM3
            jp .L_44dd18

            je .L_44de00
.L_44dd18:

            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM2
            divsd XMM0,XMM3
            call asin@PLT

            movsd XMM1,QWORD PTR [RBX]
            movsd XMM5,QWORD PTR [RIP+.L_44e0e0]
            movapd XMM3,XMM1
            movsd QWORD PTR [R12],XMM0
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+32],XMM1
            mulsd XMM3,XMM5
            addsd XMM0,QWORD PTR [RIP+.L_44e0e8]
            mulsd XMM3,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM5
            movsd QWORD PTR [RBX+24],XMM3
            call tan@PLT

            movsd XMM5,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+16]
            mulsd XMM0,XMM5
            addsd XMM0,QWORD PTR [RIP+.L_44e0e8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+32]
            call pow@PLT

            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            mulsd XMM2,QWORD PTR [RBX+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM6,XMM4
            movsd XMM1,QWORD PTR [RBX+24]
            subsd XMM6,XMM2
            addsd XMM2,XMM4
            movapd XMM0,XMM6
            divsd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RSP+24]
            divsd XMM3,XMM0
            movsd QWORD PTR [RBX+8],XMM3
.L_44ddeb:

            add RSP,96
.L_44ddef:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44de00:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_44ddeb
.L_44de0c:

            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+72],XMM6
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM7
            movsd QWORD PTR [RSP+24],XMM5
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+24]
            jmp .L_44dcca
.L_44de6e:

            movapd XMM0,XMM1
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM2
            movsd QWORD PTR [RSP+24],XMM3
            call sqrt@PLT

            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            jmp .L_44dd08
.L_44deac:

            nop
            nop
            nop
            nop
.L_44deb0:

            push RBX
            movapd XMM3,XMM1
            mov RBX,RSI
            sub RSP,32

            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            movsd XMM1,QWORD PTR [RSI+8]
            mulsd XMM0,QWORD PTR [RIP+.L_44e0e0]
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP],XMM1
            addsd XMM0,QWORD PTR [RIP+.L_44e0e8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RBX]
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+8],XMM0
            movapd XMM0,XMM3
            call sin@PLT

            movsd XMM4,QWORD PTR [RBX+16]
            movsd XMM3,QWORD PTR [RIP+.L_44e0d8]
            mulsd XMM4,XMM0
            movapd XMM5,XMM3
            movapd XMM1,XMM4
            subsd XMM5,XMM4
            addsd XMM1,XMM3
            movapd XMM0,XMM5
            divsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX+24]
            call pow@PLT

            movsd XMM1,QWORD PTR [RSP]
            mulsd XMM1,QWORD PTR [RSP+8]
            mulsd XMM0,XMM1
            call atan@PLT

            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM1,XMM0
            mulsd XMM2,QWORD PTR [RBX]
            addsd XMM1,XMM1
            subsd XMM1,QWORD PTR [RIP+.L_44e0f0]
            add RSP,32

            movapd XMM0,XMM2
            pop RBX
            ret 
.L_44df74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44df80:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            movapd XMM3,XMM1
            mov RBP,RSI
            mov EBX,20
            sub RSP,32
.L_44df97:

            movsd XMM1,QWORD PTR [RSI]
            movsd QWORD PTR [RSP],XMM3
            divsd XMM0,XMM1
            movsd QWORD PTR [RSP+8],XMM1
            movsd QWORD PTR [RSP+24],XMM0
            movapd XMM0,XMM3
            mulsd XMM0,QWORD PTR [RIP+.L_44e0e0]
            addsd XMM0,QWORD PTR [RIP+.L_44e0e8]
            call tan@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM6,QWORD PTR [RIP+.L_44e0d8]
            divsd XMM0,QWORD PTR [RBP+8]
            divsd XMM6,XMM1
            movapd XMM1,XMM6
            call pow@PLT

            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_44e00d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e000:

            sub EBX,1
            movapd XMM3,XMM1
            je .L_44e0b0
.L_44e00d:

            movsd XMM1,QWORD PTR [RBP+16]
            movapd XMM0,XMM3
            movsd QWORD PTR [RSP],XMM3
            movsd QWORD PTR [RSP+8],XMM1
            call sin@PLT

            movsd XMM1,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RIP+.L_44e0d8]
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_44e0f8]
            subsd XMM2,XMM0
            addsd XMM0,QWORD PTR [RIP+.L_44e0d8]
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            call pow@PLT

            mulsd XMM0,QWORD PTR [RSP+16]
            call atan@PLT

            addsd XMM0,XMM0
            movsd XMM3,QWORD PTR [RSP]
            movsd XMM5,QWORD PTR [RIP+.L_44e100]
            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_44e0f0]
            movapd XMM0,XMM1
            subsd XMM0,XMM3
            andpd XMM0,XMMWORD PTR [RIP+.L_44e110]
            ucomisd XMM5,XMM0
            jbe .L_44e000

            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,32
.L_44e0a5:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44e0b0:

            mov RDI,R12
            mov ESI,4294967279
            movsd QWORD PTR [RSP],XMM1
            call .L_404af0

            movsd XMM1,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+24]
            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
.L_44e0d6:
          .byte 0x66
          .byte 0x90
.L_44e0d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_44e0e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_44e0e8:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xe9
          .byte 0x3f
.L_44e0f0:
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
.L_44e0f8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xbf
.L_44e100:
          .byte 0x9b
          .byte 0x2b
          .byte 0xa1
          .byte 0x86
          .byte 0x9b
          .byte 0x84
          .byte 0x6
          .byte 0x3d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e110:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e120:

            push R12
            push RBP
            mov RDI,RSI
            push RBX
            mov RBX,RSI
            call strlen@PLT

            cmp RAX,10
            jne .L_44e13b

            cmp BYTE PTR [RBX+4],45
            je .L_44e150
.L_44e13b:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_415c60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e150:

            cmp BYTE PTR [RBX+7],45
            jne .L_44e13b

            mov RDI,RBX
            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            lea RDI,QWORD PTR [RBX+5]
            mov EDX,10
            xor ESI,ESI
            mov R12,RAX
            call strtol@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            mov EDX,10
            xor ESI,ESI
            call strtol@PLT

            lea EDX,DWORD PTR [RBP-1]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            mov ECX,EDX
            shl ECX,5
            sub ECX,EDX
            cvtsi2sd XMM1,R12D
            lea EAX,DWORD PTR [RCX+RAX*1-1]
            pop RBX
.L_44e1a7:

            cvtsi2sd XMM0,EAX
            pop RBP
            pop R12
            divsd XMM0,QWORD PTR [RIP+.L_44e550]
            addsd XMM0,XMM1
            ret 
.L_44e1bb:

            nop
            nop
            nop
            nop
            nop
.L_44e1c0:

            push R15
            push R14
            lea RDX,QWORD PTR [RIP+.L_44e532]
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,904
.L_44e1de:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+888],RAX
            xor EAX,EAX
            call .L_4042f0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_44e4d6

            lea RSI,QWORD PTR [RSP+272]
            mov RCX,RAX
            mov EDX,301
            mov RDI,R13
            call .L_407290

            mov ESI,64
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_44e343

            mov RDI,RBX
            lea R14,QWORD PTR [RSP+576]
            call strdup@PLT

            mov EDI,720
            mov QWORD PTR [R12],RAX
            call malloc@PLT

            mov DWORD PTR [RSP+20],10
            mov QWORD PTR [R12+48],RAX
.L_44e262:

            mov EDX,DWORD PTR [R12+40]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e270:

            movsxd RDX,EDX
            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RDX+RDX*8]
            lea RBP,QWORD PTR [RAX+RDX*8]
            movups XMMWORD PTR [RBP],XMM0
            mov QWORD PTR [RBP+64],0
            movups XMMWORD PTR [RBP+16],XMM0
            movups XMMWORD PTR [RBP+32],XMM0
            movups XMMWORD PTR [RBP+48],XMM0
.L_44e297:

            mov EDX,301
            mov RSI,R14
            mov RDI,R13
            mov RCX,QWORD PTR [RSP+8]
            call .L_407290

            test RAX,RAX
            je .L_44e343

            call __ctype_b_loc@PLT

            mov RDI,R14
            mov RCX,QWORD PTR [RAX]
            jmp .L_44e2cc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44e2c8:

            add RDI,1
.L_44e2cc:

            movsx RDX,BYTE PTR [RDI]
            test BYTE PTR [RCX+RDX*2+1],32
            mov RAX,RDX
            jne .L_44e2c8

            cmp DL,35
            je .L_44e297

            test DL,DL
            je .L_44e297

            xor R15D,R15D
            test AL,AL
            mov EBX,R15D
            je .L_44e334

            nop
            nop
            nop
.L_44e2f0:

            cmp AL,44
            mov RBX,RDI
            jne .L_44e304

            jmp .L_44e380
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44e300:

            cmp AL,44
            je .L_44e30f
.L_44e304:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_44e300
.L_44e30f:

            cmp AL,44
            je .L_44e380
.L_44e313:

            call strdup@PLT

            mov QWORD PTR [RSP+R15*8+32],RAX
            add R15,1
            cmp R15,30
            je .L_44e390

            movzx EAX,BYTE PTR [RBX]
            mov RDI,RBX
            mov EBX,R15D
            test AL,AL
            jne .L_44e2f0
.L_44e334:

            cmp R15D,4
            jg .L_44e395

            test R15D,R15D
            jne .L_44e4b0
.L_44e343:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_407280
.L_44e350:

            mov RSI,QWORD PTR [RSP+888]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_44e52d

            add RSP,904
.L_44e371:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44e380:

            mov BYTE PTR [RBX],0
            add RBX,1
            jmp .L_44e313
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e390:

            mov EBX,30
.L_44e395:

            mov RCX,QWORD PTR [RSP+32]
            xor R15D,R15D
            mov RDI,RCX
            mov QWORD PTR [RSP+24],RCX
            call strdup@PLT

            mov RSI,QWORD PTR [RSP+40]
            mov QWORD PTR [RBP+48],RAX
            xor EDX,EDX
            mov RDI,R13
            call .L_449f20

            mov RSI,QWORD PTR [RSP+48]
            movsd QWORD PTR [RBP],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_449f20

            mov RSI,QWORD PTR [RSP+56]
            movsd QWORD PTR [RBP+8],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_449f20

            mov RSI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RBP+16],XMM0
            xor EDX,EDX
            mov RDI,R13
            call .L_449f20

            cmp EBX,5
            movsd QWORD PTR [RBP+24],XMM0
            mov RCX,QWORD PTR [RSP+24]
            jne .L_44e472
.L_44e408:

            xor EBP,EBP
            jmp .L_44e415
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44e410:

            mov RCX,QWORD PTR [RSP+RBP*8+32]
.L_44e415:

            mov RDI,RCX
            add RBP,1
            call free@PLT

            cmp EBX,EBP
            jg .L_44e410

            test R15D,R15D
            jne .L_44e343

            mov EAX,DWORD PTR [R12+40]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,DWORD PTR [RSP+20]
            mov RAX,QWORD PTR [R12+48]
            mov DWORD PTR [R12+40],EDX
            jne .L_44e270

            shl DWORD PTR [RSP+20],1
            mov RDI,RAX
            movsxd RDX,DWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RDX+RDX*8]
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            je .L_44e4de

            mov QWORD PTR [R12+48],RAX
            jmp .L_44e262
.L_44e472:

            mov RDI,QWORD PTR [RSP+72]
            xor ESI,ESI
            mov EDX,10
            call strtol@PLT

            cmp EBX,6
            mov DWORD PTR [RBP+32],EAX
            mov RCX,QWORD PTR [RSP+24]
            je .L_44e408

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,R13
            call .L_44e120

            mov RCX,QWORD PTR [RSP+24]
            movsd QWORD PTR [RBP+40],XMM0
            jmp .L_44e408
.L_44e4b0:

            lea RDX,QWORD PTR [RIP+.L_44e534]
            mov ESI,1
            mov RDI,R13
            xor EAX,EAX
            mov R15D,1
            call .L_404c10

            mov RCX,QWORD PTR [RSP+32]
            jmp .L_44e408
.L_44e4d6:

            xor R12D,R12D
            jmp .L_44e350
.L_44e4de:

            mov EAX,DWORD PTR [R12+40]
            test EAX,EAX
            jle .L_44e507

            xor EBX,EBX
.L_44e4e9:

            mov RAX,QWORD PTR [R12+48]
            add R15D,1
            mov RDI,QWORD PTR [RAX+RBX*1+48]
            add RBX,72
            call free@PLT

            cmp DWORD PTR [R12+40],R15D
            jg .L_44e4e9
.L_44e507:

            mov RDI,QWORD PTR [R12]
            call free@PLT

            mov RDI,R12
            xor R12D,R12D
            call free@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_407280

            jmp .L_44e350
.L_44e52d:

            call __stack_chk_fail@PLT
.L_44e532:

            jb .L_44e534
.L_44e534:

            push RBX
            push 544502383
            insb BYTE PTR [RDI],DX
            imul EBP,DWORD PTR [RSI+101],544106784
          .byte 0x67
          .byte 0x72
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x6c
          .byte 0x6f
          .byte 0x67
          .byte 0x2e
          .byte 0x0
.L_44e550:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+119],AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e560:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            xor ECX,ECX
            mov EDX,128
            mov RSI,R13
            sub RSP,8
.L_44e57a:

            mov R12,RDI
            call .L_407250

            mov EBX,DWORD PTR [RBP+112]
            imul EBX,DWORD PTR [RBP+116]
            movsxd RBX,EBX
            lea RDI,QWORD PTR [RBX*8]
            call .L_403c30

            test RAX,RAX
            mov QWORD PTR [RBP+120],RAX
            je .L_44e5c6

            mov EDX,8
            mov R8,R13
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_407230

            cmp RAX,RBX
            mov EDX,1
            je .L_44e5fb

            mov RAX,QWORD PTR [RBP+120]
.L_44e5c6:

            mov RDI,RAX
            call .L_403c60

            lea RDX,QWORD PTR [RIP+.L_44ea68]
            mov ESI,1
            mov RDI,R12
            xor EAX,EAX
            mov QWORD PTR [RBP+120],0
            call .L_404c10

            mov ESI,4294967258
            mov RDI,R12
            call .L_404af0

            xor EDX,EDX
.L_44e5fb:

            add RSP,8
.L_44e5ff:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44e608:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e610:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_44e617:

            mov EDI,128
            mov R12,RSI
            call .L_403c30

            test RAX,RAX
            mov RBX,RAX
            je .L_44e6e0

            mov R8,R12
            mov ECX,1
            mov EDX,128
            mov RSI,RAX
            mov RDI,RBP
            call .L_407230

            cmp RAX,1
            jne .L_44e6e0

            mov EAX,DWORD PTR [RBX+112]
            sub EAX,1
            cmp EAX,99999
            ja .L_44e6e0

            mov EAX,DWORD PTR [RBX+116]
            sub EAX,1
            cmp EAX,99999
            ja .L_44e6e0

            mov RDI,RBX
            call strlen@PLT

            lea ECX,DWORD PTR [RAX-1]
            mov ESI,EAX
            test ECX,ECX
            jle .L_44e6c6

            movsxd RCX,ECX
            movzx EDX,BYTE PTR [RBX+RCX*1]
            cmp DL,10
            je .L_44e692

            cmp DL,32
            jne .L_44e6c6
.L_44e692:

            lea RDX,QWORD PTR [RBX+RCX*1]
            sub EAX,2
            sub ESI,2
            movsxd RSI,ESI
            mov RDI,RDX
            sub RDI,RAX
            nop
            nop
            nop
.L_44e6a8:

            cmp RDX,RDI
            mov BYTE PTR [RDX],0
            je .L_44e6c6

            mov RAX,RDX
            sub RDX,1
            sub RAX,RCX
            movzx EAX,BYTE PTR [RAX+RSI*1]
            cmp AL,10
            je .L_44e6a8

            cmp AL,32
            je .L_44e6a8
.L_44e6c6:

            mov QWORD PTR [RBX+120],0
            mov RAX,RBX
            pop RBX
.L_44e6d2:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e6e0:

            mov RDI,RBP
            mov ESI,4294967258
            call .L_404af0

            mov RDI,RBX
            xor EBX,EBX
            call .L_403c60

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_44e6ff:

            nop
.L_44e700:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            xor ECX,ECX
            mov EDX,160
            mov RSI,R13
            sub RSP,8
.L_44e71a:

            mov R12,RDI
            call .L_407250

            mov EBX,DWORD PTR [RBP+112]
            imul EBX,DWORD PTR [RBP+116]
            movsxd RBX,EBX
            lea RDI,QWORD PTR [RBX*8]
            call .L_403c30

            test RAX,RAX
            mov QWORD PTR [RBP+120],RAX
            je .L_44e766

            mov EDX,8
            mov R8,R13
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_407230

            cmp RAX,RBX
            mov EDX,1
            je .L_44e7b3

            mov RAX,QWORD PTR [RBP+120]
.L_44e766:

            mov RDI,RAX
            call .L_403c60

            lea RDI,QWORD PTR [RIP+.L_44eae2]
            mov QWORD PTR [RBP+120],0
            call getenv@PLT

            test RAX,RAX
            je .L_44e7a4

            mov RCX,QWORD PTR [RIP+stderr]
            lea RDI,QWORD PTR [RIP+.L_44eaa8]
            mov EDX,57
            mov ESI,1
            call fwrite@PLT
.L_44e7a4:

            mov ESI,4294967258
            mov RDI,R12
            call .L_404af0

            xor EDX,EDX
.L_44e7b3:

            add RSP,8
.L_44e7b7:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44e7c0:

            push R12
            push RBP
            mov R8,RSI
            push RBX
            mov ECX,1
            mov EDX,160
            mov R12,RDI
            sub RSP,176
.L_44e7db:

            mov RBP,RSP
            mov RSI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            call .L_407230

            cmp RAX,1
            jne .L_44e956

            lea RDI,QWORD PTR [RIP+.L_44eaed]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_44e940

            mov EDI,128
            call .L_403c30

            test RAX,RAX
            mov RBX,RAX
            je .L_44e956

            movdqa XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RAX],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+48]
            movups XMMWORD PTR [RAX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+64]
            movups XMMWORD PTR [RAX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+80]
            movups XMMWORD PTR [RAX+64],XMM0
            mov RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RBX+80],RAX
            mov RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [RBX+88],RAX
            mov RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RBX+96],RAX
            mov RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RBX+104],RAX
            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [RBX+112],EAX
            mov EDX,DWORD PTR [RSP+132]
            sub EAX,1
            cmp EAX,99999
            mov DWORD PTR [RBX+116],EDX
            ja .L_44e956

            sub EDX,1
            cmp EDX,99999
            ja .L_44e956

            mov RDI,RBX
            call strlen@PLT

            lea ECX,DWORD PTR [RAX-1]
            mov ESI,EAX
            test ECX,ECX
            jle .L_44e90e

            movsxd RCX,ECX
            movzx EDX,BYTE PTR [RBX+RCX*1]
            cmp DL,32
            je .L_44e8da

            cmp DL,10
            jne .L_44e90e
.L_44e8da:

            lea RDX,QWORD PTR [RBX+RCX*1]
            sub EAX,2
            sub ESI,2
            movsxd RSI,ESI
            mov RDI,RDX
            sub RDI,RAX
            nop
            nop
            nop
.L_44e8f0:

            cmp RDI,RDX
            mov BYTE PTR [RDX],0
            je .L_44e90e

            mov RAX,RDX
            sub RDX,1
            sub RAX,RCX
            movzx EAX,BYTE PTR [RAX+RSI*1]
            cmp AL,10
            je .L_44e8f0

            cmp AL,32
            je .L_44e8f0
.L_44e90e:

            mov QWORD PTR [RBX+120],0
.L_44e916:

            mov RCX,QWORD PTR [RSP+168]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_44e967

            add RSP,176
.L_44e933:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e940:

            lea RDX,QWORD PTR [RIP+.L_44eaf7]
            mov ESI,1
            mov RDI,R12
            xor EAX,EAX
            call .L_404c10
.L_44e956:

            mov ESI,4294967258
            mov RDI,R12
            xor EBX,EBX
            call .L_404af0

            jmp .L_44e916
.L_44e967:

            call __stack_chk_fail@PLT
.L_44e96c:

            nop
            nop
            nop
            nop
.L_44e970:

            test RDI,RDI
            je .L_44e990

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+120]
            test RDI,RDI
            je .L_44e987

            call .L_403c60
.L_44e987:

            mov RDI,RBX
            pop RBX
            jmp .L_403c60
.L_44e990:

            ret 
.L_44e992:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e9a0:

            push R12
            push RBP
            mov EDX,1025
            push RBX
            mov RBX,RDI
            sub RSP,1040
.L_44e9b3:

            mov DWORD PTR [RDI],0
            mov RCX,RSP
            mov RDI,RCX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1032],RAX
            xor EAX,EAX
            call __strcpy_chk@PLT

            lea RDX,QWORD PTR [RIP+.L_44eb0f]
            mov RSI,RAX
            mov RDI,RBX
            call .L_4042f0

            test RAX,RAX
            je .L_44ea58

            mov RSI,RAX
            mov RDI,RBX
            mov RBP,RAX
            call .L_44e610

            test RAX,RAX
            mov R12,RAX
            je .L_44ea16

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,RBX
            call .L_44e560

            test EAX,EAX
            je .L_44ea48
.L_44ea16:

            mov RSI,RBP
            mov RDI,RBX
            call .L_407280
.L_44ea21:

            mov RDX,QWORD PTR [RSP+1032]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_44ea5d

            add RSP,1040
.L_44ea3e:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ea48:

            mov RDI,R12
            xor R12D,R12D
            call .L_44e970

            jmp .L_44ea16
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ea58:

            xor R12D,R12D
            jmp .L_44ea21
.L_44ea5d:

            call __stack_chk_fail@PLT
.L_44ea62:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ea68:
          .string "ctable loading failed on fread() - binary incompatible?\n"
          .zero 7
.L_44eaa8:
          .string "ctable2 loading failed on fread() - binary incompatible?\n"
.L_44eae2:
          .string "PROJ_DEBUG"
.L_44eaed:
          .string "CTABLE V2"
.L_44eaf7:
          .string "ctable2 - wrong header!"
.L_44eb0f:

            jb .L_44eb73

            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44eb20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_44eb2e:

            test RSI,RSI
            mov QWORD PTR [RSP+64],RDI
            mov DWORD PTR [RSP+84],EDX
            mov DWORD PTR [RSP+80],ECX
            mov QWORD PTR [RSP+72],R8
            je .L_44ee71

            test EDX,EDX
            je .L_44ee71

            cmp QWORD PTR [RSP+72],0
            mov RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [RAX],0
            jle .L_44ee19

            movsxd R9,R9D
            mov RBP,QWORD PTR [RSP+184]
.L_44eb73:

            mov RBX,QWORD PTR [RSP+176]
            lea RAX,QWORD PTR [R9*8]
            movq XMM5,QWORD PTR [RIP+.L_44f2f0]
            movsd XMM8,QWORD PTR [RIP+.L_44f2d8]
            mov R13,RSI
            mov QWORD PTR [RSP+88],RAX
            mov EAX,DWORD PTR [RSP+84]
            mov QWORD PTR [RSP+56],0
            sub EAX,1
            lea R12,QWORD PTR [RSI+RAX*8+8]
            mov QWORD PTR [RSP+96],RAX
            mov R14,R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44ebc0:

            mov EAX,DWORD PTR [RSP+84]
            movsd XMM6,QWORD PTR [RBP]
            movsd XMM7,QWORD PTR [RBX]
            test EAX,EAX
            jle .L_44efdd

            movsd XMM0,QWORD PTR [RIP+.L_44f2d0]
            mov R12,R13
            movapd XMM1,XMM0
            nop
            nop
            nop
            nop
.L_44ebe8:

            mov RSI,QWORD PTR [R12]
            mov R15,QWORD PTR [RSI+32]
            movsd XMM10,QWORD PTR [R15+104]
            movsd XMM3,QWORD PTR [R15+96]
            movapd XMM4,XMM10
            movsd XMM9,QWORD PTR [R15+88]
            movapd XMM2,XMM3
            andpd XMM4,XMM5
            andpd XMM2,XMM5
            addsd XMM2,XMM4
            movapd XMM4,XMM9
            divsd XMM2,XMM8
            subsd XMM4,XMM2
            ucomisd XMM4,XMM6
            ja .L_44edd0

            movsd XMM4,QWORD PTR [R15+80]
            movapd XMM11,XMM4
            subsd XMM11,XMM2
            ucomisd XMM11,XMM7
            ja .L_44edd0

            mov EAX,DWORD PTR [R15+116]
            pxor XMM11,XMM11
            sub EAX,1
            cvtsi2sd XMM11,EAX
            mulsd XMM10,XMM11
            addsd XMM9,XMM10
            addsd XMM9,XMM2
            ucomisd XMM6,XMM9
            ja .L_44edd0

            mov EAX,DWORD PTR [R15+112]
            pxor XMM9,XMM9
            sub EAX,1
            cvtsi2sd XMM9,EAX
            mulsd XMM3,XMM9
            addsd XMM4,XMM3
            addsd XMM2,XMM4
            ucomisd XMM7,XMM2
            ja .L_44edd0

            mov RCX,QWORD PTR [RSI+48]
            test RCX,RCX
            jne .L_44ed1c

            jmp .L_44ed66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ecb0:

            movsd XMM2,QWORD PTR [RAX+80]
            movapd XMM9,XMM2
            subsd XMM9,XMM0
            ucomisd XMM9,XMM7
            ja .L_44ed5d

            mov EDI,DWORD PTR [RAX+116]
            pxor XMM9,XMM9
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM9,ECX
            mulsd XMM4,XMM9
            addsd XMM3,XMM4
            addsd XMM3,XMM0
            ucomisd XMM6,XMM3
            ja .L_44ed5d

            mov EDI,DWORD PTR [RAX+112]
            pxor XMM3,XMM3
            lea ECX,DWORD PTR [RDI-1]
            cvtsi2sd XMM3,ECX
            mulsd XMM1,XMM3
            addsd XMM2,XMM1
            addsd XMM0,XMM2
            ucomisd XMM7,XMM0
            ja .L_44ed5d

            mov RCX,QWORD PTR [RDX+48]
            mov RSI,RDX
            mov R15,RAX
            test RCX,RCX
            je .L_44ed66
.L_44ed1c:

            mov RDX,RCX
.L_44ed1f:

            mov RAX,QWORD PTR [RDX+32]
            movsd XMM4,QWORD PTR [RAX+104]
            movsd XMM1,QWORD PTR [RAX+96]
            movapd XMM2,XMM4
            movsd XMM3,QWORD PTR [RAX+88]
            movapd XMM0,XMM1
            andpd XMM2,XMM5
            andpd XMM0,XMM5
            addsd XMM0,XMM2
            movapd XMM2,XMM3
            divsd XMM0,XMM8
            subsd XMM2,XMM0
            ucomisd XMM2,XMM6
            jbe .L_44ecb0
.L_44ed5d:

            mov RDX,QWORD PTR [RDX+40]
            test RDX,RDX
            jne .L_44ed1f
.L_44ed66:

            cmp QWORD PTR [R15+120],0
            je .L_44ee30
.L_44ed71:

            mov EDI,DWORD PTR [RSP+80]
            movapd XMM0,XMM7
            movapd XMM1,XMM6
            mov RSI,R15
            movsd QWORD PTR [RSP+32],XMM8
            movaps XMMWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call .L_407ab0

            movsd XMM2,QWORD PTR [RIP+.L_44f2e0]
            movsd XMM6,QWORD PTR [RSP]
            ucomisd XMM0,XMM2
            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            jbe .L_44ef6a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44edd0:

            add R12,8
            cmp R14,R12
            jne .L_44ebe8

            movsd XMM2,QWORD PTR [RIP+.L_44f2e0]
.L_44ede5:

            ucomisd XMM0,XMM2
            ja .L_44ee98

            movsd QWORD PTR [RBP],XMM1
            movsd QWORD PTR [RBX],XMM0
.L_44edf8:

            mov RDI,QWORD PTR [RSP+88]
            add QWORD PTR [RSP+56],1
            mov RAX,QWORD PTR [RSP+56]
            add RBP,RDI
            add RBX,RDI
            cmp QWORD PTR [RSP+72],RAX
            jne .L_44ebc0
.L_44ee19:

            add RSP,120
.L_44ee1d:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ee30:

            mov RDI,QWORD PTR [RSP+64]
            movsd QWORD PTR [RSP+32],XMM8
            movaps XMMWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP],XMM6
            call .L_40afa0

            test EAX,EAX
            movsd XMM6,QWORD PTR [RSP]
            movsd XMM7,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+32]
            jne .L_44ed71
.L_44ee71:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,4294967258
            call .L_404af0

            add RSP,120
.L_44ee84:

            mov EAX,4294967258
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ee98:

            mov RAX,QWORD PTR [RSP+64]
            cmp DWORD PTR [RAX+4],1
            jle .L_44edf8

            movsd XMM1,QWORD PTR [RIP+.L_44f2e8]
            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_44f260]
            movsd XMM0,QWORD PTR [RBX]
            mov EAX,2
            mov ESI,2
            movsd QWORD PTR [RSP+48],XMM8
            xor R12D,R12D
            mulsd XMM0,XMM1
            mulsd XMM1,QWORD PTR [RBP]
            movaps XMMWORD PTR [RSP],XMM5
            call .L_404c10

            mov RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+16],RBX
            mov RBX,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP]
            lea R15,QWORD PTR [RAX+1]
            mov RAX,R13
            mov R13,RBP
            mov RBP,RAX
            nop
            nop
            nop
.L_44ef10:

            mov RAX,QWORD PTR [RBP+R12*8]
            test R12,R12
            movsd QWORD PTR [RSP+48],XMM8
            movaps XMMWORD PTR [RSP],XMM5
            mov RCX,QWORD PTR [RAX]
            je .L_44f037

            lea RDX,QWORD PTR [RIP+.L_44f24c]
            mov ESI,2
            mov RDI,RBX
            xor EAX,EAX
            call .L_404c10

            movsd XMM8,QWORD PTR [RSP+48]
            movapd XMM5,XMMWORD PTR [RSP]
.L_44ef4e:

            add R12,1
            cmp R15,R12
            jne .L_44ef10

            mov RAX,RBP
            mov RBX,QWORD PTR [RSP+16]
            mov RBP,R13
            mov R13,RAX
            jmp .L_44edf8
.L_44ef6a:

            mov EAX,DWORD PTR [RIP+.L_65fea4]
            lea EDX,DWORD PTR [RAX+1]
            cmp EAX,19
            mov DWORD PTR [RIP+.L_65fea4],EDX
            jg .L_44ede5

            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_44f221]
            mov RCX,R15
            mov ESI,3
            xor EAX,EAX
            movsd QWORD PTR [RSP+104],XMM8
            movaps XMMWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+48],XMM1
            movsd QWORD PTR [RSP],XMM0
            call .L_404c10

            movsd XMM0,QWORD PTR [RSP]
            movsd XMM1,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM5,XMMWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+104]
            jmp .L_44ede5
.L_44efdd:

            mov RAX,QWORD PTR [RSP+64]
            cmp DWORD PTR [RAX+4],1
            jle .L_44edf8

            movsd XMM1,QWORD PTR [RIP+.L_44f2e8]
            mov RDI,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_44f260]
            mov ESI,2
            mov EAX,2
            movsd QWORD PTR [RSP+48],XMM8
            mulsd XMM7,XMM1
            mulsd XMM1,XMM6
            movaps XMMWORD PTR [RSP],XMM5
            movapd XMM0,XMM7
            call .L_404c10

            movapd XMM5,XMMWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+48]
            jmp .L_44edf8
.L_44f037:

            lea RDX,QWORD PTR [RIP+.L_44f23f]
            mov ESI,2
            mov RDI,RBX
            xor EAX,EAX
            call .L_404c10

            movapd XMM5,XMMWORD PTR [RSP]
            movsd XMM8,QWORD PTR [RSP+48]
            jmp .L_44ef4e
.L_44f05e:

            nop
            nop
.L_44f060:

            push R15
            push R14
            push R13
            push R12
            mov R13D,R8D
            push RBP
            push RBX
            mov EBP,EDX
            mov RBX,RDI
            mov R12,RCX
            sub RSP,40
.L_44f079:

            lea RDX,QWORD PTR [RSP+20]
            mov QWORD PTR [RSP],R9
            mov R14,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov R15,QWORD PTR [RSP+104]
            call .L_40d010

            test RAX,RAX
            je .L_44f0b2

            mov EDX,DWORD PTR [RSP+20]
            mov R9,QWORD PTR [RSP]
            test EDX,EDX
            jne .L_44f0d8
.L_44f0b2:

            mov EAX,DWORD PTR [RBX]
.L_44f0b4:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44f114

            add RSP,40
.L_44f0c8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f0d8:

            sub RSP,8
            mov R8,R12
            mov ECX,EBP
            push R15
            push R14
            mov RSI,RAX
            push R9
            mov RDI,RBX
            mov R9D,R13D
            mov QWORD PTR [RSP+40],RAX
            call .L_44eb20

            mov DWORD PTR [RSP+32],EAX
            add RSP,32
            mov R10,QWORD PTR [RSP+8]
            mov RDI,R10
            call .L_403c60

            mov EAX,DWORD PTR [RSP]
            jmp .L_44f0b4
.L_44f114:

            call __stack_chk_fail@PLT
.L_44f119:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44f120:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_44f12e:

            cmp QWORD PTR [RDI+520],0
            mov RBP,QWORD PTR [RSP+80]
            jne .L_44f1b0

            mov DWORD PTR [RSP+8],ESI
            mov RSI,QWORD PTR [RDI+464]
            mov R14,R9
            mov R13,R8
            mov R15D,ECX
            mov R12,RDX
            mov RBX,RDI
            test RSI,RSI
            je .L_44f1c8

            mov EDX,DWORD PTR [RDI+472]
.L_44f162:

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EDX
            mov QWORD PTR [RSP],RSI
            call .L_404a30

            sub RSP,8
.L_44f176:

            mov R9D,R15D
            mov R8,R12
            push RBP
            push R14
            mov RDI,RAX
            push R13
            mov ECX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [RSP+32]
            call .L_44eb20

            add RSP,32
.L_44f19a:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f1b0:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4075a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f1c8:

            mov RSI,QWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_44f250]
            call .L_4043f0

            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_404a30

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RBX+472]
            mov RDI,RAX
            call .L_40d010

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBX+464],RAX
            je .L_44f217

            mov EDX,DWORD PTR [RBX+472]
            test EDX,EDX
            jne .L_44f162
.L_44f217:

            mov RAX,QWORD PTR [RBX]
            mov EAX,DWORD PTR [RAX]
            jmp .L_44f19a
.L_44f221:
          .string "pj_apply_gridshift(): used %s"
.L_44f23f:
          .string "   tried: %s"
.L_44f24c:
          .string ",%s"
.L_44f250:
          .string "snadgrids"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f260:
          .string "pj_apply_gridshift(): failed to find a grid shift table for\n                      location (%.7fdW,%.7fdN)"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f2d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x7f
.L_44f2d8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0xc3
          .byte 0x40
.L_44f2e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0x7f
.L_44f2e8:
          .byte 0xf8
          .byte 0xc1
          .byte 0x63
          .byte 0x1a
          .byte 0xdc
          .byte 0xa5
          .byte 0x4c
          .byte 0x40
.L_44f2f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f300:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_65c938]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_65c940]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4624

            test RBP,RBP
            je .L_44f356

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44f340:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_44f340
.L_44f356:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44f365:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44f370:

            ret 
.L_44f372:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_44f380:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_44f384:
          .string "PROJ_LIB"
.L_44f38d:
          .string "."
.L_44f38f:
          .string "BINARY_2D:"
.L_44f39a:
          .string "BINARY_3D:"
.L_44f3a5:
          .string "%lf %lf"
.L_44f3ad:
          .string "rb"
.L_44f3b0:
          .string "malloc error!\n"
.L_44f3bf:
          .string "read error!\n"
          .zero 4
.L_44f3d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x40
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_65c938:
          .quad .L_401a50
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_65c940:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 8
#===================================

          .quad .L_406040
          .quad .L_406080
          .quad .L_406500
          .quad .L_406900
          .quad .L_407080
          .quad .L_417bf0
          .quad .L_4191e0
          .quad .L_419d80
          .quad .L_41b400
          .quad .L_41b8c0
          .quad .L_41bd10
          .quad .L_41c800
          .quad .L_41d780
          .quad .L_41f3a0
          .quad .L_41fb30
          .quad .L_420b80
          .quad .L_421720
          .quad .L_421760
          .quad .L_4217a0
          .quad .L_4217e0
          .quad .L_421820
          .quad .L_422360
          .quad .L_4223a0
          .quad .L_422760
          .quad .L_422e30
          .quad .L_424160
          .quad .L_4241a0
          .quad .L_424600
          .quad .L_425160
          .quad .L_4251a0
          .quad .L_425e80
          .quad .L_426700
          .quad .L_426ea0
          .quad .L_4285e0
          .quad .L_429560
          .quad .L_429f30
          .quad .L_42ab40
          .quad .L_42b500
          .quad .L_42b820
          .quad .L_42c3a0
          .quad .L_42c420
          .quad .L_42c460
          .quad .L_42c4a0
          .quad .L_42c4e0
          .quad .L_42c3e0
          .quad .L_42c520
          .quad .L_42d060
          .quad .L_42d840
          .quad .L_42da20
          .quad .L_42dee0
          .quad .L_42e0e0
          .quad .L_42e280
          .quad .L_42ee20
          .quad .L_430220
          .quad .L_431620
          .quad .L_431b80
          .quad .L_431d60
          .quad .L_432440
          .quad .L_433720
          .quad .L_433fa0
          .quad .L_4341c0
          .quad .L_434440
          .quad .L_434640
          .quad .L_435420
          .quad .L_435b40
          .quad .L_4365f0
          .quad .L_436610
          .quad .L_436860
          .quad .L_436d00
          .quad .L_436d40
          .quad .L_436cc0
          .quad .L_437700
          .quad .L_437be0
          .quad .L_437fa0
          .quad .L_438170
          .quad .L_438310
          .quad .L_4387c0
          .quad .L_4393c0
          .quad .L_439ac0
          .quad .L_43a300
          .quad .L_43ad40
          .quad .L_43b360
          .quad .L_43b3a0
          .quad .L_43b8e0
          .quad .L_43bb50
          .quad .L_43c040
          .quad .L_43cbe0
          .quad .L_43dbc0
          .quad .L_43dc00
          .quad .L_43e160
          .quad .L_43e480
          .quad .L_43e6f0
          .quad .L_43e920
          .quad .L_43eac0
          .quad .L_43ec70
          .quad .L_43ef60
          .quad .L_43f4f0
          .quad .L_43f4d0
          .quad .L_43f4b0
          .quad .L_43f510
          .quad .L_43f870
          .quad .L_43fa50
          .quad .L_43fc80
          .quad .L_440040
          .quad .L_4401e0
          .quad .L_4407e0
          .quad .L_441260
          .quad .L_4411c0
          .quad .L_441200
          .quad .L_441220
          .quad .L_441560
          .quad .L_442000
          .quad .L_442600
          .quad .L_442a10
          .quad .L_442d80
          .quad .L_443120
          .quad .L_4435e0
          .quad .L_443b60
          .quad .L_443b80
          .quad .L_443ba0
          .quad .L_443ea0
          .quad .L_444190
          .quad .L_444420
          .quad .L_444790
          .quad .L_444a60
          .quad .L_444a80
          .quad .L_444dd0
          .quad .L_444df0
          .quad .L_4451b0
          .quad .L_4451d0
          .quad .L_4456e0
          .quad .L_445700
          .quad .L_446d80
          .quad .L_447630
          .quad .L_448000
          .quad .L_448600
          .quad .L_448660
          .quad .L_448680
          .quad .L_448640
          .quad .L_4489e0
          .quad .L_448d40
          .quad .L_448d80
          .quad .L_448f80
          .quad .L_4491a0
          .quad .L_4493b0
          .quad .L_449680
          .quad .L_449b00
          .quad .L_449ae0
          .quad .L_449aa0
          .quad .L_449ac0
          .quad .L_449c28
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 32
.L_65d260:
          .quad .L_403888
          .quad .L_425130
          .quad .L_40388c
          .quad .L_41f380
          .quad .L_403891
          .quad .L_435b20
          .quad .L_403896
          .quad .L_4365c0
          .quad .L_40389d
          .quad .L_4216f0
          .quad .L_4038a2
          .quad .L_436ca0
          .quad .L_4038a8
          .quad .L_436850
          .quad .L_4038af
          .quad .L_436c90
          .quad .L_4038b5
          .quad .L_425e60
          .quad .L_4038ba
          .quad .L_43e150
          .quad .L_4038c0
          .quad .L_4266e0
          .quad .L_4038c6
          .quad .L_407060
          .quad .L_4038ce
          .quad .L_417be0
          .quad .L_4038d3
          .quad .L_42d830
          .quad .L_4038d8
          .quad .L_42da10
          .quad .L_4038db
          .quad .L_42deb0
          .quad .L_4038df
          .quad .L_4376e0
          .quad .L_4038e5
          .quad .L_43e470
          .quad .L_4038eb
          .quad .L_43e6e0
          .quad .L_4038f2
          .quad .L_43e910
          .quad .L_4038f8
          .quad .L_43eaa0
          .quad .L_4038fe
          .quad .L_43ec60
          .quad .L_403903
          .quad .L_43ef50
          .quad .L_403908
          .quad .L_43f470
          .quad .L_40390d
          .quad .L_43f860
          .quad .L_403912
          .quad .L_43fa40
          .quad .L_403917
          .quad .L_441180
          .quad .L_40391c
          .quad .L_42e0d0
          .quad .L_403920
          .quad .L_426e70
          .quad .L_403925
          .quad .L_42c2f0
          .quad .L_40392b
          .quad .L_43d960
          .quad .L_403932
          .quad .L_43fc70
          .quad .L_403938
          .quad .L_448350
          .quad .L_40393d
          .quad .L_440020
          .quad .L_403944
          .quad .L_42e270
          .quad .L_403949
          .quad .L_449c20
          .quad .L_403951
          .quad .L_43cbc0
          .quad .L_403956
          .quad .L_4401d0
          .byte 0x5c
          .byte 0x39
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4411a0
          .quad .L_403964
          .quad .L_41fb20
          .quad .L_403969
          .quad .L_441550
          .quad .L_40396f
          .quad .L_4216e0
          .quad .L_403974
          .quad .L_421700
          .quad .L_403979
          .quad .L_437bd0
          .quad .L_403980
          .quad .L_4425e0
          .quad .L_403987
          .quad .L_405ed0
          .quad .L_40398f
          .quad .L_405ee0
          .quad .L_403998
          .quad .L_41b180
          .quad .L_4039a0
          .quad .L_41bca0
          .quad .L_4039ab
          .quad .L_419c90
          .quad .L_4039b2
          .quad .L_441fb0
          .quad .L_4039b6
          .quad .L_429520
          .quad .L_4039bc
          .quad .L_428550
          .quad .L_4039c1
          .quad .L_448430
          .quad .L_4039c6
          .quad .L_43f480
          .byte 0xcb
          .byte 0x39
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_429f10
          .quad .L_4039d2
          .quad .L_42ee10
          .quad .L_4039d8
          .quad .L_420b70
          .quad .L_4039dd
          .quad .L_437f80
          .quad .L_4039e4
          .quad .L_438160
          .quad .L_4039e9
          .quad .L_438300
          .quad .L_4039ee
          .quad .L_449a90
          .quad .L_4039f5
          .quad .L_449a80
          .quad .L_4039fc
          .quad .L_449a60
          .quad .L_403a04
          .quad .L_449a70
          .quad .L_403a0c
          .quad .L_42ab10
          .quad .L_403a10
          .quad .L_43c030
          .quad .L_403a15
          .quad .L_425140
          .quad .L_403a1a
          .quad .L_4216d0
          .quad .L_403a21
          .quad .L_442a00
          .quad .L_403a27
          .quad .L_430200
          .quad .L_403a2c
          .quad .L_4485f0
          .byte 0x32
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_442d60
          .byte 0x3a
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_443110
          .quad .L_403a41
          .quad .L_4435d0
          .quad .L_403a48
          .quad .L_441190
          .quad .L_403a4f
          .quad .L_431b60
          .quad .L_403a54
          .quad .L_4216c0
          .quad .L_403a5b
          .quad .L_431d50
          .quad .L_403a60
          .quad .L_431610
          .quad .L_403a68
          .quad .L_443b30
          .byte 0x6d
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41d740
          .quad .L_403a78
          .quad .L_42c300
          .quad .L_403a7e
          .quad .L_42c310
          .quad .L_403a84
          .quad .L_42c320
          .quad .L_403a8a
          .quad .L_4064f0
          .quad .L_403a93
          .quad .L_4068f0
          .quad .L_403a9d
          .quad .L_443e90
          .byte 0xa2
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_444180
          .byte 0xa9
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4387b0
          .byte 0xaf
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422330
          .quad .L_403ab5
          .quad .L_422750
          .byte 0xba
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_439330
          .quad .L_403ac2
          .quad .L_4323f0
          .quad .L_403ac7
          .quad .L_439ab0
          .quad .L_403acb
          .quad .L_4336b0
          .quad .L_403ad1
          .quad .L_436cb0
          .quad .L_403ad7
          .quad .L_422e20
          .byte 0xdd
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42c330
          .byte 0xe4
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_444410
          .byte 0xee
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_418f90
          .byte 0xf7
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42b4e0
          .quad .L_403afc
          .quad .L_43f4a0
          .quad .L_403b02
          .quad .L_444780
          .quad .L_403b08
          .quad .L_444a40
          .quad .L_403b0e
          .quad .L_444a50
          .quad .L_403b15
          .quad .L_444db0
          .quad .L_403b1c
          .quad .L_445190
          .quad .L_403b22
          .quad .L_4451a0
          .quad .L_403b29
          .quad .L_4456c0
          .byte 0x2f
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4456d0
          .quad .L_403b36
          .quad .L_448510
          .quad .L_403b3e
          .quad .L_446d60
          .quad .L_403b42
          .quad .L_4473a0
          .quad .L_403b48
          .quad .L_42d050
          .quad .L_403b4e
          .quad .L_42b800
          .quad .L_403b54
          .quad .L_447fc0
          .byte 0x58
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_441170
          .quad .L_403b5d
          .quad .L_433f90
          .quad .L_403b64
          .quad .L_424120
          .quad .L_403b6a
          .quad .L_4245e0
          .byte 0x71
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4407c0
          .quad .L_403b79
          .quad .L_4341b0
          .quad .L_403b7d
          .quad .L_434420
          .quad .L_403b82
          .quad .L_434630
          .quad .L_403b88
          .quad .L_42c340
          .quad .L_403b8f
          .quad .L_435400
          .byte 0x95
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a2e0
          .byte 0x9b
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422340
          .byte 0xa1
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41c730
          .quad .L_403bad
          .quad .L_424130
          .quad .L_403bb1
          .quad .L_4489c0
          .byte 0xb6
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448d10
          .byte 0xbd
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db90
          .byte 0xc1
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ad30
          .byte 0xc7
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b340
          .quad .L_403bce
          .quad .L_43b350
          .quad .L_403bd5
          .quad .L_43b8d0
          .byte 0xdc
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42c350
          .quad .L_403be2
          .quad .L_41b850
          .quad .L_403bed
          .quad .L_448d20
          .quad .L_403bf2
          .quad .L_448f70
          .quad .L_403bf7
          .quad .L_449180
          .quad .L_403bfc
          .quad .L_443b40
          .quad .L_403c01
          .quad .L_443b50
          .quad .L_403c06
          .quad .L_43f490
          .quad .L_403c0b
          .quad .L_43bb40
          .quad .L_403c10
          .quad .L_444dc0
          .byte 0x16
          .byte 0x3c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4493a0
          .quad .L_403c1c
          .quad .L_449660
          .quad .L_403c22
          .quad .L_4365d0
          .zero 16
.L_65dbe0:
          .quad .L_403888
          .quad .L_425000
          .byte 0x30
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65dbf8:
          .quad .L_40388c
          .quad .L_41f330
          .byte 0xb0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403891
          .quad .L_435ad0
          .byte 0x48
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403896
          .quad .L_436450
          .byte 0x58
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40389d
          .quad .L_421550
          .byte 0xd0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038a2
          .quad .L_436b90
          .byte 0x70
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038a8
          .quad .L_4367b0
          .byte 0x60
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038af
          .quad .L_436af0
          .byte 0x78
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038b5
          .quad .L_425e10
          .byte 0x38
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038ba
          .quad .L_43e0d0
          .byte 0x10
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038c0
          .quad .L_426690
          .byte 0x40
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038c6
          .quad .L_406f70
          .byte 0x68
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038ce
          .quad .L_417b00
          .byte 0x70
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038d3
          .quad .L_42d780
          .byte 0xc0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038d8
          .quad .L_42d970
          .byte 0xc8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038db
          .quad .L_42de60
          .byte 0xd0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038df
          .quad .L_437690
          .byte 0x80
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038e5
          .quad .L_43e3d0
          .byte 0x18
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038eb
          .quad .L_43e640
          .byte 0x20
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038f2
          .quad .L_43e870
          .byte 0x28
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038f8
          .quad .L_43ea20
          .byte 0x30
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4038fe
          .quad .L_43ebc0
          .byte 0x38
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403903
          .quad .L_43eeb0
          .byte 0x40
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403908
          .quad .L_43f1b0
          .byte 0x60
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40390d
          .quad .L_43f7c0
          .byte 0x68
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403912
          .quad .L_43f9a0
          .byte 0x70
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403917
          .quad .L_440f60
          .byte 0xa8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40391c
          .quad .L_42e080
          .byte 0xd8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403920
          .quad .L_426e20
          .byte 0x48
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403925
          .quad .L_42c050
          .byte 0xb0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40392b
          .quad .L_43d910
          .byte 0x8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403932
          .quad .L_43fbd0
          .byte 0x78
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403938
          .quad .L_448300
          .byte 0x98
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40393d
          .quad .L_43ffd0
          .byte 0x80
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403944
          .quad .L_42e1d0
          .byte 0xe0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403949
          .quad .L_449b60
          .byte 0xf8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403951
          .quad .L_43cb70
          .byte 0xf8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403956
          .quad .L_440130
          .byte 0x88
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x39
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_441120
          .byte 0x98
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403964
          .quad .L_41fad0
          .byte 0xb8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403969
          .quad .L_441500
          .byte 0xb8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40396f
          .quad .L_421430
          .byte 0xd8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403974
          .quad .L_421670
          .byte 0xc8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403979
          .quad .L_437b80
          .byte 0x88
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403980
          .quad .L_442540
          .byte 0xc8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403987
          .quad .L_405cc0
          .byte 0x50
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40398f
          .quad .L_405e80
          .byte 0x48
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403998
          .quad .L_41b130
          .byte 0x88
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039a0
          .quad .L_41bc50
          .byte 0x98
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039ab
          .quad .L_419c40
          .byte 0x80
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039b2
          .quad .L_441f60
          .byte 0xc0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039b6
          .quad .L_4294d0
          .byte 0x58
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039bc
          .quad .L_428500
          .byte 0x50
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039c1
          .quad .L_4483e0
          .byte 0x90
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039c6
          .quad .L_43f280
          .byte 0x58
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x39
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_429ec0
          .byte 0x60
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039d2
          .quad .L_42edc0
          .byte 0xe8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039d8
          .quad .L_420b20
          .byte 0xc0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039dd
          .quad .L_437f30
          .byte 0x90
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039e4
          .quad .L_4380e0
          .byte 0x98
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039e9
          .quad .L_438280
          .byte 0xa0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039ee
          .quad .L_4499a0
          .byte 0xd8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039f5
          .quad .L_4498e0
          .byte 0xe0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4039fc
          .quad .L_449760
          .byte 0xf0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a04
          .quad .L_449820
          .byte 0xe8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a0c
          .quad .L_42aac0
          .byte 0x68
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a10
          .quad .L_43bfe0
          .byte 0xf0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a15
          .quad .L_4250e0
          .byte 0x28
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a1a
          .quad .L_421360
          .byte 0xe0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a21
          .quad .L_4429b0
          .byte 0xd0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a27
          .quad .L_4301b0
          .byte 0xf0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a2c
          .quad .L_4485a0
          .byte 0x80
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_442cc0
          .byte 0xd8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_443070
          .byte 0xe0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a41
          .quad .L_443530
          .byte 0xe8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a48
          .quad .L_441000
          .byte 0xa0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a4f
          .quad .L_431b10
          .byte 0x0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a54
          .quad .L_4212a0
          .byte 0xe8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a5b
          .quad .L_431cb0
          .byte 0x8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a60
          .quad .L_4315c0
          .byte 0xf8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a68
          .quad .L_443940
          .byte 0x0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41d6f0
          .byte 0xa8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a78
          .quad .L_42c110
          .byte 0xa0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a7e
          .quad .L_42c170
          .byte 0x98
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a84
          .quad .L_42c1d0
          .byte 0x90
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a8a
          .quad .L_406450
          .byte 0x58
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a93
          .quad .L_406850
          .byte 0x60
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403a9d
          .quad .L_443df0
          .byte 0x8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4440e0
          .byte 0x10
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_438730
          .byte 0xa8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422170
          .byte 0xf8
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403ab5
          .quad .L_422630
          .byte 0x0
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4392e0
          .byte 0xb0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403ac2
          .quad .L_4323a0
          .byte 0x10
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403ac7
          .quad .L_439a60
          .byte 0xb8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403acb
          .quad .L_433660
          .byte 0x18
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403ad1
          .quad .L_436c40
          .byte 0x68
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403ad7
          .quad .L_422dd0
          .byte 0x8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42c230
          .byte 0x88
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_444370
          .byte 0x18
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_418f40
          .byte 0x78
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x3a
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42b490
          .byte 0x70
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403afc
          .quad .L_43f420
          .byte 0x48
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b02
          .quad .L_4446e0
          .byte 0x20
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b08
          .quad .L_444940
          .byte 0x30
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b0e
          .quad .L_4449f0
          .byte 0x28
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b15
          .quad .L_444ca0
          .byte 0x40
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b1c
          .quad .L_445080
          .byte 0x50
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b22
          .quad .L_445140
          .byte 0x48
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b29
          .quad .L_445590
          .byte 0x60
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_445670
          .byte 0x58
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b36
          .quad .L_4484c0
          .byte 0x88
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b3e
          .quad .L_446d10
          .byte 0x68
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b42
          .quad .L_447300
          .byte 0x70
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b48
          .quad .L_42d000
          .byte 0xb8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b4e
          .quad .L_42b7b0
          .byte 0x78
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b54
          .quad .L_447f70
          .byte 0x78
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_440ec0
          .byte 0xb0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b5d
          .quad .L_433f40
          .byte 0x20
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b64
          .quad .L_423fa0
          .byte 0x18
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b6a
          .quad .L_424590
          .byte 0x20
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_440770
          .byte 0x90
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b79
          .quad .L_434110
          .byte 0x28
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b7d
          .quad .L_434380
          .byte 0x30
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b82
          .quad .L_434590
          .byte 0x38
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b88
          .quad .L_42c0b0
          .byte 0xa8
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403b8f
          .quad .L_4353b0
          .byte 0x40
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43a290
          .byte 0xc0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4222e0
          .byte 0xf0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41c6e0
          .byte 0xa0
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bad
          .quad .L_4240d0
          .byte 0x10
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bb1
          .quad .L_448970
          .byte 0xa0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_448c00
          .byte 0xb0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43db40
          .byte 0x0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43ac90
          .byte 0xc8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43b250
          .byte 0xd8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bce
          .quad .L_43b2f0
          .byte 0xd0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bd5
          .quad .L_43b850
          .byte 0xe0
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x3b
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42c290
          .byte 0x80
          .byte 0xca
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403be2
          .quad .L_41b800
          .byte 0x90
          .byte 0xc9
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bed
          .quad .L_448cc0
          .byte 0xa8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bf2
          .quad .L_448ed0
          .byte 0xb8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bf7
          .quad .L_449130
          .byte 0xc0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403bfc
          .quad .L_443a10
          .byte 0xf8
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c01
          .quad .L_443ae0
          .byte 0xf0
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c06
          .quad .L_43f350
          .byte 0x50
          .byte 0xcc
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c0b
          .quad .L_43baa0
          .byte 0xe8
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c10
          .quad .L_444d60
          .byte 0x38
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x3c
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_449350
          .byte 0xc8
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c1c
          .quad .L_449610
          .byte 0xd0
          .byte 0xcd
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_403c22
          .quad .L_436570
          .byte 0x50
          .byte 0xcb
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65ea20:
          .quad .L_4046b8
          .quad .L_4046bb
          .quad .L_4046c1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_65ea40:
          .quad .L_4046cb
          .quad .L_4046cd
          .quad .L_4046d0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .quad .L_4046d6
          .quad .L_4046d9
          .quad .L_4046de
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
          .quad .L_4046e8
          .quad .L_4046eb
          .quad .L_4046f1
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
          .quad .L_4046fc
          .quad .L_4046ff
          .quad .L_404706
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x50
          .byte 0x3f
          .quad .L_404711
          .quad .L_404715
          .quad .L_40471c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x9c
          .byte 0x40
          .quad .L_404738
          .quad .L_40473b
          .quad .L_404742
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x3f
          .quad .L_404755
          .quad .L_404758
          .quad .L_40475f
          .byte 0xfd
          .byte 0x87
          .byte 0xf4
          .byte 0xdb
          .byte 0xd7
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_404772
          .byte 0x75
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0xcb
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .quad .L_40478f
          .byte 0x92
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x37
          .byte 0x89
          .byte 0x41
          .byte 0x60
          .byte 0x25
          .byte 0x99
          .byte 0x40
          .quad .L_4047b6
          .quad .L_4047bb
          .quad .L_4047c2
          .byte 0xfb
          .byte 0xcb
          .byte 0xee
          .byte 0xc9
          .byte 0xc3
          .byte 0x42
          .byte 0xfd
          .byte 0x3f
          .quad .L_4047d7
          .byte 0xda
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4047e2
          .byte 0x3d
          .byte 0x2c
          .byte 0xd4
          .byte 0x9a
          .byte 0xe6
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .quad .L_4047f6
          .byte 0xfb
          .byte 0x47
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_404804
          .byte 0xa0
          .byte 0x38
          .byte 0x80
          .byte 0x7e
          .byte 0xdf
          .byte 0xbf
          .byte 0xc9
          .byte 0x3f
          .quad .L_404817
          .quad .L_40481d
          .quad .L_404826
          .byte 0xa6
          .byte 0xa
          .byte 0x46
          .byte 0x25
          .byte 0x75
          .byte 0x2
          .byte 0x9a
          .byte 0x3f
          .quad .L_40483b
          .quad .L_404841
          .quad .L_404853
          .byte 0x38
          .byte 0x70
          .byte 0x82
          .byte 0x6a
          .byte 0xda
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_404868
          .byte 0x6e
          .byte 0x48
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x48
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0xa8
          .byte 0xc3
          .byte 0x9f
          .byte 0xc7
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .quad .L_404895
          .quad .L_40489b
          .quad .L_4048ad
          .byte 0xbe
          .byte 0x83
          .byte 0xd6
          .byte 0x3d
          .byte 0xe9
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .quad .L_4048c3
          .quad .L_4048c9
          .byte 0xdb
          .byte 0x48
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x24
          .byte 0x4c
          .byte 0x8d
          .byte 0x63
          .byte 0x25
          .byte 0x99
          .byte 0x40
          .byte 0xf8
          .byte 0x48
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x48
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x49
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0xfd
          .byte 0xe
          .byte 0xc9
          .byte 0xb9
          .byte 0x42
          .byte 0xed
          .byte 0x3f
          .byte 0x16
          .byte 0x49
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x49
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x49
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0xa8
          .byte 0xb4
          .byte 0x30
          .byte 0xd1
          .byte 0x81
          .byte 0xd3
          .byte 0x3f
          .quad .L_404934
          .quad .L_40493b
          .byte 0x47
          .byte 0x49
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x4e
          .byte 0x3a
          .byte 0xba
          .byte 0xdf
          .byte 0x1d
          .byte 0x34
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65ece0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65edc0:
          .quad .L_4071d0
          .quad .L_4071c0
          .quad .L_4071b0
          .quad .L_4071a0
          .quad .L_407180
          .zero 24
.L_65ee00:
          .quad .L_408098
          .quad .L_4080a2
          .quad .L_4080a6
          .quad .L_4080ad
          .quad .L_4080bb
          .quad .L_4080c1
          .quad .L_4080cf
          .quad .L_4080d6
          .quad .L_4080e3
          .quad .L_4080ea
          .quad .L_4080f7
          .quad .L_4080fc
          .quad .L_408108
          .quad .L_40810d
          .quad .L_408119
          .quad .L_408121
          .quad .L_408130
          .quad .L_408136
          .quad .L_40813e
          .quad .L_408147
          .quad .L_408153
          .quad .L_40815d
          .quad .L_408169
          .quad .L_408170
          .quad .L_40817f
          .quad .L_408184
          .zero 16
.L_65eee0:
          .quad .L_408191
          .quad .L_408197
          .quad .L_408191
          .quad .L_4081a5
          .quad .L_4081a6
          .quad .L_4081ad
          .byte 0xca
          .byte 0x81
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4082e0
          .byte 0xd0
          .byte 0x81
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_408197
          .byte 0xca
          .byte 0x81
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x81
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4081f0
          .quad .L_408308
          .quad .L_4081f6
          .quad .L_4081fd
          .quad .L_408217
          .quad .L_408340
          .quad .L_40821f
          .quad .L_408226
          .quad .L_408242
          .byte 0x4b
          .byte 0x82
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_408264
          .quad .L_40826e
          .quad .L_408284
          .byte 0x70
          .byte 0x83
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_40821f
          .quad .L_408292
          .quad .L_4082a0
          .byte 0xa8
          .byte 0x83
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4082a6
          .quad .L_4082af
          .quad .L_4082bc
          .quad .L_4083e8
          .quad .L_4082c3
          .quad .L_408420
          .quad .L_4082c8
          .quad .L_408440
          .quad .L_4082cf
          .quad .L_4082d4
          .zero 32
.L_65f040:
          .string "step"
          .zero 27
.L_65f060:
          .quad .L_41c7b5
          .quad .L_41bd30
          .quad .L_41bd30
          .quad .L_41c7b9
          .quad .L_41c7ce
          .quad .L_41c190
          .quad .L_41bd40
          .quad .L_41c7da
          .quad .L_41c7e7
          .quad .L_41be50
          .quad .L_41be70
          .quad .L_41c7f0
          .zero 32
.L_65f0e0:
          .byte 0x40
          .byte 0x89
          .byte 0xcf
          .byte 0x9d
          .byte 0x60
          .byte 0x7f
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x4e
          .byte 0x62
          .byte 0x6b
          .byte 0x11
          .byte 0xac
          .byte 0x95
          .byte 0x3f
          .byte 0xec
          .byte 0xad
          .byte 0x37
          .byte 0x20
          .byte 0xf8
          .byte 0xce
          .byte 0x6e
          .byte 0x3f
          .byte 0xa
          .byte 0x86
          .byte 0xce
          .byte 0xc6
          .byte 0xa5
          .byte 0x85
          .byte 0xba
          .byte 0xbf
          .byte 0x56
          .byte 0x72
          .byte 0x5f
          .byte 0x18
          .byte 0xfa
          .byte 0x71
          .byte 0xad
          .byte 0xbf
          .byte 0xab
          .byte 0x96
          .byte 0x74
          .byte 0x94
          .byte 0x83
          .byte 0xd9
          .byte 0xa0
          .byte 0xbf
          .byte 0xb3
          .byte 0x67
          .byte 0x2a
          .byte 0x1f
          .byte 0xdd
          .byte 0x63
          .byte 0xa0
          .byte 0xbf
          .byte 0x9d
          .byte 0x61
          .byte 0xf
          .byte 0x92
          .byte 0xaa
          .byte 0x92
          .byte 0xa9
          .byte 0x3f
          .byte 0x9
          .byte 0x89
          .byte 0xb4
          .byte 0x8d
          .byte 0x3f
          .byte 0x51
          .byte 0xbf
          .byte 0x3f
          .byte 0xfc
          .byte 0x36
          .byte 0xc4
          .byte 0x78
          .byte 0xcd
          .byte 0xab
          .byte 0x9a
          .byte 0x3f
          .byte 0x2f
          .byte 0x19
          .byte 0xc7
          .byte 0x48
          .byte 0xf6
          .byte 0x8
          .byte 0xb7
          .byte 0x3f
          .byte 0x94
          .byte 0xea
          .byte 0x4c
          .byte 0xeb
          .byte 0x80
          .byte 0x35
          .byte 0x48
          .byte 0x3f
          .byte 0x4f
          .byte 0x63
          .byte 0x31
          .byte 0xa0
          .byte 0xcd
          .byte 0x60
          .byte 0xc2
          .byte 0xbf
          .byte 0xbd
          .byte 0xaf
          .byte 0x25
          .byte 0x3f
          .byte 0x3d
          .byte 0x11
          .byte 0x7f
          .byte 0x3f
          .byte 0xfe
          .byte 0x72
          .byte 0x77
          .byte 0xe7
          .byte 0x9a
          .byte 0x13
          .byte 0xc1
          .byte 0xbf
          .byte 0x56
          .byte 0xd2
          .byte 0x2f
          .byte 0xb6
          .byte 0xb5
          .byte 0x2a
          .byte 0x96
          .byte 0xbf
          .byte 0xbe
          .byte 0x68
          .byte 0x8f
          .byte 0x17
          .byte 0xd2
          .byte 0xe1
          .byte 0xb3
          .byte 0x3f
          .byte 0x35
          .byte 0xab
          .byte 0x88
          .byte 0xe4
          .byte 0x75
          .byte 0xe
          .byte 0x97
          .byte 0xbf
          .byte 0x95
          .byte 0xd7
          .byte 0xa5
          .byte 0xa1
          .byte 0xa1
          .byte 0xda
          .byte 0xb5
          .byte 0x3f
.L_65f180:
          .byte 0x5
          .byte 0xec
          .byte 0xb4
          .byte 0x7f
          .byte 0xaf
          .byte 0x72
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0xc6
          .byte 0x1c
          .byte 0xba
          .byte 0x8f
          .byte 0x92
          .byte 0x95
          .byte 0x3f
          .byte 0x37
          .byte 0x60
          .byte 0xa1
          .byte 0x20
          .byte 0xc2
          .byte 0x9
          .byte 0x76
          .byte 0x3f
          .byte 0x20
          .byte 0x42
          .byte 0x5c
          .byte 0x39
          .byte 0x7b
          .byte 0x67
          .byte 0xba
          .byte 0xbf
          .byte 0x17
          .byte 0x30
          .byte 0xdc
          .byte 0x14
          .byte 0xea
          .byte 0x44
          .byte 0xad
          .byte 0xbf
          .byte 0xad
          .byte 0xa
          .byte 0x1e
          .byte 0xf0
          .byte 0xa
          .byte 0x8e
          .byte 0xa0
          .byte 0xbf
          .byte 0x8
          .byte 0x85
          .byte 0x52
          .byte 0xc5
          .byte 0x9e
          .byte 0x87
          .byte 0xa0
          .byte 0xbf
          .byte 0x87
          .byte 0x5a
          .byte 0x89
          .byte 0x2f
          .byte 0xc9
          .byte 0xb7
          .byte 0xa9
          .byte 0x3f
          .byte 0x19
          .byte 0xaf
          .byte 0xd4
          .byte 0xe
          .byte 0xda
          .byte 0x6
          .byte 0xbf
          .byte 0x3f
          .byte 0xb2
          .byte 0xda
          .byte 0xfc
          .byte 0xbf
          .byte 0xea
          .byte 0xc8
          .byte 0x99
          .byte 0x3f
          .byte 0xb2
          .byte 0x50
          .byte 0xc6
          .byte 0x53
          .byte 0xea
          .byte 0xed
          .byte 0xb6
          .byte 0x3f
          .byte 0x10
          .byte 0xcb
          .byte 0x66
          .byte 0xe
          .byte 0x49
          .byte 0x2d
          .byte 0x54
          .byte 0xbf
          .byte 0x8b
          .byte 0xe3
          .byte 0x1b
          .byte 0x65
          .byte 0x58
          .byte 0x20
          .byte 0xc2
          .byte 0xbf
          .byte 0x75
          .byte 0xe4
          .byte 0xed
          .byte 0xad
          .byte 0xed
          .byte 0x92
          .byte 0x7d
          .byte 0x3f
          .byte 0xbb
          .byte 0xf4
          .byte 0x8a
          .byte 0x2
          .byte 0xd8
          .byte 0xdb
          .byte 0xc0
          .byte 0xbf
          .byte 0xc0
          .byte 0x4c
          .byte 0xca
          .byte 0x93
          .byte 0x5a
          .byte 0xde
          .byte 0x93
          .byte 0xbf
          .byte 0x1a
          .byte 0x66
          .byte 0xd
          .byte 0x83
          .byte 0x9e
          .byte 0x72
          .byte 0xb3
          .byte 0x3f
          .byte 0x5f
          .byte 0x10
          .byte 0xec
          .byte 0x53
          .byte 0xe9
          .byte 0x82
          .byte 0x95
          .byte 0xbf
          .byte 0x8a
          .byte 0x8a
          .byte 0xdd
          .byte 0xe3
          .byte 0xf1
          .byte 0x59
          .byte 0xb5
          .byte 0x3f
.L_65f220:
          .byte 0x84
          .byte 0x8b
          .byte 0xcb
          .byte 0xa7
          .byte 0x7d
          .byte 0xe9
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0xa
          .byte 0x2f
          .byte 0x1c
          .byte 0x63
          .byte 0x82
          .byte 0x75
          .byte 0x3f
          .byte 0x4
          .byte 0xe2
          .byte 0x75
          .byte 0xfd
          .byte 0x82
          .byte 0xdd
          .byte 0x70
          .byte 0xbf
          .byte 0x53
          .byte 0xf8
          .byte 0x22
          .byte 0x90
          .byte 0x1
          .byte 0x8f
          .byte 0x7e
          .byte 0x3f
          .byte 0x83
          .byte 0xc0
          .byte 0xca
          .byte 0xa1
          .byte 0x45
          .byte 0xb6
          .byte 0x73
          .byte 0x3f
          .byte 0xd9
          .byte 0x6b
          .byte 0x8b
          .byte 0x7c
          .byte 0xa8
          .byte 0x7e
          .byte 0x8f
          .byte 0xbf
          .byte 0xf1
          .byte 0x3f
          .byte 0x43
          .byte 0x49
          .byte 0x92
          .byte 0x31
          .byte 0xc9
          .byte 0xbf
          .byte 0x38
          .byte 0x55
          .byte 0xad
          .byte 0x3b
          .byte 0xcc
          .byte 0x4d
          .byte 0xb0
          .byte 0x3f
          .byte 0xbe
          .byte 0x20
          .byte 0xd8
          .byte 0xa7
          .byte 0xd2
          .byte 0x5
          .byte 0xc2
          .byte 0xbf
          .byte 0xc4
          .byte 0x38
          .byte 0xc9
          .byte 0xa0
          .byte 0x24
          .byte 0x6e
          .byte 0xd7
          .byte 0x3f
          .byte 0x81
          .byte 0x7f
          .byte 0xa5
          .byte 0x4e
          .byte 0x9b
          .byte 0xcc
          .byte 0xd2
          .byte 0xbf
.L_65f280:
          .byte 0xb7
          .byte 0x31
          .byte 0x2c
          .byte 0x35
          .byte 0x31
          .byte 0xd3
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x21
          .byte 0xaf
          .byte 0x62
          .byte 0x4c
          .byte 0x55
          .byte 0x75
          .byte 0x3f
          .byte 0x37
          .byte 0x3c
          .byte 0x18
          .byte 0xc
          .byte 0x9
          .byte 0x73
          .byte 0x66
          .byte 0xbf
          .byte 0xfc
          .byte 0x98
          .byte 0xc5
          .byte 0x7a
          .byte 0x59
          .byte 0xc9
          .byte 0x7d
          .byte 0x3f
          .byte 0xc9
          .byte 0x99
          .byte 0xdc
          .byte 0xde
          .byte 0x24
          .byte 0xbc
          .byte 0x73
          .byte 0x3f
          .byte 0xb
          .byte 0x3d
          .byte 0x7
          .byte 0x3b
          .byte 0x6a
          .byte 0xf1
          .byte 0x8e
          .byte 0xbf
          .byte 0xdc
          .byte 0xf8
          .byte 0x6e
          .byte 0x4e
          .byte 0x80
          .byte 0xbc
          .byte 0xc8
          .byte 0xbf
          .byte 0x16
          .byte 0x18
          .byte 0xb2
          .byte 0xba
          .byte 0xd5
          .byte 0x73
          .byte 0xb0
          .byte 0x3f
          .byte 0xa1
          .byte 0x53
          .byte 0xeb
          .byte 0x58
          .byte 0x0
          .byte 0xae
          .byte 0xc1
          .byte 0xbf
          .byte 0x4b
          .byte 0x7a
          .byte 0x73
          .byte 0x13
          .byte 0x10
          .byte 0xee
          .byte 0xd6
          .byte 0x3f
          .byte 0x1c
          .byte 0xff
          .byte 0x4f
          .byte 0xf
          .byte 0x1b
          .byte 0x76
          .byte 0xd2
          .byte 0xbf
.L_65f2e0:
          .byte 0x31
          .byte 0x94
          .byte 0x13
          .byte 0xed
          .byte 0x2a
          .byte 0xa4
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0xe5
          .byte 0x24
          .byte 0x94
          .byte 0xbe
          .byte 0x10
          .byte 0xaa
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0xaa
          .byte 0xee
          .byte 0x91
          .byte 0xcd
          .byte 0x55
          .byte 0xb3
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65f340:
          .byte 0xf1
          .byte 0x9b
          .byte 0xc2
          .byte 0x4a
          .byte 0x5
          .byte 0x15
          .byte 0xe7
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x63
          .byte 0x66
          .byte 0x55
          .byte 0x3a
          .byte 0xe
          .byte 0x82
          .byte 0xbf
          .byte 0xea
          .byte 0xb0
          .byte 0xc2
          .byte 0x2d
          .byte 0x1f
          .byte 0x49
          .byte 0x79
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65f380:
          .byte 0x2f
          .byte 0xdd
          .byte 0x24
          .byte 0x6
          .byte 0x81
          .byte 0x95
          .byte 0xed
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0xc0
          .byte 0x3e
          .byte 0x3a
          .byte 0x75
          .byte 0xe5
          .byte 0x93
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0xb9
          .byte 0xbf
          .byte 0x47
          .byte 0x34
          .byte 0x7a
          .byte 0xe4
          .byte 0x3f
          .byte 0x80
          .byte 0x63
          .byte 0x7c
          .byte 0xd
          .byte 0x82
          .byte 0x64
          .byte 0xc1
          .byte 0xbf
          .byte 0xbc
          .byte 0xb5
          .byte 0xac
          .byte 0xf8
          .byte 0xf
          .byte 0x34
          .byte 0xb0
          .byte 0x3f
          .byte 0xd
          .byte 0x3a
          .byte 0xdf
          .byte 0x57
          .byte 0xfe
          .byte 0xdf
          .byte 0x99
          .byte 0xbf
          .byte 0x56
          .byte 0x7c
          .byte 0xe8
          .byte 0x27
          .byte 0x41
          .byte 0x24
          .byte 0x88
          .byte 0x3f
          .byte 0x65
          .byte 0x9a
          .byte 0x9f
          .byte 0xd1
          .byte 0xc
          .byte 0x98
          .byte 0x76
          .byte 0xbf
          .byte 0x1d
          .byte 0x36
          .byte 0x36
          .byte 0xe0
          .byte 0x98
          .byte 0xa
          .byte 0x66
          .byte 0x3f
          .byte 0x7c
          .byte 0xd3
          .byte 0xf4
          .byte 0xd9
          .byte 0x1
          .byte 0xd7
          .byte 0x55
          .byte 0xbf
          .byte 0xdc
          .byte 0x11
          .byte 0x4e
          .byte 0xb
          .byte 0x5e
          .byte 0xf4
          .byte 0x45
          .byte 0x3f
.L_65f408:
          .byte 0x80
          .byte 0x9f
          .byte 0x71
          .byte 0xe1
          .byte 0x40
          .byte 0x48
          .byte 0x36
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x7f
          .byte 0x6c
          .byte 0x35
          .byte 0xd3
          .byte 0x0
          .byte 0xf9
          .byte 0x3f
          .byte 0x35
          .byte 0xd0
          .byte 0x32
          .byte 0x8a
          .byte 0xe2
          .byte 0x97
          .byte 0xe0
          .byte 0x3f
          .byte 0xaf
          .byte 0x56
          .byte 0x16
          .byte 0x1a
          .byte 0xc2
          .byte 0x10
          .byte 0xa1
          .byte 0xbf
          .byte 0xff
          .byte 0x82
          .byte 0x93
          .byte 0x23
          .byte 0x53
          .byte 0xf4
          .byte 0xba
          .byte 0xbf
          .byte 0x82
          .byte 0xb1
          .byte 0x19
          .byte 0x3b
          .byte 0x3c
          .byte 0xdf
          .byte 0xa2
          .byte 0xbf
          .byte 0xeb
          .byte 0xfd
          .byte 0x46
          .byte 0x3b
          .byte 0x6e
          .byte 0xf8
          .byte 0x7d
          .byte 0x3f
          .byte 0x7
          .byte 0xf0
          .byte 0x16
          .byte 0x48
          .byte 0x50
          .byte 0xfc
          .byte 0x88
          .byte 0x3f
          .byte 0xc1
          .byte 0xff
          .byte 0x56
          .byte 0xb2
          .byte 0x63
          .byte 0x23
          .byte 0x70
          .byte 0x3f
.L_65f460:
          .byte 0x94
          .byte 0xf6
          .byte 0x6
          .byte 0x5f
          .byte 0x98
          .byte 0x4c
          .byte 0x55
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65f480:
          .byte 0x34
          .byte 0x21
          .byte 0x87
          .byte 0xb3
          .byte 0x64
          .byte 0x2f
          .byte 0xe8
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x66
          .byte 0x4a
          .byte 0x16
          .byte 0xf0
          .byte 0xe5
          .byte 0xcf
          .byte 0x3f
          .byte 0xa
          .byte 0x1a
          .byte 0xb4
          .byte 0x9
          .byte 0x90
          .byte 0x9e
          .byte 0x6b
          .byte 0x3f
          .byte 0x3f
          .byte 0xba
          .byte 0x5f
          .byte 0xa5
          .byte 0x85
          .byte 0x42
          .byte 0x59
          .byte 0xbf
          .byte 0x25
          .byte 0x7a
          .byte 0xd7
          .byte 0xa8
          .byte 0xa0
          .byte 0x5
          .byte 0xa5
          .byte 0x3f
          .byte 0xa1
          .byte 0xf
          .byte 0xf9
          .byte 0xdb
          .byte 0x5c
          .byte 0x4
          .byte 0xba
          .byte 0xbf
          .byte 0xca
          .byte 0x4
          .byte 0x36
          .byte 0xc6
          .byte 0xd2
          .byte 0xb0
          .byte 0x91
          .byte 0x3f
          .byte 0x84
          .byte 0xaa
          .byte 0x66
          .byte 0x10
          .byte 0xfe
          .byte 0x9
          .byte 0xd1
          .byte 0xbf
          .byte 0xbb
          .byte 0xf7
          .byte 0x89
          .byte 0x66
          .byte 0x12
          .byte 0x33
          .byte 0xd7
          .byte 0xbf
          .byte 0xeb
          .byte 0x63
          .byte 0xf4
          .byte 0x92
          .byte 0xb5
          .byte 0xfc
          .byte 0xe5
          .byte 0xbf
          .byte 0x94
          .byte 0x83
          .byte 0x7e
          .byte 0x4b
          .byte 0xa5
          .byte 0xa4
          .byte 0xf2
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65f4f0:
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x9
          .byte 0xe2
          .byte 0xed
          .byte 0xaa
          .byte 0xaa
          .byte 0x27
          .byte 0xc8
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0xab
          .byte 0x1
          .byte 0x15
          .byte 0x7b
          .byte 0xd8
          .byte 0x63
          .byte 0xed
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_65f640:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0x3f
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0x9
          .byte 0x40
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xe4
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0x50
          .byte 0x69
          .byte 0xeb
          .byte 0x31
          .byte 0xc7
          .byte 0x28
          .byte 0xfe
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0x3f
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0xc0
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0xbf
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0xf4
          .byte 0x3f
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0xe0
          .byte 0xf0
          .byte 0x9c
          .byte 0x76
          .byte 0x2f
          .byte 0x1b
          .byte 0x4
          .byte 0x40
          .byte 0x87
          .byte 0x5b
          .byte 0x61
          .byte 0x5
          .byte 0x67
          .byte 0xac
          .byte 0xdd
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2d
          .byte 0x44
          .byte 0x54
          .byte 0xfb
          .byte 0x21
          .byte 0xf9
          .byte 0xbf
.L_65f700:
          .quad .L_44b078
          .quad .L_44b07e
          .quad .L_44b08a
          .quad .L_44b095
          .quad .L_44b0a0
          .quad .L_44b0a6
          .quad .L_44b08a
          .quad .L_44b0b2
          .quad .L_44b0cc
          .quad .L_44b07e
          .quad .L_44b0d2
          .quad .L_44b0e3
          .quad .L_44b0f8
          .quad .L_44b0fe
          .quad .L_44b08a
          .quad .L_44b10a
          .quad .L_44b113
          .quad .L_44b118
          .quad .L_44b126
          .quad .L_44b134
          .quad .L_44b13e
          .quad .L_44b145
          .quad .L_44b152
          .quad .L_44b15c
          .quad .L_44b170
          .quad .L_44b176
          .quad .L_44b152
          .quad .L_44b183
          .quad .L_44b19c
          .quad .L_44b1a5
          .quad .L_44b1b3
          .quad .L_44b1c1
          .quad .L_44b1cf
          .quad .L_44b1d6
          .quad .L_44b1e3
          .quad .L_44b1ec
          .quad .L_44b207
          .quad .L_44b20f
          .quad .L_44b152
          .quad .L_44b778
          .quad .L_44b21b
          .quad .L_44b20f
          .quad .L_44b221
          .quad .L_44b233
          .quad .L_44b245
          .quad .L_44b24c
          .quad .L_44b25a
          .quad .L_44b269
          .quad .L_44b275
          .quad .L_44b27e
          .quad .L_44b25a
          .quad .L_44b28c
          .quad .L_44b2a2
          .quad .L_44b2a9
          .quad .L_44b2b5
          .quad .L_44b2c1
          .quad .L_44b2cd
          .quad .L_44b2d4
          .quad .L_44b2e2
          .quad .L_44b2ee
          .quad .L_44b2ff
          .quad .L_44b309
          .quad .L_44b315
          .quad .L_44b32a
          .quad .L_44b33d
          .quad .L_44b341
          .quad .L_44b34d
          .quad .L_44b798
          .quad .L_44b357
          .quad .L_44b35e
          .quad .L_44b369
          .quad .L_44b372
          .quad .L_44b38a
          .quad .L_44b392
          .quad .L_44b39f
          .quad .L_44b3ab
          .quad .L_44b3b8
          .quad .L_44b3c0
          .quad .L_44b3ce
          .quad .L_44b3da
          .quad .L_44b3e7
          .quad .L_44b3ef
          .quad .L_44b3ce
          .quad .L_44b3fd
          .quad .L_44b40a
          .quad .L_44b412
          .quad .L_44b3ce
          .quad .L_44b420
          .quad .L_44b42d
          .quad .L_44b435
          .quad .L_44b3ce
          .quad .L_44b443
          .quad .L_44b450
          .quad .L_44b458
          .quad .L_44b3ce
          .quad .L_44b466
          .quad .L_44b480
          .quad .L_44b488
          .quad .L_44b493
          .quad .L_44b49c
          .quad .L_44b4b9
          .quad .L_44b4c2
          .quad .L_44b493
          .quad .L_44b4cd
          .quad .L_44b4e3
          .quad .L_44b4eb
          .quad .L_44b493
          .quad .L_44b4f6
          .quad .L_44b503
          .quad .L_44b50b
          .quad .L_44b493
          .quad .L_44b516
          .quad .L_44b523
          .quad .L_44b529
          .quad .L_44b535
          .quad .L_44b53d
          .quad .L_44b543
          .quad .L_44b548
          .quad .L_44b535
          .quad .L_44b554
          .quad .L_44b571
          .quad .L_44b577
          .quad .L_44b493
          .quad .L_44b583
          .quad .L_44b594
          .quad .L_44b59a
          .quad .L_44b5a5
          .quad .L_44b5af
          .quad .L_44b5ba
          .quad .L_44b5c0
          .quad .L_44b08a
          .quad .L_44b5cb
          .quad .L_44b5d6
          .quad .L_44b5dc
          .quad .L_44b5e7
          .quad .L_44b5ef
          .quad .L_44b5ff
          .quad .L_44b608
          .quad .L_44b614
          .quad .L_44b620
          .quad .L_44b637
          .quad .L_44b63f
          .quad .L_44b64a
          .quad .L_44b655
          .quad .L_44b66b
          .quad .L_44b672
          .quad .L_44b67e
          .quad .L_44b68d
          .quad .L_44b69c
          .quad .L_44b6a4
          .quad .L_44b6b0
          .quad .L_44b6bf
          .quad .L_44b6c7
          .quad .L_44b6cd
          .quad .L_44b493
          .quad .L_44b6d9
          .quad .L_44b6e0
          .quad .L_44b6e6
          .quad .L_44b152
          .quad .L_44b6f2
          .quad .L_44b6f9
          .quad .L_44b6ff
          .byte 0xb
          .byte 0xb7
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0xb7
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44b71c
          .quad .L_44b07e
          .quad .L_44b722
          .byte 0x33
          .byte 0xb7
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_44b73a
          .quad .L_44b741
          .quad .L_44b74d
          .quad .L_44b759
          .zero 32
.L_65fc80:
          .string "%dd%d\'%.3f\"%c"
          .zero 42
.L_65fcb8:
          .byte 0x6a
          .byte 0x83
          .byte 0x7e
          .byte 0xcc
          .byte 0xb3
          .byte 0x96
          .byte 0xa8
          .byte 0x41
.L_65fcc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xed
          .byte 0x40
.L_65fcc8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x8f
          .byte 0x40
.L_65fcd0:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

#-----------------------------------
.align 16
.globl stdout_copy
.type stdout_copy, @object
#-----------------------------------
stdout_copy:
          .zero 32
#-----------------------------------
.align 16
.globl stderr_copy
.type stderr_copy, @object
#-----------------------------------
stderr_copy:
          .zero 8
.L_65fd08:
          .zero 8
.L_65fd10:
          .zero 8
.L_65fd18:
          .zero 8
.L_65fd20:
          .zero 32
.L_65fd40:
          .zero 32
.L_65fd60:
          .zero 4
.L_65fd64:
          .zero 4
.L_65fd68:
          .zero 8
.L_65fd70:
          .zero 8
.L_65fd78:
          .zero 8
.L_65fd80:
          .zero 8
.L_65fd88:
          .zero 24
.L_65fda0:
          .zero 32
.L_65fdc0:
          .zero 64
.L_65fe00:
          .zero 40
.L_65fe28:
          .zero 8
.L_65fe30:
          .zero 8
.L_65fe38:
          .zero 4
.L_65fe3c:
          .zero 4
.L_65fe40:
          .zero 8
.L_65fe48:
          .zero 8
.L_65fe50:
          .zero 8
.L_65fe58:
          .zero 8
.L_65fe60:
          .zero 8
.L_65fe68:
          .zero 8
.L_65fe70:
          .zero 8
.L_65fe78:
          .zero 8
.L_65fe80:
          .zero 8
.L_65fe88:
          .zero 8
.L_65fe90:
          .zero 4
.L_65fe94:
          .zero 4
.L_65fe98:
          .zero 4
.L_65fe9c:
          .zero 4
.L_65fea0:
          .zero 4
.L_65fea4:
          .zero 4
.L_65fea8:
#===================================
# end section .bss
#===================================
