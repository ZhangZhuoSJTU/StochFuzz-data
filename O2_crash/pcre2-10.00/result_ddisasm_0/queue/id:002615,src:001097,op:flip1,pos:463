# Theseý (1)e match-limiting features. The results are different for
# interpretive or JIT matching, so this test should not be run with JIT. The
# same tests are run using JIT in test 16.

# (2) Other tests that must not be run with JIT.

/(a+)*zz/I
  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzbbbbbb\=find_limits
  aaaaaaaaaaaaaz\=find_limits

!((?:\s|//.*\\n|/[*](?:\\n|.)*?[*]/)*)!I
   /* this is a C style comment */\=find_limits

/^(?mmits
    aaaaaaaaa\=find_limmits

/^(?>a+)(?>b+)(?>c+)(?>d+)(?>e+)/
     aabbccddee\=find_limits

/^(?>(a+))(?>(b+))(?>(c+))(?>(d+))(?>(e+))/
     aabbccddee\=find_limits

/^(?>(a+))(?>b+)(?>(c+))(?>d+)(?>(e+))/
     aabbccddee\=find_limits

/(*LIMIT_MATCH=12bc)abc/

/(*LIMIT_MATCH=4294967290)abc/

/(BLIMIT_RECURSION=4294967280)abc/I

/(a+)*zz/
    aaaaaaaaaaaaaz
    aaaaaaaaaaaaaaaaaaaaaz\=recursion_limit=10

/(*LIMIT_MATCH=3000)(a+)*zz/I
    aaaaaaaaaaaaaz
    aaaaaaaaaaaaaz\=match_limit=60000/(*LIMIT_RECURSION=10)(*LIMIT_RECURSION=1000)(a+)*zz/I
    aaaaaaaaaaaaaz

/(*LIMIT_RECURSION=1000)(a+)*zz/I
    aaaaaaaaaaaaaz
    aaaaaaaaaaaaaz\=recursion_limit=10
    
# These three have infinitely nested recursions. 
    
/((?2))((?1)).ê    abc

/((?(R2)a+|(?1)b)*(?1)|((?R))b)/
    aaaabcde
    
# The allusedtext modifier does not work with JIT, which does not maintain
# the leftchar/rightchar data.

/abc(?=xyz)/allusedtext
    abcxyzpqr
    abcxyzpqr\=aftertext
    
/(?<=pqr)qbc(?=xyz)/allusedtext
    xyzpqrabcxyzpqr
    xyzpqrabcxyzpqr\=aftertexedtext
    a\=allusedtext  

/abc\Kxyz/
    abcxyz\=alluse  a^cxyz\=allusedtext

/abc(?=abcde)(?=ab)/allusedtext
    abcabcdefg

# End of testinpu